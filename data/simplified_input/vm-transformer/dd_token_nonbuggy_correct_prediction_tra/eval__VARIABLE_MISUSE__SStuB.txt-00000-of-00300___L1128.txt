
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", ".", "object", "(", "experiments", ".", "hashlib", ",", "'sha256'", ")", "#NEWLINE#", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", ":", "#NEWLINE#", "#INDENT#", "'Ensure that a 100 percent experiment is enabled.'", "#NEWLINE#", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", ".", "hexdigest", ".", "return_value", "=", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [25, 37, 39, 16, 60, 73, 18, 33, 47, 64, 77], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "google/macops/gmacpyutil/gmacpyutil/experiments_test.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1128, "results": {"model": "transformer", "prob": {"loc": [[0.9643213152885437, 5.393226274463814e-06, 5.553054194251672e-08, 1.364416561955295e-07, 1.0953946372183054e-07, 1.238456661667442e-07, 2.378578223272143e-08, 2.5165428851892102e-08, 2.544332164688967e-05, 2.2857173576085188e-07, 1.2372164626128779e-08, 3.62008267806857e-09, 1.2320898967743688e-08, 9.078504170645374e-09, 8.332333933935843e-09, 7.1326389239345644e-09, 4.648432820886228e-07, 3.3694127488104186e-09, 3.999228397333354e-07, 5.7624540694689586e-09, 9.223298569338567e-09, 1.1177127667849618e-08, 6.576951427916811e-09, 6.897797533156336e-08, 1.1842836933340095e-08, 2.7655216783273318e-08, 1.0426394192464272e-09, 1.9562888198265682e-08, 7.272780067069107e-08, 1.655691472812748e-09, 8.120510130993353e-08, 3.6953444748633046e-08, 3.793866198975593e-08, 5.812897256873839e-07, 7.85250904300483e-08, 4.057997937678692e-09, 2.218618355698254e-08, 0.0020501520484685898, 6.879047731445098e-08, 3.7897693800914567e-06, 1.379399634515721e-07, 5.652043721937616e-09, 2.6416705622978043e-07, 4.425083410808384e-09, 1.5882123705068807e-07, 2.7334378955856664e-06, 1.0846336806480394e-07, 1.0822204785654321e-06, 9.81861880688939e-09, 2.069267139859221e-07, 2.8139481855760096e-07, 1.4645054058348705e-08, 1.3678560151220154e-07, 9.484865586273372e-05, 1.1142798683749788e-07, 1.6208140323215048e-06, 1.0724308197040955e-07, 1.5481624359381385e-05, 3.407162552093723e-08, 8.438600929139284e-08, 7.624047526633149e-08, 2.765670785720431e-07, 3.926977409918209e-09, 1.1984889169980306e-07, 0.017441747710108757, 1.35862615024962e-06, 1.8552709590835548e-08, 2.3014825600853328e-08, 3.479069710010663e-05, 8.371322337552556e-07, 1.276746246503535e-07, 1.8245656008275546e-07, 4.2381394393942173e-08, 3.760648041861714e-07, 1.5853883894578757e-07, 5.405152769810684e-09, 3.368116452406866e-08, 0.0106444600969553, 8.471067189930181e-07, 1.9755746905048e-07, 7.39514831593624e-08, 0.0053473664447665215, 5.03902640502929e-07, 4.6408917597773325e-08, 1.0475900324991017e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11150069534778595, 0.0, 0.24232521653175354, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.49436652660369873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016162319108843803, 0.0, 0.0, 0.0, 0.002346945460885763, 0.0, 0.0995042473077774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.013225392438471317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.011907342821359634, 0.0, 0.0, 0.0, 0.00029732592520304024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008158121258020401, 0.0, 0.0, 0.0, 0.0002057977399090305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.036330606788396835, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:28:29.806960", "n_pass": [1, 1, 1], "n_token": 85, "loss": [0.036330606788396835, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", ".", "object", "(", "experiments", ".", "hashlib", ",", "'sha256'", ")", "#NEWLINE#", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", ":", "#NEWLINE#", "#INDENT#", "'Ensure that a 100 percent experiment is enabled.'", "#NEWLINE#", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", ".", "hexdigest", ".", "return_value", "=", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 37, 39, 16, 60, 73, 18, 33, 47, 64, 77]}}
{"prediction": {"error_location": 0.9643213152885437, "repair_targets": [], "repair_candidates": [0.11150069534778595, 0.24232521653175354, 0.49436652660369873, 0.016162319108843803, 0.002346945460885763, 0.0995042473077774, 0.013225392438471317, 0.011907342821359634, 0.00029732592520304024, 0.008158121258020401, 0.0002057977399090305], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:29.865550", "n_pass": [45, 2, 2], "n_token": 80, "loss": [0.01608455553650856, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "hashlib", ",", "'sha256'", ")", "#NEWLINE#", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", ":", "#NEWLINE#", "#INDENT#", "'Ensure that a 100 percent experiment is enabled.'", "#NEWLINE#", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", ".", "hexdigest", ".", "return_value", "=", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 32, 34, 11, 55, 68, 13, 28, 42, 59, 72]}}
{"prediction": {"error_location": 0.9840442538261414, "repair_targets": [], "repair_candidates": [0.0636257752776146, 0.5210694670677185, 0.26813676953315735, 0.009162911213934422, 0.001362812938168645, 0.09595238417387009, 0.023778321221470833, 0.008850989863276482, 0.0007488594856113195, 0.007089386228471994, 0.0002223248447990045], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:29.921670", "n_pass": [46, 3, 3], "n_token": 75, "loss": [0.020142298191785812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", ":", "#NEWLINE#", "#INDENT#", "'Ensure that a 100 percent experiment is enabled.'", "#NEWLINE#", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", ".", "hexdigest", ".", "return_value", "=", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 27, 29, 6, 50, 63, 8, 23, 37, 54, 67]}}
{"prediction": {"error_location": 0.9800589680671692, "repair_targets": [], "repair_candidates": [0.022664617747068405, 0.41987428069114685, 0.4087885618209839, 0.00532673392444849, 0.0011728027602657676, 0.07635276019573212, 0.029282204806804657, 0.011963671073317528, 0.0020614995155483484, 0.02235369198024273, 0.0001591784821357578], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:29.977389", "n_pass": [48, 4, 4], "n_token": 70, "loss": [0.015223737806081772, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", ".", "hexdigest", ".", "return_value", "=", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 24, 6, 45, 58, 8, 18, 32, 49, 62]}}
{"prediction": {"error_location": 0.9848913550376892, "repair_targets": [], "repair_candidates": [0.015445026569068432, 0.7071429491043091, 0.19266721606254578, 0.0019493333529680967, 0.0018185959197580814, 0.0345475934445858, 0.023562638089060783, 0.005967377685010433, 0.0005995554383844137, 0.016213588416576385, 8.609182987129316e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.035945", "n_pass": [52, 5, 5], "n_token": 65, "loss": [0.03681974112987518, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", ".", "ExperimentIsBucket", "(", "EXP_NAME", ",", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 24, 6, 40, 53, 8, 18, 27, 44, 57]}}
{"prediction": {"error_location": 0.9638497233390808, "repair_targets": [], "repair_candidates": [0.0068895225413143635, 0.2268916666507721, 0.22844597697257996, 0.0018356962827965617, 0.0006630171556025743, 0.5285731554031372, 0.0027788246516138315, 0.0019560239743441343, 3.281252793385647e-05, 0.0019243673887103796, 8.908500603865832e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.091471", "n_pass": [54, 6, 6], "n_token": 60, "loss": [0.20109263062477112, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", ",", "experiments", ".", "ENABLED", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 24, 6, 35, 48, 8, 18, 27, 39, 52]}}
{"prediction": {"error_location": 0.8178368210792542, "repair_targets": [], "repair_candidates": [0.0031764127779752016, 0.13382887840270996, 0.13622774183750153, 0.022727973759174347, 0.0034458760637789965, 0.689814031124115, 0.00807300303131342, 0.0018951439997181296, 0.00022044635261408985, 0.0005714356666430831, 1.9045637600356713e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.147434", "n_pass": [57, 7, 7], "n_token": 54, "loss": [0.4555877447128296, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", ".", "source", ",", "experiments", ".", "AUTO", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 24, 6, 35, 42, 8, 18, 27, 39, 46]}}
{"prediction": {"error_location": 0.6340751051902771, "repair_targets": [], "repair_candidates": [0.00464662304148078, 0.07572758942842484, 0.16729238629341125, 0.016659045591950417, 0.004115400370210409, 0.6937100291252136, 0.016309726983308792, 0.00190628576092422, 0.0024002192076295614, 0.015880173072218895, 0.0013525218237191439], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.202461", "n_pass": [59, 8, 8], "n_token": 48, "loss": [0.076673723757267, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "mock", ".", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 22, 24, 6, 35, 42, 8, 18, 27, 39, 46]}}
{"prediction": {"error_location": 0.9261919260025024, "repair_targets": [], "repair_candidates": [0.012905769050121307, 0.5683760046958923, 0.19275614619255066, 0.004685041029006243, 0.0014506010338664055, 0.19211336970329285, 0.009782890789210796, 0.0025946912355720997, 0.0004965168191120028, 0.014567623846232891, 0.00027135128038935363], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.258430", "n_pass": [88, 9, 9], "n_token": 46, "loss": [0.09711210429668427, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "patch", "def testExperimentIsBucketHundredPercentEnabled(", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 20, 22, 4, 33, 40, 6, 16, 25, 37, 44]}}
{"prediction": {"error_location": 0.907454252243042, "repair_targets": [], "repair_candidates": [0.05964447185397148, 0.441400945186615, 0.22667217254638672, 0.0254314336925745, 0.0017161488067358732, 0.20474950969219208, 0.008348381146788597, 0.00528700789436698, 0.002931075869128108, 0.016774848103523254, 0.007044003810733557], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.315352", "n_pass": [89, 10, 10], "n_token": 44, "loss": [0.08850681036710739, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock", ".", "MagicMock", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 18, 20, 2, 31, 38, 4, 14, 23, 35, 42]}}
{"prediction": {"error_location": 0.9152968525886536, "repair_targets": [], "repair_candidates": [0.004343581385910511, 0.20544713735580444, 0.4115174114704132, 0.044829562306404114, 0.006055216770619154, 0.30169785022735596, 0.01188088208436966, 0.0008729067631065845, 0.00200858642347157, 0.008816602639853954, 0.002530215075239539], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.371003", "n_pass": [93, 11, 11], "n_token": 41, "loss": [0.13941076397895813, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "(", ")", "#NEWLINE#", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 15, 17, 2, 28, 35, 4, 11, 20, 32, 39]}}
{"prediction": {"error_location": 0.8698707222938538, "repair_targets": [], "repair_candidates": [0.004723903723061085, 0.08068399876356125, 0.7209251523017883, 0.05041201412677765, 0.01214993093162775, 0.09258148819208145, 0.026100624352693558, 0.0006904178881086409, 0.00047665348392911255, 0.010751386173069477, 0.000504505296703428], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.425962", "n_pass": [94, 12, 12], "n_token": 38, "loss": [0.43846699595451355, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "SAMPLE_100_EXPERIMENT", ",", "TEST_UUID", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 14, 2, 25, 32, 4, 8, 17, 29, 36]}}
{"prediction": {"error_location": 0.6450245976448059, "repair_targets": [], "repair_candidates": [0.0073379650712013245, 0.16807667911052704, 0.17497171461582184, 0.031086353585124016, 0.0004967075656168163, 0.6089816093444824, 0.0021501146256923676, 0.00015265602269209921, 1.2176808013464324e-05, 0.00670454278588295, 2.9473454560502432e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.481424", "n_pass": [99, 13, 13], "n_token": 35, "loss": [0.20223090052604675, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 14, 2, 22, 29, 4, 8, 17, 26, 33]}}
{"prediction": {"error_location": 0.8169063329696655, "repair_targets": [], "repair_candidates": [0.013379570096731186, 0.1860402673482895, 0.16743652522563934, 0.08333487808704376, 0.000986252212896943, 0.5356546640396118, 0.0040880306623876095, 0.0009289702284149826, 2.7394220524001867e-05, 0.008016083389520645, 0.00010741260484792292], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.536596", "n_pass": [101, 14, 14], "n_token": 32, "loss": [0.2156176120042801, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", ")", "#NEWLINE#", "self", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 14, 2, 22, 26, 4, 8, 17, 23, 30]}}
{"prediction": {"error_location": 0.8060433864593506, "repair_targets": [], "repair_candidates": [0.04998648166656494, 0.3326892852783203, 0.13416659832000732, 0.12990616261959076, 0.0012223580852150917, 0.32288816571235657, 0.001696142484433949, 0.022438276559114456, 2.3336242520599626e-05, 0.004904628731310368, 7.855195872252807e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.594564", "n_pass": [138, 15, 15], "n_token": 30, "loss": [0.17709603905677795, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "self", "ret", ".", "status", "self", ".", "assertEqual", "(", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 14, 2, 20, 24, 4, 8, 17, 21, 28]}}
{"prediction": {"error_location": 0.8376993536949158, "repair_targets": [], "repair_candidates": [0.015280669555068016, 0.335843563079834, 0.2549574077129364, 0.24167652428150177, 0.0002719938347581774, 0.13779915869235992, 0.0019419410964474082, 0.0015173412393778563, 0.008596040308475494, 0.002005193615332246, 0.00011016948701580986], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.704064", "n_pass": [142, 17, 16], "n_token": 28, "loss": [0.54255610704422, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", ",", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "self", "ret", ".", "status", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 12, 14, 2, 20, 24, 4, 8, 17, 21, 26]}}
{"prediction": {"error_location": 0.5812605619430542, "repair_targets": [], "repair_candidates": [0.001282638288103044, 0.13647006452083588, 0.2341168224811554, 0.22831840813159943, 0.002079521305859089, 0.08107957988977432, 0.17650744318962097, 0.00012178644101368263, 0.044690754264593124, 0.0009743617265485227, 0.09435870498418808], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:30.814407", "n_pass": [147, 19, 17], "n_token": 27, "loss": [0.7325448393821716, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "#NEWLINE#", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "self", "ret", ".", "status", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 13, 2, 19, 23, 3, 7, 16, 20, 25]}}
{"prediction": {"error_location": 0.48068419098854065, "repair_targets": [], "repair_candidates": [0.004366131499409676, 0.08615341037511826, 0.3781944811344147, 0.2517043352127075, 0.0017000543884932995, 0.05944855883717537, 0.14135338366031647, 8.71879092301242e-05, 0.02352028153836727, 0.0004819786117877811, 0.05299026891589165], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.146392", "n_pass": [157, 25, 18], "n_token": 26, "loss": [0.17089080810546875, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "'100'", "#NEWLINE#", "ret", "=", "experiments", "self", "ret", ".", "status", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 12, 2, 18, 22, 3, 7, 15, 19, 24]}}
{"prediction": {"error_location": 0.8429136276245117, "repair_targets": [], "repair_candidates": [0.00012451125076040626, 0.03357747942209244, 0.021414242684841156, 0.7486498951911926, 0.001470418879762292, 0.0006325441063381732, 0.11047252267599106, 2.7256244720774703e-05, 0.025960387662053108, 0.00011126259050797671, 0.057559479027986526], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.201427", "n_pass": [159, 26, 19], "n_token": 25, "loss": [0.35505345463752747, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "=", "experiments", "self", "ret", ".", "status", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 12, 2, 17, 21, 3, 7, 14, 18, 23]}}
{"prediction": {"error_location": 0.7011359333992004, "repair_targets": [], "repair_candidates": [0.0016355812549591064, 0.038810618221759796, 0.07734093070030212, 0.49043887853622437, 0.006292697973549366, 0.01142357662320137, 0.1929759979248047, 0.00019315390090923756, 0.06937088817358017, 0.0005609155050478876, 0.11095681041479111], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.258971", "n_pass": [161, 27, 20], "n_token": 23, "loss": [0.1170148178935051, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", ".", "status", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 12, 2, 15, 19, 3, 7, 14, 16, 21]}}
{"prediction": {"error_location": 0.8895718455314636, "repair_targets": [], "repair_candidates": [0.002654611598700285, 0.023260945454239845, 0.018377119675278664, 0.077261783182621, 0.001078581204637885, 0.0015387049643322825, 0.707785427570343, 0.0008434564806520939, 0.10708929598331451, 9.519543527858332e-05, 0.060014840215444565], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.314146", "n_pass": [163, 28, 21], "n_token": 21, "loss": [0.06498818844556808, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "@", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 11, 12, 2, 15, 17, 3, 7, 14, 16, 19]}}
{"prediction": {"error_location": 0.9370787143707275, "repair_targets": [], "repair_candidates": [0.006593707017600536, 0.049793541431427, 0.013665971346199512, 0.16236512362957, 0.0009545923676341772, 0.001037856680341065, 0.42637306451797485, 0.0026936710346490145, 0.30513373017311096, 0.0007262820145115256, 0.030662504956126213], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.369018", "n_pass": [167, 29, 22], "n_token": 20, "loss": [0.12069270014762878, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", ")", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 10, 11, 1, 14, 16, 2, 6, 13, 15, 18]}}
{"prediction": {"error_location": 0.8863061666488647, "repair_targets": [], "repair_candidates": [0.17658740282058716, 0.09411831945180893, 0.6643110513687134, 0.012219860218465328, 1.0044423106592149e-05, 0.0009263612446375191, 0.041410814970731735, 9.990326361730695e-05, 0.00571484724059701, 2.698732896533329e-05, 0.00457430025562644], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.424133", "n_pass": [170, 30, 23], "n_token": 19, "loss": [0.3540761470794678, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "=", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 9, 10, 1, 13, 15, 2, 5, 12, 14, 17]}}
{"prediction": {"error_location": 0.701821506023407, "repair_targets": [], "repair_candidates": [0.12295574694871902, 0.05588991567492485, 0.7992469072341919, 0.013869589194655418, 1.9966770196333528e-05, 0.00021513743558898568, 0.005306440871208906, 0.00028730634949170053, 0.0006311198812909424, 3.439236024860293e-05, 0.0015434783417731524], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.479150", "n_pass": [172, 31, 24], "n_token": 18, "loss": [0.011854439973831177, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", ".", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 8, 9, 1, 12, 14, 2, 4, 11, 13, 16]}}
{"prediction": {"error_location": 0.9882155656814575, "repair_targets": [], "repair_candidates": [0.046081896871328354, 0.5659455060958862, 0.10427966713905334, 0.2784790098667145, 4.669827103498392e-05, 0.00026069703744724393, 0.002541209803894162, 0.00023975581279955804, 0.0012141037732362747, 2.6627545594237745e-05, 0.0008848803699947894], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.534513", "n_pass": [174, 32, 25], "n_token": 17, "loss": [0.021978380158543587, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "return_value", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 8, 1, 11, 13, 2, 4, 10, 12, 15]}}
{"prediction": {"error_location": 0.9782612919807434, "repair_targets": [], "repair_candidates": [0.07879620790481567, 0.21599334478378296, 0.054234568029642105, 0.5261435508728027, 0.0004985252162441611, 0.001858780044130981, 0.08807093650102615, 0.0019605548586696386, 0.013605741783976555, 0.00018000113777816296, 0.018657758831977844], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.591584", "n_pass": [175, 33, 26], "n_token": 16, "loss": [0.16270287334918976, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "=", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 6, 7, 1, 10, 12, 2, 4, 9, 11, 14]}}
{"prediction": {"error_location": 0.8498437404632568, "repair_targets": [], "repair_candidates": [0.011088707484304905, 0.35310623049736023, 0.35660627484321594, 0.2738441228866577, 1.8841463315766305e-05, 0.0001372818514937535, 0.0024146107025444508, 0.0018630517879500985, 0.00026092471671290696, 0.000139455238240771, 0.0005205468623898923], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.646249", "n_pass": [176, 34, 27], "n_token": 15, "loss": [0.0035981694236397743, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "mock_hash", "mock_hash", "#NEWLINE#", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 6, 1, 9, 11, 2, 4, 8, 10, 13]}}
{"prediction": {"error_location": 0.9964085221290588, "repair_targets": [], "repair_candidates": [0.14792172610759735, 0.1529659628868103, 0.09943076968193054, 0.12620823085308075, 0.1500043272972107, 0.06720797717571259, 0.008375929668545723, 0.09153050184249878, 0.005190521012991667, 0.14170445501804352, 0.009459643624722958], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.701416", "n_pass": [196, 35, 28], "n_token": 14, "loss": [0.0005267662927508354, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "mock_hash", "mock_hash", "ret", "self", "ret", "self", ".", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 6, 1, 8, 10, 2, 4, 7, 9, 12]}}
{"prediction": {"error_location": 0.9994733929634094, "repair_targets": [], "repair_candidates": [0.0598323829472065, 0.30459192395210266, 0.07924144715070724, 0.10960555076599121, 0.07694215327501297, 0.15735764801502228, 0.12044026702642441, 0.032939791679382324, 0.017216088250279427, 0.030904436483979225, 0.01092837005853653], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.756226", "n_pass": [200, 36, 29], "n_token": 13, "loss": [0.0006811682251282036, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "mock_hash", "mock_hash", "ret", "self", "ret", "self", "ret", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 6, 1, 8, 10, 2, 4, 7, 9, 11]}}
{"prediction": {"error_location": 0.9993190765380859, "repair_targets": [], "repair_candidates": [0.05407154560089111, 0.10813644528388977, 0.11256808787584305, 0.0994994193315506, 0.09689831733703613, 0.09478423744440079, 0.09820667654275894, 0.02958459034562111, 0.2239055335521698, 0.016310006380081177, 0.06603515893220901], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:28:31.810818", "n_pass": [202, 37, 30], "n_token": 12, "loss": [0.00047803416964598, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "mock_sha", "mock_hash", "mock_sha", "mock_hash", "mock_hash", "ret", "self", "ret", "self", "ret"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 5, 6, 1, 8, 10, 2, 4, 7, 9, 11]}}
{"prediction": {"error_location": 0.99952232837677, "repair_targets": [], "repair_candidates": [0.10942590236663818, 0.1105286255478859, 0.11958376318216324, 0.09007363766431808, 0.12308507412672043, 0.10683449357748032, 0.11120891571044922, 0.028284670785069466, 0.10194568336009979, 0.023479998111724854, 0.0755491778254509], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'mock_sha', 'mock_hash', 'mock_sha', 'mock_hash', 'mock_hash', 'ret', 'self', 'ret', 'self', 'ret']
