
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "6", ")", ":", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "(", "mpl", ".", "cm", ",", "name", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "name", "in", "brewer_qual_pals", ")", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"], "error_location": [0], "repair_targets": [], "repair_candidates": [186, 208, 2, 62, 83, 122, 128, 147, 135, 160, 196, 71, 77, 100, 4, 102, 152, 171, 13, 130, 145, 96, 114, 194], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "yhat/ggplot/ggplot/components/palettes.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2841, "results": {"model": "transformer", "prob": {"loc": [[0.4601251184940338, 9.443340331927175e-07, 3.1763630659042974e-07, 4.659968055875652e-08, 9.054209044734307e-07, 8.572528997774498e-08, 9.665586730989162e-07, 3.612597865298994e-08, 9.352626051395418e-08, 1.0665805660892147e-07, 6.981298383834655e-08, 5.035069534642389e-07, 8.02113788722636e-08, 1.6329564687111997e-06, 8.249791250136695e-08, 4.920792662232998e-07, 1.6753253362367104e-07, 1.2969661611350602e-07, 3.211412149539683e-07, 1.0220061597010499e-07, 2.40045778809872e-06, 1.3327299086540734e-07, 1.43158302989832e-07, 9.381292187526924e-08, 1.2401895332914137e-07, 1.3572717989518424e-06, 9.474963746924914e-08, 1.0871471545215172e-07, 7.543588509406618e-08, 1.0398433403224772e-07, 5.046932528784964e-06, 1.0179654452713294e-07, 1.0255992322072416e-07, 1.888860765575373e-07, 1.3606901916318748e-07, 3.917412414011778e-06, 1.0335366340541441e-07, 1.1290633494809299e-07, 3.2928997484305e-07, 3.3361573059664806e-07, 2.3864108698035125e-06, 1.336164956455832e-07, 2.3081793187884614e-07, 1.1631374974285791e-07, 2.984887430557137e-07, 8.343998160853516e-06, 2.2709515690166882e-07, 2.4389373720623553e-07, 1.2152861472713994e-07, 1.946635279637121e-07, 1.5328390645663603e-06, 1.6235317445989494e-07, 1.7481688985299115e-07, 4.546327758703228e-08, 1.9977609611032676e-07, 8.49290609039599e-06, 1.210145370578175e-07, 1.5209401738047745e-07, 9.543185797156184e-08, 6.85614693907155e-08, 1.095211032975385e-07, 2.0977385872811283e-07, 4.263215203081927e-07, 9.802739242559255e-08, 8.861569966711613e-08, 9.796809763429337e-07, 3.6901999465044355e-06, 1.180820063950705e-07, 2.986579090702435e-07, 1.239042859424444e-07, 8.054735900486776e-08, 1.5000737221271265e-06, 1.5157079360506032e-06, 3.981091140303761e-06, 2.5187428036588244e-06, 3.606853908877383e-07, 2.464925614731328e-07, 5.690651505574351e-07, 6.769520410898622e-08, 6.160497889595717e-08, 1.337947566071307e-07, 5.443406280392082e-06, 1.6580929695919622e-06, 2.4329935968125938e-06, 2.3632701129372435e-07, 1.1501644792133447e-07, 7.681541660531366e-07, 4.797887868335238e-06, 3.119870939372049e-07, 3.5232258142059436e-06, 3.1682341727901076e-07, 2.683793240976229e-07, 2.2373415049514733e-05, 3.2980508990476665e-07, 1.8209433960691968e-07, 3.6319340779300546e-07, 6.375450084306067e-06, 1.977680739173593e-07, 2.0652339571824996e-07, 9.504688591732702e-07, 0.01112911943346262, 4.893088885182806e-07, 0.005399444606155157, 6.518574195979454e-07, 7.949868177092867e-07, 9.612251687940443e-07, 2.0714871425298043e-05, 6.958568405934784e-07, 1.353076640953077e-06, 1.0449097089804127e-06, 3.662897370304563e-06, 9.239782343684055e-07, 1.0669544963093358e-06, 6.050951810721017e-07, 4.026792157674208e-05, 2.327042693650583e-06, 1.0269484391756123e-06, 5.639019036607351e-06, 0.35284027457237244, 2.1004882455599727e-06, 8.465049177175388e-06, 1.6430242339993129e-06, 0.007407217286527157, 2.5004651433846448e-06, 2.569253638284863e-06, 2.3650570710742613e-06, 1.2612290447577834e-06, 4.019053676529438e-07, 0.02826935611665249, 1.2624373084690887e-06, 0.02243315987288952, 2.3448096442280075e-07, 1.7328261492366437e-06, 8.859056492838135e-07, 4.9479820063425e-07, 3.8040263916627737e-06, 1.018468438473974e-07, 2.1947452921722288e-07, 2.274564536719481e-07, 1.881981432916291e-07, 1.8426812857796904e-06, 1.0831888175744098e-05, 4.373443118765863e-07, 3.8996564398985356e-05, 2.3198137455437973e-07, 0.016790449619293213, 2.710496346480795e-06, 0.002915068995207548, 4.385204022128164e-07, 3.497650027384225e-07, 7.243947948154528e-07, 1.0031964166046237e-06, 0.04141153395175934, 1.1675969062707736e-06, 9.22074150366825e-07, 4.6327014047164994e-07, 8.46037210067152e-07, 6.153977665235288e-07, 5.525361643776705e-07, 3.697620911680133e-07, 1.8170358089264482e-06, 6.867303881108455e-08, 3.705832227751671e-07, 2.264096536919169e-07, 2.5299817707491457e-07, 1.590750912328076e-06, 1.2404108929331414e-05, 7.876042786847393e-07, 1.2789401807822287e-05, 6.025965149092372e-07, 1.2850648545281729e-06, 0.04897058755159378, 1.318933527727495e-06, 3.8003188819857314e-05, 3.3401031487301225e-06, 5.761301622442261e-07, 8.944459182202991e-07, 6.777485850761877e-06, 8.981992891676782e-07, 9.35068674152717e-05, 2.2212675503396895e-06, 5.263700586510822e-05, 2.174782139263698e-06, 1.8368159544479568e-06, 1.326742562923755e-06, 7.11121913354873e-07, 1.6781900740170386e-06, 7.470397349607083e-07, 1.3812612564834126e-07, 8.947658329816477e-07, 1.0182004189118743e-05, 3.1874865271674935e-06, 0.00013125881378073245, 5.060105650045443e-07, 1.9980152501375414e-06, 3.074502785693767e-07, 0.00012545041681732982, 1.0313650591342594e-06, 1.6542660432605771e-06, 2.907682983277482e-06, 2.984228785862797e-06, 1.8766055518426583e-06, 5.610580410575494e-05, 3.964632924180478e-06, 1.8829059627023526e-05, 3.9189699236885644e-06, 3.1002819014247507e-06, 2.606693669804372e-06, 0.0014062125701457262]], "pointer": [[0.0, 0.0, 0.0958217903971672, 0.0, 0.04343085736036301, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01254528108984232, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.008619742467999458, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10226183384656906, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010565913282334805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020852433517575264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.39544424414634705, 0.0, 0.0, 0.0, 0.026548294350504875, 0.0, 0.0006206295220181346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.10509876161813736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03371966630220413, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02255253866314888, 0.0, 0.0005789875867776573, 0.0, 0.0, 0.0, 0.0, 0.08056408911943436, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010876038111746311, 0.0, 0.04216539114713669, 0.0, 0.0, 0.0, 0.0, 0.0007879520417191088, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003646320663392544, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001329093356616795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005925661535002291, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.430735109257512e-05, 0.0, 7.477807957911864e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.569535379530862e-05]], "target": [0.0]}, "loss": [0.7762567400932312, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:06:09.258196", "n_pass": [1, 1, 1], "n_token": 209, "loss": [0.7762567400932312, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "6", ")", ":", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "(", "mpl", ".", "cm", ",", "name", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "name", "in", "brewer_qual_pals", ")", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [186, 208, 2, 62, 83, 122, 128, 147, 135, 160, 196, 71, 77, 100, 4, 102, 152, 171, 13, 130, 145, 96, 114, 194]}}
{"prediction": {"error_location": 0.4601251184940338, "repair_targets": [], "repair_candidates": [0.0958217903971672, 0.04343085736036301, 0.01254528108984232, 0.008619742467999458, 0.10226183384656906, 0.010565913282334805, 0.0020852433517575264, 0.39544424414634705, 0.026548294350504875, 0.0006206295220181346, 0.10509876161813736, 0.03371966630220413, 0.02255253866314888, 0.0005789875867776573, 0.08056408911943436, 0.010876038111746311, 0.04216539114713669, 0.0007879520417191088, 0.003646320663392544, 0.001329093356616795, 0.0005925661535002291, 5.430735109257512e-05, 7.477807957911864e-05, 1.569535379530862e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:10.449975", "n_pass": [190, 17, 2], "n_token": 206, "loss": [0.4029845595359802, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "(", "mpl", ".", "cm", ",", "name", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "name", "in", "brewer_qual_pals", ")", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [183, 205, 2, 59, 80, 119, 125, 144, 132, 157, 193, 68, 74, 97, 4, 99, 149, 168, 10, 127, 142, 93, 111, 191]}}
{"prediction": {"error_location": 0.6683225035667419, "repair_targets": [], "repair_candidates": [0.1420106291770935, 0.0814225822687149, 0.02603054977953434, 0.013298176229000092, 0.12078896909952164, 0.024280201643705368, 0.0037101907655596733, 0.32805314660072327, 0.01869248040020466, 0.002943210769444704, 0.045236386358737946, 0.04302346706390381, 0.023796282708644867, 0.0003937857982236892, 0.08712191134691238, 0.005735385697335005, 0.023711752146482468, 0.0020898482762277126, 0.0039568268693983555, 0.0015389712061733007, 0.001768865971826017, 0.0002518573310226202, 0.00010931610449915752, 3.5155175282852724e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.431427", "n_pass": [226, 44, 3], "n_token": 203, "loss": [0.1705717146396637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", ")", "#NEWLINE#", "#UNINDENT#", "if", "(", "name", "in", "brewer_qual_pals", ")", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [180, 202, 2, 59, 80, 116, 122, 141, 129, 154, 190, 68, 74, 97, 4, 99, 146, 165, 10, 124, 139, 93, 111, 188]}}
{"prediction": {"error_location": 0.8431826829910278, "repair_targets": [], "repair_candidates": [0.2850375175476074, 0.16346292197704315, 0.03571926802396774, 0.033578868955373764, 0.05600713938474655, 0.03580869734287262, 0.008408238179981709, 0.04092973843216896, 0.00045987978228367865, 0.012363004498183727, 0.0071679470129311085, 0.029164882376790047, 0.15963214635849, 0.0005033202469348907, 0.07817750424146652, 0.009702968411147594, 0.02867623046040535, 0.002312455093488097, 0.006703980267047882, 0.003445084672421217, 0.00230429763905704, 0.0003462327003944665, 6.477194983744994e-05, 2.292980752827134e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.505953", "n_pass": [228, 45, 4], "n_token": 200, "loss": [0.1930064558982849, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [177, 199, 2, 59, 80, 116, 119, 138, 126, 151, 187, 68, 74, 97, 4, 99, 143, 162, 10, 121, 136, 93, 111, 185]}}
{"prediction": {"error_location": 0.8244765400886536, "repair_targets": [], "repair_candidates": [0.28422150015830994, 0.11162034422159195, 0.03091064840555191, 0.02618381381034851, 0.03164930269122124, 0.01867363043129444, 0.012226179242134094, 0.02406267821788788, 0.0005802291561849415, 0.00390801765024662, 0.00130454043392092, 0.16189177334308624, 0.06902258843183517, 0.0010057339677587152, 0.07779942452907562, 0.002723789308220148, 0.07662315666675568, 0.001943113747984171, 0.05391073599457741, 0.006629247684031725, 0.0026847170665860176, 0.00027598190354183316, 0.0001293717068620026, 1.9513663573889062e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.581017", "n_pass": [231, 46, 5], "n_token": 197, "loss": [0.23538614809513092, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [174, 196, 2, 59, 80, 116, 119, 135, 123, 148, 184, 68, 74, 97, 4, 99, 140, 159, 10, 121, 133, 93, 111, 182]}}
{"prediction": {"error_location": 0.7902656197547913, "repair_targets": [], "repair_candidates": [0.2568696439266205, 0.08545634895563126, 0.031018923968076706, 0.017547888681292534, 0.03276620805263519, 0.01055203191936016, 0.007235442753881216, 0.021316900849342346, 0.0008479697280563414, 0.004483516328036785, 0.0016664656577631831, 0.16662901639938354, 0.12880635261535645, 0.0069506531581282616, 0.032498154789209366, 0.016964368522167206, 0.059646978974342346, 0.0010838154703378677, 0.10513869673013687, 0.009684838354587555, 0.00212891586124897, 0.0003368313773535192, 0.00035372612182982266, 1.6347305063391104e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.656825", "n_pass": [233, 47, 6], "n_token": 194, "loss": [0.34602105617523193, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "0", ",", "1", ",", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [171, 193, 2, 59, 80, 116, 119, 132, 123, 145, 181, 68, 74, 97, 4, 99, 137, 156, 10, 121, 130, 93, 111, 179]}}
{"prediction": {"error_location": 0.7074976563453674, "repair_targets": [], "repair_candidates": [0.23974581062793732, 0.06497081369161606, 0.020669223740696907, 0.017151573672890663, 0.01572420261800289, 0.006546206772327423, 0.010381038300693035, 0.010244818404316902, 0.0006399073754437268, 0.009929059073328972, 0.0012631819117814302, 0.20569010078907013, 0.14001210033893585, 0.031047387048602104, 0.014292841777205467, 0.06256014853715897, 0.0702638253569603, 0.0016454514116048813, 0.05710822343826294, 0.018187008798122406, 0.00113840086851269, 0.0002603986067697406, 0.0005210682284086943, 7.229811672004871e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.730642", "n_pass": [234, 48, 7], "n_token": 190, "loss": [0.423433393239975, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", "]", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [167, 189, 2, 59, 80, 116, 119, 128, 123, 141, 177, 68, 74, 97, 4, 99, 133, 152, 10, 121, 126, 93, 111, 175]}}
{"prediction": {"error_location": 0.6547947525978088, "repair_targets": [], "repair_candidates": [0.19682703912258148, 0.1330566704273224, 0.018447520211338997, 0.022959185764193535, 0.014416881836950779, 0.0030663979705423117, 0.014712709933519363, 0.007639119867235422, 0.0004264105809852481, 0.03835434839129448, 0.0003119997854810208, 0.1228877380490303, 0.1479339599609375, 0.0012661551591008902, 0.07746844738721848, 0.022330230101943016, 0.10740786045789719, 0.017672410234808922, 0.012686869129538536, 0.03963135555386543, 0.0003851395158562809, 1.7803422451834194e-05, 8.81425803527236e-05, 5.572134341491619e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.804800", "n_pass": [237, 49, 8], "n_token": 186, "loss": [0.43659791350364685, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [163, 185, 2, 59, 80, 116, 119, 128, 123, 137, 173, 68, 74, 97, 4, 99, 133, 148, 10, 121, 126, 93, 111, 171]}}
{"prediction": {"error_location": 0.6462311744689941, "repair_targets": [], "repair_candidates": [0.17767752707004547, 0.11789189279079437, 0.01961228996515274, 0.024096209555864334, 0.01775742694735527, 0.00496687600389123, 0.013309952802956104, 0.009413717314600945, 0.0002545803436078131, 0.020857447758316994, 0.00037223382969386876, 0.1555185168981552, 0.16391579806804657, 0.0012093333061784506, 0.062057167291641235, 0.018410783261060715, 0.11754956841468811, 0.018083326518535614, 0.016323361545801163, 0.040200334042310715, 0.0004245075979270041, 1.638212961552199e-05, 7.418636960210279e-05, 6.626045887969667e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.880794", "n_pass": [239, 50, 9], "n_token": 182, "loss": [0.547621488571167, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", "(", "0", ",", "1", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [159, 181, 2, 59, 80, 116, 119, 128, 123, 137, 169, 68, 74, 97, 4, 99, 133, 144, 10, 121, 126, 93, 111, 167]}}
{"prediction": {"error_location": 0.5783237814903259, "repair_targets": [], "repair_candidates": [0.18654952943325043, 0.13313642144203186, 0.01984131708741188, 0.02270514704287052, 0.01780480146408081, 0.008367163129150867, 0.013996715657413006, 0.009723786264657974, 0.0005846545100212097, 0.024883542209863663, 0.00042004173155874014, 0.10528590530157089, 0.0942244753241539, 0.0007145971176214516, 0.22265826165676117, 0.008154007606208324, 0.07575758546590805, 0.019331462681293488, 0.0006076395511627197, 0.022875938564538956, 0.011845717206597328, 2.4494322133250535e-05, 0.0002508802281226963, 0.00025597724015824497], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:12.954354", "n_pass": [240, 51, 10], "n_token": 178, "loss": [0.6510698795318604, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "2", ")", ")", "[", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [155, 177, 2, 59, 80, 116, 119, 128, 123, 137, 165, 68, 74, 97, 4, 99, 133, 140, 10, 121, 126, 93, 111, 163]}}
{"prediction": {"error_location": 0.5214875340461731, "repair_targets": [], "repair_candidates": [0.1717139482498169, 0.14341165125370026, 0.021670732647180557, 0.023993661627173424, 0.018126416951417923, 0.006800655275583267, 0.012163392268121243, 0.008079088293015957, 0.0007173474878072739, 0.02970830537378788, 0.0003283076803199947, 0.13069312274456024, 0.11530108749866486, 0.0007624651188962162, 0.17023563385009766, 0.013064482249319553, 0.09830121695995331, 0.015471680089831352, 0.003759960178285837, 0.015002110973000526, 0.0006275071064010262, 1.540204175398685e-05, 4.156517388764769e-05, 1.0348146133765113e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:13.028207", "n_pass": [242, 52, 11], "n_token": 174, "loss": [0.7149474620819092, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "1", ":", "(", "-", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [151, 173, 2, 59, 80, 116, 119, 128, 123, 137, 161, 68, 74, 97, 4, 99, 133, 140, 10, 121, 126, 93, 111, 159]}}
{"prediction": {"error_location": 0.48921793699264526, "repair_targets": [], "repair_candidates": [0.1716146320104599, 0.14040641486644745, 0.021079860627651215, 0.0229572132229805, 0.015278520993888378, 0.009598099626600742, 0.009528056718409061, 0.007466994225978851, 0.0005696959560737014, 0.02344577945768833, 0.0002826769195962697, 0.11989239603281021, 0.10317167639732361, 0.0008534358348697424, 0.20243330299854279, 0.011715861968696117, 0.10224596410989761, 0.01620863936841488, 0.004941380582749844, 0.014562953263521194, 0.0016097992192953825, 4.455416274140589e-05, 8.495533984387293e-05, 7.1094864324550144e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:13.102343", "n_pass": [243, 53, 12], "n_token": 170, "loss": [0.7864259481430054, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "1", ")", "]", "#NEWLINE#", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [147, 169, 2, 59, 80, 116, 119, 128, 123, 137, 157, 68, 74, 97, 4, 99, 133, 140, 10, 121, 126, 93, 111, 155]}}
{"prediction": {"error_location": 0.4554697573184967, "repair_targets": [], "repair_candidates": [0.14538168907165527, 0.10959646105766296, 0.016869671642780304, 0.02219613455235958, 0.011791395954787731, 0.008922594599425793, 0.01719469204545021, 0.007794905453920364, 0.00035404422669671476, 0.024063553661108017, 0.0003913267282769084, 0.10873469710350037, 0.0986069068312645, 0.0009529785602353513, 0.271319180727005, 0.013291796669363976, 0.09021173417568207, 0.019795387983322144, 0.008868522942066193, 0.019975369796156883, 0.002417944837361574, 0.0006017196574248374, 0.0006624807720072567, 4.80065909869154e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:13.177135", "n_pass": [244, 54, 13], "n_token": 166, "loss": [0.8425843715667725, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "#INDENT#", "'Return discrete colors from a matplotlib palette.\\n\\n    Note that this handles the qualitative colorbrewer palettes\\n    properly, although if you ask for more colors than a particular\\n    qualitative palette can provide you will fewer than you are\\n    expecting.\\n\\n    Parameters\\n    ----------\\n    name : string\\n        name of the palette\\n    n_colors : int\\n        number of colors in the palette\\n\\n    Returns\\n    -------\\n    palette : list of tuples\\n        palette colors in r, g, b format\\n\\n    '", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [143, 165, 2, 59, 80, 116, 119, 128, 123, 137, 153, 68, 74, 97, 4, 99, 133, 140, 10, 121, 126, 93, 111, 151]}}
{"prediction": {"error_location": 0.4305962920188904, "repair_targets": [], "repair_candidates": [0.14044144749641418, 0.07842037826776505, 0.016280900686979294, 0.027012040838599205, 0.015120232477784157, 0.016520515084266663, 0.019530626013875008, 0.020244726911187172, 0.0013504859525710344, 0.010402335785329342, 0.008777816779911518, 0.10458684712648392, 0.08620668202638626, 0.0007238550460897386, 0.31654298305511475, 0.006137782707810402, 0.0807323232293129, 0.00614435039460659, 0.025870950892567635, 0.0053732916712760925, 0.009062622673809528, 0.000714701134711504, 0.0037707635201513767, 3.142482819384895e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:13.468345", "n_pass": [253, 58, 14], "n_token": 163, "loss": [0.8774788975715637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", ".", "endswith", "(", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [140, 162, 2, 56, 77, 113, 116, 125, 120, 134, 150, 65, 71, 94, 4, 96, 130, 137, 7, 118, 123, 90, 108, 148]}}
{"prediction": {"error_location": 0.41582998633384705, "repair_targets": [], "repair_candidates": [0.11091910302639008, 0.042920954525470734, 0.03572779521346092, 0.015652567148208618, 0.01650412194430828, 0.033776793628931046, 0.01743788830935955, 0.1510566920042038, 0.0004401623154990375, 0.006245187483727932, 0.2670203447341919, 0.05050795152783394, 0.029516106471419334, 0.0005353573360480368, 0.10500234365463257, 0.01570805348455906, 0.036668434739112854, 0.0025714824441820383, 0.03492668271064758, 0.0038456502370536327, 0.008297502994537354, 0.00646039517596364, 0.008224974386394024, 3.348380414536223e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:14.626406", "n_pass": [271, 74, 15], "n_token": 160, "loss": [1.0472469329833984, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "'_d'", ")", ":", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [137, 159, 2, 56, 74, 110, 113, 122, 117, 131, 147, 62, 68, 91, 4, 93, 127, 134, 7, 115, 120, 87, 105, 145]}}
{"prediction": {"error_location": 0.3509024381637573, "repair_targets": [], "repair_candidates": [0.060432832688093185, 0.05059916898608208, 0.02569855935871601, 0.002539399079978466, 0.010480829514563084, 0.029133137315511703, 0.009172302670776844, 0.23859736323356628, 0.000334066164214164, 0.005814041011035442, 0.1755058765411377, 0.049786392599344254, 0.02133573219180107, 0.0007731457008048892, 0.20749853551387787, 0.012830762192606926, 0.0604889802634716, 0.002055036835372448, 0.021290894597768784, 0.004347698763012886, 0.004735028836876154, 0.0007677193498238921, 0.005754299461841583, 2.825991941790562e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:14.699321", "n_pass": [272, 75, 16], "n_token": 157, "loss": [0.6361287236213684, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "=", "[", "'#333333'", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [134, 156, 2, 56, 71, 107, 110, 119, 114, 128, 144, 59, 65, 88, 4, 90, 124, 131, 7, 112, 117, 84, 102, 142]}}
{"prediction": {"error_location": 0.5293377041816711, "repair_targets": [], "repair_candidates": [0.12632305920124054, 0.08514995872974396, 0.03967629000544548, 0.0019019106402993202, 0.015171660110354424, 0.0426456592977047, 0.029729686677455902, 0.10770565271377563, 0.0005790985305793583, 0.004727442283183336, 0.03698687255382538, 0.09022022038698196, 0.037375036627054214, 0.0008880513487383723, 0.2507716715335846, 0.014586764387786388, 0.07130832225084305, 0.0033304309472441673, 0.026752207428216934, 0.0044299340806901455, 0.0064783585257828236, 6.029569703969173e-05, 0.0031655447091907263, 3.58396973751951e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:14.772066", "n_pass": [274, 76, 17], "n_token": 154, "loss": [0.6604719161987305, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", ".", "extend", "(", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [131, 153, 2, 56, 68, 104, 107, 116, 111, 125, 141, 59, 62, 85, 4, 87, 121, 128, 7, 109, 114, 81, 99, 139]}}
{"prediction": {"error_location": 0.5166075229644775, "repair_targets": [], "repair_candidates": [0.1678023636341095, 0.12454015761613846, 0.06339159607887268, 0.0037212742026895285, 0.027385184541344643, 0.03876686468720436, 0.0429605096578598, 0.09491396695375443, 0.002551771467551589, 0.006822824478149414, 0.05189143493771553, 0.07204645127058029, 0.02556302212178707, 0.0024867046158760786, 0.18077315390110016, 0.01908796839416027, 0.038851168006658554, 0.005998943001031876, 0.022227292880415916, 0.0048065464943647385, 0.0022407625801861286, 0.0001478006597608328, 0.0010079802013933659, 1.426800463377731e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:14.846291", "n_pass": [276, 77, 18], "n_token": 151, "loss": [0.7179334163665771, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", ".", "replace", "(", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [128, 150, 2, 56, 65, 101, 104, 113, 108, 122, 138, 59, 62, 82, 4, 84, 118, 125, 7, 106, 111, 78, 96, 136]}}
{"prediction": {"error_location": 0.48775923252105713, "repair_targets": [], "repair_candidates": [0.1600504070520401, 0.16325239837169647, 0.07549761980772018, 0.004170137923210859, 0.020470114424824715, 0.009655375964939594, 0.046721164137125015, 0.0757097378373146, 0.002054101787507534, 0.009091611951589584, 0.046476028859615326, 0.04623441398143768, 0.018218621611595154, 0.0027240575291216373, 0.23798897862434387, 0.006483997218310833, 0.022023960947990417, 0.006164278369396925, 0.02401876263320446, 0.009974362328648567, 0.01150157768279314, 0.0001470450370106846, 0.0013398024020716548, 3.147623283439316e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:14.919108", "n_pass": [278, 78, 19], "n_token": 148, "loss": [0.7901954650878906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "=", "True", ")", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [125, 147, 2, 56, 65, 98, 101, 110, 105, 119, 135, 59, 62, 79, 4, 81, 115, 122, 7, 103, 108, 75, 93, 133]}}
{"prediction": {"error_location": 0.45375603437423706, "repair_targets": [], "repair_candidates": [0.15602894127368927, 0.0971507728099823, 0.06125350296497345, 0.008403865620493889, 0.03311510756611824, 0.002508176490664482, 0.10362795740365982, 0.0690302774310112, 0.0014099179534241557, 0.01008825283497572, 0.03127378970384598, 0.02719711698591709, 0.007251089438796043, 0.0037514877039939165, 0.3246880769729614, 0.004304092843085527, 0.014984807930886745, 0.0021500075235962868, 0.016200002282857895, 0.007581266108900309, 0.016837889328598976, 7.187618757598102e-05, 0.0010470483684912324, 4.4630734919337556e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.208405", "n_pass": [285, 82, 20], "n_token": 145, "loss": [1.0886435508728027, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "#NEWLINE#", "#UNINDENT#", "else", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [122, 144, 2, 56, 65, 95, 98, 107, 102, 116, 132, 59, 62, 79, 4, 81, 112, 119, 7, 100, 105, 75, 90, 130]}}
{"prediction": {"error_location": 0.33667290210723877, "repair_targets": [], "repair_candidates": [0.17249265313148499, 0.06472902745008469, 0.09032558649778366, 0.010491427965462208, 0.04319009184837341, 0.0025953282602131367, 0.08766104280948639, 0.08938094973564148, 0.002149065723642707, 0.002594900317490101, 0.04066174477338791, 0.03142983466386795, 0.01562577486038208, 0.004543273244053125, 0.2662625312805176, 0.005978573579341173, 0.02215440571308136, 0.001397611340507865, 0.024610169231891632, 0.013005420565605164, 0.006318848114460707, 0.00016374103142879903, 0.0022121365182101727, 2.582841807452496e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.281248", "n_pass": [286, 83, 21], "n_token": 142, "loss": [1.0234519243240356, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", ":", "#NEWLINE#", "#INDENT#", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [119, 141, 2, 56, 65, 92, 95, 104, 99, 113, 129, 59, 62, 79, 4, 81, 109, 116, 7, 97, 102, 75, 87, 127]}}
{"prediction": {"error_location": 0.35935232043266296, "repair_targets": [], "repair_candidates": [0.12159771472215652, 0.05131807550787926, 0.048001356422901154, 0.0020007959101349115, 0.014620006084442139, 0.0019189722370356321, 0.04422730579972267, 0.3220348656177521, 0.0018339632079005241, 0.0022242015693336725, 0.12527653574943542, 0.02733943611383438, 0.01885630376636982, 0.0026142625138163567, 0.1490432471036911, 0.005066731944680214, 0.015362235717475414, 0.0015374525683000684, 0.017775490880012512, 0.01762561872601509, 0.007939910516142845, 0.00012009291094727814, 0.0016233021160587668, 4.212838757666759e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.353942", "n_pass": [287, 84, 22], "n_token": 139, "loss": [0.9714112281799316, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", "(", "map", "(", "tuple", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [116, 138, 2, 56, 65, 89, 92, 101, 96, 110, 126, 59, 62, 79, 4, 81, 106, 113, 7, 94, 99, 75, 84, 124]}}
{"prediction": {"error_location": 0.37854844331741333, "repair_targets": [], "repair_candidates": [0.16933991014957428, 0.05309918895363808, 0.04892251268029213, 0.0045644622296094894, 0.018996065482497215, 0.0030356093775480986, 0.15085215866565704, 0.15086480975151062, 0.0028086272068321705, 0.008088537491858006, 0.0037824446335434914, 0.040672626346349716, 0.03661239892244339, 0.0026262293104082346, 0.1995307207107544, 0.009022845886647701, 0.03007669188082218, 0.0021126559004187584, 0.03295648843050003, 0.01268728356808424, 0.016558203846216202, 0.00022458714374806732, 0.002509088721126318, 5.5851429351605475e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.429529", "n_pass": [298, 85, 23], "n_token": 135, "loss": [0.9594656229019165, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "[", ":", ",", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [116, 134, 2, 56, 65, 89, 92, 101, 96, 110, 122, 59, 62, 79, 4, 81, 106, 113, 7, 94, 99, 75, 84, 120]}}
{"prediction": {"error_location": 0.38309749960899353, "repair_targets": [], "repair_candidates": [0.17371025681495667, 0.06665941327810287, 0.05106110870838165, 0.004925712943077087, 0.022070545703172684, 0.0024671638384461403, 0.1662813276052475, 0.0954342633485794, 0.006173846311867237, 0.013402105309069157, 0.002975187264382839, 0.0401814766228199, 0.03898773342370987, 0.0023141552228480577, 0.21322405338287354, 0.012260242365300655, 0.02780524455010891, 0.002097515854984522, 0.027295982465147972, 0.017698444426059723, 0.007976499386131763, 0.0002053581119980663, 0.004735471680760384, 5.68793220736552e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.502150", "n_pass": [300, 86, 24], "n_token": 131, "loss": [0.968328595161438, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ":", "3", "]", ")", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [116, 130, 2, 56, 65, 89, 92, 101, 96, 110, 122, 59, 62, 79, 4, 81, 106, 113, 7, 94, 99, 75, 84, 120]}}
{"prediction": {"error_location": 0.3797171711921692, "repair_targets": [], "repair_candidates": [0.15676480531692505, 0.0660061165690422, 0.05098680779337883, 0.004469922743737698, 0.02187233418226242, 0.0027293956372886896, 0.16619883477687836, 0.1063055768609047, 0.010191911831498146, 0.01761656254529953, 0.0039048532489687204, 0.04216329753398895, 0.047234710305929184, 0.0024873767979443073, 0.16341155767440796, 0.011242902837693691, 0.029098253697156906, 0.0021617505699396133, 0.040296830236911774, 0.018668625503778458, 0.015079398639500141, 0.0002608159848023206, 0.020699195563793182, 0.00014821829972788692], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.574793", "n_pass": [301, 87, 25], "n_token": 127, "loss": [1.0426567792892456, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [116, 126, 2, 56, 65, 89, 92, 101, 96, 110, 122, 59, 62, 79, 4, 81, 106, 113, 7, 94, 99, 75, 84, 120]}}
{"prediction": {"error_location": 0.35251691937446594, "repair_targets": [], "repair_candidates": [0.18455231189727783, 0.06544814258813858, 0.060652997344732285, 0.004417630843818188, 0.02178535982966423, 0.002481381641700864, 0.16643372178077698, 0.1406538337469101, 0.004634555894881487, 0.0075532314367592335, 0.00571611151099205, 0.039736248552799225, 0.04300948604941368, 0.002266362076625228, 0.12913596630096436, 0.014606094919145107, 0.03160950168967247, 0.0024627207312732935, 0.025223297998309135, 0.01767500676214695, 0.02752280794084072, 0.0004674289666581899, 0.001734962803311646, 0.0002207900251960382], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.862195", "n_pass": [309, 91, 26], "n_token": 124, "loss": [1.1707355976104736, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "'Paired'", ":", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [113, 123, 2, 53, 62, 86, 89, 98, 93, 107, 119, 56, 59, 76, 4, 78, 103, 110, 7, 91, 96, 72, 81, 117]}}
{"prediction": {"error_location": 0.3101387023925781, "repair_targets": [], "repair_candidates": [0.17719945311546326, 0.06287939101457596, 0.06265348196029663, 0.01458891574293375, 0.021426910534501076, 0.0034304549917578697, 0.2246508002281189, 0.07542196661233902, 0.0058099376037716866, 0.006319921463727951, 0.002563613699749112, 0.031230175867676735, 0.039704084396362305, 0.00215050857514143, 0.11437011510133743, 0.01386910118162632, 0.03250376507639885, 0.0032140049152076244, 0.039736077189445496, 0.013971967622637749, 0.04605339467525482, 0.00017408025451004505, 0.005543585401028395, 0.0005343633238226175], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:15.935023", "n_pass": [310, 92, 27], "n_token": 121, "loss": [0.7925055623054504, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "12", ",", "#NEWLINE#", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [110, 120, 2, 50, 59, 83, 86, 95, 90, 104, 116, 53, 56, 73, 4, 75, 100, 107, 7, 88, 93, 69, 78, 114]}}
{"prediction": {"error_location": 0.4527091383934021, "repair_targets": [], "repair_candidates": [0.18911853432655334, 0.05117678642272949, 0.07448682188987732, 0.0252444539219141, 0.012911884114146233, 0.002218489069491625, 0.09787911176681519, 0.09553118795156479, 0.019465159624814987, 0.0011327946558594704, 0.0064503648318350315, 0.042840633541345596, 0.04201265424489975, 0.0017556932289153337, 0.14303584396839142, 0.0190377626568079, 0.06298714876174927, 0.0015720180235803127, 0.06099900230765343, 0.005881332326680422, 0.039310067892074585, 8.95028279046528e-05, 0.003677051281556487, 0.0011856933124363422], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.007127", "n_pass": [311, 93, 28], "n_token": 118, "loss": [1.0262666940689087, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "'Pastel1'", ":", "9", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [107, 117, 2, 47, 56, 80, 83, 92, 87, 101, 113, 50, 53, 70, 4, 72, 97, 104, 7, 85, 90, 66, 75, 111]}}
{"prediction": {"error_location": 0.3583422303199768, "repair_targets": [], "repair_candidates": [0.16065408289432526, 0.04172348231077194, 0.061552032828330994, 0.02827961929142475, 0.009405579417943954, 0.001947677694261074, 0.040803905576467514, 0.20566624402999878, 0.022315725684165955, 0.00038090531597845256, 0.058592233806848526, 0.022444315254688263, 0.031917471438646317, 0.001961442409083247, 0.17175625264644623, 0.010106382891535759, 0.0745086818933487, 0.001434525242075324, 0.039864588528871536, 0.005002250894904137, 0.006877210922539234, 0.00026896066265180707, 0.0021164354402571917, 0.00041998803499154747], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.071845", "n_pass": [312, 94, 29], "n_token": 115, "loss": [0.7340478897094727, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ",", "#NEWLINE#", "'Pastel2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [104, 114, 2, 44, 53, 77, 80, 89, 84, 98, 110, 47, 50, 67, 4, 69, 94, 101, 7, 82, 87, 63, 72, 108]}}
{"prediction": {"error_location": 0.4799621105194092, "repair_targets": [], "repair_candidates": [0.15535570681095123, 0.05907488241791725, 0.07188669592142105, 0.011606269516050816, 0.02276444435119629, 0.003095716005191207, 0.046514056622982025, 0.09673804044723511, 0.04187736287713051, 0.0005428489530459046, 0.039049819111824036, 0.031773705035448074, 0.052209313958883286, 0.0039603933691978455, 0.17432597279548645, 0.015865303575992584, 0.09620300680398941, 0.0018373121274635196, 0.050887856632471085, 0.005292899440973997, 0.015763524919748306, 3.596343958633952e-05, 0.002100928220897913, 0.001237985910847783], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.136905", "n_pass": [313, 95, 30], "n_token": 112, "loss": [0.6843671202659607, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "8", ",", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [101, 111, 2, 41, 50, 74, 77, 86, 81, 95, 107, 44, 47, 64, 4, 66, 91, 98, 7, 79, 84, 60, 69, 105]}}
{"prediction": {"error_location": 0.5044093132019043, "repair_targets": [], "repair_candidates": [0.1286165863275528, 0.06458568572998047, 0.06567520648241043, 0.002825116040185094, 0.02794995717704296, 0.0009085401543416083, 0.046811409294605255, 0.09084749966859818, 0.04211210086941719, 0.000922024657484144, 0.03210419416427612, 0.068669892847538, 0.058397598564624786, 0.003710963996127248, 0.13931360840797424, 0.009428026154637337, 0.09612943977117538, 0.0014390830183401704, 0.06095098331570625, 0.004333978518843651, 0.0512971468269825, 0.00011011730384780094, 0.0016575792105868459, 0.001203237334266305], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.202151", "n_pass": [314, 96, 31], "n_token": 109, "loss": [0.79966801404953, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "'Set1'", ":", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [98, 108, 2, 38, 47, 71, 74, 83, 78, 92, 104, 41, 44, 61, 4, 63, 88, 95, 7, 76, 81, 57, 66, 102]}}
{"prediction": {"error_location": 0.4494781494140625, "repair_targets": [], "repair_candidates": [0.10919189453125, 0.04598366469144821, 0.0724625289440155, 0.0035251076333224773, 0.038984205573797226, 0.000924795342143625, 0.06588029116392136, 0.17439286410808563, 0.06359287351369858, 0.0008852831670083106, 0.03982105851173401, 0.06384959816932678, 0.04427056014537811, 0.003177403938025236, 0.07538918405771255, 0.008834096603095531, 0.06232156977057457, 0.0007000238983891904, 0.05935876443982124, 0.010955474339425564, 0.05155063420534134, 0.000566278409678489, 0.0023489559534937143, 0.0010329814394935966], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.266256", "n_pass": [315, 97, 32], "n_token": 106, "loss": [0.863251805305481, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "9", ",", "#NEWLINE#", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [95, 105, 2, 35, 44, 68, 71, 80, 75, 89, 101, 38, 41, 58, 4, 60, 85, 92, 7, 73, 78, 54, 63, 99]}}
{"prediction": {"error_location": 0.4217882454395294, "repair_targets": [], "repair_candidates": [0.08801790326833725, 0.041162922978401184, 0.06697232276201248, 0.005743753165006638, 0.033366765826940536, 0.0020864573307335377, 0.053193606436252594, 0.2936568260192871, 0.020685508847236633, 0.0006862945156171918, 0.06618615984916687, 0.06657367944717407, 0.056981004774570465, 0.002769378712400794, 0.05873105302453041, 0.004294766113162041, 0.0405992716550827, 0.0006607274990528822, 0.028937408700585365, 0.013594331219792366, 0.04790285974740982, 0.003137425985187292, 0.0017175583634525537, 0.0023420187644660473], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.330699", "n_pass": [316, 98, 33], "n_token": 103, "loss": [0.9414702653884888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "'Set2'", ":", "8", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [92, 102, 2, 32, 41, 65, 68, 77, 72, 86, 98, 35, 38, 55, 4, 57, 82, 89, 7, 70, 75, 51, 60, 96]}}
{"prediction": {"error_location": 0.39005395770072937, "repair_targets": [], "repair_candidates": [0.08745813369750977, 0.046967532485723495, 0.07277308404445648, 0.004790287930518389, 0.019337130710482597, 0.0031448225490748882, 0.023981217294931412, 0.29625529050827026, 0.007341449148952961, 0.0007131343591026962, 0.053039439022541046, 0.046858180314302444, 0.03832215815782547, 0.002173782093450427, 0.21301421523094177, 0.003765685483813286, 0.024701684713363647, 0.0006808186881244183, 0.02324260026216507, 0.013494794256985188, 0.014325801283121109, 0.0016285899328067899, 0.0015257922932505608, 0.0004642983840312809], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.394558", "n_pass": [317, 99, 34], "n_token": 100, "loss": [0.5686565637588501, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ",", "#NEWLINE#", "'Set3'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [89, 99, 2, 29, 38, 62, 65, 74, 69, 83, 95, 32, 35, 52, 4, 54, 79, 86, 7, 67, 72, 48, 57, 93]}}
{"prediction": {"error_location": 0.5662857890129089, "repair_targets": [], "repair_candidates": [0.09552045911550522, 0.08959925174713135, 0.09026147425174713, 0.00833294540643692, 0.017286518588662148, 0.0014272741973400116, 0.035987742245197296, 0.2699470520019531, 0.014179416932165623, 0.0024487439077347517, 0.09735555201768875, 0.0310377050191164, 0.04511040449142456, 0.002912366995587945, 0.11691973358392715, 0.006601112429052591, 0.021044453606009483, 0.0008195798145607114, 0.011382635682821274, 0.02107108198106289, 0.019294703379273415, 0.0002558523556217551, 0.0008073152275756001, 0.00039665127405896783], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.459962", "n_pass": [318, 100, 35], "n_token": 97, "loss": [0.7616353034973145, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", ":", "12", ",", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [86, 96, 2, 26, 35, 59, 62, 71, 66, 80, 92, 29, 32, 49, 4, 51, 76, 83, 7, 64, 69, 45, 54, 90]}}
{"prediction": {"error_location": 0.46690231561660767, "repair_targets": [], "repair_candidates": [0.07274512946605682, 0.06067400425672531, 0.06315527856349945, 0.007755002472549677, 0.011022982187569141, 0.0017924155108630657, 0.04563206806778908, 0.40131059288978577, 0.02211466245353222, 0.0031222966499626637, 0.07657422870397568, 0.029786361381411552, 0.032965030521154404, 0.0033800392411649227, 0.10430782288312912, 0.01087514590471983, 0.02368362993001938, 0.0010822005569934845, 0.008515311405062675, 0.010779335163533688, 0.007954644039273262, 0.00015099217125680298, 0.0005637432332150638, 5.70958545722533e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.524188", "n_pass": [319, 101, 36], "n_token": 94, "loss": [0.5826427340507507, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "#UNINDENT#", "}", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [83, 93, 2, 23, 32, 56, 59, 68, 63, 77, 89, 26, 29, 46, 4, 48, 73, 80, 7, 61, 66, 42, 51, 87]}}
{"prediction": {"error_location": 0.5584205389022827, "repair_targets": [], "repair_candidates": [0.10733601450920105, 0.06239019334316254, 0.08682013303041458, 0.002703896490857005, 0.023967580869793892, 0.0065314327366650105, 0.03911305591464043, 0.30633553862571716, 0.0540376678109169, 0.0021607191301882267, 0.044569164514541626, 0.03937546908855438, 0.031407881528139114, 0.004326108377426863, 0.08423753827810287, 0.021245984360575676, 0.035047464072704315, 0.001619815593585372, 0.015368770807981491, 0.011186810210347176, 0.018811697140336037, 0.00011901865218533203, 0.001185194356366992, 0.00010284932795912027], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.588349", "n_pass": [320, 102, 37], "n_token": 91, "loss": [0.5475507974624634, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "'_d'", ",", "'_r'", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [80, 90, 2, 20, 29, 53, 56, 65, 60, 74, 86, 23, 26, 43, 4, 45, 70, 77, 7, 58, 63, 39, 48, 84]}}
{"prediction": {"error_location": 0.5783646702766418, "repair_targets": [], "repair_candidates": [0.10201162844896317, 0.06072290614247322, 0.10183243453502655, 0.004552711732685566, 0.02797303907573223, 0.0018907692283391953, 0.07794120907783508, 0.27875033020973206, 0.043888140469789505, 0.0026486581191420555, 0.010767520405352116, 0.04007909446954727, 0.030741143971681595, 0.003694194369018078, 0.0895526260137558, 0.029170015826821327, 0.043618448078632355, 0.0023800195194780827, 0.0164436474442482, 0.010892478749155998, 0.01947040669620037, 0.0001389511307934299, 0.0007296046242117882, 0.00011003486724803224], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.653356", "n_pass": [325, 103, 38], "n_token": 88, "loss": [0.49891698360443115, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", ")", ",", "2", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [77, 87, 2, 20, 29, 50, 53, 62, 57, 71, 83, 23, 26, 40, 4, 42, 67, 74, 7, 55, 60, 36, 45, 81]}}
{"prediction": {"error_location": 0.6071878671646118, "repair_targets": [], "repair_candidates": [0.11332815885543823, 0.05331006646156311, 0.08658318966627121, 0.005818990059196949, 0.02799098938703537, 0.001470141694881022, 0.05317781865596771, 0.14186041057109833, 0.044000692665576935, 0.0012272626627236605, 0.07241407036781311, 0.03770330175757408, 0.050646424293518066, 0.005658664274960756, 0.12249390780925751, 0.01848171092569828, 0.10978138446807861, 0.002606975380331278, 0.022674383595585823, 0.008153373375535011, 0.019334372133016586, 4.3354542867746204e-05, 0.0011411659652367234, 9.915827104123309e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.718084", "n_pass": [326, 104, 39], "n_token": 85, "loss": [0.5141222476959229, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", ")", ")", "#NEWLINE#", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [74, 84, 2, 20, 29, 47, 50, 59, 54, 68, 80, 23, 26, 37, 4, 39, 64, 71, 7, 52, 57, 33, 42, 78]}}
{"prediction": {"error_location": 0.5980253219604492, "repair_targets": [], "repair_candidates": [0.11825494468212128, 0.04667751491069794, 0.0844576507806778, 0.006057287100702524, 0.01908058300614357, 0.0009084616904146969, 0.03489306569099426, 0.10984739661216736, 0.04673347994685173, 0.0005880421376787126, 0.09117253869771957, 0.04039591923356056, 0.07081133872270584, 0.01210233848541975, 0.11151916533708572, 0.01368025504052639, 0.13484105467796326, 0.0017458349466323853, 0.022093281149864197, 0.0072563462890684605, 0.02546566165983677, 4.146062565268949e-05, 0.0012842374853789806, 9.217339538736269e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.781524", "n_pass": [327, 105, 40], "n_token": 82, "loss": [0.5518805384635925, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "{", "#NEWLINE#", "#INDENT#", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [71, 81, 2, 20, 29, 44, 47, 56, 51, 65, 77, 23, 26, 34, 4, 36, 61, 68, 7, 49, 54, 30, 39, 75]}}
{"prediction": {"error_location": 0.5758658051490784, "repair_targets": [], "repair_candidates": [0.12032986432313919, 0.0374489426612854, 0.05948363244533539, 0.010840212926268578, 0.019339200109243393, 0.012030882760882378, 0.07073274254798889, 0.31338682770729065, 0.015960855409502983, 0.0006135232979431748, 0.05593306943774223, 0.0213788952678442, 0.05804319679737091, 0.0055802566930651665, 0.047903645783662796, 0.010810604318976402, 0.0809546560049057, 0.00195003068074584, 0.018745828419923782, 0.007078068796545267, 0.030002642422914505, 0.000289465649984777, 0.0009963215561583638, 0.0001666849129833281], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.847546", "n_pass": [346, 106, 41], "n_token": 79, "loss": [0.5670393109321594, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "'Accent'", ":", "8", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [68, 78, 2, 17, 26, 41, 44, 53, 48, 62, 74, 20, 23, 31, 4, 33, 58, 65, 7, 46, 51, 27, 36, 72]}}
{"prediction": {"error_location": 0.5672024488449097, "repair_targets": [], "repair_candidates": [0.11066161841154099, 0.05371787026524544, 0.10319101065397263, 0.011952735483646393, 0.014760487712919712, 0.0068638077937066555, 0.10085595399141312, 0.2421056479215622, 0.013537711463868618, 0.000986918923445046, 0.048090506345033646, 0.039109278470277786, 0.03958447277545929, 0.005291036330163479, 0.049337394535541534, 0.009546237997710705, 0.06354518234729767, 0.0029645187314599752, 0.019499756395816803, 0.021119853481650352, 0.03986799344420433, 0.0006783324643038213, 0.0020117159001529217, 0.0007198883686214685], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.912541", "n_pass": [347, 107, 42], "n_token": 76, "loss": [0.5367873311042786, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", ",", "#NEWLINE#", "'Dark2'", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [65, 75, 2, 14, 23, 38, 41, 50, 45, 59, 71, 17, 20, 28, 4, 30, 55, 62, 7, 43, 48, 24, 33, 69]}}
{"prediction": {"error_location": 0.5846233367919922, "repair_targets": [], "repair_candidates": [0.10545238107442856, 0.04529447853565216, 0.10566283017396927, 0.011957623064517975, 0.020001376047730446, 0.021880794316530228, 0.058901868760585785, 0.1485418826341629, 0.05026184394955635, 0.0018242450896650553, 0.05984136462211609, 0.04213550314307213, 0.06247858330607414, 0.008513584733009338, 0.04748235270380974, 0.006391497794538736, 0.05834313854575157, 0.0021432286594063044, 0.0201973095536232, 0.049349285662174225, 0.06598172336816788, 0.0016942291986197233, 0.0032517211511731148, 0.0024172510020434856], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:16.975842", "n_pass": [348, 108, 43], "n_token": 73, "loss": [0.4779157042503357, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "#NEWLINE#", "brewer_qual_pals", "=", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [62, 72, 2, 11, 20, 35, 38, 47, 42, 56, 68, 14, 17, 25, 4, 27, 52, 59, 7, 40, 45, 21, 30, 66]}}
{"prediction": {"error_location": 0.6200743913650513, "repair_targets": [], "repair_candidates": [0.1035609170794487, 0.05887338146567345, 0.18278755247592926, 0.006601942237466574, 0.01763155311346054, 0.021166406571865082, 0.060756850987672806, 0.15820786356925964, 0.019496817141771317, 0.001767349778674543, 0.06833949685096741, 0.030264126136898994, 0.0670812726020813, 0.006613254547119141, 0.07395359873771667, 0.005377938970923424, 0.03596452623605728, 0.0018391723278909922, 0.020516764372587204, 0.028851184993982315, 0.024248994886875153, 0.002033510711044073, 0.002986905863508582, 0.0010785741033032537], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.042240", "n_pass": [415, 109, 44], "n_token": 72, "loss": [0.4452654719352722, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "=", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [61, 71, 2, 10, 19, 34, 37, 46, 41, 55, 67, 13, 16, 24, 4, 26, 51, 58, 6, 39, 44, 20, 29, 65]}}
{"prediction": {"error_location": 0.6406542062759399, "repair_targets": [], "repair_candidates": [0.12801635265350342, 0.07088864594697952, 0.09467613697052002, 0.012204300612211227, 0.019459865987300873, 0.017785493284463882, 0.06464170664548874, 0.14048220217227936, 0.011332820169627666, 0.0033089201897382736, 0.07029325515031815, 0.03430449590086937, 0.05428483709692955, 0.0043979911133646965, 0.1179155632853508, 0.004605548456311226, 0.0349426232278347, 0.0015806772280484438, 0.031027229502797127, 0.0349721685051918, 0.033149272203445435, 0.0018219953635707498, 0.011049037799239159, 0.00285887299105525], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.106526", "n_pass": [417, 110, 45], "n_token": 71, "loss": [0.44747117161750793, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "#NEWLINE#", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [60, 70, 2, 9, 18, 33, 36, 45, 40, 54, 66, 12, 15, 23, 4, 25, 50, 57, 6, 38, 43, 19, 28, 64]}}
{"prediction": {"error_location": 0.6392425894737244, "repair_targets": [], "repair_candidates": [0.16294372081756592, 0.078581303358078, 0.0210999958217144, 0.016091275960206985, 0.024690300226211548, 0.01885971613228321, 0.06992129236459732, 0.09585271775722504, 0.008917238563299179, 0.008040164597332478, 0.07891785353422165, 0.04581762105226517, 0.060088660567998886, 0.01009072083979845, 0.12431871145963669, 0.013701376505196095, 0.03862205520272255, 0.002784745767712593, 0.030494317412376404, 0.03755403682589531, 0.03181777894496918, 0.0024438456166535616, 0.015261087566614151, 0.003089482896029949], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.170012", "n_pass": [418, 111, 46], "n_token": 70, "loss": [0.49296826124191284, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "if", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [59, 69, 2, 8, 17, 32, 35, 44, 39, 53, 65, 11, 14, 22, 4, 24, 49, 56, 6, 37, 42, 18, 27, 63]}}
{"prediction": {"error_location": 0.6108108162879944, "repair_targets": [], "repair_candidates": [0.17201316356658936, 0.05789210647344589, 0.04187894985079765, 0.02503049559891224, 0.021833091974258423, 0.013469980098307133, 0.0881698876619339, 0.07240411639213562, 0.007134601473808289, 0.008321735076606274, 0.10250996798276901, 0.0579829141497612, 0.0755683183670044, 0.005379083100706339, 0.11622170358896255, 0.008719897828996181, 0.02947697415947914, 0.003148680552840233, 0.027463208884000778, 0.028033893555402756, 0.019717339426279068, 0.0015085068298503757, 0.01390206441283226, 0.0022193333134055138], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.233273", "n_pass": [419, 112, 47], "n_token": 69, "loss": [0.5271114706993103, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "#NEWLINE#", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [58, 68, 2, 7, 16, 31, 34, 43, 38, 52, 64, 10, 13, 21, 4, 23, 48, 55, 6, 36, 41, 17, 26, 62]}}
{"prediction": {"error_location": 0.5903076529502869, "repair_targets": [], "repair_candidates": [0.19574762880802155, 0.05040643736720085, 0.07126050442457199, 0.04962686821818352, 0.023489506915211678, 0.011010367423295975, 0.09043429791927338, 0.06609756499528885, 0.007240662816911936, 0.005490753334015608, 0.0987064391374588, 0.04489212855696678, 0.0630788579583168, 0.00392120610922575, 0.09776300191879272, 0.005292248446494341, 0.02593887597322464, 0.0028042104095220566, 0.028711184859275818, 0.023475421592593193, 0.01955251395702362, 0.0012686374830082059, 0.01214667595922947, 0.0016439722385257483], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.296822", "n_pass": [421, 113, 48], "n_token": 68, "loss": [0.5921919941902161, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "#INDENT#", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 67, 2, 7, 15, 30, 33, 42, 37, 51, 63, 9, 12, 20, 4, 22, 47, 54, 6, 35, 40, 16, 25, 61]}}
{"prediction": {"error_location": 0.5531135201454163, "repair_targets": [], "repair_candidates": [0.16919350624084473, 0.04657825082540512, 0.07130865752696991, 0.06298366189002991, 0.01714032143354416, 0.009090777486562729, 0.09909892082214355, 0.07460940629243851, 0.0047278376296162605, 0.006425155326724052, 0.09711595624685287, 0.058482490479946136, 0.06832006573677063, 0.0030384031124413013, 0.10824336856603622, 0.005150856915861368, 0.02519076131284237, 0.0029011783190071583, 0.02135070413351059, 0.021762268617749214, 0.015642793849110603, 0.0009612001595087349, 0.009305560030043125, 0.0013778762659057975], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.361983", "n_pass": [422, 114, 49], "n_token": 67, "loss": [0.734225332736969, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "=", "getattr", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [56, 66, 2, 7, 14, 29, 32, 41, 36, 50, 62, 8, 11, 19, 4, 21, 46, 53, 6, 34, 39, 15, 24, 60]}}
{"prediction": {"error_location": 0.4798770546913147, "repair_targets": [], "repair_candidates": [0.2364114671945572, 0.04122081398963928, 0.05399816483259201, 0.078202985227108, 0.02373318374156952, 0.01701701246201992, 0.09386713057756424, 0.0763888880610466, 0.0007476519676856697, 0.00360633316449821, 0.08413590490818024, 0.054751813411712646, 0.06615552306175232, 0.002783031901344657, 0.08187326043844223, 0.00513457739725709, 0.020992597565054893, 0.0022041876800358295, 0.013969242572784424, 0.01776922307908535, 0.014946836978197098, 0.0006063200999051332, 0.008307069540023804, 0.00117670523468405], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.553287", "n_pass": [432, 117, 50], "n_token": 65, "loss": [1.0965017080307007, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "cm", ",", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [54, 64, 2, 7, 14, 27, 30, 39, 34, 48, 60, 8, 11, 19, 4, 21, 44, 51, 6, 32, 37, 15, 24, 58]}}
{"prediction": {"error_location": 0.33403757214546204, "repair_targets": [], "repair_candidates": [0.2981415390968323, 0.017819391563534737, 0.026715079322457314, 0.11978454142808914, 0.01688511297106743, 0.016082948073744774, 0.12684452533721924, 0.0773758739233017, 0.00028815807309001684, 0.0005749432020820677, 0.07805231213569641, 0.02745884284377098, 0.07773283123970032, 0.00223529152572155, 0.05565426126122475, 0.00374503037892282, 0.017362840473651886, 0.001238341792486608, 0.01066667027771473, 0.011379717849195004, 0.009718243964016438, 0.0004206329758744687, 0.0035399929620325565, 0.00028285381267778575], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.616848", "n_pass": [433, 118, 51], "n_token": 63, "loss": [0.753314733505249, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "=", "np", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [52, 62, 2, 7, 14, 25, 28, 37, 32, 46, 58, 8, 11, 19, 4, 21, 42, 49, 6, 30, 35, 15, 24, 56]}}
{"prediction": {"error_location": 0.4708033800125122, "repair_targets": [], "repair_candidates": [0.26047763228416443, 0.026772532612085342, 0.03715894743800163, 0.08553197979927063, 0.029327578842639923, 0.016170643270015717, 0.08448147028684616, 0.16454261541366577, 0.0003676496562547982, 0.0009023270686157048, 0.13448293507099152, 0.02775532566010952, 0.03507077321410179, 0.002440839074552059, 0.03614852949976921, 0.004783285316079855, 0.016706714406609535, 0.0011165074538439512, 0.010335066355764866, 0.010146897286176682, 0.010610050521790981, 0.00026012127636931837, 0.004119039513170719, 0.00029060192173346877], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.681024", "n_pass": [438, 119, 52], "n_token": 61, "loss": [0.954788327217102, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ")", "[", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [50, 60, 2, 7, 14, 25, 28, 35, 32, 44, 56, 8, 11, 19, 4, 21, 40, 47, 6, 30, 33, 15, 24, 54]}}
{"prediction": {"error_location": 0.38489365577697754, "repair_targets": [], "repair_candidates": [0.2738696038722992, 0.036755215376615524, 0.06179803982377052, 0.07197405397891998, 0.041486237198114395, 0.020298363640904427, 0.054187383502721786, 0.15640565752983093, 0.0005536035168915987, 0.004191884770989418, 0.08815628290176392, 0.03427062928676605, 0.0212232805788517, 0.02221987396478653, 0.0028730889316648245, 0.05138802528381348, 0.02326194755733013, 0.0010885802330449224, 0.00735853984951973, 0.006279716733843088, 0.016275638714432716, 0.0002726924722082913, 0.0035895737819373608, 0.00022210922907106578], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.745074", "n_pass": [441, 120, 53], "n_token": 59, "loss": [0.8927002549171448, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", ":", "#NEWLINE#", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [48, 58, 2, 7, 14, 25, 28, 35, 32, 42, 54, 8, 11, 19, 4, 21, 38, 45, 6, 30, 33, 15, 24, 52]}}
{"prediction": {"error_location": 0.4095483124256134, "repair_targets": [], "repair_candidates": [0.22771582007408142, 0.024714870378375053, 0.07064087688922882, 0.0884198397397995, 0.040871284902095795, 0.021705271676182747, 0.03573878854513168, 0.193651020526886, 0.0007661540876142681, 0.0030837871599942446, 0.1334265172481537, 0.025479361414909363, 0.01523328572511673, 0.017679275944828987, 0.0031046289950609207, 0.05828312411904335, 0.010518880560994148, 0.0011158022098243237, 0.006219218950718641, 0.004191795829683542, 0.014354715123772621, 0.00021847814787179232, 0.002731516258791089, 0.00013578034122474492], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.809834", "n_pass": [443, 121, 54], "n_token": 57, "loss": [1.0076969861984253, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", ",", "(", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [46, 56, 2, 7, 14, 25, 28, 35, 32, 40, 52, 8, 11, 19, 4, 21, 38, 43, 6, 30, 33, 15, 24, 50]}}
{"prediction": {"error_location": 0.3650587797164917, "repair_targets": [], "repair_candidates": [0.23332244157791138, 0.029961030930280685, 0.05169599503278732, 0.06746459752321243, 0.04441013187170029, 0.017181821167469025, 0.038267310708761215, 0.14399564266204834, 0.0005762409418821335, 0.00556911388412118, 0.1453009843826294, 0.030246702954173088, 0.021566610783338547, 0.02675679139792919, 0.004897725768387318, 0.08277277648448944, 0.017773758620023727, 0.001655055326409638, 0.008350962772965431, 0.003262109821662307, 0.0207672081887722, 0.0002259856992168352, 0.003909470979124308, 6.94736372679472e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.872950", "n_pass": [445, 122, 55], "n_token": 55, "loss": [0.7892482876777649, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", "=", "list", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [44, 54, 2, 7, 14, 25, 28, 35, 32, 40, 50, 8, 11, 19, 4, 21, 38, 41, 6, 30, 33, 15, 24, 48]}}
{"prediction": {"error_location": 0.45418602228164673, "repair_targets": [], "repair_candidates": [0.2571379840373993, 0.041735317558050156, 0.061023905873298645, 0.07468590885400772, 0.053130198270082474, 0.012192158959805965, 0.04396309331059456, 0.21098999679088593, 0.0005204915651120245, 0.005489759612828493, 0.08457149565219879, 0.013586508110165596, 0.01477342750877142, 0.019651805981993675, 0.0029567524325102568, 0.07840575277805328, 0.007765717338770628, 0.0018319889204576612, 0.0021758272778242826, 0.00523848133161664, 0.007242437452077866, 0.00022290967172011733, 0.000650780217256397, 5.7294993894174695e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.935938", "n_pass": [448, 123, 56], "n_token": 53, "loss": [0.8908908367156982, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", ")", "#NEWLINE#", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [44, 52, 2, 7, 14, 25, 28, 35, 32, 40, 48, 8, 11, 19, 4, 21, 38, 41, 6, 30, 33, 15, 24, 46]}}
{"prediction": {"error_location": 0.41029003262519836, "repair_targets": [], "repair_candidates": [0.24393795430660248, 0.032532934099435806, 0.052328020334243774, 0.06949978321790695, 0.02644318714737892, 0.02112235315144062, 0.03917378932237625, 0.26569390296936035, 0.0007288966444320977, 0.0051508410833776, 0.09219174087047577, 0.007642814423888922, 0.009237716905772686, 0.015891989693045616, 0.004111855756491423, 0.055499449372291565, 0.007565109059214592, 0.0013594835763797164, 0.01870037242770195, 0.00888699758797884, 0.01229032501578331, 0.0008197066490538418, 0.008626846596598625, 0.0005638846196234226], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:17.999898", "n_pass": [451, 124, 57], "n_token": 51, "loss": [0.9866392016410828, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def mpl_palette(", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [44, 50, 2, 7, 14, 25, 28, 35, 32, 40, 48, 8, 11, 19, 4, 21, 38, 41, 6, 30, 33, 15, 24, 46]}}
{"prediction": {"error_location": 0.3728276193141937, "repair_targets": [], "repair_candidates": [0.19305254518985748, 0.02948496863245964, 0.04845355451107025, 0.06192057579755783, 0.020092397928237915, 0.011593613773584366, 0.02685035578906536, 0.29650750756263733, 0.000801448302809149, 0.00586981326341629, 0.1374589055776596, 0.01222629752010107, 0.010128720663487911, 0.01697232946753502, 0.007855718955397606, 0.05699491128325462, 0.020214015617966652, 0.0021298949141055346, 0.013694156892597675, 0.01661641150712967, 0.005722239147871733, 0.0014690194511786103, 0.0032842494547367096, 0.0006063873297534883], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.064759", "n_pass": [454, 125, 58], "n_token": 50, "loss": [0.96192467212677, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", ",", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 49, 1, 6, 13, 24, 27, 34, 31, 39, 47, 7, 10, 18, 3, 20, 37, 40, 5, 29, 32, 14, 23, 45]}}
{"prediction": {"error_location": 0.3821566104888916, "repair_targets": [], "repair_candidates": [0.021724030375480652, 0.018846217542886734, 0.04642800614237785, 0.042288895696401596, 0.020126167684793472, 0.00987326167523861, 0.015241012908518314, 0.39467504620552063, 0.0006594363367184997, 0.002118307864293456, 0.26079195737838745, 0.011040426790714264, 0.0048127248883247375, 0.02020392380654812, 0.012078050523996353, 0.06293055415153503, 0.019613293930888176, 0.001634719199500978, 0.012974773533642292, 0.015729553997516632, 0.002044000895693898, 0.0013360644225031137, 0.002506828401237726, 0.00032281046151183546], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.127686", "n_pass": [456, 126, 59], "n_token": 49, "loss": [1.001631736755371, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "=", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [42, 48, 1, 5, 12, 23, 26, 33, 30, 38, 46, 6, 9, 17, 2, 19, 36, 39, 4, 28, 31, 13, 22, 44]}}
{"prediction": {"error_location": 0.36727961897850037, "repair_targets": [], "repair_candidates": [0.024203455075621605, 0.025948993861675262, 0.040616948157548904, 0.03555736690759659, 0.03204253688454628, 0.013180561363697052, 0.01461842842400074, 0.3256440758705139, 0.0004890360869467258, 0.0018916020635515451, 0.3591405749320984, 0.010190822184085846, 0.004019526299089193, 0.02073693834245205, 0.009828942827880383, 0.03587160259485245, 0.021435417234897614, 0.0009104166529141366, 0.010413137264549732, 0.009749338962137699, 0.00045449522440321743, 0.0008040777174755931, 0.002147442428395152, 0.00010421811020933092], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.190893", "n_pass": [458, 127, 60], "n_token": 48, "loss": [1.0177481174468994, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "]", "#NEWLINE#", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [41, 47, 1, 4, 11, 22, 25, 32, 29, 37, 45, 5, 8, 16, 2, 18, 35, 38, 3, 27, 30, 12, 21, 43]}}
{"prediction": {"error_location": 0.3614078760147095, "repair_targets": [], "repair_candidates": [0.01673097163438797, 0.029119325801730156, 0.024011706933379173, 0.02524537593126297, 0.02720540389418602, 0.026174787431955338, 0.012826141901314259, 0.438215434551239, 0.0011187399504706264, 0.003570422763004899, 0.2711377441883087, 0.009693043306469917, 0.004939273931086063, 0.014554202556610107, 0.005453030578792095, 0.05510296672582626, 0.0164601132273674, 0.00060795753961429, 0.00760646304115653, 0.005565715953707695, 0.0005246237269602716, 0.0007050847052596509, 0.003086837474256754, 0.0003446676128078252], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.254076", "n_pass": [462, 128, 61], "n_token": 46, "loss": [1.076757788658142, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "blend_palette", "(", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 45, 1, 4, 9, 20, 23, 30, 27, 35, 43, 5, 6, 14, 2, 16, 33, 36, 3, 25, 28, 10, 19, 41]}}
{"prediction": {"error_location": 0.34069836139678955, "repair_targets": [], "repair_candidates": [0.02010420896112919, 0.06307947635650635, 0.03461376950144768, 0.03711462765932083, 0.0392780564725399, 0.018604803830385208, 0.02422751672565937, 0.36676231026649475, 0.0009364312281832099, 0.00936158373951912, 0.13470931351184845, 0.03197845071554184, 0.008550310507416725, 0.01731346733868122, 0.013743211515247822, 0.1336277723312378, 0.018218915909528732, 0.0005313134752213955, 0.013373978435993195, 0.006791738327592611, 0.0016068563563749194, 0.0007933508022688329, 0.004562919959425926, 0.00011553334479685873], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.318971", "n_pass": [466, 129, 62], "n_token": 44, "loss": [1.0352635383605957, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "if", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 43, 1, 4, 9, 18, 21, 28, 25, 33, 41, 5, 6, 12, 2, 14, 31, 34, 3, 23, 26, 10, 17, 39]}}
{"prediction": {"error_location": 0.3551327884197235, "repair_targets": [], "repair_candidates": [0.012020468711853027, 0.058544132858514786, 0.022266283631324768, 0.022702042013406754, 0.009732796810567379, 0.006118339952081442, 0.017730170860886574, 0.63847815990448, 0.002663347404450178, 0.008875112049281597, 0.024492772296071053, 0.024240270256996155, 0.00969532411545515, 0.0050431969575583935, 0.016164522618055344, 0.0935632735490799, 0.007883952930569649, 0.00014805160753894597, 0.007492573466151953, 0.00979212112724781, 0.0005763678927905858, 0.0004285551549401134, 0.0012362032430246472, 0.00011199399887118489], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.509715", "n_pass": [534, 132, 63], "n_token": 43, "loss": [0.9804155230522156, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "in", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [36, 42, 1, 4, 9, 18, 20, 27, 24, 32, 40, 5, 6, 12, 2, 14, 30, 33, 3, 22, 25, 10, 17, 38]}}
{"prediction": {"error_location": 0.37515518069267273, "repair_targets": [], "repair_candidates": [0.02265995740890503, 0.20460158586502075, 0.04459121823310852, 0.053016576915979385, 0.028325246647000313, 0.012318897992372513, 0.02651800960302353, 0.04265797510743141, 0.010134107433259487, 0.02815459482371807, 0.002190534258261323, 0.0015004653250798583, 0.272817462682724, 0.004248160868883133, 0.023403163999319077, 0.12410153448581696, 0.028473446145653725, 0.0002552286023274064, 0.02640063501894474, 0.03323905169963837, 0.0022991744335740805, 0.004117262549698353, 0.003725604387000203, 0.00025001863832585514], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.637092", "n_pass": [537, 134, 64], "n_token": 42, "loss": [1.1586031913757324, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", ")", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [35, 41, 1, 4, 9, 18, 20, 26, 23, 31, 39, 5, 6, 12, 2, 14, 29, 32, 3, 21, 24, 10, 17, 37]}}
{"prediction": {"error_location": 0.3139244019985199, "repair_targets": [], "repair_candidates": [0.021647565066814423, 0.5156452655792236, 0.07039080560207367, 0.02505057491362095, 0.03067008964717388, 0.017878388985991478, 0.014082787558436394, 0.07623836398124695, 0.05387382581830025, 0.032077133655548096, 0.0014519141986966133, 0.0008821965311653912, 0.0017983358120545745, 0.0011741947382688522, 0.010235757566988468, 0.08437422662973404, 0.013766836374998093, 0.0002312298456672579, 0.009872456081211567, 0.01298200897872448, 0.0022295659873634577, 0.001693502301350236, 0.0013569529401138425, 0.0003960136091336608], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.700487", "n_pass": [539, 135, 65], "n_token": 41, "loss": [1.3174026012420654, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "[", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [34, 40, 1, 4, 9, 18, 20, 25, 22, 30, 38, 5, 6, 12, 2, 14, 28, 31, 3, 21, 23, 10, 17, 36]}}
{"prediction": {"error_location": 0.2678300440311432, "repair_targets": [], "repair_candidates": [0.031266115605831146, 0.6113641858100891, 0.036464884877204895, 0.04419747740030289, 0.01605045609176159, 0.015012122690677643, 0.026311827823519707, 0.05100633576512337, 0.01986067369580269, 0.028319725766777992, 0.0015973561676219106, 0.002096792683005333, 0.003189719980582595, 0.017524104565382004, 0.0019439636962488294, 0.01784973219037056, 0.024363523349165916, 0.00046608143020421267, 0.014444970525801182, 0.025979574769735336, 0.0060387770645320415, 0.003241312224417925, 0.000503593182656914, 0.0009067724458873272], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.763868", "n_pass": [542, 136, 66], "n_token": 40, "loss": [0.8564627766609192, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", "]", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 39, 1, 4, 9, 18, 20, 24, 22, 29, 37, 5, 6, 12, 2, 14, 27, 30, 3, 21, 23, 10, 17, 35]}}
{"prediction": {"error_location": 0.4246615469455719, "repair_targets": [], "repair_candidates": [0.03420037776231766, 0.3940333127975464, 0.06772993505001068, 0.059930991381406784, 0.0425758995115757, 0.04194631427526474, 0.029673496261239052, 0.05545750632882118, 0.06912005692720413, 0.060814693570137024, 0.0038836151361465454, 0.003682257840409875, 0.0035901283845305443, 6.530382233904675e-05, 0.00016688427422195673, 0.0013718149857595563, 0.036703404039144516, 0.0020674928091466427, 0.015213306993246078, 0.04556502401828766, 0.026037678122520447, 0.002693658461794257, 0.0015589139657095075, 0.0019179104128852487], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.828134", "n_pass": [544, 137, 67], "n_token": 39, "loss": [0.9738996028900146, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "#INDENT#", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [32, 38, 1, 4, 9, 18, 20, 24, 22, 28, 36, 5, 6, 12, 2, 14, 26, 29, 3, 21, 23, 10, 17, 34]}}
{"prediction": {"error_location": 0.37760767340660095, "repair_targets": [], "repair_candidates": [0.04238792881369591, 0.2325083166360855, 0.08881407231092453, 0.04525795206427574, 0.03889991715550423, 0.04881386086344719, 0.0646311566233635, 0.06683522462844849, 0.066815085709095, 0.07749879360198975, 0.004649623762816191, 0.005423414520919323, 0.006154787726700306, 7.800862658768892e-05, 0.00044846604578197, 0.00911854300647974, 0.07258863747119904, 0.004174012690782547, 0.01973099261522293, 0.07466787844896317, 0.023360855877399445, 0.00275247311219573, 0.0023531029000878334, 0.0020368117839097977], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:18.954338", "n_pass": [547, 139, 68], "n_token": 38, "loss": [0.9090856909751892, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "+", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 37, 1, 4, 9, 18, 20, 24, 22, 27, 35, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 33]}}
{"prediction": {"error_location": 0.40289247035980225, "repair_targets": [], "repair_candidates": [0.06957978010177612, 0.14428414404392242, 0.10672859102487564, 0.011109776794910431, 0.0107156066223979, 0.010917354375123978, 0.11873374879360199, 0.10793038457632065, 0.014926922507584095, 0.041333071887493134, 0.0019164116820320487, 0.017972683534026146, 0.01793098822236061, 0.00015503383474424481, 0.001453177072107792, 0.006082780193537474, 0.25213712453842163, 0.01379902008920908, 0.019248630851507187, 0.011974461376667023, 0.0059350403025746346, 0.008312415331602097, 0.006290864199399948, 0.0005320320487953722], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.017855", "n_pass": [550, 140, 69], "n_token": 37, "loss": [1.0407919883728027, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "#UNINDENT#", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 36, 1, 4, 9, 18, 20, 24, 22, 27, 34, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 32]}}
{"prediction": {"error_location": 0.3531748354434967, "repair_targets": [], "repair_candidates": [0.030384104698896408, 0.05661024525761604, 0.11404715478420258, 0.004151998087763786, 0.008172650821506977, 0.011498773470520973, 0.07111473381519318, 0.06469667702913284, 0.01392734982073307, 0.026455169543623924, 0.0013579067308455706, 0.011658101342618465, 0.012389336712658405, 0.0001227570464834571, 0.0016662533162161708, 0.342642605304718, 0.20405584573745728, 0.005175318103283644, 0.0053716725669801235, 0.003312718356028199, 0.0028645629063248634, 0.004865878261625767, 0.003067614044994116, 0.0003905834455508739], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.082006", "n_pass": [551, 141, 70], "n_token": 36, "loss": [1.0385050773620605, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", ",", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 35, 1, 4, 9, 18, 20, 24, 22, 27, 33, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 31]}}
{"prediction": {"error_location": 0.35398343205451965, "repair_targets": [], "repair_candidates": [0.052764490246772766, 0.04847712814807892, 0.08764056861400604, 0.006530760787427425, 0.012214260175824165, 0.026271574199199677, 0.08685407787561417, 0.1043180450797081, 0.07039664685726166, 0.032926321029663086, 0.002890730043873191, 0.014532104134559631, 0.015652820467948914, 0.00012720520317088813, 0.0009443812305107713, 0.02040824294090271, 0.3457625210285187, 0.0007838736055418849, 0.018976207822561264, 0.0014956346713006496, 0.005007821135222912, 0.03407645970582962, 0.008796737529337406, 0.0021513039246201515], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.144989", "n_pass": [553, 142, 71], "n_token": 35, "loss": [0.5295201539993286, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "(", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 34, 1, 4, 9, 18, 20, 24, 22, 27, 32, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 30]}}
{"prediction": {"error_location": 0.5888875126838684, "repair_targets": [], "repair_candidates": [0.05100752040743828, 0.09027974307537079, 0.07071920484304428, 0.0043465630151331425, 0.02898414433002472, 0.04089312255382538, 0.06917749345302582, 0.17915137112140656, 0.1697259545326233, 0.060327641665935516, 0.004949680529534817, 0.006003696471452713, 0.006609794218093157, 0.00011136269313283265, 0.001783081330358982, 0.003845795290544629, 0.12431872636079788, 0.0026456485502421856, 0.012586272321641445, 0.0014909119345247746, 0.002713593887165189, 0.0619879849255085, 0.0049646953120827675, 0.0013760844012722373], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.208356", "n_pass": [555, 143, 72], "n_token": 34, "loss": [0.6389282941818237, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "return", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 33, 1, 4, 9, 18, 20, 24, 22, 27, 31, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 30]}}
{"prediction": {"error_location": 0.5278578400611877, "repair_targets": [], "repair_candidates": [0.06747220456600189, 0.09904509782791138, 0.07904624193906784, 0.006632362026721239, 0.051608502864837646, 0.07547220587730408, 0.049557898193597794, 0.06619741767644882, 0.2152489274740219, 0.05599399656057358, 0.002211533021181822, 0.010445808060467243, 0.011170354671776295, 0.0003051985113415867, 0.002142774872481823, 0.007044197525829077, 0.1315881907939911, 0.0030750627629458904, 0.007653483655303717, 0.0035506964195519686, 0.014331776648759842, 0.032947491854429245, 0.0045778946951031685, 0.0026806993409991264], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.271085", "n_pass": [557, 144, 73], "n_token": 33, "loss": [0.18370425701141357, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "color_palette", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 32, 1, 4, 9, 18, 20, 24, 22, 27, 31, 5, 6, 12, 2, 14, 26, 28, 3, 21, 23, 10, 17, 30]}}
{"prediction": {"error_location": 0.8321819305419922, "repair_targets": [], "repair_candidates": [0.05212162062525749, 0.0689021497964859, 0.036574240773916245, 0.006752138491719961, 0.054892316460609436, 0.05312653258442879, 0.06580539047718048, 0.20607048273086548, 0.2065044343471527, 0.0580538809299469, 0.0035404865629971027, 0.008444501087069511, 0.00810930971056223, 0.00013672518252860755, 0.008527923375368118, 0.0004581976681947708, 0.12339775264263153, 0.0008000870002433658, 0.013010185211896896, 3.3595715649425983e-05, 0.003372735343873501, 0.013987213373184204, 0.0031722586136311293, 0.004205857403576374], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.335250", "n_pass": [566, 145, 74], "n_token": 32, "loss": [0.9396663308143616, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "(", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 31, 1, 4, 8, 17, 19, 23, 21, 26, 30, 5, 6, 11, 2, 13, 25, 27, 3, 20, 22, 9, 16, 29]}}
{"prediction": {"error_location": 0.390758216381073, "repair_targets": [], "repair_candidates": [0.01108251977711916, 0.13766904175281525, 0.01437239907681942, 0.0019216554937884212, 0.04550647735595703, 0.08149749040603638, 0.01077190600335598, 0.05121397599577904, 0.5847453474998474, 0.03431204333901405, 0.004302602726966143, 0.001831415924243629, 0.0015958406729623675, 3.162009306834079e-05, 7.432419806718826e-05, 0.0006071923999115825, 0.0068430607207119465, 0.0001741445012157783, 7.296438707271591e-05, 3.0245259949879255e-06, 0.003516496391966939, 0.004799417220056057, 0.0009116409928537905, 0.0021433220244944096], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.398242", "n_pass": [567, 146, 75], "n_token": 31, "loss": [0.2099364548921585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "=", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 30, 1, 4, 7, 16, 18, 22, 20, 25, 29, 5, 6, 10, 2, 12, 24, 26, 3, 19, 21, 8, 15, 28]}}
{"prediction": {"error_location": 0.8106357455253601, "repair_targets": [], "repair_candidates": [0.024889430031180382, 0.07615114003419876, 0.005293196067214012, 0.010219598188996315, 0.013827660121023655, 0.0427563413977623, 0.0195612832903862, 0.029641317203640938, 0.5816255807876587, 0.05293264240026474, 0.002839077729731798, 0.004630273673683405, 0.003449038602411747, 0.004726930055767298, 0.03147910535335541, 0.015973465517163277, 0.044273052364587784, 0.00016058780602179468, 0.020074838772416115, 1.107534899347229e-05, 0.005004958249628544, 0.005305471830070019, 0.0021750160958617926, 0.0029988784808665514], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.461193", "n_pass": [570, 147, 76], "n_token": 30, "loss": [0.23307588696479797, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", ",", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 29, 1, 4, 7, 15, 17, 21, 19, 24, 28, 5, 6, 9, 2, 11, 23, 25, 3, 18, 20, 8, 14, 27]}}
{"prediction": {"error_location": 0.7920935153961182, "repair_targets": [], "repair_candidates": [0.029110467061400414, 9.134464926319197e-05, 0.00562853692099452, 0.01874428056180477, 0.011424166150391102, 0.011160489171743393, 0.019804487004876137, 0.00981450267136097, 0.32130685448646545, 0.043026555329561234, 0.01256866566836834, 0.04736306518316269, 0.04223456233739853, 0.009578961879014969, 0.13765719532966614, 0.02671518363058567, 0.20345646142959595, 0.0004449289699550718, 0.0301302969455719, 2.8688977181445807e-05, 0.006804026663303375, 0.005068575032055378, 0.0036960013676434755, 0.004141668789088726], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.524825", "n_pass": [572, 148, 77], "n_token": 29, "loss": [0.10296764224767685, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", "n_colors", ",", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 28, 1, 4, 7, 14, 16, 20, 18, 23, 27, 5, 6, 9, 2, 10, 22, 24, 3, 17, 19, 8, 13, 26]}}
{"prediction": {"error_location": 0.9021561741828918, "repair_targets": [], "repair_candidates": [0.03991240635514259, 0.0002506058372091502, 0.012853245250880718, 0.017723919823765755, 0.024075815454125404, 0.020092101767659187, 0.020845850929617882, 0.019679147750139236, 0.10881424695253372, 0.06369508057832718, 0.012934759259223938, 0.04860052838921547, 0.039473190903663635, 0.0070174941793084145, 0.2206810563802719, 0.05197378993034363, 0.2561047673225403, 0.0009479356231167912, 0.005397515837103128, 4.0635059121996164e-05, 0.011789967305958271, 0.006040845066308975, 0.004459903575479984, 0.0065951175056397915], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.589229", "n_pass": [574, 149, 78], "n_token": 28, "loss": [0.004061426967382431, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", "n_colors", "as_cmap", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 27, 1, 4, 7, 13, 15, 19, 17, 22, 26, 5, 6, 9, 2, 10, 21, 23, 3, 16, 18, 8, 12, 25]}}
{"prediction": {"error_location": 0.9959469437599182, "repair_targets": [], "repair_candidates": [0.1542433351278305, 0.013739438727498055, 0.018537631258368492, 0.047488387674093246, 0.05420404300093651, 0.05230085924267769, 0.04778037220239639, 0.06374098360538483, 0.05382201820611954, 0.003937813453376293, 0.2069585919380188, 0.05608110502362251, 0.03455745056271553, 0.0062132179737091064, 0.014797470532357693, 0.0034880125895142555, 0.03719429671764374, 0.008107243105769157, 0.004239717964082956, 0.0007327619241550565, 0.033721502870321274, 0.049055516719818115, 0.014845692552626133, 0.020212525501847267], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.651571", "n_pass": [575, 150, 79], "n_token": 27, "loss": [0.00817358773201704, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", "n_colors", "cmap", "name", "(", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 26, 1, 4, 7, 12, 14, 18, 16, 21, 25, 5, 6, 9, 2, 10, 20, 22, 3, 15, 17, 8, 11, 24]}}
{"prediction": {"error_location": 0.9918596148490906, "repair_targets": [], "repair_candidates": [0.15386901795864105, 0.01828109100461006, 0.01193220540881157, 0.03635641559958458, 0.04516470059752464, 0.04329501464962959, 0.03748032823204994, 0.05799965187907219, 0.11082442849874496, 0.005614392925053835, 0.20203797519207, 0.04336888715624809, 0.029339035972952843, 0.002938270103186369, 0.030025022104382515, 0.003103135619312525, 0.0646025612950325, 0.014010472223162651, 0.0028583183884620667, 0.000602320593316108, 0.024384845048189163, 0.03792249783873558, 0.009552293457090855, 0.01443715114146471], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.714335", "n_pass": [578, 151, 80], "n_token": 26, "loss": [0.018383830785751343, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", "n_colors", "cmap", "name", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", ":", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 25, 1, 4, 7, 12, 13, 17, 15, 20, 24, 5, 6, 9, 2, 10, 19, 21, 3, 14, 16, 8, 11, 23]}}
{"prediction": {"error_location": 0.9817842245101929, "repair_targets": [], "repair_candidates": [0.21077899634838104, 0.036391038447618484, 0.016124995425343513, 0.05331103131175041, 0.05863332748413086, 0.05552740395069122, 0.04955053701996803, 0.06486136466264725, 0.046832550317049026, 0.010616455227136612, 0.07070637494325638, 0.03886164724826813, 0.04028983414173126, 0.005492150317877531, 0.016728011891245842, 0.009752306155860424, 0.08436840772628784, 0.02771121822297573, 0.002941426821053028, 0.0013389356900006533, 0.027166204527020454, 0.04382697492837906, 0.012686588801443577, 0.015502134338021278], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:06:19.777180", "n_pass": [584, 152, 81], "n_token": 25, "loss": [0.0010599239030852914, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "name", "n_colors", "brewer_qual_pals", "name", "pal", "pal", "name", "cmap", "pal", "n_colors", "cmap", "name", "name", "brewer_qual_pals", "bins", "brewer_qual_pals", "name", "n_colors", "bins", "n_colors", "palette", "cmap", "bins", "palette"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 24, 1, 4, 7, 12, 13, 17, 15, 19, 23, 5, 6, 9, 2, 10, 18, 20, 3, 14, 16, 8, 11, 22]}}
{"prediction": {"error_location": 0.998940646648407, "repair_targets": [], "repair_candidates": [0.144523024559021, 0.06070375069975853, 0.02357071079313755, 0.04832320287823677, 0.06195010244846344, 0.05770544707775116, 0.044463176280260086, 0.05151588097214699, 0.05265705659985542, 0.034454308450222015, 0.04288996011018753, 0.03459655120968819, 0.036155909299850464, 0.014031747356057167, 0.02145816572010517, 0.014338153414428234, 0.030985422432422638, 0.03752278536558151, 0.022319376468658447, 0.03333660215139389, 0.040424056351184845, 0.039768390357494354, 0.01737811230123043, 0.03492814674973488], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'name', 'n_colors', 'brewer_qual_pals', 'name', 'pal', 'pal', 'name', 'cmap', 'pal', 'n_colors', 'cmap', 'name', 'name', 'brewer_qual_pals', 'bins', 'brewer_qual_pals', 'name', 'n_colors', 'bins', 'n_colors', 'palette', 'cmap', 'bins', 'palette']
