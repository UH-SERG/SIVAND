
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 101, 117, 160, 84, 140, 2, 16, 136, 147, 26, 51, 105, 121, 123], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "openstack/fuel-web/nailgun/nailgun/test/unit/test_migration_fuel_8_0.py", "license": "apache-2.0", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 298, "results": {"model": "transformer", "prob": {"loc": [[0.927422821521759, 3.984770046372432e-06, 4.206237008475e-06, 4.36066187603501e-08, 4.858762991943877e-08, 5.985940276787005e-08, 4.5150994054665716e-08, 3.9287428990064654e-06, 7.279496117007511e-08, 8.984658705912807e-08, 1.0907041314567323e-06, 1.728125198496855e-08, 3.804764503456681e-08, 2.721217917667218e-08, 5.646797944791615e-06, 3.840380813358024e-08, 0.0008831954328343272, 4.082126636717476e-08, 1.0996964050491442e-07, 1.242914748900148e-07, 1.4567972073109559e-07, 6.361398874332735e-08, 2.3604391117260093e-06, 5.8470089214779364e-08, 3.7044614487058425e-08, 2.5116992929952175e-08, 5.940417395322584e-06, 6.620674675161808e-09, 0.0005459982203319669, 3.533217807216715e-08, 1.8186335992709246e-08, 1.0460817989610405e-08, 3.5600888281805965e-07, 2.6940686126408764e-08, 0.006339285988360643, 1.753990552799678e-08, 8.539716134237096e-08, 4.050220425710904e-08, 1.6260049306993096e-08, 3.824279986019974e-07, 5.5509350005422675e-08, 2.8646916234720265e-06, 4.802505060297335e-08, 7.245807154276918e-08, 3.0459607387456344e-06, 1.88277660129188e-08, 3.078148438362405e-05, 6.190826695728902e-08, 6.45779465457963e-08, 8.269843476682581e-08, 2.1771839442408236e-08, 0.005797359626740217, 5.088250887297363e-08, 5.132669045337934e-08, 5.995070040398787e-08, 3.241712320800616e-08, 2.1007308248499612e-07, 3.697663331081458e-08, 7.242208084790036e-06, 7.6411225791162e-08, 8.87888376155388e-08, 7.160465997912979e-07, 1.4649333479610505e-07, 4.296062172670645e-08, 9.635105868710525e-08, 3.426772821057966e-08, 6.623456272336625e-08, 5.166920047372514e-08, 5.751708158641122e-07, 5.4389722947689734e-08, 6.720924261571781e-08, 1.3133751508576097e-06, 5.19297351786463e-08, 2.45493993134005e-07, 5.750828435679978e-08, 1.9739735535040381e-07, 3.5369208717384026e-07, 3.2352406265090394e-07, 1.3848853086528834e-07, 6.707196575916896e-08, 2.803847465315812e-08, 1.207576971751223e-08, 1.2599229215481955e-08, 3.392778324950996e-08, 2.326624780835118e-06, 2.7113948419810185e-08, 5.3362236940301955e-05, 8.352799341082573e-08, 1.7087348425093296e-08, 2.0097110109418281e-07, 3.512001285344013e-07, 1.773127564774768e-07, 3.48535316163634e-08, 6.044317615305772e-07, 5.207658887229627e-06, 7.110514616215369e-06, 2.1637430336340913e-07, 3.177478191673799e-08, 2.0120315014082735e-07, 1.8311972098672413e-06, 4.4617590333473345e-07, 0.020450733602046967, 4.795971335624927e-07, 1.7811946406709467e-07, 6.214526706571633e-07, 4.142304533161223e-06, 3.9283872155237987e-08, 4.5371479018285754e-08, 2.1034843200595787e-08, 1.0612008338739543e-07, 3.8188474604794465e-08, 9.964287528418936e-08, 3.3287574296991806e-07, 3.2511508152310853e-07, 1.5521344209901144e-07, 2.480871330590162e-07, 2.9361183351284126e-06, 0.0032015175092965364, 5.629046881949762e-07, 4.062328429199624e-08, 4.542709461929917e-07, 3.811027227129671e-07, 5.415691006760426e-08, 0.001618728507310152, 8.189226008425976e-08, 6.403873697991003e-08, 4.407874953926694e-08, 5.400033487035216e-08, 9.05438355403021e-08, 7.462906381761059e-08, 2.429271489745588e-06, 2.676926271760749e-07, 1.1877225603029729e-07, 6.93955598762841e-06, 1.2721906728074828e-07, 6.84261607375447e-08, 4.6272637632682745e-07, 4.3551256823093354e-08, 2.772905283165983e-08, 1.362967481099986e-07, 0.0003453242825344205, 8.560002129343047e-08, 0.000149301573401317, 7.890326969572925e-08, 1.1649942877056674e-07, 3.718605512403883e-08, 5.705421912693964e-08, 5.582432549999794e-06, 9.965655323185274e-08, 6.4341976191428785e-09, 4.693629307439551e-07, 0.0003010701038874686, 1.0691588414601938e-07, 8.712113776709884e-05, 3.736201392712246e-08, 2.6787805040839885e-07, 5.6247404955911406e-08, 3.1959800139702566e-08, 1.3854830740456237e-06, 5.8152220816509725e-08, 0.0326116718351841, 8.458307121372854e-08, 8.143080094669131e-07, 2.534371219553577e-07, 6.879440661577974e-08, 3.3771303264984454e-07, 5.014287296489783e-08, 1.2765494830091484e-06, 1.1272123146000013e-07, 1.2273079619262717e-07, 4.066053406859282e-06, 4.754309657073463e-08, 6.734893304383149e-06, 6.449091216609304e-08, 7.399026458188018e-08, 7.332351259492498e-08, 7.82477371785717e-08, 5.173795898372191e-07, 8.284241914680024e-08, 8.123839734253124e-08, 6.415427122874462e-08, 2.162627943391726e-08, 2.1847144182629563e-07, 1.0175147480140367e-07, 3.578923860914074e-05, 1.7174139088638185e-07, 2.0717074278309155e-07, 4.841099325858522e-06, 6.698110723846185e-07, 2.1343662126582785e-07, 2.943698120816407e-07, 1.0158527885550939e-07, 9.252233468259874e-08, 1.9686193297729915e-07, 1.154213691734185e-06, 1.5424926402829442e-07, 1.0329983268775322e-07, 6.140731443338154e-07, 4.987417767665647e-08, 1.4855986592010595e-06, 1.1645899888890199e-07, 1.5479243131721887e-07, 3.872762874834734e-07, 8.561476079194108e-07, 3.870754596846382e-07, 2.5217954657819064e-07, 7.932064249871473e-08, 2.9866789930110826e-08, 1.8784088240408892e-07]], "pointer": [[0.0, 0.0, 0.04585627466440201, 0.0, 0.0, 0.0, 0.0, 0.22593317925930023, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05309390276670456, 0.0, 0.10243970900774002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07030738890171051, 0.0, 0.005508772563189268, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010503388475626707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0007946813711896539, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13057827949523926, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0003467004280537367, 0.0, 0.0, 0.0, 0.01029010210186243, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01370399259030819, 0.0, 0.0, 0.0, 0.07528867572546005, 0.0, 0.0025282055139541626, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0015797074884176254, 0.0, 0.0, 0.0, 0.011027678847312927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.24858558177947998, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0010867518140003085, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.07534570246934891, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:10:12.097431", "n_pass": [1, 1, 1], "n_token": 209, "loss": [0.07534570246934891, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 101, 117, 160, 84, 140, 2, 16, 136, 147, 26, 51, 105, 121, 123]}}
{"prediction": {"error_location": 0.927422821521759, "repair_targets": [], "repair_candidates": [0.04585627466440201, 0.22593317925930023, 0.05309390276670456, 0.10243970900774002, 0.07030738890171051, 0.005508772563189268, 0.0010503388475626707, 0.0007946813711896539, 0.13057827949523926, 0.0003467004280537367, 0.01029010210186243, 0.01370399259030819, 0.07528867572546005, 0.0025282055139541626, 0.0015797074884176254, 0.011027678847312927, 0.24858558177947998, 0.0010867518140003085], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.175515", "n_pass": [22, 2, 2], "n_token": 183, "loss": [0.05617882311344147, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":", "str", "(", "uuid", ".", "uuid4", "(", ")", ")", ",", "#NEWLINE#", "'mac'", ":", "'00:00:00:00:00:00'", ",", "#NEWLINE#", "'timestamp'", ":", "datetime", ".", "now", "(", ")", ",", "#NEWLINE#", "#UNINDENT#", "}", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.9453702569007874, "repair_targets": [], "repair_candidates": [0.07355433702468872, 0.2765448987483978, 0.062304671853780746, 0.055720485746860504, 0.19881831109523773, 0.0017371629364788532, 0.0005997848929837346, 0.0014981107087805867, 0.06067347899079323, 0.00011283744970569387, 0.023030363023281097, 0.0012438290286809206, 0.09448989480733871, 0.014440497383475304, 0.0017943467246368527, 0.0004565743147395551, 0.13254979252815247, 0.0004306164919398725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.248793", "n_pass": [26, 3, 3], "n_token": 156, "loss": [0.06271199882030487, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "'wrong_error_type'", ",", "#NEWLINE#", "'uuid'", ":"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.9392138123512268, "repair_targets": [], "repair_candidates": [0.09225454926490784, 0.21891218423843384, 0.06425642967224121, 0.08429305255413055, 0.16503089666366577, 0.00228824932128191, 0.0011192781385034323, 0.0005943794385530055, 0.09488009661436081, 5.683898052666336e-05, 0.013634900562465191, 0.000840569322463125, 0.05188886821269989, 0.00388884823769331, 0.0019822516478598118, 0.013533471152186394, 0.19017072021961212, 0.0003745609719771892], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.320677", "n_pass": [56, 4, 4], "n_token": 143, "loss": [0.07223320752382278, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "meta", ".", "tables", "[", "'nodes'", "]", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 28, 14, 34, 75, 91, 134, 58, 114, 2, 16, 110, 121, 26, 51, 79, 95, 97]}}
{"prediction": {"error_location": 0.9303138852119446, "repair_targets": [], "repair_candidates": [0.07706625014543533, 0.23699001967906952, 0.06371453404426575, 0.07440173625946045, 0.144810289144516, 0.0028161073569208384, 0.00211995467543602, 0.0003942964831367135, 0.09863743931055069, 6.32054143352434e-05, 0.011412421241402626, 0.00100059958640486, 0.042760107666254044, 0.002932327799499035, 0.0018378979293629527, 0.016494745388627052, 0.2211301624774933, 0.0014178756391629577], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.389473", "n_pass": [92, 5, 5], "n_token": 137, "loss": [0.0725410208106041, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 69, 85, 128, 52, 108, 2, 16, 104, 115, 20, 45, 73, 89, 91]}}
{"prediction": {"error_location": 0.9300277233123779, "repair_targets": [], "repair_candidates": [0.04700047895312309, 0.33626747131347656, 0.12799301743507385, 0.004164915066212416, 0.29050782322883606, 0.001363289193250239, 0.0053418525494635105, 0.0003300390671938658, 0.034565411508083344, 0.00021012757497373968, 0.007560431491583586, 0.0017274119891226292, 0.034671299159526825, 0.0071487706154584885, 0.0005101673305034637, 0.0004548656870611012, 0.09216037392616272, 0.008022301830351353], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.457814", "n_pass": [95, 6, 6], "n_token": 131, "loss": [0.07293519377708435, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", ",", "#NEWLINE#", "'status'", ":", "'error'", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 63, 79, 122, 46, 102, 2, 16, 98, 109, 20, 39, 67, 83, 85]}}
{"prediction": {"error_location": 0.9296610951423645, "repair_targets": [], "repair_candidates": [0.03277723118662834, 0.37849876284599304, 0.1323898732662201, 0.0028881763573735952, 0.26486366987228394, 0.0009410684579052031, 0.0045588961802423, 0.0004907078691758215, 0.09063645452260971, 8.582916052546352e-05, 0.01286399643868208, 0.0004686308093369007, 0.022322414442896843, 0.005092465318739414, 0.0007014701841399074, 0.0013043220387771726, 0.040442340075969696, 0.008673741482198238], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.523378", "n_pass": [96, 7, 7], "n_token": 125, "loss": [0.06755808740854263, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "db", ".", "execute", "(", "sa", ".", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 57, 73, 116, 40, 96, 2, 16, 92, 103, 20, 33, 61, 77, 79]}}
{"prediction": {"error_location": 0.934673547744751, "repair_targets": [], "repair_candidates": [0.021579017862677574, 0.42616310715675354, 0.13929232954978943, 0.0031203683465719223, 0.12774215638637543, 0.0005459195817820728, 0.003152203978970647, 0.0005156004917807877, 0.1440916210412979, 0.0002856724022421986, 0.0173935666680336, 0.0003063809417653829, 0.07226020842790604, 0.006939636077731848, 0.0017935625510290265, 0.004499621223658323, 0.026297012344002724, 0.004021979868412018], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.589000", "n_pass": [99, 8, 8], "n_token": 119, "loss": [0.0926457941532135, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "select", "(", "[", "sa", ".", "func", ".", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 51, 67, 110, 40, 90, 2, 16, 86, 97, 20, 33, 55, 71, 73]}}
{"prediction": {"error_location": 0.9115158915519714, "repair_targets": [], "repair_candidates": [0.014252359047532082, 0.37391579151153564, 0.07712385058403015, 0.0006295379134826362, 0.07423579692840576, 0.003629552898928523, 0.0063715409487485886, 0.0005291553097777069, 0.24645352363586426, 0.00012189330300316215, 0.016067326068878174, 0.00014029271551407874, 0.04385695978999138, 0.001951044425368309, 0.0010369145311415195, 0.09388112276792526, 0.03962709382176399, 0.00617630360648036], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.654804", "n_pass": [100, 9, 9], "n_token": 112, "loss": [0.10532300919294357, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ")", "]", ")", ".", "where", "(", "sa", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 44, 60, 103, 40, 83, 2, 16, 79, 90, 20, 33, 48, 64, 66]}}
{"prediction": {"error_location": 0.9000334739685059, "repair_targets": [], "repair_candidates": [0.024058625102043152, 0.41421645879745483, 0.06146605312824249, 0.0022621487732976675, 0.08988448977470398, 0.0035919032525271177, 0.00493200495839119, 0.0004896767786704004, 0.1533275693655014, 4.964684194419533e-05, 0.0090628731995821, 2.5372970412718132e-05, 0.022503666579723358, 0.0024889525957405567, 0.0008502593846060336, 0.15912199020385742, 0.04575842618942261, 0.00590992858633399], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.721787", "n_pass": [102, 10, 10], "n_token": 105, "loss": [0.05890743061900139, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", ")", ".", "fetchone", "(", ")", "[", "0", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 44, 53, 96, 40, 76, 2, 16, 72, 83, 20, 33, 48, 57, 59]}}
{"prediction": {"error_location": 0.9427939057350159, "repair_targets": [], "repair_candidates": [0.02988317795097828, 0.5862029790878296, 0.10961408913135529, 0.0035319989547133446, 0.1436925083398819, 0.004858166910707951, 0.0023309828247874975, 0.00039242091588675976, 0.042928729206323624, 3.3059528504963964e-05, 0.01213150192052126, 2.806913835229352e-05, 0.03276030346751213, 0.002929994836449623, 0.0008492344641126692, 0.0003949461388401687, 0.025012051686644554, 0.00242582056671381], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.786707", "n_pass": [105, 11, 11], "n_token": 98, "loss": [0.07628367841243744, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "{", "#NEWLINE#", "#INDENT#", "'name'", ":", "'node1'", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 44, 53, 89, 40, 69, 2, 16, 65, 76, 20, 33, 48, 57, 59]}}
{"prediction": {"error_location": 0.9265532493591309, "repair_targets": [], "repair_candidates": [0.018081799149513245, 0.6678193211555481, 0.09414368122816086, 0.0026580740232020617, 0.0948832556605339, 0.004579334985464811, 0.0029956609942018986, 0.00031685249996371567, 0.04452907666563988, 5.1208211516495794e-05, 0.021317994222044945, 1.720863838272635e-05, 0.029004346579313278, 0.0013926494866609573, 0.001272380817681551, 0.00047809825628064573, 0.014759959653019905, 0.0016991939628496766], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:12.915488", "n_pass": [110, 13, 12], "n_token": 91, "loss": [0.07727120071649551, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 14, 28, 44, 53, 89, 40, 69, 2, 16, 65, 76, 20, 33, 48, 57, 59]}}
{"prediction": {"error_location": 0.9256385564804077, "repair_targets": [], "repair_candidates": [0.01480051502585411, 0.6769997477531433, 0.09413561224937439, 0.0021058893762528896, 0.09876063466072083, 0.00444655679166317, 0.003331457730382681, 0.00029155806987546384, 0.04639234393835068, 8.91220843186602e-05, 0.014678509905934334, 3.200635183020495e-05, 0.026027215644717216, 0.0009669512510299683, 0.0009049391373991966, 0.0004177173541393131, 0.011857740581035614, 0.0037614197935909033], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.048380", "n_pass": [154, 15, 13], "n_token": 88, "loss": [0.03214193135499954, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", "(", "'discover'", ",", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 19, 11, 25, 41, 50, 86, 37, 66, 2, 13, 62, 73, 17, 30, 45, 54, 56]}}
{"prediction": {"error_location": 0.9683688879013062, "repair_targets": [], "repair_candidates": [0.029905810952186584, 0.38888269662857056, 0.12313154339790344, 0.0027546784840524197, 0.17680370807647705, 0.005692638456821442, 0.006721706595271826, 0.0006855682004243135, 0.17549675703048706, 0.00020572637731675059, 0.016802411526441574, 7.5806601671502e-05, 0.037165217101573944, 0.0010634998325258493, 0.0029987741727381945, 0.003014820395037532, 0.022653302177786827, 0.005945335607975721], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.112731", "n_pass": [156, 16, 14], "n_token": 85, "loss": [0.04517119750380516, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 22, 38, 47, 83, 34, 63, 2, 10, 59, 70, 14, 27, 42, 51, 53]}}
{"prediction": {"error_location": 0.9558336138725281, "repair_targets": [], "repair_candidates": [0.017732728272676468, 0.14677903056144714, 0.045996684581041336, 0.0028297577518969774, 0.20694765448570251, 0.005099430214613676, 0.004101266618818045, 0.0005180668085813522, 0.4156443476676941, 7.294193346751854e-05, 0.02895943634212017, 2.5782528609852307e-05, 0.029926490038633347, 0.002274792641401291, 0.003709775162860751, 0.05224771052598953, 0.03490058332681656, 0.0022334912791848183], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.180315", "n_pass": [161, 17, 15], "n_token": 82, "loss": [0.22260181605815887, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "#NEWLINE#", "'error_type'", ":", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 35, 44, 80, 31, 60, 2, 10, 56, 67, 14, 24, 39, 48, 50]}}
{"prediction": {"error_location": 0.800433337688446, "repair_targets": [], "repair_candidates": [0.030184248462319374, 0.25050774216651917, 0.0520043782889843, 0.009654464200139046, 0.06067392975091934, 0.013122446835041046, 0.00023155019152909517, 4.473661465453915e-05, 0.3147260248661041, 2.1468302293214947e-05, 0.013821326196193695, 3.0267219699453562e-05, 0.022759586572647095, 0.016607265919446945, 0.004651592578738928, 0.1227233037352562, 0.08488771319389343, 0.0033479537814855576], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.244551", "n_pass": [163, 18, 16], "n_token": 79, "loss": [0.33998313546180725, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#UNINDENT#", "}", ")", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 32, 41, 77, 28, 57, 2, 10, 53, 64, 14, 21, 36, 45, 47]}}
{"prediction": {"error_location": 0.7117824554443359, "repair_targets": [], "repair_candidates": [0.012718874029815197, 0.6997466683387756, 0.011997884139418602, 0.0034585127141326666, 0.021686941385269165, 0.012420013546943665, 0.0005483105778694153, 1.0561057933955453e-05, 0.11687710881233215, 1.4687009752378799e-05, 0.008366452530026436, 3.849867425742559e-05, 0.007603037171065807, 0.0050228978507220745, 0.0012115647550672293, 0.046631038188934326, 0.049545902758836746, 0.0021009964402765036], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.309437", "n_pass": [165, 19, 17], "n_token": 76, "loss": [0.2538827359676361, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", ".", "c", ".", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 74, 25, 54, 2, 10, 50, 61, 14, 21, 33, 42, 44]}}
{"prediction": {"error_location": 0.775782585144043, "repair_targets": [], "repair_candidates": [0.012190340086817741, 0.47662919759750366, 0.014223544858396053, 0.0035079186782240868, 0.03607407584786415, 0.01040716003626585, 0.0003499553131405264, 2.4820563339744695e-05, 0.22551178932189941, 1.767493085935712e-05, 0.009684945456683636, 4.484849705477245e-05, 0.010185313411056995, 0.0061096129938960075, 0.0011735651642084122, 0.15523673593997955, 0.036221932619810104, 0.0024066290352493525], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.440060", "n_pass": [171, 21, 18], "n_token": 73, "loss": [0.9514650702476501, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", ")", ")", ")", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 71, 25, 51, 2, 10, 47, 58, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.3861747682094574, "repair_targets": [], "repair_candidates": [0.0047621349804103374, 0.09200256317853928, 0.026154065504670143, 0.0014261642936617136, 0.01893068104982376, 0.018175985664129257, 0.01222167443484068, 2.5202252800227143e-05, 0.013354821130633354, 4.420845016284147e-06, 0.002196601592004299, 0.7914220690727234, 0.0009631797438487411, 6.494631088571623e-05, 0.00034866397618316114, 0.002648258348926902, 0.01455747615545988, 0.000741036725230515], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.503927", "n_pass": [173, 22, 19], "n_token": 70, "loss": [0.8663637638092041, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "1", ")", "#NEWLINE#", "#UNINDENT#", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 68, 25, 48, 2, 10, 44, 55, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.4204776883125305, "repair_targets": [], "repair_candidates": [0.00569540960714221, 0.09850809723138809, 0.040453825145959854, 0.0025203402619808912, 0.01896391622722149, 0.039951592683792114, 0.030690986663103104, 6.03170738031622e-05, 0.028797755017876625, 3.4138218325097114e-05, 0.003504179883748293, 0.7069052457809448, 0.001660241512581706, 0.0001265527680516243, 0.0006535840220749378, 0.002194677945226431, 0.01654430478811264, 0.0027348201256245375], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.568181", "n_pass": [176, 23, 20], "n_token": 66, "loss": [0.6688103079795837, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "(", "DataError", ",", "'invalid input value for enum node_error_type'", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 64, 25, 48, 2, 10, 44, 51, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.5123176574707031, "repair_targets": [], "repair_candidates": [0.004362462088465691, 0.21663330495357513, 0.06707140058279037, 0.0017651306698098779, 0.0465974435210228, 0.07733592391014099, 0.046796828508377075, 0.00022621409152634442, 0.03292230889201164, 0.0001707902702037245, 0.007113022264093161, 0.47072532773017883, 0.004188562743365765, 0.0004119004588574171, 0.0003426590410526842, 0.0007706491742283106, 0.016236236318945885, 0.006329827010631561], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.631931", "n_pass": [178, 24, 21], "n_token": 62, "loss": [0.9857078790664673, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", ")", ":", "#NEWLINE#", "#INDENT#", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 60, 25, 48, 2, 10, 44, 51, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.3731749951839447, "repair_targets": [], "repair_candidates": [0.0017174758249893785, 0.09147204458713531, 0.11378337442874908, 0.0010082999942824244, 0.01930404268205166, 0.031470902264118195, 0.035175930708646774, 0.0002070785267278552, 0.035684458911418915, 0.4909314811229706, 0.008156880736351013, 0.11941489577293396, 0.0026404401287436485, 0.00026450963923707604, 0.000251036457484588, 0.00040092371637001634, 0.011719896458089352, 0.03639634698629379], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.697809", "n_pass": [179, 25, 22], "n_token": 58, "loss": [0.5876218676567078, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "insert_table_row", "(", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 56, 25, 48, 2, 10, 44, 51, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.5556471347808838, "repair_targets": [], "repair_candidates": [0.0072441790252923965, 0.338390976190567, 0.07543215900659561, 0.0037704994902014732, 0.0687340572476387, 0.1547817587852478, 0.08176055550575256, 0.00037911057006567717, 0.001323483302257955, 0.00012400902051012963, 0.006555251777172089, 0.23566415905952454, 0.006618164945393801, 0.0003245519765187055, 0.0004621406551450491, 2.3504770069848746e-05, 0.01683025062084198, 0.001581133808940649], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.827751", "n_pass": [234, 27, 23], "n_token": 56, "loss": [0.9968026876449585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_node_error_type_enum(", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 8, 19, 29, 38, 54, 25, 48, 2, 10, 44, 51, 14, 21, 33, 39, 41]}}
{"prediction": {"error_location": 0.3690575063228607, "repair_targets": [], "repair_candidates": [0.0016360052395612001, 0.16012701392173767, 0.14207600057125092, 0.0006172870635055006, 0.011470796540379524, 0.05566912889480591, 0.06016675382852554, 0.0001535927876830101, 0.013724302873015404, 0.20699603855609894, 0.0058736661449074745, 0.33160465955734253, 0.002334181685000658, 0.0003448770730756223, 7.008563989074901e-05, 0.00012501381570473313, 0.0044213696382939816, 0.0025892548728734255], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.892515", "n_pass": [236, 28, 24], "n_token": 55, "loss": [0.3582914471626282, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#INDENT#", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 15, 7, 18, 28, 37, 53, 24, 47, 1, 9, 43, 50, 13, 20, 32, 38, 40]}}
{"prediction": {"error_location": 0.6988692879676819, "repair_targets": [], "repair_candidates": [0.23341985046863556, 0.13492433726787567, 0.10678549110889435, 0.02282102033495903, 0.08123864233493805, 0.22184576094150543, 0.11568278074264526, 0.00026650429936125875, 0.002599349245429039, 0.01661388762295246, 0.013288749381899834, 0.04066631570458412, 0.0028231090400367975, 0.0001706938783172518, 0.00015922592137940228, 1.6804327970021404e-05, 0.006386134773492813, 0.0002912906347773969], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:13.958578", "n_pass": [238, 29, 25], "n_token": 54, "loss": [0.19254057109355927, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "=", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 14, 6, 17, 27, 36, 52, 23, 46, 1, 8, 42, 49, 12, 19, 31, 37, 39]}}
{"prediction": {"error_location": 0.8248607516288757, "repair_targets": [], "repair_candidates": [0.1500026136636734, 0.08695566654205322, 0.10611794888973236, 0.019167017191648483, 0.16140753030776978, 0.2762804925441742, 0.1180860847234726, 0.002190602710470557, 0.003379467176273465, 0.008247719146311283, 0.031466878950595856, 0.02827388234436512, 0.002236016793176532, 8.242014155257493e-05, 0.00021186136291362345, 1.3868267160432879e-05, 0.005587379913777113, 0.0002925831940956414], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.022831", "n_pass": [240, 30, 26], "n_token": 53, "loss": [0.1956668347120285, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", ")", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 13, 5, 16, 26, 35, 51, 22, 45, 1, 7, 41, 48, 11, 18, 30, 36, 38]}}
{"prediction": {"error_location": 0.8222862482070923, "repair_targets": [], "repair_candidates": [0.08343885838985443, 0.18573245406150818, 0.09480668604373932, 0.007285027764737606, 0.1284695863723755, 0.3208968937397003, 0.07605677843093872, 0.011424648575484753, 0.0028522193897515535, 0.0031797054689377546, 0.06172241270542145, 0.020432865247130394, 0.001394552760757506, 3.355246371938847e-05, 0.00011767497198889032, 1.2117619007767644e-05, 0.001876114052720368, 0.00026787183014675975], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.087090", "n_pass": [241, 31, 27], "n_token": 52, "loss": [0.19646130502223969, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "#NEWLINE#", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 12, 4, 15, 25, 34, 50, 21, 44, 1, 6, 40, 47, 10, 17, 29, 35, 37]}}
{"prediction": {"error_location": 0.8216330409049988, "repair_targets": [], "repair_candidates": [0.052545830607414246, 0.07593788206577301, 0.23799601197242737, 0.007368401624262333, 0.10396251082420349, 0.3748716115951538, 0.020135274156928062, 0.017988603562116623, 0.0024298422504216433, 0.0022076121531426907, 0.06679864972829819, 0.03516148030757904, 0.0011785333044826984, 2.893533201131504e-05, 5.520717240869999e-05, 9.414177839062177e-06, 0.0011416060151532292, 0.00018252218433190137], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.150985", "n_pass": [242, 32, 28], "n_token": 51, "loss": [0.22714677453041077, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "=", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 11, 3, 14, 24, 33, 49, 20, 43, 1, 5, 39, 46, 9, 16, 28, 34, 36]}}
{"prediction": {"error_location": 0.7968037724494934, "repair_targets": [], "repair_candidates": [0.055620234459638596, 0.04547196626663208, 0.07119479775428772, 0.009793290868401527, 0.03044082410633564, 0.20586445927619934, 0.04424620419740677, 0.009071440435945988, 0.0016202542465180159, 0.004263740032911301, 0.016028011217713356, 0.5041167736053467, 0.0013571734307333827, 2.1525536794797517e-05, 2.7565685741137713e-05, 6.237409252207726e-06, 0.00065987667767331, 0.00019564061949495226], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.217624", "n_pass": [244, 33, 29], "n_token": 50, "loss": [0.09621177613735199, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", ".", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 10, 3, 13, 23, 32, 48, 19, 42, 1, 4, 38, 45, 8, 15, 27, 33, 35]}}
{"prediction": {"error_location": 0.9082715511322021, "repair_targets": [], "repair_candidates": [0.03259846940636635, 0.012957080267369747, 0.010526479221880436, 0.004248517565429211, 0.03530397638678551, 0.7379371523857117, 0.011580878868699074, 0.01711314171552658, 0.001003337325528264, 0.009477866813540459, 0.02025008574128151, 0.10524517297744751, 0.0010728572960942984, 5.4456137149827555e-05, 1.5628569599357434e-05, 1.1738236025848892e-05, 0.00011192743113497272, 0.0004913011216558516], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.281609", "n_pass": [246, 34, 30], "n_token": 49, "loss": [0.12424676865339279, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "#NEWLINE#", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 9, 3, 12, 22, 31, 47, 18, 41, 1, 4, 37, 44, 7, 14, 26, 32, 34]}}
{"prediction": {"error_location": 0.8831616640090942, "repair_targets": [], "repair_candidates": [0.058313217014074326, 0.06786200404167175, 0.016767384484410286, 0.017575880512595177, 0.08766860514879227, 0.5703161954879761, 0.02156422659754753, 0.013806101866066456, 0.0013107791310176253, 0.01310240663588047, 0.04846441373229027, 0.08060390502214432, 0.0014517804374918342, 0.00019481468189042062, 3.560831828508526e-05, 1.4779964658373501e-05, 0.00020199947175569832, 0.0007459319313056767], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.345604", "n_pass": [247, 35, 31], "n_token": 48, "loss": [0.2346896231174469, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "for", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 8, 3, 11, 21, 30, 46, 17, 40, 1, 4, 36, 43, 6, 13, 25, 31, 33]}}
{"prediction": {"error_location": 0.7908161878585815, "repair_targets": [], "repair_candidates": [0.027032731100916862, 0.0965268686413765, 0.008687702007591724, 0.006520682014524937, 0.04636821150779724, 0.6811081767082214, 0.010816620662808418, 0.007384131662547588, 0.0006688021239824593, 0.009993469342589378, 0.04348108917474747, 0.05969168618321419, 0.000968920299783349, 0.00019240754772908986, 1.143486861110432e-05, 5.9773710745503195e-06, 5.975020394544117e-05, 0.0004812425177078694], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.409732", "n_pass": [248, 36, 32], "n_token": 47, "loss": [0.7595033049583435, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "c", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 20, 29, 45, 16, 39, 1, 4, 35, 42, 5, 12, 24, 30, 32]}}
{"prediction": {"error_location": 0.46789875626564026, "repair_targets": [], "repair_candidates": [0.009113159030675888, 0.11191654205322266, 0.005252794828265905, 0.007324892096221447, 0.026187527924776077, 0.7569097876548767, 0.005592093802988529, 0.01692117564380169, 0.0006107232766225934, 0.0048970915377140045, 0.03197572007775307, 0.02277645654976368, 0.00016830726235639304, 0.00010112713789567351, 1.1310918125673197e-05, 1.073274916052469e-06, 7.015246956143528e-05, 0.0001700234570307657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.602844", "n_pass": [257, 39, 33], "n_token": 45, "loss": [0.8117057085037231, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "error_type", ".", "and_", "(", "(", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 20, 27, 43, 16, 37, 1, 4, 33, 40, 5, 12, 22, 28, 30]}}
{"prediction": {"error_location": 0.44409987330436707, "repair_targets": [], "repair_candidates": [0.0096040740609169, 0.179294615983963, 0.008980327285826206, 0.004602243658155203, 0.020760267972946167, 0.708284318447113, 0.007005694787949324, 0.007711473386734724, 0.0013812914257869124, 0.007238098885864019, 0.012190249748528004, 0.03230126574635506, 0.00029852089937776327, 7.021157944109291e-05, 1.5256067854352295e-05, 5.029336307416088e-07, 2.3351723939413205e-05, 0.00023837026674300432], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.731587", "n_pass": [260, 41, 34], "n_token": 43, "loss": [0.0734884962439537, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "==", "error_type", "]", "#NEWLINE#", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 20, 25, 41, 16, 35, 1, 4, 31, 38, 5, 12, 22, 26, 28]}}
{"prediction": {"error_location": 0.9291468262672424, "repair_targets": [], "repair_candidates": [0.06575126200914383, 0.03970044106245041, 0.02954438515007496, 0.06609678268432617, 0.03373157978057861, 0.24877722561359406, 0.06462357938289642, 0.004424147307872772, 0.020328402519226074, 0.058855537325143814, 0.0013129934668540955, 0.3463347554206848, 0.0028133688028901815, 0.00025615550111979246, 0.0011855976190418005, 1.1727804121619556e-05, 0.002535492181777954, 0.013716548681259155], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.795200", "n_pass": [263, 42, 35], "n_token": 41, "loss": [0.24979639053344727, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", ",", "#NEWLINE#", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "==", "error_type", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 20, 25, 39, 16, 33, 1, 4, 29, 36, 5, 12, 22, 26, 28]}}
{"prediction": {"error_location": 0.7789594531059265, "repair_targets": [], "repair_candidates": [0.043837256729602814, 0.046475984156131744, 0.03125418722629547, 0.04939884692430496, 0.03661584109067917, 0.5819588303565979, 0.029148489236831665, 0.006035082973539829, 0.00320907449349761, 0.03511965647339821, 0.0013098574709147215, 0.09226060658693314, 0.0021513181272894144, 0.007628841791301966, 0.026280377060174942, 1.7902415493153967e-05, 0.0030543855391442776, 0.004243500996381044], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:14.989055", "n_pass": [279, 45, 36], "n_token": 39, "loss": [0.7513457536697388, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "=", "count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "==", "error_type", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 18, 23, 37, 14, 31, 1, 4, 27, 34, 5, 12, 20, 24, 26]}}
{"prediction": {"error_location": 0.4717312455177307, "repair_targets": [], "repair_candidates": [0.019414791837334633, 0.20011480152606964, 0.062483206391334534, 0.041931141167879105, 0.005147434305399656, 0.5894197821617126, 0.016551608219742775, 0.0010579819791018963, 0.002005675109103322, 0.01967083476483822, 0.00028084867517463863, 0.02235870063304901, 0.00020003328972961754, 0.002387012355029583, 0.015669487416744232, 1.2295207852730528e-05, 0.000801520945969969, 0.0004928713897243142], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.053186", "n_pass": [281, 46, 37], "n_token": 37, "loss": [0.8166571259498596, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "==", "error_type", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 35, 14, 29, 1, 4, 25, 32, 5, 12, 18, 22, 24]}}
{"prediction": {"error_location": 0.44190648198127747, "repair_targets": [], "repair_candidates": [0.014004410244524479, 0.48371729254722595, 0.054413799196481705, 0.01526601705700159, 0.01343191135674715, 0.3342595100402832, 0.0162673257291317, 0.002225833712145686, 0.0001695640676189214, 0.002736651338636875, 0.0008126250468194485, 0.03213685005903244, 0.01326747052371502, 0.003272746689617634, 0.0074017527513206005, 0.0005198893486522138, 0.0024093673564493656, 0.003686938202008605], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.503818", "n_pass": [341, 53, 38], "n_token": 36, "loss": [0.46421241760253906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "(", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 34, 14, 28, 1, 4, 24, 31, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.6286299824714661, "repair_targets": [], "repair_candidates": [0.03177722170948982, 0.186998650431633, 0.06465756148099899, 0.024025779217481613, 0.05370708927512169, 0.41420844197273254, 0.022844620048999786, 0.01000513881444931, 0.001058634021319449, 0.009663634933531284, 0.013929011300206184, 0.03466947004199028, 0.029016822576522827, 0.07470914721488953, 0.014621058478951454, 0.002778514986857772, 0.0022459120955318213, 0.00908331573009491], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.692988", "n_pass": [345, 56, 39], "n_token": 35, "loss": [0.23823252320289612, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", ",", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 33, 14, 27, 1, 4, 24, 30, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.7880195379257202, "repair_targets": [], "repair_candidates": [0.07256335765123367, 0.137685164809227, 0.0148926367983222, 0.06657063215970993, 0.05118192359805107, 0.4185619652271271, 0.008401013910770416, 0.0044395881704986095, 0.09928583353757858, 0.0019609101582318544, 0.006723141297698021, 0.01848999597132206, 0.02190220169723034, 0.030244233086705208, 0.01997128687798977, 0.014428121969103813, 0.01073640026152134, 0.0019615255296230316], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.758505", "n_pass": [347, 57, 40], "n_token": 34, "loss": [0.297990083694458, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "with", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 32, 14, 27, 1, 4, 24, 29, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.7423087954521179, "repair_targets": [], "repair_candidates": [0.04960569366812706, 0.06366431713104248, 0.025011327117681503, 0.03293226659297943, 0.04679004102945328, 0.398415207862854, 0.011592480354011059, 0.004559628665447235, 0.12698514759540558, 0.004097536206245422, 0.008294104598462582, 0.035385504364967346, 0.03484418988227844, 0.048144228756427765, 0.031130075454711914, 0.07239359617233276, 0.003578115487471223, 0.0025766559410840273], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.822286", "n_pass": [348, 58, 41], "n_token": 33, "loss": [0.3513471782207489, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "assertRaisesRegexp", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 31, 14, 27, 1, 4, 24, 28, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.7037394046783447, "repair_targets": [], "repair_candidates": [0.04094165936112404, 0.057575859129428864, 0.05185426026582718, 0.0289500430226326, 0.05501621216535568, 0.34762001037597656, 0.019806237891316414, 0.0089213065803051, 0.11159198731184006, 0.021226853132247925, 0.011356662027537823, 0.06454609334468842, 0.05331413075327873, 0.06942570954561234, 0.017859863117337227, 0.029904577881097794, 0.005125075578689575, 0.004963415674865246], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:15.949074", "n_pass": [351, 60, 42], "n_token": 32, "loss": [0.4161582589149475, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 30, 14, 27, 1, 4, 24, 28, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.659575879573822, "repair_targets": [], "repair_candidates": [0.03333517536520958, 0.05287022888660431, 0.06252353638410568, 0.01927277073264122, 0.051229655742645264, 0.3645766079425812, 0.027182655408978462, 0.010100829415023327, 0.11692985147237778, 0.023942967876791954, 0.011923884972929955, 0.06045728176832199, 0.04751767963171005, 0.060563184320926666, 0.010741356760263443, 0.03754488378763199, 0.003481960855424404, 0.005805462598800659], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.014469", "n_pass": [353, 61, 43], "n_token": 31, "loss": [0.48735353350639343, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "in", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 3, 10, 16, 21, 30, 14, 27, 1, 4, 24, 28, 5, 12, 18, 22, 23]}}
{"prediction": {"error_location": 0.6142498850822449, "repair_targets": [], "repair_candidates": [0.029163209721446037, 0.12179555743932724, 0.047967251390218735, 0.013619567267596722, 0.04665585979819298, 0.35641035437583923, 0.014766708947718143, 0.007956675253808498, 0.05723407119512558, 0.01479464303702116, 0.015650561079382896, 0.06515277922153473, 0.06361425668001175, 0.07602700591087341, 0.0055251470766961575, 0.03261305391788483, 0.0014489939203485847, 0.029604332521557808], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.078826", "n_pass": [360, 62, 44], "n_token": 30, "loss": [0.6911071538925171, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", ":", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 9, 15, 20, 29, 13, 26, 1, 4, 23, 27, 5, 11, 17, 21, 22]}}
{"prediction": {"error_location": 0.5010210275650024, "repair_targets": [], "repair_candidates": [0.019452769309282303, 0.02323707565665245, 0.05857645347714424, 0.0071920533664524555, 0.03176414966583252, 0.6238186359405518, 0.005105586722493172, 0.017728222534060478, 0.02264334447681904, 0.0077671026811003685, 0.012170480564236641, 0.03659610450267792, 0.04300890117883682, 0.05426223203539848, 0.005681862123310566, 0.018005838617682457, 0.002254376420751214, 0.010734835639595985], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.142217", "n_pass": [362, 63, 45], "n_token": 29, "loss": [0.2927449941635132, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "(", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 8, 14, 19, 28, 12, 25, 1, 4, 22, 26, 5, 10, 16, 20, 21]}}
{"prediction": {"error_location": 0.7462124228477478, "repair_targets": [], "repair_candidates": [0.07436921447515488, 0.12691117823123932, 0.05990307033061981, 0.007479204796254635, 0.07183125615119934, 0.23048482835292816, 0.014481894671916962, 0.07250736653804779, 0.0439981184899807, 0.020352661609649658, 0.028640523552894592, 0.039600420743227005, 0.07200538367033005, 0.0900157243013382, 0.0020171061623841524, 0.02712804451584816, 0.001097214175388217, 0.01717684231698513], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.205826", "n_pass": [363, 64, 46], "n_token": 28, "loss": [0.3497988283634186, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", ",", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 13, 18, 27, 11, 24, 1, 4, 21, 25, 5, 9, 15, 19, 20]}}
{"prediction": {"error_location": 0.7048298716545105, "repair_targets": [], "repair_candidates": [0.07229429483413696, 0.07799559086561203, 0.06920472532510757, 0.05474726855754852, 0.029745599254965782, 0.12475758790969849, 0.008185637183487415, 0.025238538160920143, 0.08997476100921631, 0.008075721561908722, 0.041039664298295975, 0.036151476204395294, 0.11408261209726334, 0.16789929568767548, 0.026529528200626373, 0.03188031539320946, 0.011901862919330597, 0.010295553132891655], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.271201", "n_pass": [365, 65, 47], "n_token": 27, "loss": [0.26871201395988464, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "#NEWLINE#", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 12, 17, 26, 10, 23, 1, 4, 20, 24, 5, 8, 14, 18, 19]}}
{"prediction": {"error_location": 0.7643633484840393, "repair_targets": [], "repair_candidates": [0.11437297612428665, 0.414544016122818, 0.0223311185836792, 0.002622931031510234, 0.02418210357427597, 0.04202333837747574, 0.003506723092868924, 0.049737486988306046, 0.045091189444065094, 0.002180825686082244, 0.028588855639100075, 0.009382113814353943, 0.08506710082292557, 0.13929946720600128, 0.0018255083123221993, 0.010778638534247875, 0.0008807299309410155, 0.003584803780540824], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.334505", "n_pass": [367, 66, 48], "n_token": 26, "loss": [0.16394656896591187, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "(", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 11, 16, 25, 9, 22, 1, 4, 19, 23, 5, 8, 13, 17, 18]}}
{"prediction": {"error_location": 0.8487874269485474, "repair_targets": [], "repair_candidates": [0.039243269711732864, 0.41367024183273315, 0.03586254268884659, 0.00028896055300720036, 0.017534738406538963, 0.05194631218910217, 0.03264455497264862, 0.11001403629779816, 0.14846062660217285, 0.026659119874238968, 0.010329008102416992, 0.01444991584867239, 0.019989654421806335, 0.02297915704548359, 1.3826529539073817e-05, 0.049313683062791824, 2.1562023903243244e-05, 0.006578800734132528], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.398514", "n_pass": [369, 67, 49], "n_token": 25, "loss": [0.13623520731925964, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", ".", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 15, 24, 9, 21, 1, 4, 18, 22, 5, 8, 12, 16, 17]}}
{"prediction": {"error_location": 0.8726373910903931, "repair_targets": [], "repair_candidates": [0.023366771638393402, 0.06796669214963913, 0.07894687354564667, 0.00022873831039760262, 0.030928142368793488, 0.11210006475448608, 0.13004189729690552, 0.0773884728550911, 0.05316031724214554, 0.1880621761083603, 0.01635095104575157, 0.08882078528404236, 0.021978454664349556, 0.020281530916690826, 1.4772587746847421e-05, 0.07397579401731491, 4.5930887608847115e-06, 0.016382986679673195], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.462205", "n_pass": [371, 68, 50], "n_token": 24, "loss": [0.1027262806892395, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", ".", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 14, 23, 9, 20, 1, 4, 17, 21, 5, 8, 11, 15, 16]}}
{"prediction": {"error_location": 0.9023738503456116, "repair_targets": [], "repair_candidates": [0.02784576639533043, 0.10957273840904236, 0.10217268019914627, 0.0005065431469120085, 0.11510201543569565, 0.043565843254327774, 0.08995670080184937, 0.02254541590809822, 0.04686673730611801, 0.19138284027576447, 0.020998360589146614, 0.08028771728277206, 0.02610832266509533, 0.011292897164821625, 3.339963222970255e-05, 0.09362465143203735, 1.5860732673900202e-05, 0.018121477216482162], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.527966", "n_pass": [373, 69, 51], "n_token": 23, "loss": [0.11168832331895828, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "and_", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 13, 22, 9, 19, 1, 4, 16, 20, 5, 8, 11, 14, 15]}}
{"prediction": {"error_location": 0.8943228721618652, "repair_targets": [], "repair_candidates": [0.044498685747385025, 0.1749899983406067, 0.19633252918720245, 0.004482197109609842, 0.03100563772022724, 0.14014361798763275, 0.07418182492256165, 0.06870487332344055, 0.04072442650794983, 0.04611295461654663, 0.06077634170651436, 0.01611098274588585, 0.01576829142868519, 0.014964321628212929, 0.0002495280932635069, 0.0584099255502224, 0.000269243580987677, 0.012274609878659248], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.591322", "n_pass": [374, 70, 52], "n_token": 22, "loss": [0.10706853121519089, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", ".", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 12, 21, 9, 18, 1, 4, 15, 19, 5, 8, 11, 13, 14]}}
{"prediction": {"error_location": 0.8984642028808594, "repair_targets": [], "repair_candidates": [0.037848424166440964, 0.18087492883205414, 0.087185800075531, 0.004866132978349924, 0.03959015756845474, 0.23059363663196564, 0.07233411818742752, 0.08634256571531296, 0.03927897289395332, 0.041392263025045395, 0.0808490514755249, 0.027986081317067146, 0.016271982342004776, 0.01914559118449688, 0.0002353025192860514, 0.024731241166591644, 0.00020798748300876468, 0.010265675373375416], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.655572", "n_pass": [379, 71, 53], "n_token": 21, "loss": [0.20225515961647034, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "assertEqual", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 12, 20, 9, 17, 1, 4, 15, 18, 5, 8, 11, 13, 14]}}
{"prediction": {"error_location": 0.8168864846229553, "repair_targets": [], "repair_candidates": [0.012917396612465382, 0.2717948257923126, 0.029986700043082237, 0.00044901881483383477, 0.019012613222002983, 0.21057546138763428, 0.028814278542995453, 0.02944333106279373, 0.03041161224246025, 0.02055993862450123, 0.05694205313920975, 0.07956138998270035, 0.11364772915840149, 0.07544812560081482, 1.839609831222333e-05, 0.01716255210340023, 1.1300761798338499e-05, 0.0032433317974209785], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.718997", "n_pass": [380, 72, 54], "n_token": 20, "loss": [0.019782505929470062, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", "self", ".", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 12, 19, 9, 16, 1, 4, 15, 17, 5, 8, 11, 13, 14]}}
{"prediction": {"error_location": 0.9804120063781738, "repair_targets": [], "repair_candidates": [0.08781449496746063, 0.2381269633769989, 0.07045397907495499, 0.005901966709643602, 0.03979766368865967, 0.16384455561637878, 0.04959475249052048, 0.06684394925832748, 0.045439012348651886, 0.031432051211595535, 0.0590139701962471, 0.02613096684217453, 0.04224954545497894, 0.03337033838033676, 0.0002521896385587752, 0.028329655528068542, 0.00010546718840487301, 0.011298544704914093], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:10:16.784359", "n_pass": [383, 73, 55], "n_token": 19, "loss": [0.00666241766884923, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "added_error_types", "nodes_table", "self", "error_type", "added_error_types", "nodes_table", "error_type", "inserted_count", "nodes_table", "error_type", "nodes_table", "error_type", "error_type", "self", "inserted_count", "self", "nodes_table"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 3, 7, 10, 12, 18, 9, 16, 1, 4, 15, 17, 5, 8, 11, 13, 14]}}
{"prediction": {"error_location": 0.9933597445487976, "repair_targets": [], "repair_candidates": [0.15940293669700623, 0.2738476097583771, 0.02762525901198387, 0.010878928005695343, 0.03961557522416115, 0.18413981795310974, 0.024962449446320534, 0.07063425332307816, 0.033726152032613754, 0.015707949176430702, 0.05548768863081932, 0.011999860405921936, 0.04033459722995758, 0.03648555651307106, 0.0007562518585473299, 0.007206301670521498, 0.00034839424188248813, 0.006840487476438284], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'added_error_types', 'nodes_table', 'self', 'error_type', 'added_error_types', 'nodes_table', 'error_type', 'inserted_count', 'nodes_table', 'error_type', 'nodes_table', 'error_type', 'error_type', 'self', 'inserted_count', 'self', 'nodes_table']
