
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "entries", ")", "#NEWLINE#", "importConfigurationManifest", "(", "'wdrtest/manifests/imports/include_with_path.wdrc'", ",", "topology", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "len", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount", "+", "3", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [7, 22, 40, 18, 46, 2, 34], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "WDR/WDR/lib/tests/wdrtest/manifest.py", "license": "apache-2.0", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 1165, "results": {"model": "transformer", "prob": {"loc": [[0.9919703006744385, 3.815694981312845e-06, 2.924091404565843e-06, 1.0142240824961846e-08, 1.7226556181526576e-08, 2.7179968498103335e-08, 1.5711668410745006e-08, 1.1683071079460206e-06, 9.534898204321962e-09, 1.9774535342520494e-09, 2.3177948449415453e-08, 5.5164740331292705e-08, 3.285503424876879e-08, 1.6912451883399626e-08, 5.05932939631748e-06, 2.1230007973827014e-08, 1.4786627033913646e-08, 1.763130619281128e-08, 2.9466095838870388e-06, 1.7578747346647106e-09, 2.049406511162033e-08, 2.093960915772186e-08, 0.00014078369713388383, 4.083721307779342e-07, 7.3275097101088704e-09, 2.2930606746740523e-08, 3.0947564511052406e-08, 7.039896132710055e-08, 2.6786052487182133e-08, 2.749521499367802e-08, 1.4907831413779604e-08, 0.0028984558302909136, 3.420438332568665e-08, 9.318949878434069e-08, 2.7051794404542306e-07, 1.0634072822313101e-07, 1.5875903258688595e-08, 3.144055327197748e-08, 5.065059482944889e-08, 1.5478387638268032e-07, 0.0030219932086765766, 1.3178805602365173e-06, 3.7508314676415466e-08, 3.2175837105796745e-08, 3.669077131007725e-08, 9.779634524420544e-08, 0.0019435519352555275, 9.52345331484139e-08, 5.5930368034751154e-06, 7.338451979421734e-08, 5.187845175669281e-08]], "pointer": [[0.0, 0.0, 0.010157094337046146, 0.0, 0.0, 0.0, 0.0, 0.31649717688560486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6299722194671631, 0.0, 0.0, 0.0, 0.004019934684038162, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.003124566050246358, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00045254555880092084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.035776495933532715, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.008061845786869526, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:29:35.521974", "n_pass": [1, 1, 1], "n_token": 51, "loss": [0.008061845786869526, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "entries", ")", "#NEWLINE#", "importConfigurationManifest", "(", "'wdrtest/manifests/imports/include_with_path.wdrc'", ",", "topology", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "len", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount", "+", "3", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 40, 18, 46, 2, 34]}}
{"prediction": {"error_location": 0.9919703006744385, "repair_targets": [], "repair_candidates": [0.010157094337046146, 0.31649717688560486, 0.6299722194671631, 0.004019934684038162, 0.003124566050246358, 0.00045254555880092084, 0.035776495933532715], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:35.634377", "n_pass": [24, 3, 2], "n_token": 45, "loss": [0.0033764992840588093, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", ",", "topology", ")", "#NEWLINE#", "self", ".", "assertEquals", "(", "len", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount", "+", "3", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 34, 18, 40, 2, 28]}}
{"prediction": {"error_location": 0.9966291785240173, "repair_targets": [], "repair_candidates": [0.30898430943489075, 0.5098941922187805, 0.0928565040230751, 0.001081569236703217, 0.05817243084311485, 0.00030333371250890195, 0.02870769426226616], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:35.744070", "n_pass": [46, 5, 3], "n_token": 42, "loss": [0.0048807766288518906, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "assertEquals", "(", "len", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount", "+", "3", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 31, 18, 37, 2, 25]}}
{"prediction": {"error_location": 0.9951310157775879, "repair_targets": [], "repair_candidates": [0.33026620745658875, 0.5143778324127197, 0.06480284035205841, 0.004446506965905428, 0.05193941295146942, 0.0003730268217623234, 0.033794138580560684], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:35.799081", "n_pass": [48, 6, 4], "n_token": 39, "loss": [0.005059415474534035, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount", "+", "3", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 28, 18, 34, 2, 25]}}
{"prediction": {"error_location": 0.9949533343315125, "repair_targets": [], "repair_candidates": [0.26891034841537476, 0.5865221619606018, 0.05654089152812958, 0.0056717353872954845, 0.03695429116487503, 0.00012001046707155183, 0.0452805757522583], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:35.853529", "n_pass": [51, 7, 5], "n_token": 35, "loss": [0.057086970657110214, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 22, 28, 18, 34, 2, 25]}}
{"prediction": {"error_location": 0.9445118308067322, "repair_targets": [], "repair_candidates": [0.014009893871843815, 0.27187860012054443, 0.37115225195884705, 0.16901922225952148, 0.004206540063023567, 0.00025734142400324345, 0.16947616636753082], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:35.910636", "n_pass": [53, 8, 6], "n_token": 32, "loss": [0.22946545481681824, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", ")", ")", "#NEWLINE#", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 19, 25, 15, 31, 2, 22]}}
{"prediction": {"error_location": 0.7949584126472473, "repair_targets": [], "repair_candidates": [0.002906294073909521, 0.06942486017942429, 0.7762914896011353, 0.11717832088470459, 0.0019033729331567883, 0.0010130557930096984, 0.03128257021307945], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.073164", "n_pass": [57, 11, 7], "n_token": 29, "loss": [0.8128282427787781, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "'/Cell:%(cellName)s/VariableMap:/'", "%", "topology", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 16, 22, 12, 28, 2, 19]}}
{"prediction": {"error_location": 0.4436016380786896, "repair_targets": [], "repair_candidates": [0.10317374020814896, 0.007212821394205093, 0.3193786144256592, 0.0013086633989587426, 0.004579936619848013, 0.000287220609607175, 0.5640590190887451], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.182675", "n_pass": [66, 13, 8], "n_token": 26, "loss": [0.4338848292827606, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "getid1", "(", "(", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 19, 9, 25, 2, 16]}}
{"prediction": {"error_location": 0.6479868292808533, "repair_targets": [], "repair_candidates": [0.13145260512828827, 0.08763539791107178, 0.3901458978652954, 0.1484137922525406, 0.022999703884124756, 0.05398329347372055, 0.16536934673786163], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.239447", "n_pass": [74, 14, 9], "n_token": 23, "loss": [0.06055976822972298, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "variableCount", "=", "len", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 10, 16, 6, 22, 2, 13]}}
{"prediction": {"error_location": 0.9412378072738647, "repair_targets": [], "repair_candidates": [0.02740492671728134, 0.05825657770037651, 0.3989069163799286, 0.459824800491333, 0.008542594499886036, 0.04112841188907623, 0.005935854744166136], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.293982", "n_pass": [98, 15, 10], "n_token": 21, "loss": [0.03624783456325531, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "variableCount", "(", "cellVariables", ".", "#NEWLINE#", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 14, 6, 20, 2, 11]}}
{"prediction": {"error_location": 0.9644012451171875, "repair_targets": [], "repair_candidates": [0.1173335611820221, 0.35889795422554016, 0.12558592855930328, 0.25019514560699463, 0.03899336978793144, 0.08331955969333649, 0.025674523785710335], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.347966", "n_pass": [100, 16, 11], "n_token": 19, "loss": [0.05691051855683327, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", ".", "entries", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 12, 6, 18, 2, 9]}}
{"prediction": {"error_location": 0.9446786046028137, "repair_targets": [], "repair_candidates": [0.333988219499588, 0.07883524149656296, 0.04786441847681999, 0.1794840693473816, 0.2546418011188507, 0.10267375409603119, 0.002512561623007059], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.402282", "n_pass": [103, 17, 12], "n_token": 17, "loss": [0.025912780314683914, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", ")", ",", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 12, 6, 16, 2, 9]}}
{"prediction": {"error_location": 0.9744199514389038, "repair_targets": [], "repair_candidates": [0.011172665283083916, 0.06453166902065277, 0.013060737401247025, 0.1495046466588974, 0.018533721566200256, 0.7430245876312256, 0.00017188982747029513], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.456611", "n_pass": [104, 18, 13], "n_token": 15, "loss": [0.024815745651721954, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "#INDENT#", "cellVariables", "=", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 12, 6, 14, 2, 9]}}
{"prediction": {"error_location": 0.975489616394043, "repair_targets": [], "repair_candidates": [0.0007465165690518916, 0.03411749750375748, 0.0007210274925455451, 0.5639616250991821, 0.0016377069987356663, 0.39879631996154785, 1.9333374439156614e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.566673", "n_pass": [109, 20, 14], "n_token": 14, "loss": [0.010331718251109123, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def testIncludeWithPath(", "self", "cellVariables", "=", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 11, 5, 13, 2, 8]}}
{"prediction": {"error_location": 0.9897214770317078, "repair_targets": [], "repair_candidates": [0.00929192639887333, 0.2062201201915741, 0.021140331402420998, 0.490636944770813, 0.004483599215745926, 0.2652217745780945, 0.0030052729416638613], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.620635", "n_pass": [117, 21, 15], "n_token": 13, "loss": [0.01972067728638649, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "cellVariables", "=", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 10, 4, 12, 1, 7]}}
{"prediction": {"error_location": 0.9804725050926208, "repair_targets": [], "repair_candidates": [0.30033040046691895, 0.16305360198020935, 0.0557294599711895, 0.007544859778136015, 0.4731922149658203, 0.0001382989576086402, 1.1072744200646412e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.674826", "n_pass": [136, 22, 16], "n_token": 12, "loss": [0.05571553111076355, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "cellVariables", "variableCount", "(", "cellVariables", "self", ".", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 5, 9, 3, 11, 1, 6]}}
{"prediction": {"error_location": 0.9458082318305969, "repair_targets": [], "repair_candidates": [0.06047442927956581, 0.8598061203956604, 0.002506575081497431, 0.026675090193748474, 0.04711638018488884, 0.0034153801389038563, 6.023306013958063e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.728359", "n_pass": [137, 23, 17], "n_token": 11, "loss": [0.00018976318824570626, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "cellVariables", "variableCount", "cellVariables", "self", ".", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 8, 3, 10, 1, 5]}}
{"prediction": {"error_location": 0.9998103976249695, "repair_targets": [], "repair_candidates": [0.09162551909685135, 0.19501426815986633, 0.06211398169398308, 0.07046542316675186, 0.07097272574901581, 0.33049607276916504, 0.17931202054023743], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.782614", "n_pass": [140, 24, 18], "n_token": 10, "loss": [0.10149426013231277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "cellVariables", "variableCount", "cellVariables", "self", "(", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 7, 3, 9, 1, 5]}}
{"prediction": {"error_location": 0.9034862518310547, "repair_targets": [], "repair_candidates": [0.08544176071882248, 0.5875609517097473, 0.06250498443841934, 0.03848277032375336, 0.22161757946014404, 0.0033945441246032715, 0.0009974322747439146], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:29:36.836563", "n_pass": [141, 25, 19], "n_token": 9, "loss": [0.5934634208679199, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "cellVariables", "variableCount", "cellVariables", "self", "cellVariables", "(", "variableCount"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 4, 6, 3, 8, 1, 5]}}
{"prediction": {"error_location": 0.5524107217788696, "repair_targets": [], "repair_candidates": [0.5095250606536865, 0.2661972939968109, 0.029890447854995728, 0.03250160440802574, 0.1544911116361618, 0.007009838707745075, 0.00038460103678517044], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'cellVariables', 'variableCount', 'cellVariables', 'self', 'cellVariables', '(', 'variableCount']
