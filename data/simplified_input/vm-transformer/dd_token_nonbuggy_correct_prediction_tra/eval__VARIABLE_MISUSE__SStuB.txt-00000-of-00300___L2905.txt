
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int64", "(", "0", ")", "]", ")", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 49, 57, 71, 76, 91, 99], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "nipy/nitime/nitime/tests/test_timeseries.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2905, "results": {"model": "transformer", "prob": {"loc": [[0.8362597823143005, 2.2947901925363112e-06, 3.893200073434855e-08, 3.791860336832542e-08, 5.437020789145208e-08, 4.0479328333731246e-08, 3.658788472193919e-08, 4.134003361855321e-08, 7.5912857937510125e-06, 2.9260005973696934e-08, 8.804437179321667e-09, 2.7716984263292943e-08, 1.5566868682981294e-08, 1.6976024141968082e-07, 6.682774937871727e-07, 5.3634270358315916e-08, 4.175710799358967e-08, 4.151687704734286e-08, 2.55335976362403e-06, 9.786342403117487e-09, 8.441166876593797e-09, 3.7264854313434626e-08, 7.154653314245252e-09, 1.4020447736129427e-07, 1.3162154573365115e-05, 2.7045913952861156e-08, 1.7062589563465735e-08, 9.237641762638304e-09, 2.0328597472030197e-08, 0.013987056910991669, 4.179567625328673e-08, 3.313001428750795e-08, 1.6185037310378902e-08, 2.62871999723302e-08, 0.10105873644351959, 5.05708399600735e-08, 2.1329723765006747e-08, 1.181168300945501e-07, 4.0746574114791656e-08, 2.838102943769627e-07, 8.78673859006085e-07, 5.741487996147043e-08, 9.385804133899e-08, 1.0931461957852662e-07, 6.52742428997044e-08, 3.3074517347131405e-08, 1.2301917706736276e-08, 1.7458622991739503e-08, 3.5753336646848766e-07, 0.009398824535310268, 6.421959142244305e-07, 7.255719935983507e-08, 1.2665827853197698e-07, 3.594857744815272e-08, 7.34236920152398e-08, 9.781042642487137e-09, 3.0603709433307813e-07, 0.012192579917609692, 1.4009100368639338e-07, 5.215782294953897e-08, 1.532462903242049e-07, 6.452804512946386e-08, 4.298341309549869e-07, 3.210892316474201e-07, 4.1927581406753234e-08, 7.611271257701446e-08, 7.931365075819485e-08, 3.044666740947832e-08, 7.003011148754013e-08, 1.6729762464251507e-08, 3.5120784502851166e-08, 0.004006850998848677, 2.779895567073254e-07, 1.1426427448668619e-07, 5.4654151426802855e-08, 1.0907541536653298e-07, 0.007981115020811558, 1.752561047396739e-07, 1.5981815693066892e-07, 2.555855758146208e-07, 5.298707606016251e-08, 5.81690301260096e-07, 3.7210645587038016e-07, 1.1571707858593072e-07, 1.0018567309089121e-07, 5.4083912459645944e-08, 5.389196999772139e-08, 3.2546779493713984e-08, 2.3493013756592518e-08, 1.9772725678990355e-08, 2.1873590583254554e-07, 0.0017672242829576135, 3.0135075235193653e-07, 1.1288847190371598e-07, 3.825516614597291e-08, 2.2237562902205354e-08, 6.496744475725791e-08, 2.895808570713143e-08, 2.2754046824502439e-07, 0.013308367691934109, 9.103593612280747e-08, 5.963109970252845e-07, 2.641454557306133e-07, 4.9687962189182144e-08, 5.566451477534429e-07, 1.2104844699933892e-06, 1.7187093703796563e-07, 1.8530656120674394e-07, 4.0832642866917013e-07, 1.6572276706483535e-07]], "pointer": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5319201946258545, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04420741647481918, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07217478007078171, 0.0, 0.0, 0.0, 0.0, 0.07924516499042511, 0.0, 0.0, 0.0, 0.0, 0.0069967880845069885, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02949112467467785, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06222040578722954, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.01740080863237381, 0.0, 0.0, 0.0, 0.0, 0.03713707625865936, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03546421602368355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08374205976724625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.17881616950035095, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:08:04.846259", "n_pass": [1, 1, 1], "n_token": 110, "loss": [0.17881616950035095, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int64", "(", "0", ")", "]", ")", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 49, 57, 71, 76, 91, 99]}}
{"prediction": {"error_location": 0.8362597823143005, "repair_targets": [], "repair_candidates": [0.5319201946258545, 0.04420741647481918, 0.07217478007078171, 0.07924516499042511, 0.0069967880845069885, 0.02949112467467785, 0.06222040578722954, 0.01740080863237381, 0.03713707625865936, 0.03546421602368355, 0.08374205976724625], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:04.906807", "n_pass": [50, 2, 2], "n_token": 103, "loss": [0.25552672147750854, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int64", "(", "0", ")", "]", ")", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 42, 50, 64, 69, 84, 92]}}
{"prediction": {"error_location": 0.7745083570480347, "repair_targets": [], "repair_candidates": [0.5970123410224915, 0.03987245261669159, 0.10159455984830856, 0.04122757166624069, 0.004568306729197502, 0.02078865095973015, 0.04693828150629997, 0.006937306374311447, 0.030955137684941292, 0.006247262470424175, 0.10385812073945999], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:04.965699", "n_pass": [52, 3, 3], "n_token": 96, "loss": [0.28219887614250183, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", "#NEWLINE#", "assert", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 42, 50, 57, 62, 77, 85]}}
{"prediction": {"error_location": 0.7541237473487854, "repair_targets": [], "repair_candidates": [0.6245189309120178, 0.04287591204047203, 0.08484061062335968, 0.03707056865096092, 0.006291184574365616, 0.021588249132037163, 0.02407038025557995, 0.012598592787981033, 0.06091200187802315, 0.005782447289675474, 0.07945110648870468], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.022494", "n_pass": [55, 4, 4], "n_token": 89, "loss": [0.3641977608203888, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "int32", "(", "0", ")", "]", ")", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 42, 50, 57, 62, 70, 78]}}
{"prediction": {"error_location": 0.6947537660598755, "repair_targets": [], "repair_candidates": [0.7117717862129211, 0.021968940272927284, 0.1293688714504242, 0.02334202080965042, 0.006138437893241644, 0.015385407023131847, 0.027366066351532936, 0.001466727233491838, 0.009444680996239185, 0.012872553430497646, 0.04087447002530098], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.079039", "n_pass": [58, 5, 5], "n_token": 82, "loss": [0.3788347542285919, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", ":", "#NEWLINE#", "#INDENT#", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 24, 18, 29, 34, 42, 50, 57, 62, 70, 78]}}
{"prediction": {"error_location": 0.6846585869789124, "repair_targets": [], "repair_candidates": [0.7162005305290222, 0.01801268756389618, 0.13047118484973907, 0.02353011630475521, 0.0057252091355621815, 0.018223199993371964, 0.023588746786117554, 0.0009950876701623201, 0.009835691191256046, 0.01667318306863308, 0.03674439340829849], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.137367", "n_pass": [96, 6, 6], "n_token": 79, "loss": [0.10156221687793732, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "=", "list", "(", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 21, 15, 26, 31, 39, 47, 54, 59, 67, 75]}}
{"prediction": {"error_location": 0.9034250378608704, "repair_targets": [], "repair_candidates": [0.46648627519607544, 0.07305390387773514, 0.12164841592311859, 0.05346475541591644, 0.00829972606152296, 0.019449276849627495, 0.05152203515172005, 0.004802933894097805, 0.03126205503940582, 0.061429932713508606, 0.10858068615198135], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.195840", "n_pass": [98, 7, 7], "n_token": 76, "loss": [0.1199384555220604, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "range", "(", "10", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 18, 12, 23, 28, 36, 44, 51, 56, 64, 72]}}
{"prediction": {"error_location": 0.8869747519493103, "repair_targets": [], "repair_candidates": [0.09309355169534683, 0.14658305048942566, 0.1792622059583664, 0.09677668660879135, 0.03727596253156662, 0.06714104115962982, 0.10029582679271698, 0.010266792960464954, 0.040388401597738266, 0.11353041976690292, 0.11538608372211456], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.252551", "n_pass": [99, 8, 8], "n_token": 73, "loss": [0.07409308105707169, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", ")", ")", "#NEWLINE#", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 15, 9, 20, 25, 33, 41, 48, 53, 61, 69]}}
{"prediction": {"error_location": 0.9285851716995239, "repair_targets": [], "repair_candidates": [0.1659127026796341, 0.0740126371383667, 0.2992570698261261, 0.04108026623725891, 0.05381682142615318, 0.06124959513545036, 0.06786828488111496, 0.008599095046520233, 0.021886732429265976, 0.09560628235340118, 0.1107105240225792], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.308448", "n_pass": [100, 9, 9], "n_token": 70, "loss": [0.08920858800411224, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", ".", "TimeArray", "(", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 12, 6, 17, 22, 30, 38, 45, 50, 58, 66]}}
{"prediction": {"error_location": 0.914654552936554, "repair_targets": [], "repair_candidates": [0.1531900018453598, 0.056446779519319534, 0.3650512397289276, 0.042102210223674774, 0.05378372222185135, 0.07864681631326675, 0.04632977396249771, 0.003153326455503702, 0.011313279159367085, 0.10788232833147049, 0.08210049569606781], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.365851", "n_pass": [102, 10, 10], "n_token": 67, "loss": [0.13014519214630127, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 19, 27, 35, 42, 47, 55, 63]}}
{"prediction": {"error_location": 0.8779677748680115, "repair_targets": [], "repair_candidates": [0.31996920704841614, 0.01924431137740612, 0.43726208806037903, 0.021571103483438492, 0.010929815471172333, 0.06777045875787735, 0.03416913002729416, 0.0008921838016249239, 0.004431259818375111, 0.028225421905517578, 0.05553498491644859], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.422574", "n_pass": [105, 11, 11], "n_token": 64, "loss": [0.28010448813438416, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "np", ".", "int64", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 24, 32, 39, 44, 52, 60]}}
{"prediction": {"error_location": 0.7557047009468079, "repair_targets": [], "repair_candidates": [0.39155837893486023, 0.010849358513951302, 0.4646674394607544, 0.003028083825483918, 0.00303756189532578, 0.028343969956040382, 0.02374744787812233, 0.0014057590160518885, 0.004822822287678719, 0.012531007640063763, 0.056008126586675644], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.481101", "n_pass": [107, 12, 12], "n_token": 61, "loss": [0.33062881231307983, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 21, 29, 36, 41, 49, 57]}}
{"prediction": {"error_location": 0.7184717655181885, "repair_targets": [], "repair_candidates": [0.38285115361213684, 0.007938175462186337, 0.5059954524040222, 0.003894672729074955, 0.003892765613272786, 0.007431281264871359, 0.02391902171075344, 0.0017509753815829754, 0.003904628334566951, 0.013053372502326965, 0.045368440449237823], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.537745", "n_pass": [108, 13, 13], "n_token": 58, "loss": [0.8080652952194214, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 26, 33, 38, 46, 54]}}
{"prediction": {"error_location": 0.44571956992149353, "repair_targets": [], "repair_candidates": [0.46118080615997314, 0.0019361707381904125, 0.5171973705291748, 0.0006635674508288503, 0.00018309133884031326, 0.00012721784878522158, 0.005205738823860884, 0.0004353678959887475, 0.0016410081880167127, 0.0034943893551826477, 0.007935268804430962], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.594222", "n_pass": [110, 14, 14], "n_token": 54, "loss": [1.033320665359497, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "[", "0", "]", "==", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 34, 42, 50]}}
{"prediction": {"error_location": 0.3558233976364136, "repair_targets": [], "repair_candidates": [0.45308783650398254, 0.0006593128200620413, 0.5411518216133118, 0.0003999838372692466, 0.0001523743849247694, 6.384558946592733e-05, 0.00023619063722435385, 0.0002801020164042711, 0.00043596705654636025, 0.001282630953937769, 0.0022499116603285074], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.650667", "n_pass": [113, 15, 15], "n_token": 50, "loss": [1.2282114028930664, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", ")", "==", "repr", "(", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 30, 38, 46]}}
{"prediction": {"error_location": 0.29281583428382874, "repair_targets": [], "repair_candidates": [0.44219154119491577, 0.0008105052402243018, 0.5497568845748901, 0.0005701180780306458, 0.00016314719687215984, 3.695841587614268e-05, 0.00014267400547396392, 0.0018418878316879272, 0.002181102056056261, 0.0007826663786545396, 0.0015224919188767672], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.764981", "n_pass": [117, 17, 16], "n_token": 46, "loss": [1.051864743232727, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "int32", "(", "repr", "(", "b", "[", "0", "]", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 30, 38, 42]}}
{"prediction": {"error_location": 0.3492857813835144, "repair_targets": [], "repair_candidates": [0.4730483889579773, 0.001522956183180213, 0.5146469473838806, 0.0013432942796498537, 0.0005876154755242169, 0.00022569243446923792, 0.000558525905944407, 0.002389361150562763, 0.0033788627479225397, 0.0015002138679847121, 0.0007981725502759218], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.822272", "n_pass": [129, 18, 17], "n_token": 42, "loss": [1.0204386711120605, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "b", "[", "0", "]", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 30, 34, 38]}}
{"prediction": {"error_location": 0.3604367673397064, "repair_targets": [], "repair_candidates": [0.5316771268844604, 0.0024376714136451483, 0.44961488246917725, 0.0034262663684785366, 0.001511415932327509, 0.00025560639915056527, 0.0010007480159401894, 0.0025588369462639093, 0.00381947448477149, 0.002072727307677269, 0.001625184784643352], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.879924", "n_pass": [167, 19, 18], "n_token": 40, "loss": [1.2853187322616577, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "b", "[", "b", "[", "np", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 30, 34, 36]}}
{"prediction": {"error_location": 0.2765623927116394, "repair_targets": [], "repair_candidates": [0.5096457600593567, 0.0018831634661182761, 0.4745616912841797, 0.004691016860306263, 0.002020392334088683, 0.00011497086234157905, 0.00035201755235902965, 0.0008924081921577454, 0.0009553100680932403, 0.002678624354302883, 0.00220471085049212], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.935949", "n_pass": [169, 20, 19], "n_token": 38, "loss": [1.3971102237701416, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_index_int64(", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 9, 6, 14, 16, 18, 22, 29, 30, 34, 36]}}
{"prediction": {"error_location": 0.2473105937242508, "repair_targets": [], "repair_candidates": [0.5073970556259155, 0.002616066485643387, 0.4707874357700348, 0.006719258148223162, 0.003258300479501486, 0.00022103732044342905, 0.0005653829430229962, 0.0018191731069236994, 0.002539748325943947, 0.003551039844751358, 0.0005255714640952647], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:05.993424", "n_pass": [171, 21, 20], "n_token": 37, "loss": [1.4331508874893188, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "#NEWLINE#", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 8, 5, 13, 15, 17, 21, 28, 29, 33, 35]}}
{"prediction": {"error_location": 0.23855608701705933, "repair_targets": [], "repair_candidates": [0.7026301026344299, 0.00484738452360034, 0.2826979458332062, 0.0016169570153579116, 0.0008790278807282448, 6.28978741588071e-05, 0.000494430074468255, 0.0006029981304891407, 0.0007779997540637851, 0.0042390101589262486, 0.001151304692029953], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:06.160833", "n_pass": [174, 24, 21], "n_token": 36, "loss": [1.6311769485473633, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "#NEWLINE#", "assert", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 12, 14, 16, 20, 27, 28, 32, 34]}}
{"prediction": {"error_location": 0.19569912552833557, "repair_targets": [], "repair_candidates": [0.7765412926673889, 0.007821641862392426, 0.19661366939544678, 0.0069448137655854225, 0.0018402468413114548, 0.0001359337620669976, 0.000818597269244492, 0.0025975462049245834, 0.0024879788979887962, 0.002664965344592929, 0.0015333512565121055], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:06.441708", "n_pass": [186, 29, 22], "n_token": 34, "loss": [1.217319369316101, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "assert", "(", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 12, 14, 16, 20, 25, 26, 30, 32]}}
{"prediction": {"error_location": 0.2960226535797119, "repair_targets": [], "repair_candidates": [0.7997098565101624, 0.008445951156318188, 0.1630571037530899, 0.004739508964121342, 0.0017847750568762422, 0.0006550897378474474, 0.0032670937944203615, 0.005415343213826418, 0.008830724284052849, 0.0024266145192086697, 0.0016679769614711404], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:06.722296", "n_pass": [199, 34, 23], "n_token": 32, "loss": [1.0707879066467285, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "[", "b", "[", "0", "]", "b", "[", "np", ".", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 14, 18, 23, 24, 28, 30]}}
{"prediction": {"error_location": 0.3427383601665497, "repair_targets": [], "repair_candidates": [0.7487884163856506, 0.010378680191934109, 0.22168631851673126, 0.002400430617853999, 0.0020626005716621876, 0.001246314262971282, 0.004493739455938339, 0.0021876543760299683, 0.0036389362066984177, 0.0026296027936041355, 0.000487260491354391], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:07.116184", "n_pass": [247, 41, 24], "n_token": 31, "loss": [1.1069117784500122, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "b", "[", "0", "]", "b", "[", "np", ".", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 13, 17, 22, 23, 27, 29]}}
{"prediction": {"error_location": 0.3305782377719879, "repair_targets": [], "repair_candidates": [0.7291011810302734, 0.007921955548226833, 0.23962078988552094, 0.001391574158333242, 0.004533721599727869, 0.0027052254881709814, 0.00486986106261611, 0.0022313480731099844, 0.004427391104400158, 0.0022378661669790745, 0.0009590536938048899], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:07.228752", "n_pass": [250, 43, 25], "n_token": 30, "loss": [1.4636212587356567, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "b", "[", "]", "b", "[", "np", ".", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 13, 16, 21, 22, 26, 28]}}
{"prediction": {"error_location": 0.23139680922031403, "repair_targets": [], "repair_candidates": [0.7128727436065674, 0.0066401297226548195, 0.2611737847328186, 0.0010692182695493102, 0.003429333446547389, 0.003832153743132949, 0.0032713194377720356, 0.0019641220569610596, 0.003362972056493163, 0.0013411322142928839, 0.0010431219125166535], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:07.397472", "n_pass": [254, 46, 26], "n_token": 29, "loss": [1.2632949352264404, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "b", "[", "]", "b", "[", ".", "(", "b", "b", "[", "np", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 13, 16, 20, 21, 25, 27]}}
{"prediction": {"error_location": 0.2827209234237671, "repair_targets": [], "repair_candidates": [0.689701497554779, 0.007325558457523584, 0.28348973393440247, 0.0007438247557729483, 0.003176830243319273, 0.0041489433497190475, 0.003328756196424365, 0.001638564164750278, 0.0034121605567634106, 0.0016343892784789205, 0.0013997723581269383], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:07.623139", "n_pass": [260, 50, 27], "n_token": 28, "loss": [1.570702314376831, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "b", "[", "]", "b", "[", ".", "(", "b", "b", "[", ".", "b", "[", "b", "["]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 13, 16, 20, 21, 24, 26]}}
{"prediction": {"error_location": 0.20789912343025208, "repair_targets": [], "repair_candidates": [0.6564439535140991, 0.003327807877212763, 0.3342129588127136, 0.0003428045311011374, 0.0010832466650754213, 0.0014130058698356152, 0.0009522284381091595, 0.0006289519369602203, 0.0006082016625441611, 0.0007463471265509725, 0.0002404313418082893], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:07.791243", "n_pass": [265, 53, 28], "n_token": 27, "loss": [1.7241361141204834, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", ")", "#NEWLINE#", "b", "==", "b", "b", "[", "]", "b", "[", ".", "(", "b", "b", "[", ".", "b", "[", "b"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 10, 12, 13, 16, 20, 21, 24, 26]}}
{"prediction": {"error_location": 0.1783270239830017, "repair_targets": [], "repair_candidates": [0.6473965644836426, 0.002730795182287693, 0.34568530321121216, 0.00034949262044392526, 0.0007829722599126399, 0.0008464923012070358, 0.0008557618129998446, 0.00047637245734222233, 0.0003450759977567941, 0.0004333849938120693, 9.780831896932796e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:08.072756", "n_pass": [274, 58, 29], "n_token": 26, "loss": [1.0440092086791992, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", "#NEWLINE#", "b", "==", "b", "b", "[", "]", "b", "[", ".", "(", "b", "b", "[", ".", "b", "[", "b"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 9, 11, 12, 15, 19, 20, 23, 25]}}
{"prediction": {"error_location": 0.35204043984413147, "repair_targets": [], "repair_candidates": [0.6063345670700073, 0.009891444817185402, 0.37533849477767944, 0.0009360258118249476, 0.0013050276320427656, 0.0013421755284070969, 0.002615345176309347, 0.0007439788314513862, 0.00036128194187767804, 0.0010054261656478047, 0.00012623556540347636], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:08:08.299005", "n_pass": [281, 62, 30], "n_token": 25, "loss": [1.4428346157073975, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", ")", "'indexing with int64 should still return a valid TimeArray'", "a", "b", "=", "ts", "a", "#NEWLINE#", "b", "==", "b", "b", "[", "b", "[", ".", "(", "b", "b", "[", ".", "b", "[", "b"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 7, 4, 9, 11, 12, 14, 18, 19, 22, 24]}}
{"prediction": {"error_location": 0.23625710606575012, "repair_targets": [], "repair_candidates": [0.6564766764640808, 0.00731520215049386, 0.33392587304115295, 0.00013471976853907108, 0.00040000100852921605, 0.00034366585896350443, 0.00016455131117254496, 0.0005143815651535988, 0.00032925940467976034, 0.0003376611857675016, 5.8019391872221604e-05], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', ')', "'indexing with int64 should still return a valid TimeArray'", 'a', 'b', '=', 'ts', 'a', '#NEWLINE#', 'b', '==', 'b', 'b', '[', 'b', '[', '.', '(', 'b', 'b', '[', '.', 'b', '[', 'b']
