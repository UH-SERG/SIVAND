
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [250, 257, 263, 225, 259, 2, 13, 27, 41, 55, 69, 83, 97, 111, 214, 227, 230, 243, 252, 261], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "packages/psutil/test/test_psutil.py", "license": "bsd-3-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2356, "results": {"model": "transformer", "prob": {"loc": [[0.8198670744895935, 3.717436811712105e-07, 5.1909828471252695e-06, 6.885586767424456e-09, 9.588213778499721e-09, 1.2236783142327567e-08, 8.262751372001276e-09, 4.3456682696785265e-09, 6.723433898514486e-07, 2.976880519867109e-09, 3.83631171274601e-09, 4.469014047714381e-09, 3.4075464672156386e-09, 8.015623720325493e-09, 7.31199056858145e-09, 2.952137423406498e-09, 1.4224729838474559e-08, 6.446831685025245e-05, 7.415252412101836e-08, 5.332373476107932e-08, 5.130674551878656e-09, 4.716457890907577e-09, 0.00019049974798690528, 3.539142312547483e-08, 1.3055784897630929e-08, 7.552506176011775e-09, 3.728457542706565e-09, 7.677325442045912e-09, 9.151929880601983e-09, 1.9893564573436606e-09, 4.6165897771288655e-08, 4.788055957760662e-05, 7.932887768902219e-08, 4.659094443582035e-08, 5.272278169599076e-09, 5.726039198350463e-09, 0.00011827281559817493, 4.941243147982277e-08, 8.855989364064953e-08, 1.4349534893653981e-08, 4.196713199178248e-09, 6.158348053730833e-09, 1.374150571109567e-08, 2.8981204103217806e-09, 3.864544240173018e-08, 0.00023749783576931804, 1.6134900704400934e-07, 9.035861836537151e-08, 1.2808391680607656e-08, 3.3472026927938714e-08, 9.341786790173501e-05, 5.8327891849785374e-08, 5.506719968906282e-09, 1.1736616123414478e-08, 4.837892753073447e-09, 6.854687928381509e-09, 1.2191587295262707e-08, 2.7167121885440793e-09, 4.614468096519886e-08, 2.5226374418707564e-05, 1.3747212790349295e-07, 2.3445904773211623e-08, 7.1078720687012265e-09, 6.925152007397628e-09, 6.105146167101339e-05, 6.083539716428277e-08, 6.648510009199526e-08, 6.981463407385036e-09, 5.029710870019244e-09, 1.3901152229323088e-08, 7.735518003926245e-09, 2.815380373277776e-09, 1.916825311809589e-07, 0.00010361520253354684, 2.4130426368174085e-07, 7.076384633819544e-08, 1.5691256294303457e-08, 1.5739574976691983e-08, 6.851041689515114e-07, 5.6269769288519456e-08, 1.0242850123631797e-07, 2.7505940636274318e-08, 1.0947744932821024e-08, 2.262089182636373e-08, 1.8848728799980563e-08, 3.5250400376440894e-09, 3.441578755314367e-08, 5.2396779210539535e-05, 7.581839156500791e-08, 6.083934067646624e-08, 1.4544376369940437e-08, 1.339739963412967e-08, 7.62537238188088e-05, 7.97211257008712e-08, 1.7780921268695238e-07, 1.8103911259004235e-08, 1.6217162723819456e-08, 5.057804131070043e-08, 1.33843984784221e-08, 5.450335294199249e-09, 1.8855985217669513e-07, 0.00011472910409793258, 7.393506393782445e-07, 5.16104350367641e-08, 3.580928620294799e-08, 2.556608436066199e-08, 2.800051515805535e-05, 9.131116485150415e-08, 3.6409296910733246e-08, 4.6879758741624755e-08, 2.4778691098958916e-08, 4.309533352397921e-08, 2.781541752483463e-08, 6.1269251894202625e-09, 1.8765500442441407e-07, 7.84453222877346e-05, 2.3896492962194316e-07, 1.433531906513963e-07, 3.045204621798803e-08, 1.1698995905362608e-07, 0.0003338452079333365, 1.0685133844390293e-07, 1.459815468507486e-08, 3.29959881639752e-08, 4.985472301655136e-08, 1.849844544210555e-08, 5.701912186850677e-08, 0.0002808471617754549, 1.0955813678492632e-07, 1.59768891450085e-08, 1.0439743647339128e-07, 8.447527477528638e-08, 1.6793146428994987e-08, 2.228085271838154e-08, 0.00024391093757003546, 3.0797846051200395e-08, 1.1409937883399834e-08, 8.824627428793974e-08, 3.243924948037602e-05, 8.05965711947465e-08, 5.136884695389199e-08, 2.04743120235662e-08, 9.69669926575989e-08, 2.397217002680918e-08, 2.6216131487899474e-08, 0.0008235431159846485, 2.5188640506712545e-08, 1.2923631942385327e-08, 4.0625412367489844e-08, 5.686385338776745e-05, 7.028256732155569e-08, 9.245126442181117e-09, 5.710205996933837e-08, 1.241941731677798e-07, 1.4209272869436518e-08, 2.8776426574950165e-08, 0.00032629151246510446, 4.330445690925444e-08, 6.465079582795852e-09, 4.371283068849152e-08, 8.262830669991672e-05, 1.3239895224614884e-07, 6.609794667156166e-08, 2.820907596401412e-08, 1.2997389831070905e-07, 3.357676447990343e-08, 2.657458431087889e-08, 0.0009112143889069557, 2.6943537179136e-08, 5.265665237175199e-09, 3.003437711868173e-07, 0.0001936132030095905, 9.461747652039776e-08, 3.526608693960043e-08, 3.375939527927585e-08, 3.897089015936217e-07, 7.463467710522309e-08, 2.6239941774974795e-08, 0.0010523030068725348, 1.4748501087069599e-08, 5.092922528149302e-09, 5.8459541207867005e-08, 0.00010801870666909963, 1.2111527780689357e-07, 4.5368487633368204e-08, 5.700760041804642e-08, 3.419702636620059e-07, 4.052093771633736e-08, 7.436469218191633e-08, 0.00048257262096740305, 3.703828710399648e-08, 8.528322936740551e-09, 2.2513541253488256e-08, 0.0002558023261372, 7.600662144113812e-08, 2.2252311993042895e-08, 8.246664862099351e-08, 6.529340339511691e-07, 6.90236845457548e-08, 3.48808981698312e-08, 0.0031364758033305407, 3.317368424404776e-08, 1.1366842578297565e-08, 1.2242053060163016e-07, 0.00019693412468768656, 1.0942520134449296e-07, 2.327081460862246e-08, 4.1474741863112286e-08, 9.666890719017829e-07, 3.644202095642868e-08, 2.9668772327795523e-08, 0.0004487612459342927, 2.1268894201398325e-08, 2.13436663898392e-08, 6.448104272749333e-07, 2.8070710200722715e-08, 1.0585787180161788e-07, 3.152771554937317e-08, 5.751524057018287e-08, 4.120215066905075e-07, 3.1081017368705943e-06, 7.683046305828611e-07, 2.0074169242434436e-06, 6.308962952061847e-08, 2.623859174377685e-08, 1.2625899614704394e-07, 1.6596132468293945e-07, 0.002246216172352433, 4.589242053043563e-08, 4.2214907125526224e-08, 7.533264465564571e-07, 1.454453695259872e-07, 3.766060885368461e-08, 4.369823969341269e-08, 4.7192322938371944e-08, 5.156264819561329e-07, 7.245108918141341e-06, 6.424527327908436e-07, 2.598501851025503e-06, 2.0657529375966988e-07, 1.2125835269216623e-07, 2.1977045960852593e-08, 1.587300175742712e-07, 0.0035588413011282682, 1.5811940556886839e-06, 9.998298082791734e-06, 2.5442074047532515e-07, 2.850545968158258e-07, 4.6612278481461544e-08, 1.919549390549946e-07, 5.899904067518946e-07, 2.393433078395901e-07, 0.012366501614451408, 7.031206195051709e-08, 6.092469106988574e-08, 4.0725488759107975e-08, 1.0111171455662316e-08, 0.14014044404029846, 1.2351959810530388e-07, 3.984935119660804e-07, 1.2953881878274842e-07, 0.010950231924653053, 3.389568519196473e-07, 0.0005601724260486662, 8.537605822311889e-08, 1.809724068380092e-07]], "pointer": [[0.0, 0.0, 0.0005760687636211514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.5075016057817265e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00010234729415969923, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.537537799682468e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.6104050599969923e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.008711766800843e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.252470924053341e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.071909643243998e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.133579230052419e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3062460422515869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07025277614593506, 0.0, 0.0213443785905838, 0.0, 0.0, 0.3469489514827728, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04431802034378052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.023465538397431374, 0.0, 0.0008214360568672419, 0.0, 0.0, 0.0, 0.0, 0.003234229516237974, 0.0, 0.1534300297498703, 0.0, 0.016763951629400253, 0.0, 0.012204989790916443, 0.0, 0.0]], "target": [0.0]}, "loss": [0.1986130177974701, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:55:03.047786", "n_pass": [1, 1, 1], "n_token": 266, "loss": [0.1986130177974701, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_sent", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "packets_recv", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "errout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropin", ">=", "0", ")", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [250, 257, 263, 225, 259, 2, 13, 27, 41, 55, 69, 83, 97, 111, 214, 227, 230, 243, 252, 261]}}
{"prediction": {"error_location": 0.8198670744895935, "repair_targets": [], "repair_candidates": [0.0005760687636211514, 3.5075016057817265e-05, 0.00010234729415969923, 5.537537799682468e-05, 5.6104050599969923e-05, 4.008711766800843e-05, 3.252470924053341e-05, 4.071909643243998e-05, 3.133579230052419e-05, 0.3062460422515869, 0.07025277614593506, 0.0213443785905838, 0.3469489514827728, 0.04431802034378052, 0.023465538397431374, 0.0008214360568672419, 0.003234229516237974, 0.1534300297498703, 0.016763951629400253, 0.012204989790916443], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.128663", "n_pass": [10, 2, 2], "n_token": 199, "loss": [0.10638121515512466, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "7", "]", ",", "nt", ".", "dropout", ")", "#NEWLINE#", "assert", "(", "nt", ".", "bytes_sent", ">=", "0", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [183, 190, 196, 158, 192, 2, 13, 27, 41, 55, 69, 83, 97, 111, 147, 160, 163, 176, 185, 194]}}
{"prediction": {"error_location": 0.8990819454193115, "repair_targets": [], "repair_candidates": [0.011720908805727959, 0.0018909277860075235, 0.009676318615674973, 0.0016992409946396947, 0.0017471753526479006, 0.0008701159968040884, 0.0006537858280353248, 0.0007604326237924397, 0.0007949498831294477, 0.11924585700035095, 0.12023023515939713, 0.03059988282620907, 0.31224513053894043, 0.04568592831492424, 0.07210160046815872, 0.003750283969566226, 0.0025939755141735077, 0.18956820666790009, 0.0014970859047025442, 0.0726679116487503], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.214929", "n_pass": [49, 3, 3], "n_token": 182, "loss": [0.11395561695098877, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", ".", "assertEqual", "0", ",", "nt", "#NEWLINE#", "assert", "(", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [166, 173, 179, 141, 175, 2, 13, 27, 41, 55, 69, 83, 97, 111, 130, 143, 146, 159, 168, 177]}}
{"prediction": {"error_location": 0.892297625541687, "repair_targets": [], "repair_candidates": [0.006323167588561773, 0.0008039871463552117, 0.0021838676184415817, 0.0007950888830237091, 0.0005049407482147217, 0.0005042742122896016, 0.00031049660174176097, 0.0005883885314688087, 0.0005790023715235293, 0.1412898451089859, 0.07868736982345581, 0.007234787102788687, 0.45210179686546326, 0.024519896134734154, 0.022976521402597427, 0.0011086507001891732, 0.00020321640477050096, 0.2303052395582199, 0.004773195832967758, 0.024206247180700302], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.298352", "n_pass": [83, 4, 4], "n_token": 174, "loss": [0.1443222016096115, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "(", "nt", "[", "0", "]", ",", "nt", ".", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [158, 165, 171, 133, 167, 2, 13, 27, 41, 55, 69, 83, 97, 111, 122, 135, 138, 151, 160, 169]}}
{"prediction": {"error_location": 0.865608811378479, "repair_targets": [], "repair_candidates": [0.0945090800523758, 0.0017666970379650593, 0.007970653474330902, 0.001762903411872685, 0.0028874482959508896, 0.0035861132200807333, 0.0012768328888341784, 0.0040757134556770325, 0.3479413688182831, 0.07276144623756409, 0.051336243748664856, 0.007710958365350962, 0.13948039710521698, 0.020779380574822426, 0.04670398309826851, 0.0013191000325605273, 0.0044178650714457035, 0.1485365331172943, 0.0014982142020016909, 0.03967906907200813], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.457569", "n_pass": [93, 6, 5], "n_token": 166, "loss": [0.108955018222332, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "1", "]", ",", "nt", ".", "bytes_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [150, 157, 163, 125, 159, 2, 13, 19, 33, 47, 61, 75, 89, 103, 114, 127, 130, 143, 152, 161]}}
{"prediction": {"error_location": 0.8967706561088562, "repair_targets": [], "repair_candidates": [0.015209403820335865, 0.0035149147734045982, 0.0052515314891934395, 0.002338552614673972, 0.0016982411034405231, 0.0016953905578702688, 0.0012986038345843554, 0.0035697321873158216, 0.04827569052577019, 0.22190457582473755, 0.07571906596422195, 0.016240166500210762, 0.22680853307247162, 0.029523774981498718, 0.06031285226345062, 0.011221242137253284, 0.0019123477395623922, 0.18547466397285461, 0.0036471786443144083, 0.08438356220722198], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.536668", "n_pass": [95, 7, 6], "n_token": 158, "loss": [0.17255812883377075, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "3", "]", ",", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [142, 149, 155, 117, 151, 2, 13, 19, 25, 39, 53, 67, 81, 95, 106, 119, 122, 135, 144, 153]}}
{"prediction": {"error_location": 0.8415094614028931, "repair_targets": [], "repair_candidates": [0.01207992434501648, 0.004175594076514244, 0.0027091107331216335, 0.0020755690056830645, 0.0035800219047814608, 0.001572393230162561, 0.0021236592438071966, 0.00220578839071095, 0.1660977303981781, 0.13997317850589752, 0.09891381114721298, 0.004163287580013275, 0.26173537969589233, 0.018016483634710312, 0.024357037618756294, 0.0036105546168982983, 0.0007090400322340429, 0.23733702301979065, 0.002598353661596775, 0.011966124176979065], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.615235", "n_pass": [98, 8, 7], "n_token": 150, "loss": [0.1940758228302002, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "4", "]", ",", "nt", ".", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [134, 141, 147, 109, 143, 2, 13, 19, 25, 39, 45, 59, 73, 87, 98, 111, 114, 127, 136, 145]}}
{"prediction": {"error_location": 0.823595404624939, "repair_targets": [], "repair_candidates": [0.021415557712316513, 0.01267604622989893, 0.002917812904343009, 0.0031053826678544283, 0.14641378819942474, 0.0015948563814163208, 0.0018003336153924465, 0.002584888832643628, 0.2856701910495758, 0.06496648490428925, 0.054476235061883926, 0.004725570324808359, 0.31461408734321594, 0.00893870647996664, 0.01623065210878849, 0.00140644412022084, 0.0008061869302764535, 0.03778863698244095, 0.0008324700756929815, 0.01703571528196335], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.694710", "n_pass": [100, 9, 8], "n_token": 142, "loss": [0.2978595495223999, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "5", "]", ",", "nt", ".", "errout", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [126, 133, 139, 101, 135, 2, 13, 19, 25, 39, 45, 51, 65, 79, 90, 103, 106, 119, 128, 137]}}
{"prediction": {"error_location": 0.7424057126045227, "repair_targets": [], "repair_candidates": [0.01951683685183525, 0.009241379797458649, 0.0052040149457752705, 0.0056724827736616135, 0.08222979307174683, 0.005650295410305262, 0.0028378728311508894, 0.0043589579872787, 0.12432524561882019, 0.12755775451660156, 0.10705802589654922, 0.013388950377702713, 0.3106388747692108, 0.04657004401087761, 0.029120685532689095, 0.004709720145910978, 0.005476837977766991, 0.06402137130498886, 0.0016052541323006153, 0.03081560507416725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.771431", "n_pass": [102, 10, 9], "n_token": 134, "loss": [0.2690112888813019, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "nt", ".", "dropout", ">=", "0", ")", ",", "nt", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [118, 125, 131, 93, 127, 2, 13, 19, 25, 39, 45, 51, 57, 71, 82, 95, 98, 111, 120, 129]}}
{"prediction": {"error_location": 0.7641346454620361, "repair_targets": [], "repair_candidates": [0.018048295751214027, 0.0157221220433712, 0.00806460715830326, 0.0072933039627969265, 0.07313016802072525, 0.012771985493600368, 0.005109437741339207, 0.004324544686824083, 0.13446705043315887, 0.12591354548931122, 0.09148340672254562, 0.011271092109382153, 0.2579789459705353, 0.024876700714230537, 0.06232646480202675, 0.013114032335579395, 0.0006010463694110513, 0.09694186598062515, 0.0017063021659851074, 0.034855037927627563], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.847990", "n_pass": [105, 11, 10], "n_token": 126, "loss": [0.4151909053325653, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [110, 117, 123, 85, 119, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 87, 90, 103, 112, 121]}}
{"prediction": {"error_location": 0.6602141261100769, "repair_targets": [], "repair_candidates": [0.01279465015977621, 0.019240999594330788, 0.009376918897032738, 0.006560244131833315, 0.07704134285449982, 0.014435525052249432, 0.0069780549965798855, 0.004076888784766197, 0.019197283312678337, 0.3828265070915222, 0.14294414222240448, 0.018727200105786324, 0.1795220524072647, 0.02284569852054119, 0.009811541996896267, 0.001955419545993209, 0.001279525924474001, 0.05946895480155945, 0.0023813731968402863, 0.00853563379496336], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:03.928050", "n_pass": [152, 12, 11], "n_token": 122, "loss": [0.5775615572929382, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "pernic", "=", "False", ")", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [106, 113, 119, 81, 115, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 83, 86, 99, 108, 117]}}
{"prediction": {"error_location": 0.5612653493881226, "repair_targets": [], "repair_candidates": [0.011342332698404789, 0.011751092970371246, 0.0072462065145373344, 0.005486789625138044, 0.06178576871752739, 0.009060956537723541, 0.004871814977377653, 0.0028477865271270275, 0.017957579344511032, 0.4332757294178009, 0.18535272777080536, 0.059134505689144135, 0.1360584795475006, 0.00970931351184845, 0.005341659765690565, 0.0010261627612635493, 0.0006899949512444437, 0.02971622534096241, 0.001550452085211873, 0.005794433876872063], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:04.004534", "n_pass": [153, 13, 12], "n_token": 118, "loss": [0.5074836611747742, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "psutil", ".", "network_io_counters", "(", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [102, 109, 115, 77, 111, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 95, 104, 113]}}
{"prediction": {"error_location": 0.602008581161499, "repair_targets": [], "repair_candidates": [0.013610235415399075, 0.01680503599345684, 0.012003793381154537, 0.010507430881261826, 0.0631365031003952, 0.013940162025392056, 0.010135849006474018, 0.007501446176320314, 0.03473925590515137, 0.4409700632095337, 0.18314217031002045, 0.025249192491173744, 0.09102687984704971, 0.008951188065111637, 0.010912002995610237, 0.000817862048279494, 0.0018411034252494574, 0.0421384833753109, 0.0017106655286625028, 0.010860695503652096], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:08.636367", "n_pass": [156, 14, 13], "n_token": 114, "loss": [0.4782683849334717, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "pernic", "=", "True", ")", "#NEWLINE#", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [98, 105, 111, 77, 107, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 91, 100, 109]}}
{"prediction": {"error_location": 0.6198558807373047, "repair_targets": [], "repair_candidates": [0.014873901382088661, 0.02445216290652752, 0.015689264982938766, 0.01395688857883215, 0.06458330899477005, 0.018610427156090736, 0.013708289712667465, 0.01081005483865738, 0.05343475192785263, 0.37935203313827515, 0.15722857415676117, 0.016973435878753662, 0.1197228655219078, 0.01682312786579132, 0.01246629562228918, 0.0026013990864157677, 0.0024379550013691187, 0.04284501448273659, 0.003174977609887719, 0.016255253925919533], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:08.721996", "n_pass": [157, 15, 14], "n_token": 109, "loss": [0.34499046206474304, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", ":", "#NEWLINE#", "#INDENT#", "def check_ntuple(", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [93, 100, 106, 77, 102, 2, 13, 19, 25, 39, 45, 51, 57, 71, 74, 79, 82, 86, 95, 104]}}
{"prediction": {"error_location": 0.7082271575927734, "repair_targets": [], "repair_candidates": [0.01979604735970497, 0.02316100336611271, 0.01270266156643629, 0.010309641249477863, 0.07689230889081955, 0.013638379983603954, 0.010865711607038975, 0.012378295883536339, 0.059071481227874756, 0.38134655356407166, 0.10514166206121445, 0.014150113798677921, 0.09112855792045593, 0.03187985345721245, 0.03896777704358101, 0.007049349136650562, 0.0018756486242637038, 0.067681223154068, 0.002061417791992426, 0.0199023075401783], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:08.804330", "n_pass": [164, 16, 15], "n_token": 105, "loss": [0.3390147089958191, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "nt", ")", ":", "#NEWLINE#", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [89, 96, 102, 73, 98, 2, 9, 15, 21, 35, 41, 47, 53, 67, 70, 75, 78, 82, 91, 100]}}
{"prediction": {"error_location": 0.7124719619750977, "repair_targets": [], "repair_candidates": [0.017152566462755203, 0.01591215841472149, 0.014368928037583828, 0.01742219552397728, 0.10653352737426758, 0.02620013803243637, 0.011701005510985851, 0.011018762364983559, 0.11774837225675583, 0.3707188069820404, 0.07961425930261612, 0.0066807991825044155, 0.06290020048618317, 0.023816989734768867, 0.04840881749987602, 0.005575631745159626, 0.0010493064764887094, 0.035684674978256226, 0.001201482256874442, 0.026291396468877792], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:08.887148", "n_pass": [165, 17, 16], "n_token": 101, "loss": [0.20009282231330872, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [85, 92, 98, 69, 94, 2, 5, 11, 17, 31, 37, 43, 49, 63, 66, 71, 74, 78, 87, 96]}}
{"prediction": {"error_location": 0.8186548352241516, "repair_targets": [], "repair_candidates": [0.0023647532798349857, 0.027350572869181633, 0.01092818658798933, 0.00835218746215105, 0.02905876375734806, 0.012141767889261246, 0.006632275879383087, 0.007925990968942642, 0.04553757980465889, 0.4867646098136902, 0.11881143599748611, 0.01446793507784605, 0.09389696270227432, 0.016825903207063675, 0.02689746394753456, 0.003898591734468937, 0.001113210921175778, 0.07668229937553406, 0.0018383112037554383, 0.008511187508702278], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:08.967908", "n_pass": [168, 18, 17], "n_token": 97, "loss": [0.1550714671611786, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "2", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [81, 88, 94, 65, 90, 2, 5, 11, 13, 27, 33, 39, 45, 59, 62, 67, 70, 74, 83, 92]}}
{"prediction": {"error_location": 0.8563538789749146, "repair_targets": [], "repair_candidates": [0.005334643181413412, 0.07062876224517822, 0.037974901497364044, 0.026382334530353546, 0.02725224196910858, 0.020315565168857574, 0.013259470462799072, 0.013183255679905415, 0.12699969112873077, 0.2757372558116913, 0.15453550219535828, 0.007189337629824877, 0.11444544792175293, 0.009920552372932434, 0.012564223259687424, 0.0010876801097765565, 0.0008700047037564218, 0.07410797476768494, 0.0007781762396916747, 0.007432942744344473], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.048304", "n_pass": [170, 19, 18], "n_token": 93, "loss": [0.2085370570421219, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "]", ",", "nt", ".", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [77, 84, 90, 61, 86, 2, 5, 11, 13, 23, 29, 35, 41, 55, 58, 63, 66, 70, 79, 88]}}
{"prediction": {"error_location": 0.8117709755897522, "repair_targets": [], "repair_candidates": [0.00558694452047348, 0.12373703718185425, 0.1007353812456131, 0.08240101486444473, 0.06398472189903259, 0.0162031352519989, 0.013453947380185127, 0.027107125148177147, 0.07708923518657684, 0.2245378941297531, 0.14207389950752258, 0.004685686901211739, 0.058092888444662094, 0.008096551522612572, 0.013239049352705479, 0.0010413866257295012, 0.0007648847531527281, 0.026504429057240486, 0.0004216737288516015, 0.010243147611618042], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.130681", "n_pass": [171, 20, 19], "n_token": 89, "loss": [0.27498018741607666, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "nt", ".", "packets_recv", ")", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [73, 80, 86, 57, 82, 2, 5, 11, 13, 19, 25, 31, 37, 51, 54, 59, 62, 66, 75, 84]}}
{"prediction": {"error_location": 0.7595873475074768, "repair_targets": [], "repair_candidates": [0.005262303166091442, 0.1008739173412323, 0.08548538386821747, 0.10190751403570175, 0.04487966001033783, 0.02595837414264679, 0.014301507733762264, 0.035783618688583374, 0.10680999606847763, 0.21350528299808502, 0.16896924376487732, 0.005271595437079668, 0.029379256069660187, 0.013445376418530941, 0.020632920786738396, 0.0006155610317364335, 0.0013975055189803243, 0.018360748887062073, 0.00044978325604461133, 0.006710469257086515], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.211391", "n_pass": [173, 21, 20], "n_token": 85, "loss": [0.28410354256629944, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [69, 76, 82, 53, 78, 2, 5, 11, 13, 19, 21, 27, 33, 47, 50, 55, 58, 62, 71, 80]}}
{"prediction": {"error_location": 0.7526887059211731, "repair_targets": [], "repair_candidates": [0.003811052069067955, 0.05871925130486488, 0.12886705994606018, 0.07412034273147583, 0.09846711158752441, 0.037277765572071075, 0.015952138230204582, 0.018549447879195213, 0.2090151309967041, 0.13983944058418274, 0.11864812672138214, 0.004897977691143751, 0.022429557517170906, 0.014533714391291142, 0.02344219759106636, 0.0012195021845400333, 0.0017819557106122375, 0.02348633110523224, 0.0005762790096923709, 0.004365709610283375], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.291190", "n_pass": [176, 22, 21], "n_token": 81, "loss": [0.3422451913356781, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "(", "nt", "[", "6", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [65, 72, 78, 49, 74, 2, 5, 11, 13, 19, 21, 27, 29, 43, 46, 51, 54, 58, 67, 76]}}
{"prediction": {"error_location": 0.7101741433143616, "repair_targets": [], "repair_candidates": [0.004617664497345686, 0.05560113489627838, 0.1397543102502823, 0.06897806376218796, 0.09199307858943939, 0.04551450163125992, 0.06450098007917404, 0.03334895893931389, 0.3365110754966736, 0.06929358839988708, 0.038526516407728195, 0.0006313943304121494, 0.021070508286356926, 0.003078714245930314, 0.008830934762954712, 0.0005968579207547009, 0.0007040670607239008, 0.01470260415226221, 0.0003291738103143871, 0.0014158864505589008], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.373283", "n_pass": [178, 23, 22], "n_token": 77, "loss": [0.27244776487350464, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "]", ",", "nt", ".", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [61, 68, 74, 45, 70, 2, 5, 11, 13, 19, 21, 27, 29, 39, 42, 47, 50, 54, 63, 72]}}
{"prediction": {"error_location": 0.7615134119987488, "repair_targets": [], "repair_candidates": [0.008226588368415833, 0.06035211309790611, 0.09664828330278397, 0.0357489213347435, 0.050178803503513336, 0.04072260856628418, 0.07941104471683502, 0.04907168820500374, 0.37313345074653625, 0.10022751241922379, 0.033459555357694626, 0.0006596939056180418, 0.028554197400808334, 0.0033506767358630896, 0.015751250088214874, 0.0022493298165500164, 0.0006353136268444359, 0.018885619938373566, 0.00033086174516938627, 0.002402454847469926], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.452374", "n_pass": [179, 24, 23], "n_token": 73, "loss": [0.24385491013526917, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "dropin", ")", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [57, 64, 70, 41, 66, 2, 5, 11, 13, 19, 21, 27, 29, 35, 38, 43, 46, 50, 59, 68]}}
{"prediction": {"error_location": 0.7836011052131653, "repair_targets": [], "repair_candidates": [0.005233456380665302, 0.034320127218961716, 0.07411754131317139, 0.015170740894973278, 0.07822126895189285, 0.027255985885858536, 0.10283854603767395, 0.015133710578083992, 0.34566038846969604, 0.19039610028266907, 0.038511451333761215, 0.0004539844812825322, 0.025447463616728783, 0.0015668448759242892, 0.013252203352749348, 0.0019034878350794315, 0.0002562770096119493, 0.02690589614212513, 0.000180815884959884, 0.00317374593578279], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.535237", "n_pass": [231, 25, 24], "n_token": 71, "loss": [0.23001864552497864, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "#NEWLINE#", "#UNINDENT#", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [55, 62, 68, 39, 64, 2, 5, 11, 13, 19, 21, 27, 29, 33, 36, 41, 44, 48, 57, 66]}}
{"prediction": {"error_location": 0.794518768787384, "repair_targets": [], "repair_candidates": [0.008694346994161606, 0.046344950795173645, 0.10000623762607574, 0.02139371633529663, 0.13330139219760895, 0.03714614361524582, 0.08221518248319626, 0.017528800293803215, 0.28300923109054565, 0.1700323522090912, 0.03205960616469383, 0.0003815503150690347, 0.030887840315699577, 0.0009160623303614557, 0.008281170390546322, 0.0016579568618908525, 0.00023154527298174798, 0.02441525086760521, 0.00010314687096979469, 0.0013934819726273417], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.614552", "n_pass": [232, 26, 25], "n_token": 69, "loss": [0.3113552927970886, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", ")", "#NEWLINE#", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [53, 60, 66, 37, 62, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 42, 46, 55, 64]}}
{"prediction": {"error_location": 0.7324536442756653, "repair_targets": [], "repair_candidates": [0.0028170158620923758, 0.02745366096496582, 0.05956725776195526, 0.0400799997150898, 0.15071047842502594, 0.06747081130743027, 0.033017899841070175, 0.016734948381781578, 0.3869266211986542, 0.09714961796998978, 0.042726218700408936, 0.0015498835127800703, 0.030226683244109154, 0.001958163222298026, 0.008619816042482853, 0.0010406601941213012, 0.000696056813467294, 0.0291639044880867, 9.361627598991618e-05, 0.0019967483822256327], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.693656", "n_pass": [236, 27, 26], "n_token": 67, "loss": [0.3870238661766052, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "assert", "(", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [51, 58, 64, 37, 60, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 44, 53, 62]}}
{"prediction": {"error_location": 0.6790750026702881, "repair_targets": [], "repair_candidates": [0.0013203531270846725, 0.018952444195747375, 0.011957623064517975, 0.00839858315885067, 0.015429475344717503, 0.012841631658375263, 0.0032397261820733547, 0.00176237802952528, 0.5295173525810242, 0.011297956109046936, 0.12043137848377228, 0.07447899878025055, 0.08336079865694046, 0.0013626398285850883, 0.012991334311664104, 0.0006726463907398283, 0.000875296478625387, 0.08755331486463547, 0.0001001815908239223, 0.003455857979133725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.773670", "n_pass": [238, 28, 27], "n_token": 65, "loss": [0.48329561948776245, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", "[", "]", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [49, 56, 62, 37, 58, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 42, 51, 60]}}
{"prediction": {"error_location": 0.6167474389076233, "repair_targets": [], "repair_candidates": [0.0013809354277327657, 0.01774020679295063, 0.012469230219721794, 0.007819956168532372, 0.014167822897434235, 0.013487391173839569, 0.004266858100891113, 0.0017140785930678248, 0.6759751439094543, 0.009065655060112476, 0.08976037800312042, 0.044938188046216965, 0.050526756793260574, 0.004012026824057102, 0.009578043594956398, 0.00024109437072183937, 0.0006142561323940754, 0.03882231190800667, 0.0001390879915561527, 0.0032806850504130125], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:09.852194", "n_pass": [240, 29, 28], "n_token": 63, "loss": [0.47777295112609863, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", ".", "assertEqual", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [47, 54, 60, 37, 56, 2, 5, 11, 13, 19, 21, 27, 29, 33, 34, 39, 40, 42, 49, 58]}}
{"prediction": {"error_location": 0.6201630234718323, "repair_targets": [], "repair_candidates": [0.00151590327732265, 0.018998514860868454, 0.01633724570274353, 0.010314528830349445, 0.015503982082009315, 0.01819690316915512, 0.004446293227374554, 0.0018512278329581022, 0.6876562833786011, 0.010001461021602154, 0.07421907782554626, 0.04500724747776985, 0.050645556300878525, 0.005808001384139061, 0.014441362582147121, 0.00021321688836906105, 0.0010084579698741436, 0.019718734547495842, 0.00015694244939368218, 0.0039590285159647465], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.086601", "n_pass": [251, 32, 29], "n_token": 61, "loss": [0.2527638375759125, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "bytes_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [45, 52, 58, 35, 54, 2, 5, 9, 11, 17, 19, 25, 27, 31, 32, 37, 38, 40, 47, 56]}}
{"prediction": {"error_location": 0.7766512036323547, "repair_targets": [], "repair_candidates": [0.004440901335328817, 0.051851291209459305, 0.03765331953763962, 0.026003248989582062, 0.03420154005289078, 0.08328302949666977, 0.006388598587363958, 0.010414646938443184, 0.49309390783309937, 0.02731729857623577, 0.03630506247282028, 0.05141584575176239, 0.08163599669933319, 0.002644193824380636, 0.028608646243810654, 0.00035267192288301885, 0.0014424901455640793, 0.010273163206875324, 0.00036307299160398543, 0.012311066500842571], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.164505", "n_pass": [252, 33, 30], "n_token": 59, "loss": [0.2510509788990021, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [43, 50, 56, 33, 52, 2, 5, 7, 9, 15, 17, 23, 25, 29, 30, 35, 36, 38, 45, 54]}}
{"prediction": {"error_location": 0.7779827117919922, "repair_targets": [], "repair_candidates": [0.005951310973614454, 0.018702935427427292, 0.021900197491049767, 0.009298427030444145, 0.053942058235406876, 0.10354680567979813, 0.0176373440772295, 0.013086645863950253, 0.5439923405647278, 0.03076109290122986, 0.022203819826245308, 0.04237546771764755, 0.054571546614170074, 0.0009660377982072532, 0.03022385761141777, 0.00019104077364318073, 0.001701416214928031, 0.007138331886380911, 0.000290058262180537, 0.02151927910745144], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.244791", "n_pass": [255, 34, 31], "n_token": 57, "loss": [0.18455249071121216, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "packets_sent", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [41, 48, 54, 31, 50, 2, 5, 7, 9, 13, 15, 21, 23, 27, 28, 33, 34, 36, 43, 52]}}
{"prediction": {"error_location": 0.8314764499664307, "repair_targets": [], "repair_candidates": [0.004092841874808073, 0.023555520921945572, 0.03669944405555725, 0.0779854953289032, 0.10622351616621017, 0.0720198005437851, 0.00911166612058878, 0.008595943450927734, 0.29282739758491516, 0.09598533809185028, 0.04397774860262871, 0.053374625742435455, 0.1067158654332161, 0.0033185044303536415, 0.026072828099131584, 0.00022528134286403656, 0.0022297685500234365, 0.015037024393677711, 0.00038195951492525637, 0.021569406613707542], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.322366", "n_pass": [256, 35, 32], "n_token": 55, "loss": [0.15970143675804138, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [39, 46, 52, 29, 48, 2, 5, 7, 9, 11, 13, 19, 21, 25, 26, 31, 32, 34, 41, 50]}}
{"prediction": {"error_location": 0.8523983359336853, "repair_targets": [], "repair_candidates": [0.005148691590875387, 0.02709057554602623, 0.04107524827122688, 0.05435175821185112, 0.10050379484891891, 0.10416138172149658, 0.020689336583018303, 0.007510752882808447, 0.20257200300693512, 0.08787337690591812, 0.04165738448500633, 0.10314107686281204, 0.11575067043304443, 0.005416190717369318, 0.04076433926820755, 0.00027758305077441037, 0.0022237615194171667, 0.023543691262602806, 0.0007128606084734201, 0.015535600483417511], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.400152", "n_pass": [259, 36, 33], "n_token": 53, "loss": [0.13642378151416779, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "errin", ")", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [37, 44, 50, 27, 46, 2, 5, 7, 9, 11, 13, 17, 19, 23, 24, 29, 30, 32, 39, 48]}}
{"prediction": {"error_location": 0.8724730014801025, "repair_targets": [], "repair_candidates": [0.004529793281108141, 0.039254140108823776, 0.05725683271884918, 0.0712219774723053, 0.20760990679264069, 0.03473224863409996, 0.025813443586230278, 0.004369236528873444, 0.13890846073627472, 0.06825718283653259, 0.02709645964205265, 0.14329691231250763, 0.11790879815816879, 0.004601438995450735, 0.0223162192851305, 0.00015980600437615067, 0.001323228352703154, 0.021583475172519684, 0.0003366852179169655, 0.009423664771020412], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.478309", "n_pass": [260, 37, 34], "n_token": 51, "loss": [0.25711435079574585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", ".", "assertEqual", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [35, 42, 48, 25, 44, 2, 5, 7, 9, 11, 13, 15, 17, 21, 22, 27, 28, 30, 37, 46]}}
{"prediction": {"error_location": 0.7732798457145691, "repair_targets": [], "repair_candidates": [0.0050498079508543015, 0.03143272176384926, 0.04264639690518379, 0.04459524154663086, 0.05885784700512886, 0.06639573723077774, 0.07321345806121826, 0.005077187903225422, 0.4429944157600403, 0.06706150621175766, 0.020978594198822975, 0.04643278568983078, 0.03692898154258728, 0.000616641016677022, 0.027464156970381737, 0.00012775472714565694, 0.0018024233868345618, 0.020546233281493187, 0.00014598424604628235, 0.007632115855813026], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.555150", "n_pass": [263, 38, 35], "n_token": 49, "loss": [0.3104225695133209, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [33, 40, 46, 23, 42, 2, 5, 7, 9, 11, 13, 15, 17, 19, 20, 25, 26, 28, 35, 44]}}
{"prediction": {"error_location": 0.7331371307373047, "repair_targets": [], "repair_candidates": [0.0038012810982763767, 0.018778476864099503, 0.029073543846607208, 0.0309559628367424, 0.045836929231882095, 0.05002931132912636, 0.04343065619468689, 0.03473328799009323, 0.5712224841117859, 0.06616289168596268, 0.019741002470254898, 0.025762125849723816, 0.020891932770609856, 0.0010534265311434865, 0.014163551852107048, 0.00028534114244394004, 0.0011484201531857252, 0.016249211505055428, 0.00018336156790610403, 0.006496688816696405], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.790119", "n_pass": [330, 41, 36], "n_token": 48, "loss": [0.44838619232177734, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "=", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [32, 39, 45, 22, 41, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 24, 25, 27, 34, 43]}}
{"prediction": {"error_location": 0.6386579275131226, "repair_targets": [], "repair_candidates": [0.002369286259636283, 0.008753585629165173, 0.013162788935005665, 0.014030481688678265, 0.026447372511029243, 0.04018985852599144, 0.05048351734876633, 0.07640966027975082, 0.6557124257087708, 0.026834601536393166, 0.01964464783668518, 0.00770963029935956, 0.007064611651003361, 0.006993068382143974, 0.01300089806318283, 0.0011340114288032055, 0.001066792057827115, 0.022206854075193405, 0.000239125729422085, 0.0065468233078718185], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.867128", "n_pass": [332, 42, 37], "n_token": 47, "loss": [0.2781510055065155, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "#NEWLINE#", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [31, 38, 44, 21, 40, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 23, 24, 26, 33, 42]}}
{"prediction": {"error_location": 0.7571825385093689, "repair_targets": [], "repair_candidates": [0.011675405316054821, 0.05163724720478058, 0.08823579549789429, 0.08974631875753403, 0.11071252822875977, 0.11557046324014664, 0.09794054925441742, 0.08463940024375916, 0.08239441365003586, 0.0894862487912178, 0.04217466339468956, 0.003421912668272853, 0.003057783702388406, 0.02708061784505844, 0.026908941566944122, 0.01729443483054638, 0.0009795913938432932, 0.04667609930038452, 0.00021058427228126675, 0.010157010518014431], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:10.945583", "n_pass": [333, 43, 38], "n_token": 46, "loss": [0.1233515813946724, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "(", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [30, 37, 43, 20, 39, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 22, 23, 25, 32, 41]}}
{"prediction": {"error_location": 0.8839526176452637, "repair_targets": [], "repair_candidates": [0.0077399262227118015, 0.034919749945402145, 0.049178507179021835, 0.04440169408917427, 0.05754982307553291, 0.07317645847797394, 0.07097950577735901, 0.10698903352022171, 0.14014199376106262, 0.15658511221408844, 0.056059349328279495, 0.00615234998986125, 0.004901580978184938, 0.02032354101538658, 0.07409240305423737, 0.007464050315320492, 0.0012933119433000684, 0.0723443478345871, 0.00011069886386394501, 0.015596538782119751], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.022147", "n_pass": [335, 44, 39], "n_token": 45, "loss": [0.20255951583385468, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "=", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [29, 36, 42, 20, 38, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 24, 31, 40]}}
{"prediction": {"error_location": 0.8166378736495972, "repair_targets": [], "repair_candidates": [0.029025454074144363, 0.09533541649580002, 0.12672021985054016, 0.11246944218873978, 0.13030408322811127, 0.1307477355003357, 0.08710473775863647, 0.05946280434727669, 0.0643363818526268, 0.010074439458549023, 0.07207697629928589, 0.014147423207759857, 0.01555562112480402, 0.0020428679417818785, 0.02672010101377964, 0.006521566305309534, 0.0009197131730616093, 0.00639329943805933, 6.096521610743366e-05, 0.009980804286897182], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.098463", "n_pass": [338, 45, 40], "n_token": 44, "loss": [0.1477673053741455, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "!=", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 35, 41, 20, 37, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 30, 39]}}
{"prediction": {"error_location": 0.8626317381858826, "repair_targets": [], "repair_candidates": [0.014595823362469673, 0.058560244739055634, 0.07498445361852646, 0.06979843229055405, 0.09003499150276184, 0.10639368742704391, 0.09324026852846146, 0.07553379982709885, 0.07760939002037048, 0.09839347749948502, 0.0973610207438469, 0.01789098232984543, 0.016792086884379387, 0.02266768179833889, 0.0492011234164238, 0.005420205648988485, 0.0006500025629065931, 0.007561190519481897, 0.00017906073480844498, 0.023132063448429108], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.177306", "n_pass": [340, 46, 41], "n_token": 43, "loss": [0.3305034339427948, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", ")", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [27, 34, 40, 20, 36, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 29, 38]}}
{"prediction": {"error_location": 0.7185619473457336, "repair_targets": [], "repair_candidates": [0.021723851561546326, 0.0668536052107811, 0.11738990992307663, 0.1256307065486908, 0.130019873380661, 0.11640565097332001, 0.07726205140352249, 0.04442426562309265, 0.037975192070007324, 0.008556420914828777, 0.22573663294315338, 0.0008557363180443645, 0.0003399450797587633, 0.00012306588178034872, 0.013997433707118034, 0.002800819929689169, 0.00021469459170475602, 0.0037482725456357002, 0.00019249910837970674, 0.005749308969825506], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.254424", "n_pass": [341, 47, 42], "n_token": 42, "loss": [0.1753724366426468, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "#NEWLINE#", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [26, 33, 39, 20, 35, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 28, 37]}}
{"prediction": {"error_location": 0.8391443490982056, "repair_targets": [], "repair_candidates": [0.01980363391339779, 0.07583719491958618, 0.10368841886520386, 0.09862790256738663, 0.12001917511224747, 0.1362254023551941, 0.1173107698559761, 0.08769131451845169, 0.08504568785429001, 0.009645411744713783, 0.05385648086667061, 0.0044090645387768745, 0.007301455829292536, 0.0048421770334243774, 0.03579585254192352, 0.0053294869139790535, 0.00043917432776652277, 0.0185081884264946, 0.00017092327470891178, 0.01545226015150547], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.331192", "n_pass": [342, 48, 43], "n_token": 41, "loss": [0.999488353729248, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "for", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 32, 38, 20, 34, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 27, 36]}}
{"prediction": {"error_location": 0.36806777119636536, "repair_targets": [], "repair_candidates": [0.008734776638448238, 0.06107371300458908, 0.07255780696868896, 0.060472358018159866, 0.08565142750740051, 0.11504950374364853, 0.11974094808101654, 0.10528852790594101, 0.1038103923201561, 0.03704831376671791, 0.06964459270238876, 0.002621032763272524, 0.005813153460621834, 0.00583617202937603, 0.08806037902832031, 0.004643539898097515, 0.0007850548136048019, 0.048361774533987045, 0.00012870393402408808, 0.004677842371165752], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.410135", "n_pass": [343, 49, 44], "n_token": 40, "loss": [0.07324467599391937, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "in", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 31, 37, 20, 33, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 26, 35]}}
{"prediction": {"error_location": 0.9293735027313232, "repair_targets": [], "repair_candidates": [0.0203159898519516, 0.0924694612622261, 0.10717438161373138, 0.08841101825237274, 0.09828409552574158, 0.11338697373867035, 0.10069604218006134, 0.08224685490131378, 0.0903630256652832, 0.014435624703764915, 0.09239687770605087, 0.006726615130901337, 0.016020236536860466, 0.021990759298205376, 0.024739524349570274, 0.008030151017010212, 0.002807693788781762, 0.016991425305604935, 0.0004054493037983775, 0.0021077855490148067], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.486902", "n_pass": [345, 50, 45], "n_token": 39, "loss": [0.10202714055776596, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", ":", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 30, 36, 20, 32, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 34]}}
{"prediction": {"error_location": 0.903005063533783, "repair_targets": [], "repair_candidates": [0.017984259873628616, 0.07288842648267746, 0.09140229970216751, 0.08285865187644958, 0.10156823694705963, 0.12184056639671326, 0.11568044126033783, 0.09423547983169556, 0.10142504423856735, 0.014311944134533405, 0.10177715867757797, 0.007008185610175133, 0.004064836539328098, 0.02393052540719509, 0.0052419002167880535, 0.014050452038645744, 0.0010525321122258902, 0.025131119415163994, 0.0006450201035477221, 0.0029029680881649256], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.563729", "n_pass": [347, 51, 46], "n_token": 38, "loss": [0.121023029088974, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "#NEWLINE#", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 29, 35, 20, 31, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 33]}}
{"prediction": {"error_location": 0.886013388633728, "repair_targets": [], "repair_candidates": [0.008724174462258816, 0.0510028637945652, 0.06900627911090851, 0.06951272487640381, 0.09568082541227341, 0.11840248852968216, 0.11549364775419235, 0.09919248521327972, 0.1012197732925415, 0.016758441925048828, 0.07524483650922775, 0.022148912772536278, 0.013905140571296215, 0.017593374475836754, 0.042362406849861145, 0.027278142049908638, 0.007120015565305948, 0.033702969551086426, 0.013568747788667679, 0.002081652171909809], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.641514", "n_pass": [348, 52, 47], "n_token": 37, "loss": [0.125517338514328, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "#INDENT#", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 28, 34, 20, 30, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 32]}}
{"prediction": {"error_location": 0.8820406794548035, "repair_targets": [], "repair_candidates": [0.013437202200293541, 0.07035870850086212, 0.09101004153490067, 0.09117449074983597, 0.11734960228204727, 0.1394713670015335, 0.1272079348564148, 0.09864139556884766, 0.0976627990603447, 0.006983149331063032, 0.07539214193820953, 0.00939974095672369, 0.005407865159213543, 0.006125836167484522, 0.020769596099853516, 0.006173077970743179, 0.0021463052835315466, 0.01740255393087864, 0.0017427952261641622, 0.002143384423106909], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.717727", "n_pass": [349, 53, 48], "n_token": 36, "loss": [0.06227558106184006, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key", "]", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 27, 33, 20, 29, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 31]}}
{"prediction": {"error_location": 0.9396238923072815, "repair_targets": [], "repair_candidates": [0.003835255978628993, 0.022293636575341225, 0.02194024622440338, 0.020137928426265717, 0.022749559953808784, 0.02526170387864113, 0.01863306574523449, 0.013626351952552795, 0.015481178648769855, 0.00022348290076479316, 0.02251150831580162, 0.0039425562135875225, 0.004181105177849531, 0.17485171556472778, 0.00021270179422572255, 0.6215800046920776, 0.00156366394367069, 0.004178574308753014, 0.0021126815117895603, 0.0006830927450209856], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.794317", "n_pass": [354, 54, 49], "n_token": 34, "loss": [0.2261374145746231, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def test_network_io_counters(", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [24, 27, 33, 20, 29, 2, 5, 7, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 25, 31]}}
{"prediction": {"error_location": 0.7976085543632507, "repair_targets": [], "repair_candidates": [0.0024806326255202293, 0.015158373862504959, 0.01493257749825716, 0.01290533971041441, 0.015271443873643875, 0.017169078812003136, 0.011746736243367195, 0.007458673324435949, 0.008158194832503796, 0.0001304960751440376, 0.02126876264810562, 0.0013979271752759814, 0.0024126358330249786, 0.21089927852153778, 2.8336778996163048e-05, 0.6139464378356934, 0.00047723035095259547, 0.041140202432870865, 0.0019143541576340795, 0.0011033184127882123], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.871220", "n_pass": [356, 55, 50], "n_token": 33, "loss": [0.3853391408920288, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ")", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [23, 26, 32, 19, 28, 1, 4, 6, 8, 10, 12, 14, 16, 17, 18, 20, 21, 22, 24, 30]}}
{"prediction": {"error_location": 0.6802198886871338, "repair_targets": [], "repair_candidates": [0.03440607711672783, 0.07031525671482086, 0.045182742178440094, 0.04508285969495773, 0.057059988379478455, 0.06802751123905182, 0.0579213909804821, 0.0378049798309803, 0.03423847630620003, 0.0002786449040286243, 0.054746873676776886, 0.002650034846737981, 0.0014263789635151625, 0.06292205303907394, 2.8563237719936296e-05, 0.3270004391670227, 0.00044584093848243356, 0.09505926817655563, 0.004104118328541517, 0.0012985165230929852], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:11.949337", "n_pass": [358, 56, 51], "n_token": 32, "loss": [0.35001012682914734, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "#INDENT#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 25, 31, 18, 27, 1, 3, 5, 7, 9, 11, 13, 15, 16, 17, 19, 20, 21, 23, 29]}}
{"prediction": {"error_location": 0.7046810388565063, "repair_targets": [], "repair_candidates": [0.022600293159484863, 0.05256320908665657, 0.03156815841794014, 0.0365019217133522, 0.04099814221262932, 0.05486578866839409, 0.05523185804486275, 0.03486834838986397, 0.03130874037742615, 0.00034246864379383624, 0.029204942286014557, 0.0007649532635696232, 0.0011648614890873432, 0.006650746800005436, 1.952798993443139e-05, 0.48331743478775024, 0.0003291149332653731, 0.11449233442544937, 0.0020398134365677834, 0.0011674427660182118], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.025554", "n_pass": [359, 57, 52], "n_token": 31, "loss": [0.6884790062904358, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [21, 24, 30, 17, 26, 1, 2, 4, 6, 8, 10, 12, 14, 15, 16, 18, 19, 20, 22, 28]}}
{"prediction": {"error_location": 0.5023395419120789, "repair_targets": [], "repair_candidates": [0.013744030147790909, 0.10457725077867508, 0.051817212253808975, 0.054375000298023224, 0.07130976766347885, 0.10211696475744247, 0.0902346521615982, 0.0500122606754303, 0.04679565876722336, 0.0007645197329111397, 0.0010766526684165, 0.0008862132672220469, 0.0009655387257225811, 0.0018257575575262308, 7.93843537394423e-06, 0.3052612841129303, 0.0001140971144195646, 0.1020355150103569, 0.001653897576034069, 0.00042575030238367617], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.178711", "n_pass": [363, 59, 53], "n_token": 30, "loss": [0.5991218686103821, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "#NEWLINE#", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 23, 29, 16, 25, 1, 2, 4, 5, 7, 9, 11, 13, 14, 15, 17, 18, 19, 21, 27]}}
{"prediction": {"error_location": 0.5492937564849854, "repair_targets": [], "repair_candidates": [0.015033982694149017, 0.10975554585456848, 0.06127160042524338, 0.054523371160030365, 0.07275610417127609, 0.1119503527879715, 0.10596559196710587, 0.061117835342884064, 0.052626632153987885, 0.001332661951892078, 0.0008751194109208882, 0.0011618551798164845, 0.0011811577714979649, 0.0024501692969352007, 9.212570148520172e-06, 0.2536763548851013, 0.00011835381155833602, 0.09218552708625793, 0.0016276086680591106, 0.00038096163189038634], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.254870", "n_pass": [365, 60, 54], "n_token": 29, "loss": [0.6062120795249939, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "#NEWLINE#", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 22, 28, 15, 24, 1, 2, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17, 18, 20, 26]}}
{"prediction": {"error_location": 0.5454128980636597, "repair_targets": [], "repair_candidates": [0.020274417474865913, 0.1289772391319275, 0.07644150406122208, 0.061844028532505035, 0.06441007554531097, 0.09294739365577698, 0.1373833566904068, 0.07355662435293198, 0.08995997905731201, 0.0016693745274096727, 0.0005940200062468648, 0.0011843605898320675, 0.0010175348725169897, 0.004194213543087244, 8.172910384018905e-06, 0.16286002099514008, 9.038023563334718e-05, 0.08170736581087112, 0.0007543807150796056, 0.0001255385868716985], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.331174", "n_pass": [367, 61, 55], "n_token": 28, "loss": [0.6087222695350647, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "#NEWLINE#", "self", "self", "self", "self", "#NEWLINE#", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 21, 27, 14, 23, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 17, 19, 25]}}
{"prediction": {"error_location": 0.5440455675125122, "repair_targets": [], "repair_candidates": [0.02194858342409134, 0.11567959934473038, 0.06957037001848221, 0.05760243162512779, 0.05595637112855911, 0.08537359535694122, 0.09720008820295334, 0.07457271963357925, 0.1211736649274826, 0.001938956673257053, 0.0006677344208583236, 0.0004357685102149844, 0.0006324569694697857, 0.03189542517066002, 9.895337825582828e-06, 0.15082231163978577, 6.689814472338185e-05, 0.1141010969877243, 0.0003208310226909816, 3.1279432732844725e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.408639", "n_pass": [369, 62, 56], "n_token": 27, "loss": [0.7184010148048401, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "#NEWLINE#", "self", "self", "self", "self", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 20, 26, 13, 22, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 24]}}
{"prediction": {"error_location": 0.4875311851501465, "repair_targets": [], "repair_candidates": [0.01842414401471615, 0.0909455344080925, 0.059640072286129, 0.043130021542310715, 0.04078448563814163, 0.05329350009560585, 0.08376837521791458, 0.07835058867931366, 0.1385367065668106, 0.0017564896261319518, 0.00025985477259382606, 0.0004980250378139317, 0.0009594677831046283, 0.04389556869864464, 4.786439603776671e-06, 0.25310415029525757, 4.3319039832567796e-05, 0.09253820776939392, 6.0039146774215624e-05, 6.632099484704668e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.561874", "n_pass": [388, 64, 57], "n_token": 26, "loss": [0.5277356505393982, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "#NEWLINE#", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 19, 25, 12, 21, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 23]}}
{"prediction": {"error_location": 0.589939296245575, "repair_targets": [], "repair_candidates": [0.024916306138038635, 0.0647624135017395, 0.15423113107681274, 0.10653214156627655, 0.08112975209951401, 0.07734426110982895, 0.09242142736911774, 0.0514436736702919, 0.05928279832005501, 0.0014839866198599339, 0.0004242514551151544, 0.0015684482641518116, 0.002464130287989974, 0.034979190677404404, 1.3330434740055352e-05, 0.1905396729707718, 3.861978620989248e-05, 0.05605907738208771, 0.0003148484684061259, 5.0511171139078215e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.639803", "n_pass": [394, 65, 58], "n_token": 25, "loss": [1.0237460136413574, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "assert", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 18, 24, 11, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 22]}}
{"prediction": {"error_location": 0.3592466711997986, "repair_targets": [], "repair_candidates": [0.0146716283634305, 0.07845865935087204, 0.11789478361606598, 0.09501316398382187, 0.08239932358264923, 0.09897912293672562, 0.13714736700057983, 0.14480142295360565, 0.09188465029001236, 0.000367100874427706, 0.0005605809856206179, 0.0006967041990719736, 0.0008100209524855018, 0.013705914840102196, 1.3103217497700825e-05, 0.037859801203012466, 2.1495023247553036e-05, 0.08450888842344284, 0.0001312430395046249, 7.498302147723734e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.717518", "n_pass": [424, 66, 59], "n_token": 24, "loss": [0.6571757793426514, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "#NEWLINE#", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 23, 11, 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 21]}}
{"prediction": {"error_location": 0.5183131098747253, "repair_targets": [], "repair_candidates": [0.06181543692946434, 0.05245564132928848, 0.09846493601799011, 0.04286504536867142, 0.04163980111479759, 0.051871296018362045, 0.07778557389974594, 0.08828258514404297, 0.07655904442071915, 0.0012255067704245448, 0.006005215924233198, 0.001954651204869151, 0.0065866983495652676, 0.00253339484333992, 0.0016837585717439651, 0.01028374582529068, 0.002600031206384301, 0.37266454100608826, 0.0006838173139840364, 0.0020393142476677895], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.793351", "n_pass": [425, 67, 60], "n_token": 23, "loss": [0.4541776478290558, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "check_ntuple", "(", "ret", "[", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 22, 11, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 20]}}
{"prediction": {"error_location": 0.63496994972229, "repair_targets": [], "repair_candidates": [0.049625083804130554, 0.042705338448286057, 0.08814055472612381, 0.038212504237890244, 0.037805959582328796, 0.05435923486948013, 0.07170836627483368, 0.07706209272146225, 0.0664888322353363, 0.0005537924589589238, 0.008828708902001381, 0.0034577338956296444, 0.0034638328943401575, 0.007321531418710947, 0.0008450581808574498, 0.008961107581853867, 0.00037885759957134724, 0.4359768033027649, 0.003307744860649109, 0.0007968157879076898], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:12.946315", "n_pass": [429, 69, 61], "n_token": 22, "loss": [0.03939099237322807, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "check_ntuple", "(", "ret", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 21, 11, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 20]}}
{"prediction": {"error_location": 0.9613747596740723, "repair_targets": [], "repair_candidates": [0.1364135891199112, 0.03632358834147453, 0.0896180123090744, 0.051241934299468994, 0.038024794310331345, 0.03179905191063881, 0.02893861010670662, 0.025055937469005585, 0.020959259942173958, 0.04957953840494156, 0.041218288242816925, 0.03475325182080269, 0.02949601039290428, 0.07647337764501572, 0.01420686300843954, 0.012110559269785881, 0.002647427609190345, 0.27126753330230713, 0.006739477626979351, 0.0031328927725553513], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:55:13.022947", "n_pass": [450, 70, 62], "n_token": 21, "loss": [0.002884158631786704, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "self", "self", "self", "self", "self", "self", "self", "self", "ret", "check_ntuple", "ret", "ret", "ret", "key", "ret", "key", "check_ntuple", "ret", "key"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 17, 20, 11, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 19]}}
{"prediction": {"error_location": 0.9971199035644531, "repair_targets": [], "repair_candidates": [0.16783207654953003, 0.0226819459348917, 0.10277456790208817, 0.03832980617880821, 0.025071941316127777, 0.01934332773089409, 0.016507737338542938, 0.015002627857029438, 0.012511134147644043, 0.034381940960884094, 0.04795372486114502, 0.052034758031368256, 0.04428093135356903, 0.04581441730260849, 0.07597377151250839, 0.05622920021414757, 0.06776749342679977, 0.031740546226501465, 0.04598105698823929, 0.07778700441122055], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'self', 'ret', 'check_ntuple', 'ret', 'ret', 'ret', 'key', 'ret', 'key', 'check_ntuple', 'ret', 'key']
