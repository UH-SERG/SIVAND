
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", "get", "(", "'file'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "'files'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [28, 115, 47, 117, 49, 80, 87, 99, 108, 119, 11, 30, 123, 2, 54], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "devstructure/blueprint/blueprint/walk.py", "license": "bsd-2-clause", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2171, "results": {"model": "transformer", "prob": {"loc": [[0.9501371383666992, 3.886088052240666e-06, 1.8778849835143774e-06, 1.0760328450487577e-07, 1.4782865491724806e-06, 1.143115326840416e-07, 2.8995620482419326e-07, 4.2820107637453475e-07, 3.951384996980778e-07, 2.4608627882116707e-06, 6.677574333480152e-07, 1.740999380217545e-07, 3.0283001706266077e-07, 1.2881103828021878e-07, 5.208118523114535e-07, 2.4342547476408072e-05, 9.54752067627851e-07, 1.288295493395708e-06, 0.00017019876395352185, 1.0458326187290368e-06, 0.00022187118884176016, 4.1514863369229715e-07, 2.232046938388521e-07, 1.6109399325614504e-07, 1.2351705436230986e-07, 1.1191544217581395e-05, 1.8130907619706704e-06, 6.603328870369296e-07, 7.624825684615644e-06, 1.8673708268579503e-07, 4.217429886921309e-05, 5.72278736399312e-07, 1.2546981054128992e-07, 1.907150135593838e-06, 2.4653529180795886e-05, 5.916544409956259e-07, 8.919082006286772e-07, 0.0002134457026841119, 4.365229244740476e-07, 0.0009086789796128869, 1.0108841479450348e-06, 7.23614130038186e-06, 3.208541556887212e-06, 2.6926361442747293e-06, 3.1100507840164937e-06, 1.199109078697802e-06, 3.0640580916951876e-07, 2.9887423806940205e-06, 1.5772067172292736e-06, 7.057011316646822e-06, 2.602603217383148e-07, 2.7829901227960363e-07, 9.372780596095254e-07, 6.440442348321085e-07, 0.0005953581421636045, 1.0977564670611173e-06, 1.4175866169807705e-07, 2.1766820736957015e-06, 2.0419771317392588e-05, 6.271654910960933e-07, 2.1368654415709898e-05, 1.6726885405660141e-06, 8.727873819225351e-07, 1.261109559891338e-06, 1.1374742143743788e-06, 4.7222115995282365e-07, 2.407774388757389e-07, 3.167109241530852e-07, 1.415381944980254e-07, 1.8092976006300887e-06, 6.253280844248366e-06, 3.9204144286486553e-07, 5.162301476957509e-06, 1.384264351145248e-06, 1.96714540834364e-06, 3.0853418593324022e-06, 3.0499592185151414e-07, 1.8398098973193555e-06, 0.01012062095105648, 3.7302495456970064e-06, 0.010836495086550713, 1.3285085742609226e-06, 2.1316861875675386e-06, 2.0670493086072383e-06, 1.7497889075457351e-06, 2.426007313260925e-06, 4.2995429794245865e-06, 0.00242405803874135, 9.905555998557247e-06, 6.164796650409698e-05, 2.2485698991658865e-06, 2.3185095869848737e-06, 0.0010039352346211672, 1.8755582686935668e-06, 4.5950355342938565e-07, 3.924585030290473e-07, 2.8127369660069235e-06, 1.0516796464798972e-06, 6.327157962005003e-07, 4.5659689931198955e-05, 7.848747145544621e-07, 3.409410783206113e-05, 6.648319299529248e-07, 1.8093724918344378e-07, 5.8178193285129964e-06, 7.798660135449609e-07, 8.226612635553465e-08, 1.303002932218078e-06, 0.0016302643343806267, 2.8846998247900046e-06, 6.296201900113374e-05, 1.2900202364107827e-06, 2.220233682237449e-06, 1.1084163134000846e-06, 4.010273642052198e-07, 2.4768023649812676e-06, 4.575047967136925e-07, 0.009567872621119022, 1.1977558642684016e-06, 0.007766664959490299, 3.7672946291422704e-06, 2.0576733277266612e-06, 6.658477786913863e-07, 4.91621790388308e-07, 4.926392875859165e-07, 9.522745614276573e-08, 4.21807180828182e-06, 5.472593693411909e-05, 9.909367690852378e-07, 2.5511242256470723e-06, 0.00021567587100435048, 1.514066298113903e-06, 0.0035800717305392027, 4.578249445330584e-06, 4.386535238154465e-06, 2.6440559395268792e-06, 1.4492101172436378e-06, 1.0387124348198995e-05, 6.300127097347286e-06]], "pointer": [[0.0, 0.0, 0.024448294192552567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.005562255159020424, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2370864450931549, 0.0, 0.002059253863990307, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.40112248063087463, 0.0, 0.159608393907547, 0.0, 0.0, 0.0, 0.0, 0.0005474435747601092, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07694032788276672, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.039164766669273376, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0358940064907074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.006986579392105341, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0016248131869360805, 0.0, 0.003526761895045638, 0.0, 0.0008625286282040179, 0.0, 0.0, 0.0, 0.004565605893731117, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.05114881321787834, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 15:50:44.734967", "n_pass": [1, 1, 1], "n_token": 139, "loss": [0.05114881321787834, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", "get", "(", "'file'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "'files'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 115, 47, 117, 49, 80, 87, 99, 108, 119, 11, 30, 123, 2, 54]}}
{"prediction": {"error_location": 0.9501371383666992, "repair_targets": [], "repair_candidates": [0.024448294192552567, 0.005562255159020424, 0.2370864450931549, 0.002059253863990307, 0.40112248063087463, 0.159608393907547, 0.0005474435747601092, 0.07694032788276672, 0.039164766669273376, 0.0358940064907074, 0.006986579392105341, 0.0016248131869360805, 0.003526761895045638, 0.0008625286282040179, 0.004565605893731117], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:44.801063", "n_pass": [46, 2, 2], "n_token": 131, "loss": [0.047074075788259506, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", "get", "(", "'file'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "'files'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 107, 39, 109, 41, 72, 79, 91, 100, 111, 11, 22, 115, 2, 46]}}
{"prediction": {"error_location": 0.9540167450904846, "repair_targets": [], "repair_candidates": [0.01500747725367546, 0.007166571915149689, 0.4421955943107605, 0.0023648266214877367, 0.2715719938278198, 0.14952290058135986, 0.0002160019939765334, 0.06680424511432648, 0.018130868673324585, 0.005929421167820692, 0.006101792212575674, 0.0016655016224831343, 0.006713994778692722, 0.0002506111632101238, 0.00635821046307683], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:44.859926", "n_pass": [48, 3, 3], "n_token": 123, "loss": [0.10467690229415894, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "'files'", ",", "{", "#NEWLINE#", "#INDENT#", "#NEWLINE#", "#UNINDENT#", "}", ")", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 99, 31, 101, 33, 64, 71, 83, 92, 103, 11, 22, 107, 2, 38]}}
{"prediction": {"error_location": 0.9006154537200928, "repair_targets": [], "repair_candidates": [0.27391427755355835, 0.010386521928012371, 0.34424445033073425, 0.0013320508878678083, 0.207234725356102, 0.07709718495607376, 0.002252517268061638, 0.05510147660970688, 0.009328717365860939, 0.0049686916172504425, 0.0032474291510879993, 0.001402589725330472, 0.003969660960137844, 0.0013378793373703957, 0.004181782249361277], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:44.920787", "n_pass": [51, 4, 4], "n_token": 114, "loss": [0.2517130374908447, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", ".", "iteritems", "(", ")", ")", ":", "#NEWLINE#", "#INDENT#", "if", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 90, 31, 92, 33, 55, 62, 74, 83, 94, 11, 22, 98, 2, 38]}}
{"prediction": {"error_location": 0.7774678468704224, "repair_targets": [], "repair_candidates": [0.6134045720100403, 0.01252757478505373, 0.1906818002462387, 0.0005945969023741782, 0.11231806129217148, 0.029333915561437607, 0.005628191400319338, 0.017379101365804672, 0.006720451638102531, 0.00320815178565681, 0.0005708113894797862, 0.0003458582214079797, 0.000913644558750093, 0.000278163148323074, 0.006095068994909525], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:44.979159", "n_pass": [52, 5, 5], "n_token": 105, "loss": [0.25505444407463074, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "(", "lambda", "*", "args", ":", "None", ")", ")", "(", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 81, 31, 83, 33, 46, 53, 65, 74, 85, 11, 22, 89, 2, 38]}}
{"prediction": {"error_location": 0.7748741507530212, "repair_targets": [], "repair_candidates": [0.4835919737815857, 0.021862979978322983, 0.21357885003089905, 0.002434216672554612, 0.092837855219841, 0.04760771989822388, 0.00661572627723217, 0.03877602517604828, 0.027058664709329605, 0.04166357219219208, 0.014919220469892025, 0.0007757071871310472, 0.0008923202403821051, 0.0004907670081593096, 0.006894392427057028], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.037940", "n_pass": [59, 6, 6], "n_token": 96, "loss": [0.2630724608898163, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "**kwargs", ")", ":", "#NEWLINE#", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [20, 81, 31, 83, 33, 46, 53, 65, 74, 85, 11, 22, 89, 2, 38]}}
{"prediction": {"error_location": 0.7686864137649536, "repair_targets": [], "repair_candidates": [0.49327319860458374, 0.03623613342642784, 0.20222404599189758, 0.0035721396561712027, 0.08083542436361313, 0.03787928447127342, 0.012941116467118263, 0.036091502755880356, 0.03119656629860401, 0.03058851882815361, 0.015840992331504822, 0.0014021977549418807, 0.0006433387170545757, 0.00045166260679252446, 0.01682385429739952], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.098310", "n_pass": [94, 7, 7], "n_token": 92, "loss": [0.1991003155708313, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ".", "get", "(", "'before_files'", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [16, 77, 27, 79, 29, 42, 49, 61, 70, 81, 7, 18, 85, 2, 34]}}
{"prediction": {"error_location": 0.8194678425788879, "repair_targets": [], "repair_candidates": [0.20612168312072754, 0.03628417104482651, 0.26186659932136536, 0.00557668786495924, 0.08073993027210236, 0.06727828830480576, 0.005479574669152498, 0.09192246198654175, 0.20123843848705292, 0.017790989950299263, 0.014048186130821705, 0.0014829138526692986, 0.0008395131444558501, 0.0006518858717754483, 0.008678756654262543], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.158906", "n_pass": [96, 8, 8], "n_token": 88, "loss": [0.40730932354927063, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", ")", "(", ")", "#NEWLINE#", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 73, 23, 75, 25, 38, 45, 57, 66, 77, 7, 14, 81, 2, 30]}}
{"prediction": {"error_location": 0.6654384136199951, "repair_targets": [], "repair_candidates": [0.23901274800300598, 0.027580127120018005, 0.18239137530326843, 0.00423154653981328, 0.04509180039167404, 0.08602141588926315, 0.007825778797268867, 0.2816504240036011, 0.0839700773358345, 0.01650402508676052, 0.01615104079246521, 0.0008473559282720089, 0.0005241360631771386, 0.004033847711980343, 0.004164295736700296], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.216286", "n_pass": [97, 9, 9], "n_token": 84, "loss": [0.523586630821228, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "and", "(", "not", "isinstance", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 69, 19, 71, 21, 34, 41, 53, 62, 73, 7, 10, 77, 2, 26]}}
{"prediction": {"error_location": 0.5923920273780823, "repair_targets": [], "repair_candidates": [0.2435850352048874, 0.026953207328915596, 0.1762976050376892, 0.002455384936183691, 0.03412117809057236, 0.10700612515211105, 0.007177921012043953, 0.3004213273525238, 0.04917141795158386, 0.02607695944607258, 0.013507715426385403, 0.0015249444404616952, 0.0007020661141723394, 0.0072668553330004215, 0.003732250537723303], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.390778", "n_pass": [105, 12, 10], "n_token": 80, "loss": [0.5066449642181396, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", "]", ",", "basestring", ")", ")", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 65, 19, 67, 21, 34, 37, 49, 58, 69, 7, 10, 73, 2, 26]}}
{"prediction": {"error_location": 0.6025135517120361, "repair_targets": [], "repair_candidates": [0.4050453305244446, 0.024821417406201363, 0.18855468928813934, 0.003382768714800477, 0.03906407579779625, 0.045418936759233475, 0.013687494210898876, 0.23533038794994354, 0.012289343401789665, 0.018985070288181305, 0.0038959698285907507, 0.004276379011571407, 0.00119784043636173, 0.0012630095006898046, 0.0027872517239302397], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.448701", "n_pass": [107, 13, 11], "n_token": 75, "loss": [0.6557947397232056, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", "[", "'content'", "]", "=", "util", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 60, 19, 62, 21, 34, 37, 44, 53, 64, 7, 10, 68, 2, 26]}}
{"prediction": {"error_location": 0.519029438495636, "repair_targets": [], "repair_candidates": [0.49020639061927795, 0.019630441442131996, 0.20248089730739594, 0.0017672574613243341, 0.025543691590428352, 0.034285325556993484, 0.013015772216022015, 0.12283311784267426, 0.02764800563454628, 0.035997308790683746, 0.018445173278450966, 0.0027138562873005867, 0.001149979536421597, 0.0008707339293323457, 0.003412021091207862], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.506483", "n_pass": [109, 14, 12], "n_token": 70, "loss": [0.7361054420471191, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "'content'", "]", ")", "#NEWLINE#", "#UNINDENT#", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 55, 19, 57, 21, 34, 37, 44, 48, 59, 7, 10, 63, 2, 26]}}
{"prediction": {"error_location": 0.47897565364837646, "repair_targets": [], "repair_candidates": [0.5049950480461121, 0.03982147201895714, 0.23451100289821625, 0.0036827637813985348, 0.06598968803882599, 0.021833492442965508, 0.0377514585852623, 0.06550171226263046, 0.007081781513988972, 0.0038812251295894384, 0.007384732831269503, 0.001364159514196217, 0.0006109265377745032, 0.0008608349016867578, 0.004729813430458307], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.563777", "n_pass": [111, 15, 13], "n_token": 65, "loss": [0.8554758429527283, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", ".", "get", "(", "'after_files'", ",", "("]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 50, 19, 52, 21, 34, 37, 44, 48, 54, 7, 10, 58, 2, 26]}}
{"prediction": {"error_location": 0.42508095502853394, "repair_targets": [], "repair_candidates": [0.23516793549060822, 0.07664912194013596, 0.4468681514263153, 0.008723011240363121, 0.15369409322738647, 0.017312316223978996, 0.02204081229865551, 0.01901661977171898, 0.0029867191333323717, 0.0013565137051045895, 0.0035010261926800013, 0.003984871320426464, 0.0073281400837004185, 0.0003909664519596845, 0.000979739474132657], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.621261", "n_pass": [114, 16, 14], "n_token": 60, "loss": [0.9798598289489746, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", ":", "None", ")", ")", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 50, 19, 52, 21, 34, 37, 44, 48, 54, 7, 10, 58, 2, 26]}}
{"prediction": {"error_location": 0.37536370754241943, "repair_targets": [], "repair_candidates": [0.21005232632160187, 0.10109743475914001, 0.4841565787792206, 0.011947054415941238, 0.12224052846431732, 0.012155923061072826, 0.021127384155988693, 0.0138265835121274, 0.0041354382410645485, 0.0008155039977282286, 0.0025298732798546553, 0.005735224112868309, 0.0055290935561060905, 0.00026539876125752926, 0.004385601729154587], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.680473", "n_pass": [118, 17, 15], "n_token": 56, "loss": [1.131934642791748, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", ")", "in", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 46, 15, 48, 17, 30, 33, 40, 44, 50, 7, 10, 54, 2, 22]}}
{"prediction": {"error_location": 0.3224089443683624, "repair_targets": [], "repair_candidates": [0.18467293679714203, 0.07200886309146881, 0.5668867230415344, 0.0052436222322285175, 0.12105900049209595, 0.013494799844920635, 0.012109649367630482, 0.004515732638537884, 0.0022764508612453938, 0.0005017743678763509, 0.003393425839021802, 0.0065037840977311134, 0.003711072029545903, 0.0002074870717478916, 0.0034146697726100683], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:45.853145", "n_pass": [161, 20, 16], "n_token": 54, "loss": [0.9498333930969238, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "'content'", "in", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 44, 15, 46, 17, 28, 31, 38, 42, 48, 7, 10, 52, 2, 20]}}
{"prediction": {"error_location": 0.3868054449558258, "repair_targets": [], "repair_candidates": [0.22305168211460114, 0.07822397351264954, 0.45395931601524353, 0.010343354195356369, 0.1578308343887329, 0.00672108493745327, 0.014207031577825546, 0.004477617330849171, 0.002963857026770711, 0.00033767978311516345, 0.0006278073415160179, 0.023305067792534828, 0.017175177112221718, 0.00026899619842879474, 0.006506478413939476], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.083350", "n_pass": [166, 24, 17], "n_token": 52, "loss": [0.9649103879928589, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", ")", ":", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 42, 15, 44, 17, 26, 29, 36, 40, 46, 7, 10, 50, 2, 20]}}
{"prediction": {"error_location": 0.3810173571109772, "repair_targets": [], "repair_candidates": [0.0860469862818718, 0.052033837884664536, 0.6892586350440979, 0.011876163072884083, 0.08111193776130676, 0.0020393331069499254, 0.0041967169381678104, 0.0020983305294066668, 0.003952547442167997, 0.00010289519559592009, 0.0013612464535981417, 0.04936683177947998, 0.0106485765427351, 0.00018019771960098296, 0.00572578189894557], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.200600", "n_pass": [170, 26, 18], "n_token": 50, "loss": [1.168207049369812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", "#NEWLINE#", "#INDENT#", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 40, 15, 42, 17, 26, 29, 34, 38, 44, 7, 10, 48, 2, 20]}}
{"prediction": {"error_location": 0.31092390418052673, "repair_targets": [], "repair_candidates": [0.07728254050016403, 0.047558046877384186, 0.7161805033683777, 0.012470269575715065, 0.07090180367231369, 0.0017976164817810059, 0.00392589857801795, 0.001525937463156879, 0.004727979190647602, 6.313516496447846e-05, 0.0007149919401854277, 0.05058439448475838, 0.006196089554578066, 0.00020263998885639012, 0.005868057254701853], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.257577", "n_pass": [171, 27, 19], "n_token": 48, "loss": [1.010507345199585, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", "f", ".", "json_dumps", "(", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 38, 15, 40, 17, 26, 29, 32, 36, 42, 7, 10, 46, 2, 20]}}
{"prediction": {"error_location": 0.3640342652797699, "repair_targets": [], "repair_candidates": [0.09234615415334702, 0.01989450491964817, 0.7069410681724548, 0.003558345139026642, 0.04528887942433357, 0.0004260932619217783, 0.007632768247276545, 0.004236085806041956, 0.019038068130612373, 0.0017490744357928634, 0.002586409216746688, 0.085028737783432, 0.00879543088376522, 0.00021615359582938254, 0.0022621690295636654], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.314551", "n_pass": [173, 28, 20], "n_token": 46, "loss": [0.9650851488113403, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#INDENT#", "\"\\n    Walk a blueprint's files and execute callbacks.\\n\\n    * `before_files():`\\n      Executed before files are enumerated.\\n    * `file(pathname, f):`\\n      Executed when a file is enumerated.\\n    * `after_files():`\\n      Executed after files are enumerated.\\n    \"", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 36, 15, 38, 17, 26, 29, 32, 34, 40, 7, 10, 44, 2, 20]}}
{"prediction": {"error_location": 0.38095077872276306, "repair_targets": [], "repair_candidates": [0.27848613262176514, 0.022722115740180016, 0.48863720893859863, 0.006850297097116709, 0.0775715708732605, 0.000462261465145275, 0.017321249470114708, 0.005774412304162979, 0.028773287311196327, 0.003701117355376482, 0.010282376781105995, 0.02678726054728031, 0.026685409247875214, 0.0010965290712192655, 0.004848735872656107], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.372046", "n_pass": [180, 29, 21], "n_token": 44, "loss": [1.273645281791687, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "sorted", "(", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 34, 13, 36, 15, 24, 27, 30, 32, 38, 5, 8, 42, 2, 18]}}
{"prediction": {"error_location": 0.2798098027706146, "repair_targets": [], "repair_candidates": [0.15511853992938995, 0.06425690650939941, 0.5360859632492065, 0.015901979058980942, 0.12384548038244247, 0.00029949654708616436, 0.012299555353820324, 0.004967793356627226, 0.013707157224416733, 0.0013965889811515808, 0.00971887819468975, 0.029025886207818985, 0.023885145783424377, 0.00042050465708598495, 0.009070090018212795], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.487851", "n_pass": [187, 31, 22], "n_token": 42, "loss": [1.022843360900879, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "b", ".", "get", "(", "(", "(", "f", ")", "(", "f", "[", "'content'", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 32, 13, 34, 15, 22, 25, 28, 30, 36, 5, 8, 40, 2, 16]}}
{"prediction": {"error_location": 0.35957109928131104, "repair_targets": [], "repair_candidates": [0.1011791080236435, 0.09496128559112549, 0.615571916103363, 0.024738691747188568, 0.07931783050298691, 0.00015654595335945487, 0.03232806175947189, 0.0019801657181233168, 0.003807534696534276, 0.00018490286311134696, 0.0067324950359761715, 0.022371167317032814, 0.005240540951490402, 7.63562711654231e-05, 0.01135342288762331], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.602378", "n_pass": [190, 33, 23], "n_token": 40, "loss": [1.1373801231384277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "b", ".", "get", "(", "f", ")", "(", "f", "[", "'content'", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 30, 13, 32, 15, 20, 23, 26, 28, 34, 5, 8, 38, 2, 16]}}
{"prediction": {"error_location": 0.3206579387187958, "repair_targets": [], "repair_candidates": [0.08735935389995575, 0.09174851328134537, 0.7092383503913879, 0.04308352246880531, 0.011363000608980656, 2.3095264623407274e-05, 0.017878038808703423, 0.0004931324510835111, 0.0015512402169406414, 5.377420166041702e-05, 0.0027907739859074354, 0.023211805149912834, 0.0007317620329558849, 2.9630964490934275e-05, 0.01044407021254301], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.659730", "n_pass": [193, 34, 24], "n_token": 38, "loss": [0.38150545954704285, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "#NEWLINE#", "for", "(", "pathname", ",", "f", "b", ".", "get", "(", "f", ")", "(", "f", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 28, 13, 30, 15, 20, 23, 24, 26, 32, 5, 8, 36, 2, 16]}}
{"prediction": {"error_location": 0.6828325986862183, "repair_targets": [], "repair_candidates": [0.1006387248635292, 0.13199599087238312, 0.6893804669380188, 0.0467475987970829, 0.008821338415145874, 2.3878805222921073e-05, 0.010327889584004879, 0.0002048084861598909, 0.00019698230607900769, 8.701812475919724e-05, 0.0021425664890557528, 0.003054713597521186, 0.0009933285182341933, 2.870563002943527e-05, 0.005356023088097572], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.717998", "n_pass": [204, 35, 25], "n_token": 36, "loss": [0.35751107335090637, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "get", "(", "f", ")", "(", "f", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 26, 11, 28, 13, 18, 21, 22, 24, 30, 5, 8, 34, 2, 14]}}
{"prediction": {"error_location": 0.6994149684906006, "repair_targets": [], "repair_candidates": [0.08509490638971329, 0.18949787318706512, 0.524437427520752, 0.1256491243839264, 0.016589729115366936, 8.046669245231897e-05, 0.036959245800971985, 0.00017446419224143028, 0.00013345785555429757, 3.709484008140862e-05, 0.0006677175988443196, 0.0019403035985305905, 0.01597302220761776, 5.129673445480876e-05, 0.002713916590437293], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.777765", "n_pass": [208, 36, 26], "n_token": 34, "loss": [1.033355951309204, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", ")", "(", "f", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 24, 11, 26, 13, 16, 19, 20, 22, 28, 5, 8, 32, 2, 14]}}
{"prediction": {"error_location": 0.35581088066101074, "repair_targets": [], "repair_candidates": [0.17051587998867035, 0.020750394091010094, 0.47639235854148865, 0.01173614151775837, 0.0034313856158405542, 0.0071641686372458935, 0.29980599880218506, 0.0009931543609127402, 0.0017041864339262247, 0.0019957886543124914, 0.0003763464337680489, 0.0009442148148082197, 0.0018865710590034723, 0.00012181577039882541, 0.0021815740037709475], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:46.836424", "n_pass": [255, 37, 27], "n_token": 33, "loss": [0.8275400400161743, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "(", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 23, 11, 25, 13, 16, 18, 19, 21, 27, 5, 8, 31, 2, 14]}}
{"prediction": {"error_location": 0.4371233284473419, "repair_targets": [], "repair_candidates": [0.08248870074748993, 0.03611943498253822, 0.8165011405944824, 0.015095791779458523, 0.0014206080231815577, 0.00022431147226598114, 0.04133913666009903, 0.002270241966471076, 0.0002222663606517017, 0.00014626100892201066, 0.0003461162850726396, 0.0008805719553492963, 0.0022061660420149565, 6.810310151195154e-05, 0.0006710183224640787], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.066822", "n_pass": [263, 41, 28], "n_token": 32, "loss": [0.4874817132949829, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "#NEWLINE#", "#UNINDENT#", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 23, 11, 24, 13, 16, 18, 19, 21, 26, 5, 8, 30, 2, 14]}}
{"prediction": {"error_location": 0.6141710877418518, "repair_targets": [], "repair_candidates": [0.549386739730835, 0.13856253027915955, 0.02972477674484253, 0.1127856895327568, 0.00829143077135086, 0.00035109699820168316, 0.1382439285516739, 0.003774367505684495, 9.771933400770649e-05, 6.675417535007e-05, 0.000673843955155462, 0.0005613375105895102, 0.014068685472011566, 5.1505863666534424e-05, 0.00335950730368495], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.124708", "n_pass": [266, 42, 29], "n_token": 30, "loss": [0.18371884524822235, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def walk_files(", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 23, 11, 24, 13, 16, 18, 19, 21, 26, 5, 8, 28, 2, 14]}}
{"prediction": {"error_location": 0.8321697115898132, "repair_targets": [], "repair_candidates": [0.4073743224143982, 0.09165727347135544, 0.13960422575473785, 0.05514756590127945, 0.06838036328554153, 0.000967679952736944, 0.13286374509334564, 0.02356174774467945, 0.001059838104993105, 0.0007490190910175443, 0.00558821763843298, 0.00116417754907161, 0.05744220316410065, 0.0002573781239334494, 0.014182224869728088], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.182215", "n_pass": [269, 43, 30], "n_token": 29, "loss": [0.0800052210688591, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "=", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 22, 10, 23, 12, 15, 17, 18, 20, 25, 4, 7, 27, 1, 13]}}
{"prediction": {"error_location": 0.9231117367744446, "repair_targets": [], "repair_candidates": [0.14288869500160217, 0.0428212508559227, 0.030712420120835304, 0.020780958235263824, 0.02153053879737854, 0.0006575147272087634, 0.6934002637863159, 0.009530561976134777, 0.0008126353495754302, 0.0005930211045779288, 0.0020597197581082582, 0.0005809678696095943, 0.022519001737236977, 0.000154550900333561, 0.010957872495055199], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.353036", "n_pass": [275, 46, 31], "n_token": 28, "loss": [0.3253878057003021, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", ".", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 21, 9, 22, 11, 14, 16, 17, 19, 24, 4, 6, 26, 1, 12]}}
{"prediction": {"error_location": 0.7222470641136169, "repair_targets": [], "repair_candidates": [0.2146666944026947, 0.06999808549880981, 0.0015997164882719517, 0.035754356533288956, 0.0109840864315629, 0.00010549539001658559, 0.6088661551475525, 0.003947149496525526, 0.00015008954505901784, 0.00011128876940347254, 0.000612131436355412, 0.001071627833880484, 0.019998081028461456, 4.9814818339655176e-05, 0.03208523616194725], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.412347", "n_pass": [277, 47, 32], "n_token": 27, "loss": [0.3950834274291992, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "(", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 20, 8, 21, 10, 13, 15, 16, 18, 23, 4, 6, 25, 1, 11]}}
{"prediction": {"error_location": 0.6736239194869995, "repair_targets": [], "repair_candidates": [0.1753835678100586, 0.048927657306194305, 0.0232232678681612, 0.05338873714208603, 0.004446581471711397, 7.572898175567389e-05, 0.6269645094871521, 0.002949097426608205, 0.0003590389678720385, 0.00026539561804383993, 0.00040011582314036787, 0.0406939759850502, 0.0067652203142642975, 6.0328977269819006e-05, 0.0160968117415905], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.469192", "n_pass": [278, 48, 33], "n_token": 26, "loss": [0.5968464612960815, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", ",", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 19, 7, 20, 9, 12, 14, 15, 17, 22, 4, 6, 24, 1, 10]}}
{"prediction": {"error_location": 0.5505450963973999, "repair_targets": [], "repair_candidates": [0.15268221497535706, 0.12521740794181824, 0.08980463445186615, 0.11028562486171722, 0.001272088149562478, 8.131292270263657e-05, 0.29409709572792053, 0.0029665865004062653, 0.0004916226607747376, 0.00023747701197862625, 0.00046398426638916135, 0.16648325324058533, 0.020461231470108032, 2.909433351305779e-05, 0.03542638197541237], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.527042", "n_pass": [280, 49, 34], "n_token": 25, "loss": [0.3540351688861847, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", "f", "b", ".", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 18, 7, 19, 8, 11, 13, 14, 16, 21, 4, 6, 23, 1, 9]}}
{"prediction": {"error_location": 0.7018503546714783, "repair_targets": [], "repair_candidates": [0.2818516492843628, 0.04655364155769348, 0.07581137865781784, 0.033935777842998505, 0.00634062709286809, 0.00034568601404316723, 0.42790156602859497, 0.00110330106690526, 5.8466899645281956e-05, 3.9980812289286405e-05, 0.00018838605319615453, 0.10235302150249481, 0.018449392169713974, 2.5051633201655932e-05, 0.005042147822678089], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.584284", "n_pass": [283, 50, 35], "n_token": 24, "loss": [0.30288881063461304, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "(", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 17, 7, 18, 8, 10, 12, 13, 15, 20, 4, 6, 22, 1, 9]}}
{"prediction": {"error_location": 0.7386811375617981, "repair_targets": [], "repair_candidates": [0.12104830890893936, 0.017346838489174843, 0.04228869453072548, 0.011795299127697945, 0.003629365237429738, 0.00032090290915220976, 0.7426552176475525, 0.0002148202183889225, 0.00019508411060087383, 0.00011524163710419089, 0.00022807643108535558, 0.0476030595600605, 0.010783939622342587, 7.438771717716008e-05, 0.0017007848946377635], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.641467", "n_pass": [285, 51, 36], "n_token": 23, "loss": [0.1723136305809021, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", ".", "f", "[", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 16, 7, 17, 8, 10, 11, 12, 14, 19, 4, 6, 21, 1, 9]}}
{"prediction": {"error_location": 0.8417151570320129, "repair_targets": [], "repair_candidates": [0.33053290843963623, 0.018384531140327454, 0.08668172359466553, 0.01457508746534586, 0.0052057732827961445, 0.006954926997423172, 0.31480419635772705, 0.0004455024900380522, 0.0021485979668796062, 0.002250425750389695, 0.002315833466127515, 0.2058125138282776, 0.0067446185275912285, 0.0023709959350526333, 0.0007723513408564031], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.758294", "n_pass": [290, 53, 37], "n_token": 22, "loss": [0.22144600749015808, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", ",", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", ".", "f", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [5, 15, 7, 16, 8, 10, 11, 12, 14, 18, 4, 6, 20, 1, 9]}}
{"prediction": {"error_location": 0.8013591766357422, "repair_targets": [], "repair_candidates": [0.2617735266685486, 0.005161368288099766, 0.1993490308523178, 0.0045200614258646965, 0.003826373955234885, 0.014824533835053444, 0.23207807540893555, 0.0023163985460996628, 0.004191053099930286, 0.004097243305295706, 0.010659325867891312, 0.2506176829338074, 0.0008932859636843204, 0.005586321000009775, 0.00010575077612884343], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.816008", "n_pass": [297, 54, 38], "n_token": 21, "loss": [0.06390324980020523, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "#NEWLINE#", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", ".", "f", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 14, 6, 15, 7, 9, 10, 11, 13, 17, 3, 5, 19, 1, 8]}}
{"prediction": {"error_location": 0.93809574842453, "repair_targets": [], "repair_candidates": [0.3218095302581787, 0.003620196832343936, 0.26121973991394043, 0.007710409816354513, 0.0024383659474551678, 0.00874423235654831, 0.09909404069185257, 0.0019433146808296442, 0.0025910106487572193, 0.002365336287766695, 0.00811754073947668, 0.27754342555999756, 0.0004430488625075668, 0.002191827865317464, 0.00016795433475635946], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.873178", "n_pass": [298, 55, 39], "n_token": 20, "loss": [0.024133138358592987, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", ".", "f", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 13, 5, 14, 6, 8, 9, 10, 12, 16, 2, 4, 18, 1, 7]}}
{"prediction": {"error_location": 0.9761558771133423, "repair_targets": [], "repair_candidates": [0.1884559839963913, 0.009172155521810055, 0.1045759916305542, 0.0031448351219296455, 0.00045252361451275647, 0.007000545971095562, 0.033320873975753784, 0.001743640168569982, 0.001718735322356224, 0.0015058335848152637, 0.0031160262878984213, 0.6442502737045288, 0.00012861007417086512, 0.0010716021060943604, 0.00034238703665323555], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.931308", "n_pass": [308, 56, 40], "n_token": 19, "loss": [0.07443451881408691, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", "f", "callable", "pathname", ",", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 5, 13, 6, 8, 9, 10, 11, 15, 2, 4, 17, 1, 7]}}
{"prediction": {"error_location": 0.9282681345939636, "repair_targets": [], "repair_candidates": [0.3526071012020111, 0.02738102898001671, 0.05463188514113426, 0.00556994928047061, 0.0044956086203455925, 0.006605908740311861, 0.13919024169445038, 0.005819969344884157, 0.0029729988891631365, 0.003408127697184682, 0.0017294923309236765, 0.39309775829315186, 0.0008870589663274586, 0.0014339479384943843, 0.00016901908384170383], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:47.989631", "n_pass": [332, 57, 41], "n_token": 18, "loss": [0.048818159848451614, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", "f", "callable", "pathname", "f", ")", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 5, 13, 6, 8, 9, 10, 11, 14, 2, 4, 16, 1, 7]}}
{"prediction": {"error_location": 0.9523543119430542, "repair_targets": [], "repair_candidates": [0.5064600110054016, 0.06766842305660248, 0.09194709360599518, 0.016938336193561554, 0.007823417894542217, 0.009240075945854187, 0.23988984525203705, 0.013495031744241714, 0.004129272419959307, 0.0028621337842196226, 0.0017487164586782455, 0.03485287353396416, 0.000734848843421787, 0.0013781117741018534, 0.0008317840984091163], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:48.048213", "n_pass": [334, 58, 42], "n_token": 17, "loss": [0.2097114622592926, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", "f", "callable", "pathname", "f", "kwargs", "."]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 5, 13, 6, 8, 9, 10, 11, 14, 2, 4, 15, 1, 7]}}
{"prediction": {"error_location": 0.8108182549476624, "repair_targets": [], "repair_candidates": [0.36147540807724, 0.12269005179405212, 0.04781080037355423, 0.09780272096395493, 0.01167456153780222, 0.010273301042616367, 0.267385870218277, 0.0208143200725317, 0.004581858869642019, 0.010131134651601315, 0.009100924246013165, 0.020907994359731674, 0.0011538421967998147, 0.007056444883346558, 0.0071407584473490715], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 15:50:48.105419", "n_pass": [336, 59, 43], "n_token": 16, "loss": [0.03953171893954277, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "b", "kwargs", "callable", "kwargs", "pathname", "f", "b", "f", "f", "f", "f", "callable", "pathname", "f", "kwargs"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 12, 5, 13, 6, 8, 9, 10, 11, 14, 2, 4, 15, 1, 7]}}
{"prediction": {"error_location": 0.9612394571304321, "repair_targets": [], "repair_candidates": [0.6135960817337036, 0.11145254224538803, 0.03095944970846176, 0.16015979647636414, 0.004081535153090954, 0.0005443741683848202, 0.06104985624551773, 0.0007184838759712875, 0.0003082810726482421, 0.0015710348961874843, 0.0011163981398567557, 0.003200351260602474, 0.007734727114439011, 0.00027148143271915615, 0.003235546173527837], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'b', 'kwargs', 'callable', 'kwargs', 'pathname', 'f', 'b', 'f', 'f', 'f', 'f', 'callable', 'pathname', 'f', 'kwargs']
