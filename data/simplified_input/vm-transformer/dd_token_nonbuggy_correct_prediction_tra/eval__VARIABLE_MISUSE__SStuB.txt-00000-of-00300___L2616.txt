
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "(", ")", "#NEWLINE#", "return", "self", ".", "layer1", ".", "batch_get_item", "(", "request_items", ",", "object_hook", "=", "item_object_hook", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [4, 13, 2, 20, 11, 26], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "darcyliu/storyboard/boto/dynamodb/layer2.py", "license": "mit", "note": "license: bigquery_api"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 2616, "results": {"model": "transformer", "prob": {"loc": [[0.9995879530906677, 2.152185516024474e-06, 1.2989282538455882e-07, 3.803659964773942e-08, 1.692178557277657e-06, 1.6681616088476403e-08, 4.832162758816594e-08, 5.2870067435151213e-08, 5.291970950338509e-08, 1.783769363328247e-07, 5.7311591916686666e-08, 1.826872562560311e-06, 9.113896481949268e-08, 7.078690941852983e-06, 1.6882512454685639e-07, 6.387351092485005e-09, 2.3308800223276194e-07, 3.851180736091919e-06, 5.84818806714793e-08, 1.6877864439379664e-08, 3.129602418994182e-06, 7.079602681869801e-08, 1.1950038469876745e-07, 1.994633436197546e-07, 1.9575445708852612e-09, 1.6345700259989826e-07, 0.0003198528429493308, 9.559879110554448e-09, 1.453081988067595e-09, 4.383785068284851e-08, 7.057334732962772e-05, 2.6759451543512114e-07]], "pointer": [[0.0, 0.0, 0.06224917992949486, 0.0, 0.8903782367706299, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03394652158021927, 0.0, 0.010176630690693855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020173387601971626, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0012320260284468532, 0.0, 0.0, 0.0, 0.0, 0.0]], "target": [0.0]}, "loss": [0.00041214076918549836, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:00:32.159807", "n_pass": [1, 1, 1], "n_token": 32, "loss": [0.00041214076918549836, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "(", ")", "#NEWLINE#", "return", "self", ".", "layer1", ".", "batch_get_item", "(", "request_items", ",", "object_hook", "=", "item_object_hook", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 2, 20, 11, 26]}}
{"prediction": {"error_location": 0.9995879530906677, "repair_targets": [], "repair_candidates": [0.06224917992949486, 0.8903782367706299, 0.03394652158021927, 0.010176630690693855, 0.0020173387601971626, 0.0012320260284468532], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.274741", "n_pass": [27, 3, 2], "n_token": 28, "loss": [0.00044169207103550434, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "(", ")", "#NEWLINE#", "return", "self", ".", "layer1", ".", "batch_get_item", "(", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 2, 20, 11, 26]}}
{"prediction": {"error_location": 0.9995583891868591, "repair_targets": [], "repair_candidates": [0.02721138671040535, 0.8719580769538879, 0.08473916351795197, 0.014134795404970646, 0.0012523361947387457, 0.0007042087381705642], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.330461", "n_pass": [32, 4, 3], "n_token": 24, "loss": [0.10683929920196533, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "self", ".", "layer1", ".", "batch_get_item", "(", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 2, 16, 11, 22]}}
{"prediction": {"error_location": 0.8986701965332031, "repair_targets": [], "repair_candidates": [0.6827707290649414, 0.08571401238441467, 0.0023041116073727608, 0.0013999514048919082, 0.22760316729545593, 0.00020799481717403978], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.386230", "n_pass": [52, 5, 4], "n_token": 22, "loss": [0.16652604937553406, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "self", ".", "batch_get_item", "(", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 2, 16, 11, 20]}}
{"prediction": {"error_location": 0.8466007709503174, "repair_targets": [], "repair_candidates": [0.33073025941848755, 0.5275353193283081, 0.010232985019683838, 0.002122054807841778, 0.12893787026405334, 0.00044149687164463103], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.440828", "n_pass": [53, 6, 5], "n_token": 20, "loss": [0.15163980424404144, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "self", ".", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 13, 2, 16, 11, 18]}}
{"prediction": {"error_location": 0.8592976331710815, "repair_targets": [], "repair_candidates": [0.48490262031555176, 0.027949759736657143, 0.2860133647918701, 0.008972791023552418, 0.18797524273395538, 0.004186119418591261], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.496424", "n_pass": [58, 7, 6], "n_token": 18, "loss": [0.1172492578625679, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", "#INDENT#", "'\\n        Return a set of attributes for a multiple items in\\n        multiple tables using their primary keys.\\n\\n        :type batch_list: :class:`boto.dynamodb.batch.BatchList`\\n        :param batch_list: A BatchList object which consists of a\\n            list of :class:`boto.dynamoddb.batch.Batch` objects.\\n            Each Batch object contains the information about one\\n            batch of objects that you wish to retrieve in this\\n            request.\\n        '", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "self", ".", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 11, 2, 14, 9, 16]}}
{"prediction": {"error_location": 0.8893634676933289, "repair_targets": [], "repair_candidates": [0.6944457292556763, 0.023401036858558655, 0.13835997879505157, 0.007857105694711208, 0.13219043612480164, 0.0037456336431205273], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.550879", "n_pass": [59, 8, 7], "n_token": 16, "loss": [0.13286134600639343, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", ".", "to_dict", "self", ".", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 2, 12, 7, 14]}}
{"prediction": {"error_location": 0.8755863904953003, "repair_targets": [], "repair_candidates": [0.5953361392021179, 0.034519098699092865, 0.28764909505844116, 0.009697402827441692, 0.06978518515825272, 0.0030131060630083084], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.605608", "n_pass": [62, 9, 8], "n_token": 14, "loss": [0.042103104293346405, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", "self", ".", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 2, 10, 7, 12]}}
{"prediction": {"error_location": 0.9587710499763489, "repair_targets": [], "repair_candidates": [0.07854997366666794, 0.45732060074806213, 0.2512061893939972, 0.20460675656795502, 0.002349840709939599, 0.005966655444353819], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.665238", "n_pass": [85, 10, 9], "n_token": 13, "loss": [0.043833620846271515, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", "self", "request_items", ","]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 2, 10, 7, 11]}}
{"prediction": {"error_location": 0.9571130871772766, "repair_targets": [], "repair_candidates": [0.003469145391136408, 0.9476662278175354, 0.0034139284398406744, 0.04507096856832504, 0.000321045343298465, 5.868691368959844e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.720248", "n_pass": [87, 11, 10], "n_token": 12, "loss": [0.25589078664779663, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def batch_get_item(", "self", ",", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", "self", "request_items"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [4, 9, 2, 10, 7, 11]}}
{"prediction": {"error_location": 0.7742266058921814, "repair_targets": [], "repair_candidates": [0.010342560708522797, 0.45126068592071533, 0.004287011455744505, 0.5255199670791626, 0.008478323929011822, 0.0001114634724217467], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.774607", "n_pass": [89, 12, 11], "n_token": 11, "loss": [0.011875761672854424, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", "self", "request_items"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [3, 8, 1, 9, 6, 10]}}
{"prediction": {"error_location": 0.9881943464279175, "repair_targets": [], "repair_candidates": [0.02720930241048336, 0.5748721361160278, 0.09790239483118057, 0.12754414975643158, 0.1587579846382141, 0.01371405553072691], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.828667", "n_pass": [91, 13, 12], "n_token": 10, "loss": [0.21973887085914612, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "batch_list", ")", "#NEWLINE#", "request_items", "=", "batch_list", "self", "request_items"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 7, 1, 8, 5, 9]}}
{"prediction": {"error_location": 0.8027282953262329, "repair_targets": [], "repair_candidates": [0.006260479800403118, 0.819739818572998, 0.03281484916806221, 0.13096162676811218, 0.00759150693193078, 0.002631697803735733], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:00:32.991587", "n_pass": [96, 16, 13], "n_token": 9, "loss": [0.26638102531433105, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "batch_list", ")", "#NEWLINE#", "request_items", "batch_list", "self", "request_items"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [2, 6, 1, 7, 5, 8]}}
{"prediction": {"error_location": 0.7661471962928772, "repair_targets": [], "repair_candidates": [0.45666301250457764, 0.43043002486228943, 0.011268590576946735, 0.08861573785543442, 0.0009488505311310291, 0.012073825113475323], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'batch_list', ')', '#NEWLINE#', 'request_items', 'batch_list', 'self', 'request_items']
