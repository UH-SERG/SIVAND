
Original sample:

{"has_bug": false, "bug_kind": 0, "bug_kind_name": "NONE", "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"], "error_location": [0], "repair_targets": [], "repair_candidates": [28, 44, 2, 30, 4, 14, 20, 46, 11, 36], "provenances": [{"datasetProvenance": {"datasetName": "ETHPy150Open", "filepath": "django/django/django/apps/registry.py", "license": "bsd-3-clause", "note": "license: manual_eval"}}], "txt_file": "eval__VARIABLE_MISUSE__SStuB.txt-00000-of-00300", "js_count": 300, "results": {"model": "transformer", "prob": {"loc": [[0.7841358780860901, 7.0213332037383225e-06, 6.222297201929905e-07, 4.223598537578255e-08, 1.1061081295338226e-06, 2.9471356910448776e-08, 7.352688413675423e-08, 9.428389091681311e-08, 6.066144919714134e-08, 7.088025455459501e-08, 7.676213442664448e-08, 7.268472472787835e-07, 9.833674852188778e-08, 4.711980849947395e-08, 0.009338763542473316, 5.331617103365716e-07, 6.644891072937753e-07, 6.493507385130215e-07, 4.225073269026325e-08, 1.1568131697003992e-07, 0.004472211003303528, 7.910209660622058e-07, 7.493936777791532e-07, 6.999627544246323e-07, 5.0900965220535e-08, 3.937675430165655e-08, 1.5958691790274315e-07, 1.437036587503826e-07, 4.7056470066308975e-05, 4.606323145139868e-08, 1.8399270629743114e-05, 7.352478093025638e-08, 3.188236874507311e-08, 1.1417341028163719e-07, 5.14633633486028e-08, 4.830127977584198e-07, 0.0007320228614844382, 7.601078522156968e-08, 3.458856667748478e-07, 8.486136238161635e-08, 8.330766831932124e-08, 1.823824788971251e-07, 1.8481871677522577e-07, 1.383585441772084e-07, 3.5039013255300233e-06, 3.4053634578867786e-08, 0.20123471319675446, 8.62546869484504e-07]], "pointer": [[0.0, 0.0, 0.028279853984713554, 0.0, 0.015222976915538311, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5189725756645203, 0.0, 0.0, 0.00014675578859169036, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0002767487894743681, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22575248777866364, 0.0, 0.016798218712210655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1927335262298584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.001153359073214233, 0.0, 0.0006635040626861155, 0.0]], "target": [0.0]}, "loss": [0.24317295849323273, 0.0], "acc": [1.0, 0.0, 0.0, 0.0]}}


Trace of simplified code(s):

{"result": {"time": "2021-02-11 16:11:03.668283", "n_pass": [1, 1, 1], "n_token": 48, "loss": [0.24317295849323273, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", ":", "#NEWLINE#", "#INDENT#", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [28, 44, 2, 30, 4, 14, 20, 46, 11, 36]}}
{"prediction": {"error_location": 0.7841358780860901, "repair_targets": [], "repair_candidates": [0.028279853984713554, 0.015222976915538311, 0.5189725756645203, 0.00014675578859169036, 0.0002767487894743681, 0.22575248777866364, 0.016798218712210655, 0.1927335262298584, 0.001153359073214233, 0.0006635040626861155], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:03.727931", "n_pass": [46, 2, 2], "n_token": 45, "loss": [0.40448543429374695, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", ".", "_meta", ".", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [25, 41, 2, 27, 4, 11, 17, 43, 8, 33]}}
{"prediction": {"error_location": 0.6673200726509094, "repair_targets": [], "repair_candidates": [0.012177231721580029, 0.007814884185791016, 0.5508682727813721, 0.00013168885197956115, 0.00013159657828509808, 0.16025890409946442, 0.0058146314695477486, 0.2615549862384796, 0.0008518623071722686, 0.00039590842789039016], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:03.837971", "n_pass": [50, 4, 3], "n_token": 42, "loss": [0.645209014415741, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "]", ")", ":", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 38, 2, 24, 4, 11, 17, 40, 8, 30]}}
{"prediction": {"error_location": 0.5245528817176819, "repair_targets": [], "repair_candidates": [0.009817871265113354, 0.007211698219180107, 0.3690444529056549, 0.00013130053412169218, 5.682107075699605e-05, 0.16182681918144226, 0.0027766332495957613, 0.44745585322380066, 0.001307991100475192, 0.0003706124844029546], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.003147", "n_pass": [56, 7, 4], "n_token": 39, "loss": [0.5168964862823486, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", ".", "_meta", ".", "app_label", ",", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [22, 35, 2, 24, 4, 11, 17, 37, 8, 30]}}
{"prediction": {"error_location": 0.5963684916496277, "repair_targets": [], "repair_candidates": [0.01605869084596634, 0.0037302703130990267, 0.4878959655761719, 5.2066479838686064e-05, 3.977657252107747e-05, 0.20154507458209991, 0.004383270628750324, 0.2828972637653351, 0.0031687661539763212, 0.00022892281413078308], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.060915", "n_pass": [63, 8, 5], "n_token": 36, "loss": [0.8747284412384033, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "=", "(", "model", "app_label", ",", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [19, 32, 2, 21, 4, 11, 14, 34, 8, 27]}}
{"prediction": {"error_location": 0.4169752895832062, "repair_targets": [], "repair_candidates": [0.1164516806602478, 0.004391469061374664, 0.6043458580970764, 9.870440408121794e-05, 3.129179276584182e-06, 0.0723666399717331, 0.010971054434776306, 0.1890668421983719, 0.0020856948103755713, 0.00021895499958191067], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.227462", "n_pass": [101, 11, 6], "n_token": 35, "loss": [0.5071527361869812, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "(", "model", "app_label", ",", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [18, 31, 2, 20, 4, 10, 13, 33, 8, 26]}}
{"prediction": {"error_location": 0.6022078394889832, "repair_targets": [], "repair_candidates": [0.2875455319881439, 0.09411579370498657, 0.07466216385364532, 0.013522892259061337, 0.00012502449681051075, 0.1022491306066513, 0.022855963557958603, 0.39927244186401367, 0.002827279968187213, 0.0028238173108547926], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.282969", "n_pass": [102, 12, 7], "n_token": 34, "loss": [0.552563488483429, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "app_label", ",", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [17, 30, 2, 19, 4, 9, 12, 32, 8, 25]}}
{"prediction": {"error_location": 0.5754727125167847, "repair_targets": [], "repair_candidates": [0.008131422102451324, 0.3087395429611206, 0.03107324428856373, 0.20288273692131042, 0.04480447247624397, 0.23171153664588928, 0.0017766046803444624, 0.1542675942182541, 0.004973509814590216, 0.011639266274869442], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.338323", "n_pass": [103, 13, 8], "n_token": 32, "loss": [0.311240017414093, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", ")", "#NEWLINE#", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [15, 28, 2, 17, 4, 9, 10, 30, 8, 23]}}
{"prediction": {"error_location": 0.7325379252433777, "repair_targets": [], "repair_candidates": [0.005019713193178177, 0.2399182915687561, 0.014853407628834248, 0.2770217955112457, 0.29157721996307373, 0.12821969389915466, 0.0010363803012296557, 0.03135194256901741, 0.0013954968890175223, 0.009606076404452324], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.396240", "n_pass": [105, 14, 9], "n_token": 30, "loss": [0.4476592242717743, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", ".", "_pending_operations", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 26, 2, 15, 4, 9, 10, 28, 8, 21]}}
{"prediction": {"error_location": 0.639122486114502, "repair_targets": [], "repair_candidates": [0.007521618623286486, 0.238447904586792, 0.03632284700870514, 0.05714210867881775, 0.029772985726594925, 0.597700834274292, 0.0008249524980783463, 0.009320523589849472, 0.0027281532529741526, 0.020218145102262497], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.451677", "n_pass": [108, 15, 10], "n_token": 28, "loss": [0.23883533477783203, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", ".", "pop", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 24, 2, 15, 4, 9, 10, 26, 8, 19]}}
{"prediction": {"error_location": 0.7875444889068604, "repair_targets": [], "repair_candidates": [0.016432546079158783, 0.10527455061674118, 0.03480319678783417, 0.018077248707413673, 0.007622103672474623, 0.7890003323554993, 0.008847194723784924, 0.01119024958461523, 0.005217676982283592, 0.0035348720848560333], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.507058", "n_pass": [109, 16, 11], "n_token": 26, "loss": [0.13195796310901642, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", ",", "[", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 22, 2, 15, 4, 9, 10, 24, 8, 17]}}
{"prediction": {"error_location": 0.8763778209686279, "repair_targets": [], "repair_candidates": [0.017153125256299973, 0.38132235407829285, 0.02447185479104519, 0.037894073873758316, 0.012362121604382992, 0.4878280460834503, 0.0027696890756487846, 0.019474729895591736, 0.006187840364873409, 0.010536150075495243], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.561523", "n_pass": [111, 17, 12], "n_token": 24, "loss": [0.08700987696647644, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "#NEWLINE#", "#INDENT#", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 20, 2, 15, 4, 9, 10, 22, 8, 17]}}
{"prediction": {"error_location": 0.9166679382324219, "repair_targets": [], "repair_candidates": [0.022746041417121887, 0.6075608134269714, 0.023319372907280922, 0.13184747099876404, 0.029718346893787384, 0.17336821556091309, 0.0016321162693202496, 0.0019601709209382534, 0.005246529821306467, 0.002600911306217313], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.616504", "n_pass": [112, 18, 13], "n_token": 22, "loss": [0.17752495408058167, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "def do_pending_operations(", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [13, 18, 2, 15, 4, 9, 10, 20, 8, 17]}}
{"prediction": {"error_location": 0.8373401761054993, "repair_targets": [], "repair_candidates": [0.01239981222897768, 0.0020495671778917313, 0.25672703981399536, 0.0011235254351049662, 0.0003698635846376419, 0.7240192890167236, 0.0008421921520493925, 0.0010151126189157367, 0.0010550337610766292, 0.0003985308576375246], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.671225", "n_pass": [116, 19, 14], "n_token": 21, "loss": [0.045030806213617325, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", ",", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [12, 17, 1, 14, 3, 8, 9, 19, 7, 16]}}
{"prediction": {"error_location": 0.955967903137207, "repair_targets": [], "repair_candidates": [0.5035974383354187, 0.011765735223889351, 0.19140397012233734, 0.0006214103777892888, 0.00044186587911099195, 0.2849917709827423, 0.003927977755665779, 0.0016268559265881777, 0.0015492909587919712, 7.371060928562656e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.728186", "n_pass": [118, 20, 15], "n_token": 20, "loss": [0.05265648290514946, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", ")", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [11, 16, 1, 13, 2, 7, 8, 18, 6, 15]}}
{"prediction": {"error_location": 0.9487058520317078, "repair_targets": [], "repair_candidates": [0.5972475409507751, 0.011522489599883556, 0.30159515142440796, 0.0002122529986081645, 0.00020473427139222622, 0.08519494533538818, 0.0020682576578110456, 0.0013882945058867335, 0.0005405502743087709, 2.577617487986572e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.782442", "n_pass": [120, 21, 16], "n_token": 19, "loss": [0.13401541113853455, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "'\\n        Take a newly-prepared model and pass it to each function waiting for\\n        it. This is called at the very end of `Apps.register_model()`.\\n        '", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [10, 15, 1, 12, 2, 6, 7, 17, 5, 14]}}
{"prediction": {"error_location": 0.8745765686035156, "repair_targets": [], "repair_candidates": [0.4742150902748108, 0.0625137910246849, 0.32473087310791016, 0.0010173320770263672, 0.0010612806072458625, 0.13215547800064087, 0.0020717098377645016, 0.001348727149888873, 0.0008620303706265986, 2.3598262487212196e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.836713", "n_pass": [121, 22, 17], "n_token": 18, "loss": [0.25623980164527893, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "#NEWLINE#", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [9, 14, 1, 11, 2, 5, 6, 16, 4, 13]}}
{"prediction": {"error_location": 0.7739563584327698, "repair_targets": [], "repair_candidates": [0.07217172533273697, 0.0056105018593370914, 0.5724647641181946, 0.0077524930238723755, 0.008993478491902351, 0.3185756504535675, 0.0028773490339517593, 0.004154766444116831, 0.007369929924607277, 2.9402632208075374e-05], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.891926", "n_pass": [122, 23, 18], "n_token": 17, "loss": [0.28873735666275024, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "model_name", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [8, 13, 1, 10, 2, 4, 5, 15, 3, 12]}}
{"prediction": {"error_location": 0.7492091059684753, "repair_targets": [], "repair_candidates": [0.08454445004463196, 0.000545177492313087, 0.25568482279777527, 0.003316593589261174, 0.004290417302399874, 0.5763576626777649, 0.007814119569957256, 0.008155789226293564, 0.059045422822237015, 0.00024553234106861055], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:04.947287", "n_pass": [147, 24, 19], "n_token": 16, "loss": [0.3879412114620209, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "for", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [7, 12, 1, 9, 2, 4, 5, 14, 3, 11]}}
{"prediction": {"error_location": 0.6784522533416748, "repair_targets": [], "repair_candidates": [0.07975620031356812, 0.0006875873077660799, 0.3224984407424927, 0.0019481502240523696, 0.000730836414732039, 0.5362405180931091, 0.003432266181334853, 0.005400912836194038, 0.04918481037020683, 0.00012022521696053445], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:05.001800", "n_pass": [148, 25, 20], "n_token": 15, "loss": [0.49391138553619385, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "function", "in", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 11, 1, 8, 2, 4, 5, 13, 3, 10]}}
{"prediction": {"error_location": 0.6102348566055298, "repair_targets": [], "repair_candidates": [0.0965324267745018, 0.2743346393108368, 0.5878787040710449, 0.020873958244919777, 0.004131088498979807, 0.010666931048035622, 0.001401080982759595, 0.002788633806630969, 0.0013883266365155578, 4.16806551584159e-06], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:05.059128", "n_pass": [150, 26, 21], "n_token": 14, "loss": [0.0649438425898552, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "function", "self", "(", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 10, 1, 7, 2, 4, 5, 12, 3, 9]}}
{"prediction": {"error_location": 0.9371200799942017, "repair_targets": [], "repair_candidates": [0.6844296455383301, 0.0004515788168646395, 0.1226135715842247, 0.0028789809439331293, 0.0026398866903036833, 0.03189672529697418, 0.028835562989115715, 0.0720519945025444, 0.05173255503177643, 0.0024695806205272675], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:05.113627", "n_pass": [152, 27, 22], "n_token": 13, "loss": [0.06782379746437073, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "function", "self", "key", "function", "(", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 1, 7, 2, 4, 5, 11, 3, 8]}}
{"prediction": {"error_location": 0.9344251155853271, "repair_targets": [], "repair_candidates": [0.2461772859096527, 0.004239268135279417, 0.025780243799090385, 0.00908972043544054, 0.011356338858604431, 0.11419644951820374, 0.18885286152362823, 0.22719979286193848, 0.1430300921201706, 0.03007793426513672], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:05.168116", "n_pass": [155, 28, 23], "n_token": 12, "loss": [0.03666737303137779, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "function", "self", "key", "function", "model", ")"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 1, 7, 2, 4, 5, 10, 3, 8]}}
{"prediction": {"error_location": 0.9639968276023865, "repair_targets": [], "repair_candidates": [0.25558388233184814, 0.02321689948439598, 0.040194589644670486, 0.029466042295098305, 0.02893715165555477, 0.031031858175992966, 0.141525998711586, 0.034399017691612244, 0.1753101646900177, 0.2403344064950943], "target_probs": 0.0}}


{"result": {"time": "2021-02-11 16:11:05.222905", "n_pass": [157, 29, 24], "n_token": 11, "loss": [0.000764792668633163, 0.0], "accuracy": [1.0, 0.0, 0.0, 0.0]}}
{"sample": {"has_bug": false, "source_tokens": ["#NEWLINE#", "self", "model", "key", "model", "model", "function", "self", "key", "function", "model"]}}
{"position": {"error_location": 0, "repair_targets": [], "repair_candidates": [6, 9, 1, 7, 2, 4, 5, 10, 3, 8]}}
{"prediction": {"error_location": 0.9992355108261108, "repair_targets": [], "repair_candidates": [0.19686037302017212, 0.11289691925048828, 0.08521207422018051, 0.091064453125, 0.08852232247591019, 0.06488245725631714, 0.06858883798122406, 0.1543808877468109, 0.07066600024700165, 0.06692573428153992], "target_probs": 0.0}}




Minimal simplified tokens:

['#NEWLINE#', 'self', 'model', 'key', 'model', 'model', 'function', 'self', 'key', 'function', 'model']
