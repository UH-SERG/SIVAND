
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator_reset.java
method_name = reset
method_body = public void reset() { super.reset(); H1 = 0x67452301; H2 = 0xefcdab89; H3 = 0x98badcfe; H4 = 0x10325476; H5 = 0xc3d2e1f0; xOff = 0; for (int i = 0; i != X.length; i++) { X[i] = 0; } }

topk path-contexts for subtoken-1: reset
[0.6500] super,SuperExpr0|MethodCallExpr|NameExpr2,reset
[0.0730] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,reset
[0.0612] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,reset
[0.0159] reset,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0104] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0103] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0089] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0082] reset,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0054] void,VoidType0|MethodDeclaration|NameExpr1,METHOD_NAME
[0.0049] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0048] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0047] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0047] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0043] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0043] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0043] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0043] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0043] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0040] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0035] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0034] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0028] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0025] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0025] h,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,xc|d|e|f
[0.0024] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0024] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0024] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0024] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0024] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0023] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0022] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0020] reset,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0020] reset,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0019] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0019] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0017] x|badcfe,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0016] h,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,xefcdab
[0.0016] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0016] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0015] i,NameExpr1|ArrayAccessExpr0|AssignExpr:assign|IntegerLiteralExpr1,0
[0.0014] x|off,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,0
[0.0013] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0013] x,NameExpr0|ArrayAccessExpr0|AssignExpr:assign|IntegerLiteralExpr1,0
[0.0013] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0012] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0012] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0012] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0012] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0011] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0010] x,NameExpr0|FieldAccessExpr|NameExpr2,length
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0010] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0010] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0009] xefcdab,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0009] i,NameExpr0|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0009] x,NameExpr0|ArrayAccessExpr0|NameExpr1,i
[0.0009] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0009] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0008] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xc|d|e|f
[0.0008] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0008] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0008] xefcdab,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0008] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0008] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0008] xefcdab,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0008] xefcdab,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0008] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0007] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0007] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0007] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0006] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0006] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0006] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0005] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0005] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0005] h,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,x
[0.0005] h,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,x
[0.0005] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0005] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0005] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0005] x|badcfe,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0005] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0005] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0004] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0004] h,NameExpr0|AssignExpr:assign|IntegerLiteralExpr1,x|badcfe
[0.0004] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0004] i,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,0
[0.0004] x|badcfe,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0004] x|badcfe,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0004] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0004] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0003] i,NameExpr0|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0003] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0003] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0003] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,length
[0.0003] length,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0003] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0003] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,0
[0.0003] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0003] x,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0002] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0002] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0002] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x|badcfe
[0.0002] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0002] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0002] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0002] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0002] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0002] x,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0002] void,VoidType0|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0002] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,x|off
[0.0002] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0002] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0001] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr0,x
[0.0001] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0001] i,NameExpr0|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0001] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,x
[0.0001] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0001] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|ArrayAccessExpr0|NameExpr1,i
[0.0001] super,SuperExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,xefcdab
[0.0000] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] void,VoidType0|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] x,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] super,SuperExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0000] super,SuperExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,h
[0.0000] i,NameExpr0|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] super,SuperExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|IntegerLiteralExpr1,x
[0.0000] xc|d|e|f,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0000] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0000] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] x|off,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] x,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:notEquals|NameExpr0,i
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] i,NameExpr0|BinaryExpr:notEquals|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] 0,IntegerLiteralExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] x,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] h,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] i,NameExpr0|BinaryExpr:notEquals|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i

topk terminals for subtoken-1: reset
[['super', 'reset'], ['METHOD_NAME', 'reset'], ['void', 'reset'], ['reset', 'xefcdab'], ['METHOD_NAME', 'xefcdab'], ['METHOD_NAME', 'xc|d|e|f'], ['METHOD_NAME', '0'], ['reset', 'x'], ['void', 'METHOD_NAME'], ['void', 'xc|d|e|f'], ['void', 'xefcdab'], ['METHOD_NAME', 'x'], ['METHOD_NAME', 'x'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'h'], ['METHOD_NAME', 'x|badcfe'], ['void', '0'], ['METHOD_NAME', '0'], ['void', '0'], ['METHOD_NAME', 'x|off'], ['h', 'xc|d|e|f'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['void', 'h'], ['void', 'x|badcfe'], ['METHOD_NAME', '0'], ['reset', 'h'], ['reset', 'h'], ['void', 'x'], ['void', 'x'], ['x|badcfe', 'xc|d|e|f'], ['h', 'xefcdab'], ['void', 'x'], ['void', '0'], ['i', '0'], ['x|off', '0'], ['void', 'x|off'], ['x', '0'], ['xc|d|e|f', '0'], ['int', '0'], ['METHOD_NAME', 'int'], ['0', '0'], ['0', '0'], ['void', 'int'], ['x', 'length'], ['int', '0'], ['METHOD_NAME', 'x'], ['x', 'xefcdab'], ['xefcdab', 'x'], ['i', 'length'], ['x', 'i'], ['h', 'xc|d|e|f'], ['h', 'xc|d|e|f'], ['x', 'xc|d|e|f'], ['void', 'x'], ['x|off', '0'], ['xefcdab', 'x|badcfe'], ['METHOD_NAME', 'length'], ['i', '0'], ['xefcdab', 'h'], ['xefcdab', 'h'], ['int', 'x'], ['xc|d|e|f', '0'], ['xc|d|e|f', '0'], ['h', '0'], ['METHOD_NAME', 'x'], ['xc|d|e|f', 'length'], ['void', 'length'], ['0', 'length'], ['x|off', 'length'], ['h', 'x'], ['h', 'x'], ['x', '0'], ['h', 'xefcdab'], ['xc|d|e|f', 'x'], ['x|badcfe', 'x'], ['i', '0'], ['METHOD_NAME', 'i'], ['x|off', '0'], ['h', 'x|badcfe'], ['void', 'i'], ['i', '0'], ['x|badcfe', 'h'], ['x|badcfe', 'h'], ['void', 'i'], ['x|off', 'x'], ['i', '0'], ['xc|d|e|f', 'int'], ['i', 'x'], ['h', 'length'], ['length', '0'], ['h', '0'], ['h', '0'], ['void', 'i'], ['int', 'i'], ['x', '0'], ['x', 'x|badcfe'], ['0', 'x'], ['xc|d|e|f', 'x|off'], ['h', 'x|badcfe'], ['h', 'x|badcfe'], ['METHOD_NAME', 'i'], ['x', 'x|off'], ['i', 'i'], ['x', 'h'], ['x', 'h'], ['x', 'h'], ['void', 'i'], ['x|off', 'int'], ['h', 'x'], ['h', 'x'], ['h', 'x|off'], ['h', 'x|off'], ['xc|d|e|f', 'i'], ['0', 'i'], ['METHOD_NAME', 'i'], ['h', 'x'], ['i', 'x'], ['0', '0'], ['h', '0'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['h', 'h'], ['i', 'x'], ['METHOD_NAME', 'super'], ['0', 'x'], ['xc|d|e|f', 'i'], ['i', 'i'], ['super', 'xefcdab'], ['h', 'int'], ['void', 'super'], ['x', 'int'], ['int', 'i'], ['super', 'h'], ['super', 'h'], ['i', 'int'], ['0', 'int'], ['length', 'int'], ['super', 'x'], ['xc|d|e|f', 'i'], ['x|off', 'i'], ['0', 'i'], ['x|off', 'i'], ['length', 'i'], ['0', 'i'], ['METHOD_NAME', 'i'], ['x|off', 'i'], ['x', 'i'], ['h', 'i'], ['i', 'i'], ['i', 'i'], ['0', 'i'], ['int', 'i'], ['length', 'i'], ['h', 'i'], ['0', 'i'], ['x', 'i'], ['h', 'i'], ['i', 'i']]

