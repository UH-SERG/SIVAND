
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-wsfederation-schema/src/main/java/com/sun/identity/wsfederation/jaxb/xmlsig/impl/TransformsTypeImpl_enterAttribute.java
method_name = enterAttribute
method_body = public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 3: revertToParentFromEnterAttribute(___uri, ___local, ___qname); return; case 1: if (("Algorithm" == ___local) && ("" == ___uri)) { _getTransform().add(((com.sun.identity.wsfederation.jaxb.xmlsig.impl.TransformTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.wsfederation.jaxb.xmlsig.impl.TransformTypeImpl.class), 2, ___uri, ___local, ___qname))); return; } break; } super.enterAttribute(___uri, ___local, ___qname); break; } }

topk path-contexts for subtoken-1: enter
[0.1356] qname,NameExpr3|MethodCallExpr|NameExpr3,enter|attribute
[0.1142] qname,NameExpr3|MethodCallExpr|NameExpr3,revert|to|parent|from|enter|attribute
[0.1098] local,NameExpr3|MethodCallExpr|NameExpr3,enter|attribute
[0.1034] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0942] local,NameExpr3|MethodCallExpr|NameExpr3,spawn|child|from|enter|attribute
[0.0713] qname,NameExpr3|MethodCallExpr|NameExpr3,spawn|child|from|enter|attribute
[0.0531] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0293] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0280] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0251] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0227] local,NameExpr2|MethodCallExpr|NameExpr3,revert|to|parent|from|enter|attribute
[0.0210] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,spawn|child|from|enter|attribute
[0.0193] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0190] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0185] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0181] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0148] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0119] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0060] uri,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0059] spawn|child|from|enter|attribute,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0057] local,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0057] local,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0051] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0045] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0042] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0034] uri,NameExpr3|MethodCallExpr|NameExpr3,local
[0.0024] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0023] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0021] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0019] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0019] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0019] void,VoidType0|MethodDeclaration|NameExpr1,METHOD_NAME
[0.0012] algorithm,StringLiteralExpr0|BinaryExpr:equals|NameExpr1,local
[0.0011] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0010] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0010] uri,NameExpr2|MethodCallExpr|NameExpr3,qname
[0.0010] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,<NUM>
[0.0009] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0009] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0009] local,NameExpr2|MethodCallExpr|NameExpr3,qname
[0.0009] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0009] BLANK,StringLiteralExpr0|BinaryExpr:equals|NameExpr1,uri
[0.0008] void,VoidType0|MethodDeclaration|Parameter|VariableDeclaratorId0,uri
[0.0008] qname,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0008] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,qname
[0.0008] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0008] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0007] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0007] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0007] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0007] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0007] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0006] <NUM>,IntegerLiteralExpr2|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0006] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr1,get|transform
[0.0005] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0005] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0005] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0005] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0005] uri,NameExpr2|MethodCallExpr|NameExpr3,local
[0.0005] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|VariableDeclaratorId0,uri
[0.0005] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr1,get|transform
[0.0005] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0005] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0005] qname,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0004] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0004] local,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0004] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0004] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0004] uri,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0004] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0004] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0004] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0004] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0003] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0003] BLANK,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0003] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0003] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0003] uri,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0003] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0003] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,local
[0.0003] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0003] local,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0003] local,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0003] void,VoidType0|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0003] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0002] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] uri,NameExpr1|MethodCallExpr|NameExpr3,qname
[0.0002] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0002] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0002] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0002] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0002] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0002] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0002] local,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0002] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,uri
[0.0001] uri,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,att|idx
[0.0001] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0001] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0001] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0001] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,<NUM>
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0001] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0001] uri,NameExpr1|MethodCallExpr|NameExpr2,local
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] org,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] <NUM>,IntegerLiteralExpr2|MethodCallExpr|NameExpr3,local
[0.0001] local,VariableDeclaratorId0|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0001] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0001] <NUM>,IntegerLiteralExpr2|MethodCallExpr|NameExpr3,uri
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0001] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0000] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0000] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|IntegerLiteralExpr2,<NUM>
[0.0000] att|idx,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0000] super,SuperExpr0|MethodCallExpr|NameExpr2,uri
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0000] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0000] org,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,att|idx
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0000] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super

topk terminals for subtoken-1: enter
[['qname', 'enter|attribute'], ['qname', 'revert|to|parent|from|enter|attribute'], ['local', 'enter|attribute'], ['state', 'enter|attribute'], ['local', 'spawn|child|from|enter|attribute'], ['qname', 'spawn|child|from|enter|attribute'], ['state', 'revert|to|parent|from|enter|attribute'], ['<NUM>', 'enter|attribute'], ['qname', 'enter|attribute'], ['1', 'enter|attribute'], ['local', 'revert|to|parent|from|enter|attribute'], ['get|transform', 'spawn|child|from|enter|attribute'], ['local', 'enter|attribute'], ['<NUM>', 'revert|to|parent|from|enter|attribute'], ['revert|to|parent|from|enter|attribute', 'enter|attribute'], ['true', 'revert|to|parent|from|enter|attribute'], ['uri', 'enter|attribute'], ['true', 'enter|attribute'], ['uri', 'qname'], ['spawn|child|from|enter|attribute', 'add'], ['local', 'qname'], ['local', 'qname'], ['revert|to|parent|from|enter|attribute', 'qname'], ['revert|to|parent|from|enter|attribute', '1'], ['state', 'qname'], ['uri', 'local'], ['state', 'local'], ['state', 'add'], ['revert|to|parent|from|enter|attribute', 'local'], ['qname', 'state'], ['state', 'qname'], ['void', 'METHOD_NAME'], ['algorithm', 'local'], ['algorithm', 'BLANK'], ['<NUM>', 'add'], ['uri', 'qname'], ['true', '<NUM>'], ['java', 'qname'], ['java', 'qname'], ['local', 'qname'], ['qname', 'qname'], ['BLANK', 'uri'], ['void', 'uri'], ['qname', 'add'], ['get|transform', 'qname'], ['revert|to|parent|from|enter|attribute', 'uri'], ['1', 'add'], ['true', '1'], ['algorithm', 'add'], ['qname', 'true'], ['qname', 'int'], ['true', 'qname'], ['<NUM>', 'add'], ['state', 'get|transform'], ['<NUM>', 'qname'], ['java', 'local'], ['qname', 'local'], ['true', 'qname'], ['uri', 'local'], ['METHOD_NAME', 'uri'], ['1', 'get|transform'], ['true', 'state'], ['1', 'qname'], ['qname', 'java'], ['state', 'algorithm'], ['local', 'qname'], ['algorithm', 'uri'], ['local', 'qname'], ['uri', 'add'], ['METHOD_NAME', 'local'], ['uri', 'qname'], ['local', 'add'], ['uri', 'qname'], ['true', 'local'], ['BLANK', 'add'], ['<NUM>', 'qname'], ['qname', '1'], ['uri', 'add'], ['<NUM>', 'algorithm'], ['get|transform', 'local'], ['<NUM>', 'local'], ['local', 'java'], ['local', 'add'], ['void', 'java'], ['1', 'local'], ['java', 'int'], ['uri', 'qname'], ['state', 'uri'], ['state', 'BLANK'], ['uri', 'local'], ['local', 'BLANK'], ['local', 'local'], ['uri', 'local'], ['local', 'java'], ['get|transform', 'uri'], ['uri', 'java'], ['qname', 'att|idx'], ['uri', 'java'], ['uri', 'java'], ['state', 'local'], ['qname', 'uri'], ['qname', 'org'], ['state', 'local'], ['state', 'uri'], ['<NUM>', 'BLANK'], ['state', '<NUM>'], ['java', 'true'], ['1', 'algorithm'], ['state', 'uri'], ['uri', 'local'], ['METHOD_NAME', 'java'], ['METHOD_NAME', 'java'], ['org', 'int'], ['<NUM>', 'local'], ['local', 'org'], ['state', '1'], ['true', 'uri'], ['<NUM>', 'uri'], ['java', 'java'], ['java', 'java'], ['java', 'java'], ['true', 'uri'], ['<NUM>', 'uri'], ['<NUM>', '1'], ['<NUM>', 'uri'], ['1', 'uri'], ['true', 'local'], ['1', 'BLANK'], ['local', 'uri'], ['<NUM>', 'uri'], ['uri', '1'], ['int', 'state'], ['<NUM>', 'local'], ['local', 'uri'], ['get|transform', '<NUM>'], ['att|idx', 'true'], ['uri', 'uri'], ['int', 'true'], ['super', 'uri'], ['<NUM>', 'local'], ['local', '1'], ['java', 'org'], ['java', 'org'], ['1', 'uri'], ['org', 'true'], ['int', 'att|idx'], ['1', 'local'], ['revert|to|parent|from|enter|attribute', 'super'], ['state', 'super'], ['qname', 'super'], ['local', 'super'], ['true', 'super'], ['uri', 'super'], ['<NUM>', 'super'], ['1', 'super']]

topk path-contexts for subtoken-2: attribute
[0.3608] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0973] local,NameExpr3|MethodCallExpr|NameExpr3,enter|attribute
[0.0883] qname,NameExpr3|MethodCallExpr|NameExpr3,enter|attribute
[0.0480] local,NameExpr3|MethodCallExpr|NameExpr3,spawn|child|from|enter|attribute
[0.0335] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0329] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0317] qname,NameExpr3|MethodCallExpr|NameExpr3,spawn|child|from|enter|attribute
[0.0303] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0281] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0281] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0268] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0156] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,spawn|child|from|enter|attribute
[0.0090] qname,NameExpr3|MethodCallExpr|NameExpr3,revert|to|parent|from|enter|attribute
[0.0084] void,VoidType0|MethodDeclaration|NameExpr1,METHOD_NAME
[0.0080] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0068] spawn|child|from|enter|attribute,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0066] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0061] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0059] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0049] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,enter|attribute
[0.0048] void,VoidType0|MethodDeclaration|Parameter|VariableDeclaratorId0,uri
[0.0046] local,NameExpr2|MethodCallExpr|NameExpr3,revert|to|parent|from|enter|attribute
[0.0046] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|VariableDeclaratorId0,uri
[0.0045] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0035] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0029] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0025] local,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0023] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0023] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0021] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0019] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0019] algorithm,StringLiteralExpr0|BinaryExpr:equals|NameExpr1,local
[0.0019] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0018] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,revert|to|parent|from|enter|attribute
[0.0017] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0017] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0017] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0016] BLANK,StringLiteralExpr0|BinaryExpr:equals|NameExpr1,uri
[0.0011] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0011] void,VoidType0|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0010] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0010] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0010] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|IntegerLiteralExpr2,<NUM>
[0.0010] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,<NUM>
[0.0009] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0009] uri,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0009] algorithm,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0009] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0009] local,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0009] local,NameExpr3|MethodCallExpr|NameExpr3,qname
[0.0008] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0008] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,algorithm
[0.0008] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0007] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr1,get|transform
[0.0007] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0007] qname,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0007] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0006] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0006] local,NameExpr2|MethodCallExpr|NameExpr3,qname
[0.0006] uri,NameExpr2|MethodCallExpr|NameExpr3,qname
[0.0006] state,NameExpr0|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,<NUM>
[0.0006] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,qname
[0.0006] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0005] local,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0005] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0005] local,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0005] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0005] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0005] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0005] qname,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0004] <NUM>,IntegerLiteralExpr2|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0004] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0004] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0004] uri,VariableDeclaratorId0|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0004] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0004] uri,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0003] uri,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0003] uri,NameExpr1|MethodCallExpr|NameExpr3,qname
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BlockStmt|SwitchStmt|NameExpr0,state
[0.0003] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|StringLiteralExpr0,BLANK
[0.0003] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0003] uri,NameExpr3|MethodCallExpr|NameExpr3,local
[0.0003] local,NameExpr3|MethodCallExpr|CastExpr|EnclosedExpr2|MethodCallExpr|NameExpr3,add
[0.0003] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0003] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0003] BLANK,StringLiteralExpr0|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0003] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0003] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0003] uri,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0002] <NUM>,IntegerLiteralExpr2|MethodCallExpr|NameExpr3,uri
[0.0002] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,uri
[0.0002] att|idx,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0002] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0002] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0002] local,NameExpr1|BinaryExpr:equals|EnclosedExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0002] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,att|idx
[0.0002] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IntegerLiteralExpr0,1
[0.0002] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0002] uri,NameExpr2|MethodCallExpr|NameExpr3,local
[0.0002] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0002] qname,VariableDeclaratorId0|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0002] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr1,get|transform
[0.0002] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,local
[0.0002] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0002] <NUM>,IntegerLiteralExpr2|MethodCallExpr|NameExpr3,local
[0.0002] local,VariableDeclaratorId0|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0002] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0002] get|transform,NameExpr1|MethodCallExpr0|MethodCallExpr|EnclosedExpr|CastExpr|MethodCallExpr1|NameExpr3,uri
[0.0002] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BinaryExpr:and|EnclosedExpr|BinaryExpr:equals|NameExpr1,local
[0.0001] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0001] uri,NameExpr1|MethodCallExpr|NameExpr2,local
[0.0001] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0001] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0001] org,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] super,SuperExpr0|MethodCallExpr|NameExpr2,uri
[0.0001] 1,IntegerLiteralExpr0|SwitchEntryStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add
[0.0001] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,qname
[0.0001] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,att|idx
[0.0001] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0001] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0001] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0001] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0001] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,qname
[0.0001] state,NameExpr0|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0001] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|VariableDeclaratorId0,local
[0.0000] state,NameExpr0|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|Parameter|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0000] org,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|MethodDeclaration|BlockStmt|LabeledStmt|WhileStmt|BooleanLiteralExpr0,true
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr1,uri
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,local
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,uri
[0.0000] local,NameExpr2|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|SwitchStmt|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0000] qname,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0000] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|Parameter|MethodDeclaration|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,org
[0.0000] true,BooleanLiteralExpr0|WhileStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] revert|to|parent|from|enter|attribute,NameExpr3|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,local
[0.0000] uri,NameExpr1|MethodCallExpr|ExpressionStmt|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] <NUM>,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super
[0.0000] 1,IntegerLiteralExpr0|SwitchEntryStmt|SwitchStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|SuperExpr0,super

topk terminals for subtoken-2: attribute
[['state', 'enter|attribute'], ['local', 'enter|attribute'], ['qname', 'enter|attribute'], ['local', 'spawn|child|from|enter|attribute'], ['qname', 'enter|attribute'], ['<NUM>', 'enter|attribute'], ['qname', 'spawn|child|from|enter|attribute'], ['1', 'enter|attribute'], ['uri', 'enter|attribute'], ['local', 'enter|attribute'], ['true', 'enter|attribute'], ['get|transform', 'spawn|child|from|enter|attribute'], ['qname', 'revert|to|parent|from|enter|attribute'], ['void', 'METHOD_NAME'], ['state', 'revert|to|parent|from|enter|attribute'], ['spawn|child|from|enter|attribute', 'add'], ['qname', 'state'], ['algorithm', 'BLANK'], ['algorithm', 'uri'], ['revert|to|parent|from|enter|attribute', 'enter|attribute'], ['void', 'uri'], ['local', 'revert|to|parent|from|enter|attribute'], ['METHOD_NAME', 'uri'], ['qname', 'true'], ['qname', 'int'], ['state', 'algorithm'], ['local', 'qname'], ['true', 'revert|to|parent|from|enter|attribute'], ['state', 'BLANK'], ['METHOD_NAME', 'local'], ['local', 'uri'], ['algorithm', 'local'], ['<NUM>', 'algorithm'], ['<NUM>', 'revert|to|parent|from|enter|attribute'], ['uri', 'qname'], ['local', 'BLANK'], ['qname', '1'], ['BLANK', 'uri'], ['state', 'qname'], ['void', 'java'], ['true', '1'], ['state', 'uri'], ['get|transform', '<NUM>'], ['true', '<NUM>'], ['revert|to|parent|from|enter|attribute', '1'], ['uri', 'qname'], ['algorithm', 'add'], ['uri', 'local'], ['local', 'qname'], ['local', 'qname'], ['state', 'add'], ['1', 'algorithm'], ['local', '1'], ['state', 'get|transform'], ['<NUM>', 'BLANK'], ['qname', 'java'], ['state', '1'], ['state', 'local'], ['local', 'qname'], ['uri', 'qname'], ['state', '<NUM>'], ['get|transform', 'qname'], ['state', 'qname'], ['local', 'java'], ['uri', '1'], ['local', 'java'], ['METHOD_NAME', 'java'], ['METHOD_NAME', 'java'], ['true', 'state'], ['qname', 'add'], ['<NUM>', 'add'], ['revert|to|parent|from|enter|attribute', 'qname'], ['<NUM>', 'uri'], ['uri', 'java'], ['uri', 'java'], ['uri', 'java'], ['uri', 'add'], ['uri', 'qname'], ['int', 'state'], ['1', 'BLANK'], ['state', 'uri'], ['uri', 'local'], ['local', 'add'], ['state', 'local'], ['java', 'int'], ['BLANK', 'add'], ['int', 'true'], ['revert|to|parent|from|enter|attribute', 'uri'], ['java', 'true'], ['uri', 'add'], ['<NUM>', 'uri'], ['1', 'uri'], ['att|idx', 'true'], ['<NUM>', 'local'], ['qname', 'qname'], ['local', 'add'], ['qname', 'att|idx'], ['<NUM>', '1'], ['<NUM>', 'add'], ['uri', 'local'], ['true', 'qname'], ['qname', 'org'], ['1', 'get|transform'], ['get|transform', 'local'], ['state', 'uri'], ['<NUM>', 'local'], ['local', 'org'], ['true', 'qname'], ['get|transform', 'uri'], ['1', 'local'], ['local', 'qname'], ['uri', 'local'], ['qname', 'uri'], ['revert|to|parent|from|enter|attribute', 'local'], ['org', 'int'], ['super', 'uri'], ['1', 'add'], ['uri', 'qname'], ['java', 'qname'], ['java', 'qname'], ['<NUM>', 'qname'], ['int', 'att|idx'], ['1', 'qname'], ['local', 'uri'], ['qname', 'local'], ['true', 'uri'], ['<NUM>', 'qname'], ['state', 'local'], ['java', 'local'], ['state', 'super'], ['java', 'java'], ['java', 'java'], ['java', 'java'], ['true', 'local'], ['org', 'true'], ['uri', 'uri'], ['local', 'local'], ['<NUM>', 'uri'], ['true', 'uri'], ['uri', 'local'], ['1', 'local'], ['<NUM>', 'local'], ['<NUM>', 'uri'], ['1', 'uri'], ['local', 'super'], ['true', 'local'], ['qname', 'super'], ['java', 'org'], ['java', 'org'], ['true', 'super'], ['revert|to|parent|from|enter|attribute', 'super'], ['<NUM>', 'local'], ['uri', 'super'], ['<NUM>', 'super'], ['1', 'super']]

