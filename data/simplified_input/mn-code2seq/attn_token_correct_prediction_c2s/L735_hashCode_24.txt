
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wildfly__jandex/src/main/java/org/jboss/jandex/WildcardType_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hash = this.hash; if (hash != 0) { return hash; } hash = super.hashCode(); hash = 31 * hash + (isExtends ? 1 : 0); hash = 31 * hash + bound.hashCode(); return this.hash = hash; }

topk path-contexts for subtoken-1: hash
[0.3751] super,SuperExpr0|MethodCallExpr1|NameExpr2,hash|code
[0.0780] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0520] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0388] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0280] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0277] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0276] bound,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0272] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0226] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0210] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0168] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0166] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0153] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0121] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0107] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0107] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0089] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0081] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0077] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0076] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0074] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0074] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0064] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0064] hash,NameExpr0|AssignExpr:assign|MethodCallExpr1|NameExpr2,hash|code
[0.0060] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0059] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0056] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0054] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0054] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0049] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0041] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0041] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0038] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0037] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0037] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0037] this,ThisExpr0|FieldAccessExpr0|AssignExpr:assign|NameExpr1,hash
[0.0033] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0031] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0031] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0031] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0030] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0027] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0022] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,bound
[0.0022] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0022] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0021] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0020] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0020] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0020] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0018] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0017] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,bound
[0.0016] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0016] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0015] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0015] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0015] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0015] this,ThisExpr0|FieldAccessExpr0|NameExpr2,hash
[0.0014] this,ThisExpr0|FieldAccessExpr|NameExpr2,hash
[0.0014] hash,NameExpr2|FieldAccessExpr0|AssignExpr:assign|NameExpr1,hash
[0.0013] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0013] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0013] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0011] hash,NameExpr0|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0009] hash,VariableDeclaratorId0|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0009] is|extends,NameExpr0|ConditionalExpr|IntegerLiteralExpr1,1
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0009] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0009] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0008] is|extends,NameExpr0|ConditionalExpr|IntegerLiteralExpr2,0
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0008] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0008] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0008] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0007] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0007] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0007] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0007] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0007] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0007] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0007] bound,NameExpr0|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0006] 1,IntegerLiteralExpr1|ConditionalExpr|IntegerLiteralExpr2,0
[0.0006] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0006] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0005] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0005] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0004] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0004] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0004] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0004] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0004] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,hash
[0.0004] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,hash
[0.0003] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0003] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0002] hash|code,NameExpr2|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0002] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0002] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0002] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0002] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0002] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0002] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0002] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0002] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0001] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0001] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,VariableDeclaratorId0|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0001] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0001] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0001] hash|code,NameExpr2|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash|code,NameExpr2|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0001] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0001] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0000] hash,NameExpr0|AssignExpr:assign|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0000] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] super,SuperExpr0|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] super,SuperExpr0|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash

topk terminals for subtoken-1: hash
[['super', 'hash|code'], ['int', 'hash|code'], ['int', 'this'], ['int', '0'], ['int', 'METHOD_NAME'], ['METHOD_NAME', 'hash|code'], ['bound', 'hash|code'], ['hash', 'hash|code'], ['int', 'int'], ['int', 'hash|code'], ['METHOD_NAME', 'this'], ['int', 'bound'], ['int', 'hash|code'], ['0', 'hash|code'], ['int', '<NUM>'], ['int', '<NUM>'], ['int', '0'], ['hash', 'hash|code'], ['<NUM>', 'hash|code'], ['int', '1'], ['int', 'hash'], ['int', 'this'], ['int', 'hash'], ['hash', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['hash', 'hash|code'], ['int', 'hash'], ['hash', 'hash|code'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'bound'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', '0'], ['hash', 'hash|code'], ['0', 'hash'], ['METHOD_NAME', 'hash'], ['override', 'METHOD_NAME'], ['int', 'hash'], ['this', 'hash'], ['int', 'hash'], ['int', 'hash'], ['int', 'hash'], ['int', 'hash'], ['int', 'hash'], ['hash', 'hash'], ['<NUM>', 'bound'], ['hash', 'hash|code'], ['hash', 'hash|code'], ['hash', 'hash'], ['METHOD_NAME', '<NUM>'], ['METHOD_NAME', '<NUM>'], ['override', 'int'], ['int', 'hash'], ['hash', 'bound'], ['METHOD_NAME', 'int'], ['hash', 'bound'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['this', 'hash'], ['this', 'hash'], ['hash', 'hash'], ['int', 'hash'], ['hash', 'this'], ['hash', 'this'], ['hash', '0'], ['METHOD_NAME', 'this'], ['hash', 'hash'], ['is|extends', '1'], ['METHOD_NAME', '1'], ['hash', 'bound'], ['hash', 'bound'], ['is|extends', '0'], ['METHOD_NAME', '0'], ['METHOD_NAME', 'hash'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['int', 'hash'], ['int', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['METHOD_NAME', 'hash'], ['bound', 'hash'], ['1', '0'], ['0', '<NUM>'], ['<NUM>', '1'], ['int', 'is|extends'], ['<NUM>', '0'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['hash', 'hash'], ['hash', '0'], ['<NUM>', 'hash'], ['<NUM>', 'hash'], ['<NUM>', 'hash'], ['<NUM>', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash|code', 'hash'], ['0', 'hash'], ['0', 'hash'], ['int', 'hash'], ['<NUM>', 'hash'], ['int', '0'], ['hash', '1'], ['<NUM>', 'is|extends'], ['this', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', '0'], ['hash', '<NUM>'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['0', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['hash', 'this'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'super'], ['hash', '0'], ['this', '0'], ['hash|code', 'hash'], ['hash|code', 'hash'], ['hash', '1'], ['METHOD_NAME', 'is|extends'], ['int', 'super'], ['0', 'super'], ['hash', 'is|extends'], ['hash', 'super'], ['hash', 'hash'], ['hash', 'super'], ['hash', 'is|extends'], ['METHOD_NAME', 'hash'], ['int', 'this'], ['hash', 'super'], ['super', 'hash'], ['super', 'hash'], ['METHOD_NAME', 'super'], ['int', 'super'], ['hash', 'hash'], ['hash', '0'], ['int', 'hash'], ['int', 'hash'], ['this', 'hash'], ['hash', 'hash']]

topk path-contexts for subtoken-2: code
[0.3447] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0787] super,SuperExpr0|MethodCallExpr1|NameExpr2,hash|code
[0.0434] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0413] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0331] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0266] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0260] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0203] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0147] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0143] bound,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0135] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0135] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0123] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0119] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0119] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0113] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0110] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0108] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0108] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0105] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0098] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0098] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0097] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0097] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0097] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0088] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0084] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0072] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0068] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0065] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0060] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0059] this,ThisExpr0|FieldAccessExpr|NameExpr2,hash
[0.0058] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0055] 1,IntegerLiteralExpr1|ConditionalExpr|IntegerLiteralExpr2,0
[0.0051] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0044] this,ThisExpr0|FieldAccessExpr0|NameExpr2,hash
[0.0042] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0042] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0039] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0037] this,ThisExpr0|FieldAccessExpr0|AssignExpr:assign|NameExpr1,hash
[0.0036] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0033] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0031] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0029] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0026] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0025] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0024] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0023] hash,VariableDeclaratorId0|VariableDeclarator|FieldAccessExpr1|NameExpr2,hash
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0017] int,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0016] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0015] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0015] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0015] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0013] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0013] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0013] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0012] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,bound
[0.0012] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0010] is|extends,NameExpr0|ConditionalExpr|IntegerLiteralExpr2,0
[0.0010] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0010] hash,NameExpr0|AssignExpr:assign|MethodCallExpr1|NameExpr2,hash|code
[0.0010] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0009] is|extends,NameExpr0|ConditionalExpr|IntegerLiteralExpr1,1
[0.0009] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|NameExpr2,hash|code
[0.0009] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0007] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0007] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0007] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0007] hash,NameExpr0|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0007] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,bound
[0.0007] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,hash
[0.0007] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,hash
[0.0006] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0006] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0005] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0004] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0004] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0004] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0004] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|NameExpr2,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0003] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr2,0
[0.0003] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0003] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0002] hash,NameExpr2|FieldAccessExpr0|AssignExpr:assign|NameExpr1,hash
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|FieldAccessExpr0|ThisExpr0,this
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0002] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,bound
[0.0002] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0001] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,hash
[0.0001] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,1
[0.0001] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] bound,NameExpr0|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] hash,VariableDeclaratorId0|VariableDeclarator|FieldAccessExpr1|ThisExpr0,this
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0001] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0001] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,hash
[0.0001] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0001] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash
[0.0000] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|IntegerLiteralExpr1,0
[0.0000] hash|code,NameExpr2|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0000] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr2|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] this,ThisExpr0|FieldAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0000] 0,IntegerLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash|code,NameExpr2|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash|code,NameExpr2|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0000] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|AssignExpr:assign0|NameExpr1,hash
[0.0000] hash,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0000] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|NameExpr0,is|extends
[0.0000] super,SuperExpr0|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] super,SuperExpr0|MethodCallExpr1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash
[0.0000] hash,NameExpr0|AssignExpr:assign|MethodCallExpr1|SuperExpr0,super
[0.0000] hash,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|MethodCallExpr1|SuperExpr0,super
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash
[0.0000] hash,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,hash

topk terminals for subtoken-2: code
[['int', 'METHOD_NAME'], ['super', 'hash|code'], ['int', '0'], ['int', 'int'], ['override', 'METHOD_NAME'], ['int', 'hash|code'], ['override', 'int'], ['int', 'hash'], ['METHOD_NAME', 'hash'], ['bound', 'hash|code'], ['METHOD_NAME', '<NUM>'], ['METHOD_NAME', '<NUM>'], ['int', 'this'], ['METHOD_NAME', '0'], ['int', '0'], ['METHOD_NAME', 'hash|code'], ['int', 'this'], ['int', 'hash'], ['int', 'hash|code'], ['int', 'hash'], ['METHOD_NAME', '1'], ['METHOD_NAME', 'this'], ['int', '<NUM>'], ['int', '<NUM>'], ['<NUM>', 'hash|code'], ['int', '1'], ['METHOD_NAME', 'int'], ['hash', 'hash|code'], ['0', 'hash|code'], ['int', 'hash|code'], ['METHOD_NAME', '0'], ['this', 'hash'], ['hash', 'hash|code'], ['1', '0'], ['METHOD_NAME', 'hash|code'], ['this', 'hash'], ['hash', 'hash|code'], ['hash', 'hash|code'], ['int', 'bound'], ['this', 'hash'], ['int', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'bound'], ['hash', 'hash|code'], ['this', '0'], ['0', '<NUM>'], ['int', 'hash'], ['<NUM>', '0'], ['hash', 'hash'], ['int', 'hash'], ['int', 'hash'], ['int', 'hash'], ['0', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'this'], ['<NUM>', '1'], ['int', 'hash'], ['int', 'hash'], ['int', 'hash'], ['<NUM>', 'bound'], ['hash', '0'], ['is|extends', '0'], ['hash', 'hash|code'], ['hash', 'hash|code'], ['hash', '1'], ['is|extends', '1'], ['hash', 'hash|code'], ['hash', '0'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['int', 'hash'], ['METHOD_NAME', 'hash'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['hash', '0'], ['hash', 'bound'], ['<NUM>', 'hash'], ['<NUM>', 'hash'], ['int', 'hash'], ['METHOD_NAME', 'hash'], ['METHOD_NAME', 'hash'], ['int', '0'], ['METHOD_NAME', 'hash'], ['hash', 'bound'], ['int', 'this'], ['hash', '<NUM>'], ['hash', '<NUM>'], ['0', 'hash'], ['METHOD_NAME', 'hash'], ['this', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', '0'], ['hash', '<NUM>'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'this'], ['hash', 'this'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'bound'], ['hash', 'bound'], ['hash', 'hash'], ['<NUM>', 'hash'], ['<NUM>', 'hash'], ['int', 'is|extends'], ['hash', 'hash'], ['hash', '1'], ['0', 'hash'], ['0', 'hash'], ['bound', 'hash'], ['hash', 'this'], ['int', 'hash'], ['METHOD_NAME', 'is|extends'], ['hash', 'hash'], ['hash', 'hash'], ['<NUM>', 'hash'], ['hash', 'hash'], ['hash', 'super'], ['hash', 'hash'], ['int', 'hash'], ['hash', '0'], ['hash|code', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['int', 'super'], ['this', 'hash'], ['<NUM>', 'is|extends'], ['0', 'super'], ['hash', 'super'], ['hash', 'hash'], ['hash', 'hash'], ['hash|code', 'hash'], ['hash|code', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['int', 'super'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'is|extends'], ['hash', 'hash'], ['hash', 'hash'], ['hash', 'hash'], ['METHOD_NAME', 'super'], ['hash', 'is|extends'], ['super', 'hash'], ['super', 'hash'], ['hash', 'super'], ['hash', 'super'], ['int', 'hash'], ['hash', 'hash']]

