
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/demilich1__metastone/game/src/main/java/net/demilich/metastone/game/spells/desc/SpellDesc_toString.java
method_name = toString
method_body = @Override public String toString() { String result = "[SpellDesc arguments= {\n"; for (SpellArg spellArg : arguments.keySet()) { result += "\t" + spellArg + ": " + arguments.get(spellArg) + "\n"; } result += "}"; return result; }

topk path-contexts for subtoken-1: to
[0.3853] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0955] string,ClassOrInterfaceType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0947] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0386] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0373] result,NameExpr0|AssignExpr:plus|StringLiteralExpr1,}
[0.0280] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0279] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0221] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0201] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0190] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0179] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|ClassOrInterfaceType1,string
[0.0145] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0145] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0132] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0099] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0080] },StringLiteralExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0074] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0069] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0068] arguments,NameExpr0|MethodCallExpr|NameExpr2,spell|arg
[0.0067] arguments,NameExpr0|MethodCallExpr|NameExpr2,key|set
[0.0057] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0055] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0051] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0050] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0046] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0045] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0040] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0040] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0040] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0039] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0037] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr0,t
[0.0036] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0034] result,VariableDeclaratorId0|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0032] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0032] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0030] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0029] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0028] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0026] spell|arg,NameExpr2|MethodCallExpr|NameExpr3,get
[0.0025] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0022] t,StringLiteralExpr0|BinaryExpr:plus|NameExpr1,spell|arg
[0.0020] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0019] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0017] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0012] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0011] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0011] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0011] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0011] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0011] BLANK,StringLiteralExpr1|BinaryExpr:plus1|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0011] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0011] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0010] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0008] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0008] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0008] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0007] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0007] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0007] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0006] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0006] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0005] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0005] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0005] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0004] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0003] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0003] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|NameExpr1,spell|arg
[0.0003] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0003] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0003] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0003] arguments,NameExpr0|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0002] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0002] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0002] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0002] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0002] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0002] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0002] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0002] get,NameExpr3|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0002] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0002] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0002] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0001] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0001] spell|arg,NameExpr2|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0000] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0000] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result

topk terminals for subtoken-1: to
[['string', '}'], ['string', 'METHOD_NAME'], ['METHOD_NAME', '}'], ['string', 'result'], ['result', '}'], ['string', 'result'], ['string', 'key|set'], ['override', 'METHOD_NAME'], ['string', 'arguments'], ['METHOD_NAME', 'result'], ['override', 'string'], ['string', 'result'], ['METHOD_NAME', 'result'], ['string', 'spell|desc|arguments|{'], ['spell|desc|arguments|{', '}'], ['}', 'result'], ['string', '}'], ['string', 'string'], ['arguments', 'spell|arg'], ['arguments', 'key|set'], ['result', 'result'], ['t', ':'], ['result', 'spell|arg'], ['result', '}'], [':', 'spell|arg'], ['METHOD_NAME', 'spell|desc|arguments|{'], ['METHOD_NAME', 'arguments'], ['METHOD_NAME', 'key|set'], ['string', 'result'], ['string', 'BLANK'], ['result', 't'], ['spell|desc|arguments|{', 'result'], ['result', 'spell|desc|arguments|{'], ['key|set', 'result'], ['string', 'spell|desc|arguments|{'], ['arguments', 'result'], ['result', 'arguments'], ['t', 'spell|arg'], ['spell|arg', 'get'], ['t', 'arguments'], ['t', 'spell|arg'], ['string', 'spell|arg'], [':', 'arguments'], ['result', 'result'], ['result', '}'], ['spell|arg', 'result'], ['t', 'BLANK'], ['t', 'get'], ['result', 'get'], ['BLANK', 'result'], ['string', 'spell|arg'], ['result', 'BLANK'], ['spell|arg', 'spell|arg'], ['result', 'key|set'], ['result', 'arguments'], ['spell|desc|arguments|{', 'key|set'], ['spell|arg', 'result'], ['METHOD_NAME', 'result'], ['spell|desc|arguments|{', 'arguments'], ['string', 'key|set'], ['arguments', '}'], ['string', 'arguments'], ['spell|arg', ':'], ['spell|arg', 'key|set'], [':', 'get'], ['spell|arg', 'arguments'], ['METHOD_NAME', 'spell|arg'], ['key|set', '}'], ['result', 'spell|arg'], ['result', 'result'], ['spell|arg', 'get'], ['spell|arg', 'arguments'], ['arguments', 'BLANK'], ['arguments', 'result'], ['arguments', 'result'], [':', 'BLANK'], ['result', ':'], ['spell|arg', 'arguments'], ['spell|arg', 'key|set'], ['spell|desc|arguments|{', 'spell|arg'], ['get', 'BLANK'], ['spell|desc|arguments|{', 'spell|arg'], ['key|set', 'result'], ['key|set', 'result'], ['spell|arg', '}'], ['spell|arg', '}'], ['spell|arg', 'BLANK'], ['METHOD_NAME', 'BLANK'], ['METHOD_NAME', 'spell|arg'], ['spell|arg', 'result'], ['spell|arg', 'result'], ['METHOD_NAME', 'string'], ['spell|arg', 'result'], ['spell|arg', 'result'], ['spell|arg', 'spell|arg'], ['string', 'spell|arg'], ['string', 'result'], ['arguments', 'BLANK'], ['spell|arg', 'BLANK'], ['result', 'spell|arg'], ['key|set', 'BLANK'], ['spell|arg', 'BLANK'], ['result', 'result'], ['spell|arg', 'BLANK'], ['string', 'result'], ['METHOD_NAME', 'result'], ['result', 'spell|arg'], ['string', 'spell|arg'], ['string', 'result']]

topk path-contexts for subtoken-2: string
[0.3185] string,ClassOrInterfaceType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.2313] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|ClassOrInterfaceType1,string
[0.0837] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0467] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0243] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0234] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0175] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0165] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0118] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0113] result,NameExpr0|AssignExpr:plus|StringLiteralExpr1,}
[0.0111] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0104] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0102] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0100] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0096] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0091] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0070] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0066] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0065] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0059] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0054] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0049] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0048] },StringLiteralExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0046] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0041] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0035] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0035] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0033] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0031] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0031] get,NameExpr3|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0029] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0026] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr0,t
[0.0025] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0024] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0022] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0021] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0019] BLANK,StringLiteralExpr1|BinaryExpr:plus1|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0018] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0018] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0018] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0017] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0017] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0017] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0016] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0015] arguments,NameExpr0|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0013] :,StringLiteralExpr1|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0012] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr0,arguments
[0.0010] arguments,NameExpr0|MethodCallExpr|NameExpr2,spell|arg
[0.0010] result,VariableDeclaratorId0|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0010] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0010] spell|arg,NameExpr2|MethodCallExpr|NameExpr3,get
[0.0009] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|StringLiteralExpr1,spell|desc|arguments|{
[0.0009] result,NameExpr0|AssignExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|NameExpr1,spell|arg
[0.0009] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr3,get
[0.0008] arguments,NameExpr0|MethodCallExpr|NameExpr2,key|set
[0.0008] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0007] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0006] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0006] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|StringLiteralExpr1,:
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0006] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0005] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0005] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0005] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0005] t,StringLiteralExpr0|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|MethodCallExpr1|NameExpr2,spell|arg
[0.0004] spell|arg,NameExpr1|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0004] result,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0004] t,StringLiteralExpr0|BinaryExpr:plus|NameExpr1,spell|arg
[0.0004] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0003] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0003] arguments,NameExpr0|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0003] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0003] spell|arg,NameExpr2|MethodCallExpr|BinaryExpr:plus|BinaryExpr:plus1|StringLiteralExpr1,BLANK
[0.0003] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0003] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0002] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0002] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|StringLiteralExpr1,}
[0.0002] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0002] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0002] key|set,NameExpr2|MethodCallExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0001] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr0,arguments
[0.0001] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0001] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|BinaryExpr:plus|StringLiteralExpr1,BLANK
[0.0001] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0001] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0001] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0000] spell|arg,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] spell|desc|arguments|{,StringLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] spell|arg,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForeachStmt|MethodCallExpr1|NameExpr2,key|set
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,result
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|ClassOrInterfaceType0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForeachStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,spell|arg

topk terminals for subtoken-2: string
[['string', 'METHOD_NAME'], ['override', 'string'], ['string', '}'], ['override', 'METHOD_NAME'], ['string', 'result'], ['string', 'BLANK'], ['string', 'string'], ['METHOD_NAME', '}'], ['string', '}'], ['result', '}'], ['string', 'arguments'], ['string', 'result'], ['result', '}'], ['t', ':'], ['string', 'result'], ['string', 'result'], ['result', 'arguments'], [':', 'arguments'], ['result', 'get'], ['METHOD_NAME', 'result'], ['result', 'BLANK'], ['t', 'BLANK'], ['}', 'result'], [':', 'get'], ['t', 'get'], ['result', '}'], ['t', 'arguments'], ['string', 'spell|desc|arguments|{'], ['arguments', 'result'], ['get', 'BLANK'], ['result', ':'], ['result', 't'], [':', 'BLANK'], ['result', 'result'], ['string', 'key|set'], ['METHOD_NAME', 'result'], ['BLANK', 'result'], ['spell|desc|arguments|{', '}'], ['key|set', 'result'], ['result', 'spell|arg'], ['result', 'result'], ['METHOD_NAME', 'spell|desc|arguments|{'], ['arguments', '}'], ['METHOD_NAME', 'arguments'], ['arguments', 'BLANK'], [':', 'spell|arg'], ['spell|arg', 'arguments'], ['arguments', 'spell|arg'], ['result', 'spell|desc|arguments|{'], ['spell|arg', 'result'], ['spell|arg', 'get'], ['string', 'spell|desc|arguments|{'], ['result', 'spell|arg'], ['spell|arg', 'get'], ['arguments', 'key|set'], ['spell|arg', 'result'], ['METHOD_NAME', 'string'], ['key|set', '}'], ['result', 'arguments'], ['spell|arg', ':'], ['METHOD_NAME', 'result'], ['spell|desc|arguments|{', 'result'], ['arguments', 'BLANK'], ['spell|arg', 'spell|arg'], ['METHOD_NAME', 'BLANK'], ['t', 'spell|arg'], ['spell|arg', 'BLANK'], ['result', 'result'], ['t', 'spell|arg'], ['spell|desc|arguments|{', 'arguments'], ['arguments', 'result'], ['arguments', 'result'], ['string', 'spell|arg'], ['spell|arg', 'BLANK'], ['string', 'arguments'], ['key|set', 'BLANK'], ['METHOD_NAME', 'key|set'], ['spell|arg', '}'], ['spell|arg', '}'], ['spell|arg', 'arguments'], ['key|set', 'result'], ['key|set', 'result'], ['string', 'spell|arg'], ['spell|arg', 'arguments'], ['string', 'result'], ['spell|arg', 'BLANK'], ['spell|arg', 'BLANK'], ['result', 'key|set'], ['spell|desc|arguments|{', 'key|set'], ['spell|arg', 'result'], ['spell|arg', 'result'], ['string', 'key|set'], ['spell|arg', 'result'], ['spell|arg', 'result'], ['result', 'result'], ['METHOD_NAME', 'spell|arg'], ['spell|arg', 'key|set'], ['spell|arg', 'spell|arg'], ['spell|desc|arguments|{', 'spell|arg'], ['METHOD_NAME', 'result'], ['spell|desc|arguments|{', 'spell|arg'], ['result', 'spell|arg'], ['METHOD_NAME', 'spell|arg'], ['spell|arg', 'key|set'], ['string', 'result'], ['string', 'spell|arg'], ['string', 'result'], ['result', 'spell|arg'], ['string', 'spell|arg']]

