
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/tang-jie__NettyRPC/src/main/java/com/newlandframework/rpc/jmx/ModuleMetricsVisitor_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((moduleName == null) ? 0 : moduleName.hashCode()); result = prime * result + ((methodName == null) ? 0 : methodName.hashCode()); return result; }

topk path-contexts for subtoken-1: hash
[0.1172] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.1172] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0863] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0830] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0665] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0324] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0324] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0312] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0312] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0294] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0278] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0278] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0208] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0208] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0206] module|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0183] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0161] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0161] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0136] method|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0131] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0131] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0129] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0125] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0121] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0121] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0082] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0076] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0076] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0055] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0050] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0039] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0036] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0031] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0031] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0028] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0028] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0028] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0023] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0023] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0021] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0020] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0014] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0014] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0014] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0014] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0011] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0011] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0011] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0011] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0011] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0010] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0010] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0010] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0008] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0008] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0008] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0008] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0007] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0007] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0007] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0007] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0007] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0006] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0006] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0005] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0005] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0004] module|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0004] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0003] method|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0001] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result

topk terminals for subtoken-1: hash
[['int', 'int'], ['int', 'int'], ['int', '1'], ['int', 'METHOD_NAME'], ['int', '<NUM>'], ['null', 'hash|code'], ['null', 'hash|code'], ['0', 'hash|code'], ['0', 'hash|code'], ['int', 'prime'], ['int', '0'], ['int', '0'], ['int', 'prime'], ['int', 'prime'], ['module|name', 'hash|code'], ['module|name', 'hash|code'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['method|name', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', 'result'], ['method|name', 'hash|code'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'hash|code'], ['result', 'hash|code'], ['override', 'int'], ['METHOD_NAME', '1'], ['METHOD_NAME', '<NUM>'], ['int', '1'], ['METHOD_NAME', 'result'], ['int', 'result'], ['int', 'result'], ['int', '<NUM>'], ['result', 'prime'], ['result', 'prime'], ['prime', 'result'], ['prime', 'result'], ['override', 'METHOD_NAME'], ['prime', '<NUM>'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['prime', 'module|name'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['prime', 'method|name'], ['result', 'module|name'], ['result', '1'], ['0', 'result'], ['0', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['int', '1'], ['prime', 'module|name'], ['result', 'method|name'], ['result', 'result'], ['result', 'result'], ['prime', '1'], ['prime', 'method|name'], ['result', 'prime'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['prime', 'result'], ['prime', 'result'], ['0', 'method|name'], ['0', 'module|name'], ['result', 'module|name'], ['METHOD_NAME', 'prime'], ['null', 'module|name'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['module|name', 'null'], ['null', 'method|name'], ['result', 'method|name'], ['module|name', 'module|name'], ['result', 'module|name'], ['result', 'result'], ['result', 'result'], ['prime', 'null'], ['prime', 'null'], ['result', 'method|name'], ['result', 'module|name'], ['result', 'method|name'], ['method|name', 'null'], ['prime', '0'], ['prime', '0'], ['result', 'result'], ['result', 'result'], ['method|name', 'method|name'], ['result', 'null'], ['result', 'null'], ['module|name', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'result'], ['prime', 'int'], ['result', '0'], ['result', '0'], ['<NUM>', '1'], ['prime', 'result'], ['<NUM>', 'result'], ['method|name', '0'], ['result', 'null'], ['result', 'null'], ['prime', 'result'], ['1', 'result'], ['1', 'result'], ['result', '0'], ['result', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'prime'], ['int', 'int'], ['null', '0'], ['null', '0'], ['result', 'result'], ['prime', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['<NUM>', 'int'], ['METHOD_NAME', 'result'], ['int', 'result'], ['<NUM>', 'result'], ['int', 'result']]

topk path-contexts for subtoken-2: code
[0.2444] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.2017] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.1226] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0870] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0870] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0271] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0264] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0186] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0174] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0174] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0137] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0137] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0126] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0120] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0120] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0094] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0064] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0055] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0055] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0051] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0039] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0039] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0034] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0034] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0032] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0028] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0028] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0025] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0021] method|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0021] module|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0020] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0014] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0013] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0013] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0013] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0011] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0004] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0003] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0003] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0002] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0001] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0001] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0000] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] module|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] method|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0000] module|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,module|name
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] method|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,method|name
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,method|name
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,module|name
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result

topk terminals for subtoken-2: code
[['int', '1'], ['int', 'METHOD_NAME'], ['int', '<NUM>'], ['int', 'int'], ['int', 'int'], ['int', 'result'], ['METHOD_NAME', '1'], ['override', 'int'], ['null', 'hash|code'], ['null', 'hash|code'], ['0', 'hash|code'], ['0', 'hash|code'], ['METHOD_NAME', '<NUM>'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', 'prime'], ['int', '1'], ['int', '0'], ['int', '0'], ['override', 'METHOD_NAME'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', '<NUM>'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['method|name', 'hash|code'], ['method|name', 'hash|code'], ['module|name', 'hash|code'], ['module|name', 'hash|code'], ['int', '1'], ['int', 'result'], ['int', 'result'], ['result', '1'], ['int', 'result'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['METHOD_NAME', 'result'], ['null', '0'], ['null', '0'], ['int', 'prime'], ['int', 'prime'], ['result', '0'], ['result', '0'], ['<NUM>', '1'], ['prime', '1'], ['prime', '<NUM>'], ['int', 'result'], ['int', 'result'], ['METHOD_NAME', 'prime'], ['null', 'method|name'], ['result', 'null'], ['result', 'null'], ['prime', '0'], ['prime', '0'], ['prime', 'result'], ['prime', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['method|name', '0'], ['int', 'int'], ['module|name', '0'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['result', 'method|name'], ['null', 'module|name'], ['METHOD_NAME', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'module|name'], ['prime', 'int'], ['0', 'method|name'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['prime', 'method|name'], ['prime', 'null'], ['prime', 'null'], ['result', 'prime'], ['result', 'prime'], ['result', 'result'], ['result', 'method|name'], ['<NUM>', 'int'], ['0', 'module|name'], ['result', 'module|name'], ['1', 'result'], ['1', 'result'], ['prime', 'module|name'], ['result', 'module|name'], ['result', 'method|name'], ['prime', 'result'], ['prime', 'result'], ['0', 'result'], ['0', 'result'], ['module|name', 'null'], ['result', '0'], ['result', '0'], ['<NUM>', 'result'], ['method|name', 'null'], ['result', 'result'], ['result', 'result'], ['int', 'prime'], ['module|name', 'module|name'], ['result', 'null'], ['result', 'null'], ['method|name', 'method|name'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'method|name'], ['int', 'result'], ['result', 'prime'], ['result', 'result'], ['result', 'result'], ['prime', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'result'], ['prime', 'module|name'], ['<NUM>', 'result'], ['int', 'result'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['result', 'result'], ['result', 'result'], ['prime', 'result'], ['result', 'result'], ['result', 'method|name'], ['result', 'module|name'], ['result', 'result']]

