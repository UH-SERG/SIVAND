
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/util/io/TeeInputStream_read.java
method_name = read
method_body = public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }

topk path-contexts for subtoken-1: read
[0.1078] int,PrimitiveType0|MethodDeclaration|NameExpr1,METHOD_NAME
[0.0949] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,read
[0.0603] i,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,read
[0.0550] int,PrimitiveType0|MethodDeclaration|ClassOrInterfaceType2,io|exception
[0.0540] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,read
[0.0510] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,read
[0.0448] input,NameExpr0|MethodCallExpr|NameExpr2,read
[0.0356] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,input
[0.0315] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,input
[0.0293] i,NameExpr2|MethodCallExpr|NameExpr3,write
[0.0276] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,i
[0.0224] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,i
[0.0203] output,NameExpr0|MethodCallExpr|NameExpr2,i
[0.0201] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0199] METHOD_NAME,NameExpr1|MethodDeclaration|ClassOrInterfaceType2,io|exception
[0.0121] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0104] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0100] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i
[0.0099] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0098] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0093] i,NameExpr0|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0090] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i
[0.0087] read,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0085] i,NameExpr0|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i
[0.0084] 0,IntegerLiteralExpr1|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i
[0.0080] 0,IntegerLiteralExpr1|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0076] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,input
[0.0073] read,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0071] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,output
[0.0071] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,write
[0.0070] i,NameExpr0|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0069] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i
[0.0058] 0,IntegerLiteralExpr1|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,write
[0.0057] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i
[0.0056] write,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0056] i,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,input
[0.0052] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0051] io|exception,ClassOrInterfaceType2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,write
[0.0049] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,output
[0.0048] i,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0048] input,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0045] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,write
[0.0043] i,NameExpr0|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,write
[0.0035] output,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0031] i,NameExpr0|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,output
[0.0030] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i
[0.0020] 0,IntegerLiteralExpr1|BinaryExpr:greaterEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,output
[0.0019] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0018] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,i
[0.0014] input,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0008] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,output
[0.0001] read,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i
[0.0000] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|IntegerLiteralExpr1,0
[0.0000] input,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:greaterEquals|NameExpr0,i

topk terminals for subtoken-1: read
[['int', 'METHOD_NAME'], ['METHOD_NAME', 'read'], ['i', 'read'], ['int', 'io|exception'], ['io|exception', 'read'], ['int', 'read'], ['input', 'read'], ['io|exception', 'input'], ['METHOD_NAME', 'input'], ['i', 'write'], ['METHOD_NAME', 'i'], ['io|exception', 'i'], ['output', 'i'], ['io|exception', 'int'], ['METHOD_NAME', 'io|exception'], ['io|exception', '0'], ['METHOD_NAME', '0'], ['METHOD_NAME', 'i'], ['int', 'i'], ['METHOD_NAME', 'int'], ['i', 'i'], ['io|exception', 'i'], ['read', 'i'], ['i', 'i'], ['0', 'i'], ['0', 'i'], ['int', 'input'], ['read', '0'], ['io|exception', 'output'], ['METHOD_NAME', 'write'], ['i', '0'], ['io|exception', 'i'], ['0', 'write'], ['METHOD_NAME', 'i'], ['write', 'i'], ['i', 'input'], ['io|exception', 'i'], ['io|exception', 'write'], ['METHOD_NAME', 'output'], ['i', 'i'], ['input', 'i'], ['int', 'write'], ['i', 'write'], ['output', 'i'], ['i', 'output'], ['int', 'i'], ['0', 'output'], ['int', '0'], ['i', 'i'], ['input', '0'], ['int', 'output'], ['read', 'i'], ['METHOD_NAME', 'i'], ['i', '0'], ['input', 'i'], ['int', 'i'], ['int', 'i'], ['i', 'i']]

