
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/main/java/org/jupiter/common/util/collection/ByteObjectHashMap_toString.java
method_name = toString
method_body = @Override public String toString() { if (isEmpty()) { return "{}"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(", "); } sb.append(keyToString(keys[i])).append('=').append(value == this ? "(this Map)" : toExternal(value)); first = false; } } return sb.append('}').toString(); }

topk path-contexts for subtoken-1: to
[0.1607] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.1002] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0773] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0642] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0536] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0281] sb,NameExpr0|MethodCallExpr0|MethodCallExpr2|NameExpr2,key|to|string
[0.0275] sb,NameExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0255] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0240] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0226] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0210] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0185] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|NameExpr1,size
[0.0182] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0169] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,to|external
[0.0148] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0142] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0134] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0126] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0117] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0112] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0111] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0104] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|StringLiteralExpr0,{}
[0.0104] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0097] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|StringLiteralExpr0,{}
[0.0097] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0096] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0089] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0084] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0079] sb,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0075] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0074] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,to|external
[0.0067] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0062] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0060] append,NameExpr3|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0060] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0059] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0058] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0055] sb,NameExpr0|MethodCallExpr|CharLiteralExpr2,{
[0.0050] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0050] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0050] },CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0042] value,VariableDeclaratorId0|VariableDeclarator|ArrayAccessExpr1|NameExpr0,values
[0.0036] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0035] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0032] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0030] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|ClassOrInterfaceType0,string|builder
[0.0026] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|StringLiteralExpr1,this|map
[0.0026] v,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr0,values
[0.0025] values,NameExpr0|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0025] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr1,is|empty
[0.0024] sb,NameExpr0|MethodCallExpr0|MethodCallExpr2|ArrayAccessExpr1|NameExpr0,keys
[0.0023] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr2|NameExpr1,value
[0.0023] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0022] value,NameExpr0|BinaryExpr:equals|ThisExpr1,this
[0.0022] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0021] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0020] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0020] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0019] },CharLiteralExpr2|MethodCallExpr0|NameExpr3,append
[0.0018] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0017] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|StringLiteralExpr2,_
[0.0017] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0016] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0016] sb,VariableDeclaratorId0|VariableDeclarator|ObjectCreationExpr|ClassOrInterfaceType0,string|builder
[0.0015] this,ThisExpr1|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr2|NameExpr1,value
[0.0015] this|map,StringLiteralExpr1|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0015] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0015] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0014] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0014] sb,VariableDeclaratorId0|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|NameExpr1,size
[0.0013] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0013] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr1,i
[0.0013] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0012] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0011] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,size
[0.0011] key|to|string,NameExpr2|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0010] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0010] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0010] _,StringLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0010] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0010] value,NameExpr1|MethodCallExpr|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr1,i
[0.0010] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0008] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0008] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|NameExpr3,append
[0.0008] _,StringLiteralExpr2|MethodCallExpr|NameExpr3,append
[0.0008] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0008] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0008] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0008] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0007] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0007] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0007] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0007] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0007] i,NameExpr1|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0007] sb,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0006] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0006] to|external,NameExpr2|MethodCallExpr|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0006] string|builder,ClassOrInterfaceType0|ObjectCreationExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0006] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0006] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0006] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0005] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0005] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0005] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0005] this|map,StringLiteralExpr1|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0005] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0005] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0005] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0004] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0004] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0004] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0004] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0004] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0004] _,StringLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0003] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0003] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0003] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0002] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0002] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0002] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0002] first,VariableDeclaratorId0|VariableDeclarator|BooleanLiteralExpr1,true
[0.0002] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0002] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0002] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0002] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0002] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string|builder
[0.0002] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0002] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0001] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0001] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0001] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0001] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0001] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0001] boolean,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0001] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0001] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0001] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0001] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0001] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0001] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0001] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0000] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0000] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0000] values,NameExpr0|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0000] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] {},StringLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] sb,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] value,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,sb
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] i,NameExpr0|BinaryExpr:less|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] {},StringLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string|builder
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,value
[0.0000] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] i,NameExpr1|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,value
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value

topk terminals for subtoken-1: to
[['string', '}'], ['string', '{'], ['string', 'to|string'], ['string', '<NUM>'], ['METHOD_NAME', 'to|string'], ['sb', 'key|to|string'], ['sb', '}'], ['string', 'null'], ['string', '0'], ['METHOD_NAME', '}'], ['value', 'to|string'], ['string', 'size'], ['string', 'sb'], ['=', 'to|external'], ['METHOD_NAME', '{'], ['string', 'sb'], ['override', 'METHOD_NAME'], ['string', 'i'], ['i', '}'], ['null', 'value'], ['int', 'to|string'], ['METHOD_NAME', '{}'], ['string', 'true'], ['is|empty', '{}'], ['0', 'to|string'], ['string', 'length'], ['i', 'to|string'], ['string', 'values'], ['sb', 'to|string'], ['boolean', '}'], ['append', 'to|external'], ['length', 'to|string'], ['string', 'append'], ['append', 'to|string'], ['first', 'value'], ['int', '}'], ['value', 'value'], ['sb', '{'], ['values', '}'], ['is|empty', '{'], ['}', 'to|string'], ['value', 'values'], ['keys', 'this'], ['sb', '='], ['i', '}'], ['METHOD_NAME', 'string|builder'], ['value', 'this|map'], ['v', 'values'], ['values', 'null'], ['METHOD_NAME', 'is|empty'], ['sb', 'keys'], ['value', 'value'], ['i', '}'], ['value', 'this'], ['keys', '='], ['METHOD_NAME', '<NUM>'], ['first', 'first'], ['keys', 'this|map'], ['}', 'append'], ['METHOD_NAME', 'append'], ['first', '_'], ['METHOD_NAME', 'append'], ['null', 'append'], ['sb', 'string|builder'], ['this', 'value'], ['this|map', 'false'], ['null', 'append'], ['string|builder', '<NUM>'], ['int', '0'], ['sb', 'size'], ['sb', 'this|map'], ['i', 'i'], ['append', 'this|map'], ['first', 'value'], ['METHOD_NAME', 'values'], ['<NUM>', 'size'], ['key|to|string', 'value'], ['value', 'first'], ['=', 'this|map'], ['_', 'false'], ['i', 'append'], ['value', 'append'], ['int', 'i'], ['append', 'this'], ['sb', 'value'], ['i', 'append'], ['_', 'append'], ['i', '='], ['append', 'this|map'], ['sb', 'this'], ['null', 'append'], ['first', 'append'], ['values', 'append'], ['value', 'append'], ['append', 'value'], ['i', 'null'], ['METHOD_NAME', '0'], ['sb', '{'], ['is|empty', 'append'], ['to|external', 'append'], ['string|builder', 'append'], ['first', '='], ['null', 'sb'], ['append', 'value'], ['value', 'first'], ['append', 'this'], ['i', 'null'], ['this|map', 'append'], ['METHOD_NAME', 'boolean'], ['first', 'append'], ['string|builder', 'append'], ['append', 'false'], ['{', '0'], ['sb', 'values'], ['first', 'sb'], ['value', 'value'], ['_', 'first'], ['{', 'length'], ['append', 'first'], ['value', 'sb'], ['value', 'false'], ['sb', 'first'], ['METHOD_NAME', 'int'], ['i', 'value'], ['append', 'true'], ['first', 'true'], ['i', 'sb'], ['0', 'null'], ['=', 'false'], ['i', 'false'], ['is|empty', 'string|builder'], ['null', 'first'], ['METHOD_NAME', 'true'], ['append', 'false'], ['sb', 'true'], ['value', 'sb'], ['first', 'values'], ['string|builder', 'sb'], ['first', 'sb'], ['i', 'sb'], ['boolean', 'true'], ['value', 'first'], ['append', 'value'], ['append', 'value'], ['{', 'true'], ['length', 'sb'], ['append', 'int'], ['boolean', '0'], ['v', 'false'], ['{', 'int'], ['values', 'int'], ['append', 'first'], ['sb', 'first'], ['int', 'i'], ['true', 'values'], ['{', 'first'], ['i', 'value'], ['sb', 'boolean'], ['values', 'value'], ['length', '0'], ['true', 'length'], ['boolean', 'i'], ['string|builder', 'boolean'], ['v', 'first'], ['i', 'first'], ['METHOD_NAME', 'first'], ['{', 'i'], ['{}', 'sb'], ['sb', 'int'], ['boolean', 'int'], ['sb', 'first'], ['=', 'value'], ['METHOD_NAME', 'v'], ['value', 'null'], ['append', 'i'], ['sb', 'i'], ['METHOD_NAME', 'sb'], ['v', 'null'], ['i', 'i'], ['{}', 'string|builder'], ['true', '0'], ['boolean', 'first'], ['int', 'value'], ['i', 'value'], ['i', 'value'], ['METHOD_NAME', 'i'], ['true', 'int'], ['true', 'i'], ['int', 'value'], ['first', 'int'], ['sb', 'v'], ['0', 'i'], ['true', 'i'], ['values', 'i'], ['sb', 'i'], ['v', 'first'], ['i', 'value'], ['i', 'v'], ['length', 'i'], ['v', 'value']]

topk path-contexts for subtoken-2: string
[0.1005] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0843] sb,NameExpr0|MethodCallExpr0|MethodCallExpr2|NameExpr2,key|to|string
[0.0737] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0662] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,to|external
[0.0562] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0551] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0479] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,to|external
[0.0338] append,NameExpr3|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0333] sb,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0249] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0246] },CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,to|string
[0.0204] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0204] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0186] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0167] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0162] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0159] sb,NameExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0156] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0151] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0147] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0134] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0114] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0112] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0098] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|NameExpr2,to|string
[0.0094] sb,NameExpr0|MethodCallExpr|CharLiteralExpr2,{
[0.0088] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0082] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0076] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0074] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0048] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0048] this|map,StringLiteralExpr1|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0048] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0047] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0047] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|NameExpr1,size
[0.0045] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0045] },CharLiteralExpr2|MethodCallExpr0|NameExpr3,append
[0.0042] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|ClassOrInterfaceType0,string|builder
[0.0040] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0039] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0038] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,}
[0.0031] sb,VariableDeclaratorId0|VariableDeclarator|ObjectCreationExpr|ClassOrInterfaceType0,string|builder
[0.0031] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0030] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0029] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0028] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|StringLiteralExpr2,_
[0.0028] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0025] string,ClassOrInterfaceType1|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0024] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0024] to|external,NameExpr2|MethodCallExpr|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0023] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0023] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0022] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0022] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0021] value,VariableDeclaratorId0|VariableDeclarator|ArrayAccessExpr1|NameExpr0,values
[0.0021] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0019] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0018] key|to|string,NameExpr2|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0017] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr2|NameExpr1,value
[0.0017] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0017] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0017] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0017] sb,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|CharLiteralExpr2,{
[0.0017] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0016] v,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr0,values
[0.0015] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|StringLiteralExpr1,this|map
[0.0014] sb,VariableDeclaratorId0|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|NameExpr1,size
[0.0014] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0014] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0014] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0014] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|StringLiteralExpr0,{}
[0.0013] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0012] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|ObjectCreationExpr|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0012] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0011] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0011] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0011] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0011] _,StringLiteralExpr2|MethodCallExpr|NameExpr3,append
[0.0011] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0011] value,NameExpr1|MethodCallExpr|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0011] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0011] values,NameExpr0|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0011] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0010] string|builder,ClassOrInterfaceType0|ObjectCreationExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0010] this|map,StringLiteralExpr1|ConditionalExpr2|MethodCallExpr|NameExpr3,append
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0010] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0009] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,size
[0.0008] _,StringLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0008] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr1,is|empty
[0.0008] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0008] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0008] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0007] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0007] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0007] sb,NameExpr0|MethodCallExpr0|MethodCallExpr2|ArrayAccessExpr1|NameExpr0,keys
[0.0007] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0007] this,ThisExpr1|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr2|NameExpr1,value
[0.0007] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,append
[0.0007] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0006] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0006] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0006] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|NameExpr3,append
[0.0006] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,append
[0.0006] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0006] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|CharLiteralExpr2,=
[0.0006] value,NameExpr0|BinaryExpr:equals|ThisExpr1,this
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0005] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0005] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0005] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0005] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0005] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0005] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0005] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0004] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0004] keys,NameExpr0|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|StringLiteralExpr1,this|map
[0.0004] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0004] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0004] first,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0004] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|StringLiteralExpr0,{}
[0.0004] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0004] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0004] append,NameExpr3|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0003] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0003] i,NameExpr1|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0003] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0003] first,VariableDeclaratorId0|VariableDeclarator|BooleanLiteralExpr1,true
[0.0002] append,NameExpr3|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0002] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|ThisExpr1,this
[0.0002] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,sb
[0.0002] value,NameExpr0|BinaryExpr:equals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0002] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] boolean,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|BooleanLiteralExpr1,true
[0.0002] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0002] is|empty,NameExpr1|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string|builder
[0.0002] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0002] string|builder,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,boolean
[0.0002] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0002] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0001] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|MethodCallExpr2|NameExpr1,value
[0.0001] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0001] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr1,i
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ArrayAccessExpr1|NameExpr1,i
[0.0001] sb,NameExpr0|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0001] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0001] value,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0001] _,StringLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0001] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0001] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BooleanLiteralExpr1,false
[0.0001] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] values,NameExpr0|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] =,CharLiteralExpr2|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0000] i,NameExpr1|ArrayAccessExpr1|MethodCallExpr2|MethodCallExpr0|MethodCallExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NameExpr0,value
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr0,values
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] {},StringLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,sb
[0.0000] {,CharLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|FieldAccessExpr1|NameExpr2,length
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] append,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,sb
[0.0000] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0000] sb,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] value,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,value
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] i,NameExpr0|BinaryExpr:less|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0000] i,NameExpr0|UnaryExpr:preIncrement|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,first
[0.0000] first,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] i,NameExpr1|ArrayAccessExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,value
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] sb,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] values,NameExpr0|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] {},StringLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string|builder
[0.0000] boolean,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,first
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,value
[0.0000] true,BooleanLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:preIncrement|NameExpr0,i
[0.0000] v,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,first
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,v
[0.0000] length,NameExpr2|FieldAccessExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i

topk terminals for subtoken-2: string
[['string', 'to|string'], ['sb', 'key|to|string'], ['METHOD_NAME', 'to|string'], ['=', 'to|external'], ['string', '}'], ['string', '{'], ['append', 'to|external'], ['append', 'to|string'], ['sb', 'to|string'], ['value', 'to|string'], ['}', 'to|string'], ['i', '}'], ['string', 'sb'], ['int', 'to|string'], ['override', 'METHOD_NAME'], ['string', 'sb'], ['sb', '}'], ['METHOD_NAME', '{'], ['string', '<NUM>'], ['0', 'to|string'], ['METHOD_NAME', '}'], ['i', 'to|string'], ['string', '0'], ['length', 'to|string'], ['sb', '{'], ['values', '}'], ['string', 'true'], ['string', 'null'], ['int', '}'], ['sb', '='], ['this|map', 'false'], ['string', 'i'], ['boolean', '}'], ['string', 'size'], ['string', 'append'], ['}', 'append'], ['METHOD_NAME', 'string|builder'], ['i', '}'], ['first', '='], ['i', '}'], ['sb', 'string|builder'], ['string', 'values'], ['METHOD_NAME', 'boolean'], ['null', 'value'], ['first', '_'], ['is|empty', '{'], ['string', 'length'], ['METHOD_NAME', 'append'], ['to|external', 'append'], ['null', 'sb'], ['keys', '='], ['null', 'append'], ['value', 'value'], ['value', 'values'], ['null', 'append'], ['METHOD_NAME', 'append'], ['key|to|string', 'value'], ['value', 'value'], ['append', 'false'], ['append', 'true'], ['METHOD_NAME', '<NUM>'], ['sb', '{'], ['append', 'this|map'], ['v', 'values'], ['value', 'this|map'], ['sb', 'size'], ['=', 'this|map'], ['first', 'value'], ['int', '0'], ['first', 'append'], ['METHOD_NAME', '{}'], ['i', 'append'], ['string|builder', '<NUM>'], ['value', 'append'], ['first', 'sb'], ['append', 'this|map'], ['sb', 'this|map'], ['_', 'append'], ['i', 'sb'], ['value', 'append'], ['value', 'sb'], ['values', 'null'], ['{', '0'], ['string|builder', 'append'], ['this|map', 'append'], ['METHOD_NAME', 'values'], ['value', 'sb'], ['<NUM>', 'size'], ['_', 'false'], ['sb', 'values'], ['METHOD_NAME', 'is|empty'], ['=', 'false'], ['METHOD_NAME', '0'], ['append', 'value'], ['values', 'append'], ['sb', 'true'], ['string|builder', 'append'], ['sb', 'keys'], ['first', 'sb'], ['this', 'value'], ['first', 'append'], ['append', 'false'], ['sb', 'value'], ['null', 'append'], ['i', 'append'], ['is|empty', 'append'], ['append', 'value'], ['i', '='], ['value', 'this'], ['METHOD_NAME', 'true'], ['{', 'true'], ['append', 'this'], ['append', 'int'], ['append', 'value'], ['i', 'null'], ['keys', 'this'], ['value', 'first'], ['first', 'value'], ['keys', 'this|map'], ['value', 'value'], ['i', 'sb'], ['first', 'first'], ['is|empty', '{}'], ['{', 'length'], ['sb', 'boolean'], ['append', 'value'], ['append', 'this'], ['METHOD_NAME', 'int'], ['i', 'null'], ['string|builder', 'sb'], ['first', 'true'], ['append', 'first'], ['sb', 'this'], ['length', 'sb'], ['value', 'first'], ['values', 'int'], ['boolean', 'true'], ['{', 'int'], ['i', 'false'], ['is|empty', 'string|builder'], ['0', 'null'], ['string|builder', 'boolean'], ['null', 'first'], ['first', 'values'], ['i', 'value'], ['value', 'false'], ['i', 'i'], ['int', 'i'], ['sb', 'first'], ['boolean', '0'], ['value', 'first'], ['_', 'first'], ['int', 'i'], ['append', 'first'], ['v', 'false'], ['length', '0'], ['sb', 'int'], ['sb', 'first'], ['values', 'value'], ['{', 'first'], ['=', 'value'], ['i', 'value'], ['true', 'values'], ['sb', 'i'], ['{}', 'sb'], ['{', 'i'], ['boolean', 'i'], ['true', 'length'], ['METHOD_NAME', 'first'], ['boolean', 'int'], ['append', 'i'], ['METHOD_NAME', 'sb'], ['i', 'first'], ['sb', 'first'], ['value', 'null'], ['METHOD_NAME', 'v'], ['int', 'value'], ['v', 'null'], ['i', 'i'], ['true', '0'], ['i', 'value'], ['int', 'value'], ['v', 'first'], ['first', 'int'], ['true', 'int'], ['i', 'value'], ['sb', 'v'], ['0', 'i'], ['true', 'i'], ['i', 'value'], ['METHOD_NAME', 'i'], ['sb', 'i'], ['values', 'i'], ['{}', 'string|builder'], ['boolean', 'first'], ['v', 'value'], ['true', 'i'], ['v', 'first'], ['i', 'v'], ['length', 'i']]

