
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/SmapUtil_visit.java
method_name = visit
method_body = @Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }

topk path-contexts for subtoken-1: visit
[0.0680] METHOD_NAME,NameExpr2|MethodDeclaration|ClassOrInterfaceType3,jasper|exception
[0.0655] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0446] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0385] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ConditionalExpr|IntegerLiteralExpr1,1
[0.0370] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0338] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0318] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,mark
[0.0301] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,mark
[0.0301] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,mark
[0.0287] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0277] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0265] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0253] void,VoidType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0242] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|VoidType1,void
[0.0231] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0223] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,mark
[0.0184] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0184] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0165] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,file|name
[0.0164] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0144] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|file
[0.0139] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0138] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,unqualify
[0.0114] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ConditionalExpr|IntegerLiteralExpr2,0
[0.0101] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0100] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0092] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,mark
[0.0092] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,mark
[0.0089] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0081] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0078] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,file|name
[0.0068] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0065] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0062] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0061] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|file
[0.0059] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0057] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0056] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,extra|smap
[0.0051] file|name,NameExpr3|MethodCallExpr|NameExpr3,i|output|start|line
[0.0050] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr1,file|name
[0.0050] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i|input|start|line
[0.0046] i|output|line|increment,NameExpr3|MethodCallExpr|NameExpr3,add|line|data
[0.0045] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,file|name
[0.0045] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0043] i,NameExpr2|MethodCallExpr0|NameExpr3,get
[0.0043] i|output|line|increment,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0041] null,NullLiteralExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0041] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,mark
[0.0038] 1,IntegerLiteralExpr1|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0038] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0035] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0029] integer,PrimitiveType1|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0029] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|extra|smap
[0.0029] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0029] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|begin|java|line
[0.0028] integer,PrimitiveType1|ClassOrInterfaceType|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0026] break|at|lf,NameExpr0|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0025] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|line|increment
[0.0023] i,NameExpr0|BinaryExpr:less|MethodCallExpr1|NameExpr0,extra|smap
[0.0023] i|output|start|line,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0023] extra|smap,NameExpr0|MethodCallExpr0|MethodCallExpr|BinaryExpr:plus2|MethodCallExpr|IntegerLiteralExpr3,1
[0.0023] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0022] break|at|lf,NameExpr0|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0022] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|MethodCallExpr1|NameExpr0,extra|smap
[0.0022] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr1,file|name
[0.0021] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|input|start|line
[0.0021] add|line|data,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0020] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|line|number
[0.0020] i|input|start|line,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0019] jasper|exception,ClassOrInterfaceType3|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0019] smap,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0019] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0018] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0018] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0018] 1,IntegerLiteralExpr3|MethodCallExpr|NameExpr3,i|output|start|line
[0.0017] extra|smap,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,int|value
[0.0017] smap,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0017] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0017] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0017] i|output|line|increment,NameExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0016] i|output|start|line,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,extra|smap
[0.0016] i|output|start|line,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0016] file|name,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,smap
[0.0016] i|output|line|increment,NameExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0016] add|line|data,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0016] 1,IntegerLiteralExpr3|MethodCallExpr|NameExpr3,i|output|line|increment
[0.0016] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0016] node,ClassOrInterfaceType0|ClassOrInterfaceType|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0016] i|output|line|increment,NameExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0015] 1,IntegerLiteralExpr1|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0015] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|PrimitiveType1,integer
[0.0015] null,NullLiteralExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,mark
[0.0015] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0015] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0015] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0014] file|name,NameExpr1|MethodCallExpr2|MethodCallExpr|NameExpr3,add|file
[0.0014] add|line|data,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|PrimitiveType1,integer
[0.0014] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|file
[0.0014] 0,IntegerLiteralExpr2|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0013] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ConditionalExpr|NameExpr0,break|at|lf
[0.0013] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ConditionalExpr|NameExpr0,break|at|lf
[0.0013] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|ClassOrInterfaceType|ClassOrInterfaceType0,java
[0.0012] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0012] i|output|start|line,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0012] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,extra|smap
[0.0012] n,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0012] mark,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,n
[0.0012] i|output|line|increment,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|PrimitiveType1,integer
[0.0012] file|name,NameExpr3|MethodCallExpr|IntegerLiteralExpr3,1
[0.0011] break|at|lf,NameExpr0|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i|input|start|line
[0.0011] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0011] break|at|lf,NameExpr0|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0011] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|file
[0.0011] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|extra|smap
[0.0010] get|file,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|file
[0.0010] i|output|line|increment,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0010] get|begin|java|line,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0010] 1,IntegerLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0010] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0010] file|name,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|file
[0.0009] file|name,NameExpr1|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0009] get|begin|java|line,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0009] smap,NameExpr0|MethodCallExpr|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr2,i
[0.0009] 0,IntegerLiteralExpr2|ConditionalExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,add|line|data
[0.0009] extra|smap,NameExpr0|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0009] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0009] i|output|start|line,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0009] mark,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|file
[0.0008] i|input|start|line,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0008] unqualify,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0008] get|extra|smap,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0008] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,i|output|start|line
[0.0008] add|line|data,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0008] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0007] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr1,i|output|line|increment
[0.0007] 1,IntegerLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0007] i|output|start|line,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|line|increment
[0.0007] mark,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0007] smap,NameExpr0|MethodCallExpr|NameExpr2,i|input|start|line
[0.0007] smap,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0007] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|begin|java|line
[0.0007] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|begin|java|line
[0.0007] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0007] i|output|start|line,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,i|output|start|line
[0.0007] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0007] i,NameExpr2|MethodCallExpr0|MethodCallExpr|BinaryExpr:plus2|MethodCallExpr|IntegerLiteralExpr3,1
[0.0006] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0006] i|output|start|line,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0006] smap,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0006] file|name,NameExpr1|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0006] smap,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|input|start|line
[0.0006] i|output|start|line,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|extra|smap
[0.0006] i|output|line|increment,NameExpr1|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0006] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0006] mark,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr1,file|name
[0.0005] add|file,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|begin|java|line
[0.0005] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i|input|start|line
[0.0005] mark,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0005] null,NullLiteralExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr1,file|name
[0.0005] i,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,0
[0.0005] size,NameExpr2|MethodCallExpr|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0005] mark,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0005] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|extra|smap
[0.0004] i|output|start|line,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,int|value
[0.0004] mark,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0004] i|output|line|increment,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr3,1
[0.0004] i,NameExpr0|BinaryExpr:less|MethodCallExpr1|NameExpr2,size
[0.0004] java,ClassOrInterfaceType0|ClassOrInterfaceType|ClassOrInterfaceType|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0004] i|input|start|line,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,i|output|start|line
[0.0004] i|output|start|line,NameExpr0|AssignExpr:plus|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:plus|NameExpr0,i|input|start|line
[0.0003] i|output|line|increment,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,i|input|start|line
[0.0003] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|AssignExpr:plus0|NameExpr0,i|output|start|line
[0.0003] i|output|start|line,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,get|begin|java|line
[0.0003] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,int|value
[0.0003] get|file,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,file|name
[0.0003] get|line|number,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0003] get|line|number,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0003] add|file,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0002] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0002] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|line|number
[0.0002] extra|smap,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0002] extra|smap,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,extra|smap
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,get|line|number
[0.0002] 1,IntegerLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|ConditionalExpr|IntegerLiteralExpr2,0
[0.0002] file|name,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] i|output|line|increment,VariableDeclaratorId0|VariableDeclarator|ConditionalExpr|IntegerLiteralExpr2,0
[0.0001] file|name,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] 1,IntegerLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] file|name,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|input|start|line
[0.0001] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|input|start|line
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i|output|start|line
[0.0001] i|input|start|line,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,get|line|number
[0.0000] size,NameExpr2|MethodCallExpr|BinaryExpr:less|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] mark,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,mark

topk terminals for subtoken-1: visit
[['METHOD_NAME', 'jasper|exception'], ['jasper|exception', 'smap'], ['jasper|exception', 'null'], ['jasper|exception', '1'], ['jasper|exception', 'i'], ['n', 'java'], ['jasper|exception', 'mark'], ['jasper|exception', 'mark'], ['jasper|exception', 'mark'], ['jasper|exception', 'i'], ['n', 'smap'], ['n', 'int'], ['void', 'METHOD_NAME'], ['override', 'void'], ['jasper|exception', 'i'], ['jasper|exception', 'mark'], ['n', 'int'], ['n', 'int'], ['jasper|exception', 'file|name'], ['n', 'null'], ['jasper|exception', 'add|file'], ['n', 'n'], ['node', 'unqualify'], ['jasper|exception', '0'], ['n', 'i'], ['jasper|exception', 'extra|smap'], ['n', 'mark'], ['n', 'mark'], ['n', 'string'], ['node', 'int'], ['n', 'file|name'], ['null', 'smap'], ['extra|smap', 'smap'], ['node', 'i|output|line|increment'], ['n', 'get|file'], ['n', 'i|output|line|increment'], ['node', 'string'], ['n', 'extra|smap'], ['file|name', 'i|output|start|line'], ['node', 'file|name'], ['jasper|exception', 'i|input|start|line'], ['i|output|line|increment', 'add|line|data'], ['node', 'file|name'], ['jasper|exception', 'file|name'], ['i', 'get'], ['i|output|line|increment', 'null'], ['null', 'smap'], ['n', 'mark'], ['1', 'smap'], ['extra|smap', 'i|output|line|increment'], ['null', 'i|output|start|line'], ['integer', 'n'], ['jasper|exception', 'get|extra|smap'], ['null', 'i|output|line|increment'], ['n', 'get|begin|java|line'], ['integer', 'null'], ['int', 'i|output|start|line'], ['break|at|lf', 'i|output|line|increment'], ['n', 'i|output|line|increment'], ['i', 'extra|smap'], ['i|output|start|line', 'java'], ['extra|smap', '1'], ['i', 'i|output|start|line'], ['break|at|lf', 'add|line|data'], ['extra|smap', 'extra|smap'], ['n', 'file|name'], ['node', 'i|input|start|line'], ['add|line|data', 'java'], ['jasper|exception', 'get|line|number'], ['i|input|start|line', 'java'], ['jasper|exception', 'i|output|start|line'], ['smap', 'int'], ['null', '1'], ['int', 'n'], ['file|name', 'n'], ['1', 'i|output|start|line'], ['extra|smap', 'int|value'], ['smap', 'int'], ['string', 'smap'], ['int', 'i|output|line|increment'], ['i|output|line|increment', '1'], ['i|output|start|line', 'extra|smap'], ['i|output|start|line', 'n'], ['file|name', 'smap'], ['i|output|line|increment', 'add|line|data'], ['add|line|data', 'int'], ['1', 'i|output|line|increment'], ['node', 'file|name'], ['node', 'file|name'], ['i|output|line|increment', 'i|output|start|line'], ['1', 'i|output|line|increment'], ['java', 'integer'], ['null', 'mark'], ['0', 'add|line|data'], ['int', 'add|line|data'], ['int', 'add|line|data'], ['file|name', 'add|file'], ['add|line|data', 'integer'], ['string', 'add|file'], ['0', 'i|output|start|line'], ['int', 'break|at|lf'], ['int', 'break|at|lf'], ['file|name', 'java'], ['n', 'file|name'], ['i|output|start|line', '1'], ['java', 'extra|smap'], ['n', 'i|output|start|line'], ['mark', 'n'], ['i|output|line|increment', 'integer'], ['file|name', '1'], ['break|at|lf', 'i|input|start|line'], ['int', '1'], ['break|at|lf', '1'], ['string', 'get|file'], ['java', 'get|extra|smap'], ['get|file', 'add|file'], ['i|output|line|increment', 'i|output|line|increment'], ['get|begin|java|line', 'int'], ['1', 'extra|smap'], ['i', '1'], ['file|name', 'add|file'], ['file|name', 'int'], ['get|begin|java|line', 'i|output|line|increment'], ['smap', 'i'], ['0', 'add|line|data'], ['extra|smap', 'null'], ['extra|smap', 'i'], ['i|output|start|line', 'i|output|line|increment'], ['mark', 'get|file'], ['i|input|start|line', 'extra|smap'], ['unqualify', 'int'], ['get|extra|smap', 'extra|smap'], ['null', 'i|output|start|line'], ['add|line|data', 'extra|smap'], ['i', '0'], ['i', 'i|output|line|increment'], ['1', 'int'], ['i|output|start|line', 'i|output|line|increment'], ['mark', 'string'], ['smap', 'i|input|start|line'], ['smap', 'i|output|start|line'], ['file|name', 'get|begin|java|line'], ['int', 'get|begin|java|line'], ['file|name', 'extra|smap'], ['i|output|start|line', 'i|output|start|line'], ['extra|smap', 'file|name'], ['i', '1'], ['int', 'file|name'], ['i|output|start|line', 'i'], ['smap', 'i'], ['file|name', 'i|output|start|line'], ['smap', 'i|input|start|line'], ['i|output|start|line', 'get|extra|smap'], ['i|output|line|increment', 'file|name'], ['0', 'file|name'], ['mark', 'file|name'], ['add|file', 'get|begin|java|line'], ['int', 'i|input|start|line'], ['mark', 'file|name'], ['null', 'file|name'], ['i', '0'], ['size', '0'], ['mark', 'int'], ['int', 'get|extra|smap'], ['i|output|start|line', 'int|value'], ['mark', 'file|name'], ['null', 'file|name'], ['i|output|line|increment', '1'], ['i', 'size'], ['java', 'extra|smap'], ['i|input|start|line', 'int'], ['int', 'i|output|start|line'], ['i|output|start|line', 'i|input|start|line'], ['i|output|line|increment', 'i|input|start|line'], ['0', 'i|output|start|line'], ['i|output|start|line', 'get|begin|java|line'], ['i', 'int|value'], ['get|file', 'file|name'], ['get|line|number', 'int'], ['get|line|number', 'int'], ['add|file', 'i|output|start|line'], ['file|name', 'i'], ['string', 'get|line|number'], ['extra|smap', 'i'], ['null', 'i'], ['extra|smap', 'extra|smap'], ['int', 'get|line|number'], ['1', 'i'], ['int', '0'], ['file|name', 'int'], ['i|output|line|increment', '0'], ['file|name', 'i'], ['1', 'i'], ['file|name', 'i|input|start|line'], ['string', 'i|input|start|line'], ['i', 'i'], ['int', 'i|output|start|line'], ['i|input|start|line', 'get|line|number'], ['size', 'i'], ['mark', 'mark']]

