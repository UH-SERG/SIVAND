
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mucommander__mucommander/mucommander-commons-file/src/main/java/com/mucommander/commons/file/protocol/vsphere/ManagedObjectReferenceWrapper_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((mor.getValue() == null) ? 0 : mor.getValue().hashCode()); result = prime * result + ((mor.getType() == null) ? 0 : mor.getType().hashCode()); return result; }

topk path-contexts for subtoken-1: hash
[0.0714] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0702] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0614] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0614] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0589] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0513] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0513] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0304] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0304] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0284] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0257] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0257] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0248] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0248] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0230] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0230] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0185] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0142] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0142] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0142] get|type,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0137] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0115] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0107] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0107] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0089] get|value,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0089] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0089] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0086] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0086] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0078] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0068] mor,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0068] mor,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0066] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0066] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0065] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0064] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0061] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0050] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0049] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0049] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0046] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0046] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0041] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0037] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0035] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0034] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0032] mor,NameExpr0|MethodCallExpr|NameExpr2,get|type
[0.0030] mor,NameExpr0|MethodCallExpr|NameExpr2,get|value
[0.0029] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0029] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0026] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0019] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0019] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0015] mor,NameExpr0|MethodCallExpr0|NameExpr2,get|type
[0.0015] mor,NameExpr0|MethodCallExpr0|NameExpr2,get|value
[0.0014] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0014] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0014] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0014] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0014] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0014] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0014] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0014] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0013] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0012] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0012] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0012] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0012] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0010] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0009] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0009] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0009] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0009] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0009] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0008] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0008] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0008] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0008] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0007] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0007] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0007] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0007] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0007] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0007] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0007] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0006] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0006] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0005] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0005] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0005] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0004] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0004] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0004] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0004] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0002] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0002] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0002] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0002] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result

topk terminals for subtoken-1: hash
[['int', '1'], ['int', 'METHOD_NAME'], ['int', 'int'], ['int', 'int'], ['int', '<NUM>'], ['int', 'prime'], ['int', 'prime'], ['null', 'hash|code'], ['null', 'hash|code'], ['int', 'prime'], ['0', 'hash|code'], ['0', 'hash|code'], ['int', '0'], ['int', '0'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['get|type', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['get|type', 'hash|code'], ['int', 'result'], ['get|value', 'hash|code'], ['int', 'result'], ['int', 'result'], ['get|value', 'hash|code'], ['result', 'prime'], ['result', 'prime'], ['mor', 'hash|code'], ['mor', 'hash|code'], ['override', 'int'], ['mor', 'hash|code'], ['mor', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', '1'], ['METHOD_NAME', '<NUM>'], ['int', 'result'], ['int', 'result'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['int', '1'], ['override', 'METHOD_NAME'], ['prime', '<NUM>'], ['int', '<NUM>'], ['mor', 'get|type'], ['mor', 'get|value'], ['prime', 'result'], ['prime', 'result'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['prime', 'get|type'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['mor', 'get|type'], ['mor', 'get|value'], ['prime', 'mor'], ['prime', 'mor'], ['prime', 'get|type'], ['prime', '1'], ['prime', 'result'], ['prime', 'result'], ['prime', 'get|value'], ['result', 'prime'], ['get|type', 'get|type'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['result', 'get|type'], ['null', 'get|type'], ['METHOD_NAME', 'prime'], ['int', '1'], ['prime', 'mor'], ['prime', 'mor'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['result', 'mor'], ['result', 'mor'], ['0', 'result'], ['0', 'result'], ['result', '1'], ['mor', 'get|type'], ['0', 'get|type'], ['null', 'get|value'], ['prime', 'get|value'], ['result', 'get|value'], ['result', 'get|type'], ['get|type', 'mor'], ['result', 'get|type'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['mor', 'get|value'], ['null', 'mor'], ['null', 'mor'], ['result', 'result'], ['result', 'result'], ['get|value', 'get|value'], ['result', 'mor'], ['result', 'mor'], ['mor', 'mor'], ['mor', 'mor'], ['get|value', 'mor'], ['0', 'get|value'], ['0', 'mor'], ['0', 'mor'], ['result', 'mor'], ['result', 'mor'], ['result', 'get|value'], ['result', 'result'], ['result', 'result'], ['get|type', 'null'], ['result', 'get|value'], ['mor', 'null'], ['mor', 'null'], ['result', 'mor'], ['result', 'mor'], ['prime', '0'], ['prime', '0'], ['result', 'get|type'], ['get|value', 'null'], ['prime', 'null'], ['prime', 'null'], ['result', 'get|value'], ['<NUM>', '1'], ['get|type', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'result'], ['prime', 'int'], ['result', 'result'], ['result', 'result'], ['int', 'prime'], ['get|value', '0'], ['<NUM>', 'result'], ['result', '0'], ['result', '0'], ['result', 'result'], ['prime', 'result'], ['result', 'null'], ['result', 'null'], ['1', 'result'], ['1', 'result'], ['result', 'null'], ['result', 'null'], ['mor', '0'], ['mor', '0'], ['result', '0'], ['result', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['null', '0'], ['null', '0'], ['prime', 'result'], ['int', 'int'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['<NUM>', 'int'], ['result', 'result'], ['METHOD_NAME', 'result'], ['int', 'result'], ['<NUM>', 'result'], ['int', 'result']]

topk path-contexts for subtoken-2: code
[0.1870] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.1627] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.1224] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0576] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0576] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0278] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0278] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0238] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0233] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0213] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0158] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0158] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0158] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0148] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0148] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0147] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0141] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0136] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0127] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0113] get|value,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0110] get|type,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0074] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0074] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0064] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0064] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0064] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0050] mor,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0050] mor,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0048] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0048] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0041] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0041] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0041] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0028] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0026] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0022] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0022] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0016] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0016] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0016] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0016] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0015] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0014] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0014] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0013] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0012] mor,NameExpr0|MethodCallExpr|NameExpr2,get|type
[0.0012] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0010] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0009] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0009] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0009] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0008] mor,NameExpr0|MethodCallExpr|NameExpr2,get|value
[0.0008] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|type
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0008] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0008] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0008] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0007] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0007] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0007] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0007] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0007] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0006] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0006] mor,NameExpr0|MethodCallExpr0|NameExpr2,get|type
[0.0006] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0005] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr2,get|value
[0.0005] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0005] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|type
[0.0005] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0004] mor,NameExpr0|MethodCallExpr0|NameExpr2,get|value
[0.0004] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr2,get|value
[0.0003] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0003] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0003] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0002] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0001] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0001] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] get|value,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] get|type,NameExpr2|MethodCallExpr|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|MethodCallExpr0|NameExpr0,mor
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|MethodCallExpr0|NameExpr0,mor
[0.0001] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] mor,NameExpr0|MethodCallExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result

topk terminals for subtoken-2: code
[['int', '1'], ['int', 'METHOD_NAME'], ['int', '<NUM>'], ['int', 'int'], ['int', 'int'], ['null', 'hash|code'], ['null', 'hash|code'], ['METHOD_NAME', '1'], ['override', 'int'], ['int', 'result'], ['0', 'hash|code'], ['0', 'hash|code'], ['int', 'prime'], ['result', 'hash|code'], ['result', 'hash|code'], ['METHOD_NAME', '<NUM>'], ['get|type', 'hash|code'], ['get|value', 'hash|code'], ['override', 'METHOD_NAME'], ['get|value', 'hash|code'], ['get|type', 'hash|code'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['int', '0'], ['int', '0'], ['int', '1'], ['mor', 'hash|code'], ['mor', 'hash|code'], ['mor', 'hash|code'], ['mor', 'hash|code'], ['int', '<NUM>'], ['result', 'hash|code'], ['result', 'hash|code'], ['null', 'get|type'], ['int', 'result'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['int', 'result'], ['int', 'result'], ['result', 'get|type'], ['METHOD_NAME', 'result'], ['int', 'prime'], ['int', 'prime'], ['prime', 'get|type'], ['null', 'get|value'], ['0', 'get|type'], ['int', '1'], ['mor', 'get|type'], ['result', '1'], ['result', 'get|value'], ['get|type', 'get|type'], ['result', 'get|type'], ['get|value', 'get|value'], ['int', 'result'], ['int', 'result'], ['prime', '<NUM>'], ['mor', 'get|value'], ['mor', 'get|type'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['0', 'get|value'], ['result', 'get|type'], ['prime', 'get|value'], ['null', '0'], ['null', '0'], ['prime', '1'], ['prime', 'get|type'], ['METHOD_NAME', 'prime'], ['result', 'get|value'], ['mor', 'get|type'], ['<NUM>', '1'], ['mor', 'get|value'], ['get|type', '0'], ['result', 'get|value'], ['result', 'get|type'], ['get|value', '0'], ['result', '0'], ['result', '0'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['mor', 'get|value'], ['prime', 'get|value'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['result', 'get|value'], ['prime', 'result'], ['prime', 'result'], ['result', 'null'], ['result', 'null'], ['prime', '0'], ['prime', '0'], ['result', 'prime'], ['result', 'prime'], ['prime', 'null'], ['prime', 'null'], ['result', 'mor'], ['result', 'mor'], ['null', 'mor'], ['null', 'mor'], ['prime', 'mor'], ['prime', 'mor'], ['prime', 'mor'], ['prime', 'mor'], ['mor', '0'], ['mor', '0'], ['result', 'mor'], ['result', 'mor'], ['result', 'mor'], ['result', 'mor'], ['prime', 'int'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['mor', 'mor'], ['mor', 'mor'], ['get|value', 'null'], ['0', 'mor'], ['0', 'mor'], ['get|type', 'null'], ['get|value', 'mor'], ['result', 'result'], ['result', 'result'], ['get|type', 'mor'], ['int', 'int'], ['result', 'mor'], ['result', 'mor'], ['mor', 'null'], ['mor', 'null'], ['int', 'prime'], ['prime', 'result'], ['prime', 'result'], ['<NUM>', 'int'], ['1', 'result'], ['1', 'result'], ['result', 'result'], ['METHOD_NAME', 'result'], ['<NUM>', 'result'], ['result', 'null'], ['result', 'null'], ['result', 'result'], ['result', 'result'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['result', 'prime'], ['0', 'result'], ['0', 'result'], ['result', '0'], ['result', '0'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['prime', 'result'], ['int', 'result'], ['<NUM>', 'result'], ['int', 'result'], ['result', 'result'], ['result', 'result']]

