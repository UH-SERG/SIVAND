
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fishercoder1534__Leetcode/src/main/java/com/fishercoder/common/classes/UndirectedGraphNode_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } UndirectedGraphNode that = (UndirectedGraphNode) o; if (label != that.label) { return false; } return neighbors != null ? neighbors.equals(that.neighbors) : that.neighbors == null; }

topk path-contexts for subtoken-1: equals
[0.1389] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.1389] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0880] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0824] boolean,PrimitiveType1|MethodDeclaration|Parameter|ClassOrInterfaceType1,object
[0.0776] o,VariableDeclaratorId0|Parameter|ClassOrInterfaceType1,object
[0.0424] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|ClassOrInterfaceType1,object
[0.0409] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:equals|ThisExpr0,this
[0.0331] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0331] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0277] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0220] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0196] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0188] boolean,PrimitiveType1|MethodDeclaration|Parameter|VariableDeclaratorId0,o
[0.0173] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NullLiteralExpr1,null
[0.0157] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0099] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0099] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0089] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0086] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr1,o
[0.0078] that,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0077] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0069] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0059] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr2,get|class
[0.0054] boolean,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0047] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0046] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0044] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0043] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NullLiteralExpr1,null
[0.0042] label,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0041] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0041] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,o
[0.0041] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0039] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0039] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0036] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0036] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0036] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0030] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0030] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NameExpr0,o
[0.0029] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr3,equals
[0.0029] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0029] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0026] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0023] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0021] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0020] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0019] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr2,get|class
[0.0018] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0016] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0016] get|class,NameExpr1|MethodCallExpr|BinaryExpr:notEquals|BinaryExpr:or|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0016] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0015] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NameExpr0,o
[0.0015] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0014] o,NameExpr0|MethodCallExpr|BinaryExpr:notEquals|BinaryExpr:or|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0014] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0013] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0013] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0013] o,NameExpr0|MethodCallExpr|NameExpr2,get|class
[0.0012] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0012] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0012] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0012] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0011] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0011] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0011] that,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0011] that,NameExpr0|FieldAccessExpr2|MethodCallExpr|NameExpr3,equals
[0.0010] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0010] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0009] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0008] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0008] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0008] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0008] get|class,NameExpr2|MethodCallExpr|BinaryExpr:notEquals|BinaryExpr:or|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0007] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0007] neighbors,NameExpr0|MethodCallExpr|FieldAccessExpr2|NameExpr0,that
[0.0007] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0006] o,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0006] label,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0006] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0006] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0005] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0005] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0005] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,o
[0.0005] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0005] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0005] that,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] that,NameExpr0|FieldAccessExpr|NameExpr2,neighbors
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0004] label,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0004] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr2,get|class
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0003] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0003] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0003] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0003] get|class,NameExpr1|MethodCallExpr|BinaryExpr:notEquals|MethodCallExpr1|NameExpr2,get|class
[0.0003] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0003] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0003] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0002] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0002] that,NameExpr0|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0002] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0002] equals,NameExpr3|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,o
[0.0002] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0002] that,NameExpr0|FieldAccessExpr2|NameExpr2,neighbors
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:equals|ThisExpr0,this
[0.0002] equals,NameExpr3|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0002] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0002] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0002] neighbors,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0002] label,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] neighbors,NameExpr0|MethodCallExpr|FieldAccessExpr2|NameExpr2,neighbors
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr1,o
[0.0002] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0002] that,NameExpr0|FieldAccessExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] label,NameExpr0|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0001] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr2,get|class
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0001] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] get|class,NameExpr1|MethodCallExpr|BinaryExpr:notEquals|BinaryExpr:or|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0001] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0001] neighbors,NameExpr2|FieldAccessExpr2|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0001] label,NameExpr2|FieldAccessExpr|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0001] that,NameExpr0|FieldAccessExpr2|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0001] that,VariableDeclaratorId0|VariableDeclarator|CastExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0001] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0001] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0001] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0001] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0001] o,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0001] neighbors,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] that,NameExpr0|FieldAccessExpr2|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0001] true,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] neighbors,NameExpr2|FieldAccessExpr2|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] neighbors,NameExpr2|FieldAccessExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0001] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0001] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0001] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr0,that
[0.0001] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|MethodCallExpr1|NameExpr0,neighbors
[0.0001] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0001] equals,NameExpr3|MethodCallExpr|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|MethodCallExpr1|FieldAccessExpr2|NameExpr2,neighbors
[0.0001] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr2,neighbors
[0.0001] label,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0001] undirected|graph|node,ClassOrInterfaceType0|CastExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0000] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0000] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0000] this,ThisExpr0|BinaryExpr:equals|NameExpr1,o
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NameExpr0,o
[0.0000] label,NameExpr0|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0000] neighbors,NameExpr0|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|ConditionalExpr|BinaryExpr:notEquals|NameExpr0,neighbors
[0.0000] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType0,undirected|graph|node
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0000] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] null,NullLiteralExpr1|BinaryExpr:notEquals|ConditionalExpr|BinaryExpr:equals|FieldAccessExpr0|NameExpr0,that
[0.0000] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0000] undirected|graph|node,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0000] get|class,NameExpr1|MethodCallExpr|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0000] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr0,that
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,o
[0.0000] o,NameExpr1|CastExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr0|NameExpr1,get|class
[0.0000] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] o,NameExpr0|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|BinaryExpr:or|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0000] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NameExpr0,o
[0.0000] get|class,NameExpr2|MethodCallExpr|BinaryExpr:notEquals|BinaryExpr:or|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|FieldAccessExpr1|NameExpr2,label
[0.0000] o,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0000] true,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:equals|NameExpr0,o
[0.0000] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,o
[0.0000] this,ThisExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:or|BinaryExpr:notEquals|MethodCallExpr1|NameExpr0,o
[0.0000] that,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,label
[0.0000] true,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,that

topk terminals for subtoken-1: equals
[['object', 'false'], ['object', 'false'], ['object', 'true'], ['boolean', 'object'], ['o', 'object'], ['METHOD_NAME', 'object'], ['object', 'this'], ['o', 'false'], ['o', 'false'], ['object', 'equals'], ['o', 'true'], ['o', 'equals'], ['boolean', 'o'], ['object', 'null'], ['object', 'that'], ['METHOD_NAME', 'equals'], ['undirected|graph|node', 'equals'], ['o', 'that'], ['object', 'o'], ['that', 'equals'], ['object', 'null'], ['label', 'equals'], ['object', 'get|class'], ['boolean', 'METHOD_NAME'], ['undirected|graph|node', 'false'], ['object', 'null'], ['null', 'equals'], ['o', 'null'], ['label', 'equals'], ['object', 'that'], ['o', 'o'], ['override', 'METHOD_NAME'], ['o', 'null'], ['object', 'that'], ['object', 'undirected|graph|node'], ['override', 'boolean'], ['neighbors', 'equals'], ['o', 'that'], ['object', 'o'], ['false', 'equals'], ['o', 'null'], ['o', 'false'], ['o', 'that'], ['object', 'label'], ['METHOD_NAME', 'that'], ['o', 'true'], ['o', 'get|class'], ['object', 'neighbors'], ['object', 'neighbors'], ['get|class', 'false'], ['o', 'false'], ['o', 'o'], ['o', 'get|class'], ['o', 'false'], ['label', 'false'], ['null', 'false'], ['o', 'that'], ['o', 'get|class'], ['object', 'neighbors'], ['METHOD_NAME', 'false'], ['METHOD_NAME', 'false'], ['object', 'neighbors'], ['METHOD_NAME', 'true'], ['o', 'neighbors'], ['o', 'undirected|graph|node'], ['that', 'false'], ['that', 'equals'], ['o', 'o'], ['o', 'neighbors'], ['o', 'label'], ['false', 'false'], ['undirected|graph|node', 'that'], ['o', 'neighbors'], ['get|class', 'false'], ['o', 'label'], ['neighbors', 'that'], ['this', 'false'], ['o', 'neighbors'], ['label', 'false'], ['this', 'true'], ['undirected|graph|node', 'that'], ['false', 'null'], ['that', 'false'], ['undirected|graph|node', 'o'], ['undirected|graph|node', 'null'], ['label', 'null'], ['that', 'null'], ['that', 'neighbors'], ['METHOD_NAME', 'that'], ['label', 'null'], ['undirected|graph|node', 'neighbors'], ['null', 'get|class'], ['METHOD_NAME', 'neighbors'], ['that', 'null'], ['undirected|graph|node', 'null'], ['label', 'null'], ['METHOD_NAME', 'neighbors'], ['label', 'that'], ['get|class', 'get|class'], ['false', 'null'], ['undirected|graph|node', 'neighbors'], ['METHOD_NAME', 'neighbors'], ['o', 'null'], ['METHOD_NAME', 'neighbors'], ['o', 'get|class'], ['that', 'neighbors'], ['undirected|graph|node', 'that'], ['equals', 'neighbors'], ['METHOD_NAME', 'undirected|graph|node'], ['METHOD_NAME', 'o'], ['undirected|graph|node', 'neighbors'], ['that', 'neighbors'], ['METHOD_NAME', 'this'], ['equals', 'that'], ['o', 'undirected|graph|node'], ['undirected|graph|node', 'label'], ['neighbors', 'neighbors'], ['label', 'null'], ['neighbors', 'neighbors'], ['METHOD_NAME', 'label'], ['METHOD_NAME', 'o'], ['label', 'neighbors'], ['METHOD_NAME', 'get|class'], ['that', 'null'], ['label', 'that'], ['neighbors', 'that'], ['METHOD_NAME', 'get|class'], ['METHOD_NAME', 'that'], ['that', 'null'], ['get|class', 'undirected|graph|node'], ['o', 'undirected|graph|node'], ['null', 'get|class'], ['neighbors', 'that'], ['label', 'neighbors'], ['that', 'null'], ['null', 'neighbors'], ['that', 'undirected|graph|node'], ['null', 'neighbors'], ['this', 'undirected|graph|node'], ['null', 'neighbors'], ['label', 'neighbors'], ['o', 'null'], ['label', 'neighbors'], ['neighbors', 'null'], ['that', 'that'], ['true', 'null'], ['neighbors', 'null'], ['neighbors', 'null'], ['neighbors', 'that'], ['METHOD_NAME', 'undirected|graph|node'], ['o', 'get|class'], ['neighbors', 'neighbors'], ['null', 'that'], ['false', 'neighbors'], ['o', 'label'], ['equals', 'null'], ['neighbors', 'neighbors'], ['neighbors', 'neighbors'], ['label', 'that'], ['undirected|graph|node', 'label'], ['null', 'label'], ['that', 'neighbors'], ['o', 'undirected|graph|node'], ['false', 'undirected|graph|node'], ['this', 'o'], ['METHOD_NAME', 'o'], ['label', 'label'], ['neighbors', 'null'], ['false', 'neighbors'], ['this', 'undirected|graph|node'], ['null', 'that'], ['null', 'null'], ['null', 'that'], ['o', 'o'], ['METHOD_NAME', 'o'], ['undirected|graph|node', 'label'], ['false', 'that'], ['get|class', 'o'], ['null', 'o'], ['that', 'that'], ['METHOD_NAME', 'that'], ['null', 'label'], ['o', 'o'], ['o', 'label'], ['this', 'null'], ['this', 'get|class'], ['o', 'label'], ['o', 'that'], ['null', 'that'], ['o', 'o'], ['get|class', 'label'], ['false', 'label'], ['o', 'that'], ['true', 'o'], ['this', 'o'], ['this', 'o'], ['that', 'label'], ['false', 'that'], ['false', 'label'], ['true', 'that']]

