
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jopt-simple__jopt-simple/src/main/java/joptsimple/ArgumentAcceptingOptionSpec_equals.java
method_name = equals
method_body = @Override public boolean equals(Object that) { if (!super.equals(that)) return false; ArgumentAcceptingOptionSpec<?> other = (ArgumentAcceptingOptionSpec<?>) that; return requiresArgument() == other.requiresArgument(); }

topk path-contexts for subtoken-1: equals
[0.3545] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.1535] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.1438] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0737] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0600] that,NameExpr2|MethodCallExpr|NameExpr3,equals
[0.0437] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr3,equals
[0.0274] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr3,equals
[0.0257] that,VariableDeclaratorId0|Parameter|ClassOrInterfaceType1,object
[0.0203] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr3,equals
[0.0122] boolean,PrimitiveType1|MethodDeclaration|Parameter|ClassOrInterfaceType1,object
[0.0090] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|ClassOrInterfaceType1,object
[0.0051] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0046] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0042] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr2,that
[0.0042] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,that
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0040] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0033] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0030] boolean,PrimitiveType1|MethodDeclaration|Parameter|VariableDeclaratorId0,that
[0.0028] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0024] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0021] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0020] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,that
[0.0019] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|VariableDeclaratorId0,that
[0.0018] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0017] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr2,that
[0.0016] super,SuperExpr0|MethodCallExpr|NameExpr2,that
[0.0014] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0014] boolean,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0013] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0013] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0013] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0010] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|NameExpr2,that
[0.0009] other,NameExpr0|MethodCallExpr|NameExpr2,requires|argument
[0.0008] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0006] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType|WildcardType0,?
[0.0006] ?,WildcardType0|ClassOrInterfaceType|CastExpr|NameExpr1,that
[0.0006] other,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0005] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0005] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0005] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0005] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0004] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|CastExpr|ClassOrInterfaceType|WildcardType0,?
[0.0004] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0004] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0004] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,that
[0.0003] requires|argument,NameExpr1|MethodCallExpr|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,that
[0.0002] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0002] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0002] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0002] other,VariableDeclaratorId0|VariableDeclarator|CastExpr|NameExpr1,that
[0.0001] other,VariableDeclaratorId0|VariableDeclarator|CastExpr|ClassOrInterfaceType|WildcardType0,?
[0.0001] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0001] equals,NameExpr3|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0001] other,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0001] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0001] that,NameExpr2|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr2,requires|argument
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|CastExpr|NameExpr1,that
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0000] requires|argument,NameExpr1|MethodCallExpr|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] other,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0000] ?,WildcardType0|ClassOrInterfaceType|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0000] false,BooleanLiteralExpr0|ReturnStmt|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other
[0.0000] object,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|SuperExpr0,super
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr0|NameExpr1,requires|argument
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType|WildcardType0,?
[0.0000] that,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|SuperExpr0,super
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|MethodCallExpr0|SuperExpr0,super
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ReturnStmt|BinaryExpr:equals|MethodCallExpr1|NameExpr0,other
[0.0000] super,SuperExpr0|MethodCallExpr|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,other

topk terminals for subtoken-1: equals
[['object', 'false'], ['that', 'false'], ['equals', 'false'], ['that', 'false'], ['that', 'equals'], ['object', 'equals'], ['that', 'equals'], ['that', 'object'], ['METHOD_NAME', 'equals'], ['boolean', 'object'], ['METHOD_NAME', 'object'], ['that', '?'], ['equals', 'requires|argument'], ['object', 'that'], ['object', 'that'], ['METHOD_NAME', 'false'], ['object', '?'], ['that', 'requires|argument'], ['boolean', 'that'], ['METHOD_NAME', 'requires|argument'], ['object', 'requires|argument'], ['?', 'requires|argument'], ['that', 'that'], ['METHOD_NAME', 'that'], ['equals', '?'], ['that', 'that'], ['super', 'that'], ['that', '?'], ['boolean', 'METHOD_NAME'], ['false', 'requires|argument'], ['object', 'other'], ['override', 'METHOD_NAME'], ['that', 'requires|argument'], ['METHOD_NAME', 'that'], ['other', 'requires|argument'], ['object', 'requires|argument'], ['equals', 'requires|argument'], ['METHOD_NAME', '?'], ['?', 'that'], ['other', 'requires|argument'], ['false', '?'], ['that', 'other'], ['that', 'requires|argument'], ['that', 'requires|argument'], ['?', '?'], ['override', 'boolean'], ['?', 'requires|argument'], ['?', 'that'], ['requires|argument', 'requires|argument'], ['METHOD_NAME', 'requires|argument'], ['METHOD_NAME', 'that'], ['false', 'requires|argument'], ['equals', 'other'], ['object', 'other'], ['other', 'that'], ['other', '?'], ['that', 'other'], ['METHOD_NAME', '?'], ['equals', 'other'], ['other', 'requires|argument'], ['that', 'other'], ['that', 'other'], ['?', 'other'], ['super', 'requires|argument'], ['false', 'that'], ['super', 'false'], ['requires|argument', 'other'], ['other', 'other'], ['METHOD_NAME', 'other'], ['false', 'other'], ['METHOD_NAME', 'other'], ['?', 'other'], ['false', 'other'], ['object', 'super'], ['super', 'requires|argument'], ['super', '?'], ['that', 'super'], ['METHOD_NAME', 'super'], ['super', 'other'], ['super', 'other']]

