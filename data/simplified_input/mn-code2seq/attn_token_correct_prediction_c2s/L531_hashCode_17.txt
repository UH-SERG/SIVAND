
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/util/ProjectCollection_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = project.hashCode(); result = 31 * result + collection.hashCode(); return result; }

topk path-contexts for subtoken-1: hash
[0.1103] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.1044] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0825] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0659] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0638] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0503] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0468] result,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0461] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0426] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0342] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0284] collection,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0219] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0209] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0202] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0199] project,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0171] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0165] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0151] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0143] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0141] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0139] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0100] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0084] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0075] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0074] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0070] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0070] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0065] result,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0057] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0052] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,collection
[0.0049] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0048] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0041] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,collection
[0.0038] hash|code,NameExpr2|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0037] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0037] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0026] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0023] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0016] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0014] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,result
[0.0014] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0013] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0009] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] collection,NameExpr0|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0007] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0007] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0005] project,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0003] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] project,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result

topk terminals for subtoken-1: hash
[['int', 'hash|code'], ['int', 'int'], ['int', 'METHOD_NAME'], ['METHOD_NAME', 'hash|code'], ['int', '<NUM>'], ['int', 'collection'], ['result', 'hash|code'], ['int', 'project'], ['int', 'hash|code'], ['int', 'hash|code'], ['collection', 'hash|code'], ['<NUM>', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['project', 'hash|code'], ['int', 'hash|code'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['override', 'int'], ['METHOD_NAME', 'project'], ['override', 'METHOD_NAME'], ['METHOD_NAME', 'hash|code'], ['int', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'collection'], ['int', 'project'], ['result', 'project'], ['result', 'collection'], ['<NUM>', 'collection'], ['METHOD_NAME', '<NUM>'], ['int', 'collection'], ['result', 'collection'], ['hash|code', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'int'], ['result', '<NUM>'], ['int', '<NUM>'], ['int', 'result'], ['<NUM>', 'result'], ['hash|code', 'result'], ['METHOD_NAME', 'result'], ['result', 'result'], ['hash|code', 'result'], ['collection', 'result'], ['int', 'result'], ['<NUM>', 'result'], ['project', 'result'], ['result', 'result'], ['int', 'result'], ['result', 'result'], ['project', 'result'], ['result', 'result'], ['result', 'result'], ['METHOD_NAME', 'result'], ['int', 'result']]

topk path-contexts for subtoken-2: code
[0.3397] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.1172] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0612] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0413] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0398] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0374] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0368] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0314] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0268] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0238] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0199] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0196] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0191] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0148] collection,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0146] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0143] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0122] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0100] result,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0099] project,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0090] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0084] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0056] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0052] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0047] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr0,<NUM>
[0.0034] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0031] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0024] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0018] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0014] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|NameExpr1,result
[0.0012] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0007] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0006] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0005] result,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,project
[0.0005] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,collection
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0003] project,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0003] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr0,collection
[0.0003] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0003] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr0,collection
[0.0002] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0002] project,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] hash|code,NameExpr2|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0001] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0001] collection,NameExpr0|MethodCallExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0001] <NUM>,IntegerLiteralExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result

topk terminals for subtoken-2: code
[['int', 'METHOD_NAME'], ['int', 'int'], ['int', 'hash|code'], ['int', '<NUM>'], ['override', 'int'], ['int', 'hash|code'], ['result', 'hash|code'], ['int', 'hash|code'], ['result', 'hash|code'], ['int', 'result'], ['override', 'METHOD_NAME'], ['METHOD_NAME', '<NUM>'], ['METHOD_NAME', 'hash|code'], ['collection', 'hash|code'], ['<NUM>', 'hash|code'], ['int', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['result', 'hash|code'], ['project', 'hash|code'], ['int', 'result'], ['METHOD_NAME', 'int'], ['int', 'result'], ['int', '<NUM>'], ['result', '<NUM>'], ['int', 'project'], ['METHOD_NAME', 'result'], ['result', 'result'], ['int', 'collection'], ['int', 'result'], ['METHOD_NAME', 'result'], ['<NUM>', 'result'], ['METHOD_NAME', 'project'], ['METHOD_NAME', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'project'], ['result', 'project'], ['result', 'collection'], ['result', 'collection'], ['METHOD_NAME', 'collection'], ['project', 'result'], ['<NUM>', 'collection'], ['hash|code', 'result'], ['result', 'result'], ['int', 'collection'], ['hash|code', 'result'], ['project', 'result'], ['int', 'result'], ['hash|code', 'result'], ['METHOD_NAME', 'result'], ['result', 'result'], ['result', 'result'], ['collection', 'result'], ['<NUM>', 'result'], ['int', 'result'], ['result', 'result']]

