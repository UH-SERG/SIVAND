
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/ql/analytic/AnalyticRecordSource_hasNext.java
method_name = hasNext
method_body = @Override public boolean hasNext() { if (cursor.hasNext()) { record.of(cursor.next()); for (int i = 0, n = functions.size(); i < n; i++) { functions.getQuick(i).prepareFor(record); } return true; } return false; }

topk path-contexts for subtoken-1: has
[0.1131] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr2,has|next
[0.0834] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr2,has|next
[0.0400] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0397] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0286] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0245] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0240] boolean,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0233] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0223] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0206] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0204] cursor,NameExpr0|MethodCallExpr2|NameExpr2,next
[0.0193] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0186] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0170] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0159] record,NameExpr0|MethodCallExpr|MethodCallExpr2|NameExpr2,next
[0.0158] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0155] cursor,NameExpr0|MethodCallExpr|NameExpr2,has|next
[0.0155] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr0,cursor
[0.0154] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0153] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0111] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0110] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0104] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0104] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0101] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0097] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0096] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0091] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0088] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0087] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0083] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0082] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0081] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0079] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0077] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0076] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0075] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0075] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0074] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0072] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0069] functions,NameExpr0|MethodCallExpr|NameExpr2,size
[0.0068] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0067] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0064] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0064] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0059] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0057] functions,NameExpr0|MethodCallExpr0|NameExpr2,i
[0.0057] i,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0055] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0055] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0053] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0052] get|quick,NameExpr3|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0051] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0049] functions,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0047] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0047] next,NameExpr2|MethodCallExpr2|MethodCallExpr|NameExpr3,of
[0.0045] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0045] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0045] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0042] i,NameExpr0|BinaryExpr:less|NameExpr1,n
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0040] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0038] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0036] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0035] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0034] record,NameExpr0|MethodCallExpr|MethodCallExpr2|NameExpr0,cursor
[0.0034] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0034] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0033] n,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0030] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0030] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0029] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0028] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|NameExpr3,of
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0027] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0027] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0026] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0026] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0025] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0024] n,NameExpr1|BinaryExpr:less|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0024] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0023] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0023] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0022] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0020] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0019] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0019] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0019] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0017] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0017] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0017] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0016] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0015] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0015] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0014] prepare|for,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0014] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0013] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0013] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0013] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0013] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0012] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0012] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0012] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0012] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0011] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0011] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0011] true,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0011] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0011] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0010] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0010] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0009] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0009] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0008] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0008] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0008] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0008] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0008] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0008] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0007] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0007] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0006] i,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,0
[0.0006] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0006] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0006] n,NameExpr1|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0004] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0004] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0004] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0003] record,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0003] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0002] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0002] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0002] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0002] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0002] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0002] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] get|quick,NameExpr3|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] functions,NameExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0001] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0000] i,NameExpr2|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0000] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0000] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0000] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] n,NameExpr1|BinaryExpr:less|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0000] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] i,NameExpr0|BinaryExpr:less|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0000] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i

topk terminals for subtoken-1: has
[['boolean', 'has|next'], ['METHOD_NAME', 'has|next'], ['override', 'boolean'], ['override', 'METHOD_NAME'], ['has|next', 'prepare|for'], ['has|next', 'record'], ['boolean', 'METHOD_NAME'], ['METHOD_NAME', 'next'], ['has|next', 'false'], ['boolean', 'next'], ['cursor', 'next'], ['cursor', 'prepare|for'], ['has|next', 'next'], ['has|next', 'true'], ['record', 'next'], ['cursor', 'next'], ['cursor', 'has|next'], ['METHOD_NAME', 'cursor'], ['int', 'prepare|for'], ['size', 'prepare|for'], ['n', 'prepare|for'], ['boolean', 'n'], ['boolean', 'i'], ['boolean', '0'], ['int', 'record'], ['size', 'record'], ['cursor', 'false'], ['0', 'prepare|for'], ['boolean', 'true'], ['of', 'prepare|for'], ['i', 'prepare|for'], ['has|next', 'size'], ['record', 'prepare|for'], ['0', 'record'], ['int', 'size'], ['n', 'record'], ['cursor', 'size'], ['i', 'prepare|for'], ['functions', 'prepare|for'], ['boolean', 'false'], ['functions', 'size'], ['boolean', 'cursor'], ['METHOD_NAME', 'true'], ['boolean', 'record'], ['cursor', 'true'], ['i', 'record'], ['functions', 'i'], ['i', 'record'], ['i', 'record'], ['0', 'size'], ['boolean', 'int'], ['get|quick', 'record'], ['boolean', 'i'], ['functions', 'record'], ['METHOD_NAME', 'false'], ['next', 'of'], ['record', 'record'], ['has|next', 'cursor'], ['METHOD_NAME', 'cursor'], ['i', 'n'], ['METHOD_NAME', 'record'], ['of', 'record'], ['record', 'size'], ['i', 'size'], ['0', 'functions'], ['record', 'cursor'], ['n', 'size'], ['has|next', 'n'], ['n', 'functions'], ['has|next', 'of'], ['boolean', 'of'], ['has|next', '0'], ['cursor', 'of'], ['int', '0'], ['i', 'false'], ['has|next', 'functions'], ['int', 'false'], ['cursor', 'of'], ['has|next', 'record'], ['n', 'false'], ['METHOD_NAME', 'of'], ['next', 'false'], ['cursor', 'cursor'], ['cursor', '0'], ['0', 'false'], ['METHOD_NAME', '0'], ['n', 'functions'], ['cursor', 'record'], ['of', 'size'], ['METHOD_NAME', 'n'], ['int', 'i'], ['int', 'functions'], ['cursor', 'functions'], ['int', 'get|quick'], ['prepare|for', 'true'], ['i', 'functions'], ['n', 'get|quick'], ['0', 'i'], ['i', 'false'], ['i', 'false'], ['0', 'get|quick'], ['record', 'false'], ['cursor', 'n'], ['i', 'size'], ['record', 'functions'], ['i', 'i'], ['true', 'false'], ['record', '0'], ['boolean', 'n'], ['cursor', 'false'], ['i', 'get|quick'], ['next', '0'], ['i', 'get|quick'], ['of', 'functions'], ['of', '0'], ['n', 'i'], ['boolean', 'i'], ['0', 'functions'], ['i', 'functions'], ['i', 'i'], ['cursor', '0'], ['i', '0'], ['i', 'functions'], ['of', 'false'], ['n', 'true'], ['i', 'true'], ['next', 'n'], ['has|next', 'int'], ['int', 'true'], ['n', '0'], ['record', 'true'], ['cursor', 'n'], ['i', 'true'], ['functions', 'true'], ['cursor', 'true'], ['n', 'functions'], ['i', 'functions'], ['record', 'n'], ['size', 'true'], ['0', 'true'], ['METHOD_NAME', 'i'], ['n', 'true'], ['get|quick', 'true'], ['i', 'true'], ['functions', 'true'], ['cursor', 'int'], ['next', 'true'], ['next', 'int'], ['record', 'int'], ['record', 'true'], ['METHOD_NAME', 'i'], ['has|next', 'i'], ['cursor', 'int'], ['i', '0'], ['i', 'true'], ['has|next', 'i'], ['of', 'n'], ['record', 'i'], ['cursor', 'i'], ['of', 'int'], ['cursor', 'i'], ['n', 'int'], ['int', 'i'], ['next', 'i'], ['of', 'true'], ['cursor', 'i'], ['cursor', 'i'], ['next', 'n'], ['next', 'i'], ['record', 'i'], ['n', 'i'], ['has|next', 'n'], ['functions', 'i'], ['of', 'i'], ['record', 'n'], ['next', 'i'], ['METHOD_NAME', 'n'], ['cursor', 'n'], ['has|next', 'i'], ['of', 'n'], ['cursor', 'n'], ['record', 'i'], ['METHOD_NAME', 'i'], ['cursor', 'i'], ['cursor', 'i'], ['of', 'i'], ['of', 'i'], ['int', 'n'], ['i', 'i'], ['int', 'i'], ['0', 'n'], ['size', 'i'], ['0', 'i'], ['n', 'i'], ['n', 'n'], ['i', 'i'], ['n', 'i'], ['i', 'n'], ['i', 'n'], ['i', 'i']]

topk path-contexts for subtoken-2: next
[0.2049] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr2,has|next
[0.1052] cursor,NameExpr0|MethodCallExpr|NameExpr2,has|next
[0.0851] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr2,has|next
[0.0308] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0296] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0253] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0228] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0156] functions,NameExpr0|MethodCallExpr|NameExpr2,size
[0.0142] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0126] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0115] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0110] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0104] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0095] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0089] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0085] get|quick,NameExpr3|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0085] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0084] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0079] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0078] next,NameExpr2|MethodCallExpr2|MethodCallExpr|NameExpr3,of
[0.0078] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0078] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0072] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0068] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0066] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0066] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0062] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0062] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0061] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0060] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0060] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0059] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0059] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0057] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0056] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0056] i,NameExpr0|BinaryExpr:less|NameExpr1,n
[0.0053] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0051] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0050] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0050] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|NameExpr3,of
[0.0050] i,NameExpr2|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0050] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0048] functions,NameExpr0|MethodCallExpr0|NameExpr2,i
[0.0048] functions,NameExpr0|MethodCallExpr0|MethodCallExpr|NameExpr2,record
[0.0048] cursor,NameExpr0|MethodCallExpr2|NameExpr2,next
[0.0047] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0045] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,boolean
[0.0043] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0043] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0043] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0043] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0041] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0041] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0040] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0039] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,prepare|for
[0.0038] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0037] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0035] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0034] record,NameExpr0|MethodCallExpr|MethodCallExpr2|NameExpr2,next
[0.0034] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0034] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0034] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0033] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0033] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0031] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0031] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr2,next
[0.0031] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0030] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0029] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0029] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0029] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0029] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0028] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,record
[0.0027] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0026] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0025] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0024] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|MethodCallExpr0|NameExpr0,cursor
[0.0024] boolean,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0024] n,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0023] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0023] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0022] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0022] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,size
[0.0022] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0022] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr3,get|quick
[0.0021] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0021] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0021] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0020] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0020] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0019] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0019] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0019] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0018] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0017] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0017] i,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,0
[0.0017] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0016] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0016] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0016] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0015] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0015] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr1,n
[0.0014] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0014] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,of
[0.0014] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0013] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0013] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0013] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0013] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0013] record,NameExpr0|MethodCallExpr|MethodCallExpr2|NameExpr0,cursor
[0.0012] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,record
[0.0012] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0012] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,0
[0.0011] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0011] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0011] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,functions
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0010] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0009] has|next,NameExpr2|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0008] prepare|for,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0008] true,BooleanLiteralExpr0|ReturnStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0008] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0008] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0007] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0007] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0007] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0007] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0007] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0007] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0007] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0006] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr2,i
[0.0006] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0006] n,NameExpr1|BinaryExpr:less|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0006] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0006] i,NameExpr0|UnaryExpr:posIncrement|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0005] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0005] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0005] functions,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0005] n,NameExpr1|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0005] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0005] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0005] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0005] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr2|NameExpr0,cursor
[0.0005] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0005] boolean,PrimitiveType1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0005] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0004] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0004] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0004] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BinaryExpr:less|NameExpr0,i
[0.0004] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0004] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0004] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0004] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0004] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0004] get|quick,NameExpr3|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0003] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0003] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|MethodCallExpr0|NameExpr0,functions
[0.0003] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0003] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] record,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] size,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0003] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0003] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0003] i,NameExpr0|BinaryExpr:less|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0003] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0003] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0003] functions,NameExpr0|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0002] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] cursor,NameExpr0|MethodCallExpr|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0002] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0002] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0002] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0002] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,false
[0.0001] n,NameExpr1|BinaryExpr:less|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] cursor,NameExpr0|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0001] i,NameExpr2|MethodCallExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ForStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] n,NameExpr1|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0001] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] n,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] next,NameExpr2|MethodCallExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ForStmt|UnaryExpr:posIncrement|NameExpr0,i
[0.0001] record,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,i
[0.0001] 0,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0001] i,NameExpr0|BinaryExpr:less|ForStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n
[0.0000] of,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ReturnStmt|BooleanLiteralExpr0,true
[0.0000] i,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,n

topk terminals for subtoken-2: next
[['METHOD_NAME', 'has|next'], ['cursor', 'has|next'], ['boolean', 'has|next'], ['has|next', '0'], ['has|next', 'n'], ['has|next', 'record'], ['has|next', 'prepare|for'], ['functions', 'size'], ['has|next', 'size'], ['has|next', 'of'], ['override', 'METHOD_NAME'], ['has|next', 'next'], ['of', 'prepare|for'], ['int', 'prepare|for'], ['size', 'prepare|for'], ['get|quick', 'record'], ['has|next', 'record'], ['has|next', 'false'], ['size', 'record'], ['next', 'of'], ['0', 'size'], ['int', 'record'], ['has|next', 'functions'], ['int', '0'], ['0', 'prepare|for'], ['int', 'size'], ['0', 'record'], ['n', 'record'], ['record', 'prepare|for'], ['of', '0'], ['cursor', 'prepare|for'], ['record', '0'], ['has|next', 'true'], ['i', 'record'], ['cursor', '0'], ['i', 'n'], ['functions', 'prepare|for'], ['i', 'record'], ['i', 'prepare|for'], ['cursor', 'of'], ['i', 'record'], ['i', 'size'], ['functions', 'i'], ['functions', 'record'], ['cursor', 'next'], ['n', 'prepare|for'], ['override', 'boolean'], ['n', 'size'], ['of', 'record'], ['0', 'get|quick'], ['int', 'get|quick'], ['record', 'size'], ['METHOD_NAME', 'next'], ['boolean', 'n'], ['of', 'size'], ['i', 'prepare|for'], ['next', '0'], ['i', 'get|quick'], ['METHOD_NAME', 'n'], ['record', 'next'], ['METHOD_NAME', '0'], ['boolean', 'next'], ['cursor', 'size'], ['has|next', 'int'], ['has|next', 'cursor'], ['n', '0'], ['cursor', 'next'], ['cursor', 'n'], ['cursor', '0'], ['cursor', 'of'], ['has|next', 'i'], ['n', 'get|quick'], ['0', 'functions'], ['record', 'record'], ['has|next', 'i'], ['boolean', '0'], ['METHOD_NAME', 'false'], ['METHOD_NAME', 'cursor'], ['boolean', 'METHOD_NAME'], ['n', 'functions'], ['METHOD_NAME', 'of'], ['boolean', 'true'], ['cursor', 'false'], ['i', 'size'], ['METHOD_NAME', 'record'], ['i', 'get|quick'], ['of', 'functions'], ['record', 'n'], ['next', 'n'], ['METHOD_NAME', 'true'], ['int', 'functions'], ['n', 'functions'], ['i', 'functions'], ['cursor', 'n'], ['i', 'i'], ['boolean', 'false'], ['i', '0'], ['record', 'i'], ['record', 'functions'], ['cursor', 'record'], ['int', 'i'], ['i', 'functions'], ['of', 'n'], ['int', 'false'], ['boolean', 'of'], ['0', 'i'], ['0', 'functions'], ['0', 'false'], ['cursor', 'true'], ['boolean', 'i'], ['record', 'cursor'], ['boolean', 'record'], ['record', 'int'], ['i', '0'], ['cursor', 'functions'], ['boolean', 'i'], ['i', 'functions'], ['METHOD_NAME', 'cursor'], ['has|next', 'i'], ['int', 'true'], ['has|next', 'n'], ['prepare|for', 'true'], ['true', 'false'], ['boolean', 'cursor'], ['functions', 'true'], ['size', 'true'], ['of', 'i'], ['n', 'i'], ['cursor', 'i'], ['boolean', 'n'], ['boolean', 'int'], ['i', 'false'], ['METHOD_NAME', 'i'], ['i', 'i'], ['of', 'int'], ['n', 'false'], ['METHOD_NAME', 'i'], ['next', 'int'], ['i', 'true'], ['0', 'true'], ['cursor', 'int'], ['functions', 'i'], ['n', 'true'], ['cursor', 'i'], ['cursor', 'int'], ['record', 'i'], ['cursor', 'cursor'], ['i', 'false'], ['boolean', 'i'], ['i', 'false'], ['cursor', 'i'], ['next', 'false'], ['int', 'i'], ['next', 'i'], ['record', 'i'], ['record', 'n'], ['next', 'i'], ['cursor', 'i'], ['n', 'true'], ['get|quick', 'true'], ['of', 'n'], ['n', 'functions'], ['i', 'functions'], ['of', 'i'], ['i', 'true'], ['record', 'true'], ['size', 'i'], ['next', 'i'], ['next', 'n'], ['i', 'true'], ['cursor', 'false'], ['of', 'i'], ['functions', 'true'], ['cursor', 'i'], ['cursor', 'i'], ['cursor', 'n'], ['int', 'i'], ['cursor', 'n'], ['record', 'false'], ['int', 'n'], ['METHOD_NAME', 'i'], ['METHOD_NAME', 'n'], ['of', 'false'], ['n', 'i'], ['cursor', 'true'], ['n', 'int'], ['n', 'i'], ['i', 'true'], ['n', 'n'], ['0', 'i'], ['i', 'i'], ['n', 'i'], ['next', 'true'], ['i', 'i'], ['record', 'true'], ['i', 'i'], ['0', 'n'], ['i', 'n'], ['of', 'true'], ['i', 'n']]

