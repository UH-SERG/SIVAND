
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/asm/MethodWriter_visitJumpInsn.java
method_name = visitJumpInsn
method_body = @Override public void visitJumpInsn(int opcode, @Nonnull Label label) { Label nextInsn = cfgAnalysis.updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); } else { code.putByte(opcode); label.put(code, code.length - 1, false); } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }

topk path-contexts for subtoken-1: visit
[0.0437] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0384] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0309] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0291] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0289] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0285] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0284] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0275] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0274] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0267] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0258] label,NameExpr3|MethodCallExpr|NameExpr3,update|current|block|for|jump|instruction
[0.0215] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0190] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0188] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0187] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0174] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0167] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0163] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0162] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0155] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0151] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr1,goto
[0.0147] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0137] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0128] opcode,NameExpr2|MethodCallExpr|NameExpr3,next|insn
[0.0126] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0112] goto|w,NameExpr2|MethodCallExpr|NameExpr3,put|byte
[0.0110] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0103] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0100] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0100] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0099] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0094] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0094] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0089] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0085] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0080] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0080] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0079] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0079] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0079] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0078] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0077] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0075] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0073] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0070] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0065] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0063] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0062] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0061] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0061] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0060] false,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0055] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0053] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0053] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0051] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0049] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0049] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0044] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0041] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0040] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0039] opcode,NameExpr0|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0032] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|NameExpr0,opcode
[0.0031] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0030] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0030] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0030] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0030] update|current|block|for|jump|instruction,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0029] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0029] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0029] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0029] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0029] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0028] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0028] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0027] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0026] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0026] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0025] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0025] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0025] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0025] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0025] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0024] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0024] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0023] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0022] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0022] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0022] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0022] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0021] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0021] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|short
[0.0021] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0020] code,NameExpr0|MethodCallExpr|NameExpr2,opcode
[0.0019] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0019] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0018] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0017] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0017] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0017] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0017] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0016] 1,IntegerLiteralExpr1|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0015] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0015] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0015] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0015] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0015] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0015] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0014] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0014] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0013] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0013] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|MethodCallExpr0|NameExpr0,label
[0.0013] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0012] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0012] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0012] opcode,NameExpr0|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0012] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0012] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0012] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0012] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0012] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0012] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0011] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0011] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0011] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0011] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0011] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0011] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0011] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0011] code,NameExpr0|FieldAccessExpr|NameExpr2,length
[0.0011] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0011] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0011] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0011] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0011] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0011] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0010] int,PrimitiveType1|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0010] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0010] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0010] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0010] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0010] label,NameExpr0|FieldAccessExpr|NameExpr2,position
[0.0009] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0009] label,NameExpr0|FieldAccessExpr|BinaryExpr:minus|FieldAccessExpr1|NameExpr0,code
[0.0009] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0009] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|FieldAccessExpr0|NameExpr0,code
[0.0009] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0009] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0008] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0008] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0008] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0008] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0008] position,NameExpr2|FieldAccessExpr|BinaryExpr:minus|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0008] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|MethodCallExpr|NameExpr3,put
[0.0008] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0007] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0007] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0007] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0007] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0006] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0006] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0006] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0006] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0006] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0005] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0005] next|insn,NameExpr0|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0005] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0005] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0005] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0005] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0005] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0005] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0005] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0005] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0004] <NUM>,IntegerLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0004] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0004] length,NameExpr2|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0004] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0004] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0004] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0004] code,NameExpr0|MethodCallExpr|IntegerLiteralExpr2,<NUM>
[0.0004] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0004] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0004] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0004] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0003] 1,IntegerLiteralExpr1|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0003] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0003] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0003] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0003] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0003] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0003] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0003] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0003] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0002] 1,IntegerLiteralExpr1|BinaryExpr:minus3|MethodCallExpr|BooleanLiteralExpr3,true
[0.0002] next|insn,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0002] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0002] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0001] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn

topk terminals for subtoken-1: visit
[['label', 'opcode'], ['opcode', 'opcode'], ['int', 'update|current|block|for|jump|target'], ['next|insn', 'update|current|block|for|jump|instruction'], ['opcode', 'cfg|analysis'], ['label', 'cfg|analysis'], ['opcode', 'opcode'], ['opcode', 'cfg|analysis'], ['opcode', 'update|current|block|for|jump|target'], ['label', 'opcode'], ['label', 'update|current|block|for|jump|instruction'], ['opcode', 'next|insn'], ['goto|w', 'goto|w'], ['label', 'opcode'], ['label', 'short'], ['label', 'update|current|block|for|jump|instruction'], ['label', 'cfg|analysis'], ['opcode', 'nonnull'], ['label', 'next|insn'], ['label', 'opcode'], ['opcode', 'goto'], ['opcode', 'true'], ['label', 'code'], ['opcode', 'next|insn'], ['label', 'opcode'], ['goto|w', 'put|byte'], ['label', 'next|insn'], ['opcode', 'goto|w'], ['label', 'label'], ['label', 'label'], ['opcode', 'code'], ['next|insn', 'update|current|block|for|jump|target'], ['label', 'true'], ['label', 'put'], ['label', 'opcode'], ['label', 'false'], ['opcode', 'update|current|block|for|jump|target'], ['label', 'update|current|block|for|jump|target'], ['opcode', 'update|current|block|for|jump|target'], ['is|resolved', 'update|current|block|for|jump|target'], ['opcode', 'opcode'], ['opcode', 'goto|w'], ['METHOD_NAME', 'nonnull'], ['min|value', 'update|current|block|for|jump|target'], ['int', 'opcode'], ['<NUM>', 'goto|w'], ['label', 'update|current|block|for|jump|target'], ['goto', 'opcode'], ['opcode', 'opcode'], ['code', 'update|current|block|for|jump|target'], ['false', 'update|current|block|for|jump|target'], ['label', 'put'], ['label', 'min|value'], ['int', 'short'], ['is|resolved', 'opcode'], ['put', 'update|current|block|for|jump|target'], ['int', 'put|byte'], ['label', 'cfg|analysis'], ['goto', 'next|insn'], ['label', 'false'], ['opcode', '1'], ['null', 'opcode'], ['null', 'next|insn'], ['goto', '1'], ['goto', '1'], ['int', 'label'], ['update|current|block|for|jump|instruction', 'opcode'], ['opcode', 'next|insn'], ['opcode', 'opcode'], ['is|resolved', 'label'], ['goto', 'put|byte'], ['null', 'mark|as|target'], ['label', 'put|byte'], ['goto|w', 'code'], ['goto', 'null'], ['goto', 'code'], ['goto', 'code'], ['next|insn', 'label'], ['code', 'next|insn'], ['code', 'put|byte'], ['put', 'next|insn'], ['code', 'next|insn'], ['null', 'opcode'], ['short', 'cfg|analysis'], ['goto|w', 'label'], ['is|resolved', 'put'], ['code', 'cfg|analysis'], ['next|insn', 'cfg|analysis'], ['put|byte', 'put|byte'], ['opcode', '1'], ['put|byte', 'put|short'], ['goto|w', 'code'], ['code', 'opcode'], ['put', 'put|byte'], ['min|value', 'put|byte'], ['int', 'next|insn'], ['nonnull', 'opcode'], ['goto', '1'], ['next|insn', 'put'], ['opcode', '1'], ['1', 'opcode'], ['cfg|analysis', 'cfg|analysis'], ['short', 'opcode'], ['label', 'label'], ['short', 'put'], ['int', 'label'], ['int', 'label'], ['label', 'opcode'], ['opcode', 'put'], ['code', 'put'], ['nonnull', 'label'], ['opcode', 'code'], ['put|byte', 'code'], ['put|byte', 'code'], ['opcode', '<NUM>'], ['opcode', '<NUM>'], ['opcode', 'put|byte'], ['put', 'put'], ['code', 'put'], ['opcode', '1'], ['put|short', 'code'], ['goto', 'true'], ['opcode', 'put'], ['label', 'opcode'], ['min|value', 'label'], ['label', 'code'], ['label', 'code'], ['next|insn', '1'], ['code', 'length'], ['1', 'put|byte'], ['put|byte', 'code'], ['put|byte', 'code'], ['code', '1'], ['next|insn', 'code'], ['next|insn', 'code'], ['int', 'nonnull'], ['opcode', 'mark|as|target'], ['int', 'code'], ['label', 'opcode'], ['opcode', 'null'], ['label', 'position'], ['label', 'opcode'], ['label', 'code'], ['label', 'opcode'], ['code', 'code'], ['short', 'label'], ['put|short', 'put|byte'], ['cfg|analysis', 'opcode'], ['opcode', 'code'], ['label', 'code'], ['opcode', '1'], ['position', 'min|value'], ['code', 'put'], ['opcode', 'code'], ['<NUM>', '1'], ['next|insn', 'label'], ['label', 'code'], ['put', 'label'], ['opcode', 'code'], ['short', 'code'], ['opcode', 'next|insn'], ['mark|as|target', 'code'], ['label', 'label'], ['1', 'code'], ['next|insn', 'null'], ['label', 'next|insn'], ['put|byte', 'code'], ['put|byte', 'true'], ['code', 'label'], ['<NUM>', '1'], ['put|byte', 'code'], ['put|short', 'true'], ['put|byte', '<NUM>'], ['<NUM>', 'code'], ['opcode', '<NUM>'], ['length', '1'], ['code', '1'], ['code', '1'], ['put|byte', 'null'], ['code', '<NUM>'], ['code', '1'], ['label', 'short'], ['null', 'true'], ['true', 'code'], ['1', '1'], ['mark|as|target', '<NUM>'], ['code', '1'], ['true', 'code'], ['code', 'false'], ['put|byte', 'next|insn'], ['code', 'label'], ['1', '<NUM>'], ['code', '1'], ['1', 'true'], ['next|insn', '<NUM>'], ['short', 'true'], ['code', 'label'], ['code', 'true'], ['code', 'true'], ['code', 'next|insn']]

topk path-contexts for subtoken-2: jump
[0.0848] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0588] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0570] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0543] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0481] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr1,goto
[0.0435] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0431] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0341] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0274] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0246] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0239] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0186] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0174] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0169] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0148] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0144] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0144] update|current|block|for|jump|instruction,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0135] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0130] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0127] label,NameExpr3|MethodCallExpr|NameExpr3,update|current|block|for|jump|instruction
[0.0125] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0118] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0109] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0108] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0108] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0108] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0101] goto|w,NameExpr2|MethodCallExpr|NameExpr3,put|byte
[0.0100] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0098] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0096] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0088] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0083] opcode,NameExpr2|MethodCallExpr|NameExpr3,next|insn
[0.0081] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0079] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0077] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0072] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0071] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0067] next|insn,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0063] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0060] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0059] next|insn,NameExpr0|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0052] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0050] opcode,NameExpr0|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0048] opcode,NameExpr0|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0046] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0046] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0045] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0043] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0041] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0039] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0038] position,NameExpr2|FieldAccessExpr|BinaryExpr:minus|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0038] code,NameExpr0|MethodCallExpr|NameExpr2,opcode
[0.0036] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0034] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0034] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|MethodCallExpr0|NameExpr0,label
[0.0032] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0031] label,NameExpr0|FieldAccessExpr|NameExpr2,position
[0.0031] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0031] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0030] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0029] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0029] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0029] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0028] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0027] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0027] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0027] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0027] code,NameExpr0|FieldAccessExpr|NameExpr2,length
[0.0024] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0024] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0024] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0023] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0023] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0022] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0022] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0022] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0022] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0021] false,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0017] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0016] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0016] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0015] int,PrimitiveType1|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0015] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0014] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0014] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0013] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0013] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0013] label,NameExpr0|FieldAccessExpr|BinaryExpr:minus|FieldAccessExpr1|NameExpr0,code
[0.0013] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0013] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0012] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0012] length,NameExpr2|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0012] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0011] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0010] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0010] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0010] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0010] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0010] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0009] code,NameExpr0|MethodCallExpr|IntegerLiteralExpr2,<NUM>
[0.0009] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0008] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0008] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0008] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0008] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0008] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0008] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0007] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0007] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0007] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0006] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0006] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0006] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0006] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0006] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0006] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0006] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0005] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0005] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0005] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0005] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0004] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0004] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0004] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0004] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0004] 1,IntegerLiteralExpr1|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0004] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0004] 1,IntegerLiteralExpr1|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0004] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0004] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0004] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0004] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0004] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0004] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0003] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0003] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0003] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0003] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0003] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0003] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0003] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0003] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0003] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0003] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0003] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0003] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0003] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|FieldAccessExpr0|NameExpr0,code
[0.0003] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0002] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0002] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|short
[0.0002] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0002] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0002] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0002] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0002] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0002] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|NameExpr0,opcode
[0.0002] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0002] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0002] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0002] <NUM>,IntegerLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0002] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0002] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0001] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0001] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0001] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0001] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0001] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|MethodCallExpr|NameExpr3,put
[0.0001] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0001] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] 1,IntegerLiteralExpr1|BinaryExpr:minus3|MethodCallExpr|BooleanLiteralExpr3,true
[0.0001] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0001] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0000] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0000] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0000] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0000] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0000] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true

topk terminals for subtoken-2: jump
[['label', 'short'], ['label', 'opcode'], ['label', 'opcode'], ['opcode', 'opcode'], ['opcode', 'goto'], ['label', 'opcode'], ['next|insn', 'update|current|block|for|jump|instruction'], ['opcode', 'nonnull'], ['label', 'min|value'], ['label', 'cfg|analysis'], ['label', 'cfg|analysis'], ['int', 'update|current|block|for|jump|target'], ['opcode', 'cfg|analysis'], ['opcode', 'opcode'], ['label', 'opcode'], ['opcode', 'true'], ['update|current|block|for|jump|instruction', 'opcode'], ['opcode', 'next|insn'], ['next|insn', 'label'], ['label', 'update|current|block|for|jump|instruction'], ['int', 'short'], ['opcode', 'update|current|block|for|jump|target'], ['label', 'opcode'], ['label', 'false'], ['label', 'update|current|block|for|jump|instruction'], ['next|insn', '1'], ['goto|w', 'put|byte'], ['METHOD_NAME', 'nonnull'], ['int', 'label'], ['next|insn', 'update|current|block|for|jump|target'], ['label', 'next|insn'], ['opcode', 'next|insn'], ['goto|w', 'goto|w'], ['label', 'opcode'], ['label', 'true'], ['label', 'next|insn'], ['label', 'false'], ['next|insn', '<NUM>'], ['int', 'next|insn'], ['is|resolved', 'opcode'], ['next|insn', 'null'], ['opcode', 'code'], ['opcode', '<NUM>'], ['opcode', '1'], ['put', 'update|current|block|for|jump|target'], ['int', 'opcode'], ['goto', 'opcode'], ['mark|as|target', '<NUM>'], ['min|value', 'update|current|block|for|jump|target'], ['opcode', 'update|current|block|for|jump|target'], ['position', 'min|value'], ['code', 'opcode'], ['opcode', '<NUM>'], ['opcode', 'update|current|block|for|jump|target'], ['nonnull', 'label'], ['opcode', '1'], ['label', 'position'], ['is|resolved', 'update|current|block|for|jump|target'], ['code', 'update|current|block|for|jump|target'], ['label', 'update|current|block|for|jump|target'], ['opcode', 'cfg|analysis'], ['label', 'update|current|block|for|jump|target'], ['opcode', 'next|insn'], ['put|byte', '<NUM>'], ['label', 'code'], ['label', 'next|insn'], ['code', '1'], ['code', 'length'], ['label', 'label'], ['goto', '1'], ['goto', 'null'], ['label', 'code'], ['label', 'code'], ['opcode', 'opcode'], ['label', 'label'], ['label', 'label'], ['label', 'cfg|analysis'], ['false', 'update|current|block|for|jump|target'], ['<NUM>', '1'], ['opcode', 'null'], ['label', 'short'], ['int', 'nonnull'], ['label', 'put'], ['null', 'opcode'], ['opcode', 'goto|w'], ['label', 'put'], ['put|byte', 'null'], ['label', 'code'], ['nonnull', 'opcode'], ['put', 'next|insn'], ['goto|w', 'code'], ['length', '1'], ['opcode', 'opcode'], ['<NUM>', 'goto|w'], ['opcode', '1'], ['code', '1'], ['code', '1'], ['opcode', 'goto|w'], ['opcode', 'opcode'], ['code', '<NUM>'], ['code', 'next|insn'], ['opcode', '<NUM>'], ['int', 'put|byte'], ['put|byte', 'next|insn'], ['goto', '1'], ['label', 'opcode'], ['put|short', 'code'], ['code', 'next|insn'], ['opcode', '1'], ['goto|w', 'code'], ['goto|w', 'label'], ['int', 'code'], ['label', 'opcode'], ['cfg|analysis', 'opcode'], ['next|insn', 'cfg|analysis'], ['put|byte', 'code'], ['put|byte', 'code'], ['put|byte', 'put|byte'], ['label', 'opcode'], ['next|insn', 'put'], ['put', 'put|byte'], ['put|byte', 'code'], ['goto', 'next|insn'], ['code', '1'], ['null', 'next|insn'], ['1', '1'], ['next|insn', 'code'], ['next|insn', 'code'], ['goto', '1'], ['1', 'opcode'], ['code', '1'], ['opcode', 'next|insn'], ['put|short', 'put|byte'], ['<NUM>', '1'], ['mark|as|target', 'code'], ['label', 'put|byte'], ['put|byte', 'code'], ['put|byte', 'code'], ['opcode', '1'], ['label', 'opcode'], ['goto', 'put|byte'], ['next|insn', 'label'], ['1', '<NUM>'], ['short', 'opcode'], ['opcode', 'code'], ['null', 'mark|as|target'], ['min|value', 'put|byte'], ['put|short', 'true'], ['int', 'label'], ['int', 'label'], ['code', 'code'], ['label', 'opcode'], ['code', '1'], ['put|byte', 'put|short'], ['put|byte', 'true'], ['min|value', 'label'], ['code', 'cfg|analysis'], ['short', 'cfg|analysis'], ['code', 'put|byte'], ['null', 'opcode'], ['put|byte', 'code'], ['is|resolved', 'label'], ['put', 'label'], ['<NUM>', 'code'], ['goto', 'code'], ['goto', 'code'], ['put', 'put'], ['opcode', 'put|byte'], ['opcode', 'code'], ['opcode', 'code'], ['short', 'code'], ['opcode', 'code'], ['short', 'label'], ['opcode', 'mark|as|target'], ['opcode', 'put'], ['code', 'next|insn'], ['code', 'label'], ['cfg|analysis', 'cfg|analysis'], ['short', 'put'], ['opcode', 'put'], ['is|resolved', 'put'], ['code', 'put'], ['goto', 'true'], ['code', 'put'], ['1', 'put|byte'], ['code', 'put'], ['label', 'label'], ['1', 'true'], ['code', 'false'], ['true', 'code'], ['label', 'code'], ['code', 'label'], ['code', 'label'], ['label', 'code'], ['short', 'true'], ['1', 'code'], ['true', 'code'], ['null', 'true'], ['code', 'true'], ['code', 'true']]

topk path-contexts for subtoken-3: insn
[0.2252] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0991] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0734] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr1,goto
[0.0467] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0462] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0425] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0347] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0329] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0300] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0299] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,opcode
[0.0182] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0174] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0170] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0160] opcode,NameExpr0|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0133] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0103] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0096] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0093] next|insn,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0088] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0082] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0080] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0078] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0076] next|insn,NameExpr0|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0074] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0072] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0068] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0068] opcode,NameExpr0|BinaryExpr:lessEquals|IntegerLiteralExpr1,<NUM>
[0.0065] update|current|block|for|jump|instruction,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0059] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0055] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0046] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0045] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0045] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0042] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0042] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|IfStmt|BinaryExpr:equals|NameExpr0,opcode
[0.0035] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0034] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0032] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0030] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0029] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0029] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0028] METHOD_NAME,NameExpr2|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0026] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0026] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0025] nonnull,NameExpr0|MarkerAnnotationExpr|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|MethodCallExpr0|NameExpr0,label
[0.0025] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0024] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:lessEquals|NameExpr0,opcode
[0.0023] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0023] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0022] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0022] int,PrimitiveType1|Parameter|MethodDeclaration|Parameter|MarkerAnnotationExpr|NameExpr0,nonnull
[0.0022] opcode,NameExpr0|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0021] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0021] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0020] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0020] length,NameExpr2|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0020] label,NameExpr3|MethodCallExpr|NameExpr3,update|current|block|for|jump|instruction
[0.0018] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0017] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0017] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0017] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,update|current|block|for|jump|instruction
[0.0016] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0016] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0015] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0014] label,NameExpr0|FieldAccessExpr|BinaryExpr:minus|FieldAccessExpr1|NameExpr0,code
[0.0014] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0013] opcode,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0013] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0013] label,NameExpr0|FieldAccessExpr|NameExpr2,position
[0.0013] next|insn,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0013] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0012] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0012] 1,IntegerLiteralExpr1|BinaryExpr:minus3|MethodCallExpr|BooleanLiteralExpr3,true
[0.0012] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0012] label,NameExpr0|MethodCallExpr|NameExpr2,code
[0.0011] 1,IntegerLiteralExpr1|BinaryExpr:plus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0010] goto|w,NameExpr2|MethodCallExpr|NameExpr3,put|byte
[0.0010] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|EnclosedExpr|BinaryExpr:plus|IntegerLiteralExpr1,1
[0.0010] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0010] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0010] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,next|insn
[0.0009] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0009] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0009] code,NameExpr0|MethodCallExpr|NameExpr2,opcode
[0.0009] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0009] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0009] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0009] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0008] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0008] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0008] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|ConditionalExpr|BinaryExpr:xor|NameExpr0,opcode
[0.0007] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr3,label
[0.0007] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|BinaryExpr:minus|EnclosedExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0007] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0007] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0007] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0007] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0007] 1,IntegerLiteralExpr1|BinaryExpr:xor|EnclosedExpr|BinaryExpr:minus|ConditionalExpr2|BinaryExpr:xor|NameExpr0,opcode
[0.0007] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0006] code,NameExpr0|MethodCallExpr|IntegerLiteralExpr2,<NUM>
[0.0006] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0005] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BinaryExpr:minus|IntegerLiteralExpr1,1
[0.0005] position,NameExpr2|FieldAccessExpr|BinaryExpr:minus|BinaryExpr:less|FieldAccessExpr1|NameExpr2,min|value
[0.0005] opcode,NameExpr2|MethodCallExpr|NameExpr3,next|insn
[0.0005] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0005] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0005] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0005] label,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr0,cfg|analysis
[0.0005] label,VariableDeclaratorId1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0005] goto|w,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0004] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0004] label,ClassOrInterfaceType2|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0004] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0004] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0004] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0004] opcode,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0004] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0004] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0003] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|IntegerLiteralExpr2,<NUM>
[0.0003] label,NameExpr3|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0003] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0003] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0003] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0003] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0003] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0003] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0002] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0002] false,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0002] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,false
[0.0002] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0002] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|IntegerLiteralExpr1,1
[0.0002] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0002] mark|as|target,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0002] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0002] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0002] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0002] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|BooleanLiteralExpr3,true
[0.0002] next|insn,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0002] code,NameExpr0|MethodCallExpr|ConditionalExpr|BinaryExpr:xor|IntegerLiteralExpr1,1
[0.0002] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0002] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,next|insn
[0.0002] opcode,NameExpr0|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0002] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,opcode
[0.0002] code,NameExpr2|MethodCallExpr|BinaryExpr:minus|FieldAccessExpr0|NameExpr0,code
[0.0001] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:and|BinaryExpr:less|FieldAccessExpr1|NameExpr0,short
[0.0001] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0001] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] <NUM>,IntegerLiteralExpr1|BinaryExpr:lessEquals|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,goto|w
[0.0001] label,NameExpr0|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] code,NameExpr0|FieldAccessExpr|NameExpr2,length
[0.0001] label,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,update|current|block|for|jump|target
[0.0001] int,PrimitiveType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0001] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,next|insn
[0.0001] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0001] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] <NUM>,IntegerLiteralExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] opcode,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] goto,NameExpr1|BinaryExpr:equals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0001] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0001] next|insn,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0001] true,BooleanLiteralExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0000] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,code
[0.0000] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,code
[0.0000] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,label
[0.0000] label,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] opcode,NameExpr0|BinaryExpr:equals|IfStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,mark|as|target
[0.0000] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0000] cfg|analysis,NameExpr0|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,cfg|analysis
[0.0000] opcode,NameExpr0|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,next|insn
[0.0000] is|resolved,NameExpr2|MethodCallExpr|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] min|value,NameExpr2|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] put,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] 1,IntegerLiteralExpr1|BinaryExpr:xor|ConditionalExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] short,NameExpr0|FieldAccessExpr|BinaryExpr:less|BinaryExpr:and|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] code,NameExpr0|FieldAccessExpr|BinaryExpr:minus3|MethodCallExpr|NameExpr3,put
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] code,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] put|short,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] code,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put
[0.0000] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|byte
[0.0000] put|byte,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,put|short

topk terminals for subtoken-3: insn
[['opcode', 'true'], ['opcode', 'opcode'], ['opcode', 'goto'], ['label', 'false'], ['label', 'true'], ['label', 'opcode'], ['opcode', 'opcode'], ['label', 'false'], ['label', 'opcode'], ['label', 'opcode'], ['opcode', 'nonnull'], ['goto', '1'], ['label', 'opcode'], ['opcode', '1'], ['next|insn', '1'], ['label', 'opcode'], ['label', 'opcode'], ['next|insn', '<NUM>'], ['goto', '1'], ['opcode', '1'], ['goto', 'null'], ['opcode', 'code'], ['next|insn', 'null'], ['int', 'opcode'], ['opcode', '<NUM>'], ['goto', 'opcode'], ['opcode', '<NUM>'], ['update|current|block|for|jump|instruction', 'opcode'], ['label', 'cfg|analysis'], ['goto', '1'], ['opcode', 'cfg|analysis'], ['opcode', '1'], ['opcode', 'null'], ['label', 'cfg|analysis'], ['is|resolved', 'opcode'], ['opcode', '<NUM>'], ['label', 'short'], ['opcode', '1'], ['int', 'next|insn'], ['mark|as|target', '<NUM>'], ['nonnull', 'opcode'], ['METHOD_NAME', 'nonnull'], ['opcode', 'opcode'], ['opcode', 'opcode'], ['nonnull', 'label'], ['int', 'label'], ['null', 'opcode'], ['label', 'code'], ['int', 'update|current|block|for|jump|target'], ['opcode', '1'], ['int', 'nonnull'], ['opcode', 'opcode'], ['label', 'label'], ['label', 'label'], ['goto', 'true'], ['length', '1'], ['label', 'update|current|block|for|jump|instruction'], ['label', 'min|value'], ['next|insn', 'update|current|block|for|jump|instruction'], ['code', '1'], ['label', 'update|current|block|for|jump|instruction'], ['code', '1'], ['code', '1'], ['opcode', 'update|current|block|for|jump|target'], ['label', 'code'], ['opcode', 'cfg|analysis'], ['opcode', 'next|insn'], ['label', 'next|insn'], ['label', 'position'], ['next|insn', 'label'], ['int', 'short'], ['label', 'opcode'], ['1', 'true'], ['label', 'code'], ['label', 'code'], ['1', '1'], ['goto|w', 'put|byte'], ['<NUM>', '1'], ['int', 'label'], ['int', 'label'], ['label', 'next|insn'], ['put|byte', 'null'], ['next|insn', 'label'], ['code', 'opcode'], ['1', '<NUM>'], ['null', 'true'], ['int', 'code'], ['label', 'next|insn'], ['opcode', 'next|insn'], ['label', 'opcode'], ['null', 'opcode'], ['label', 'label'], ['<NUM>', '1'], ['goto|w', 'code'], ['next|insn', 'code'], ['next|insn', 'code'], ['goto|w', 'label'], ['1', 'opcode'], ['goto|w', 'code'], ['code', '<NUM>'], ['label', 'opcode'], ['code', '1'], ['position', 'min|value'], ['opcode', 'next|insn'], ['label', 'opcode'], ['cfg|analysis', 'opcode'], ['label', 'opcode'], ['label', 'cfg|analysis'], ['label', 'put'], ['goto|w', 'goto|w'], ['put|short', 'true'], ['label', 'put'], ['opcode', 'code'], ['goto', 'code'], ['goto', 'code'], ['opcode', 'code'], ['min|value', 'label'], ['opcode', 'update|current|block|for|jump|target'], ['is|resolved', 'update|current|block|for|jump|target'], ['next|insn', 'update|current|block|for|jump|target'], ['put|byte', '<NUM>'], ['label', 'update|current|block|for|jump|target'], ['opcode', 'code'], ['opcode', 'update|current|block|for|jump|target'], ['short', 'true'], ['null', 'next|insn'], ['opcode', 'code'], ['label', 'update|current|block|for|jump|target'], ['put|byte', 'true'], ['false', 'update|current|block|for|jump|target'], ['code', 'false'], ['put', 'update|current|block|for|jump|target'], ['code', '1'], ['min|value', 'update|current|block|for|jump|target'], ['mark|as|target', 'code'], ['is|resolved', 'label'], ['put', 'label'], ['code', 'true'], ['code', 'true'], ['next|insn', 'cfg|analysis'], ['code', '1'], ['opcode', 'next|insn'], ['goto', 'next|insn'], ['opcode', 'goto|w'], ['short', 'opcode'], ['code', 'code'], ['label', 'short'], ['opcode', 'goto|w'], ['short', 'label'], ['<NUM>', 'goto|w'], ['label', 'code'], ['label', 'label'], ['code', 'length'], ['label', 'code'], ['code', 'update|current|block|for|jump|target'], ['int', 'put|byte'], ['code', 'next|insn'], ['put|byte', 'next|insn'], ['1', 'code'], ['short', 'cfg|analysis'], ['put|short', 'code'], ['true', 'code'], ['<NUM>', 'code'], ['opcode', 'put'], ['goto', 'put|byte'], ['null', 'mark|as|target'], ['next|insn', 'put'], ['put|byte', 'code'], ['put|byte', 'code'], ['put|byte', 'code'], ['code', 'label'], ['put|byte', 'code'], ['put|byte', 'code'], ['true', 'code'], ['opcode', 'put'], ['put|byte', 'code'], ['short', 'code'], ['put', 'next|insn'], ['code', 'label'], ['code', 'label'], ['label', 'put|byte'], ['opcode', 'mark|as|target'], ['code', 'cfg|analysis'], ['code', 'next|insn'], ['cfg|analysis', 'cfg|analysis'], ['opcode', 'put|byte'], ['code', 'next|insn'], ['is|resolved', 'put'], ['min|value', 'put|byte'], ['put', 'put|byte'], ['put', 'put'], ['1', 'put|byte'], ['short', 'put'], ['code', 'put'], ['code', 'put|byte'], ['code', 'put'], ['put|short', 'put|byte'], ['code', 'put'], ['put|byte', 'put|byte'], ['put|byte', 'put|short']]

