
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-core/src/main/java/com/bj58/oceanus/core/shard/TableInfo_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { final int prime = 31; int result = 1; result = prime * result + ((orgName == null) ? 0 : orgName.hashCode()); result = prime * result + ((schema == null) ? 0 : schema.hashCode()); return result; }

topk path-contexts for subtoken-1: hash
[0.1176] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.1176] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0883] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0753] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0686] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0374] schema,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0308] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0308] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0306] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0303] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0303] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0275] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0249] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0249] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0190] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0190] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0171] org|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0160] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0160] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0158] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0118] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0118] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0095] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0087] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0087] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0069] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0063] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0063] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0056] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0053] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0044] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0040] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0031] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0029] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0028] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0028] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0026] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0026] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0025] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0019] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0019] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0019] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0016] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0016] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0016] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0014] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0011] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0010] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0009] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0009] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0008] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0008] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0007] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0007] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0007] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0006] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0006] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0006] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0006] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0006] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0005] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0005] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0005] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0004] schema,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0004] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0004] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0003] org|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0003] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0003] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0003] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0002] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0002] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0002] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0002] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result

topk terminals for subtoken-1: hash
[['int', 'int'], ['int', 'int'], ['int', '1'], ['int', 'METHOD_NAME'], ['int', '<NUM>'], ['schema', 'hash|code'], ['null', 'hash|code'], ['null', 'hash|code'], ['schema', 'hash|code'], ['0', 'hash|code'], ['0', 'hash|code'], ['int', 'prime'], ['int', '0'], ['int', '0'], ['int', 'prime'], ['int', 'prime'], ['org|name', 'hash|code'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['org|name', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'hash|code'], ['result', 'hash|code'], ['METHOD_NAME', '1'], ['override', 'int'], ['METHOD_NAME', '<NUM>'], ['int', '1'], ['int', '<NUM>'], ['METHOD_NAME', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'prime'], ['result', 'prime'], ['prime', '<NUM>'], ['override', 'METHOD_NAME'], ['prime', 'result'], ['prime', 'result'], ['prime', 'schema'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['prime', 'schema'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['schema', 'schema'], ['result', '1'], ['result', 'schema'], ['int', '1'], ['0', 'schema'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['prime', '1'], ['0', 'result'], ['0', 'result'], ['prime', 'org|name'], ['null', 'schema'], ['prime', 'org|name'], ['result', 'prime'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['prime', 'result'], ['prime', 'result'], ['result', 'schema'], ['result', 'org|name'], ['0', 'org|name'], ['result', 'result'], ['result', 'result'], ['METHOD_NAME', 'prime'], ['schema', 'null'], ['result', 'org|name'], ['result', 'schema'], ['org|name', 'null'], ['result', 'schema'], ['null', 'org|name'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['org|name', 'org|name'], ['prime', 'null'], ['prime', 'null'], ['prime', '0'], ['prime', '0'], ['result', 'org|name'], ['result', 'result'], ['result', 'result'], ['result', 'org|name'], ['prime', 'int'], ['<NUM>', '1'], ['result', 'result'], ['result', 'result'], ['schema', '0'], ['result', 'null'], ['result', 'null'], ['org|name', '0'], ['result', '0'], ['result', '0'], ['prime', 'result'], ['result', 'result'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['prime', 'result'], ['<NUM>', 'result'], ['result', 'null'], ['result', 'null'], ['1', 'result'], ['1', 'result'], ['int', 'prime'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', '0'], ['result', '0'], ['int', 'int'], ['null', '0'], ['null', '0'], ['result', 'result'], ['prime', 'result'], ['<NUM>', 'int'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['METHOD_NAME', 'result'], ['int', 'result'], ['<NUM>', 'result'], ['int', 'result']]

topk path-contexts for subtoken-2: code
[0.2405] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.2194] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.1219] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0811] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0811] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0303] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0214] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0160] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0160] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0149] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0145] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0123] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0123] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0102] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0102] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0086] org|name,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0075] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0074] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0059] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0058] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0058] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0041] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0038] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0038] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0037] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0037] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0031] schema,NameExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0030] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0030] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0030] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0029] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr2,hash|code
[0.0015] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0011] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0011] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0011] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0011] result,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,1
[0.0010] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0006] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|NameExpr0,result
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0004] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0003] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0003] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0003] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|IntegerLiteralExpr1,1
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0003] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0003] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0003] prime,VariableDeclaratorId0|VariableDeclarator|IntegerLiteralExpr1,<NUM>
[0.0002] org|name,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0002] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0002] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0002] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,org|name
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0001] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0001] prime,NameExpr0|BinaryExpr:times|NameExpr1,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] org|name,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0001] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0001] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0001] null,NullLiteralExpr1|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0001] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0000] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] 1,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] schema,NameExpr0|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0000] schema,NameExpr0|BinaryExpr:equals|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|IntegerLiteralExpr1,0
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] 0,IntegerLiteralExpr1|ConditionalExpr|EnclosedExpr|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|MethodCallExpr2|NameExpr0,schema
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,org|name
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr1,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NullLiteralExpr1,null
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] prime,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0000] prime,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,prime
[0.0000] <NUM>,IntegerLiteralExpr1|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|NameExpr0,result
[0.0000] result,NameExpr1|BinaryExpr:times|BinaryExpr:plus1|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result
[0.0000] result,NameExpr0|AssignExpr:assign|BinaryExpr:plus|EnclosedExpr|ConditionalExpr|EnclosedExpr|BinaryExpr:equals|NameExpr0,schema
[0.0000] result,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,result

topk terminals for subtoken-2: code
[['int', '1'], ['int', 'METHOD_NAME'], ['int', '<NUM>'], ['int', 'int'], ['int', 'int'], ['METHOD_NAME', '1'], ['int', 'result'], ['null', 'hash|code'], ['null', 'hash|code'], ['override', 'int'], ['METHOD_NAME', '<NUM>'], ['0', 'hash|code'], ['0', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['org|name', 'hash|code'], ['org|name', 'hash|code'], ['int', 'prime'], ['int', '1'], ['int', '0'], ['int', '0'], ['override', 'METHOD_NAME'], ['prime', 'hash|code'], ['prime', 'hash|code'], ['METHOD_NAME', 'int'], ['METHOD_NAME', 'int'], ['schema', 'hash|code'], ['result', 'hash|code'], ['result', 'hash|code'], ['int', '<NUM>'], ['schema', 'hash|code'], ['int', '1'], ['int', 'result'], ['int', 'result'], ['METHOD_NAME', '0'], ['METHOD_NAME', '0'], ['result', '1'], ['int', 'result'], ['METHOD_NAME', 'result'], ['null', 'org|name'], ['null', '0'], ['null', '0'], ['org|name', '0'], ['<NUM>', '1'], ['int', 'prime'], ['int', 'prime'], ['result', '0'], ['result', '0'], ['prime', '1'], ['int', 'result'], ['int', 'result'], ['METHOD_NAME', 'prime'], ['result', 'org|name'], ['prime', '<NUM>'], ['org|name', 'org|name'], ['0', 'org|name'], ['result', 'org|name'], ['prime', 'org|name'], ['prime', '0'], ['prime', '0'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['prime', 'result'], ['prime', 'result'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'result'], ['org|name', 'null'], ['result', 'null'], ['result', 'null'], ['int', 'int'], ['METHOD_NAME', 'result'], ['METHOD_NAME', 'prime'], ['METHOD_NAME', 'prime'], ['schema', '0'], ['result', 'org|name'], ['prime', 'int'], ['null', 'schema'], ['result', 'result'], ['result', 'result'], ['prime', 'null'], ['prime', 'null'], ['result', 'prime'], ['result', 'prime'], ['result', 'result'], ['prime', 'schema'], ['<NUM>', 'int'], ['1', 'result'], ['1', 'result'], ['result', 'schema'], ['0', 'schema'], ['prime', 'result'], ['prime', 'result'], ['schema', 'null'], ['<NUM>', 'result'], ['prime', 'org|name'], ['schema', 'schema'], ['result', '0'], ['result', '0'], ['0', 'result'], ['0', 'result'], ['result', 'schema'], ['result', 'result'], ['result', 'result'], ['result', 'org|name'], ['int', 'prime'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'null'], ['result', 'null'], ['result', 'schema'], ['int', 'result'], ['int', 'result'], ['int', 'result'], ['result', 'result'], ['result', 'result'], ['prime', 'result'], ['int', 'result'], ['result', 'prime'], ['prime', 'result'], ['prime', 'schema'], ['prime', 'result'], ['int', 'prime'], ['int', 'prime'], ['int', 'prime'], ['<NUM>', 'result'], ['int', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'result'], ['result', 'schema'], ['result', 'result']]

