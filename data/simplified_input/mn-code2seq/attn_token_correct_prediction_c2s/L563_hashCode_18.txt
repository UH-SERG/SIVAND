
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/base/reference/BaseFieldReference_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hashCode = getDefiningClass().hashCode(); hashCode = hashCode * 31 + getName().hashCode(); return hashCode * 31 + getType().hashCode(); }

topk path-contexts for subtoken-1: hash
[0.0945] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0928] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0531] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0526] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0418] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0312] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0311] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0273] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0265] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0248] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0238] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0236] get|type,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0224] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0224] get|defining|class,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0221] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0175] get|name,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0171] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0164] hash|code,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0164] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code
[0.0161] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0158] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0139] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0125] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0114] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0113] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0105] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0101] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0098] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0097] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0097] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0094] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0093] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0089] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0085] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0082] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0072] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0068] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0065] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0065] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0065] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0062] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0051] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0049] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0044] hash|code,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0041] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0039] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0037] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0030] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0028] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0027] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0026] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0025] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0024] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0023] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0023] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0022] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0021] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0020] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0018] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0015] hash|code,NameExpr0|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0015] hash|code,NameExpr0|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0014] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0014] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0010] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0009] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0007] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code

topk terminals for subtoken-1: hash
[['int', 'METHOD_NAME'], ['int', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['int', 'int'], ['int', 'hash|code'], ['int', '<NUM>'], ['int', 'hash|code'], ['int', '<NUM>'], ['int', 'hash|code'], ['int', 'get|name'], ['int', 'hash|code'], ['get|type', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['get|defining|class', 'hash|code'], ['int', 'hash|code'], ['get|name', 'hash|code'], ['int', 'get|type'], ['hash|code', 'hash|code'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['<NUM>', 'hash|code'], ['int', 'get|defining|class'], ['int', 'hash|code'], ['METHOD_NAME', 'get|name'], ['METHOD_NAME', 'hash|code'], ['hash|code', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['int', 'hash|code'], ['METHOD_NAME', 'get|defining|class'], ['<NUM>', 'hash|code'], ['METHOD_NAME', '<NUM>'], ['METHOD_NAME', 'get|type'], ['hash|code', 'hash|code'], ['override', 'METHOD_NAME'], ['hash|code', 'hash|code'], ['override', 'int'], ['int', 'get|type'], ['METHOD_NAME', '<NUM>'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['<NUM>', 'get|name'], ['hash|code', 'get|type'], ['int', '<NUM>'], ['hash|code', 'get|defining|class'], ['METHOD_NAME', 'hash|code'], ['int', 'get|defining|class'], ['hash|code', 'get|name'], ['hash|code', 'hash|code'], ['hash|code', 'hash|code'], ['int', 'hash|code'], ['int', 'hash|code'], ['METHOD_NAME', 'int'], ['hash|code', 'get|name'], ['METHOD_NAME', 'hash|code'], ['hash|code', 'hash|code'], ['hash|code', '<NUM>'], ['hash|code', '<NUM>'], ['<NUM>', 'get|type'], ['hash|code', 'get|type'], ['hash|code', '<NUM>'], ['hash|code', '<NUM>'], ['hash|code', 'hash|code'], ['int', '<NUM>'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['hash|code', '<NUM>'], ['METHOD_NAME', 'hash|code'], ['int', 'hash|code']]

topk path-contexts for subtoken-2: code
[0.4666] int,PrimitiveType1|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0806] get|defining|class,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0472] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0335] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0314] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0240] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|PrimitiveType1,int
[0.0202] get|name,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0160] override,NameExpr0|MarkerAnnotationExpr|MethodDeclaration|NameExpr2,METHOD_NAME
[0.0153] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0133] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0127] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0117] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0115] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0115] get|type,NameExpr1|MethodCallExpr0|MethodCallExpr|NameExpr2,hash|code
[0.0112] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0096] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code
[0.0095] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0073] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0071] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0069] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0064] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0059] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0058] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0055] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0053] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|PrimitiveType0,int
[0.0047] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0038] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0031] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0030] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0025] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0022] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|NameExpr2,hash|code
[0.0019] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0019] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0013] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code
[0.0010] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0010] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|NameExpr2,hash|code
[0.0010] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0009] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus1|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0009] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0009] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0009] <NUM>,IntegerLiteralExpr1|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0009] int,PrimitiveType1|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0006] int,PrimitiveType1|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0005] hash|code,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,hash|code
[0.0004] hash|code,NameExpr0|BinaryExpr:times|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0004] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|name
[0.0004] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0004] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0003] hash|code,NameExpr0|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0003] hash|code,NameExpr0|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0003] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0003] METHOD_NAME,NameExpr2|MethodDeclaration|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0002] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0002] hash|code,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|defining|class
[0.0002] hash|code,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0002] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0001] int,PrimitiveType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,hash|code
[0.0001] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|MethodCallExpr1|MethodCallExpr0|NameExpr1,get|type
[0.0001] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|NameExpr0,hash|code
[0.0001] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|IntegerLiteralExpr1,<NUM>
[0.0000] hash|code,NameExpr0|AssignExpr:assign|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0000] int,PrimitiveType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|AssignExpr:assign0|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0000] hash|code,NameExpr0|AssignExpr:assign|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code
[0.0000] hash|code,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ReturnStmt|BinaryExpr:plus|BinaryExpr:times|NameExpr0,hash|code

topk terminals for subtoken-2: code
[['int', 'METHOD_NAME'], ['get|defining|class', 'hash|code'], ['int', 'int'], ['int', 'hash|code'], ['int', 'hash|code'], ['override', 'int'], ['get|name', 'hash|code'], ['override', 'METHOD_NAME'], ['int', 'get|name'], ['METHOD_NAME', 'hash|code'], ['int', '<NUM>'], ['int', 'hash|code'], ['int', 'hash|code'], ['get|type', 'hash|code'], ['int', 'hash|code'], ['int', 'hash|code'], ['<NUM>', 'hash|code'], ['METHOD_NAME', '<NUM>'], ['METHOD_NAME', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['int', '<NUM>'], ['<NUM>', 'hash|code'], ['<NUM>', 'get|name'], ['METHOD_NAME', 'get|name'], ['METHOD_NAME', 'int'], ['METHOD_NAME', '<NUM>'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['hash|code', 'hash|code'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['int', 'get|type'], ['hash|code', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['METHOD_NAME', 'hash|code'], ['METHOD_NAME', 'get|defining|class'], ['hash|code', 'hash|code'], ['int', '<NUM>'], ['hash|code', 'get|name'], ['int', 'get|defining|class'], ['METHOD_NAME', 'get|type'], ['<NUM>', 'get|type'], ['int', 'hash|code'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['hash|code', 'get|type'], ['hash|code', 'get|name'], ['METHOD_NAME', 'hash|code'], ['int', 'get|defining|class'], ['int', 'get|type'], ['int', 'hash|code'], ['hash|code', '<NUM>'], ['hash|code', '<NUM>'], ['int', '<NUM>'], ['METHOD_NAME', 'hash|code'], ['hash|code', '<NUM>'], ['hash|code', 'get|defining|class'], ['hash|code', 'hash|code'], ['hash|code', '<NUM>'], ['int', 'hash|code'], ['int', 'hash|code'], ['hash|code', 'get|type'], ['hash|code', 'hash|code'], ['hash|code', '<NUM>'], ['hash|code', 'hash|code'], ['int', 'hash|code'], ['hash|code', 'hash|code'], ['hash|code', 'hash|code']]

