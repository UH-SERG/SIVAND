
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_w.java
method_name = w
method_body = public static void w(Throwable tr) { if (!allowW) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }

topk path-contexts for subtoken-1: w
[0.0831] tr,NameExpr3|MethodCallExpr|NameExpr3,w
[0.0831] tr,NameExpr3|MethodCallExpr|NameExpr3,w
[0.0642] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,allow|w
[0.0421] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,allow|w
[0.0417] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0417] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0349] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|UnaryExpr:not|NameExpr0,allow|w
[0.0288] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0288] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0281] void,VoidType0|MethodDeclaration|NameExpr1,METHOD_NAME
[0.0281] tag,NameExpr2|MethodCallExpr|NameExpr3,w
[0.0281] tag,NameExpr2|MethodCallExpr|NameExpr3,w
[0.0236] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0236] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0197] w,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0194] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0194] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0181] custom|logger,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0157] tag,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0155] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0155] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0147] tr,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0133] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0116] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0116] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0107] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0107] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0074] caller,NameExpr1|MethodCallExpr|NameExpr2,generate|tag
[0.0070] tag,NameExpr2|MethodCallExpr|NameExpr3,tr
[0.0070] tag,NameExpr2|MethodCallExpr|NameExpr3,tr
[0.0067] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0067] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0063] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0063] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0058] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0058] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,w
[0.0056] generate|tag,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0056] void,VoidType0|MethodDeclaration|Parameter|ClassOrInterfaceType1,throwable
[0.0055] tr,VariableDeclaratorId0|Parameter|ClassOrInterfaceType1,throwable
[0.0049] w,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0045] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0045] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0045] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|ClassOrInterfaceType1,throwable
[0.0042] custom|logger,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0039] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0039] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0038] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0034] tag,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0033] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0033] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0033] tr,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0030] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0030] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0030] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0029] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0029] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0028] w,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0028] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0024] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0022] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0020] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0019] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0019] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0019] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0018] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0018] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0017] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0017] tr,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0016] null,NullLiteralExpr1|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0015] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0014] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0013] w,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0013] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0013] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0013] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0012] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0012] tr,NameExpr3|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0012] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0012] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr3,tr
[0.0012] tag,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0012] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0012] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0012] tag,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0011] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0010] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0010] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0010] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0010] log,NameExpr0|MethodCallExpr|NameExpr2,tag
[0.0009] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0009] custom|logger,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0009] void,VoidType0|MethodDeclaration|Parameter|VariableDeclaratorId0,tr
[0.0009] tag,NameExpr2|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0009] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0009] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0008] custom|logger,NameExpr0|MethodCallExpr|NameExpr2,tag
[0.0008] custom|logger,NameExpr0|MethodCallExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0008] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0008] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0008] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0008] METHOD_NAME,NameExpr1|MethodDeclaration|Parameter|VariableDeclaratorId0,tr
[0.0008] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0007] custom|logger,NameExpr0|BinaryExpr:notEquals|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0007] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0007] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0006] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0006] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr2,generate|tag
[0.0006] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0004] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0004] caller,NameExpr1|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0004] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0004] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0004] get|caller|stack|trace|element,NameExpr1|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0004] custom|logger,NameExpr0|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0004] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,stack|trace|element
[0.0003] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0003] tag,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0003] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0003] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0003] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,stack|trace|element
[0.0002] allow|w,NameExpr0|UnaryExpr:not|IfStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,caller
[0.0002] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0002] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr2,tag
[0.0002] generate|tag,NameExpr2|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0002] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0002] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,stack|trace|element
[0.0002] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,custom|logger
[0.0002] caller,VariableDeclaratorId0|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0002] throwable,ClassOrInterfaceType1|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,caller
[0.0001] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,get|caller|stack|trace|element
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,stack|trace|element
[0.0001] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BlockStmt|ExpressionStmt|MethodCallExpr0|NameExpr0,log
[0.0001] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0001] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|MethodCallExpr1|NameExpr1,caller
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0001] METHOD_NAME,NameExpr1|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,caller
[0.0001] tr,VariableDeclaratorId0|Parameter|MethodDeclaration|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,caller
[0.0001] get|caller|stack|trace|element,NameExpr1|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0001] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0000] get|caller|stack|trace|element,NameExpr1|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0000] caller,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] tag,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NullLiteralExpr1,null
[0.0000] caller,NameExpr1|MethodCallExpr|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0000] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0000] caller,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0000] caller,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|ExpressionStmt|VariableDeclarationExpr|ClassOrInterfaceType0,string
[0.0000] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,caller
[0.0000] stack|trace|element,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0000] caller,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0000] tag,VariableDeclaratorId0|VariableDeclarator|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|VariableDeclarator|VariableDeclaratorId0,tag
[0.0000] string,ClassOrInterfaceType0|VariableDeclarationExpr|ExpressionStmt|BlockStmt|IfStmt|BinaryExpr:notEquals|NameExpr0,custom|logger

topk terminals for subtoken-1: w
[['tr', 'w'], ['tr', 'w'], ['METHOD_NAME', 'allow|w'], ['throwable', 'allow|w'], ['null', 'w'], ['null', 'w'], ['tr', 'allow|w'], ['METHOD_NAME', 'w'], ['METHOD_NAME', 'w'], ['void', 'METHOD_NAME'], ['tag', 'w'], ['tag', 'w'], ['throwable', 'w'], ['throwable', 'w'], ['w', 'w'], ['custom|logger', 'w'], ['custom|logger', 'w'], ['custom|logger', 'w'], ['tag', 'w'], ['string', 'w'], ['string', 'w'], ['tr', 'w'], ['allow|w', 'generate|tag'], ['tr', 'w'], ['tr', 'w'], ['null', 'tr'], ['null', 'tr'], ['caller', 'generate|tag'], ['tag', 'tr'], ['tag', 'tr'], ['METHOD_NAME', 'tr'], ['METHOD_NAME', 'tr'], ['throwable', 'tr'], ['throwable', 'tr'], ['stack|trace|element', 'w'], ['stack|trace|element', 'w'], ['generate|tag', 'null'], ['void', 'throwable'], ['tr', 'throwable'], ['w', 'tr'], ['custom|logger', 'tr'], ['custom|logger', 'tr'], ['METHOD_NAME', 'throwable'], ['custom|logger', 'tr'], ['string', 'tr'], ['string', 'tr'], ['METHOD_NAME', 'generate|tag'], ['tag', 'tr'], ['null', 'tag'], ['null', 'tag'], ['tr', 'tr'], ['tr', 'tr'], ['tr', 'tr'], ['throwable', 'generate|tag'], ['throwable', 'tag'], ['throwable', 'tag'], ['w', 'tag'], ['throwable', 'null'], ['string', 'generate|tag'], ['allow|w', 'caller'], ['null', 'custom|logger'], ['METHOD_NAME', 'tag'], ['METHOD_NAME', 'tag'], ['METHOD_NAME', 'null'], ['tr', 'generate|tag'], ['throwable', 'log'], ['throwable', 'custom|logger'], ['tr', 'tag'], ['null', 'log'], ['throwable', 'caller'], ['METHOD_NAME', 'custom|logger'], ['w', 'log'], ['METHOD_NAME', 'log'], ['tr', 'tag'], ['tr', 'tag'], ['tr', 'log'], ['tr', 'log'], ['stack|trace|element', 'tr'], ['stack|trace|element', 'tr'], ['tag', 'generate|tag'], ['allow|w', 'string'], ['tr', 'custom|logger'], ['tag', 'log'], ['tr', 'null'], ['string', 'tag'], ['string', 'tag'], ['METHOD_NAME', 'caller'], ['log', 'tag'], ['throwable', 'get|caller|stack|trace|element'], ['custom|logger', 'log'], ['void', 'tr'], ['tag', 'tag'], ['custom|logger', 'tag'], ['custom|logger', 'tag'], ['custom|logger', 'tag'], ['custom|logger', 'tag'], ['custom|logger', 'custom|logger'], ['string', 'caller'], ['throwable', 'custom|logger'], ['METHOD_NAME', 'tr'], ['tr', 'caller'], ['custom|logger', 'log'], ['string', 'custom|logger'], ['METHOD_NAME', 'get|caller|stack|trace|element'], ['tr', 'get|caller|stack|trace|element'], ['stack|trace|element', 'generate|tag'], ['allow|w', 'get|caller|stack|trace|element'], ['METHOD_NAME', 'custom|logger'], ['caller', 'null'], ['throwable', 'string'], ['allow|w', 'tag'], ['get|caller|stack|trace|element', 'null'], ['custom|logger', 'null'], ['throwable', 'stack|trace|element'], ['tr', 'custom|logger'], ['tag', 'caller'], ['tr', 'string'], ['string', 'log'], ['allow|w', 'stack|trace|element'], ['allow|w', 'caller'], ['stack|trace|element', 'tag'], ['stack|trace|element', 'tag'], ['generate|tag', 'custom|logger'], ['throwable', 'tag'], ['tr', 'stack|trace|element'], ['stack|trace|element', 'custom|logger'], ['caller', 'get|caller|stack|trace|element'], ['throwable', 'caller'], ['stack|trace|element', 'get|caller|stack|trace|element'], ['METHOD_NAME', 'string'], ['METHOD_NAME', 'stack|trace|element'], ['stack|trace|element', 'log'], ['tr', 'tag'], ['stack|trace|element', 'caller'], ['METHOD_NAME', 'tag'], ['METHOD_NAME', 'caller'], ['tr', 'caller'], ['get|caller|stack|trace|element', 'string'], ['stack|trace|element', 'null'], ['stack|trace|element', 'string'], ['get|caller|stack|trace|element', 'custom|logger'], ['caller', 'null'], ['tag', 'null'], ['string', 'null'], ['caller', 'custom|logger'], ['stack|trace|element', 'tag'], ['caller', 'tag'], ['caller', 'string'], ['stack|trace|element', 'caller'], ['stack|trace|element', 'custom|logger'], ['caller', 'custom|logger'], ['tag', 'custom|logger'], ['string', 'tag'], ['string', 'custom|logger']]

