
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/Dirichlet_digammaDifference.java
method_name = digammaDifference
method_body = public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }
predict, score, loss = sum, 0.740821123123169, 18.715837478637695

Trace of simplified code(s):
{"time": "2021-02-24 00:55:04.020949", "score": "0.7408", "loss": "18.7158", "code": "public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:55:06.424835", "score": "0.612", "loss": "20.0668", "code": "public static double digammaDifference(double n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 76, "n_pass": [46, 2, 2]}
{"time": "2021-02-24 00:55:08.314474", "score": "0.5635", "loss": "20.4236", "code": "public static double digammaDifference(double n) {  0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 71, "n_pass": [47, 3, 3]}
{"time": "2021-02-24 00:55:10.208492", "score": "0.4832", "loss": "19.8282", "code": "public static double digammaDifference(double n) {  0; for (int i = 0;n; i++) { sum += 1 / (x + i); } return sum; }", "n_tokens": 66, "n_pass": [51, 4, 4]}
{"time": "2021-02-24 00:55:13.480026", "score": "0.4565", "loss": "19.3865", "code": "public static double digammaDifference(double n) {  0; for (int i = 0;n; ) { sum += 1 / (x + i); } return sum; }", "n_tokens": 63, "n_pass": [94, 5, 5]}
{"time": "2021-02-24 00:55:15.311967", "score": "0.7732", "loss": "21.6289", "code": "public static double digammaDifference(double n) {  0; for (int i = 0;n; ) { sum +=  (x + i); } return sum; }", "n_tokens": 60, "n_pass": [98, 6, 6]}
{"time": "2021-02-24 00:55:17.164566", "score": "0.7641", "loss": "20.0502", "code": "public static double digammaDifference(double n) {  0; for (int i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 57, "n_pass": [100, 7, 7]}
{"time": "2021-02-24 00:55:20.920311", "score": "0.7641", "loss": "20.0502", "code": "static double digammaDifference(double n) {  0; for (int i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 55, "n_pass": [105, 9, 8]}
{"time": "2021-02-24 00:55:22.747236", "score": "0.7641", "loss": "20.0502", "code": "double digammaDifference(double n) {  0; for (int i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 53, "n_pass": [106, 10, 9]}
{"time": "2021-02-24 00:55:25.064014", "score": "0.7641", "loss": "20.0502", "code": "double digammaDifference(double n) {0; for (int i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 51, "n_pass": [112, 11, 10]}
{"time": "2021-02-24 00:55:26.893795", "score": "0.738", "loss": "19.6024", "code": "double digammaDifference(double n) { for (int i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 49, "n_pass": [113, 12, 11]}
{"time": "2021-02-24 00:55:28.751778", "score": "0.7179", "loss": "19.308", "code": "double digammaDifference(double n) { for (i = 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 47, "n_pass": [116, 13, 12]}
{"time": "2021-02-24 00:55:30.609160", "score": "0.6892", "loss": "19.2064", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum +=  (xi); } return sum; }", "n_tokens": 44, "n_pass": [117, 14, 13]}
{"time": "2021-02-24 00:55:32.424816", "score": "0.9216", "loss": "21.5381", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } return sum; }", "n_tokens": 41, "n_pass": [122, 15, 14]}
{"time": "2021-02-24 00:55:34.223250", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } ; }", "n_tokens": 38, "n_pass": [126, 16, 15]}
{"time": "2021-02-24 00:55:42.960036", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n) { for ( 0;n; ) { sum  (xi); } }", "n_tokens": 36, "n_pass": [172, 18, 16]}
{"time": "2021-02-24 00:55:45.684702", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n){ for ( 0;n; ) { sum  (xi); } }", "n_tokens": 35, "n_pass": [182, 19, 17]}
{"time": "2021-02-24 00:55:47.496535", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n){for ( 0;n; ) { sum  (xi); } }", "n_tokens": 34, "n_pass": [184, 20, 18]}
{"time": "2021-02-24 00:55:49.323193", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n){for( 0;n; ) { sum  (xi); } }", "n_tokens": 33, "n_pass": [186, 21, 19]}
{"time": "2021-02-24 00:55:51.147795", "score": "0.8255", "loss": "19.5771", "code": "double digammaDifference(double n){for(0;n; ) { sum  (xi); } }", "n_tokens": 32, "n_pass": [188, 22, 20]}
{"time": "2021-02-24 00:55:53.018064", "score": "0.5684", "loss": "18.8926", "code": "double digammaDifference(double n){for(;n; ) { sum  (xi); } }", "n_tokens": 31, "n_pass": [189, 23, 21]}
{"time": "2021-02-24 00:55:54.845315", "score": "0.3357", "loss": "19.1927", "code": "double digammaDifference(double n){for(;; ) { sum  (xi); } }", "n_tokens": 30, "n_pass": [191, 24, 22]}
{"time": "2021-02-24 00:55:56.675758", "score": "0.3357", "loss": "19.1927", "code": "double digammaDifference(double n){for(;;) { sum  (xi); } }", "n_tokens": 29, "n_pass": [193, 25, 23]}
{"time": "2021-02-24 00:55:58.505111", "score": "0.3357", "loss": "19.1927", "code": "double digammaDifference(double n){for(;;){ sum  (xi); } }", "n_tokens": 28, "n_pass": [195, 26, 24]}
{"time": "2021-02-24 00:56:02.157697", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){ sum  (); } }", "n_tokens": 26, "n_pass": [199, 28, 25]}
{"time": "2021-02-24 00:56:07.424578", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){ sum  ();} }", "n_tokens": 25, "n_pass": [232, 29, 26]}
{"time": "2021-02-24 00:56:09.206983", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){ sum  ();}}", "n_tokens": 24, "n_pass": [233, 30, 27]}
{"time": "2021-02-24 00:56:11.939794", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){sum  ();}}", "n_tokens": 23, "n_pass": [250, 31, 28]}
{"time": "2021-02-24 00:56:13.742386", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){sum ();}}", "n_tokens": 22, "n_pass": [252, 32, 29]}
{"time": "2021-02-24 00:56:15.552326", "score": "0.3095", "loss": "20.0339", "code": "double digammaDifference(double n){for(;;){sum();}}", "n_tokens": 21, "n_pass": [253, 33, 30]}

Minimal simplified code:
double digammaDifference(double n){for(;;){sum();}}

