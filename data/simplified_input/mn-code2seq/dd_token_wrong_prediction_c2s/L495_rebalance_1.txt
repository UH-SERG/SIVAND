
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/amazon-archives__kinesis-storm-spout/src/main/java/com/amazonaws/services/kinesis/stormspout/state/zookeeper/ZookeeperStateManager_rebalance.java
method_name = rebalance
method_body = @Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, "Cannot rebalance if state is not active (a ZK connection" + " is necessary)."); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }
predict, score, loss = setTaskIndex, 0.46743321418762207, 10.024615287780762

Trace of simplified code(s):
{"time": "2021-02-23 19:52:20.108084", "score": "0.4674", "loss": "10.0246", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance if state is not active (a ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 95, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:52:22.432447", "score": "0.4547", "loss": "6.8418", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance  ZK connection\" + \" is necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 83, "n_pass": [23, 2, 2]}
{"time": "2021-02-23 19:52:24.292877", "score": "0.5884", "loss": "10.7392", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance necessary).\"); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 71, "n_pass": [24, 3, 3]}
{"time": "2021-02-23 19:52:26.141804", "score": "0.5917", "loss": "9.7671", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance necessary).\"); this.taskIndex = commitShardStates(); bootstrapStateFromZookeeper(); }", "n_tokens": 59, "n_pass": [26, 4, 4]}
{"time": "2021-02-23 19:52:28.025860", "score": "0.6909", "loss": "9.8574", "code": "@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance necessary).\"); this.taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 53, "n_pass": [42, 5, 5]}
{"time": "2021-02-23 19:52:29.860906", "score": "0.7522", "loss": "9.8238", "code": "void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, \"Cannot rebalance necessary).\"); this.taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 48, "n_pass": [43, 6, 6]}
{"time": "2021-02-23 19:52:31.711247", "score": "0.8578", "loss": "13.5003", "code": "void rebalance(final  int newTotalNumTasks) { checkState(active, \"Cannot rebalance necessary).\"); this.taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 42, "n_pass": [45, 7, 7]}
{"time": "2021-02-23 19:52:35.387744", "score": "0.7933", "loss": "14.0357", "code": "void rebalance(final  int newTotalNumTasks) { checkState(active, \"Cannotnecessary).\"); this.taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 39, "n_pass": [72, 9, 8]}
{"time": "2021-02-23 19:52:37.225124", "score": "0.8423", "loss": "14.1564", "code": "void rebalance(final  int newTotalNumTasks) { checkState(active, \"Cannot\"); this.taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 36, "n_pass": [73, 10, 9]}
{"time": "2021-02-23 19:52:39.069338", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(final  int newTotalNumTasks) { checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 33, "n_pass": [75, 11, 10]}
{"time": "2021-02-23 19:52:47.592357", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(  int newTotalNumTasks) { checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 32, "n_pass": [119, 14, 11]}
{"time": "2021-02-23 19:52:49.472236", "score": "0.5908", "loss": "13.2774", "code": "void rebalance( int newTotalNumTasks) { checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 31, "n_pass": [120, 15, 12]}
{"time": "2021-02-23 19:52:51.316113", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(int newTotalNumTasks) { checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 30, "n_pass": [121, 16, 13]}
{"time": "2021-02-23 19:52:59.278320", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(int newTotalNumTasks){ checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 29, "n_pass": [163, 18, 14]}
{"time": "2021-02-23 19:53:01.153611", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(int newTotalNumTasks){checkState(active, \"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 28, "n_pass": [164, 19, 15]}
{"time": "2021-02-23 19:53:03.032971", "score": "0.5908", "loss": "13.2774", "code": "void rebalance(int newTotalNumTasks){checkState(active,\"Cannot\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 27, "n_pass": [169, 20, 16]}
{"time": "2021-02-23 19:53:04.832673", "score": "0.5333", "loss": "13.0307", "code": "void rebalance(int newTotalNumTasks){checkState(active,\"\");taskIndex =bootstrapStateFromZookeeper(); }", "n_tokens": 26, "n_pass": [171, 21, 17]}
{"time": "2021-02-23 19:53:06.653433", "score": "0.5333", "loss": "13.0307", "code": "void rebalance(int newTotalNumTasks){checkState(active,\"\");taskIndex=bootstrapStateFromZookeeper(); }", "n_tokens": 25, "n_pass": [176, 22, 18]}
{"time": "2021-02-23 19:53:10.343908", "score": "0.5333", "loss": "13.0307", "code": "void rebalance(int newTotalNumTasks){checkState(active,\"\");taskIndex=bootstrapStateFromZookeeper();}", "n_tokens": 24, "n_pass": [182, 24, 19]}

Minimal simplified code:
void rebalance(int newTotalNumTasks){checkState(active,"");taskIndex=bootstrapStateFromZookeeper();}

