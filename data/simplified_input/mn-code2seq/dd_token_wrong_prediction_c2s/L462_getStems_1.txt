
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/similarity/src/main/java/edu/illinois/cs/cogcomp/wsim/wordnet/WNWrapper_getStems.java
method_name = getStems
method_body = public void getStems(String word) { List<String> stems = wstem.findStems(word, null); for (String s : stems) { System.out.println(s); } }
predict, score, loss = printStems, 0.6990218162536621, 4.744130611419678

Trace of simplified code(s):
{"time": "2021-02-24 07:03:25.816983", "score": "0.699", "loss": "4.7441", "code": "public void getStems(String word) { List<String> stems = wstem.findStems(word, null); for (String s : stems) { System.out.println(s); } }", "n_tokens": 60, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:03:28.192155", "score": "0.6147", "loss": "4.0041", "code": "public void getStems() { List<String> stems = wstem.findStems(word, null); for (String s : stems) { System.out.println(s); } }", "n_tokens": 57, "n_pass": [46, 2, 2]}
{"time": "2021-02-24 07:03:36.113508", "score": "0.6278", "loss": "4.1099", "code": "public void getStems() { List<String> stems = wstem.findStems( null); for (String s : stems) { System.out.println(s); } }", "n_tokens": 55, "n_pass": [101, 5, 3]}
{"time": "2021-02-24 07:03:38.021625", "score": "0.733", "loss": "4.7684", "code": "public void getStems() { List<String> stems = wstem.findStems(); for (String s : stems) { System.out.println(s); } }", "n_tokens": 53, "n_pass": [102, 6, 4]}
{"time": "2021-02-24 07:03:39.879948", "score": "0.7249", "loss": "4.5885", "code": "public void getStems() { List<String> stems = wstem.findStems(); for (String s : stems) { System.println(s); } }", "n_tokens": 51, "n_pass": [112, 7, 5]}
{"time": "2021-02-24 07:03:43.631780", "score": "0.7249", "loss": "4.5885", "code": " void getStems() { List<String> stems = wstem.findStems(); for (String s : stems) { System.println(s); } }", "n_tokens": 50, "n_pass": [118, 9, 6]}
{"time": "2021-02-24 07:03:45.495615", "score": "0.7249", "loss": "4.5885", "code": "void getStems() { List<String> stems = wstem.findStems(); for (String s : stems) { System.println(s); } }", "n_tokens": 49, "n_pass": [119, 10, 7]}
{"time": "2021-02-24 07:03:48.764242", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems(); for (String s : stems) { System.println(s); } }", "n_tokens": 47, "n_pass": [129, 11, 8]}
{"time": "2021-02-24 07:04:01.184074", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for (String s : stems) { System.println(s); } }", "n_tokens": 46, "n_pass": [204, 13, 9]}
{"time": "2021-02-24 07:04:03.029451", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for(String s : stems) { System.println(s); } }", "n_tokens": 45, "n_pass": [205, 14, 10]}
{"time": "2021-02-24 07:04:04.884891", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for(String s: stems) { System.println(s); } }", "n_tokens": 44, "n_pass": [210, 15, 11]}
{"time": "2021-02-24 07:04:06.764227", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for(String s:stems) { System.println(s); } }", "n_tokens": 43, "n_pass": [212, 16, 12]}
{"time": "2021-02-24 07:04:08.656339", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for(String s:stems){ System.println(s); } }", "n_tokens": 42, "n_pass": [215, 17, 13]}
{"time": "2021-02-24 07:04:10.520580", "score": "0.8411", "loss": "5.7706", "code": "void getStems() { List<String> stems = findStems();for(String s:stems){System.println(s); } }", "n_tokens": 41, "n_pass": [217, 18, 14]}
{"time": "2021-02-24 07:04:14.217208", "score": "0.8527", "loss": "6.1128", "code": "void getStems() { List<String> stems = findStems();for(String s:stems){System.println(); } }", "n_tokens": 40, "n_pass": [222, 20, 15]}
{"time": "2021-02-24 07:04:16.079367", "score": "0.8527", "loss": "6.1128", "code": "void getStems() { List<String> stems = findStems();for(String s:stems){System.println();} }", "n_tokens": 39, "n_pass": [225, 21, 16]}
{"time": "2021-02-24 07:04:17.988125", "score": "0.8527", "loss": "6.1128", "code": "void getStems() { List<String> stems = findStems();for(String s:stems){System.println();}}", "n_tokens": 38, "n_pass": [227, 22, 17]}
{"time": "2021-02-24 07:04:20.762452", "score": "0.8527", "loss": "6.1128", "code": "void getStems(){ List<String> stems = findStems();for(String s:stems){System.println();}}", "n_tokens": 37, "n_pass": [234, 23, 18]}
{"time": "2021-02-24 07:04:22.644390", "score": "0.8527", "loss": "6.1128", "code": "void getStems(){List<String> stems = findStems();for(String s:stems){System.println();}}", "n_tokens": 36, "n_pass": [236, 24, 19]}
{"time": "2021-02-24 07:04:24.995567", "score": "0.8527", "loss": "6.1128", "code": "void getStems(){List<String>stems = findStems();for(String s:stems){System.println();}}", "n_tokens": 35, "n_pass": [241, 25, 20]}
{"time": "2021-02-24 07:04:26.890646", "score": "0.8527", "loss": "6.1128", "code": "void getStems(){List<String>stems= findStems();for(String s:stems){System.println();}}", "n_tokens": 34, "n_pass": [243, 26, 21]}
{"time": "2021-02-24 07:04:28.752799", "score": "0.8527", "loss": "6.1128", "code": "void getStems(){List<String>stems=findStems();for(String s:stems){System.println();}}", "n_tokens": 33, "n_pass": [245, 27, 22]}

Minimal simplified code:
void getStems(){List<String>stems=findStems();for(String s:stems){System.println();}}

