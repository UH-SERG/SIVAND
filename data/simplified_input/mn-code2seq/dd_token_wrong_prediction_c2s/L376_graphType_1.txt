
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/classifiers/multilabel/LC_graphType.java
method_name = graphType
method_body = public Map<Integer, Integer> graphType() { Map<Integer, Integer> result; result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }
predict, score, loss = getGraphType, 0.825270414352417, 15.94497013092041

Trace of simplified code(s):
{"time": "2021-02-24 08:19:25.181964", "score": "0.8253", "loss": "15.945", "code": "public Map<Integer, Integer> graphType() { Map<Integer, Integer> result; result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 106, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:19:30.477116", "score": "0.8462", "loss": "16.8779", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result; result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 103, "n_pass": [98, 3, 2]}
{"time": "2021-02-24 08:19:32.376101", "score": "0.7494", "loss": "15.0725", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 100, "n_pass": [99, 4, 3]}
{"time": "2021-02-24 08:19:34.728578", "score": "0.7746", "loss": "14.9265", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 97, "n_pass": [103, 5, 4]}
{"time": "2021-02-24 08:19:36.650574", "score": "0.8614", "loss": "15.4329", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifier!= null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 94, "n_pass": [107, 6, 5]}
{"time": "2021-02-24 08:19:38.584907", "score": "0.8429", "loss": "13.6541", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 91, "n_pass": [108, 7, 6]}
{"time": "2021-02-24 08:19:45.321015", "score": "0.7501", "loss": "9.7573", "code": "public Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 89, "n_pass": [202, 8, 7]}
{"time": "2021-02-24 08:19:50.994856", "score": "0.7501", "loss": "9.7573", "code": " Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 88, "n_pass": [217, 11, 8]}
{"time": "2021-02-24 08:19:52.851589", "score": "0.7501", "loss": "9.7573", "code": "Map<Integer, Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 87, "n_pass": [218, 12, 9]}
{"time": "2021-02-24 08:19:55.208399", "score": "0.7501", "loss": "9.7573", "code": "Map<Integer,Integer> graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 86, "n_pass": [223, 13, 10]}
{"time": "2021-02-24 08:19:57.082732", "score": "0.7501", "loss": "9.7573", "code": "Map<Integer,Integer>graphType() { Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 85, "n_pass": [226, 14, 11]}
{"time": "2021-02-24 08:19:58.948949", "score": "0.7501", "loss": "9.7573", "code": "Map<Integer,Integer>graphType(){ Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 84, "n_pass": [230, 15, 12]}
{"time": "2021-02-24 08:20:00.856504", "score": "0.7501", "loss": "9.7573", "code": "Map<Integer,Integer>graphType(){Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 83, "n_pass": [232, 16, 13]}
{"time": "2021-02-24 08:20:07.988515", "score": "0.8312", "loss": "10.1258", "code": "Map<IntegerInteger>graphType(){Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 82, "n_pass": [273, 19, 14]}
{"time": "2021-02-24 08:20:09.886432", "score": "0.8093", "loss": "10.1077", "code": "Map<Integer>graphType(){Map<Integer> result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 81, "n_pass": [274, 20, 15]}
{"time": "2021-02-24 08:20:27.165632", "score": "0.8093", "loss": "10.1077", "code": "Map<Integer>graphType(){Map<Integer>result = new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 80, "n_pass": [395, 23, 16]}
{"time": "2021-02-24 08:20:29.041670", "score": "0.8093", "loss": "10.1077", "code": "Map<Integer>graphType(){Map<Integer>result= new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 79, "n_pass": [397, 24, 17]}
{"time": "2021-02-24 08:20:30.913677", "score": "0.8093", "loss": "10.1077", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<Integer>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 78, "n_pass": [399, 25, 18]}
{"time": "2021-02-24 08:20:32.809888", "score": "0.8045", "loss": "10.0075", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>(); if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 77, "n_pass": [404, 26, 19]}
{"time": "2021-02-24 08:20:34.697964", "score": "0.8045", "loss": "10.0075", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if (getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 76, "n_pass": [409, 27, 20]}
{"time": "2021-02-24 08:20:36.549738", "score": "0.8045", "loss": "10.0075", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifiernull) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 75, "n_pass": [411, 28, 21]}
{"time": "2021-02-24 08:20:40.390666", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier) { if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 74, "n_pass": [414, 30, 22]}
{"time": "2021-02-24 08:20:42.278578", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){ if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 73, "n_pass": [416, 31, 23]}
{"time": "2021-02-24 08:20:44.164925", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if (getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 72, "n_pass": [418, 32, 24]}
{"time": "2021-02-24 08:20:46.028453", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier() instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 71, "n_pass": [420, 33, 25]}
{"time": "2021-02-24 08:20:47.925804", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable) { result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 70, "n_pass": [425, 34, 26]}
{"time": "2021-02-24 08:20:49.817972", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){ result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 69, "n_pass": [430, 35, 27]}
{"time": "2021-02-24 08:20:51.714782", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0, ((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 68, "n_pass": [432, 36, 28]}
{"time": "2021-02-24 08:20:53.604982", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable) getClassifier()).graphType()); } } return result; }", "n_tokens": 67, "n_pass": [437, 37, 29]}
{"time": "2021-02-24 08:20:55.510630", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType()); } } return result; }", "n_tokens": 66, "n_pass": [442, 38, 30]}
{"time": "2021-02-24 08:20:57.422653", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());} } return result; }", "n_tokens": 65, "n_pass": [453, 39, 31]}
{"time": "2021-02-24 08:20:59.325831", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}} return result; }", "n_tokens": 64, "n_pass": [455, 40, 32]}
{"time": "2021-02-24 08:21:01.286991", "score": "0.8377", "loss": "9.91", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}return result; }", "n_tokens": 63, "n_pass": [457, 41, 33]}
{"time": "2021-02-24 08:21:07.004611", "score": "0.8782", "loss": "12.2848", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}return ; }", "n_tokens": 62, "n_pass": [460, 44, 34]}
{"time": "2021-02-24 08:21:08.927412", "score": "0.8782", "loss": "12.2848", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}return ;}", "n_tokens": 61, "n_pass": [462, 45, 35]}
{"time": "2021-02-24 08:21:12.840838", "score": "0.8782", "loss": "12.2848", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}} ;}", "n_tokens": 60, "n_pass": [521, 46, 36]}
{"time": "2021-02-24 08:21:14.771243", "score": "0.8782", "loss": "12.2848", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}};}", "n_tokens": 59, "n_pass": [522, 47, 37]}
{"time": "2021-02-24 08:21:16.665838", "score": "0.8782", "loss": "12.2848", "code": "Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}}", "n_tokens": 58, "n_pass": [523, 48, 38]}

Minimal simplified code:
Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}}

