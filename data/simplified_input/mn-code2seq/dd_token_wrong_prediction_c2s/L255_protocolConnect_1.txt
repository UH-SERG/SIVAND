
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javaee__javamail/mbox/src/main/java/com/sun/mail/mbox/MboxStore_protocolConnect.java
method_name = protocolConnect
method_body = protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException("mbox does not allow passwords"); return true; }
predict, score, loss = authenticate, 0.542013943195343, 24.810470581054688

Trace of simplified code(s):
{"time": "2021-02-24 08:05:37.121982", "score": "0.542", "loss": "24.8105", "code": "protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 69, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:05:39.458086", "score": "0.4985", "loss": "25.7452", "code": "protected boolean protocolConnect(String  port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 65, "n_pass": [46, 2, 2]}
{"time": "2021-02-24 08:05:41.335367", "score": "0.3187", "loss": "24.1237", "code": "protected boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 61, "n_pass": [47, 3, 3]}
{"time": "2021-02-24 08:05:43.248805", "score": "0.4083", "loss": "23.3408", "code": "protected boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does not allow passwords\"); return true; }", "n_tokens": 57, "n_pass": [52, 4, 4]}
{"time": "2021-02-24 08:05:45.125097", "score": "0.3937", "loss": "22.9535", "code": "protected boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does \"); return true; }", "n_tokens": 52, "n_pass": [56, 5, 5]}
{"time": "2021-02-24 08:05:49.210837", "score": "0.3937", "loss": "22.9535", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) throw new AuthenticationFailedException(\"mbox does \"); return true; }", "n_tokens": 50, "n_pass": [97, 7, 6]}
{"time": "2021-02-24 08:05:51.049928", "score": "0.2194", "loss": "20.9342", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) new AuthenticationFailedException(\"mbox does \"); return true; }", "n_tokens": 48, "n_pass": [111, 8, 7]}
{"time": "2021-02-24 08:05:52.940597", "score": "0.4698", "loss": "21.0604", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"mbox does \"); return true; }", "n_tokens": 46, "n_pass": [112, 9, 8]}
{"time": "2021-02-24 08:05:56.617604", "score": "0.431", "loss": "20.7612", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"does \"); return true; }", "n_tokens": 44, "n_pass": [115, 11, 9]}
{"time": "2021-02-24 08:06:08.996408", "score": "0.5274", "loss": "21.1984", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\" \"); return true; }", "n_tokens": 43, "n_pass": [176, 14, 10]}
{"time": "2021-02-24 08:06:10.853932", "score": "0.4847", "loss": "20.9206", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\"); return true; }", "n_tokens": 42, "n_pass": [177, 15, 11]}
{"time": "2021-02-24 08:06:12.677225", "score": "0.3674", "loss": "19.2865", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\"); true; }", "n_tokens": 40, "n_pass": [180, 16, 12]}
{"time": "2021-02-24 08:06:14.481134", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String  port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 38, "n_pass": [181, 17, 13]}
{"time": "2021-02-24 08:06:17.174473", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,  String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 37, "n_pass": [188, 18, 14]}
{"time": "2021-02-24 08:06:19.002437", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port, String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 36, "n_pass": [192, 19, 15]}
{"time": "2021-02-24 08:06:20.802712", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,String passwd) throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 35, "n_pass": [193, 20, 16]}
{"time": "2021-02-24 08:06:22.583564", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException { if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 34, "n_pass": [198, 21, 17]}
{"time": "2021-02-24 08:06:24.409534", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{ if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 33, "n_pass": [202, 22, 18]}
{"time": "2021-02-24 08:06:26.278998", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if (passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 32, "n_pass": [204, 23, 19]}
{"time": "2021-02-24 08:06:28.554161", "score": "0.3188", "loss": "19.1057", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if(passwdnull) AuthenticationFailedException(\"\");  }", "n_tokens": 31, "n_pass": [206, 24, 20]}
{"time": "2021-02-24 08:06:30.397218", "score": "0.3464", "loss": "19.8867", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if(null) AuthenticationFailedException(\"\");  }", "n_tokens": 30, "n_pass": [208, 25, 21]}
{"time": "2021-02-24 08:06:32.219273", "score": "0.3464", "loss": "19.8867", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if(null)AuthenticationFailedException(\"\");  }", "n_tokens": 29, "n_pass": [211, 26, 22]}
{"time": "2021-02-24 08:06:38.093476", "score": "0.3464", "loss": "19.8867", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if(null)AuthenticationFailedException(\"\"); }", "n_tokens": 28, "n_pass": [244, 28, 23]}
{"time": "2021-02-24 08:06:39.959992", "score": "0.3464", "loss": "19.8867", "code": "boolean protocolConnect(String port,String passwd)throws MessagingException{if(null)AuthenticationFailedException(\"\");}", "n_tokens": 27, "n_pass": [245, 29, 24]}

Minimal simplified code:
boolean protocolConnect(String port,String passwd)throws MessagingException{if(null)AuthenticationFailedException("");}

