
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-postgresql/src/main/java/org/rakam/postgresql/PostgresqlApiKeyService_setup.java
method_name = setup
method_body = @Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute("CREATE TABLE IF NOT EXISTS api_key (" + " id SERIAL NOT NULL,\n" + " project VARCHAR(255) NOT NULL,\n" + " read_key VARCHAR(255) NOT NULL,\n" + " write_key VARCHAR(255) NOT NULL,\n" + " master_key VARCHAR(255) NOT NULL,\n" + " created_at TIMESTAMP default current_timestamp NOT NULL," + "PRIMARY KEY (id)\n" + " )"); } catch (SQLException e) { throw new RuntimeException(e); } }
predict, score, loss = run, 0.35192030668258667, 4.552161693572998

Trace of simplified code(s):
{"time": "2021-02-24 03:54:20.017483", "score": "0.3519", "loss": "4.5522", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE TABLE IF NOT EXISTS api_key (\" + \" id SERIAL NOT NULL,\\n\" + \" project VARCHAR(255) NOT NULL,\\n\" + \" read_key VARCHAR(255) NOT NULL,\\n\" + \" write_key VARCHAR(255) NOT NULL,\\n\" + \" master_key VARCHAR(255) NOT NULL,\\n\" + \" created_at TIMESTAMP default current_timestamp NOT NULL,\" + \"PRIMARY KEY (id)\\n\" + \" )\"); } catch (SQLException e) { throw new RuntimeException(e); } }", "n_tokens": 242, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:54:21.995343", "score": "0.4699", "loss": "5.0109", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE TABLE IF NOT EXISTS apiNULL,\\n\" + \" write_key VARCHAR(255) NOT NULL,\\n\" + \" master_key VARCHAR(255) NOT NULL,\\n\" + \" created_at TIMESTAMP default current_timestamp NOT NULL,\" + \"PRIMARY KEY (id)\\n\" + \" )\"); } catch (SQLException e) { throw new RuntimeException(e); } }", "n_tokens": 182, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 03:54:23.894990", "score": "0.64", "loss": "5.3689", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE TABLE IF NOT EXISTS api default current_timestamp NOT NULL,\" + \"PRIMARY KEY (id)\\n\" + \" )\"); } catch (SQLException e) { throw new RuntimeException(e); } }", "n_tokens": 121, "n_pass": [10, 3, 3]}
{"time": "2021-02-24 03:54:25.809437", "score": "0.5969", "loss": "4.6923", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE TABLE IF NOT EXISTS api )\"); } catch (SQLException e) { throw new RuntimeException(e); } }", "n_tokens": 91, "n_pass": [15, 4, 4]}
{"time": "2021-02-24 03:54:27.748309", "score": "0.5953", "loss": "5.1632", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE TABLE IF NOT EXISTS api )\"); } { throw new RuntimeException(e); } }", "n_tokens": 83, "n_pass": [43, 5, 5]}
{"time": "2021-02-24 03:54:30.079116", "score": "0.5995", "loss": "5.6807", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE api )\"); } { throw new RuntimeException(e); } }", "n_tokens": 75, "n_pass": [53, 6, 6]}
{"time": "2021-02-24 03:54:32.379972", "score": "0.5787", "loss": "5.4963", "code": "@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(\"CREATE api )\"); } { throw(e); } }", "n_tokens": 71, "n_pass": [87, 7, 7]}
{"time": "2021-02-24 03:54:36.581186", "score": "0.497", "loss": "5.2044", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection.createStatement(); statement.execute(\"CREATE api )\"); } { throw(e); } }", "n_tokens": 67, "n_pass": [97, 9, 8]}
{"time": "2021-02-24 03:54:38.427876", "score": "0.5694", "loss": "5.0671", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement.execute(\"CREATE api )\"); } { throw(e); } }", "n_tokens": 63, "n_pass": [101, 10, 9]}
{"time": "2021-02-24 03:54:43.460918", "score": "0.732", "loss": "5.51", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\"CREATE api )\"); } { throw(e); } }", "n_tokens": 61, "n_pass": [154, 12, 10]}
{"time": "2021-02-24 03:54:45.345751", "score": "0.701", "loss": "6.1413", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\"api )\"); } { throw(e); } }", "n_tokens": 59, "n_pass": [156, 13, 11]}
{"time": "2021-02-24 03:54:47.229382", "score": "0.7661", "loss": "6.47", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\")\"); } { throw(e); } }", "n_tokens": 57, "n_pass": [157, 14, 12]}
{"time": "2021-02-24 03:54:49.123665", "score": "0.8098", "loss": "6.6187", "code": "@Override public void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\")\"); } {(e); } }", "n_tokens": 55, "n_pass": [162, 15, 13]}
{"time": "2021-02-24 03:54:52.870849", "score": "0.8098", "loss": "6.6187", "code": "@Override  void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\")\"); } {(e); } }", "n_tokens": 54, "n_pass": [170, 17, 14]}
{"time": "2021-02-24 03:54:54.714075", "score": "0.8098", "loss": "6.6187", "code": "@Override void setup() { try (Connection connection = connectionPool) { Statement statement = connection. statement(\")\"); } {(e); } }", "n_tokens": 53, "n_pass": [171, 18, 15]}
{"time": "2021-02-24 03:54:57.052425", "score": "0.6181", "loss": "5.2679", "code": "@Override void setup() { try (Connection connection = connectionPool) { statement = connection. statement(\")\"); } {(e); } }", "n_tokens": 51, "n_pass": [183, 19, 16]}
{"time": "2021-02-24 03:54:58.937001", "score": "0.5209", "loss": "5.0606", "code": "@Override void setup() { try (Connection connection = connectionPool) { statement =  statement(\")\"); } {(e); } }", "n_tokens": 49, "n_pass": [186, 20, 17]}
{"time": "2021-02-24 03:55:00.800668", "score": "0.287", "loss": "6.1815", "code": "@Override void setup() { try (Connection connection = connectionPool) { statement = (\")\"); } {(e); } }", "n_tokens": 47, "n_pass": [187, 21, 18]}
{"time": "2021-02-24 03:55:03.559197", "score": "0.4999", "loss": "7.2087", "code": "@Override void setup() { try (Connection connection = connectionPool) { statement (\")\"); } {(e); } }", "n_tokens": 45, "n_pass": [212, 22, 19]}
{"time": "2021-02-24 03:55:06.337553", "score": "0.5557", "loss": "6.8535", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\")\"); } {(e); } }", "n_tokens": 43, "n_pass": [236, 23, 20]}
{"time": "2021-02-24 03:55:15.465474", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\"\"); } {(e); } }", "n_tokens": 42, "n_pass": [301, 24, 21]}
{"time": "2021-02-24 03:55:17.330789", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\"\");} {(e); } }", "n_tokens": 41, "n_pass": [304, 25, 22]}
{"time": "2021-02-24 03:55:19.162386", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\"\");}{(e); } }", "n_tokens": 40, "n_pass": [306, 26, 23]}
{"time": "2021-02-24 03:55:20.991323", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\"\");}{(e);} }", "n_tokens": 39, "n_pass": [312, 27, 24]}
{"time": "2021-02-24 03:55:22.849969", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup() { try (Connection connection = connectionPool) { (\"\");}{(e);}}", "n_tokens": 38, "n_pass": [314, 28, 25]}
{"time": "2021-02-24 03:55:26.063568", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){ try (Connection connection = connectionPool) { (\"\");}{(e);}}", "n_tokens": 37, "n_pass": [324, 29, 26]}
{"time": "2021-02-24 03:55:27.942795", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try (Connection connection = connectionPool) { (\"\");}{(e);}}", "n_tokens": 36, "n_pass": [326, 30, 27]}
{"time": "2021-02-24 03:55:29.784884", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try(Connection connection = connectionPool) { (\"\");}{(e);}}", "n_tokens": 35, "n_pass": [328, 31, 28]}
{"time": "2021-02-24 03:55:31.635570", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try(Connection connection= connectionPool) { (\"\");}{(e);}}", "n_tokens": 34, "n_pass": [333, 32, 29]}
{"time": "2021-02-24 03:55:33.537078", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try(Connection connection=connectionPool) { (\"\");}{(e);}}", "n_tokens": 33, "n_pass": [335, 33, 30]}
{"time": "2021-02-24 03:55:35.412477", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try(Connection connection=connectionPool){ (\"\");}{(e);}}", "n_tokens": 32, "n_pass": [338, 34, 31]}
{"time": "2021-02-24 03:55:37.271816", "score": "0.4912", "loss": "6.3916", "code": "@Override void setup(){try(Connection connection=connectionPool){(\"\");}{(e);}}", "n_tokens": 31, "n_pass": [340, 35, 32]}

Minimal simplified code:
@Override void setup(){try(Connection connection=connectionPool){("");}{(e);}}

