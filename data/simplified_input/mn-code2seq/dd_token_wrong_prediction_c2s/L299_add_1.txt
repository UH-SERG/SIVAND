
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/ql/analytic/next/NextOrderedPartitionedAnalyticFunction_add.java
method_name = add
method_body = @Override public void add(Record record) { long row = record.getRowId(); DirectMapValues prevValues = MapUtils.getMapValues(prevMap, record, partitionBy); if (!prevValues.isNew()) { map.locate(prevValues.getLong(0)); map.getOrCreateValues().putLong(0, row); } prevValues.putLong(0, row); }
predict, score, loss = record, 0.27064135670661926, 2.6490530967712402

Trace of simplified code(s):
{"time": "2021-02-24 06:03:30.708871", "score": "0.3605", "loss": "2.7041", "code": "@Override public void add(Record record) { long row = record.getRowId(); DirectMapValues prevValues = MapUtils.getMapValues(prevMap, record, partitionBy); if (!prevValues.isNew()) { map.locate(prevValues.getLong(0)); map.getOrCreateValues().putLong(0, row); } prevValues.putLong(0, row); }", "n_tokens": 104, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 06:03:33.128118", "score": "0.4794", "loss": "2.9176", "code": "@Override public void add(Record record) { long row = record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) { map.locate(prevValues.getLong(0)); map.getOrCreateValues().putLong(0, row); } prevValues.putLong(0, row); }", "n_tokens": 91, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 06:03:35.079515", "score": "0.3083", "loss": "2.802", "code": "@Override public void add(Record record) { long row = record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) { map.locate().putLong(0, row); } prevValues.putLong(0, row); }", "n_tokens": 78, "n_pass": [24, 3, 3]}
{"time": "2021-02-24 06:03:37.960141", "score": "0.2732", "loss": "2.6666", "code": "@Override public void add(Record record) { long row = record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(0, row); }", "n_tokens": 75, "n_pass": [79, 4, 4]}
{"time": "2021-02-24 06:03:39.846881", "score": "0.3759", "loss": "2.7058", "code": "@Override public void add(Record record) { long row = record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 71, "n_pass": [85, 5, 5]}
{"time": "2021-02-24 06:03:45.958823", "score": "0.4131", "loss": "2.9235", "code": "@Override public void add(Record record) {row = record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 68, "n_pass": [92, 8, 6]}
{"time": "2021-02-24 06:03:47.908790", "score": "0.3462", "loss": "2.5292", "code": "@Override public void add(Record record) { record.getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 65, "n_pass": [93, 9, 7]}
{"time": "2021-02-24 06:03:49.790109", "score": "0.2337", "loss": "2.3814", "code": "@Override public void add(Record record) {getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 62, "n_pass": [94, 10, 8]}
{"time": "2021-02-24 06:04:04.057387", "score": "0.2337", "loss": "2.3814", "code": "@Override public void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues.isNew()) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 61, "n_pass": [155, 16, 9]}
{"time": "2021-02-24 06:04:11.554192", "score": "0.2319", "loss": "2.4493", "code": "@Override public void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues.isNew) {locate().putLong(0, row); } prevValues.putLong(); }", "n_tokens": 59, "n_pass": [166, 20, 10]}
{"time": "2021-02-24 06:04:13.446654", "score": "0.2477", "loss": "2.557", "code": "@Override public void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues.isNew) {locate.putLong(0, row); } prevValues.putLong(); }", "n_tokens": 57, "n_pass": [169, 21, 11]}
{"time": "2021-02-24 06:04:20.968858", "score": "0.2477", "loss": "2.557", "code": "@Override  void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues.isNew) {locate.putLong(0, row); } prevValues.putLong(); }", "n_tokens": 56, "n_pass": [183, 25, 12]}
{"time": "2021-02-24 06:04:22.847832", "score": "0.2477", "loss": "2.557", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues.isNew) {locate.putLong(0, row); } prevValues.putLong(); }", "n_tokens": 55, "n_pass": [184, 26, 13]}
{"time": "2021-02-24 06:04:29.384591", "score": "0.2255", "loss": "2.5788", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locate.putLong(0, row); } prevValues.putLong(); }", "n_tokens": 53, "n_pass": [202, 29, 14]}
{"time": "2021-02-24 06:04:45.268713", "score": "0.5587", "loss": "3.4546", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0, row); } prevValues.putLong(); }", "n_tokens": 52, "n_pass": [277, 34, 15]}
{"time": "2021-02-24 06:04:47.167274", "score": "0.5587", "loss": "3.4546", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row); } prevValues.putLong(); }", "n_tokens": 51, "n_pass": [281, 35, 16]}
{"time": "2021-02-24 06:04:49.012989", "score": "0.5587", "loss": "3.4546", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row);} prevValues.putLong(); }", "n_tokens": 50, "n_pass": [285, 36, 17]}
{"time": "2021-02-24 06:04:50.884112", "score": "0.5587", "loss": "3.4546", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row);}prevValues.putLong(); }", "n_tokens": 49, "n_pass": [287, 37, 18]}
{"time": "2021-02-24 06:04:52.742935", "score": "0.6169", "loss": "4.8637", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row);}prevValuesputLong(); }", "n_tokens": 48, "n_pass": [289, 38, 19]}
{"time": "2021-02-24 06:04:54.580215", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row);}prevValues(); }", "n_tokens": 47, "n_pass": [290, 39, 20]}
{"time": "2021-02-24 06:04:56.415761", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap, record, partitionBy); if (!prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 46, "n_pass": [294, 40, 21]}
{"time": "2021-02-24 06:04:59.714820", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap,record, partitionBy); if (!prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 45, "n_pass": [312, 41, 22]}
{"time": "2021-02-24 06:05:01.741539", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy); if (!prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 44, "n_pass": [315, 42, 23]}
{"time": "2021-02-24 06:05:03.592547", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy);if (!prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 43, "n_pass": [319, 43, 24]}
{"time": "2021-02-24 06:05:05.471900", "score": "0.6142", "loss": "4.1855", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(!prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 42, "n_pass": [321, 44, 25]}
{"time": "2021-02-24 06:05:07.377417", "score": "0.6134", "loss": "4.2114", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(prevValues) {locateputLong(0,row);}prevValues();}", "n_tokens": 41, "n_pass": [323, 45, 26]}
{"time": "2021-02-24 06:05:09.264373", "score": "0.6134", "loss": "4.2114", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(prevValues){locateputLong(0,row);}prevValues();}", "n_tokens": 40, "n_pass": [326, 46, 27]}
{"time": "2021-02-24 06:05:11.129449", "score": "0.3018", "loss": "2.6539", "code": "@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(prevValues){putLong(0,row);}prevValues();}", "n_tokens": 39, "n_pass": [328, 47, 28]}

Minimal simplified code:
@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(prevValues){putLong(0,row);}prevValues();}

