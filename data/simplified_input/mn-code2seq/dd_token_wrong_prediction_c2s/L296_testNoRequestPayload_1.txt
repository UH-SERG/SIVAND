
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-projects__spring-ws/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/AbstractMessageEndpointTestCase_testNoRequestPayload.java
method_name = testNoRequestPayload
method_body = @Test public void testNoRequestPayload() throws Exception { endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse("Response message created", context.hasResponse()); }
predict, score, loss = testInvokeWithNoResponse, 0.4944491982460022, 22.000757217407227

Trace of simplified code(s):
{"time": "2021-02-24 03:36:40.528659", "score": "0.4944", "loss": "22.0008", "code": "@Test public void testNoRequestPayload() throws Exception { endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse(\"Response message created\", context.hasResponse()); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:36:42.895094", "score": "0.5243", "loss": "21.7844", "code": "void testNoRequestPayload() throws Exception { endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse(\"Response message created\", context.hasResponse()); }", "n_tokens": 79, "n_pass": [44, 2, 2]}
{"time": "2021-02-24 03:36:44.793522", "score": "0.5424", "loss": "21.4911", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse(\"Response message created\", context.hasResponse()); }", "n_tokens": 74, "n_pass": [45, 3, 3]}
{"time": "2021-02-24 03:36:59.022759", "score": "0.509", "loss": "21.6908", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response message created\", context.hasResponse()); }", "n_tokens": 71, "n_pass": [104, 10, 4]}
{"time": "2021-02-24 03:37:00.943770", "score": "0.5749", "loss": "20.5207", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 68, "n_pass": [109, 11, 5]}
{"time": "2021-02-24 03:37:03.324612", "score": "0.5827", "loss": "19.9328", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 66, "n_pass": [120, 12, 6]}
{"time": "2021-02-24 03:37:08.994040", "score": "0.5446", "loss": "19.0902", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder) null), new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 63, "n_pass": [126, 15, 7]}
{"time": "2021-02-24 03:37:22.241168", "score": "0.5446", "loss": "19.0902", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null), new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 62, "n_pass": [205, 19, 8]}
{"time": "2021-02-24 03:37:26.044928", "score": "0.5446", "loss": "19.0902", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null),new MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 61, "n_pass": [209, 21, 9]}
{"time": "2021-02-24 03:37:27.931704", "score": "0.5253", "loss": "18.9647", "code": "void testNoRequestPayload(){ endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 59, "n_pass": [210, 22, 10]}
{"time": "2021-02-24 03:37:36.437777", "score": "0.5253", "loss": "18.9647", "code": "void testNoRequestPayload(){endpoint = createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 58, "n_pass": [231, 26, 11]}
{"time": "2021-02-24 03:37:38.335410", "score": "0.5253", "loss": "18.9647", "code": "void testNoRequestPayload(){endpoint= createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 57, "n_pass": [233, 27, 12]}
{"time": "2021-02-24 03:37:42.109591", "score": "0.5253", "loss": "18.9647", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint; MessageContext context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 56, "n_pass": [235, 29, 13]}
{"time": "2021-02-24 03:37:43.993255", "score": "0.5253", "loss": "18.9647", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;MessageContext context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 55, "n_pass": [238, 30, 14]}
{"time": "2021-02-24 03:37:45.869238", "score": "0.553", "loss": "18.7934", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint; context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 54, "n_pass": [239, 31, 15]}
{"time": "2021-02-24 03:37:47.735646", "score": "0.553", "loss": "18.7934", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context = new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 53, "n_pass": [240, 32, 16]}
{"time": "2021-02-24 03:37:49.602992", "score": "0.553", "loss": "18.7934", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context= new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 52, "n_pass": [242, 33, 17]}
{"time": "2021-02-24 03:37:51.440334", "score": "0.553", "loss": "18.7934", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context=new DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 51, "n_pass": [244, 34, 18]}
{"time": "2021-02-24 03:37:53.336534", "score": "0.5292", "loss": "18.616", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context= DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 50, "n_pass": [245, 35, 19]}
{"time": "2021-02-24 03:37:55.184018", "score": "0.5292", "loss": "18.616", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context=DefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 49, "n_pass": [246, 36, 20]}
{"time": "2021-02-24 03:38:09.252676", "score": "0.4765", "loss": "18.8836", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;contextDefaultMessageContext(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 48, "n_pass": [281, 43, 21]}
{"time": "2021-02-24 03:38:11.098503", "score": "0.4968", "loss": "18.1492", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context); assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 47, "n_pass": [282, 44, 22]}
{"time": "2021-02-24 03:38:29.453776", "score": "0.4968", "loss": "18.1492", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse(\"Response \", context.hasResponse()); }", "n_tokens": 46, "n_pass": [354, 52, 23]}
{"time": "2021-02-24 03:38:33.194427", "score": "0.4968", "loss": "18.1492", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse(\"Response\", context.hasResponse()); }", "n_tokens": 45, "n_pass": [358, 54, 24]}
{"time": "2021-02-24 03:38:35.041744", "score": "0.4968", "loss": "18.1492", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse(\"Response\",context.hasResponse()); }", "n_tokens": 44, "n_pass": [361, 55, 25]}
{"time": "2021-02-24 03:38:38.761189", "score": "0.4968", "loss": "18.1492", "code": "void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse(\"Response\",context.hasResponse());}", "n_tokens": 43, "n_pass": [369, 57, 26]}

Minimal simplified code:
void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse("Response",context.hasResponse());}

