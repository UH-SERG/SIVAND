
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-cloud__spring-cloud-function/spring-cloud-function-web/src/test/java/org/springframework/cloud/function/mvc/MvcRestApplicationTests_sentencesAcceptJson.java
method_name = sentencesAcceptJson
method_body = @Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI("/sentences")).accept(MediaType.APPLICATION_JSON).build(), String.class); assertThat(result.getBody()).isEqualTo("[[\"go\",\"home\"],[\"come\",\"back\"]]"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }
predict, score, loss = testSentences, 0.5701885223388672, 22.55347442626953

Trace of simplified code(s):
{"time": "2021-02-24 01:21:07.865002", "score": "0.5702", "loss": "22.5535", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType.APPLICATION_JSON).build(), String.class); assertThat(result.getBody()).isEqualTo(\"[[\\\"go\\\",\\\"home\\\"],[\\\"come\\\",\\\"back\\\"]]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 134, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:21:09.818227", "score": "0.4494", "loss": "23.0274", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType.APPLICATION_JSON).build(), String.class); assertThat(result.getBody()).isEqualTo(\"[[\\\"go\\\"back\\\"]]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 117, "n_pass": [25, 2, 2]}
{"time": "2021-02-24 01:21:11.737825", "score": "0.748", "loss": "24.4518", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result.getBody()).isEqualTo(\"[[\\\"go\\\"back\\\"]]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 109, "n_pass": [56, 3, 3]}
{"time": "2021-02-24 01:21:13.699217", "score": "0.7615", "loss": "24.769", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"[[\\\"go\\\"back\\\"]]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 105, "n_pass": [99, 4, 4]}
{"time": "2021-02-24 01:21:15.607261", "score": "0.7615", "loss": "24.769", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"go\\\"back\\\"]]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 101, "n_pass": [101, 5, 5]}
{"time": "2021-02-24 01:21:17.496170", "score": "0.648", "loss": "23.2751", "code": "@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 97, "n_pass": [103, 6, 6]}
{"time": "2021-02-24 01:21:19.444707", "score": "0.7197", "loss": "26.3259", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 93, "n_pass": [110, 7, 7]}
{"time": "2021-02-24 01:21:23.169611", "score": "0.7073", "loss": "25.9487", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(RequestEntity.get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 91, "n_pass": [188, 8, 8]}
{"time": "2021-02-24 01:21:25.047933", "score": "0.7208", "loss": "25.3335", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String.class); assertThat(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 89, "n_pass": [190, 9, 9]}
{"time": "2021-02-24 01:21:28.883420", "score": "0.6575", "loss": "25.7304", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String); assertThat(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 87, "n_pass": [201, 11, 10]}
{"time": "2021-02-24 01:21:30.823515", "score": "0.6178", "loss": "25.8686", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go\\\"]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 85, "n_pass": [203, 12, 11]}
{"time": "2021-02-24 01:21:32.710283", "score": "0.6178", "loss": "25.8686", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\"); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 83, "n_pass": [208, 13, 12]}
{"time": "2021-02-24 01:21:34.602788", "score": "0.5935", "loss": "26.3039", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 81, "n_pass": [211, 14, 13]}
{"time": "2021-02-24 01:21:36.477666", "score": "0.638", "loss": "26.4021", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 79, "n_pass": [213, 15, 14]}
{"time": "2021-02-24 01:21:38.384838", "score": "0.6176", "loss": "26.4567", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result.getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 77, "n_pass": [214, 16, 15]}
{"time": "2021-02-24 01:21:40.306994", "score": "0.6589", "loss": "26.2582", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }", "n_tokens": 75, "n_pass": [215, 17, 16]}
{"time": "2021-02-24 01:21:42.216825", "score": "0.6547", "loss": "27.3301", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(new URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 72, "n_pass": [218, 18, 17]}
{"time": "2021-02-24 01:21:45.453682", "score": "0.5875", "loss": "26.9497", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"/sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 70, "n_pass": [234, 19, 18]}
{"time": "2021-02-24 01:21:55.782133", "score": "0.5875", "loss": "26.9497", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(MediaType), String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 69, "n_pass": [337, 21, 19]}
{"time": "2021-02-24 01:21:59.572048", "score": "0.6324", "loss": "26.3708", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(), String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 68, "n_pass": [345, 23, 20]}
{"time": "2021-02-24 01:22:01.488831", "score": "0.6324", "loss": "26.3708", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"go]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 67, "n_pass": [348, 24, 21]}
{"time": "2021-02-24 01:22:03.831172", "score": "0.8772", "loss": "29.504", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"]\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 66, "n_pass": [359, 25, 22]}
{"time": "2021-02-24 01:22:05.720318", "score": "0.9151", "loss": "29.6349", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(_JSON); }", "n_tokens": 65, "n_pass": [360, 26, 23]}
{"time": "2021-02-24 01:22:07.642065", "score": "0.9156", "loss": "29.2978", "code": " void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 63, "n_pass": [371, 27, 24]}
{"time": "2021-02-24 01:22:09.510132", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 62, "n_pass": [374, 28, 25]}
{"time": "2021-02-24 01:22:12.316634", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception { ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 61, "n_pass": [380, 29, 26]}
{"time": "2021-02-24 01:22:14.209870", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception{ ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 60, "n_pass": [384, 30, 27]}
{"time": "2021-02-24 01:22:16.081094", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String> result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 59, "n_pass": [386, 31, 28]}
{"time": "2021-02-24 01:22:18.384156", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result = exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 58, "n_pass": [391, 32, 29]}
{"time": "2021-02-24 01:22:20.303737", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result= exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 57, "n_pass": [393, 33, 30]}
{"time": "2021-02-24 01:22:22.207437", "score": "0.9156", "loss": "29.2978", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange(get(URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 56, "n_pass": [395, 34, 31]}
{"time": "2021-02-24 01:22:24.086789", "score": "0.8919", "loss": "29.5466", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange((URI(\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 55, "n_pass": [398, 35, 32]}
{"time": "2021-02-24 01:22:26.012205", "score": "0.7696", "loss": "26.8038", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange(((\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo(); }", "n_tokens": 54, "n_pass": [400, 36, 33]}
{"time": "2021-02-24 01:22:33.832839", "score": "0.7696", "loss": "26.8038", "code": "void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange(((\"sentences\")).accept(),String);(result).isEqualTo(\"\");(result()).isGreaterThanOrEqualTo();}", "n_tokens": 53, "n_pass": [462, 38, 34]}

Minimal simplified code:
void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange((("sentences")).accept(),String);(result).isEqualTo("");(result()).isGreaterThanOrEqualTo();}

