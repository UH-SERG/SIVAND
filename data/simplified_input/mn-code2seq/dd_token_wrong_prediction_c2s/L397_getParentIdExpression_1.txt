
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/katharsis-project__katharsis-framework/katharsis-jpa/src/main/java/io/katharsis/jpa/internal/query/backend/querydsl/QuerydslQueryBackend_getParentIdExpression.java
method_name = getParentIdExpression
method_body = private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey primaryKey = parentMeta.getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException("no primary key specified for parentAttribute " + parentAttr.getId()); } List<MetaAttribute> elements = primaryKey.getElements(); PreconditionUtil.assertEquals("composite primary keys not supported yet", 1, elements.size()); MetaAttribute primaryKeyAttr = elements.get(0); return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }
predict, score, loss = getPrimaryKey, 0.8324164748191833, 16.270336151123047

Trace of simplified code(s):
{"time": "2021-02-24 01:52:47.570991", "score": "0.7623", "loss": "15.2315", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey primaryKey = parentMeta.getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException(\"no primary key specified for parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements = primaryKey.getElements(); PreconditionUtil.assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute primaryKeyAttr = elements.get(0); return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 158, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:52:50.040955", "score": "0.724", "loss": "14.9165", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey primaryKey = parentMeta.getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException(\"no primary key specified for parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute primaryKeyAttr = elements.get(0); return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 148, "n_pass": [53, 2, 2]}
{"time": "2021-02-24 01:52:51.963530", "score": "0.7516", "loss": "15.8483", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey primaryKey = parentMeta.getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException(\"no primary key specified for parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute ; return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 138, "n_pass": [57, 3, 3]}
{"time": "2021-02-24 01:52:55.889245", "score": "0.7726", "loss": "16.4452", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException(\"no primary key specified for parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute ; return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 133, "n_pass": [109, 5, 4]}
{"time": "2021-02-24 01:52:57.837199", "score": "0.7724", "loss": "16.1803", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary key specified for parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute ; return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 128, "n_pass": [112, 6, 5]}
{"time": "2021-02-24 01:52:59.746146", "score": "0.7217", "loss": "14.8196", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute ; return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 123, "n_pass": [116, 7, 6]}
{"time": "2021-02-24 01:53:04.099652", "score": "0.6746", "loss": "17.4479", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite primary keys not supported yet\", 1, elements.size()); MetaAttribute .get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 118, "n_pass": [128, 9, 7]}
{"time": "2021-02-24 01:53:06.544830", "score": "0.5001", "loss": "15.5635", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite  supported yet\", 1, elements.size()); MetaAttribute .get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 113, "n_pass": [148, 10, 8]}
{"time": "2021-02-24 01:53:09.456155", "score": "0.5", "loss": "15.4439", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\", 1, elements.size()); MetaAttribute .get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 110, "n_pass": [220, 11, 9]}
{"time": "2021-02-24 01:53:11.373405", "score": "0.5036", "loss": "15.4905", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\", elements.size()); MetaAttribute .get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 107, "n_pass": [222, 12, 10]}
{"time": "2021-02-24 01:53:13.269312", "score": "0.5644", "loss": "15.5823", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(parentFrom, primaryKeyAttr.getName()); }", "n_tokens": 104, "n_pass": [223, 13, 11]}
{"time": "2021-02-24 01:53:15.197128", "score": "0.5822", "loss": "15.757", "code": "private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 101, "n_pass": [228, 14, 12]}
{"time": "2021-02-24 01:53:17.115894", "score": "0.5822", "loss": "15.757", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { throw new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 99, "n_pass": [232, 15, 13]}
{"time": "2021-02-24 01:53:20.964568", "score": "0.5524", "loss": "16.4829", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { new IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 97, "n_pass": [250, 17, 14]}
{"time": "2021-02-24 01:53:22.849982", "score": "0.5783", "loss": "16.5635", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) { IllegalStateException(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 95, "n_pass": [251, 18, 15]}
{"time": "2021-02-24 01:53:24.761167", "score": "0.5992", "loss": "15.911", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) {(\"no primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 93, "n_pass": [252, 19, 16]}
{"time": "2021-02-24 01:53:26.668160", "score": "0.5936", "loss": "15.5443", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) {(\"primary  parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 91, "n_pass": [254, 20, 17]}
{"time": "2021-02-24 01:53:28.566441", "score": "0.5553", "loss": "15.9073", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) {(\" parentAttribute \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 89, "n_pass": [255, 21, 18]}
{"time": "2021-02-24 01:53:30.489702", "score": "0.5884", "loss": "16.6256", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) {(\" \" + parentAttr.getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 87, "n_pass": [256, 22, 19]}
{"time": "2021-02-24 01:53:32.414215", "score": "0.6342", "loss": "17.801", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey .getPrimaryKey(); if (primaryKey) {(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 84, "n_pass": [258, 23, 20]}
{"time": "2021-02-24 01:53:35.282128", "score": "0.5023", "loss": "16.8624", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKeygetPrimaryKey(); if (primaryKey) {(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 82, "n_pass": [284, 24, 21]}
{"time": "2021-02-24 01:53:38.124648", "score": "0.6063", "loss": "16.9497", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey(); if (primaryKey) {(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 80, "n_pass": [317, 25, 22]}
{"time": "2021-02-24 01:53:47.400461", "score": "0.6063", "loss": "16.9497", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if (primaryKey) {(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 79, "n_pass": [418, 26, 23]}
{"time": "2021-02-24 01:53:49.297922", "score": "0.6063", "loss": "16.9497", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey) {(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 78, "n_pass": [419, 27, 24]}
{"time": "2021-02-24 01:53:51.195467", "score": "0.6063", "loss": "16.9497", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\" \" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 77, "n_pass": [423, 28, 25]}
{"time": "2021-02-24 01:53:53.083012", "score": "0.5971", "loss": "16.9219", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\" .getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 76, "n_pass": [427, 29, 26]}
{"time": "2021-02-24 01:53:54.961626", "score": "0.5971", "loss": "16.9219", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId()); } List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 75, "n_pass": [429, 30, 27]}
{"time": "2021-02-24 01:53:56.881268", "score": "0.5971", "loss": "16.9219", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());} List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 74, "n_pass": [436, 31, 28]}
{"time": "2021-02-24 01:53:58.765264", "score": "0.5971", "loss": "16.9219", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite yet\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 73, "n_pass": [438, 32, 29]}
{"time": "2021-02-24 01:54:01.573555", "score": "0.6052", "loss": "17.0941", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr.getName()); }", "n_tokens": 71, "n_pass": [447, 33, 30]}
{"time": "2021-02-24 01:54:05.430257", "score": "0.6047", "loss": "16.7757", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr()); }", "n_tokens": 69, "n_pass": [455, 35, 31]}
{"time": "2021-02-24 01:54:07.279128", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 67, "n_pass": [456, 36, 32]}
{"time": "2021-02-24 01:54:09.589714", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 66, "n_pass": [463, 37, 33]}
{"time": "2021-02-24 01:54:11.483282", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr) {getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 65, "n_pass": [470, 38, 34]}
{"time": "2021-02-24 01:54:13.380233", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute> elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 64, "n_pass": [475, 39, 35]}
{"time": "2021-02-24 01:54:21.578036", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements =assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 63, "n_pass": [553, 41, 36]}
{"time": "2021-02-24 01:54:23.441736", "score": "0.6828", "loss": "17.8144", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=assertEquals(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 62, "n_pass": [554, 42, 37]}
{"time": "2021-02-24 01:54:25.808653", "score": "0.8444", "loss": "17.2984", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"composite\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 61, "n_pass": [556, 43, 38]}
{"time": "2021-02-24 01:54:27.692461", "score": "0.8595", "loss": "17.6925", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size()); MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 60, "n_pass": [559, 44, 39]}
{"time": "2021-02-24 01:54:29.573450", "score": "0.8595", "loss": "17.6925", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttribute .get(primaryKeyAttr); }", "n_tokens": 59, "n_pass": [567, 45, 40]}
{"time": "2021-02-24 01:54:31.451340", "score": "0.8595", "loss": "17.6925", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttribute.get(primaryKeyAttr); }", "n_tokens": 58, "n_pass": [569, 46, 41]}
{"time": "2021-02-24 01:54:33.339300", "score": "0.7394", "loss": "18.1724", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttributeget(primaryKeyAttr); }", "n_tokens": 57, "n_pass": [570, 47, 42]}
{"time": "2021-02-24 01:54:35.197921", "score": "0.7883", "loss": "18.2115", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttribute(primaryKeyAttr); }", "n_tokens": 56, "n_pass": [571, 48, 43]}
{"time": "2021-02-24 01:54:37.119768", "score": "0.7995", "loss": "16.193", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttribute(); }", "n_tokens": 55, "n_pass": [573, 49, 44]}
{"time": "2021-02-24 01:54:39.031273", "score": "0.7995", "loss": "16.193", "code": "Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){(\"\".getId());}List<MetaAttribute>elements=(\"\".size());MetaAttribute();}", "n_tokens": 54, "n_pass": [576, 50, 45]}

Minimal simplified code:
Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){("".getId());}List<MetaAttribute>elements=("".size());MetaAttribute();}

