
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/http/src/test/java/org/kaazing/gateway/transport/http/acceptor/specification/rfc7230/MessageRoutingIT_standardHttpTestCase.java
method_name = standardHttpTestCase
method_body = private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new CountDownLatch(1); final IoHandler acceptHandler = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }
predict, score, loss = testAccept, 0.5934101343154907, 34.14874267578125

Trace of simplified code(s):
{"time": "2021-02-24 02:12:51.577294", "score": "0.6094", "loss": "33.9112", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new CountDownLatch(1); final IoHandler acceptHandler = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 127, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:12:54.037732", "score": "0.5883", "loss": "34.3166", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch ; final IoHandler acceptHandler = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 119, "n_pass": [47, 2, 2]}
{"time": "2021-02-24 02:12:55.991954", "score": "0.569", "loss": "33.5088", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 111, "n_pass": [48, 3, 3]}
{"time": "2021-02-24 02:12:57.931352", "score": "0.5682", "loss": "33.6511", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception {session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 103, "n_pass": [53, 4, 4]}
{"time": "2021-02-24 02:12:59.829450", "score": "0.6039", "loss": "33.8764", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 95, "n_pass": [54, 5, 5]}
{"time": "2021-02-24 02:13:05.630352", "score": "0.5734", "loss": "33.9914", "code": "private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(address, acceptHandler); finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 91, "n_pass": [95, 8, 6]}
{"time": "2021-02-24 02:13:08.035069", "score": "0.5079", "loss": "33.1707", "code": "private void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(address, acceptHandler); finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 87, "n_pass": [103, 9, 7]}
{"time": "2021-02-24 02:13:09.953772", "score": "0.5169", "loss": "33.1511", "code": "private void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {protected void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(address, acceptHandler); finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 83, "n_pass": [109, 10, 8]}
{"time": "2021-02-24 02:13:16.681774", "score": "0.5169", "loss": "33.1511", "code": "private void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(address, acceptHandler); finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 81, "n_pass": [173, 13, 9]}
{"time": "2021-02-24 02:13:20.495710", "score": "0.2538", "loss": "31.3266", "code": "private void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(addressacceptHandler); finish(); assertTrue(latch.await(4, SECONDS)); }", "n_tokens": 79, "n_pass": [185, 15, 10]}
{"time": "2021-02-24 02:13:24.284393", "score": "0.2915", "loss": "31.3413", "code": "private void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(addressacceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 77, "n_pass": [192, 17, 11]}
{"time": "2021-02-24 02:13:26.173767", "score": "0.2915", "loss": "31.3413", "code": " void standardHttpTestCase(ResourceAddress address) { final CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(addressacceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 76, "n_pass": [198, 18, 12]}
{"time": "2021-02-24 02:13:28.557223", "score": "0.2915", "loss": "31.3413", "code": " void standardHttpTestCase(ResourceAddress address) { CountDownLatch latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(addressacceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 74, "n_pass": [205, 19, 13]}
{"time": "2021-02-24 02:13:30.453286", "score": "0.3408", "loss": "30.7919", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor.bind(addressacceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 72, "n_pass": [206, 20, 14]}
{"time": "2021-02-24 02:13:34.307459", "score": "0.3555", "loss": "31.399", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor(addressacceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 70, "n_pass": [224, 22, 15]}
{"time": "2021-02-24 02:13:52.659961", "score": "0.5314", "loss": "32.784", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor(acceptHandler); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 69, "n_pass": [331, 26, 16]}
{"time": "2021-02-24 02:13:54.558166", "score": "0.3336", "loss": "31.4661", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor(); finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 68, "n_pass": [332, 27, 17]}
{"time": "2021-02-24 02:13:56.442021", "score": "0.3336", "loss": "31.4661", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish(); assertTrue(latch(4, SECONDS)); }", "n_tokens": 67, "n_pass": [335, 28, 18]}
{"time": "2021-02-24 02:13:58.342358", "score": "0.3336", "loss": "31.4661", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4, SECONDS)); }", "n_tokens": 66, "n_pass": [340, 29, 19]}
{"time": "2021-02-24 02:14:02.179372", "score": "0.3336", "loss": "31.4661", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS)); }", "n_tokens": 65, "n_pass": [347, 31, 20]}
{"time": "2021-02-24 02:14:04.122662", "score": "0.3336", "loss": "31.4661", "code": " void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 64, "n_pass": [352, 32, 21]}
{"time": "2021-02-24 02:14:06.000918", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address) { latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 63, "n_pass": [354, 33, 22]}
{"time": "2021-02-24 02:14:08.833867", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){ latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 62, "n_pass": [363, 34, 23]}
{"time": "2021-02-24 02:14:10.756509", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch = new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 61, "n_pass": [365, 35, 24]}
{"time": "2021-02-24 02:14:12.617928", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch= new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 60, "n_pass": [367, 36, 25]}
{"time": "2021-02-24 02:14:14.504662", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>() {void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 59, "n_pass": [369, 37, 26]}
{"time": "2021-02-24 02:14:18.288958", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session) throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 58, "n_pass": [378, 39, 27]}
{"time": "2021-02-24 02:14:23.929823", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception {} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 57, "n_pass": [388, 42, 28]}
{"time": "2021-02-24 02:14:25.811253", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception{} }; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 56, "n_pass": [392, 43, 29]}
{"time": "2021-02-24 02:14:27.694874", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception{}}; acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 55, "n_pass": [395, 44, 30]}
{"time": "2021-02-24 02:14:29.632560", "score": "0.3336", "loss": "31.4661", "code": "void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception{}};acceptor();finish();assertTrue(latch(4,SECONDS));}", "n_tokens": 54, "n_pass": [398, 45, 31]}

Minimal simplified code:
void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception{}};acceptor();finish();assertTrue(latch(4,SECONDS));}

