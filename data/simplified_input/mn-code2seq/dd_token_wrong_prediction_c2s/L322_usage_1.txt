
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/monitoring/Agent_usage.java
method_name = usage
method_body = public static void usage() { println("java Agent <nb_traps>"); println("where"); println(" -nb_traps: " + "number of traps the SNMP agent will send."); println(" " + "If not specified, the agent will send traps continuously."); }
predict, score, loss = printUsage, 0.6928346157073975, 6.684886455535889

Trace of simplified code(s):
{"time": "2021-02-23 22:34:19.560308", "score": "0.6928", "loss": "6.6849", "code": "public static void usage() { println(\"java Agent <nb_traps>\"); println(\"where\"); println(\" -nb_traps: \" + \"number of traps the SNMP agent will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 104, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 22:34:21.448911", "score": "0.5489", "loss": "5.6302", "code": "public static void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"number of traps the SNMP agent will send.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 91, "n_pass": [21, 2, 2]}
{"time": "2021-02-23 22:34:25.218440", "score": "0.6841", "loss": "5.6256", "code": "public static void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If not specified, the agent will send traps continuously.\"); }", "n_tokens": 78, "n_pass": [24, 4, 3]}
{"time": "2021-02-23 22:34:28.934502", "score": "0.7234", "loss": "5.8371", "code": "public static void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If not will send traps continuously.\"); }", "n_tokens": 71, "n_pass": [46, 6, 4]}
{"time": "2021-02-23 22:34:30.783245", "score": "0.6428", "loss": "6.482", "code": "public static void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 64, "n_pass": [47, 7, 5]}
{"time": "2021-02-23 22:34:33.067813", "score": "0.6428", "loss": "6.482", "code": " void usage() { println; println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 61, "n_pass": [80, 8, 6]}
{"time": "2021-02-23 22:34:34.923622", "score": "0.6189", "loss": "6.7729", "code": " void usage() { println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 58, "n_pass": [83, 9, 7]}
{"time": "2021-02-23 22:34:42.642053", "score": "0.6189", "loss": "6.7729", "code": " void usage(){ println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 57, "n_pass": [138, 12, 8]}
{"time": "2021-02-23 22:34:44.483426", "score": "0.6189", "loss": "6.7729", "code": " void usage(){println(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 56, "n_pass": [140, 13, 9]}
{"time": "2021-02-23 22:34:46.300036", "score": "0.5553", "loss": "5.9501", "code": " void usage(){(\"where\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 55, "n_pass": [141, 14, 10]}
{"time": "2021-02-23 22:34:48.160179", "score": "0.5729", "loss": "6.9248", "code": " void usage(){(\"\"); println(\" -nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 54, "n_pass": [144, 15, 11]}
{"time": "2021-02-23 22:34:51.866537", "score": "0.5729", "loss": "6.9248", "code": " void usage(){(\"\"); println(\"nb_traps: \" + \"numbersend.\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 52, "n_pass": [149, 17, 12]}
{"time": "2021-02-23 22:34:57.474924", "score": "0.5581", "loss": "6.6724", "code": " void usage(){(\"\"); println(\"nb_traps: \" + \".\"); println(\" \" + \"If notcontinuously.\"); }", "n_tokens": 50, "n_pass": [155, 20, 13]}
{"time": "2021-02-23 22:35:01.134327", "score": "0.5018", "loss": "6.0262", "code": " void usage(){(\"\"); println(\"nb_traps: \" + \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 48, "n_pass": [163, 22, 14]}
{"time": "2021-02-23 22:35:04.810749", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\"); println(\"nb_traps: \" + \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 47, "n_pass": [168, 24, 15]}
{"time": "2021-02-23 22:35:21.862819", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\");println(\"nb_traps: \" + \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 46, "n_pass": [237, 30, 16]}
{"time": "2021-02-23 22:35:29.227290", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\");println(\"nb_traps \" + \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 45, "n_pass": [243, 34, 17]}
{"time": "2021-02-23 22:35:31.083813", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\");println(\"nb_traps\" + \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 44, "n_pass": [244, 35, 18]}
{"time": "2021-02-23 22:35:32.898136", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\");println(\"nb_traps\"+ \".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 43, "n_pass": [246, 36, 19]}
{"time": "2021-02-23 22:35:34.687070", "score": "0.5018", "loss": "6.0262", "code": "void usage(){(\"\");println(\"nb_traps\"+\".\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 42, "n_pass": [248, 37, 20]}
{"time": "2021-02-23 22:35:36.539406", "score": "0.5582", "loss": "6.242", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\"); println(\" \" + \"notcontinuously.\"); }", "n_tokens": 41, "n_pass": [250, 38, 21]}
{"time": "2021-02-23 22:35:38.365228", "score": "0.5582", "loss": "6.242", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\" \" + \"notcontinuously.\"); }", "n_tokens": 40, "n_pass": [254, 39, 22]}
{"time": "2021-02-23 22:35:42.011128", "score": "0.5716", "loss": "5.9847", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\" + \"notcontinuously.\"); }", "n_tokens": 39, "n_pass": [258, 41, 23]}
{"time": "2021-02-23 22:35:43.863640", "score": "0.5716", "loss": "5.9847", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\"+ \"notcontinuously.\"); }", "n_tokens": 38, "n_pass": [260, 42, 24]}
{"time": "2021-02-23 22:35:45.711510", "score": "0.5716", "loss": "5.9847", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\"+\"notcontinuously.\"); }", "n_tokens": 37, "n_pass": [262, 43, 25]}
{"time": "2021-02-23 22:35:49.435295", "score": "0.5532", "loss": "6.1256", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\"+\"not.\"); }", "n_tokens": 36, "n_pass": [265, 45, 26]}
{"time": "2021-02-23 22:35:51.318138", "score": "0.5532", "loss": "6.1256", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\"+\"not\"); }", "n_tokens": 35, "n_pass": [266, 46, 27]}
{"time": "2021-02-23 22:35:53.137478", "score": "0.5532", "loss": "6.1256", "code": "void usage(){(\"\");println(\"nb_traps\"+\"\");println(\"\"+\"not\");}", "n_tokens": 34, "n_pass": [270, 47, 28]}

Minimal simplified code:
void usage(){("");println("nb_traps"+"");println(""+"not");}

