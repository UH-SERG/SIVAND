
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/georgewfraser__vscode-javac/src/main/java/org/javacs/SymbolIndex_potentialReferences.java
method_name = potentialReferences
method_body = Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles, index -> index.references.contains(name)); return hasName.keySet(); }
predict, score, loss = getSourceFileName, 0.49290212988853455, 19.554336547851562

Trace of simplified code(s):
{"time": "2021-02-24 09:45:11.690269", "score": "0.4929", "loss": "19.5543", "code": "Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles, index -> index.references.contains(name)); return hasName.keySet(); }", "n_tokens": 64, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:45:13.590311", "score": "0.5257", "loss": "22.7887", "code": "Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles, index (name)); return hasName.keySet(); }", "n_tokens": 56, "n_pass": [25, 2, 2]}
{"time": "2021-02-24 09:45:16.408746", "score": "0.5341", "loss": "22.9113", "code": "Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); return hasName.keySet(); }", "n_tokens": 52, "n_pass": [59, 3, 3]}
{"time": "2021-02-24 09:45:19.663530", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet(); }", "n_tokens": 50, "n_pass": [101, 4, 4]}
{"time": "2021-02-24 09:45:35.037828", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 49, "n_pass": [182, 9, 5]}
{"time": "2021-02-24 09:45:37.329391", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 48, "n_pass": [187, 10, 6]}
{"time": "2021-02-24 09:45:39.214914", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){ updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 47, "n_pass": [194, 11, 7]}
{"time": "2021-02-24 09:45:41.121463", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 46, "n_pass": [196, 12, 8]}
{"time": "2021-02-24 09:45:42.986953", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 45, "n_pass": [201, 13, 9]}
{"time": "2021-02-24 09:45:44.852201", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 44, "n_pass": [206, 14, 10]}
{"time": "2021-02-24 09:45:46.702250", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName = Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 43, "n_pass": [209, 15, 11]}
{"time": "2021-02-24 09:45:48.554528", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName= Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 42, "n_pass": [211, 16, 12]}
{"time": "2021-02-24 09:45:50.398629", "score": "0.4114", "loss": "24.0524", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName=Maps.filterValues(sourcePathFiles(name)); hasName.keySet();}", "n_tokens": 41, "n_pass": [213, 17, 13]}
{"time": "2021-02-24 09:45:56.019665", "score": "0.4444", "loss": "24.3644", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName=Maps.filterValues(sourcePathFiles()); hasName.keySet();}", "n_tokens": 40, "n_pass": [220, 20, 14]}
{"time": "2021-02-24 09:45:57.903575", "score": "0.4444", "loss": "24.3644", "code": "Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName=Maps.filterValues(sourcePathFiles());hasName.keySet();}", "n_tokens": 39, "n_pass": [224, 21, 15]}

Minimal simplified code:
Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName=Maps.filterValues(sourcePathFiles());hasName.keySet();}

