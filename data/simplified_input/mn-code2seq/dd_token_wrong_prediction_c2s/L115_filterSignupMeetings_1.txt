
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/signup/tool/src/java/org/sakaiproject/signup/tool/jsf/signupFilter_filterSignupMeetings.java
method_name = filterSignupMeetings
method_body = public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }
predict, score, loss = getUpAndGetOnes, 0.2339565008878708, 33.847206115722656

Trace of simplified code(s):
{"time": "2021-02-24 05:32:43.201476", "score": "0.234", "loss": "33.8472", "code": "public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:32:53.336177", "score": "0.234", "loss": "33.8472", "code": " void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 62, "n_pass": [92, 6, 2]}
{"time": "2021-02-24 05:33:17.944477", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 61, "n_pass": [185, 16, 3]}
{"time": "2021-02-24 05:33:20.290476", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 60, "n_pass": [193, 17, 4]}
{"time": "2021-02-24 05:33:22.171210", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){ if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 59, "n_pass": [196, 18, 5]}
{"time": "2021-02-24 05:33:24.039344", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 58, "n_pass": [198, 19, 6]}
{"time": "2021-02-24 05:33:25.913490", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 57, "n_pass": [200, 20, 7]}
{"time": "2021-02-24 05:33:44.508860", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 56, "n_pass": [215, 30, 8]}
{"time": "2021-02-24 05:33:50.105008", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 55, "n_pass": [221, 33, 9]}
{"time": "2021-02-24 05:33:53.795371", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if(VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 54, "n_pass": [225, 35, 10]}
{"time": "2021-02-24 05:34:08.782091", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if(VIEW_IMMEDIATE_AVAIL.equals(filterChoice))getImmediateAvailOnes(sMeetingWrps); }", "n_tokens": 53, "n_pass": [238, 43, 11]}
{"time": "2021-02-24 05:34:14.351744", "score": "0.234", "loss": "33.8472", "code": "void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if(VIEW_IMMEDIATE_AVAIL.equals(filterChoice))getImmediateAvailOnes(sMeetingWrps);}", "n_tokens": 52, "n_pass": [244, 46, 12]}

Minimal simplified code:
void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if(VIEW_IMMEDIATE_AVAIL.equals(filterChoice))getImmediateAvailOnes(sMeetingWrps);}

