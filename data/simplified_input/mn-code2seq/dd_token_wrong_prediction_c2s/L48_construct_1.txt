
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/XiaoMi__linden/linden-core/src/main/java/com/xiaomi/linden/core/search/query/WildcardQueryConstructor_construct.java
method_name = construct
method_body = @Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }
predict, score, loss = visit, 0.24075709283351898, 7.278993606567383

Trace of simplified code(s):
{"time": "2021-02-23 18:40:34.403174", "score": "0.2408", "loss": "7.279", "code": "@Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 18:40:38.232252", "score": "0.381", "loss": "7.3432", "code": "@Override protected Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 79, "n_pass": [46, 3, 2]}
{"time": "2021-02-23 18:40:40.156861", "score": "0.3148", "loss": "7.71", "code": "@Override protected Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }", "n_tokens": 74, "n_pass": [53, 4, 3]}
{"time": "2021-02-23 18:40:45.880188", "score": "0.2919", "loss": "7.8193", "code": "@Override protected Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 71, "n_pass": [100, 7, 4]}
{"time": "2021-02-23 18:40:51.544091", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 69, "n_pass": [106, 10, 5]}
{"time": "2021-02-23 18:41:09.818032", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 68, "n_pass": [194, 15, 6]}
{"time": "2021-02-23 18:41:11.721505", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{ if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 67, "n_pass": [198, 16, 7]}
{"time": "2021-02-23 18:41:13.605156", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 66, "n_pass": [200, 17, 8]}
{"time": "2021-02-23 18:41:15.510238", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 65, "n_pass": [202, 18, 9]}
{"time": "2021-02-23 18:41:19.262437", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){ LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 64, "n_pass": [210, 20, 10]}
{"time": "2021-02-23 18:41:21.141933", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 63, "n_pass": [212, 21, 11]}
{"time": "2021-02-23 18:41:28.600874", "score": "0.2919", "loss": "7.8193", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery(); (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 62, "n_pass": [216, 25, 12]}
{"time": "2021-02-23 18:41:32.403330", "score": "0.3164", "loss": "7.9277", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery())); } return null; }", "n_tokens": 60, "n_pass": [220, 27, 13]}
{"time": "2021-02-23 18:41:39.933263", "score": "0.3053", "loss": "7.7688", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery)); } return null; }", "n_tokens": 58, "n_pass": [228, 31, 14]}
{"time": "2021-02-23 18:42:07.338862", "score": "0.3053", "loss": "7.7688", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));} return null; }", "n_tokens": 57, "n_pass": [302, 42, 15]}
{"time": "2021-02-23 18:42:09.213027", "score": "0.3053", "loss": "7.7688", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}return null; }", "n_tokens": 56, "n_pass": [304, 43, 16]}
{"time": "2021-02-23 18:42:12.944343", "score": "0.3744", "loss": "7.1477", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}returnnull; }", "n_tokens": 55, "n_pass": [306, 45, 17]}
{"time": "2021-02-23 18:42:14.801888", "score": "0.3945", "loss": "6.8378", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}return; }", "n_tokens": 54, "n_pass": [307, 46, 18]}
{"time": "2021-02-23 18:42:16.711215", "score": "0.3945", "loss": "6.8378", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery= lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 53, "n_pass": [309, 47, 19]}
{"time": "2021-02-23 18:42:28.427127", "score": "0.3945", "loss": "6.8378", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuery.getWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 52, "n_pass": [339, 52, 20]}
{"time": "2021-02-23 18:42:30.323264", "score": "0.2699", "loss": "6.5933", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery; (new Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 51, "n_pass": [341, 53, 21]}
{"time": "2021-02-23 18:42:35.931138", "score": "0.2699", "loss": "6.5933", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery;(new Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 50, "n_pass": [344, 56, 22]}
{"time": "2021-02-23 18:42:37.851157", "score": "0.2915", "loss": "7.9291", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery;( Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 49, "n_pass": [346, 57, 23]}
{"time": "2021-02-23 18:42:39.747217", "score": "0.2915", "loss": "7.9291", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}return;}", "n_tokens": 48, "n_pass": [347, 58, 24]}
{"time": "2021-02-23 18:42:43.521657", "score": "0.2915", "loss": "7.9291", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));};}", "n_tokens": 47, "n_pass": [361, 60, 25]}
{"time": "2021-02-23 18:42:45.376673", "score": "0.2915", "loss": "7.9291", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){LindenWildcardQuery lindenWildcardQuery=lindenQuerygetWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}", "n_tokens": 46, "n_pass": [362, 61, 26]}
{"time": "2021-02-23 18:42:51.415467", "score": "0.2902", "loss": "7.4795", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){ lindenWildcardQuery=lindenQuerygetWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}", "n_tokens": 45, "n_pass": [388, 63, 27]}
{"time": "2021-02-23 18:42:53.262973", "score": "0.2902", "loss": "7.4795", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){lindenWildcardQuery=lindenQuerygetWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}", "n_tokens": 44, "n_pass": [389, 64, 28]}
{"time": "2021-02-23 18:42:56.953893", "score": "0.3843", "loss": "7.6239", "code": "@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){lindenWildcardQuery=getWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}", "n_tokens": 43, "n_pass": [392, 66, 29]}

Minimal simplified code:
@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){lindenWildcardQuery=getWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}

