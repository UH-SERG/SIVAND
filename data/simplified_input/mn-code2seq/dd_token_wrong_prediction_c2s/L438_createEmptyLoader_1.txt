
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/georgewfraser__vscode-javac/src/test/java/org/javacs/ClassPathIndexTest_createEmptyLoader.java
method_name = createEmptyLoader
method_body = @Test public void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass("java.util.ArrayList"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass("com.google.common.collect.Lists"); fail("Found " + found); } catch (ClassNotFoundException e) { } }
predict, score, loss = testLoadClassWithNo, 0.5202710032463074, 20.778213500976562

Trace of simplified code(s):
{"time": "2021-02-24 08:49:36.938008", "score": "0.5203", "loss": "20.7782", "code": "@Test public void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.google.common.collect.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 114, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:49:48.048627", "score": "0.5203", "loss": "20.7782", "code": "@Test public void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.collect.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 110, "n_pass": [114, 6, 2]}
{"time": "2021-02-24 08:50:01.132293", "score": "0.5203", "loss": "20.7782", "code": "@Test public void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 108, "n_pass": [208, 11, 3]}
{"time": "2021-02-24 08:50:04.997849", "score": "0.5203", "loss": "20.7782", "code": "@Test  void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 107, "n_pass": [228, 13, 4]}
{"time": "2021-02-24 08:50:06.911091", "score": "0.5203", "loss": "20.7782", "code": "@Test void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 106, "n_pass": [229, 14, 5]}
{"time": "2021-02-24 08:50:09.784773", "score": "0.5203", "loss": "20.7782", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 105, "n_pass": [235, 15, 6]}
{"time": "2021-02-24 08:50:48.723360", "score": "0.5203", "loss": "20.7782", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader= ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 104, "n_pass": [391, 28, 7]}
{"time": "2021-02-24 08:50:50.672481", "score": "0.5203", "loss": "20.7782", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 103, "n_pass": [392, 29, 8]}
{"time": "2021-02-24 08:50:52.599442", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader(); assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 102, "n_pass": [394, 30, 9]}
{"time": "2021-02-24 08:50:56.452066", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"java.util.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 101, "n_pass": [399, 32, 10]}
{"time": "2021-02-24 08:51:02.188473", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 100, "n_pass": [408, 35, 11]}
{"time": "2021-02-24 08:51:09.930718", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 99, "n_pass": [415, 39, 12]}
{"time": "2021-02-24 08:51:13.764259", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try { Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 98, "n_pass": [424, 41, 13]}
{"time": "2021-02-24 08:51:15.677552", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{ Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 97, "n_pass": [426, 42, 14]}
{"time": "2021-02-24 08:51:17.624250", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?> found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 96, "n_pass": [428, 43, 15]}
{"time": "2021-02-24 08:51:19.528970", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found = emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 95, "n_pass": [433, 44, 16]}
{"time": "2021-02-24 08:51:21.444232", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found= emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 94, "n_pass": [435, 45, 17]}
{"time": "2021-02-24 08:51:23.350679", "score": "0.5136", "loss": "21.0274", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com.Lists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 93, "n_pass": [437, 46, 18]}
{"time": "2021-02-24 08:51:29.137349", "score": "0.5016", "loss": "20.7119", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"comLists\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 92, "n_pass": [444, 49, 19]}
{"time": "2021-02-24 08:51:31.030878", "score": "0.52", "loss": "20.9833", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\"); fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 91, "n_pass": [445, 50, 20]}
{"time": "2021-02-24 08:51:32.987504", "score": "0.52", "loss": "20.9833", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");fail(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 90, "n_pass": [449, 51, 21]}
{"time": "2021-02-24 08:51:34.888223", "score": "0.4771", "loss": "20.7276", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"Found \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 89, "n_pass": [450, 52, 22]}
{"time": "2021-02-24 08:51:36.824235", "score": "0.4804", "loss": "20.6249", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\" \" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 88, "n_pass": [453, 53, 23]}
{"time": "2021-02-24 08:51:38.717954", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\" + found); } catch (ClassNotFoundException e) { } }", "n_tokens": 87, "n_pass": [454, 54, 24]}
{"time": "2021-02-24 08:51:40.623893", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+ found); } catch (ClassNotFoundException e) { } }", "n_tokens": 86, "n_pass": [456, 55, 25]}
{"time": "2021-02-24 08:51:42.536709", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found); } catch (ClassNotFoundException e) { } }", "n_tokens": 85, "n_pass": [458, 56, 26]}
{"time": "2021-02-24 08:51:44.469621", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);} catch (ClassNotFoundException e) { } }", "n_tokens": 84, "n_pass": [462, 57, 27]}
{"time": "2021-02-24 08:51:46.362835", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch (ClassNotFoundException e) { } }", "n_tokens": 83, "n_pass": [464, 58, 28]}
{"time": "2021-02-24 08:51:48.309528", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e) { } }", "n_tokens": 82, "n_pass": [466, 59, 29]}
{"time": "2021-02-24 08:51:50.231962", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e){ } }", "n_tokens": 81, "n_pass": [472, 60, 30]}
{"time": "2021-02-24 08:51:52.128818", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e){} }", "n_tokens": 80, "n_pass": [474, 61, 31]}
{"time": "2021-02-24 08:51:54.023003", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException { ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e){}}", "n_tokens": 79, "n_pass": [476, 62, 32]}
{"time": "2021-02-24 08:51:57.343648", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException{ ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e){}}", "n_tokens": 78, "n_pass": [489, 63, 33]}
{"time": "2021-02-24 08:51:59.299587", "score": "0.4755", "loss": "20.5514", "code": "@Test void createEmptyLoader()throws ClassNotFoundException{ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(\"javautil.ArrayList\"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(\"com\");(\"\"+found);}catch(ClassNotFoundException e){}}", "n_tokens": 77, "n_pass": [491, 64, 34]}

Minimal simplified code:
@Test void createEmptyLoader()throws ClassNotFoundException{ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass("javautil.ArrayList"),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass("com");(""+found);}catch(ClassNotFoundException e){}}

