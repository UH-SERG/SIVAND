
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/adamkewley__jobson/src/test/java/com/github/jobson/resources/v1/JobResourceTest_readAsByteArray.java
method_name = readAsByteArray
method_body = private byte[] readAsByteArray(Response response) throws IOException { final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).write(outputStream); return outputStream.toByteArray(); }
predict, score, loss = getResponse, 0.4257040321826935, 23.205638885498047

Trace of simplified code(s):
{"time": "2021-02-24 10:18:33.888251", "score": "0.4257", "loss": "23.2056", "code": "private byte[] readAsByteArray(Response response) throws IOException { final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).write(outputStream); return outputStream.toByteArray(); }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 10:18:37.717012", "score": "0.7063", "loss": "24.9013", "code": "private byte[] readAsByteArray(Response response) throws IOException { final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).outputStream.toByteArray(); }", "n_tokens": 54, "n_pass": [26, 3, 2]}
{"time": "2021-02-24 10:18:40.068986", "score": "0.6595", "loss": "24.862", "code": "private byte[] readAsByteArray(Response response) throws IOException { outputStream = new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).outputStream.toByteArray(); }", "n_tokens": 50, "n_pass": [54, 4, 3]}
{"time": "2021-02-24 10:18:41.941636", "score": "0.6276", "loss": "24.6035", "code": "private byte[] readAsByteArray(Response response) throws IOException { new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).outputStream.toByteArray(); }", "n_tokens": 46, "n_pass": [55, 5, 4]}
{"time": "2021-02-24 10:18:43.777148", "score": "0.5551", "loss": "25.0149", "code": "private byte[] readAsByteArray(Response response) throws IOException { new ByteArrayOutputStream((StreamingOutput) response.getEntity()).outputStream.toByteArray(); }", "n_tokens": 42, "n_pass": [57, 6, 5]}
{"time": "2021-02-24 10:18:46.075462", "score": "0.5858", "loss": "25.3736", "code": "private byte[] readAsByteArray(Response response) throws IOException {((StreamingOutput) response.getEntity()).outputStream.toByteArray(); }", "n_tokens": 38, "n_pass": [68, 7, 6]}
{"time": "2021-02-24 10:18:52.516668", "score": "0.4736", "loss": "24.8991", "code": "private byte[] readAsByteArray(Response response) throws IOException {((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 36, "n_pass": [103, 10, 7]}
{"time": "2021-02-24 10:18:56.233473", "score": "0.4736", "loss": "24.8991", "code": " byte[] readAsByteArray(Response response) throws IOException {((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 35, "n_pass": [108, 12, 8]}
{"time": "2021-02-24 10:18:58.127443", "score": "0.4736", "loss": "24.8991", "code": "byte[] readAsByteArray(Response response) throws IOException {((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 34, "n_pass": [109, 13, 9]}
{"time": "2021-02-24 10:19:08.915439", "score": "0.4736", "loss": "24.8991", "code": "byte[]readAsByteArray(Response response) throws IOException {((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 33, "n_pass": [164, 17, 10]}
{"time": "2021-02-24 10:19:10.777626", "score": "0.4736", "loss": "24.8991", "code": "byte[]readAsByteArray(Response response)throws IOException {((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 32, "n_pass": [171, 18, 11]}
{"time": "2021-02-24 10:19:12.655705", "score": "0.4736", "loss": "24.8991", "code": "byte[]readAsByteArray(Response response)throws IOException{((StreamingOutput) response.getEntity).outputStream.toByteArray(); }", "n_tokens": 31, "n_pass": [175, 19, 12]}
{"time": "2021-02-24 10:19:14.511514", "score": "0.4736", "loss": "24.8991", "code": "byte[]readAsByteArray(Response response)throws IOException{((StreamingOutput)response.getEntity).outputStream.toByteArray(); }", "n_tokens": 30, "n_pass": [181, 20, 13]}
{"time": "2021-02-24 10:19:21.919245", "score": "0.4736", "loss": "24.8991", "code": "byte[]readAsByteArray(Response response)throws IOException{((StreamingOutput)response.getEntity).outputStream.toByteArray();}", "n_tokens": 29, "n_pass": [193, 24, 14]}

Minimal simplified code:
byte[]readAsByteArray(Response response)throws IOException{((StreamingOutput)response.getEntity).outputStream.toByteArray();}

