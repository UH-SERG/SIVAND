
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/quantifier/src/main/java/edu/illinois/cs/cogcomp/quant/standardize/Numbers_prefixUsd.java
method_name = prefixUsd
method_body = public static String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) { phrase = phrase.replace(matcher.group(1), ""); phrase += "US$"; } return phrase; }
predict, score, loss = getPhrasePhrase, 0.6393877267837524, 16.73733139038086

Trace of simplified code(s):
{"time": "2021-02-24 08:52:33.613131", "score": "0.6394", "loss": "16.7373", "code": "public static String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) { phrase = phrase.replace(matcher.group(1), \"\"); phrase += \"US$\"; } return phrase; }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:52:35.519503", "score": "0.6096", "loss": "14.131", "code": "public static String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 61, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 08:52:41.677460", "score": "0.6096", "loss": "14.131", "code": "static String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 59, "n_pass": [81, 5, 3]}
{"time": "2021-02-24 08:52:43.552743", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 57, "n_pass": [82, 6, 4]}
{"time": "2021-02-24 08:52:57.088362", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){ Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 56, "n_pass": [156, 10, 5]}
{"time": "2021-02-24 08:52:58.982222", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 55, "n_pass": [157, 11, 6]}
{"time": "2021-02-24 08:53:06.416418", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){Matcher matcher= prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 54, "n_pass": [161, 15, 7]}
{"time": "2021-02-24 08:53:08.273282", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase); if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 53, "n_pass": [163, 16, 8]}
{"time": "2021-02-24 08:53:13.949965", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if (matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 52, "n_pass": [171, 19, 9]}
{"time": "2021-02-24 08:53:15.837217", "score": "0.6096", "loss": "14.131", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher.find()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 51, "n_pass": [173, 20, 10]}
{"time": "2021-02-24 08:53:17.689461", "score": "0.6186", "loss": "13.7703", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcherfind()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 50, "n_pass": [176, 21, 11]}
{"time": "2021-02-24 08:53:19.555328", "score": "0.5435", "loss": "13.1744", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()) {; phrase += \"US$\"; } return phrase; }", "n_tokens": 49, "n_pass": [177, 22, 12]}
{"time": "2021-02-24 08:53:23.366500", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()) {; phrase= \"US$\"; } return phrase; }", "n_tokens": 47, "n_pass": [182, 24, 13]}
{"time": "2021-02-24 08:53:44.052413", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()) {; phrase= \"US$\";} return phrase; }", "n_tokens": 46, "n_pass": [244, 32, 14]}
{"time": "2021-02-24 08:53:45.948613", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()) {; phrase= \"US$\";}return phrase; }", "n_tokens": 45, "n_pass": [246, 33, 15]}
{"time": "2021-02-24 08:53:53.366385", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()) {; phrase= \"US$\";}return phrase;}", "n_tokens": 44, "n_pass": [251, 37, 16]}
{"time": "2021-02-24 08:54:05.962389", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){; phrase= \"US$\";}return phrase;}", "n_tokens": 43, "n_pass": [279, 43, 17]}
{"time": "2021-02-24 08:54:07.891940", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){ phrase= \"US$\";}return phrase;}", "n_tokens": 42, "n_pass": [281, 44, 18]}
{"time": "2021-02-24 08:54:09.759231", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){phrase= \"US$\";}return phrase;}", "n_tokens": 41, "n_pass": [282, 45, 19]}
{"time": "2021-02-24 08:54:11.597274", "score": "0.5607", "loss": "12.7229", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){phrase=\"US$\";}return phrase;}", "n_tokens": 40, "n_pass": [285, 46, 20]}
{"time": "2021-02-24 08:54:13.474219", "score": "0.5394", "loss": "13.1829", "code": "String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){phrase=\"$\";}return phrase;}", "n_tokens": 39, "n_pass": [287, 47, 21]}

Minimal simplified code:
String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){phrase="$";}return phrase;}

