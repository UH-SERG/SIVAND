
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/entitybroker/utils/src/java/org/sakaiproject/entitybroker/util/request/RequestStorageImpl_reset.java
method_name = reset
method_body = public void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key : getInternalMap().keySet()) { request.removeAttribute(key); } } }
predict, score, loss = clear, 0.6716678142547607, 4.1601080894470215

Trace of simplified code(s):
{"time": "2021-02-24 05:13:10.558841", "score": "0.6717", "loss": "4.1601", "code": "public void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key : getInternalMap().keySet()) { request.removeAttribute(key); } } }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:13:14.851545", "score": "0.6733", "loss": "3.9817", "code": "public void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 73, "n_pass": [55, 3, 2]}
{"time": "2021-02-24 05:13:17.639821", "score": "0.6733", "loss": "3.9817", "code": "void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 71, "n_pass": [108, 4, 3]}
{"time": "2021-02-24 05:13:19.545679", "score": "0.6993", "loss": "2.7602", "code": "void reset() { getInternalMap().clear(); request = requestGetter.getRequest(); if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 69, "n_pass": [116, 5, 4]}
{"time": "2021-02-24 05:13:21.424219", "score": "0.7097", "loss": "2.4331", "code": "void reset() { getInternalMap().clear(); request = requestGetter(); if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 67, "n_pass": [120, 6, 5]}
{"time": "2021-02-24 05:13:23.273713", "score": "0.6967", "loss": "2.2274", "code": "void reset() { getInternalMap().clear(); request = requestGetter; if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 65, "n_pass": [121, 7, 6]}
{"time": "2021-02-24 05:13:25.664787", "score": "0.7143", "loss": "3.8933", "code": "void reset() { getInternalMap().clear(); request requestGetter; if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 63, "n_pass": [146, 8, 7]}
{"time": "2021-02-24 05:13:27.557983", "score": "0.764", "loss": "3.387", "code": "void reset() { getInternalMap().clear(); request; if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 61, "n_pass": [147, 9, 8]}
{"time": "2021-02-24 05:13:29.902977", "score": "0.7759", "loss": "3.7927", "code": "void reset() { getInternalMap().clear();; if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 59, "n_pass": [171, 10, 9]}
{"time": "2021-02-24 05:13:31.770245", "score": "0.7759", "loss": "3.7927", "code": "void reset() { getInternalMap().clear();if (request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 57, "n_pass": [172, 11, 10]}
{"time": "2021-02-24 05:13:38.371465", "score": "0.7759", "loss": "3.7927", "code": "void reset() { getInternalMap().clear();if(request != null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 56, "n_pass": [240, 12, 11]}
{"time": "2021-02-24 05:13:40.288606", "score": "0.7759", "loss": "3.7927", "code": "void reset() { getInternalMap().clear();if(request!= null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 55, "n_pass": [243, 13, 12]}
{"time": "2021-02-24 05:13:42.153124", "score": "0.7592", "loss": "4.0196", "code": "void reset() { getInternalMap().clear();if(request= null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 54, "n_pass": [244, 14, 13]}
{"time": "2021-02-24 05:13:44.020986", "score": "0.7592", "loss": "4.0196", "code": "void reset() { getInternalMap().clear();if(request=null) { for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 53, "n_pass": [246, 15, 14]}
{"time": "2021-02-24 05:13:45.893832", "score": "0.7592", "loss": "4.0196", "code": "void reset() { getInternalMap().clear();if(request=null){ for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 52, "n_pass": [249, 16, 15]}
{"time": "2021-02-24 05:13:47.790897", "score": "0.7592", "loss": "4.0196", "code": "void reset() { getInternalMap().clear();if(request=null){for (String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 51, "n_pass": [251, 17, 16]}
{"time": "2021-02-24 05:13:49.695605", "score": "0.7592", "loss": "4.0196", "code": "void reset() { getInternalMap().clear();if(request=null){for(String key :keySet()) { request.removeAttribute(key); } } }", "n_tokens": 50, "n_pass": [253, 18, 17]}
{"time": "2021-02-24 05:13:51.561739", "score": "0.7393", "loss": "2.9542", "code": "void reset() { getInternalMap().clear();if(request=null){for(String key :keySet()) { request(key); } } }", "n_tokens": 48, "n_pass": [261, 19, 18]}
{"time": "2021-02-24 05:13:54.338090", "score": "0.7393", "loss": "2.9542", "code": "void reset(){ getInternalMap().clear();if(request=null){for(String key :keySet()) { request(key); } } }", "n_tokens": 47, "n_pass": [272, 20, 19]}
{"time": "2021-02-24 05:13:56.190497", "score": "0.7393", "loss": "2.9542", "code": "void reset(){getInternalMap().clear();if(request=null){for(String key :keySet()) { request(key); } } }", "n_tokens": 46, "n_pass": [274, 21, 20]}
{"time": "2021-02-24 05:13:58.021712", "score": "0.4848", "loss": "2.8796", "code": "void reset(){getInternalMap().clear();if(requestnull){for(String key :keySet()) { request(key); } } }", "n_tokens": 45, "n_pass": [286, 22, 21]}
{"time": "2021-02-24 05:13:59.886820", "score": "0.5124", "loss": "2.8223", "code": "void reset(){getInternalMap().clear();if(request){for(String key :keySet()) { request(key); } } }", "n_tokens": 44, "n_pass": [287, 23, 22]}
{"time": "2021-02-24 05:14:01.908256", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key :keySet()) {(key); } } }", "n_tokens": 42, "n_pass": [297, 24, 23]}
{"time": "2021-02-24 05:14:07.671027", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key :keySet()) {(key);} } }", "n_tokens": 41, "n_pass": [352, 25, 24]}
{"time": "2021-02-24 05:14:09.562978", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key :keySet()) {(key);}} }", "n_tokens": 40, "n_pass": [353, 26, 25]}
{"time": "2021-02-24 05:14:11.482861", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key :keySet()) {(key);}}}", "n_tokens": 39, "n_pass": [355, 27, 26]}
{"time": "2021-02-24 05:14:14.277725", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key:keySet()) {(key);}}}", "n_tokens": 38, "n_pass": [381, 28, 27]}
{"time": "2021-02-24 05:14:16.101042", "score": "0.8287", "loss": "3.0278", "code": "void reset(){getInternalMap().clear();if(request){for(String key:keySet()){(key);}}}", "n_tokens": 37, "n_pass": [387, 29, 28]}

Minimal simplified code:
void reset(){getInternalMap().clear();if(request){for(String key:keySet()){(key);}}}

