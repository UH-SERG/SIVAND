
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/inference/src/main/java/edu/illinois/cs/cogcomp/infer/ilp/GurobiHook_printModelStatus.java
method_name = printModelStatus
method_body = public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println("Model status: " + status); if (status == GRB.INFEASIBLE) { System.out.println("INFEASIBLE"); } }
predict, score, loss = run, 0.2808324992656708, 19.800865173339844

Trace of simplified code(s):
{"time": "2021-02-23 22:36:39.312475", "score": "0.2808", "loss": "19.8009", "code": "public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 22:36:41.255017", "score": "0.3192", "loss": "20.0589", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status); System.out.println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 77, "n_pass": [47, 2, 2]}
{"time": "2021-02-23 22:36:43.142610", "score": "0.304", "loss": "20.3301", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status).println(\"Model status: \" + status); if (status == GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 72, "n_pass": [50, 3, 3]}
{"time": "2021-02-23 22:36:45.027065", "score": "0.3603", "loss": "20.3537", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status).println(\"Model status: \" + status); if (GRB.INFEASIBLE) { System.out.println(\"INFEASIBLE\"); } }", "n_tokens": 67, "n_pass": [55, 4, 4]}
{"time": "2021-02-23 22:36:46.915267", "score": "0.3655", "loss": "20.2837", "code": "public void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status).println(\"Model status: \" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 64, "n_pass": [100, 5, 5]}
{"time": "2021-02-23 22:36:48.769448", "score": "0.3655", "loss": "20.2837", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.IntAttr.Status).println(\"Model status: \" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 62, "n_pass": [103, 6, 6]}
{"time": "2021-02-23 22:36:52.956341", "score": "0.4146", "loss": "20.4441", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"Model status: \" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 60, "n_pass": [113, 8, 7]}
{"time": "2021-02-23 22:36:54.846425", "score": "0.3959", "loss": "21.6461", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"Model \" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 57, "n_pass": [117, 9, 8]}
{"time": "2021-02-23 22:37:02.862360", "score": "0.4067", "loss": "20.7643", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\" \" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 56, "n_pass": [185, 11, 9]}
{"time": "2021-02-23 22:37:04.722590", "score": "0.4088", "loss": "21.2758", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\" + status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 55, "n_pass": [186, 12, 10]}
{"time": "2021-02-23 22:37:06.595166", "score": "0.4088", "loss": "21.2758", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\"+ status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 54, "n_pass": [188, 13, 11]}
{"time": "2021-02-23 22:37:08.480545", "score": "0.4088", "loss": "21.2758", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\"+status); if (GRB.INFEASIBLE) { System.out.println(); } }", "n_tokens": 53, "n_pass": [190, 14, 12]}
{"time": "2021-02-23 22:37:10.357122", "score": "0.5046", "loss": "22.179", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { System.out.println(); } }", "n_tokens": 51, "n_pass": [195, 15, 13]}
{"time": "2021-02-23 22:37:12.186772", "score": "0.5061", "loss": "21.1001", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { out.println(); } }", "n_tokens": 49, "n_pass": [198, 16, 14]}
{"time": "2021-02-23 22:37:14.064510", "score": "0.5244", "loss": "21.1111", "code": "void printModelStatus() throws GRBException { intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 47, "n_pass": [199, 17, 15]}
{"time": "2021-02-23 22:37:16.863057", "score": "0.5244", "loss": "21.1111", "code": "void printModelStatus()throws GRBException { intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 46, "n_pass": [209, 18, 16]}
{"time": "2021-02-23 22:37:18.702455", "score": "0.5244", "loss": "21.1111", "code": "void printModelStatus()throws GRBException{ intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 45, "n_pass": [213, 19, 17]}
{"time": "2021-02-23 22:37:20.546865", "score": "0.5244", "loss": "21.1111", "code": "void printModelStatus()throws GRBException{intmodel.get(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 44, "n_pass": [215, 20, 18]}
{"time": "2021-02-23 22:37:22.399092", "score": "0.5564", "loss": "21.1348", "code": "void printModelStatus()throws GRBException{model.get(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 43, "n_pass": [216, 21, 19]}
{"time": "2021-02-23 22:37:24.267833", "score": "0.1871", "loss": "19.5976", "code": "void printModelStatus()throws GRBException{modelget(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 42, "n_pass": [218, 22, 20]}
{"time": "2021-02-23 22:37:26.083761", "score": "0.2831", "loss": "19.1236", "code": "void printModelStatus()throws GRBException{model(GRB.Status).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 41, "n_pass": [219, 23, 21]}
{"time": "2021-02-23 22:37:27.945654", "score": "0.2802", "loss": "18.8638", "code": "void printModelStatus()throws GRBException{model(GRBStatus).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 40, "n_pass": [222, 24, 22]}
{"time": "2021-02-23 22:37:29.765586", "score": "0.2794", "loss": "20.438", "code": "void printModelStatus()throws GRBException{model(GRB).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 39, "n_pass": [223, 25, 23]}
{"time": "2021-02-23 22:37:32.485665", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status); if (GRB) { println(); } }", "n_tokens": 38, "n_pass": [250, 26, 24]}
{"time": "2021-02-23 22:37:39.067711", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if (GRB) { println(); } }", "n_tokens": 37, "n_pass": [302, 27, 25]}
{"time": "2021-02-23 22:37:40.912262", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if(GRB) { println(); } }", "n_tokens": 36, "n_pass": [304, 28, 26]}
{"time": "2021-02-23 22:37:42.742316", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if(GRB){ println(); } }", "n_tokens": 35, "n_pass": [308, 29, 27]}
{"time": "2021-02-23 22:37:44.597168", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if(GRB){println(); } }", "n_tokens": 34, "n_pass": [310, 30, 28]}
{"time": "2021-02-23 22:37:46.455141", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if(GRB){println();} }", "n_tokens": 33, "n_pass": [315, 31, 29]}
{"time": "2021-02-23 22:37:48.292082", "score": "0.281", "loss": "22.0518", "code": "void printModelStatus()throws GRBException{(GRB).println(\"\"+status);if(GRB){println();}}", "n_tokens": 32, "n_pass": [317, 32, 30]}

Minimal simplified code:
void printModelStatus()throws GRBException{(GRB).println(""+status);if(GRB){println();}}

