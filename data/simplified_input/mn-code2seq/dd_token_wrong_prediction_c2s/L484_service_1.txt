
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/launch/webapps/examples/WEB-INF/classes/chat/ChatServlet_service.java
method_name = service
method_body = @Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType("text/html; charset=" + CHARSET); PrintWriter writer = response.getWriter(); writer.println("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">"); writer.println("<html><head><title>JSP Chat</title></head><body bgcolor=\"#FFFFFF\">"); writer.println("Chat example only supports Comet processing. "); writer.println("Configure a connector that supports Comet and try again."); writer.println("</body></html>"); }
predict, score, loss = doGet, 0.9094001054763794, 14.935665130615234

Trace of simplified code(s):
{"time": "2021-02-24 02:56:31.976823", "score": "0.9094", "loss": "14.9357", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\"); writer.println(\"<html><head><title>JSP Chat</title></head><body bgcolor=\\\"#FFFFFF\\\">\"); writer.println(\"Chat example only supports Comet processing. \"); writer.println(\"Configure a connector that supports Comet and try again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 236, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:56:33.881011", "score": "0.9145", "loss": "14.3996", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/ only supports Comet processing. \"); writer.println(\"Configure a connector that supports Comet and try again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 177, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 02:56:35.757429", "score": "0.8927", "loss": "13.6212", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4Comet and try again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 147, "n_pass": [19, 3, 3]}
{"time": "2021-02-24 02:56:37.651612", "score": "0.8927", "loss": "13.6212", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTMLComet and try again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 117, "n_pass": [24, 4, 4]}
{"time": "2021-02-24 02:56:39.593995", "score": "0.8836", "loss": "14.1002", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE HTML Comet and try again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 102, "n_pass": [44, 5, 5]}
{"time": "2021-02-24 02:56:41.510805", "score": "0.9017", "loss": "14.7652", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(\"<!DOCTYPE again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 94, "n_pass": [66, 6, 6]}
{"time": "2021-02-24 02:56:43.869627", "score": "0.8704", "loss": "13.267", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWritergetWriter(); writer.println(\"<!DOCTYPE again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 87, "n_pass": [77, 7, 7]}
{"time": "2021-02-24 02:56:45.726737", "score": "0.8603", "loss": "12.7156", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriterprintln(\"<!DOCTYPE again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 80, "n_pass": [78, 8, 8]}
{"time": "2021-02-24 02:56:48.043659", "score": "0.8642", "loss": "12.683", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriterprintln(\"again.\"); writer.println(\"</body></html>\"); }", "n_tokens": 76, "n_pass": [113, 9, 9]}
{"time": "2021-02-24 02:56:49.910867", "score": "0.8854", "loss": "12.7118", "code": "@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriterprintln(\"again.\"); writer.println(\"</html>\"); }", "n_tokens": 72, "n_pass": [117, 10, 10]}
{"time": "2021-02-24 02:56:51.789256", "score": "0.6015", "loss": "11.8109", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriterprintln(\"again.\"); writer.println(\"</html>\"); }", "n_tokens": 69, "n_pass": [120, 11, 11]}
{"time": "2021-02-24 02:56:54.139698", "score": "0.5452", "loss": "11.7782", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html; charset=\" + CHARSET); PrintWriterprintln(\"again.\"); writer.println(\"</html>\"); }", "n_tokens": 66, "n_pass": [127, 12, 12]}
{"time": "2021-02-24 02:56:56.004584", "score": "0.5475", "loss": "11.3005", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); PrintWriterprintln(\"again.\"); writer.println(\"</html>\"); }", "n_tokens": 62, "n_pass": [131, 13, 13]}
{"time": "2021-02-24 02:57:00.092864", "score": "0.5409", "loss": "11.2962", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"again.\"); writer.println(\"</html>\"); }", "n_tokens": 60, "n_pass": [187, 14, 14]}
{"time": "2021-02-24 02:57:01.967501", "score": "0.4886", "loss": "11.2966", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"\"); writer.println(\"</html>\"); }", "n_tokens": 58, "n_pass": [188, 15, 15]}
{"time": "2021-02-24 02:57:03.844871", "score": "0.5469", "loss": "11.2894", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"\"); println(\"</html>\"); }", "n_tokens": 56, "n_pass": [191, 16, 16]}
{"time": "2021-02-24 02:57:05.687852", "score": "0.4197", "loss": "10.3356", "code": "protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 54, "n_pass": [194, 17, 17]}
{"time": "2021-02-24 02:57:07.560821", "score": "0.4197", "loss": "10.3356", "code": " void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 53, "n_pass": [198, 18, 18]}
{"time": "2021-02-24 02:57:09.410746", "score": "0.4197", "loss": "10.3356", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { response.setContentType(\"text/html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 52, "n_pass": [199, 19, 19]}
{"time": "2021-02-24 02:57:12.323581", "score": "0.453", "loss": "10.2603", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"text/html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 50, "n_pass": [212, 20, 20]}
{"time": "2021-02-24 02:57:23.304336", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"/html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 49, "n_pass": [287, 22, 21]}
{"time": "2021-02-24 02:57:25.147938", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\" + CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 48, "n_pass": [288, 23, 22]}
{"time": "2021-02-24 02:57:28.819460", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+ CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 47, "n_pass": [291, 25, 23]}
{"time": "2021-02-24 02:57:30.633339", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET); (\"\"); println(\"<>\"); }", "n_tokens": 46, "n_pass": [293, 26, 24]}
{"time": "2021-02-24 02:57:32.559607", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\"); println(\"<>\"); }", "n_tokens": 45, "n_pass": [297, 27, 25]}
{"time": "2021-02-24 02:57:34.418088", "score": "0.4293", "loss": "10.145", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\"<>\"); }", "n_tokens": 44, "n_pass": [303, 28, 26]}
{"time": "2021-02-24 02:57:38.115900", "score": "0.5627", "loss": "10.8922", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\">\"); }", "n_tokens": 43, "n_pass": [307, 30, 27]}
{"time": "2021-02-24 02:57:39.932027", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\"\"); }", "n_tokens": 42, "n_pass": [308, 31, 28]}
{"time": "2021-02-24 02:57:41.798536", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request, HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 41, "n_pass": [312, 32, 29]}
{"time": "2021-02-24 02:57:44.566088", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request,HttpServletResponse response) throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 40, "n_pass": [322, 33, 30]}
{"time": "2021-02-24 02:57:46.391619", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request,HttpServletResponse response)throws ServletException { setContentType(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 39, "n_pass": [327, 34, 31]}
{"time": "2021-02-24 02:57:48.244140", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{ setContentType(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 38, "n_pass": [331, 35, 32]}
{"time": "2021-02-24 02:57:50.107132", "score": "0.5632", "loss": "10.9746", "code": "void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{setContentType(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 37, "n_pass": [333, 36, 33]}
{"time": "2021-02-24 02:57:51.946878", "score": "0.626", "loss": "10.6772", "code": "void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{(\"html\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 36, "n_pass": [334, 37, 34]}
{"time": "2021-02-24 02:57:53.822832", "score": "0.6637", "loss": "10.4615", "code": "void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{(\"\"+CHARSET);(\"\");println(\"\");}", "n_tokens": 35, "n_pass": [337, 38, 35]}

Minimal simplified code:
void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{(""+CHARSET);("");println("");}

