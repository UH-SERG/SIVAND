
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/org/droidplanner/services/android/impl/core/helpers/geoTools/LineTools_findExternalPoints.java
method_name = findExternalPoints
method_body = public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLong meanCoord = new CoordBounds(crosses).getMiddle(); LatLong start = PointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }
predict, score, loss = findNearestPoint, 0.615460216999054, 16.955490112304688

Trace of simplified code(s):
{"time": "2021-02-24 11:13:38.488979", "score": "0.6155", "loss": "16.9555", "code": "public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLong meanCoord = new CoordBounds(crosses).getMiddle(); LatLong start = PointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:13:40.454493", "score": "0.6421", "loss": "17.2995", "code": "public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLong .getMiddle(); LatLong start = PointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }", "n_tokens": 74, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 11:13:42.355537", "score": "0.5754", "loss": "16.9694", "code": "public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLong = PointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }", "n_tokens": 64, "n_pass": [23, 3, 3]}
{"time": "2021-02-24 11:13:50.414840", "score": "0.5624", "loss": "18.084", "code": "public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }", "n_tokens": 61, "n_pass": [79, 7, 4]}
{"time": "2021-02-24 11:13:58.027215", "score": "0.5807", "loss": "16.29", "code": "public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start);new LineLatLong(start, end); }", "n_tokens": 58, "n_pass": [89, 11, 5]}
{"time": "2021-02-24 11:13:59.922270", "score": "0.5807", "loss": "16.29", "code": "static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start);new LineLatLong(start, end); }", "n_tokens": 56, "n_pass": [94, 12, 6]}
{"time": "2021-02-24 11:14:01.785492", "score": "0.5807", "loss": "16.29", "code": "LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start);new LineLatLong(start, end); }", "n_tokens": 54, "n_pass": [95, 13, 7]}
{"time": "2021-02-24 11:14:06.030026", "score": "0.5336", "loss": "16.01", "code": "LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong= PointTools.findFarthestPoint(crosses, start);new LineLatLong(start, end); }", "n_tokens": 51, "n_pass": [107, 15, 8]}
{"time": "2021-02-24 11:14:07.903760", "score": "0.461", "loss": "15.9349", "code": "LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(crosses, start);new LineLatLong(start, end); }", "n_tokens": 48, "n_pass": [108, 16, 9]}
{"time": "2021-02-24 11:14:09.773916", "score": "0.5263", "loss": "15.533", "code": "LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 45, "n_pass": [110, 17, 10]}
{"time": "2021-02-24 11:14:24.943039", "score": "0.5263", "loss": "15.533", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses) { LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 44, "n_pass": [180, 23, 11]}
{"time": "2021-02-24 11:14:26.806351", "score": "0.5263", "loss": "15.533", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){ LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 43, "n_pass": [182, 24, 12]}
{"time": "2021-02-24 11:14:28.678244", "score": "0.5263", "loss": "15.533", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){LatLongPointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 42, "n_pass": [184, 25, 13]}
{"time": "2021-02-24 11:14:30.573154", "score": "0.5076", "loss": "15.6989", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses, meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 41, "n_pass": [185, 26, 14]}
{"time": "2021-02-24 11:14:34.289078", "score": "0.5076", "loss": "15.6989", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses,meanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 40, "n_pass": [192, 28, 15]}
{"time": "2021-02-24 11:14:45.151229", "score": "0.5305", "loss": "15.5749", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crossesmeanCoord); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 39, "n_pass": [221, 33, 16]}
{"time": "2021-02-24 11:14:47.012001", "score": "0.5264", "loss": "15.8347", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses); LatLong.findFarthestPoint(start);new LineLatLong(start, end); }", "n_tokens": 38, "n_pass": [222, 34, 17]}
{"time": "2021-02-24 11:15:07.962856", "score": "0.5264", "loss": "15.8347", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses); LatLong.findFarthestPoint(start);new LineLatLong(start,end); }", "n_tokens": 37, "n_pass": [282, 43, 18]}
{"time": "2021-02-24 11:15:09.821651", "score": "0.5264", "loss": "15.8347", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses); LatLong.findFarthestPoint(start);new LineLatLong(start,end);}", "n_tokens": 36, "n_pass": [285, 44, 19]}
{"time": "2021-02-24 11:15:16.699232", "score": "0.5264", "loss": "15.8347", "code": "LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses);LatLong.findFarthestPoint(start);new LineLatLong(start,end);}", "n_tokens": 35, "n_pass": [305, 47, 20]}

Minimal simplified code:
LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses);LatLong.findFarthestPoint(start);new LineLatLong(start,end);}

