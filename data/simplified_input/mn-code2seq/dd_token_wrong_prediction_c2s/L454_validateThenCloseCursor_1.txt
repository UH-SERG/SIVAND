
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S12.01-Solution-DimensionsColorsAndFonts/app/src/androidTest/java/com/example/android/sunshine/data/TestUtilities_validateThenCloseCursor.java
method_name = validateThenCloseCursor
method_body = static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull("This cursor is null. Did you make sure to register your ContentProvider in the manifest?", valueCursor); assertTrue("Empty cursor returned. " + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }
predict, score, loss = assertCursorError, 0.6129589080810547, 29.381486892700195

Trace of simplified code(s):
{"time": "2021-02-24 05:07:32.152988", "score": "0.613", "loss": "29.3815", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\"This cursor is null. Did you make sure to register your ContentProvider in the manifest?\", valueCursor); assertTrue(\"Empty cursor returned. \" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:07:35.894268", "score": "0.462", "loss": "26.5187", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\"make sure to register your ContentProvider in the manifest?\", valueCursor); assertTrue(\"Empty cursor returned. \" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }", "n_tokens": 96, "n_pass": [22, 3, 2]}
{"time": "2021-02-24 05:07:41.621426", "score": "0.5677", "loss": "28.9631", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" your ContentProvider in the manifest?\", valueCursor); assertTrue(\"Empty cursor returned. \" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }", "n_tokens": 89, "n_pass": [44, 6, 3]}
{"time": "2021-02-24 05:07:43.498558", "score": "0.4834", "loss": "27.4645", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" your ContentProvider in the manifest?\", valueCursor); assertTrue(\"\" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }", "n_tokens": 82, "n_pass": [47, 7, 4]}
{"time": "2021-02-24 05:07:47.338503", "score": "0.5167", "loss": "27.5179", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" your ContentProvider in the manifest?\", valueCursor); assertTrue( error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }", "n_tokens": 78, "n_pass": [85, 9, 5]}
{"time": "2021-02-24 05:07:51.184918", "score": "0.5195", "loss": "26.8416", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" your ContentProvider in the manifest?\", valueCursor); assertTrue( error, valueCursor.moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 74, "n_pass": [90, 11, 6]}
{"time": "2021-02-24 05:07:57.317215", "score": "0.5371", "loss": "27.0265", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" your ContentProvider in ?\", valueCursor); assertTrue( error, valueCursor.moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 71, "n_pass": [105, 14, 7]}
{"time": "2021-02-24 05:08:01.559533", "score": "0.5274", "loss": "26.4452", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\"  in ?\", valueCursor); assertTrue( error, valueCursor.moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 68, "n_pass": [125, 16, 8]}
{"time": "2021-02-24 05:08:03.457926", "score": "0.5231", "loss": "26.6713", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" ?\", valueCursor); assertTrue( error, valueCursor.moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 65, "n_pass": [126, 17, 9]}
{"time": "2021-02-24 05:08:12.585434", "score": "0.4663", "loss": "26.9214", "code": "static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 63, "n_pass": [192, 20, 10]}
{"time": "2021-02-24 05:08:18.323201", "score": "0.4663", "loss": "26.9214", "code": " void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 62, "n_pass": [203, 23, 11]}
{"time": "2021-02-24 05:08:20.206945", "score": "0.4663", "loss": "26.9214", "code": "void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 61, "n_pass": [204, 24, 12]}
{"time": "2021-02-24 05:08:22.965674", "score": "0.4663", "loss": "26.9214", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues) { assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 60, "n_pass": [213, 25, 13]}
{"time": "2021-02-24 05:08:38.596695", "score": "0.4663", "loss": "26.9214", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){ assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 59, "n_pass": [303, 29, 14]}
{"time": "2021-02-24 05:08:40.451378", "score": "0.4663", "loss": "26.9214", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\" ?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 58, "n_pass": [305, 30, 15]}
{"time": "2021-02-24 05:08:42.370298", "score": "0.4663", "loss": "26.9214", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"?\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 57, "n_pass": [309, 31, 16]}
{"time": "2021-02-24 05:08:44.237455", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\", valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 56, "n_pass": [310, 32, 17]}
{"time": "2021-02-24 05:08:46.104695", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor); assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 55, "n_pass": [313, 33, 18]}
{"time": "2021-02-24 05:08:47.980576", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue( error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 54, "n_pass": [317, 34, 19]}
{"time": "2021-02-24 05:08:49.863529", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error, moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 53, "n_pass": [320, 35, 20]}
{"time": "2021-02-24 05:08:51.721070", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error,moveToFirst()); validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 52, "n_pass": [323, 36, 21]}
{"time": "2021-02-24 05:08:53.593592", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues); valueCursor.close(); }", "n_tokens": 51, "n_pass": [329, 37, 22]}
{"time": "2021-02-24 05:08:57.308980", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues);valueCursor.close(); }", "n_tokens": 50, "n_pass": [337, 39, 23]}
{"time": "2021-02-24 05:09:01.041761", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor, ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues);valueCursor.close();}", "n_tokens": 49, "n_pass": [344, 41, 24]}
{"time": "2021-02-24 05:09:03.840452", "score": "0.4387", "loss": "26.9618", "code": "void validateThenCloseCursor(String error,Cursor valueCursor,ContentValues expectedValues){assertNotNull(\"\",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues);valueCursor.close();}", "n_tokens": 48, "n_pass": [358, 42, 25]}

Minimal simplified code:
void validateThenCloseCursor(String error,Cursor valueCursor,ContentValues expectedValues){assertNotNull("",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues);valueCursor.close();}

