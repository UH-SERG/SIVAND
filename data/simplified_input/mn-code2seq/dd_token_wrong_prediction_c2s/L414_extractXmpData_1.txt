
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/drewnoakes__metadata-extractor/Source/com/drew/metadata/eps/EpsReader_extractXmpData.java
method_name = extractXmpData
method_body = private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, "<?xpacket end=\"w\"?>".getBytes()); String xmp = new String(bytes, Charsets.UTF_8); new XmpReader().extract(xmp, metadata); }
predict, score, loss = extractMetadata, 0.8132967352867126, 10.754128456115723

Trace of simplified code(s):
{"time": "2021-02-24 08:42:18.834463", "score": "0.8133", "loss": "10.7541", "code": "private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, \"<?xpacket end=\\\"w\\\"?>\".getBytes()); String xmp = new String(bytes, Charsets.UTF_8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 104, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:42:23.216519", "score": "0.8273", "loss": "10.7839", "code": "private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, \"<?\\\"?>\".getBytes()); String xmp = new String(bytes, Charsets.UTF_8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 97, "n_pass": [52, 3, 2]}
{"time": "2021-02-24 08:42:29.466248", "score": "0.8179", "loss": "10.6772", "code": "private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, \"<?>\".getBytes()); String xmp = new String(bytes, Charsets.UTF_8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 94, "n_pass": [98, 6, 3]}
{"time": "2021-02-24 08:42:31.423702", "score": "0.7937", "loss": "11.1638", "code": "private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, \"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 90, "n_pass": [106, 7, 4]}
{"time": "2021-02-24 08:42:37.158810", "score": "0.7937", "loss": "11.1638", "code": " void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, \"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 87, "n_pass": [112, 10, 5]}
{"time": "2021-02-24 08:42:43.409413", "score": "0.7665", "loss": "11.2221", "code": " void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(\"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 84, "n_pass": [126, 13, 6]}
{"time": "2021-02-24 08:42:49.688739", "score": "0.6837", "loss": "10.9267", "code": " void extractXmpData(@NotNull final Metadata metadata, SequentialReader reader) throws IOException { byte[] bytes = readUntil(\"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 81, "n_pass": [145, 16, 7]}
{"time": "2021-02-24 08:43:01.247900", "score": "0.6837", "loss": "10.9267", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes = readUntil(\"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 80, "n_pass": [225, 20, 8]}
{"time": "2021-02-24 08:43:05.135174", "score": "0.7578", "loss": "10.2428", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\"<?>\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 78, "n_pass": [237, 22, 9]}
{"time": "2021-02-24 08:43:07.038554", "score": "0.7748", "loss": "10.9138", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = new String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 76, "n_pass": [239, 23, 10]}
{"time": "2021-02-24 08:43:14.744220", "score": "0.8782", "loss": "11.3861", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes, 8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 74, "n_pass": [247, 27, 11]}
{"time": "2021-02-24 08:43:16.666101", "score": "0.8737", "loss": "11.4319", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); new XmpReader().extract(xmp, metadata); }", "n_tokens": 72, "n_pass": [250, 28, 12]}
{"time": "2021-02-24 08:43:18.594729", "score": "0.8796", "loss": "10.7413", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract(xmp, metadata); }", "n_tokens": 70, "n_pass": [253, 29, 13]}
{"time": "2021-02-24 08:43:20.499767", "score": "0.7705", "loss": "13.3207", "code": " void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 68, "n_pass": [257, 30, 14]}
{"time": "2021-02-24 08:43:24.307698", "score": "0.7705", "loss": "13.3207", "code": "void extractXmpData(@NotNull final Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 67, "n_pass": [261, 32, 15]}
{"time": "2021-02-24 08:43:27.103125", "score": "0.745", "loss": "13.0573", "code": "void extractXmpData(@NotNullfinal Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 66, "n_pass": [268, 33, 16]}
{"time": "2021-02-24 08:43:28.964902", "score": "0.7705", "loss": "13.3207", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte[] bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 65, "n_pass": [269, 34, 17]}
{"time": "2021-02-24 08:43:30.861868", "score": "0.8105", "loss": "13.0355", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\".getBytes()); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 63, "n_pass": [283, 35, 18]}
{"time": "2021-02-24 08:43:32.840413", "score": "0.8464", "loss": "12.722", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\".getBytes); String xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 61, "n_pass": [289, 36, 19]}
{"time": "2021-02-24 08:43:34.748326", "score": "0.8788", "loss": "10.6132", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\".getBytes); xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 59, "n_pass": [291, 37, 20]}
{"time": "2021-02-24 08:43:43.259552", "score": "0.8661", "loss": "10.4549", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\"); xmp = String(bytes8); XmpReader().extract( metadata); }", "n_tokens": 57, "n_pass": [327, 41, 21]}
{"time": "2021-02-24 08:43:45.169660", "score": "0.8855", "loss": "10.4311", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\"); xmp =(bytes8); XmpReader().extract( metadata); }", "n_tokens": 55, "n_pass": [331, 42, 22]}
{"time": "2021-02-24 08:43:47.034573", "score": "0.5456", "loss": "7.3608", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { byte bytes =(\">\"); xmp =(bytes8)XmpReader().extract( metadata); }", "n_tokens": 53, "n_pass": [334, 43, 23]}
{"time": "2021-02-24 08:43:51.691481", "score": "0.4824", "loss": "10.0197", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { bytes =(\">\"); xmp =(bytes8)XmpReader().extract( metadata); }", "n_tokens": 51, "n_pass": [359, 45, 24]}
{"time": "2021-02-24 08:43:53.534130", "score": "0.7192", "loss": "9.3166", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException { bytes(\">\"); xmp =(bytes8)XmpReader().extract( metadata); }", "n_tokens": 49, "n_pass": [361, 46, 25]}
{"time": "2021-02-24 08:43:58.207534", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\"); xmp =(bytes8)XmpReader().extract( metadata); }", "n_tokens": 47, "n_pass": [393, 48, 26]}
{"time": "2021-02-24 08:44:06.723082", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\");xmp =(bytes8)XmpReader().extract( metadata); }", "n_tokens": 46, "n_pass": [457, 50, 27]}
{"time": "2021-02-24 08:44:08.556440", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\");xmp=(bytes8)XmpReader().extract( metadata); }", "n_tokens": 45, "n_pass": [458, 51, 28]}
{"time": "2021-02-24 08:44:10.428505", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\");xmp=(bytes)XmpReader().extract( metadata); }", "n_tokens": 44, "n_pass": [462, 52, 29]}
{"time": "2021-02-24 08:44:12.267575", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\");xmp=(bytes)XmpReader().extract(metadata); }", "n_tokens": 43, "n_pass": [470, 53, 30]}
{"time": "2021-02-24 08:44:16.015836", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader) throws IOException {(\">\");xmp=(bytes)XmpReader().extract(metadata);}", "n_tokens": 42, "n_pass": [474, 55, 31]}
{"time": "2021-02-24 08:44:18.823893", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader)throws IOException {(\">\");xmp=(bytes)XmpReader().extract(metadata);}", "n_tokens": 41, "n_pass": [491, 56, 32]}
{"time": "2021-02-24 08:44:20.667563", "score": "0.6782", "loss": "8.5387", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader)throws IOException{(\">\");xmp=(bytes)XmpReader().extract(metadata);}", "n_tokens": 40, "n_pass": [495, 57, 33]}
{"time": "2021-02-24 08:44:22.562990", "score": "0.6716", "loss": "7.5165", "code": "void extractXmpData(@NotNull Metadata metadata,SequentialReader reader)throws IOException{(\"\");xmp=(bytes)XmpReader().extract(metadata);}", "n_tokens": 39, "n_pass": [499, 58, 34]}

Minimal simplified code:
void extractXmpData(@NotNull Metadata metadata,SequentialReader reader)throws IOException{("");xmp=(bytes)XmpReader().extract(metadata);}

