
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/test/java/org/bouncycastle/asn1/test/RestrictionUnitTest_checkConstruction.java
method_name = checkConstruction
method_body = private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }
predict, score, loss = check, 0.9039185047149658, 11.213781356811523

Trace of simplified code(s):
{"time": "2021-02-24 03:22:08.223922", "score": "0.8452", "loss": "11.2633", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 123, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:22:10.195030", "score": "0.7971", "loss": "11.2761", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 92, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 03:22:12.095650", "score": "0.7394", "loss": "11.1132", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 84, "n_pass": [36, 3, 3]}
{"time": "2021-02-24 03:22:13.993694", "score": "0.6256", "loss": "11.2547", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 76, "n_pass": [37, 4, 4]}
{"time": "2021-02-24 03:22:17.814217", "score": "0.9021", "loss": "11.0891", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); ASN1String str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(restriction, res); }", "n_tokens": 72, "n_pass": [73, 6, 5]}
{"time": "2021-02-24 03:22:20.152478", "score": "0.4913", "loss": "11.7761", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res()); ASN1String str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 68, "n_pass": [78, 7, 6]}
{"time": "2021-02-24 03:22:22.466315", "score": "0.3828", "loss": "12.4823", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res()); ASN1String str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 64, "n_pass": [85, 8, 7]}
{"time": "2021-02-24 03:22:30.752484", "score": "0.4343", "loss": "12.1812", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN1String str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 62, "n_pass": [141, 11, 8]}
{"time": "2021-02-24 03:22:32.656689", "score": "0.4534", "loss": "12.144", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (ASN1String) aIn; restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 60, "n_pass": [143, 12, 9]}
{"time": "2021-02-24 03:22:38.309360", "score": "0.5143", "loss": "12.229", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (ASN1String); restriction = Restriction.getInstance(str); checkValues(); }", "n_tokens": 58, "n_pass": [149, 15, 10]}
{"time": "2021-02-24 03:22:40.690406", "score": "0.5408", "loss": "12.0861", "code": "private void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 56, "n_pass": [153, 16, 11]}
{"time": "2021-02-24 03:22:42.600698", "score": "0.5408", "loss": "12.0861", "code": " void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 55, "n_pass": [160, 17, 12]}
{"time": "2021-02-24 03:22:44.470515", "score": "0.5408", "loss": "12.0861", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (ASN1String); restriction = getInstance(str); checkValues(); }", "n_tokens": 54, "n_pass": [161, 18, 13]}
{"time": "2021-02-24 03:22:52.842854", "score": "0.5905", "loss": "11.9699", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String); restriction = getInstance(str); checkValues(); }", "n_tokens": 52, "n_pass": [179, 22, 14]}
{"time": "2021-02-24 03:23:10.215633", "score": "0.5905", "loss": "11.9699", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction = getInstance(str); checkValues(); }", "n_tokens": 51, "n_pass": [260, 26, 15]}
{"time": "2021-02-24 03:23:12.107145", "score": "0.5905", "loss": "11.9699", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction= getInstance(str); checkValues(); }", "n_tokens": 50, "n_pass": [262, 27, 16]}
{"time": "2021-02-24 03:23:13.998051", "score": "0.5905", "loss": "11.9699", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=getInstance(str); checkValues(); }", "n_tokens": 49, "n_pass": [264, 28, 17]}
{"time": "2021-02-24 03:23:15.877314", "score": "0.7814", "loss": "11.7822", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=(str); checkValues(); }", "n_tokens": 48, "n_pass": [265, 29, 18]}
{"time": "2021-02-24 03:23:17.767008", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=(str) checkValues(); }", "n_tokens": 47, "n_pass": [269, 30, 19]}
{"time": "2021-02-24 03:23:19.665042", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=(str)checkValues(); }", "n_tokens": 46, "n_pass": [270, 31, 20]}
{"time": "2021-02-24 03:23:21.562296", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction, DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 45, "n_pass": [275, 32, 21]}
{"time": "2021-02-24 03:23:24.350135", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res) { checkValues(restriction, res); ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 44, "n_pass": [285, 33, 22]}
{"time": "2021-02-24 03:23:26.262591", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){ checkValues(restriction, res); ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 43, "n_pass": [290, 34, 23]}
{"time": "2021-02-24 03:23:28.171325", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction, res); ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 42, "n_pass": [292, 35, 24]}
{"time": "2021-02-24 03:23:30.077052", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res); ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 41, "n_pass": [297, 36, 25]}
{"time": "2021-02-24 03:23:31.951377", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);ASN str = (String);restriction=(str)checkValues();}", "n_tokens": 40, "n_pass": [301, 37, 26]}
{"time": "2021-02-24 03:23:39.416789", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);ASN str= (String);restriction=(str)checkValues();}", "n_tokens": 39, "n_pass": [305, 41, 27]}
{"time": "2021-02-24 03:23:41.331026", "score": "0.7416", "loss": "11.8814", "code": "void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);ASN str=(String);restriction=(str)checkValues();}", "n_tokens": 38, "n_pass": [307, 42, 28]}

Minimal simplified code:
void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);ASN str=(String);restriction=(str)checkValues();}

