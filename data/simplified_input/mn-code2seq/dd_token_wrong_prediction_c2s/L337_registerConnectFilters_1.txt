
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/nio/src/main/java/org/kaazing/gateway/transport/nio/internal/datagram/NioDatagramConnector_registerConnectFilters.java
method_name = registerConnectFilters
method_body = @Override protected void registerConnectFilters(ResourceAddress address, IoSession session) { int align = address.getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst("udp.padding.alignment", new UdpAlignFilter(logger, align, session)); } }
predict, score, loss = addAlign, 0.39584922790527344, 15.100189208984375

Trace of simplified code(s):
{"time": "2021-02-24 08:54:35.727012", "score": "0.3958", "loss": "15.1002", "code": "@Override protected void registerConnectFilters(ResourceAddress address, IoSession session) { int align = address.getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:54:37.686689", "score": "0.7159", "loss": "18.0085", "code": "void registerConnectFilters(ResourceAddress address, IoSession session) { int align = address.getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 81, "n_pass": [44, 2, 2]}
{"time": "2021-02-24 08:54:39.560831", "score": "0.6132", "loss": "19.0406", "code": "void registerConnectFilters(ResourceAddress session) { int align = address.getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 76, "n_pass": [45, 3, 3]}
{"time": "2021-02-24 08:54:43.374102", "score": "0.5229", "loss": "21.7322", "code": "void registerConnectFilters(ResourceAddress session) { int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 73, "n_pass": [94, 5, 4]}
{"time": "2021-02-24 08:54:47.225838", "score": "0.5302", "loss": "22.3539", "code": "void registerConnectFilters(ResourceAddress session) { int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) { session.getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 70, "n_pass": [100, 7, 5]}
{"time": "2021-02-24 08:54:49.110780", "score": "0.5398", "loss": "22.4762", "code": "void registerConnectFilters(ResourceAddress session) { int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, align, session)); } }", "n_tokens": 67, "n_pass": [102, 8, 6]}
{"time": "2021-02-24 08:54:52.872302", "score": "0.4961", "loss": "21.0743", "code": "void registerConnectFilters(ResourceAddress session) { int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(logger, session)); } }", "n_tokens": 64, "n_pass": [110, 10, 7]}
{"time": "2021-02-24 08:55:05.109710", "score": "0.4535", "loss": "22.073", "code": "void registerConnectFilters(ResourceAddress session) { int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 62, "n_pass": [184, 14, 8]}
{"time": "2021-02-24 08:55:07.918840", "score": "0.4535", "loss": "22.073", "code": "void registerConnectFilters(ResourceAddress session){ int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 61, "n_pass": [197, 15, 9]}
{"time": "2021-02-24 08:55:09.780733", "score": "0.4535", "loss": "22.073", "code": "void registerConnectFilters(ResourceAddress session){int align =getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 60, "n_pass": [199, 16, 10]}
{"time": "2021-02-24 08:55:15.339084", "score": "0.4535", "loss": "22.073", "code": "void registerConnectFilters(ResourceAddress session){int align=getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 59, "n_pass": [203, 19, 11]}
{"time": "2021-02-24 08:55:17.230111", "score": "0.541", "loss": "21.2431", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.PADDING_ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 58, "n_pass": [205, 20, 12]}
{"time": "2021-02-24 08:55:20.955913", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress._ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 57, "n_pass": [209, 22, 13]}
{"time": "2021-02-24 08:55:22.809664", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT); if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 56, "n_pass": [210, 23, 14]}
{"time": "2021-02-24 08:55:24.647601", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if (align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 55, "n_pass": [214, 24, 15]}
{"time": "2021-02-24 08:55:26.523595", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align ) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 54, "n_pass": [216, 25, 16]}
{"time": "2021-02-24 08:55:28.381955", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.padding.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 53, "n_pass": [219, 26, 17]}
{"time": "2021-02-24 08:55:30.271304", "score": "0.5939", "loss": "18.2233", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", new UdpAlignFilter(loggersession)); } }", "n_tokens": 51, "n_pass": [226, 27, 18]}
{"time": "2021-02-24 08:55:34.027118", "score": "0.5266", "loss": "18.8696", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter(loggersession)); } }", "n_tokens": 49, "n_pass": [229, 29, 19]}
{"time": "2021-02-24 08:55:48.275777", "score": "0.5101", "loss": "18.6937", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter(session)); } }", "n_tokens": 48, "n_pass": [292, 35, 20]}
{"time": "2021-02-24 08:55:50.192363", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter()); } }", "n_tokens": 47, "n_pass": [293, 36, 21]}
{"time": "2021-02-24 08:55:52.051901", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter());} }", "n_tokens": 46, "n_pass": [297, 37, 22]}
{"time": "2021-02-24 08:55:53.957914", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align) {getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter());}}", "n_tokens": 45, "n_pass": [299, 38, 23]}
{"time": "2021-02-24 08:56:02.337455", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align){getFilterChain().addFirst(\"udp.alignment\", UdpAlignFilter());}}", "n_tokens": 44, "n_pass": [324, 42, 24]}
{"time": "2021-02-24 08:56:06.123926", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align){getFilterChain().addFirst(\"udpalignment\", UdpAlignFilter());}}", "n_tokens": 43, "n_pass": [334, 44, 25]}
{"time": "2021-02-24 08:56:09.877904", "score": "0.5602", "loss": "19.2089", "code": "void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align){getFilterChain().addFirst(\"udpalignment\",UdpAlignFilter());}}", "n_tokens": 42, "n_pass": [338, 46, 26]}

Minimal simplified code:
void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align){getFilterChain().addFirst("udpalignment",UdpAlignFilter());}}

