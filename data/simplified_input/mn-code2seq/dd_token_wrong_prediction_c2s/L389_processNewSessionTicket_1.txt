
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/tls/src/main/java/org/bouncycastle/tls/DTLSClientProtocol_processNewSessionTicket.java
method_name = processNewSessionTicket
method_body = protected void processNewSessionTicket(ClientHandshakeState state, byte[] body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket.parse(buf); TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }
predict, score, loss = assertNewSessionTicket, 0.6729159951210022, 6.952337741851807

Trace of simplified code(s):
{"time": "2021-02-24 10:19:31.362986", "score": "0.6729", "loss": "6.9523", "code": "protected void processNewSessionTicket(ClientHandshakeState state, byte[] body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket.parse(buf); TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 10:19:38.073510", "score": "0.6286", "loss": "7.6611", "code": "protected void processNewSessionTicket(ClientHandshakeState state, byte[] body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket. TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 66, "n_pass": [55, 4, 2]}
{"time": "2021-02-24 10:19:40.409757", "score": "0.5945", "loss": "7.6438", "code": "protected void processNewSessionTicket(ClientHandshakeState [] body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket. TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 62, "n_pass": [62, 5, 3]}
{"time": "2021-02-24 10:19:43.646503", "score": "0.6578", "loss": "7.1344", "code": "protected void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket. TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 60, "n_pass": [105, 6, 4]}
{"time": "2021-02-24 10:19:49.320097", "score": "0.6718", "loss": "6.739", "code": "protected void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket. TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 58, "n_pass": [113, 9, 5]}
{"time": "2021-02-24 10:19:55.019881", "score": "0.6931", "loss": "6.684", "code": "protected void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 56, "n_pass": [120, 12, 6]}
{"time": "2021-02-24 10:19:56.910478", "score": "0.7152", "loss": "6.4912", "code": "protected void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);client.notifyNewSessionTicket(newSessionTicket); }", "n_tokens": 53, "n_pass": [124, 13, 7]}
{"time": "2021-02-24 10:19:58.820044", "score": "0.5832", "loss": "7.8001", "code": "protected void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 50, "n_pass": [125, 14, 8]}
{"time": "2021-02-24 10:20:02.572068", "score": "0.5832", "loss": "7.8001", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { ByteArrayInputStream buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 48, "n_pass": [128, 16, 9]}
{"time": "2021-02-24 10:20:04.883184", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf = ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 46, "n_pass": [137, 17, 10]}
{"time": "2021-02-24 10:20:19.097650", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf= ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 45, "n_pass": [202, 21, 11]}
{"time": "2021-02-24 10:20:20.944634", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf=ByteArrayInputStream(body); NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 44, "n_pass": [204, 22, 12]}
{"time": "2021-02-24 10:20:26.540644", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket =  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 43, "n_pass": [210, 25, 13]}
{"time": "2021-02-24 10:20:34.021619", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=  TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 42, "n_pass": [214, 29, 14]}
{"time": "2021-02-24 10:20:35.885245", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket= TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 41, "n_pass": [216, 30, 15]}
{"time": "2021-02-24 10:20:37.785797", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState  body) throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 40, "n_pass": [217, 31, 16]}
{"time": "2021-02-24 10:20:44.453195", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState body) throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 39, "n_pass": [232, 34, 17]}
{"time": "2021-02-24 10:20:46.347928", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState body)throws IOException { buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 38, "n_pass": [236, 35, 18]}
{"time": "2021-02-24 10:20:48.219938", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState body)throws IOException{ buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 37, "n_pass": [240, 36, 19]}
{"time": "2021-02-24 10:20:50.092131", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState body)throws IOException{buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket); }", "n_tokens": 36, "n_pass": [242, 37, 20]}
{"time": "2021-02-24 10:21:09.253286", "score": "0.4837", "loss": "7.9088", "code": "void processNewSessionTicket(ClientHandshakeState body)throws IOException{buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket);}", "n_tokens": 35, "n_pass": [289, 46, 21]}

Minimal simplified code:
void processNewSessionTicket(ClientHandshakeState body)throws IOException{buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket);}

