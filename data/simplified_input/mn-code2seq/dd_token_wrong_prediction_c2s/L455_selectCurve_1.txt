
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/tls/src/main/java/org/bouncycastle/jsse/provider/ProvTlsServer_selectCurve.java
method_name = selectCurve
method_body = @Override protected int selectCurve(int minimumCurveBits) { if (clientSupportedGroups == null) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }
predict, score, loss = getServerSelectedCurve, 0.7261459231376648, 16.7420654296875

Trace of simplified code(s):
{"time": "2021-02-24 03:46:48.264380", "score": "0.7261", "loss": "16.7421", "code": "@Override protected int selectCurve(int minimumCurveBits) { if (clientSupportedGroups == null) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 73, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:46:50.176896", "score": "0.6914", "loss": "16.9394", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroups == null) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 69, "n_pass": [44, 2, 2]}
{"time": "2021-02-24 03:46:52.073457", "score": "0.6749", "loss": "16.2058", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 65, "n_pass": [49, 3, 3]}
{"time": "2021-02-24 03:46:55.850810", "score": "0.707", "loss": "16.7809", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) { selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 63, "n_pass": [94, 5, 4]}
{"time": "2021-02-24 03:46:57.756634", "score": "0.6829", "loss": "17.4612", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 61, "n_pass": [95, 6, 5]}
{"time": "2021-02-24 03:46:59.618476", "score": "0.5867", "loss": "17.6291", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }", "n_tokens": 59, "n_pass": [99, 7, 6]}
{"time": "2021-02-24 03:47:03.336809", "score": "0.6164", "loss": "18.6734", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 56, "n_pass": [109, 9, 7]}
{"time": "2021-02-24 03:47:05.694228", "score": "0.4912", "loss": "15.3189", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFips();SupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 53, "n_pass": [131, 10, 8]}
{"time": "2021-02-24 03:47:08.044921", "score": "0.3344", "loss": "17.0813", "code": " int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 50, "n_pass": [154, 11, 9]}
{"time": "2021-02-24 03:47:22.784115", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits) { if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 49, "n_pass": [229, 16, 10]}
{"time": "2021-02-24 03:47:25.079084", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){ if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 48, "n_pass": [237, 17, 11]}
{"time": "2021-02-24 03:47:26.928874", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if (clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 47, "n_pass": [239, 18, 12]}
{"time": "2021-02-24 03:47:28.790973", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull) {(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 46, "n_pass": [241, 19, 13]}
{"time": "2021-02-24 03:47:34.398552", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits); } isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 45, "n_pass": [246, 22, 14]}
{"time": "2021-02-24 03:47:36.282033", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);} isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 44, "n_pass": [252, 23, 15]}
{"time": "2021-02-24 03:47:38.157856", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips = manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 43, "n_pass": [254, 24, 16]}
{"time": "2021-02-24 03:47:40.002226", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips= manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 42, "n_pass": [256, 25, 17]}
{"time": "2021-02-24 03:47:41.906893", "score": "0.3344", "loss": "17.0813", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager.getContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 41, "n_pass": [258, 26, 18]}
{"time": "2021-02-24 03:47:43.830151", "score": "0.4103", "loss": "17.4783", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=managergetContext().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 40, "n_pass": [260, 27, 19]}
{"time": "2021-02-24 03:47:45.651684", "score": "0.4283", "loss": "16.9664", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager().isFipsSupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 39, "n_pass": [261, 28, 20]}
{"time": "2021-02-24 03:47:47.561355", "score": "0.4155", "loss": "16.0023", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager().SupportedGroups.getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 38, "n_pass": [265, 29, 21]}
{"time": "2021-02-24 03:47:49.384446", "score": "0.5277", "loss": "15.7552", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager().getServerSelectedCurve(isFips, clientSupportedGroups); }", "n_tokens": 36, "n_pass": [266, 30, 22]}
{"time": "2021-02-24 03:47:51.230658", "score": "0.6255", "loss": "15.1153", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager().getServerSelectedCurve( clientSupportedGroups); }", "n_tokens": 34, "n_pass": [268, 31, 23]}
{"time": "2021-02-24 03:47:53.056637", "score": "0.5353", "loss": "13.8372", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroupsnull){(minimumCurveBits);}isFips=manager().getServerSelectedCurve(); }", "n_tokens": 32, "n_pass": [269, 32, 24]}
{"time": "2021-02-24 03:47:57.588500", "score": "0.498", "loss": "13.7846", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFips=manager().getServerSelectedCurve(); }", "n_tokens": 31, "n_pass": [284, 34, 25]}
{"time": "2021-02-24 03:47:59.420990", "score": "0.6869", "loss": "13.2985", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFipsmanager().getServerSelectedCurve(); }", "n_tokens": 30, "n_pass": [293, 35, 26]}
{"time": "2021-02-24 03:48:01.218756", "score": "0.6566", "loss": "13.2937", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFips().getServerSelectedCurve(); }", "n_tokens": 29, "n_pass": [294, 36, 27]}
{"time": "2021-02-24 03:48:04.789855", "score": "0.6566", "loss": "13.2937", "code": "int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFips().getServerSelectedCurve();}", "n_tokens": 28, "n_pass": [331, 37, 28]}

Minimal simplified code:
int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFips().getServerSelectedCurve();}

