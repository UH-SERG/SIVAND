
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/adamkewley__jobson/src/main/java/com/github/jobson/Helpers_streamBinaryData.java
method_name = streamBinaryData
method_body = public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }
predict, score, loss = newBinaryData, 0.5836786031723022, 7.793525695800781

Trace of simplified code(s):
{"time": "2021-02-23 19:53:18.704262", "score": "0.5837", "loss": "7.7935", "code": "public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 97, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:53:24.984755", "score": "0.5837", "loss": "7.7935", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 94, "n_pass": [92, 4, 2]}
{"time": "2021-02-23 19:53:28.943586", "score": "0.5837", "loss": "7.7935", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 91, "n_pass": [104, 6, 3]}
{"time": "2021-02-23 19:53:38.585994", "score": "0.5959", "loss": "7.01", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { throw new RuntimeException(ex); } }", "n_tokens": 88, "n_pass": [113, 11, 4]}
{"time": "2021-02-23 19:53:40.441974", "score": "0.6046", "loss": "6.8135", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) {  RuntimeException(ex); } }", "n_tokens": 85, "n_pass": [119, 12, 5]}
{"time": "2021-02-23 19:53:57.970231", "score": "0.6009", "loss": "7.0893", "code": " BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 83, "n_pass": [205, 18, 6]}
{"time": "2021-02-23 19:53:59.865895", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 82, "n_pass": [210, 19, 7]}
{"time": "2021-02-23 19:54:03.174245", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType) { try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 81, "n_pass": [219, 20, 8]}
{"time": "2021-02-23 19:54:05.096829", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){ try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 80, "n_pass": [224, 21, 9]}
{"time": "2021-02-23 19:54:06.987231", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try { final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 79, "n_pass": [226, 22, 10]}
{"time": "2021-02-23 19:54:08.922699", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{ final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 78, "n_pass": [228, 23, 11]}
{"time": "2021-02-23 19:54:10.826713", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{final long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 77, "n_pass": [230, 24, 12]}
{"time": "2021-02-23 19:54:12.750805", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{ long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 76, "n_pass": [231, 25, 13]}
{"time": "2021-02-23 19:54:14.717932", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size = Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 75, "n_pass": [232, 26, 14]}
{"time": "2021-02-23 19:54:20.382383", "score": "0.6009", "loss": "7.0893", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= Files.size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 74, "n_pass": [236, 29, 15]}
{"time": "2021-02-23 19:54:22.271041", "score": "0.6317", "loss": "6.8529", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size); } catch (IOException ex) { (ex); } }", "n_tokens": 72, "n_pass": [238, 30, 16]}
{"time": "2021-02-23 19:54:31.828526", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); } catch (IOException ex) { (ex); } }", "n_tokens": 70, "n_pass": [252, 35, 17]}
{"time": "2021-02-23 19:54:54.664061", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch (IOException ex) { (ex); } }", "n_tokens": 69, "n_pass": [350, 42, 18]}
{"time": "2021-02-23 19:54:56.589084", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex) { (ex); } }", "n_tokens": 68, "n_pass": [352, 43, 19]}
{"time": "2021-02-23 19:54:58.540033", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){ (ex); } }", "n_tokens": 67, "n_pass": [358, 44, 20]}
{"time": "2021-02-23 19:55:00.433770", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex); } }", "n_tokens": 66, "n_pass": [360, 45, 21]}
{"time": "2021-02-23 19:55:02.286360", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);} }", "n_tokens": 65, "n_pass": [365, 46, 22]}
{"time": "2021-02-23 19:55:04.177083", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size= size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 64, "n_pass": [367, 47, 23]}
{"time": "2021-02-23 19:55:11.242237", "score": "0.5833", "loss": "6.7234", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 63, "n_pass": [388, 50, 24]}
{"time": "2021-02-23 19:55:16.947444", "score": "0.5919", "loss": "7.1942", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p); dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 62, "n_pass": [394, 53, 25]}
{"time": "2021-02-23 19:55:18.850859", "score": "0.5919", "loss": "7.1942", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream = Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 61, "n_pass": [395, 54, 26]}
{"time": "2021-02-23 19:55:20.764924", "score": "0.5919", "loss": "7.1942", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream= Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 60, "n_pass": [397, 55, 27]}
{"time": "2021-02-23 19:55:22.689388", "score": "0.5919", "loss": "7.1942", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p); return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 59, "n_pass": [399, 56, 28]}
{"time": "2021-02-23 19:55:28.362798", "score": "0.5919", "loss": "7.1942", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p);return new BinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 58, "n_pass": [407, 59, 29]}
{"time": "2021-02-23 19:55:34.039454", "score": "0.8535", "loss": "8.6608", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p);return newBinaryData(dataStreamsize); }catch(IOException ex){(ex);}}", "n_tokens": 57, "n_pass": [411, 62, 30]}
{"time": "2021-02-23 19:55:35.948581", "score": "0.884", "loss": "9.9146", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p);return newBinaryData(size); }catch(IOException ex){(ex);}}", "n_tokens": 56, "n_pass": [414, 63, 31]}
{"time": "2021-02-23 19:55:37.842978", "score": "0.8217", "loss": "7.5945", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p);return newBinaryData(); }catch(IOException ex){(ex);}}", "n_tokens": 55, "n_pass": [415, 64, 32]}
{"time": "2021-02-23 19:55:39.726614", "score": "0.8217", "loss": "7.5945", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{long size=size(p);dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 54, "n_pass": [418, 65, 33]}
{"time": "2021-02-23 19:55:43.010851", "score": "0.8103", "loss": "9.152", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{ size=size(p);dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 53, "n_pass": [448, 66, 34]}
{"time": "2021-02-23 19:55:44.918786", "score": "0.8103", "loss": "9.152", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size=size(p);dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 52, "n_pass": [449, 67, 35]}
{"time": "2021-02-23 19:55:46.798395", "score": "0.8084", "loss": "8.2611", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{sizesize(p);dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 51, "n_pass": [451, 68, 36]}
{"time": "2021-02-23 19:55:48.674269", "score": "0.7997", "loss": "8.1559", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size(p);dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 50, "n_pass": [452, 69, 37]}
{"time": "2021-02-23 19:55:50.559010", "score": "0.8307", "loss": "8.3141", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream=Files.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 49, "n_pass": [454, 70, 38]}
{"time": "2021-02-23 19:55:52.425025", "score": "0.8257", "loss": "8.0351", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStreamFiles.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 48, "n_pass": [458, 71, 39]}
{"time": "2021-02-23 19:55:54.297533", "score": "0.8459", "loss": "8.2422", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream.newInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 47, "n_pass": [459, 72, 40]}
{"time": "2021-02-23 19:55:56.175964", "score": "0.7129", "loss": "8.1524", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStreamnewInputStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 46, "n_pass": [460, 73, 41]}
{"time": "2021-02-23 19:55:58.035660", "score": "0.6906", "loss": "8.337", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream(p);return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 45, "n_pass": [461, 74, 42]}
{"time": "2021-02-23 19:55:59.921942", "score": "0.7315", "loss": "9.8714", "code": "BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream();return newBinaryData();}catch(IOException ex){(ex);}}", "n_tokens": 44, "n_pass": [463, 75, 43]}

Minimal simplified code:
BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream();return newBinaryData();}catch(IOException ex){(ex);}}

