
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/semanticvectors__semanticvectors/src/main/java/pitt/search/semanticvectors/vectors/BinaryVector_erf.java
method_name = erf
method_body = public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a3 = 0.000972, a4 = 0.078108; double sumterm = 1 + a1 * z + a2 * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }
predict, score, loss = getSign, 0.3972538411617279, 15.049530982971191

Trace of simplified code(s):
{"time": "2021-02-24 00:09:08.128558", "score": "0.4462", "loss": "14.3449", "code": "public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a3 = 0.000972, a4 = 0.078108; double sumterm = 1 + a1 * z + a2 * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 200, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:09:13.062832", "score": "0.4772", "loss": "15.0769", "code": "public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a, a4 = 0.078108; double sumterm = 1 + a1 * z + a2 * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 188, "n_pass": [50, 3, 2]}
{"time": "2021-02-24 00:09:15.040236", "score": "0.4385", "loss": "14.4974", "code": "public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a108; double sumterm = 1 + a1 * z + a2 * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 176, "n_pass": [51, 4, 3]}
{"time": "2021-02-24 00:09:17.025187", "score": "0.5148", "loss": "14.3209", "code": "public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a108; double sumterm = 1  * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 163, "n_pass": [53, 5, 4]}
{"time": "2021-02-24 00:09:18.969097", "score": "0.4864", "loss": "15.0603", "code": "public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a108; double sumterm = 1 + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 150, "n_pass": [54, 6, 5]}
{"time": "2021-02-24 00:09:21.055483", "score": "0.3289", "loss": "14.1131", "code": "public double erf(double z) { double sign = Math.signum(z); double a1 = 0.278393, a2 = 0.230389, a108; double sumterm = 1 + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 138, "n_pass": [62, 7, 6]}
{"time": "2021-02-24 00:09:22.948241", "score": "0.3562", "loss": "13.9136", "code": "public double erf(double z) { double sign = Math.signum(z); double a1 = 0.278393, a2 =108; double sumterm = 1 + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 126, "n_pass": [65, 8, 7]}
{"time": "2021-02-24 00:09:24.892790", "score": "0.3894", "loss": "14.2078", "code": "public double erf(double z) { double sign = Math.signum(z); double a1 = 0.278393, a2 =+ a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 113, "n_pass": [66, 9, 8]}
{"time": "2021-02-24 00:09:26.831838", "score": "0.3737", "loss": "13.691", "code": "public double erf(double z) { double sign = Math.signum(z); double a1 = 0.+ a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 101, "n_pass": [75, 10, 9]}
{"time": "2021-02-24 00:09:28.773545", "score": "0.418", "loss": "13.8536", "code": "public double erf(double z) { double sign = Math.signum(z); double a1 = 0.+ a3 * Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 95, "n_pass": [103, 11, 10]}
{"time": "2021-02-24 00:09:30.725300", "score": "0.4452", "loss": "13.3111", "code": "public double erf(double z) { Math.signum(z); double a1 = 0.+ a3 * Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 89, "n_pass": [112, 12, 11]}
{"time": "2021-02-24 00:09:32.684354", "score": "0.4396", "loss": "13.2682", "code": "public double erf(double z) {signum(z); double a1 = 0.+ a3 * Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 86, "n_pass": [155, 13, 12]}
{"time": "2021-02-24 00:09:35.071847", "score": "0.4288", "loss": "12.7965", "code": "public double erf(double z) {signum(z); double a1 =+ a3 * Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 83, "n_pass": [159, 14, 13]}
{"time": "2021-02-24 00:09:36.993654", "score": "0.4495", "loss": "13.1456", "code": "public double erf(double z) {signum(z); double a1 =3 * Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 80, "n_pass": [160, 15, 14]}
{"time": "2021-02-24 00:09:38.900724", "score": "0.4753", "loss": "13.3483", "code": "public double erf(double z) {signum(z); double a1 = Math.pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 77, "n_pass": [161, 16, 15]}
{"time": "2021-02-24 00:09:40.776539", "score": "0.398", "loss": "13.1419", "code": "public double erf(double z) {signum(z); double a1 =pow(z, 3) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 74, "n_pass": [162, 17, 16]}
{"time": "2021-02-24 00:09:42.637285", "score": "0.3784", "loss": "12.8498", "code": "public double erf(double z) {signum(z); double a1 =pow(z) +Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 71, "n_pass": [164, 18, 17]}
{"time": "2021-02-24 00:09:44.509648", "score": "0.352", "loss": "13.1825", "code": "public double erf(double z) {signum(z); double a1 =pow(z) +Math.pow(z, 4); return sign * ( 1 / (Math.pow(sumterm, 4))); }", "n_tokens": 68, "n_pass": [172, 19, 18]}
{"time": "2021-02-24 00:09:46.385121", "score": "0.4728", "loss": "12.9308", "code": "public double erf(double z) {signum(z); double a1 =pow(z) +Math.pow(z, 4); return sign * ( (Math.pow(sumterm, 4))); }", "n_tokens": 64, "n_pass": [173, 20, 19]}
{"time": "2021-02-24 00:09:48.701064", "score": "0.4262", "loss": "13.1909", "code": "public double erf() {signum(z); double a1 =pow(z) +Math.pow(z, 4); return sign * ( (Math.pow(sumterm, 4))); }", "n_tokens": 61, "n_pass": [180, 21, 20]}
{"time": "2021-02-24 00:09:53.673394", "score": "0.4262", "loss": "13.1909", "code": "public double erf(){signum(z); double a1 =pow(z) +Math.pow(z, 4); return sign * ( (Math.pow(sumterm, 4))); }", "n_tokens": 60, "n_pass": [241, 22, 21]}
{"time": "2021-02-24 00:09:57.486820", "score": "0.4588", "loss": "13.1652", "code": "public double erf(){signum(); double a1 =pow(z) +Math.pow(z, 4); return sign * ( (Math.pow(sumterm, 4))); }", "n_tokens": 59, "n_pass": [245, 24, 22]}
{"time": "2021-02-24 00:09:59.404648", "score": "0.4588", "loss": "13.1652", "code": "public double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign * ( (Math.pow(sumterm, 4))); }", "n_tokens": 58, "n_pass": [248, 25, 23]}
{"time": "2021-02-24 00:10:07.375251", "score": "0.3701", "loss": "12.8994", "code": "public double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign ( (Math.pow(sumterm, 4))); }", "n_tokens": 56, "n_pass": [262, 29, 24]}
{"time": "2021-02-24 00:10:11.109341", "score": "0.3931", "loss": "13.6288", "code": "public double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign ( (Math.pow( 4))); }", "n_tokens": 54, "n_pass": [267, 31, 25]}
{"time": "2021-02-24 00:10:13.002587", "score": "0.3841", "loss": "12.9115", "code": "public double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 52, "n_pass": [268, 32, 26]}
{"time": "2021-02-24 00:10:14.844492", "score": "0.3841", "loss": "12.9115", "code": " double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 51, "n_pass": [272, 33, 27]}
{"time": "2021-02-24 00:10:16.755179", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a1 =pow(z) +Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 50, "n_pass": [273, 34, 28]}
{"time": "2021-02-24 00:10:39.291924", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a =pow(z) +Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 49, "n_pass": [347, 43, 29]}
{"time": "2021-02-24 00:10:41.177061", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z) +Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 48, "n_pass": [348, 44, 30]}
{"time": "2021-02-24 00:10:46.789914", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z, 4); return sign ( (Math.pow())); }", "n_tokens": 47, "n_pass": [354, 47, 31]}
{"time": "2021-02-24 00:10:50.581545", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z,4); return sign ( (Math.pow())); }", "n_tokens": 46, "n_pass": [362, 49, 32]}
{"time": "2021-02-24 00:10:52.465655", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign ( (Math.pow())); }", "n_tokens": 45, "n_pass": [366, 50, 33]}
{"time": "2021-02-24 00:10:59.941495", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign( (Math.pow())); }", "n_tokens": 44, "n_pass": [370, 54, 34]}
{"time": "2021-02-24 00:11:01.856421", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign((Math.pow())); }", "n_tokens": 43, "n_pass": [372, 55, 35]}
{"time": "2021-02-24 00:11:05.630059", "score": "0.3841", "loss": "12.9115", "code": "double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign((Math.pow()));}", "n_tokens": 42, "n_pass": [382, 57, 36]}

Minimal simplified code:
double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign((Math.pow()));}

