
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wnameless__json-flattener/src/test/java/com/github/wnameless/json/flattener/JsonFlattenerTest_testWithKeyTransformer.java
method_name = testWithKeyTransformer
method_body = @Test public void testWithKeyTransformer() { String json = "{\"abc\":{\"de.f\":123}}"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals("{\"abc.de_f\":123}", jf.flatten()); }
predict, score, loss = testFlattenWithEmptyString, 0.37700313329696655, 15.239232063293457

Trace of simplified code(s):
{"time": "2021-02-24 02:05:29.614079", "score": "0.377", "loss": "15.2392", "code": "@Test public void testWithKeyTransformer() { String json = \"{\\\"abc\\\":{\\\"de.f\\\":123}}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\\"abc.de_f\\\":123}\", jf.flatten()); }", "n_tokens": 143, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 02:05:39.386282", "score": "0.3979", "loss": "15.2067", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\":{\\\"de.f\\\":123}}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\\"abc.de_f\\\":123}\", jf.flatten()); }", "n_tokens": 139, "n_pass": [97, 6, 2]}
{"time": "2021-02-24 02:05:41.311200", "score": "0.3979", "loss": "15.2067", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\"de.f\\\":123}}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\\"abc.de_f\\\":123}\", jf.flatten()); }", "n_tokens": 135, "n_pass": [98, 7, 3]}
{"time": "2021-02-24 02:05:47.105186", "score": "0.4009", "loss": "15.1153", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\"de.f\\\":}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\\"abc.de_f\\\":123}\", jf.flatten()); }", "n_tokens": 131, "n_pass": [101, 10, 4]}
{"time": "2021-02-24 02:05:49.066219", "score": "0.3946", "loss": "14.8654", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\"de.f\\\":}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\\"abc.de_f\\\":123}\", jf.flatten()); }", "n_tokens": 126, "n_pass": [110, 11, 5]}
{"time": "2021-02-24 02:05:52.957458", "score": "0.4122", "loss": "14.8892", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\"de.f\\\":}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\f\\\":123}\", jf.flatten()); }", "n_tokens": 121, "n_pass": [119, 13, 6]}
{"time": "2021-02-24 02:05:54.858781", "score": "0.3839", "loss": "15.3899", "code": "@Test public void testWithKeyTransformer() { String json = \"\\\"de.f\\\":}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 116, "n_pass": [120, 14, 7]}
{"time": "2021-02-24 02:05:58.764101", "score": "0.3754", "loss": "15.4809", "code": "@Test public void testWithKeyTransformer() { String json = \"f\\\":}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 112, "n_pass": [129, 16, 8]}
{"time": "2021-02-24 02:06:00.700236", "score": "0.3805", "loss": "15.2864", "code": "@Test public void testWithKeyTransformer() { String json = \"}\"; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 108, "n_pass": [130, 17, 9]}
{"time": "2021-02-24 02:06:10.885903", "score": "0.3644", "loss": "15.2162", "code": "@Test public void testWithKeyTransformer() { String json = \"}\"; JsonFlattener jf = JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 106, "n_pass": [208, 22, 10]}
{"time": "2021-02-24 02:06:12.826304", "score": "0.3674", "loss": "15.7495", "code": "@Test public void testWithKeyTransformer() { String json = \"}\"; JsonFlattener jf = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 104, "n_pass": [213, 23, 11]}
{"time": "2021-02-24 02:06:22.462489", "score": "0.3674", "loss": "15.7495", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener jf = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 102, "n_pass": [242, 28, 12]}
{"time": "2021-02-24 02:06:30.619854", "score": "0.3773", "loss": "14.7144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) { return key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 100, "n_pass": [254, 32, 13]}
{"time": "2021-02-24 02:06:34.524569", "score": "0.3788", "loss": "13.5144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) { key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 98, "n_pass": [271, 34, 14]}
{"time": "2021-02-24 02:06:56.357372", "score": "0.3788", "loss": "13.5144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.', '_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 97, "n_pass": [401, 40, 15]}
{"time": "2021-02-24 02:07:00.649407", "score": "0.3788", "loss": "13.5144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_'); } }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 96, "n_pass": [409, 42, 16]}
{"time": "2021-02-24 02:07:02.965361", "score": "0.3788", "loss": "13.5144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');} }); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 95, "n_pass": [415, 43, 17]}
{"time": "2021-02-24 02:07:04.901862", "score": "0.3788", "loss": "13.5144", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\\23}\", jf.flatten()); }", "n_tokens": 94, "n_pass": [417, 44, 18]}
{"time": "2021-02-24 02:07:06.851267", "score": "0.4207", "loss": "13.2888", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{3}\", jf.flatten()); }", "n_tokens": 92, "n_pass": [422, 45, 19]}
{"time": "2021-02-24 02:07:08.778002", "score": "0.4308", "loss": "13.3859", "code": "@Test void testWithKeyTransformer() { String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 90, "n_pass": [423, 46, 20]}
{"time": "2021-02-24 02:07:15.920820", "score": "0.4308", "loss": "13.3859", "code": "@Test void testWithKeyTransformer(){ String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 89, "n_pass": [438, 49, 21]}
{"time": "2021-02-24 02:07:17.838772", "score": "0.4308", "loss": "13.3859", "code": "@Test void testWithKeyTransformer(){String json = \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 88, "n_pass": [440, 50, 22]}
{"time": "2021-02-24 02:07:25.455501", "score": "0.4308", "loss": "13.3859", "code": "@Test void testWithKeyTransformer(){String json= \"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 87, "n_pass": [444, 54, 23]}
{"time": "2021-02-24 02:07:27.405149", "score": "0.4308", "loss": "13.3859", "code": "@Test void testWithKeyTransformer(){String json=\"}\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 86, "n_pass": [446, 55, 24]}
{"time": "2021-02-24 02:07:29.349142", "score": "0.4698", "loss": "13.8131", "code": "@Test void testWithKeyTransformer(){String json=\"\"; JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 85, "n_pass": [448, 56, 25]}
{"time": "2021-02-24 02:07:31.282756", "score": "0.4698", "loss": "13.8131", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener = JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 84, "n_pass": [451, 57, 26]}
{"time": "2021-02-24 02:07:33.193308", "score": "0.4698", "loss": "13.8131", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener= JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 83, "n_pass": [453, 58, 27]}
{"time": "2021-02-24 02:07:35.112641", "score": "0.4698", "loss": "13.8131", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=JsonFlattener(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 82, "n_pass": [455, 59, 28]}
{"time": "2021-02-24 02:07:37.008979", "score": "0.4683", "loss": "13.3582", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer() { String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 81, "n_pass": [456, 60, 29]}
{"time": "2021-02-24 02:07:42.832616", "score": "0.4683", "loss": "13.3582", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){ String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 80, "n_pass": [473, 63, 30]}
{"time": "2021-02-24 02:07:44.771450", "score": "0.4683", "loss": "13.3582", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){String transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 79, "n_pass": [475, 64, 31]}
{"time": "2021-02-24 02:07:46.706837", "score": "0.467", "loss": "14.1117", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){ transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 78, "n_pass": [476, 65, 32]}
{"time": "2021-02-24 02:07:48.601899", "score": "0.467", "loss": "14.1117", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key) {key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 77, "n_pass": [477, 66, 33]}
{"time": "2021-02-24 02:07:50.546147", "score": "0.467", "loss": "14.1117", "code": "@Test void testWithKeyTransformer(){String json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 76, "n_pass": [484, 67, 34]}
{"time": "2021-02-24 02:08:00.567801", "score": "0.4799", "loss": "13.8796", "code": "@Test void testWithKeyTransformer(){ json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 75, "n_pass": [519, 71, 35]}
{"time": "2021-02-24 02:08:02.473063", "score": "0.4799", "loss": "13.8796", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key.replace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 74, "n_pass": [520, 72, 36]}
{"time": "2021-02-24 02:08:10.099482", "score": "0.4787", "loss": "13.5331", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){keyreplace('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 73, "n_pass": [553, 76, 37]}
{"time": "2021-02-24 02:08:12.016959", "score": "0.4841", "loss": "13.5364", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}}); assertEquals(\"{\", jf.flatten()); }", "n_tokens": 72, "n_pass": [554, 77, 38]}
{"time": "2021-02-24 02:08:27.844817", "score": "0.4841", "loss": "13.5364", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals(\"{\", jf.flatten()); }", "n_tokens": 71, "n_pass": [640, 83, 39]}
{"time": "2021-02-24 02:08:29.756555", "score": "0.5203", "loss": "14.0131", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals(\"\", jf.flatten()); }", "n_tokens": 70, "n_pass": [644, 84, 40]}
{"time": "2021-02-24 02:08:31.699634", "score": "0.5203", "loss": "14.0131", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals(\"\",jf.flatten()); }", "n_tokens": 69, "n_pass": [647, 85, 41]}
{"time": "2021-02-24 02:08:35.515636", "score": "0.5203", "loss": "14.0131", "code": "@Test void testWithKeyTransformer(){json=\"\";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals(\"\",jf.flatten());}", "n_tokens": 68, "n_pass": [655, 87, 42]}

Minimal simplified code:
@Test void testWithKeyTransformer(){json="";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals("",jf.flatten());}

