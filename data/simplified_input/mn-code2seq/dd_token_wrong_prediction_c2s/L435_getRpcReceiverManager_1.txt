
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/QPyScriptService_getRpcReceiverManager.java
method_name = getRpcReceiverManager
method_body = RpcReceiverManager getRpcReceiverManager() throws InterruptedException { mLatch.await(); if (mFacadeManager == null) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; }
predict, score, loss = getManagerManager, 0.8870346546173096, 17.16489601135254

Trace of simplified code(s):
{"time": "2021-02-23 19:28:23.355454", "score": "0.887", "loss": "17.1649", "code": "RpcReceiverManager getRpcReceiverManager() throws InterruptedException { mLatch.await(); if (mFacadeManager == null) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; }", "n_tokens": 60, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:28:25.236095", "score": "0.917", "loss": "14.22", "code": "RpcReceiverManager getRpcReceiverManager()  { mLatch.await(); if (mFacadeManager == null) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; }", "n_tokens": 57, "n_pass": [46, 2, 2]}
{"time": "2021-02-23 19:28:27.107436", "score": "0.8944", "loss": "14.4362", "code": "RpcReceiverManager getRpcReceiverManager()  { mLatch.await(); if (mFacadeManager ) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; }", "n_tokens": 53, "n_pass": [51, 3, 3]}
{"time": "2021-02-23 19:28:28.918916", "score": "0.8642", "loss": "13.3546", "code": "RpcReceiverManager getRpcReceiverManager()  { mLatch.await(); if (mFacadeManager ) { mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; }", "n_tokens": 49, "n_pass": [53, 4, 4]}
{"time": "2021-02-23 19:28:30.742132", "score": "0.862", "loss": "13.9552", "code": "RpcReceiverManager getRpcReceiverManager()  { mLatch.await(); if (mFacadeManager ) { mProxy.getRpcReceiverManagerFactory().get(0); } return mFacadeManager; }", "n_tokens": 45, "n_pass": [55, 5, 5]}
{"time": "2021-02-23 19:28:32.542977", "score": "0.7762", "loss": "7.267", "code": "RpcReceiverManager getRpcReceiverManager()  { mLatch.await(); if (mFacadeManager ) { mProxy.getRpcReceiverManagerFactory(0); } return mFacadeManager; }", "n_tokens": 41, "n_pass": [56, 6, 6]}
{"time": "2021-02-23 19:28:38.771646", "score": "0.7762", "loss": "7.267", "code": "RpcReceiverManager getRpcReceiverManager(){ mLatch.await(); if (mFacadeManager ) { mProxy.getRpcReceiverManagerFactory(0); } return mFacadeManager; }", "n_tokens": 39, "n_pass": [100, 8, 7]}
{"time": "2021-02-23 19:28:40.573186", "score": "0.7431", "loss": "6.1342", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { mProxy.getRpcReceiverManagerFactory(0); } return mFacadeManager; }", "n_tokens": 37, "n_pass": [102, 9, 8]}
{"time": "2021-02-23 19:28:42.431263", "score": "0.8343", "loss": "7.3012", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory(0); } return mFacadeManager; }", "n_tokens": 35, "n_pass": [110, 10, 9]}
{"time": "2021-02-23 19:28:52.956653", "score": "0.8808", "loss": "8.5487", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory(); } return mFacadeManager; }", "n_tokens": 34, "n_pass": [163, 12, 10]}
{"time": "2021-02-23 19:28:54.782594", "score": "0.8808", "loss": "8.5487", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();} return mFacadeManager; }", "n_tokens": 33, "n_pass": [165, 13, 11]}
{"time": "2021-02-23 19:28:56.609157", "score": "0.8808", "loss": "8.5487", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();}return mFacadeManager; }", "n_tokens": 32, "n_pass": [167, 14, 12]}
{"time": "2021-02-23 19:28:58.427969", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();} mFacadeManager; }", "n_tokens": 31, "n_pass": [168, 15, 13]}
{"time": "2021-02-23 19:29:00.234803", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();}mFacadeManager; }", "n_tokens": 30, "n_pass": [169, 16, 14]}
{"time": "2021-02-23 19:29:03.839734", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){ await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 29, "n_pass": [172, 18, 15]}
{"time": "2021-02-23 19:29:07.009470", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await(); if (mFacadeManager ) { getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 28, "n_pass": [180, 19, 16]}
{"time": "2021-02-23 19:29:08.839186", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await();if (mFacadeManager ) { getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 27, "n_pass": [185, 20, 17]}
{"time": "2021-02-23 19:29:10.671868", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager ) { getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 26, "n_pass": [187, 21, 18]}
{"time": "2021-02-23 19:29:12.527014", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager) { getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 25, "n_pass": [190, 22, 19]}
{"time": "2021-02-23 19:29:14.362018", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager){ getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 24, "n_pass": [192, 23, 20]}
{"time": "2021-02-23 19:29:16.212028", "score": "0.6962", "loss": "7.057", "code": "RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager){getRpcReceiverManagerFactory();}mFacadeManager;}", "n_tokens": 23, "n_pass": [194, 24, 21]}

Minimal simplified code:
RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager){getRpcReceiverManagerFactory();}mFacadeManager;}

