
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/service/amqp/src/main/java/org/kaazing/gateway/service/amqp/amqp091/message/AmqpStartMessage_getServerProperties.java
method_name = getServerProperties
method_body = public AmqpTable getServerProperties() { AmqpTable table = new AmqpTable(); List<AmqpTableEntry> tableEntries = serverProperties.getEntries(); List<AmqpTableEntry> entries = new ArrayList<>(); entries.addAll(tableEntries); table.setEntries(entries); return table; }
predict, score, loss = createTable, 0.6856998205184937, 15.257974624633789

Trace of simplified code(s):
{"time": "2021-02-24 01:44:26.343336", "score": "0.6857", "loss": "15.258", "code": "public AmqpTable getServerProperties() { AmqpTable table = new AmqpTable(); List<AmqpTableEntry> tableEntries = serverProperties.getEntries(); List<AmqpTableEntry> entries = new ArrayList<>(); entries.addAll(tableEntries); table.setEntries(entries); return table; }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 01:44:28.260513", "score": "0.5371", "loss": "14.6921", "code": "public AmqpTable getServerProperties() { AmqpTable table = new AmqpTable(); List<AmqpTableEntry> tableEntries = serverProperties.getEntries(); addAll(tableEntries); table.setEntries(entries); return table; }", "n_tokens": 59, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 01:44:30.176429", "score": "0.5416", "loss": "16.2004", "code": "public AmqpTable getServerProperties() { AmqpTable table = new AmqpTableaddAll(tableEntries); table.setEntries(entries); return table; }", "n_tokens": 39, "n_pass": [12, 3, 3]}
{"time": "2021-02-24 01:44:34.313951", "score": "0.3697", "loss": "15.1326", "code": "public AmqpTable getServerProperties() { AmqpTable table = AmqpTableaddAll(tableEntries); table.setEntries(entries); return table; }", "n_tokens": 37, "n_pass": [53, 5, 4]}
{"time": "2021-02-24 01:44:36.164265", "score": "0.3597", "loss": "15.3493", "code": "public AmqpTable getServerProperties() { AmqpTable table = AmqpTableaddAll(tableEntries);setEntries(entries); return table; }", "n_tokens": 34, "n_pass": [56, 6, 5]}
{"time": "2021-02-24 01:44:38.033959", "score": "0.408", "loss": "13.8078", "code": "public AmqpTable getServerProperties() { AmqpTable table = AmqpTableaddAll(tableEntries);setEntries(entries); ; }", "n_tokens": 31, "n_pass": [59, 7, 6]}
{"time": "2021-02-24 01:44:39.892392", "score": "0.408", "loss": "13.8078", "code": "AmqpTable getServerProperties() { AmqpTable table = AmqpTableaddAll(tableEntries);setEntries(entries); ; }", "n_tokens": 29, "n_pass": [61, 8, 7]}
{"time": "2021-02-24 01:44:42.139642", "score": "0.5327", "loss": "16.893", "code": "AmqpTable getServerProperties() { table = AmqpTableaddAll(tableEntries);setEntries(entries); ; }", "n_tokens": 27, "n_pass": [66, 9, 8]}
{"time": "2021-02-24 01:44:46.991012", "score": "0.5327", "loss": "16.893", "code": "AmqpTable getServerProperties() { table= AmqpTableaddAll(tableEntries);setEntries(entries); ; }", "n_tokens": 26, "n_pass": [101, 10, 9]}
{"time": "2021-02-24 01:44:48.815273", "score": "0.5327", "loss": "16.893", "code": "AmqpTable getServerProperties() { table=AmqpTableaddAll(tableEntries);setEntries(entries); ; }", "n_tokens": 25, "n_pass": [103, 11, 10]}
{"time": "2021-02-24 01:44:50.638838", "score": "0.55", "loss": "16.6534", "code": "AmqpTable getServerProperties() { table=addAll(tableEntries);setEntries(entries); ; }", "n_tokens": 24, "n_pass": [104, 12, 11]}
{"time": "2021-02-24 01:44:52.486579", "score": "0.5261", "loss": "15.3053", "code": "AmqpTable getServerProperties() { table=(tableEntries);setEntries(entries); ; }", "n_tokens": 23, "n_pass": [105, 13, 12]}
{"time": "2021-02-24 01:44:56.172750", "score": "0.5261", "loss": "15.3053", "code": "AmqpTable getServerProperties() { table=(tableEntries);setEntries(entries); }", "n_tokens": 21, "n_pass": [112, 15, 13]}
{"time": "2021-02-24 01:44:59.284838", "score": "0.5261", "loss": "15.3053", "code": "AmqpTable getServerProperties(){ table=(tableEntries);setEntries(entries); }", "n_tokens": 20, "n_pass": [119, 16, 14]}
{"time": "2021-02-24 01:45:01.066230", "score": "0.5261", "loss": "15.3053", "code": "AmqpTable getServerProperties(){table=(tableEntries);setEntries(entries); }", "n_tokens": 19, "n_pass": [121, 17, 15]}
{"time": "2021-02-24 01:45:02.890369", "score": "0.6079", "loss": "14.7756", "code": "AmqpTable getServerProperties(){table(tableEntries);setEntries(entries); }", "n_tokens": 18, "n_pass": [123, 18, 16]}
{"time": "2021-02-24 01:45:04.714275", "score": "0.5288", "loss": "15.3351", "code": "AmqpTable getServerProperties(){table();setEntries(entries); }", "n_tokens": 17, "n_pass": [125, 19, 17]}
{"time": "2021-02-24 01:45:10.918818", "score": "0.4277", "loss": "16.2466", "code": "AmqpTable getServerProperties(){table();setEntries(); }", "n_tokens": 16, "n_pass": [149, 21, 18]}
{"time": "2021-02-24 01:45:12.754282", "score": "0.4277", "loss": "16.2466", "code": "AmqpTable getServerProperties(){table();setEntries();}", "n_tokens": 15, "n_pass": [152, 22, 19]}

Minimal simplified code:
AmqpTable getServerProperties(){table();setEntries();}

