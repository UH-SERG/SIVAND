
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/baksmali/Adaptors/MethodDefinition_needsAnalyzed.java
method_name = needsAnalyzed
method_body = private boolean needsAnalyzed() { for (Instruction instruction : methodImpl.getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; }
predict, score, loss = odexOnlyOdex, 0.6605731248855591, 17.291818618774414

Trace of simplified code(s):
{"time": "2021-02-24 11:15:34.842499", "score": "0.6606", "loss": "17.2918", "code": "private boolean needsAnalyzed() { for (Instruction instruction : methodImpl.getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; }", "n_tokens": 59, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 11:15:42.678317", "score": "0.6606", "loss": "17.2918", "code": " boolean needsAnalyzed() { for (Instruction instruction : methodImpl.getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; }", "n_tokens": 58, "n_pass": [92, 4, 2]}
{"time": "2021-02-24 11:15:44.572487", "score": "0.6606", "loss": "17.2918", "code": "boolean needsAnalyzed() { for (Instruction instruction : methodImpl.getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; }", "n_tokens": 57, "n_pass": [93, 5, 3]}
{"time": "2021-02-24 11:15:46.903362", "score": "0.661", "loss": "17.0994", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; }", "n_tokens": 55, "n_pass": [103, 6, 4]}
{"time": "2021-02-24 11:15:48.738952", "score": "0.6647", "loss": "17.1666", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { return true; } } return false; }", "n_tokens": 53, "n_pass": [109, 7, 5]}
{"time": "2021-02-24 11:15:50.633372", "score": "0.7014", "loss": "18.1007", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } return false; }", "n_tokens": 51, "n_pass": [115, 8, 6]}
{"time": "2021-02-24 11:15:54.379243", "score": "0.7984", "loss": "19.6731", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } false; }", "n_tokens": 49, "n_pass": [120, 10, 7]}
{"time": "2021-02-24 11:15:56.209165", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } }  }", "n_tokens": 47, "n_pass": [121, 11, 8]}
{"time": "2021-02-24 11:16:07.742439", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed() { for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 46, "n_pass": [191, 13, 9]}
{"time": "2021-02-24 11:16:10.525350", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){ for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 45, "n_pass": [197, 14, 10]}
{"time": "2021-02-24 11:16:12.373750", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for (Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 44, "n_pass": [199, 15, 11]}
{"time": "2021-02-24 11:16:14.261249", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction : getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 43, "n_pass": [201, 16, 12]}
{"time": "2021-02-24 11:16:16.157438", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction: getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 42, "n_pass": [206, 17, 13]}
{"time": "2021-02-24 11:16:18.004939", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()) { if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 41, "n_pass": [208, 18, 14]}
{"time": "2021-02-24 11:16:19.840730", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){ if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 40, "n_pass": [213, 19, 15]}
{"time": "2021-02-24 11:16:21.717283", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if (getOpcode().odexOnly()) { true; } } }", "n_tokens": 39, "n_pass": [215, 20, 16]}
{"time": "2021-02-24 11:16:23.582137", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()) { true; } } }", "n_tokens": 38, "n_pass": [217, 21, 17]}
{"time": "2021-02-24 11:16:25.456076", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){ true; } } }", "n_tokens": 37, "n_pass": [227, 22, 18]}
{"time": "2021-02-24 11:16:27.309191", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true; } } }", "n_tokens": 36, "n_pass": [229, 23, 19]}
{"time": "2021-02-24 11:16:31.061961", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true;} } }", "n_tokens": 35, "n_pass": [232, 25, 20]}
{"time": "2021-02-24 11:16:32.927910", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true;}} }", "n_tokens": 34, "n_pass": [234, 26, 21]}
{"time": "2021-02-24 11:16:34.776243", "score": "0.7736", "loss": "20.399", "code": "boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true;}}}", "n_tokens": 33, "n_pass": [236, 27, 22]}

Minimal simplified code:
boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true;}}}

