
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/novoda__merlin/core/src/main/java/com/novoda/merlin/ConnectivityChangesForwarder_onSuccess.java
method_name = onSuccess
method_body = @Override public void onSuccess() { lastEndpointPingNetworkStatus = NetworkStatus.newAvailableInstance(); if (connectCallbackManager != null) { connectCallbackManager.onConnect(); } }
predict, score, loss = onConnect, 0.6975125670433044, 6.17653226852417

Trace of simplified code(s):
{"time": "2021-02-24 09:38:20.983076", "score": "0.6975", "loss": "6.1765", "code": "@Override public void onSuccess() { lastEndpointPingNetworkStatus = NetworkStatus.newAvailableInstance(); if (connectCallbackManager != null) { connectCallbackManager.onConnect(); } }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:38:23.250354", "score": "0.6983", "loss": "6.1744", "code": "@Override public void onSuccess() { lastEndpointPingNetworkStatus = NetworkStatus.newAvailableInstance();{ connectCallbackManager.onConnect(); } }", "n_tokens": 35, "n_pass": [10, 2, 2]}
{"time": "2021-02-24 09:38:25.508371", "score": "0.6001", "loss": "8.0347", "code": "void onSuccess() { lastEndpointPingNetworkStatus = NetworkStatus.newAvailableInstance();{ connectCallbackManager.onConnect(); } }", "n_tokens": 30, "n_pass": [21, 3, 3]}
{"time": "2021-02-24 09:38:27.290103", "score": "0.6866", "loss": "7.3952", "code": "void onSuccess() { lastEndpointPingNetworkStatusNetworkStatus.newAvailableInstance();{ connectCallbackManager.onConnect(); } }", "n_tokens": 27, "n_pass": [39, 4, 4]}
{"time": "2021-02-24 09:38:29.090346", "score": "0.684", "loss": "8.1798", "code": "void onSuccess() { lastEndpointPingNetworkStatus();{ connectCallbackManager.onConnect(); } }", "n_tokens": 24, "n_pass": [40, 5, 5]}
{"time": "2021-02-24 09:38:32.211891", "score": "0.684", "loss": "8.1798", "code": "void onSuccess() {lastEndpointPingNetworkStatus();{ connectCallbackManager.onConnect(); } }", "n_tokens": 23, "n_pass": [66, 6, 6]}
{"time": "2021-02-24 09:38:34.014028", "score": "0.637", "loss": "6.0707", "code": "void onSuccess() {lastEndpointPingNetworkStatus();{ onConnect(); } }", "n_tokens": 21, "n_pass": [70, 7, 7]}
{"time": "2021-02-24 09:38:36.679432", "score": "0.637", "loss": "6.0707", "code": "void onSuccess(){lastEndpointPingNetworkStatus();{ onConnect(); } }", "n_tokens": 20, "n_pass": [80, 8, 8]}
{"time": "2021-02-24 09:38:41.528637", "score": "0.637", "loss": "6.0707", "code": "void onSuccess(){lastEndpointPingNetworkStatus();{onConnect(); } }", "n_tokens": 19, "n_pass": [112, 9, 9]}
{"time": "2021-02-24 09:38:43.359070", "score": "0.637", "loss": "6.0707", "code": "void onSuccess(){lastEndpointPingNetworkStatus();{onConnect();} }", "n_tokens": 18, "n_pass": [117, 10, 10]}
{"time": "2021-02-24 09:38:45.185746", "score": "0.637", "loss": "6.0707", "code": "void onSuccess(){lastEndpointPingNetworkStatus();{onConnect();}}", "n_tokens": 17, "n_pass": [119, 11, 11]}

Minimal simplified code:
void onSuccess(){lastEndpointPingNetworkStatus();{onConnect();}}

