
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javaee__javamail/mail/src/test/java/javax/mail/internet/InternetHeadersTest_testInitialWhitespaceLine.java
method_name = testInitialWhitespaceLine
method_body = private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader("Subject").length); assertEquals("test", ih.getHeader("Subject")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals("Subject", h.getName()); assertEquals("test", h.getValue()); } }
predict, score, loss = checkHeaders, 0.5503016710281372, 34.68660354614258

Trace of simplified code(s):
{"time": "2021-02-23 20:01:04.314861", "score": "0.5658", "loss": "35.7004", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 130, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 20:01:08.210057", "score": "0.5621", "loss": "35.5892", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]);  ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 122, "n_pass": [51, 3, 2]}
{"time": "2021-02-23 20:01:10.123961", "score": "0.5655", "loss": "35.7929", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 114, "n_pass": [52, 4, 3]}
{"time": "2021-02-23 20:01:13.961071", "score": "0.531", "loss": "35.3789", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e.nextElement(); assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 110, "n_pass": [96, 6, 4]}
{"time": "2021-02-23 20:01:15.891259", "score": "0.5419", "loss": "35.6609", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", h.getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 106, "n_pass": [100, 7, 5]}
{"time": "2021-02-23 20:01:19.175248", "score": "0.5421", "loss": "35.8796", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h.getValue()); } }", "n_tokens": 104, "n_pass": [183, 8, 6]}
{"time": "2021-02-23 20:01:21.122543", "score": "0.5459", "loss": "35.7432", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h()); } }", "n_tokens": 102, "n_pass": [190, 9, 7]}
{"time": "2021-02-23 20:01:23.039461", "score": "0.5343", "loss": "35.7979", "code": "private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 100, "n_pass": [191, 10, 8]}
{"time": "2021-02-23 20:01:24.967172", "score": "0.5343", "loss": "35.7979", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 98, "n_pass": [194, 11, 9]}
{"time": "2021-02-23 20:01:27.324046", "score": "0.5492", "loss": "35.7104", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\").length); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 96, "n_pass": [205, 12, 10]}
{"time": "2021-02-23 20:01:29.245585", "score": "0.5538", "loss": "36.3661", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", ih.getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 94, "n_pass": [209, 13, 11]}
{"time": "2021-02-23 20:01:31.190684", "score": "0.56", "loss": "36.1336", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { Header h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 92, "n_pass": [215, 14, 12]}
{"time": "2021-02-23 20:01:33.063472", "score": "0.5662", "loss": "35.8317", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = e. assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 90, "n_pass": [226, 15, 13]}
{"time": "2021-02-23 20:01:34.970973", "score": "0.5704", "loss": "36.1435", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h =  assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 88, "n_pass": [229, 16, 14]}
{"time": "2021-02-23 20:01:47.240897", "score": "0.5704", "loss": "36.1435", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"Subject\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 87, "n_pass": [359, 17, 15]}
{"time": "2021-02-23 20:01:49.113647", "score": "0.5691", "loss": "35.7607", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\", getName()); assertEquals(\"test\", h); } }", "n_tokens": 86, "n_pass": [362, 18, 16]}
{"time": "2021-02-23 20:01:50.992997", "score": "0.5691", "loss": "35.7607", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName()); assertEquals(\"test\", h); } }", "n_tokens": 85, "n_pass": [365, 19, 17]}
{"time": "2021-02-23 20:01:52.849690", "score": "0.5691", "loss": "35.7607", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"test\", h); } }", "n_tokens": 84, "n_pass": [371, 20, 18]}
{"time": "2021-02-23 20:01:54.735078", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\", h); } }", "n_tokens": 83, "n_pass": [375, 21, 19]}
{"time": "2021-02-23 20:01:56.654806", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 82, "n_pass": [378, 22, 20]}
{"time": "2021-02-23 20:01:59.498770", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception { assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 81, "n_pass": [392, 23, 21]}
{"time": "2021-02-23 20:02:01.365663", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{ assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 80, "n_pass": [396, 24, 22]}
{"time": "2021-02-23 20:02:03.216871", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1, getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 79, "n_pass": [398, 25, 23]}
{"time": "2021-02-23 20:02:05.152512", "score": "0.5538", "loss": "34.7253", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,getHeader(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 78, "n_pass": [403, 26, 24]}
{"time": "2021-02-23 20:02:07.045451", "score": "0.5238", "loss": "34.6143", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"Subject\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 77, "n_pass": [404, 27, 25]}
{"time": "2021-02-23 20:02:08.929522", "score": "0.5222", "loss": "34.3124", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\")); assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 76, "n_pass": [407, 28, 26]}
{"time": "2021-02-23 20:02:10.806630", "score": "0.5222", "loss": "34.3124", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"test\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 75, "n_pass": [412, 29, 27]}
{"time": "2021-02-23 20:02:12.717408", "score": "0.5261", "loss": "33.7024", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\", getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 74, "n_pass": [416, 30, 28]}
{"time": "2021-02-23 20:02:14.622256", "score": "0.5261", "loss": "33.7024", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",getHeader(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 73, "n_pass": [419, 31, 29]}
{"time": "2021-02-23 20:02:16.504029", "score": "0.4164", "loss": "33.2569", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"Subject\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 72, "n_pass": [420, 32, 30]}
{"time": "2021-02-23 20:02:18.419348", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]); while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 71, "n_pass": [423, 33, 31]}
{"time": "2021-02-23 20:02:20.311949", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while (e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 70, "n_pass": [431, 34, 32]}
{"time": "2021-02-23 20:02:22.204497", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e) { h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 69, "n_pass": [433, 35, 33]}
{"time": "2021-02-23 20:02:24.096583", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){ h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 68, "n_pass": [437, 36, 34]}
{"time": "2021-02-23 20:02:25.961008", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){h = assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 67, "n_pass": [439, 37, 35]}
{"time": "2021-02-23 20:02:27.845699", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){h= assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 66, "n_pass": [441, 38, 36]}
{"time": "2021-02-23 20:02:29.759360", "score": "0.4147", "loss": "33.0598", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){h=assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 65, "n_pass": [443, 39, 37]}
{"time": "2021-02-23 20:02:32.609653", "score": "0.3922", "loss": "33.1981", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){hassertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 64, "n_pass": [506, 40, 38]}
{"time": "2021-02-23 20:02:37.283496", "score": "0.4022", "loss": "34.0455", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){assertEquals(\"\",getName());assertEquals(\"\",h); } }", "n_tokens": 63, "n_pass": [568, 42, 39]}
{"time": "2021-02-23 20:02:40.934519", "score": "0.4022", "loss": "34.0455", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){assertEquals(\"\",getName());assertEquals(\"\",h);} }", "n_tokens": 62, "n_pass": [634, 43, 40]}
{"time": "2021-02-23 20:02:42.834409", "score": "0.4022", "loss": "34.0455", "code": "void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(\"\"));assertEquals(\"\",(\"\")[0]);while(e){assertEquals(\"\",getName());assertEquals(\"\",h);}}", "n_tokens": 61, "n_pass": [635, 44, 41]}

Minimal simplified code:
void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(""));assertEquals("",("")[0]);while(e){assertEquals("",getName());assertEquals("",h);}}

