
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/lowlevel-studios__storo/library/src/main/java/st/lowlevel/storo/model/BaseMethod_async.java
method_name = async
method_body = public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }
predict, score, loss = shutdown, 0.5804049372673035, 6.180967330932617

Trace of simplified code(s):
{"time": "2021-02-24 04:24:07.230036", "score": "0.5804", "loss": "6.181", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 107, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 04:24:09.195795", "score": "0.582", "loss": "6.3442", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 100, "n_pass": [49, 2, 2]}
{"time": "2021-02-24 04:24:11.148583", "score": "0.505", "loss": "5.9535", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 93, "n_pass": [53, 3, 3]}
{"time": "2021-02-24 04:24:13.108777", "score": "0.6977", "loss": "6.9332", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 90, "n_pass": [97, 4, 4]}
{"time": "2021-02-24 04:24:15.053551", "score": "0.6972", "loss": "6.9601", "code": "public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 86, "n_pass": [100, 5, 5]}
{"time": "2021-02-24 04:24:17.449168", "score": "0.6468", "loss": "6.8755", "code": "public void async(final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 83, "n_pass": [110, 6, 6]}
{"time": "2021-02-24 04:24:19.415806", "score": "0.6269", "loss": "6.9017", "code": "public void async(final Callback callback) { ExecutorService executor = Executors.newSingleThreadExecutor(new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 80, "n_pass": [112, 7, 7]}
{"time": "2021-02-24 04:24:21.361341", "score": "0.856", "loss": "8.463", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() { @Override public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 77, "n_pass": [117, 8, 8]}
{"time": "2021-02-24 04:24:23.267313", "score": "0.7812", "loss": "7.9251", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() { public void run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 74, "n_pass": [121, 9, 9]}
{"time": "2021-02-24 04:24:25.172956", "score": "0.5912", "loss": "7.1609", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() {  run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 71, "n_pass": [122, 10, 10]}
{"time": "2021-02-24 04:24:31.156856", "score": "0.5912", "loss": "7.1609", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { callback.onResult(result); } } }); executor.shutdown(); }", "n_tokens": 69, "n_pass": [187, 11, 11]}
{"time": "2021-02-24 04:24:33.098783", "score": "0.5684", "loss": "7.0886", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); executor.shutdown(); }", "n_tokens": 67, "n_pass": [196, 12, 12]}
{"time": "2021-02-24 04:24:34.986947", "score": "0.3474", "loss": "6.7967", "code": "public void async(final Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 65, "n_pass": [204, 13, 13]}
{"time": "2021-02-24 04:24:36.894001", "score": "0.3474", "loss": "6.7967", "code": " void async(final Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 64, "n_pass": [208, 14, 14]}
{"time": "2021-02-24 04:24:38.800513", "score": "0.3474", "loss": "6.7967", "code": "void async(final Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 63, "n_pass": [209, 15, 15]}
{"time": "2021-02-24 04:24:41.551295", "score": "0.3474", "loss": "6.7967", "code": "void async( Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 62, "n_pass": [214, 16, 16]}
{"time": "2021-02-24 04:24:43.406846", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback) { ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 61, "n_pass": [215, 17, 17]}
{"time": "2021-02-24 04:24:45.323981", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor = (new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 60, "n_pass": [220, 18, 18]}
{"time": "2021-02-24 04:25:00.889237", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable() {run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 59, "n_pass": [308, 21, 19]}
{"time": "2021-02-24 04:25:02.835042", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run() {; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 58, "n_pass": [315, 22, 20]}
{"time": "2021-02-24 04:25:04.732933", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){; if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 57, "n_pass": [320, 23, 21]}
{"time": "2021-02-24 04:25:06.637129", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){ if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 56, "n_pass": [322, 24, 22]}
{"time": "2021-02-24 04:25:08.488387", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if (callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 55, "n_pass": [323, 25, 23]}
{"time": "2021-02-24 04:25:10.342308", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback ) { onResult(result); } } }); shutdown(); }", "n_tokens": 54, "n_pass": [325, 26, 24]}
{"time": "2021-02-24 04:25:12.250177", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback) { onResult(result); } } }); shutdown(); }", "n_tokens": 53, "n_pass": [328, 27, 25]}
{"time": "2021-02-24 04:25:14.158631", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){ onResult(result); } } }); shutdown(); }", "n_tokens": 52, "n_pass": [330, 28, 26]}
{"time": "2021-02-24 04:25:16.030710", "score": "0.3474", "loss": "6.7967", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){onResult(result); } } }); shutdown(); }", "n_tokens": 51, "n_pass": [332, 29, 27]}
{"time": "2021-02-24 04:25:17.897257", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result); } } }); shutdown(); }", "n_tokens": 50, "n_pass": [333, 30, 28]}
{"time": "2021-02-24 04:25:19.764220", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result);} } }); shutdown(); }", "n_tokens": 49, "n_pass": [338, 31, 29]}
{"time": "2021-02-24 04:25:21.648834", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result);}} }); shutdown(); }", "n_tokens": 48, "n_pass": [340, 32, 30]}
{"time": "2021-02-24 04:25:23.519383", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result);}}}); shutdown(); }", "n_tokens": 47, "n_pass": [342, 33, 31]}
{"time": "2021-02-24 04:25:25.403958", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result);}}});shutdown(); }", "n_tokens": 46, "n_pass": [346, 34, 32]}
{"time": "2021-02-24 04:25:27.289357", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ ExecutorService executor =(new Runnable(){run(){if(callback){(result);}}});shutdown();}", "n_tokens": 45, "n_pass": [351, 35, 33]}
{"time": "2021-02-24 04:25:30.060234", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ExecutorService executor =(new Runnable(){run(){if(callback){(result);}}});shutdown();}", "n_tokens": 44, "n_pass": [362, 36, 34]}
{"time": "2021-02-24 04:25:37.533204", "score": "0.4377", "loss": "7.2747", "code": "void async(Callback callback){ExecutorService executor=(new Runnable(){run(){if(callback){(result);}}});shutdown();}", "n_tokens": 43, "n_pass": [366, 40, 35]}

Minimal simplified code:
void async(Callback callback){ExecutorService executor=(new Runnable(){run(){if(callback){(result);}}});shutdown();}

