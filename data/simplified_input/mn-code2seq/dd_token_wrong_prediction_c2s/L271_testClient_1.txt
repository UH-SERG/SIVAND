
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/modules/tomcat-lite/test/org/apache/tomcat/lite/http/SpdyTest_testClient.java
method_name = testClient
method_body = public void testClient() throws IOException { HttpRequest req = spdyCon.request("http://localhost:8802/echo/test1"); req.setProtocol("SPDY/1.0"); HttpResponse res = req.waitResponse(); assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader(); String line1 = reader.readLine(); }
predict, score, loss = testSpdy, 0.6314559578895569, 7.2422261238098145

Trace of simplified code(s):
{"time": "2021-02-24 09:01:47.350761", "score": "0.6315", "loss": "7.2422", "code": "public void testClient() throws IOException { HttpRequest req = spdyCon.request(\"http://localhost:8802/echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = req.waitResponse(); assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader(); String line1 = reader.readLine(); }", "n_tokens": 114, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:01:53.903387", "score": "0.8155", "loss": "8.5149", "code": "public void testClient() throws IOException { HttpRequest req = spdyCon.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = req.waitResponse(); assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader(); String line1 = reader.readLine(); }", "n_tokens": 107, "n_pass": [48, 4, 2]}
{"time": "2021-02-24 09:01:55.824770", "score": "0.8441", "loss": "8.7114", "code": "public void testClient() throws IOException { HttpRequest req = spdyCon.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader(); String line1 = reader.readLine(); }", "n_tokens": 100, "n_pass": [52, 5, 3]}
{"time": "2021-02-24 09:01:57.740825", "score": "0.7746", "loss": "8.4403", "code": "public void testClient() throws IOException { HttpRequest req = spdyCon.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader();reader.readLine(); }", "n_tokens": 92, "n_pass": [57, 6, 4]}
{"time": "2021-02-24 09:01:59.632214", "score": "0.8478", "loss": "8.7592", "code": "public void testClient() throws IOException { HttpRequest req = spdyCon.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader =reader.readLine(); }", "n_tokens": 85, "n_pass": [70, 7, 5]}
{"time": "2021-02-24 09:02:02.056170", "score": "0.7463", "loss": "8.1806", "code": "public void testClient() throws IOException { HttpRequest= spdyCon.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader =reader.readLine(); }", "n_tokens": 82, "n_pass": [114, 8, 6]}
{"time": "2021-02-24 09:02:03.960549", "score": "0.806", "loss": "8.5922", "code": "public void testClient() throws IOException { HttpRequest.request(\"http://echo/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader =reader.readLine(); }", "n_tokens": 79, "n_pass": [115, 9, 7]}
{"time": "2021-02-24 09:02:05.861822", "score": "0.8149", "loss": "8.2904", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res.getStatus()); BufferedReader reader =reader.readLine(); }", "n_tokens": 76, "n_pass": [118, 10, 8]}
{"time": "2021-02-24 09:02:09.622139", "score": "0.7602", "loss": "7.8621", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res); BufferedReader reader =reader.readLine(); }", "n_tokens": 72, "n_pass": [128, 12, 9]}
{"time": "2021-02-24 09:02:11.522414", "score": "0.6099", "loss": "7.3273", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(200, res); BufferedReaderreader.readLine(); }", "n_tokens": 68, "n_pass": [130, 13, 10]}
{"time": "2021-02-24 09:02:15.767281", "score": "0.5976", "loss": "7.6127", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20); BufferedReaderreader.readLine(); }", "n_tokens": 64, "n_pass": [148, 15, 11]}
{"time": "2021-02-24 09:02:22.227352", "score": "0.6396", "loss": "7.6804", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);reader.readLine(); }", "n_tokens": 62, "n_pass": [204, 17, 12]}
{"time": "2021-02-24 09:02:24.089714", "score": "0.7065", "loss": "7.7048", "code": "public void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 60, "n_pass": [205, 18, 13]}
{"time": "2021-02-24 09:02:25.946866", "score": "0.7065", "loss": "7.7048", "code": " void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 59, "n_pass": [209, 19, 14]}
{"time": "2021-02-24 09:02:27.869186", "score": "0.7065", "loss": "7.7048", "code": "void testClient() throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 58, "n_pass": [210, 20, 15]}
{"time": "2021-02-24 09:02:30.655079", "score": "0.7065", "loss": "7.7048", "code": "void testClient()throws IOException { HttpRequest.request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 57, "n_pass": [216, 21, 16]}
{"time": "2021-02-24 09:02:32.503784", "score": "0.7241", "loss": "7.7565", "code": "void testClient()throws IOException { request(\"http:/test1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 55, "n_pass": [220, 22, 17]}
{"time": "2021-02-24 09:02:34.391181", "score": "0.7241", "loss": "7.7565", "code": "void testClient()throws IOException { request(\"httptest1\"); req.setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 53, "n_pass": [223, 23, 18]}
{"time": "2021-02-24 09:02:38.149432", "score": "0.688", "loss": "7.6176", "code": "void testClient()throws IOException { request(\"httptest1\"); setProtocol(\"SPDY/1.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 51, "n_pass": [227, 25, 19]}
{"time": "2021-02-24 09:02:40.017962", "score": "0.617", "loss": "7.3735", "code": "void testClient()throws IOException { request(\"httptest1\"); setProtocol(\"SPDY.0\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 49, "n_pass": [230, 26, 20]}
{"time": "2021-02-24 09:02:41.920522", "score": "0.617", "loss": "7.3735", "code": "void testClient()throws IOException { request(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals(20);readLine(); }", "n_tokens": 47, "n_pass": [231, 27, 21]}
{"time": "2021-02-24 09:02:47.461574", "score": "0.7168", "loss": "7.7834", "code": "void testClient()throws IOException { request(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine(); }", "n_tokens": 45, "n_pass": [238, 30, 22]}
{"time": "2021-02-24 09:03:01.291018", "score": "0.7168", "loss": "7.7834", "code": "void testClient()throws IOException { request(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 44, "n_pass": [310, 34, 23]}
{"time": "2021-02-24 09:03:04.036140", "score": "0.7168", "loss": "7.7834", "code": "void testClient()throws IOException{ request(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 43, "n_pass": [319, 35, 24]}
{"time": "2021-02-24 09:03:05.946103", "score": "0.7168", "loss": "7.7834", "code": "void testClient()throws IOException{request(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 42, "n_pass": [321, 36, 25]}
{"time": "2021-02-24 09:03:07.791028", "score": "0.724", "loss": "7.7872", "code": "void testClient()throws IOException{(\"httptest1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 41, "n_pass": [322, 37, 26]}
{"time": "2021-02-24 09:03:09.649515", "score": "0.622", "loss": "8.0416", "code": "void testClient()throws IOException{(\"test1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 40, "n_pass": [325, 38, 27]}
{"time": "2021-02-24 09:03:11.461545", "score": "0.6548", "loss": "8.4394", "code": "void testClient()throws IOException{(\"1\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 39, "n_pass": [326, 39, 28]}
{"time": "2021-02-24 09:03:13.325716", "score": "0.639", "loss": "8.393", "code": "void testClient()throws IOException{(\"\"); setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 38, "n_pass": [327, 40, 29]}
{"time": "2021-02-24 09:03:15.192621", "score": "0.639", "loss": "8.393", "code": "void testClient()throws IOException{(\"\");setProtocol(\"SPDY\"); HttpResponse res = assertEquals();readLine();}", "n_tokens": 37, "n_pass": [331, 41, 30]}
{"time": "2021-02-24 09:03:20.779170", "score": "0.639", "loss": "8.393", "code": "void testClient()throws IOException{(\"\");setProtocol(\"SPDY\");HttpResponse res = assertEquals();readLine();}", "n_tokens": 36, "n_pass": [339, 44, 31]}
{"time": "2021-02-24 09:03:28.133642", "score": "0.639", "loss": "8.393", "code": "void testClient()throws IOException{(\"\");setProtocol(\"SPDY\");HttpResponse res= assertEquals();readLine();}", "n_tokens": 35, "n_pass": [343, 48, 32]}
{"time": "2021-02-24 09:03:29.984150", "score": "0.639", "loss": "8.393", "code": "void testClient()throws IOException{(\"\");setProtocol(\"SPDY\");HttpResponse res=assertEquals();readLine();}", "n_tokens": 34, "n_pass": [345, 49, 33]}

Minimal simplified code:
void testClient()throws IOException{("");setProtocol("SPDY");HttpResponse res=assertEquals();readLine();}

