
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-upgrade/src/main/java/org/forgerock/openam/upgrade/steps/policy/conditions/OldPolicyConditionMigrationUpgradeStep_addResourceType.java
method_name = addResourceType
method_body = private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error("Failed to modify privilege {} in realm {}! Associated application has no Resource Types.", privilege.getName(), realm); throw new UpgradeException("Failed to modify privilege!"); } }
predict, score, loss = upgradePrivilege, 0.41812437772750854, 14.5726957321167

Trace of simplified code(s):
{"time": "2021-02-23 22:48:45.577709", "score": "0.5043", "loss": "14.6527", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed to modify privilege {} in realm {}! Associated application has no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 175, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 22:48:49.490369", "score": "0.5531", "loss": "14.0692", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed realm {}! Associated application has no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 164, "n_pass": [54, 3, 2]}
{"time": "2021-02-23 22:48:51.431501", "score": "0.4584", "loss": "13.4899", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed Associated application has no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 158, "n_pass": [100, 4, 3]}
{"time": "2021-02-23 22:48:53.402606", "score": "0.5294", "loss": "12.8572", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 152, "n_pass": [101, 5, 4]}
{"time": "2021-02-23 22:48:57.288678", "score": "0.5939", "loss": "13.0879", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {  privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 147, "n_pass": [114, 7, 5]}
{"time": "2021-02-23 22:48:59.221333", "score": "0.5073", "loss": "12.7327", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {  privilege.getEntitlement().getApplication(getAdminSubject); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed no Resource Types.\", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 142, "n_pass": [117, 8, 6]}
{"time": "2021-02-23 22:49:02.097622", "score": "0.5353", "loss": "13.5174", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {  privilege.getEntitlement().getApplication(getAdminSubject); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 136, "n_pass": [130, 9, 7]}
{"time": "2021-02-23 22:49:04.050901", "score": "0.5131", "loss": "12.4195", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {  privilege.getEntitlement(); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 131, "n_pass": [143, 10, 8]}
{"time": "2021-02-23 22:49:07.287825", "score": "0.5131", "loss": "12.4195", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 129, "n_pass": [216, 11, 9]}
{"time": "2021-02-23 22:49:10.526774", "score": "0.4517", "loss": "11.2215", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 126, "n_pass": [222, 12, 10]}
{"time": "2021-02-23 22:49:12.448374", "score": "0.4442", "loss": "11.7372", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\"Failed to modify privilege!\"); } }", "n_tokens": 123, "n_pass": [229, 13, 11]}
{"time": "2021-02-23 22:49:18.366210", "score": "0.4654", "loss": "11.4051", "code": "private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 120, "n_pass": [247, 16, 12]}
{"time": "2021-02-23 22:49:22.246213", "score": "0.4654", "loss": "11.4051", "code": "void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 118, "n_pass": [252, 18, 13]}
{"time": "2021-02-23 22:49:27.967682", "score": "0.5725", "loss": "12.0416", "code": "void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 115, "n_pass": [281, 20, 14]}
{"time": "2021-02-23 22:49:34.297202", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws  EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 113, "n_pass": [304, 23, 15]}
{"time": "2021-02-23 22:49:48.957483", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException {privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 112, "n_pass": [428, 26, 16]}
{"time": "2021-02-23 22:49:50.863688", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement(); Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 111, "n_pass": [429, 27, 17]}
{"time": "2021-02-23 22:49:54.681315", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String> resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 110, "n_pass": [437, 29, 18]}
{"time": "2021-02-23 22:49:57.026872", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids =getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 109, "n_pass": [442, 30, 19]}
{"time": "2021-02-23 22:49:58.962413", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 108, "n_pass": [444, 31, 20]}
{"time": "2021-02-23 22:50:01.324491", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 107, "n_pass": [450, 32, 21]}
{"time": "2021-02-23 22:50:03.227576", "score": "0.3738", "loss": "12.0063", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty(resourceTypeUuids)) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 106, "n_pass": [452, 33, 22]}
{"time": "2021-02-23 22:50:07.070449", "score": "0.3363", "loss": "12.6278", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()) { (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 105, "n_pass": [458, 35, 23]}
{"time": "2021-02-23 22:50:08.957331", "score": "0.3363", "loss": "12.6278", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application.getResourceTypeUuids().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 104, "n_pass": [461, 36, 24]}
{"time": "2021-02-23 22:50:10.851774", "score": "0.3426", "loss": "13.0976", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application().iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 102, "n_pass": [464, 37, 25]}
{"time": "2021-02-23 22:50:12.800351", "score": "0.3414", "loss": "13.1851", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application.iterator().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 100, "n_pass": [465, 38, 26]}
{"time": "2021-02-23 22:50:14.708786", "score": "0.3486", "loss": "13.1902", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application().next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 98, "n_pass": [466, 39, 27]}
{"time": "2021-02-23 22:50:16.654588", "score": "0.347", "loss": "13.2266", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application.next()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 96, "n_pass": [467, 40, 28]}
{"time": "2021-02-23 22:50:18.552230", "score": "0.3545", "loss": "13.3875", "code": "void addResourceType(Privilege privilege, String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 94, "n_pass": [468, 41, 29]}
{"time": "2021-02-23 22:50:34.814185", "score": "0.3545", "loss": "13.3875", "code": "void addResourceType(Privilege privilege,String realm) throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 93, "n_pass": [501, 49, 30]}
{"time": "2021-02-23 22:50:36.703810", "score": "0.3545", "loss": "13.3875", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege.getEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 92, "n_pass": [506, 50, 31]}
{"time": "2021-02-23 22:50:38.616702", "score": "0.3887", "loss": "13.0542", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilegegetEntitlement();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 91, "n_pass": [512, 51, 32]}
{"time": "2021-02-23 22:50:40.561960", "score": "0.3657", "loss": "13.3201", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils.isNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 90, "n_pass": [513, 52, 33]}
{"time": "2021-02-23 22:50:44.331660", "score": "0.4174", "loss": "12.3756", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtilsisNotEmpty()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 89, "n_pass": [530, 53, 34]}
{"time": "2021-02-23 22:50:46.278692", "score": "0.4356", "loss": "13.8924", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application()); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 88, "n_pass": [531, 54, 35]}
{"time": "2021-02-23 22:50:48.210373", "score": "0.4173", "loss": "13.7244", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ DEBUG.error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 86, "n_pass": [537, 55, 36]}
{"time": "2021-02-23 22:50:50.124260", "score": "0.4692", "loss": "14.0983", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", privilege.getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 84, "n_pass": [541, 56, 37]}
{"time": "2021-02-23 22:50:52.026887", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm); throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 82, "n_pass": [546, 57, 38]}
{"time": "2021-02-23 22:51:11.070774", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\" modify privilege!\"); } }", "n_tokens": 81, "n_pass": [652, 62, 39]}
{"time": "2021-02-23 22:51:16.773909", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege!\"); } }", "n_tokens": 80, "n_pass": [659, 65, 40]}
{"time": "2021-02-23 22:51:24.332836", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\"); } }", "n_tokens": 79, "n_pass": [663, 69, 41]}
{"time": "2021-02-23 22:51:26.317244", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\");} }", "n_tokens": 78, "n_pass": [667, 70, 42]}
{"time": "2021-02-23 22:51:28.225717", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){ (application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 77, "n_pass": [669, 71, 43]}
{"time": "2021-02-23 22:51:32.927691", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application); }{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 76, "n_pass": [708, 72, 44]}
{"time": "2021-02-23 22:51:34.832073", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{ error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 75, "n_pass": [713, 73, 45]}
{"time": "2021-02-23 22:51:36.736405", "score": "0.5309", "loss": "13.4995", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error(\"Failed \", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 74, "n_pass": [716, 74, 46]}
{"time": "2021-02-23 22:51:38.603201", "score": "0.5171", "loss": "13.1176", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error(\" \", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 73, "n_pass": [720, 75, 47]}
{"time": "2021-02-23 22:51:40.471092", "score": "0.553", "loss": "13.8419", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error(\"\", getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 72, "n_pass": [721, 76, 48]}
{"time": "2021-02-23 22:51:42.384386", "score": "0.553", "loss": "13.8419", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error(\"\",getName(), realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 71, "n_pass": [724, 77, 49]}
{"time": "2021-02-23 22:51:44.276933", "score": "0.553", "loss": "13.8419", "code": "void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error(\"\",getName(),realm);throw new UpgradeException(\"modify privilege\");}}", "n_tokens": 70, "n_pass": [729, 78, 50]}

Minimal simplified code:
void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error("",getName(),realm);throw new UpgradeException("modify privilege");}}

