
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/test/java/com/questdb/parser/sql/QueryParserTest_testUnderTerminatedOver.java
method_name = testUnderTerminatedOver
method_body = @Test public void testUnderTerminatedOver() { try { parser.parse("select a,b, f(c) my over (partition by b order by ts from xyz"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }
predict, score, loss = testInvalid, 0.6787365078926086, 28.876298904418945

Trace of simplified code(s):
{"time": "2021-02-23 20:39:11.720506", "score": "0.6787", "loss": "28.8763", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select a,b, f(c) my over (partition by b order by ts from xyz\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 20:39:19.687917", "score": "0.6952", "loss": "28.436", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select (c) my over (partition by b order by ts from xyz\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 90, "n_pass": [48, 5, 2]}
{"time": "2021-02-23 20:39:23.394268", "score": "0.6952", "loss": "28.436", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select (c) my over (partition by ts from xyz\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 84, "n_pass": [50, 7, 3]}
{"time": "2021-02-23 20:39:25.274386", "score": "0.6952", "loss": "28.436", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select (c) my over (partition by\"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 78, "n_pass": [51, 8, 4]}
{"time": "2021-02-23 20:39:29.455047", "score": "0.6189", "loss": "31.8936", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select (c) my \"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 72, "n_pass": [64, 10, 5]}
{"time": "2021-02-23 20:39:31.789682", "score": "0.5534", "loss": "33.0351", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \"); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 66, "n_pass": [76, 11, 6]}
{"time": "2021-02-23 20:39:34.128480", "score": "0.5618", "loss": "32.7413", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }", "n_tokens": 63, "n_pass": [111, 12, 7]}
{"time": "2021-02-23 20:39:37.872611", "score": "0.5512", "loss": "33.5206", "code": "@Test public void testUnderTerminatedOver() { try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 60, "n_pass": [119, 14, 8]}
{"time": "2021-02-23 20:39:54.810205", "score": "0.537", "loss": "33.8253", "code": "@Testpublic void testUnderTerminatedOver() { try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 59, "n_pass": [190, 21, 9]}
{"time": "2021-02-23 20:39:56.680744", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver() { try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 58, "n_pass": [191, 22, 10]}
{"time": "2021-02-23 20:39:59.872623", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){ try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 57, "n_pass": [198, 23, 11]}
{"time": "2021-02-23 20:40:01.740100", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try { parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 56, "n_pass": [200, 24, 12]}
{"time": "2021-02-23 20:40:03.553867", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{ parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 55, "n_pass": [202, 25, 13]}
{"time": "2021-02-23 20:40:05.427990", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select \");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 54, "n_pass": [204, 26, 14]}
{"time": "2021-02-23 20:40:25.218952", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail(); } catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 53, "n_pass": [279, 33, 15]}
{"time": "2021-02-23 20:40:27.089196", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();} catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 52, "n_pass": [287, 34, 16]}
{"time": "2021-02-23 20:40:28.935334", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch (ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 51, "n_pass": [289, 35, 17]}
{"time": "2021-02-23 20:40:30.792385", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e) { Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 50, "n_pass": [291, 36, 18]}
{"time": "2021-02-23 20:40:32.670948", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){ Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 49, "n_pass": [297, 37, 19]}
{"time": "2021-02-23 20:40:34.520869", "score": "0.5512", "loss": "33.5206", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){Assert.assertEquals( QueryError.getPosition()); } }", "n_tokens": 48, "n_pass": [299, 38, 20]}
{"time": "2021-02-23 20:40:36.393137", "score": "0.6382", "loss": "31.6261", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){AssertassertEquals( QueryError.getPosition()); } }", "n_tokens": 47, "n_pass": [301, 39, 21]}
{"time": "2021-02-23 20:40:38.256725", "score": "0.5995", "loss": "32.5872", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){Assert( QueryError.getPosition()); } }", "n_tokens": 46, "n_pass": [302, 40, 22]}
{"time": "2021-02-23 20:40:40.086507", "score": "0.5995", "loss": "32.5872", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){Assert(QueryError.getPosition()); } }", "n_tokens": 45, "n_pass": [304, 41, 23]}
{"time": "2021-02-23 20:40:43.809396", "score": "0.5995", "loss": "32.5872", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){Assert(QueryError.getPosition());} }", "n_tokens": 44, "n_pass": [312, 43, 24]}
{"time": "2021-02-23 20:40:45.651167", "score": "0.5995", "loss": "32.5872", "code": "@Test void testUnderTerminatedOver(){try{parser.parse(\"select\");fail();}catch(ParserException e){Assert(QueryError.getPosition());}}", "n_tokens": 43, "n_pass": [314, 44, 25]}
{"time": "2021-02-23 20:40:48.824729", "score": "0.4651", "loss": "31.8888", "code": "@Test void testUnderTerminatedOver(){try{parserparse(\"select\");fail();}catch(ParserException e){Assert(QueryError.getPosition());}}", "n_tokens": 42, "n_pass": [328, 45, 26]}
{"time": "2021-02-23 20:40:50.658609", "score": "0.5189", "loss": "31.8307", "code": "@Test void testUnderTerminatedOver(){try{parser(\"select\");fail();}catch(ParserException e){Assert(QueryError.getPosition());}}", "n_tokens": 41, "n_pass": [329, 46, 27]}
{"time": "2021-02-23 20:40:54.340657", "score": "0.6215", "loss": "30.7946", "code": "@Test void testUnderTerminatedOver(){try{parser(\"select\");fail();}catch(ParserException e){(QueryError.getPosition());}}", "n_tokens": 40, "n_pass": [348, 48, 28]}

Minimal simplified code:
@Test void testUnderTerminatedOver(){try{parser("select");fail();}catch(ParserException e){(QueryError.getPosition());}}

