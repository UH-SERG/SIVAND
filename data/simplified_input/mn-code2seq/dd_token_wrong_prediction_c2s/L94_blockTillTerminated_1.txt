
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/internal/failover/thread/TerminableRunnable_blockTillTerminated.java
method_name = blockTillTerminated
method_body = public void blockTillTerminated() { while (!runState.compareAndSet(State.IDLE, State.REMOVED)) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }
predict, score, loss = run, 0.4591905176639557, 29.06223487854004

Trace of simplified code(s):
{"time": "2021-02-24 10:25:57.930201", "score": "0.4592", "loss": "29.0622", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.IDLE, State.REMOVED)) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }", "n_tokens": 81, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 10:25:59.840698", "score": "0.5175", "loss": "29.2761", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }", "n_tokens": 76, "n_pass": [48, 2, 2]}
{"time": "2021-02-24 10:26:01.718187", "score": "0.5373", "loss": "28.5145", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { LockSupport.parkNanos((10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }", "n_tokens": 71, "n_pass": [50, 3, 3]}
{"time": "2021-02-24 10:26:03.631549", "score": "0.5695", "loss": "27.7566", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { ((10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }", "n_tokens": 68, "n_pass": [94, 4, 4]}
{"time": "2021-02-24 10:26:05.500313", "score": "0.4816", "loss": "27.5707", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); return; } } }", "n_tokens": 65, "n_pass": [103, 5, 5]}
{"time": "2021-02-24 10:26:07.375245", "score": "0.4816", "loss": "27.5707", "code": "public void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 62, "n_pass": [106, 6, 6]}
{"time": "2021-02-24 10:26:09.226193", "score": "0.4816", "loss": "27.5707", "code": "void blockTillTerminated() { while (!runState.compareAndSet(State.REMOVED)) { ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 60, "n_pass": [109, 7, 7]}
{"time": "2021-02-24 10:26:13.389747", "score": "0.4865", "loss": "27.5022", "code": "void blockTillTerminated() { while (!runState.compareAndSet(REMOVED)) { ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 58, "n_pass": [118, 9, 8]}
{"time": "2021-02-24 10:26:21.398418", "score": "0.3978", "loss": "26.4309", "code": "void blockTillTerminated() { while (!runState.compareAndSet()) { ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 57, "n_pass": [188, 11, 9]}
{"time": "2021-02-24 10:26:23.254590", "score": "0.3978", "loss": "26.4309", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){ ((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 56, "n_pass": [190, 12, 10]}
{"time": "2021-02-24 10:26:25.094585", "score": "0.3978", "loss": "26.4309", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((10)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 55, "n_pass": [192, 13, 11]}
{"time": "2021-02-24 10:26:26.923083", "score": "0.3667", "loss": "26.7225", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0)); if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 54, "n_pass": [195, 14, 12]}
{"time": "2021-02-24 10:26:28.744975", "score": "0.3667", "loss": "26.7225", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if (Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 53, "n_pass": [200, 15, 13]}
{"time": "2021-02-24 10:26:30.589419", "score": "0.3667", "loss": "26.7225", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if(Thread.currentThread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 52, "n_pass": [202, 16, 14]}
{"time": "2021-02-24 10:26:32.464957", "score": "0.3774", "loss": "26.5447", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if(Thread().isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 50, "n_pass": [205, 17, 15]}
{"time": "2021-02-24 10:26:34.341285", "score": "0.4322", "loss": "27.4337", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if(Thread.isInterrupted()) { (State.REMOVED); } } }", "n_tokens": 48, "n_pass": [206, 18, 16]}
{"time": "2021-02-24 10:26:36.180364", "score": "0.6232", "loss": "29.369", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if(Thread()) { (State.REMOVED); } } }", "n_tokens": 46, "n_pass": [207, 19, 17]}
{"time": "2021-02-24 10:26:38.027224", "score": "0.4317", "loss": "30.3341", "code": "void blockTillTerminated() { while (!runState.compareAndSet()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 44, "n_pass": [208, 20, 18]}
{"time": "2021-02-24 10:26:42.622116", "score": "0.4317", "loss": "30.3341", "code": "void blockTillTerminated(){ while (!runState.compareAndSet()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 43, "n_pass": [222, 22, 19]}
{"time": "2021-02-24 10:26:44.462123", "score": "0.4317", "loss": "30.3341", "code": "void blockTillTerminated(){while (!runState.compareAndSet()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 42, "n_pass": [224, 23, 20]}
{"time": "2021-02-24 10:26:46.299368", "score": "0.4317", "loss": "30.3341", "code": "void blockTillTerminated(){while(!runState.compareAndSet()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 41, "n_pass": [226, 24, 21]}
{"time": "2021-02-24 10:26:49.958489", "score": "0.7041", "loss": "32.2421", "code": "void blockTillTerminated(){while(!runStatecompareAndSet()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 40, "n_pass": [230, 26, 22]}
{"time": "2021-02-24 10:26:51.763775", "score": "0.8812", "loss": "33.0648", "code": "void blockTillTerminated(){while(!runState()){((0));if(Thread) { (State.REMOVED); } } }", "n_tokens": 39, "n_pass": [231, 27, 23]}
{"time": "2021-02-24 10:26:53.632777", "score": "0.8944", "loss": "32.0062", "code": "void blockTillTerminated(){while(!runState()){((0));if(Thread) { (State); } } }", "n_tokens": 37, "n_pass": [248, 28, 24]}
{"time": "2021-02-24 10:26:56.320674", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread) { (State); } } }", "n_tokens": 36, "n_pass": [261, 29, 25]}
{"time": "2021-02-24 10:27:01.645344", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread){ (State); } } }", "n_tokens": 35, "n_pass": [306, 30, 26]}
{"time": "2021-02-24 10:27:03.484040", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread){(State); } } }", "n_tokens": 34, "n_pass": [308, 31, 27]}
{"time": "2021-02-24 10:27:05.315869", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread){(State);} } }", "n_tokens": 33, "n_pass": [313, 32, 28]}
{"time": "2021-02-24 10:27:07.120583", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread){(State);}} }", "n_tokens": 32, "n_pass": [315, 33, 29]}
{"time": "2021-02-24 10:27:08.935946", "score": "0.5558", "loss": "30.2493", "code": "void blockTillTerminated(){while(runState()){((0));if(Thread){(State);}}}", "n_tokens": 31, "n_pass": [317, 34, 30]}

Minimal simplified code:
void blockTillTerminated(){while(runState()){((0));if(Thread){(State);}}}

