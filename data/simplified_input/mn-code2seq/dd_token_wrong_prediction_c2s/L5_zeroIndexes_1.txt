
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/core/src/main/java/zemberek/core/collections/FixedBitVector_zeroIndexes.java
method_name = zeroIndexes
method_body = public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; int j = 0; for (int i = 0; i < length; i++) { if (!get(i)) { zeroIndexes[j++] = i; } } return zeroIndexes; }
predict, score, loss = getZeroIndexes, 0.6820645928382874, 11.866229057312012

Trace of simplified code(s):
{"time": "2021-02-24 09:46:07.889764", "score": "0.6821", "loss": "11.8662", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; int j = 0; for (int i = 0; i < length; i++) { if (!get(i)) { zeroIndexes[j++] = i; } } return zeroIndexes; }", "n_tokens": 99, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 09:46:10.280898", "score": "0.6984", "loss": "11.4064", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; 0; for (int i = 0; i < length; i++) { if (!get(i)) { zeroIndexes[j++] = i; } } return zeroIndexes; }", "n_tokens": 93, "n_pass": [49, 2, 2]}
{"time": "2021-02-24 09:46:12.194384", "score": "0.7041", "loss": "11.047", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; 0; for (0; i < length; i++) { if (!get(i)) { zeroIndexes[j++] = i; } } return zeroIndexes; }", "n_tokens": 87, "n_pass": [51, 3, 3]}
{"time": "2021-02-24 09:46:14.102757", "score": "0.6985", "loss": "11.2348", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; 0; for (0; i < length; i++) { if (!get(i)) { zeroIndexes i; } } return zeroIndexes; }", "n_tokens": 80, "n_pass": [57, 4, 4]}
{"time": "2021-02-24 09:46:18.864656", "score": "0.7016", "loss": "11.4755", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; i < length; i++) { if (!get(i)) { zeroIndexes i; } } return zeroIndexes; }", "n_tokens": 77, "n_pass": [111, 6, 5]}
{"time": "2021-02-24 09:46:20.786483", "score": "0.7836", "loss": "12.5924", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0;  length; i++) { if (!get(i)) { zeroIndexes i; } } return zeroIndexes; }", "n_tokens": 74, "n_pass": [113, 7, 6]}
{"time": "2021-02-24 09:46:30.231150", "score": "0.7739", "loss": "12.4317", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if (!get(i)) { zeroIndexes i; } } return zeroIndexes; }", "n_tokens": 72, "n_pass": [191, 9, 7]}
{"time": "2021-02-24 09:46:32.144209", "score": "0.6354", "loss": "11.8648", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { zeroIndexes i; } } return zeroIndexes; }", "n_tokens": 70, "n_pass": [198, 10, 8]}
{"time": "2021-02-24 09:46:34.064247", "score": "0.6152", "loss": "10.7075", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } return zeroIndexes; }", "n_tokens": 68, "n_pass": [202, 11, 9]}
{"time": "2021-02-24 09:46:37.889943", "score": "0.5994", "loss": "12.3041", "code": "public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 66, "n_pass": [207, 13, 10]}
{"time": "2021-02-24 09:46:41.639610", "score": "0.5994", "loss": "12.3041", "code": " int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 65, "n_pass": [210, 15, 11]}
{"time": "2021-02-24 09:46:43.560948", "score": "0.5994", "loss": "12.3041", "code": "int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 64, "n_pass": [211, 16, 12]}
{"time": "2021-02-24 09:46:45.501152", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 63, "n_pass": [215, 17, 13]}
{"time": "2021-02-24 09:46:47.391305", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes(){ int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 62, "n_pass": [219, 18, 14]}
{"time": "2021-02-24 09:46:49.307796", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes(){int[] zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 61, "n_pass": [221, 19, 15]}
{"time": "2021-02-24 09:46:51.215513", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes(){int[]zeroIndexes = new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 60, "n_pass": [225, 20, 16]}
{"time": "2021-02-24 09:46:53.105207", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes(){int[]zeroIndexes= new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 59, "n_pass": [227, 21, 17]}
{"time": "2021-02-24 09:46:55.023848", "score": "0.5994", "loss": "12.3041", "code": "int[]zeroIndexes(){int[]zeroIndexes=new int[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 58, "n_pass": [229, 22, 18]}
{"time": "2021-02-24 09:46:56.896305", "score": "0.5511", "loss": "11.2355", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) { i; } } zeroIndexes; }", "n_tokens": 57, "n_pass": [231, 23, 19]}
{"time": "2021-02-24 09:46:58.774276", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) {; } } zeroIndexes; }", "n_tokens": 55, "n_pass": [248, 24, 20]}
{"time": "2021-02-24 09:47:00.639627", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) {} } zeroIndexes; }", "n_tokens": 53, "n_pass": [249, 25, 21]}
{"time": "2021-02-24 09:47:10.945086", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) {}} zeroIndexes; }", "n_tokens": 52, "n_pass": [323, 27, 22]}
{"time": "2021-02-24 09:47:12.819558", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) {}}zeroIndexes; }", "n_tokens": 51, "n_pass": [325, 28, 23]}
{"time": "2021-02-24 09:47:16.552172", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()]; for (0; ; i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 50, "n_pass": [328, 30, 24]}
{"time": "2021-02-24 09:47:18.475155", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for (0; ; i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 49, "n_pass": [350, 31, 25]}
{"time": "2021-02-24 09:47:20.385825", "score": "0.5656", "loss": "11.2485", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(0; ; i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 48, "n_pass": [352, 32, 26]}
{"time": "2021-02-24 09:47:22.248581", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(; ; i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 47, "n_pass": [354, 33, 27]}
{"time": "2021-02-24 09:47:24.131474", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;; i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 46, "n_pass": [356, 34, 28]}
{"time": "2021-02-24 09:47:25.976858", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++) { if ((i)) {}}zeroIndexes;}", "n_tokens": 45, "n_pass": [358, 35, 29]}
{"time": "2021-02-24 09:47:27.841784", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){ if ((i)) {}}zeroIndexes;}", "n_tokens": 44, "n_pass": [363, 36, 30]}
{"time": "2021-02-24 09:47:29.732415", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){if ((i)) {}}zeroIndexes;}", "n_tokens": 43, "n_pass": [365, 37, 31]}
{"time": "2021-02-24 09:47:31.605948", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){if((i)) {}}zeroIndexes;}", "n_tokens": 42, "n_pass": [367, 38, 32]}
{"time": "2021-02-24 09:47:33.468372", "score": "0.6259", "loss": "11.1669", "code": "int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){if((i)){}}zeroIndexes;}", "n_tokens": 41, "n_pass": [373, 39, 33]}

Minimal simplified code:
int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){if((i)){}}zeroIndexes;}

