
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/Node_rtrim.java
method_name = rtrim
method_body = public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }
predict, score, loss = trimToEnd, 0.31504639983177185, 9.999269485473633

Trace of simplified code(s):
{"time": "2021-02-23 19:10:24.613042", "score": "0.315", "loss": "9.9993", "code": "public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:10:28.396189", "score": "0.3467", "loss": "9.6056", "code": "public void rtrim() {  text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }", "n_tokens": 78, "n_pass": [46, 3, 2]}
{"time": "2021-02-23 19:10:30.249130", "score": "0.3181", "loss": "9.4231", "code": "public void rtrim() {  text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 73, "n_pass": [55, 4, 3]}
{"time": "2021-02-23 19:10:34.467344", "score": "0.3181", "loss": "9.4231", "code": "void rtrim() {  text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 71, "n_pass": [104, 6, 4]}
{"time": "2021-02-23 19:10:36.771561", "score": "0.3046", "loss": "9.4132", "code": "void rtrim() {  text(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 69, "n_pass": [110, 7, 5]}
{"time": "2021-02-23 19:10:38.577671", "score": "0.2705", "loss": "9.708", "code": "void rtrim() {  text; while ((index > 0) && (text.charAt(index - 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 67, "n_pass": [111, 8, 6]}
{"time": "2021-02-23 19:10:42.288917", "score": "0.2406", "loss": "9.9836", "code": "void rtrim() {  text; while ((index > 0) && (text.charAt( 1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 64, "n_pass": [120, 10, 7]}
{"time": "2021-02-23 19:10:57.006918", "score": "0.2406", "loss": "9.9836", "code": "void rtrim() {  text; while ((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 63, "n_pass": [198, 15, 8]}
{"time": "2021-02-23 19:11:05.825418", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){  text; while ((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 62, "n_pass": [219, 19, 9]}
{"time": "2021-02-23 19:11:07.735246", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){ text; while ((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 61, "n_pass": [221, 20, 10]}
{"time": "2021-02-23 19:11:09.578717", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text; while ((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 60, "n_pass": [222, 21, 11]}
{"time": "2021-02-23 19:11:13.438276", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while ((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 59, "n_pass": [225, 23, 12]}
{"time": "2021-02-23 19:11:15.296697", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while((index > 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 58, "n_pass": [227, 24, 13]}
{"time": "2021-02-23 19:11:17.123663", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while((index> 0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 57, "n_pass": [231, 25, 14]}
{"time": "2021-02-23 19:11:19.022520", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while((index>0) && (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 56, "n_pass": [233, 26, 15]}
{"time": "2021-02-23 19:11:20.965093", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while((index>0)&& (text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 55, "n_pass": [236, 27, 16]}
{"time": "2021-02-23 19:11:26.577710", "score": "0.2406", "loss": "9.9836", "code": "void rtrim(){text;while((index>0)&&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 54, "n_pass": [239, 30, 17]}
{"time": "2021-02-23 19:11:39.054925", "score": "0.2588", "loss": "9.888", "code": "void rtrim(){text;while((index0)&&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 53, "n_pass": [273, 36, 18]}
{"time": "2021-02-23 19:11:40.906272", "score": "0.2588", "loss": "9.888", "code": "void rtrim(){text;while((index)&&(text.charAt(1) <= ' ')) { } text = text.substring(0, index); }", "n_tokens": 52, "n_pass": [274, 37, 19]}
{"time": "2021-02-23 19:11:50.587877", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1) <= ' ')) { } text = substring(0, index); }", "n_tokens": 50, "n_pass": [293, 42, 20]}
{"time": "2021-02-23 19:12:09.552423", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1) <= ' ')) { } text = substring(0,index); }", "n_tokens": 49, "n_pass": [361, 49, 21]}
{"time": "2021-02-23 19:12:11.410692", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1) <= ' ')) { } text = substring(0,index);}", "n_tokens": 48, "n_pass": [364, 50, 22]}
{"time": "2021-02-23 19:12:23.374806", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<= ' ')) { } text = substring(0,index);}", "n_tokens": 47, "n_pass": [388, 56, 23]}
{"time": "2021-02-23 19:12:27.530650", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')) { } text = substring(0,index);}", "n_tokens": 46, "n_pass": [391, 58, 24]}
{"time": "2021-02-23 19:12:29.780196", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){ } text = substring(0,index);}", "n_tokens": 45, "n_pass": [397, 59, 25]}
{"time": "2021-02-23 19:12:31.632100", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){} text = substring(0,index);}", "n_tokens": 44, "n_pass": [399, 60, 26]}
{"time": "2021-02-23 19:12:33.442949", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){}text = substring(0,index);}", "n_tokens": 43, "n_pass": [401, 61, 27]}
{"time": "2021-02-23 19:12:35.306416", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){}text= substring(0,index);}", "n_tokens": 42, "n_pass": [403, 62, 28]}
{"time": "2021-02-23 19:12:37.137884", "score": "0.2685", "loss": "9.2534", "code": "void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){}text=substring(0,index);}", "n_tokens": 41, "n_pass": [405, 63, 29]}

Minimal simplified code:
void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){}text=substring(0,index);}

