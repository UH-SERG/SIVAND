
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks-provider/src/androidTest/java/org/dmfs/provider/tasks/TaskProviderTest_testDeleteInstance.java
method_name = testDeleteInstance
method_body = @Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = new InstanceTable(mAuthority); RowSnapshot<Tasks> task = new VirtualRowSnapshot<>(taskTable); OperationsQueue queue = new BasicOperationsQueue(mClient); queue.enqueue(new Seq<>(new Put<>(taskList, new NameData("list1")), new Put<>(task, new TitleData("task1")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }
predict, score, loss = testDelete, 0.5127419233322144, 8.39011001586914

Trace of simplified code(s):
{"time": "2021-02-23 22:30:08.673000", "score": "0.454", "loss": "9.5897", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = new InstanceTable(mAuthority); RowSnapshot<Tasks> task = new VirtualRowSnapshot<>(taskTable); OperationsQueue queue = new BasicOperationsQueue(mClient); queue.enqueue(new Seq<>(new Put<>(taskList, new NameData(\"list1\")), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 251, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 22:30:13.273626", "score": "0.5392", "loss": "8.5853", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable =  new VirtualRowSnapshot<>(taskTable); OperationsQueue queue = new BasicOperationsQueue(mClient); queue.enqueue(new Seq<>(new Put<>(taskList, new NameData(\"list1\")), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 235, "n_pass": [49, 3, 2]}
{"time": "2021-02-23 22:30:15.239662", "score": "0.5414", "loss": "8.4154", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable =  new BasicOperationsQueue(mClient); queue.enqueue(new Seq<>(new Put<>(taskList, new NameData(\"list1\")), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 219, "n_pass": [50, 4, 3]}
{"time": "2021-02-23 22:30:17.719526", "score": "0.4736", "loss": "8.0178", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable =  queue.enqueue(new Seq<>(new Put<>(taskList, new NameData(\"list1\")), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 211, "n_pass": [93, 5, 4]}
{"time": "2021-02-23 22:30:20.708934", "score": "0.5658", "loss": "7.7488", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData(\"list1\")), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 207, "n_pass": [174, 6, 5]}
{"time": "2021-02-23 22:30:22.648049", "score": "0.5686", "loss": "7.9271", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task, new TitleData(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 203, "n_pass": [179, 7, 6]}
{"time": "2021-02-23 22:30:24.676525", "score": "0.5166", "loss": "8.7109", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 199, "n_pass": [183, 8, 7]}
{"time": "2021-02-23 22:30:28.771172", "score": "0.5382", "loss": "8.3778", "code": "@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 195, "n_pass": [195, 10, 8]}
{"time": "2021-02-23 22:30:30.742696", "score": "0.6515", "loss": "7.7166", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 192, "n_pass": [207, 11, 9]}
{"time": "2021-02-23 22:30:33.183394", "score": "0.6019", "loss": "8.4627", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskListTasksTable(mAuthority)); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 188, "n_pass": [222, 12, 10]}
{"time": "2021-02-23 22:30:35.113402", "score": "0.6246", "loss": "7.8576", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); Table<Instances> instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 184, "n_pass": [223, 13, 11]}
{"time": "2021-02-23 22:30:37.107263", "score": "0.6029", "loss": "8.967", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 180, "n_pass": [225, 14, 12]}
{"time": "2021-02-23 22:30:41.044192", "score": "0.5856", "loss": "8.9791", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queue; assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 176, "n_pass": [238, 16, 13]}
{"time": "2021-02-23 22:30:47.229861", "score": "0.6149", "loss": "8.7512", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 174, "n_pass": [374, 18, 14]}
{"time": "2021-02-23 22:30:49.186694", "score": "0.5869", "loss": "9.2315", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo<>(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 172, "n_pass": [381, 19, 15]}
{"time": "2021-02-23 22:30:51.157018", "score": "0.5899", "loss": "9.2982", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 170, "n_pass": [384, 20, 16]}
{"time": "2021-02-23 22:30:55.049439", "score": "0.5796", "loss": "9.2883", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 168, "n_pass": [391, 22, 17]}
{"time": "2021-02-23 22:30:57.002539", "score": "0.5796", "loss": "9.2883", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }", "n_tokens": 166, "n_pass": [394, 23, 18]}
{"time": "2021-02-23 22:30:59.010109", "score": "0.6", "loss": "9.0618", "code": "public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 164, "n_pass": [403, 24, 19]}
{"time": "2021-02-23 22:31:00.965027", "score": "0.6", "loss": "9.0618", "code": " void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 163, "n_pass": [409, 25, 20]}
{"time": "2021-02-23 22:31:02.938398", "score": "0.6", "loss": "9.0618", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 162, "n_pass": [410, 26, 21]}
{"time": "2021-02-23 22:31:06.746693", "score": "0.6", "loss": "9.0618", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 160, "n_pass": [424, 27, 22]}
{"time": "2021-02-23 22:31:09.612530", "score": "0.6017", "loss": "8.9959", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = TaskListScoped(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 158, "n_pass": [434, 28, 23]}
{"time": "2021-02-23 22:31:11.580199", "score": "0.6359", "loss": "9.0891", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList); TableinstancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 156, "n_pass": [435, 29, 24]}
{"time": "2021-02-23 22:31:13.481507", "score": "0.6624", "loss": "7.9602", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq<>(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 154, "n_pass": [438, 30, 25]}
{"time": "2021-02-23 22:31:17.341804", "score": "0.6624", "loss": "7.9602", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put<>(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 152, "n_pass": [443, 32, 26]}
{"time": "2021-02-23 22:31:19.304847", "score": "0.6624", "loss": "7.9602", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, new NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 150, "n_pass": [446, 33, 27]}
{"time": "2021-02-23 22:31:21.247622", "score": "0.67", "loss": "7.9504", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>(task,(\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 148, "n_pass": [449, 34, 28]}
{"time": "2021-02-23 22:31:23.212797", "score": "0.6611", "loss": "7.9067", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"task1\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 146, "n_pass": [456, 35, 29]}
{"time": "2021-02-23 22:31:25.126712", "score": "0.6508", "loss": "7.906", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\")))); queueassertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 144, "n_pass": [458, 36, 30]}
{"time": "2021-02-23 22:31:27.049989", "score": "0.606", "loss": "8.1869", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( new ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 142, "n_pass": [462, 37, 31]}
{"time": "2021-02-23 22:31:29.038484", "score": "0.6422", "loss": "8.0118", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instances.TASKtask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 140, "n_pass": [470, 38, 32]}
{"time": "2021-02-23 22:31:32.953550", "score": "0.6114", "loss": "8.473", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn( new AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 138, "n_pass": [473, 40, 33]}
{"time": "2021-02-23 22:31:34.885068", "score": "0.6493", "loss": "8.0816", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn( AssertEmptyTable(new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 136, "n_pass": [478, 41, 34]}
{"time": "2021-02-23 22:31:36.804353", "score": "0.6279", "loss": "8.4666", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable = (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 134, "n_pass": [479, 42, 35]}
{"time": "2021-02-23 22:31:43.959191", "score": "0.6371", "loss": "8.3107", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskList, NameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 132, "n_pass": [518, 44, 36]}
{"time": "2021-02-23 22:31:45.929389", "score": "0.6412", "loss": "8.2399", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()), new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 130, "n_pass": [524, 45, 37]}
{"time": "2021-02-23 22:32:09.490073", "score": "0.6412", "loss": "8.2399", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>( ReferringTo(Instancestask))), resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 129, "n_pass": [723, 49, 38]}
{"time": "2021-02-23 22:32:11.449547", "score": "0.6412", "loss": "8.2399", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))), resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 128, "n_pass": [752, 50, 39]}
{"time": "2021-02-23 22:32:19.281410", "score": "0.6412", "loss": "8.2399", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable(mAuthority)), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 127, "n_pass": [761, 54, 40]}
{"time": "2021-02-23 22:32:25.129114", "score": "0.6249", "loss": "8.2759", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()), new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 126, "n_pass": [769, 57, 41]}
{"time": "2021-02-23 22:32:27.098725", "score": "0.6249", "loss": "8.2759", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>(InstanceTable(mAuthority)))); }", "n_tokens": 125, "n_pass": [773, 58, 42]}
{"time": "2021-02-23 22:32:29.025500", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority)))); }", "n_tokens": 124, "n_pass": [780, 59, 43]}
{"time": "2021-02-23 22:32:30.950802", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 123, "n_pass": [788, 60, 44]}
{"time": "2021-02-23 22:32:33.776770", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 122, "n_pass": [795, 61, 45]}
{"time": "2021-02-23 22:32:35.689971", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{ RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 121, "n_pass": [799, 62, 46]}
{"time": "2021-02-23 22:32:37.629401", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 120, "n_pass": [801, 63, 47]}
{"time": "2021-02-23 22:32:40.060055", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList = new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 119, "n_pass": [806, 64, 48]}
{"time": "2021-02-23 22:32:42.012560", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList= new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 118, "n_pass": [808, 65, 49]}
{"time": "2021-02-23 22:32:43.976761", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 117, "n_pass": [810, 66, 50]}
{"time": "2021-02-23 22:32:55.467977", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks> taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 116, "n_pass": [823, 72, 51]}
{"time": "2021-02-23 22:32:57.872282", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable =(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 115, "n_pass": [828, 73, 52]}
{"time": "2021-02-23 22:32:59.819976", "score": "0.5861", "loss": "8.8743", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList);instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 114, "n_pass": [830, 74, 53]}
{"time": "2021-02-23 22:33:02.274277", "score": "0.582", "loss": "8.7335", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable (new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 113, "n_pass": [835, 75, 54]}
{"time": "2021-02-23 22:33:06.134259", "score": "0.582", "loss": "8.7335", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(taskListNameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 112, "n_pass": [837, 77, 55]}
{"time": "2021-02-23 22:33:15.770803", "score": "0.581", "loss": "8.6868", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(Instancestask))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 111, "n_pass": [847, 82, 56]}
{"time": "2021-02-23 22:33:19.653534", "score": "0.5773", "loss": "8.5766", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(task))),resultsIn((new TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 110, "n_pass": [883, 84, 57]}
{"time": "2021-02-23 22:33:23.493796", "score": "0.5972", "loss": "8.5133", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(task))),resultsIn(( TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 109, "n_pass": [892, 86, 58]}
{"time": "2021-02-23 22:33:25.409511", "score": "0.5972", "loss": "8.5133", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo(task))),resultsIn((TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 108, "n_pass": [893, 87, 59]}
{"time": "2021-02-23 22:33:52.515292", "score": "0.5811", "loss": "8.6935", "code": "void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((\"\"))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo())),resultsIn((TasksTable()),new AssertEmptyTable<>((mAuthority))));}", "n_tokens": 107, "n_pass": [994, 99, 60]}

Minimal simplified code:
void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((""))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo())),resultsIn((TasksTable()),new AssertEmptyTable<>((mAuthority))));}

