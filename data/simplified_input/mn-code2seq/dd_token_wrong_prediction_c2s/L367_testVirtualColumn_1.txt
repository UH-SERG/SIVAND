
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/test/java/com/questdb/ql/analytic/PrevAnalyticFunctionTest_testVirtualColumn.java
method_name = testVirtualColumn
method_body = @Test public void testVirtualColumn() throws Exception { final String expected = "str\tboo\tcol0\tf\td\tcol1\n" + "BZ\ttrue\t1.673692762852\t0.6235\t1.050231933594\tfalse\n" + "XX\tfalse\t567.512389898300\t0.7780\t566.734375000000\tfalse\n" + "KK\tfalse\t0.550908231392\t0.5509\t0.000013792171\tfalse\n" + "AX\tfalse\t0.020375759351\t0.0204\t0.000000567185\tfalse\n" + "AX\ttrue\t-511.515212714672\t0.4848\t-512.000000000000\tfalse\n" + "AX\ttrue\t0.972335502505\t0.2969\t0.675451681018\ttrue\n" + "BZ\tfalse\t0.904826603830\t0.5725\t0.332301996648\ttrue\n" + "BZ\ttrue\t0.596724832495\t0.5967\t0.000001752813\tfalse\n" + "AX\tfalse\t0.161007094177\t0.1609\t0.000076281818\ttrue\n" + "BZ\tfalse\t0.350913291764\t0.3509\t0.000000005555\ttrue\n" + "XX\tfalse\t0.727417677178\t0.7274\t0.000002473130\tfalse\n" + "KK\tfalse\t633.483788669109\t0.5619\t632.921875000000\tfalse\n" + "AX\tfalse\t0.543259224330\t0.5433\t0.000000020896\tfalse\n" + "BZ\tfalse\t0.551534552826\t0.5442\t0.007371325744\tfalse\n" + "XX\ttrue\t0.674562766890\t0.6746\t0.000000014643\tfalse\n" + "AX\ttrue\t512.821699082851\t0.8217\t512.000000000000\tfalse\n" + "XX\ttrue\t864.359103977680\t0.3591\t864.000000000000\ttrue\n" + "AX\ttrue\t0.682714500508\t0.6827\t0.000000157437\ttrue\n" + "BZ\tfalse\t-841.883159995079\t0.1168\t-842.000000000000\tfalse\n" + "BZ\tfalse\t0.496688359286\t0.4967\t0.000032060649\tfalse\n"; assertThat(expected, "select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc", true); assertThat(expected, "select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'", true); }
predict, score, loss = testFdFF, 0.5515569448471069, 27.363563537597656

Trace of simplified code(s):
{"time": "2021-02-24 07:08:46.478094", "score": "0.5516", "loss": "27.3636", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol1\\n\" + \"BZ\\ttrue\\t1.673692762852\\t0.6235\\t1.050231933594\\tfalse\\n\" + \"XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n\" + \"AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.350913291764\\t0.3509\\t0.000000005555\\ttrue\\n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc\", true); assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1220, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:09:20.991517", "score": "0.5529", "loss": "26.4239", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol.050231933594\\tfalse\\n\" + \"XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n\" + \"AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.350913291764\\t0.3509\\t0.000000005555\\ttrue\\n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc\", true); assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1182, "n_pass": [93, 18, 2]}
{"time": "2021-02-24 07:09:39.100955", "score": "0.5653", "loss": "25.8152", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol.050231933594\\tfalse\\n\" + \"XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n\" + \"AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc\", true); assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1144, "n_pass": [106, 27, 3]}
{"time": "2021-02-24 07:10:01.314500", "score": "0.5599", "loss": "27.4777", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol.050231933594\\tfalse\\n\" + \"XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n\" + \"AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1105, "n_pass": [122, 38, 4]}
{"time": "2021-02-24 07:10:03.307019", "score": "0.5474", "loss": "27.5634", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n\" + \"AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1067, "n_pass": [125, 39, 5]}
{"time": "2021-02-24 07:10:05.304897", "score": "0.5474", "loss": "26.8637", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 1029, "n_pass": [128, 40, 6]}
{"time": "2021-02-24 07:10:09.299313", "score": "0.5538", "loss": "25.9426", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 991, "n_pass": [130, 42, 7]}
{"time": "2021-02-24 07:10:43.220628", "score": "0.5571", "loss": "25.5163", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.9\\t0.675451681018\\ttrue\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 972, "n_pass": [210, 59, 8]}
{"time": "2021-02-24 07:10:45.240113", "score": "0.5602", "loss": "25.3972", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 953, "n_pass": [211, 60, 9]}
{"time": "2021-02-24 07:11:08.992335", "score": "0.5609", "loss": "25.3266", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo) f, d , prev(boo) over (partition by str) from '*!*abc'\", true); }", "n_tokens": 934, "n_pass": [227, 72, 10]}
{"time": "2021-02-24 07:11:42.982105", "score": "0.5609", "loss": "25.3266", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.550908231392\\t0.5509\\t0.00001.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 914, "n_pass": [251, 89, 11]}
{"time": "2021-02-24 07:11:46.984384", "score": "0.5598", "loss": "25.1829", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.000000567185\\tfalse\\n\" + \"AX\\ttrue\\t-51000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 895, "n_pass": [258, 91, 12]}
{"time": "2021-02-24 07:11:50.963578", "score": "0.5568", "loss": "25.615", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000005671000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 876, "n_pass": [260, 93, 13]}
{"time": "2021-02-24 07:12:52.641641", "score": "0.5568", "loss": "25.615", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"AX\\ttrue\\t0.\\n\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 867, "n_pass": [399, 124, 14]}
{"time": "2021-02-24 07:12:56.618153", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 858, "n_pass": [401, 126, 15]}
{"time": "2021-02-24 07:13:00.618015", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.332301996648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 849, "n_pass": [403, 128, 16]}
{"time": "2021-02-24 07:13:04.575447", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 840, "n_pass": [406, 130, 17]}
{"time": "2021-02-24 07:13:06.606337", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.000001752813\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 831, "n_pass": [409, 131, 18]}
{"time": "2021-02-24 07:13:12.838220", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 822, "n_pass": [412, 134, 19]}
{"time": "2021-02-24 07:13:14.830711", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.000076281818\\ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 813, "n_pass": [415, 135, 20]}
{"time": "2021-02-24 07:13:20.777881", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 804, "n_pass": [418, 138, 21]}
{"time": "2021-02-24 07:13:24.750414", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.000002473130\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 795, "n_pass": [422, 140, 22]}
{"time": "2021-02-24 07:13:30.702851", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 786, "n_pass": [425, 143, 23]}
{"time": "2021-02-24 07:13:32.700662", "score": "0.565", "loss": "25.7925", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000020896\\tfalse\\n\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 777, "n_pass": [428, 144, 24]}
{"time": "2021-02-24 07:13:42.595330", "score": "0.5698", "loss": "26.3077", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\" + \"BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 767, "n_pass": [435, 149, 25]}
{"time": "2021-02-24 07:13:44.568920", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 757, "n_pass": [436, 150, 26]}
{"time": "2021-02-24 07:13:48.486617", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.5515345542\\t0.007371325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 747, "n_pass": [438, 152, 27]}
{"time": "2021-02-24 07:13:50.469069", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.5515345571325744\\tfalse\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 737, "n_pass": [439, 153, 28]}
{"time": "2021-02-24 07:13:52.448326", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 727, "n_pass": [440, 154, 29]}
{"time": "2021-02-24 07:13:56.392334", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.000000014643\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 717, "n_pass": [442, 156, 30]}
{"time": "2021-02-24 07:14:02.323307", "score": "0.5588", "loss": "25.4269", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 707, "n_pass": [445, 159, 31]}
{"time": "2021-02-24 07:14:06.292189", "score": "0.5727", "loss": "26.9577", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851\\t0.8217\\t512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 697, "n_pass": [447, 161, 32]}
{"time": "2021-02-24 07:14:10.249293", "score": "0.5693", "loss": "25.2928", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851512.000000000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 687, "n_pass": [449, 163, 33]}
{"time": "2021-02-24 07:14:12.257756", "score": "0.5734", "loss": "25.3894", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851000000\\tfalse\\n\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 677, "n_pass": [450, 164, 34]}
{"time": "2021-02-24 07:14:14.258895", "score": "0.5881", "loss": "25.9508", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851\" + \"XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 667, "n_pass": [451, 165, 35]}
{"time": "2021-02-24 07:14:16.234541", "score": "0.5638", "loss": "25.9292", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 657, "n_pass": [452, 166, 36]}
{"time": "2021-02-24 07:14:18.218418", "score": "0.5638", "loss": "25.9292", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851977680\\t0.3591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 647, "n_pass": [453, 167, 37]}
{"time": "2021-02-24 07:14:20.190649", "score": "0.5581", "loss": "24.7552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX16990828513591\\t864.000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 637, "n_pass": [454, 168, 38]}
{"time": "2021-02-24 07:14:22.168251", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX1699082851000000000000\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 627, "n_pass": [455, 169, 39]}
{"time": "2021-02-24 07:14:24.163509", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 617, "n_pass": [456, 170, 40]}
{"time": "2021-02-24 07:14:26.148915", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t0.000000157437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 607, "n_pass": [459, 171, 41]}
{"time": "2021-02-24 07:14:30.093145", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 597, "n_pass": [461, 173, 42]}
{"time": "2021-02-24 07:14:32.063040", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.000000000000\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 587, "n_pass": [464, 174, 43]}
{"time": "2021-02-24 07:14:38.016535", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 577, "n_pass": [467, 177, 44]}
{"time": "2021-02-24 07:14:39.995986", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0.000032060649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 567, "n_pass": [470, 178, 45]}
{"time": "2021-02-24 07:14:43.984845", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(boo str) from '*!*abc'\", true); }", "n_tokens": 557, "n_pass": [472, 180, 46]}
{"time": "2021-02-24 07:14:49.920065", "score": "0.5576", "loss": "23.9552", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tboo\\tcol0\\tf\\td\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 547, "n_pass": [477, 183, 47]}
{"time": "2021-02-24 07:14:51.907534", "score": "0.5614", "loss": "24.2403", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str\\tcol98300\\t0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 538, "n_pass": [482, 184, 48]}
{"time": "2021-02-24 07:14:53.864192", "score": "0.566", "loss": "24.1699", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str0.7780\\t566.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 529, "n_pass": [483, 185, 49]}
{"time": "2021-02-24 07:14:55.824538", "score": "0.5555", "loss": "23.6723", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str66.734375000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 520, "n_pass": [484, 186, 50]}
{"time": "2021-02-24 07:14:57.832448", "score": "0.5498", "loss": "23.4697", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"\" + \"BZ\\tfalse\\603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 511, "n_pass": [485, 187, 51]}
{"time": "2021-02-24 07:15:11.583317", "score": "0.5546", "loss": "23.5425", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000ttrue\\n\" + \"BZ\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 502, "n_pass": [492, 194, 52]}
{"time": "2021-02-24 07:15:25.434156", "score": "0.5543", "loss": "23.8741", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.0000000.55153455\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 493, "n_pass": [503, 201, 53]}
{"time": "2021-02-24 07:15:39.188833", "score": "0.5574", "loss": "23.915", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX169908285100\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 483, "n_pass": [516, 208, 54]}
{"time": "2021-02-24 07:15:49.112984", "score": "0.5574", "loss": "23.915", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-895079\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 473, "n_pass": [521, 213, 55]}
{"time": "2021-02-24 07:16:57.972835", "score": "0.5574", "loss": "23.915", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.00\\tfalse\\n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 468, "n_pass": [682, 248, 56]}
{"time": "2021-02-24 07:17:03.924742", "score": "0.5598", "loss": "23.9856", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d , prev(booabc'\", true); }", "n_tokens": 463, "n_pass": [685, 251, 57]}
{"time": "2021-02-24 07:17:19.528947", "score": "0.5598", "loss": "23.9856", "code": "@Test public void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 458, "n_pass": [698, 259, 58]}
{"time": "2021-02-24 07:17:21.500200", "score": "0.6577", "loss": "27.7798", "code": " void testVirtualColumn() throws Exception { final String expected = \"str000000\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 454, "n_pass": [701, 260, 59]}
{"time": "2021-02-24 07:17:25.405418", "score": "0.6577", "loss": "27.7798", "code": " void testVirtualColumn() throws Exception { final String expected = \"str00\\tfalse\\n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 450, "n_pass": [708, 262, 60]}
{"time": "2021-02-24 07:17:27.354084", "score": "0.6579", "loss": "27.9501", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0.5509082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 446, "n_pass": [709, 263, 61]}
{"time": "2021-02-24 07:17:29.319581", "score": "0.6531", "loss": "27.4372", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t09082313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 442, "n_pass": [713, 264, 62]}
{"time": "2021-02-24 07:17:31.286325", "score": "0.6531", "loss": "27.4372", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0313.0204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 438, "n_pass": [714, 265, 63]}
{"time": "2021-02-24 07:17:33.261892", "score": "0.6528", "loss": "27.3311", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t00204\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 434, "n_pass": [715, 266, 64]}
{"time": "2021-02-24 07:17:35.246665", "score": "0.6528", "loss": "27.3311", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\\t0.0000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 430, "n_pass": [716, 267, 65]}
{"time": "2021-02-24 07:17:37.202538", "score": "0.6448", "loss": "26.4805", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t00000\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 426, "n_pass": [717, 268, 66]}
{"time": "2021-02-24 07:17:39.203882", "score": "0.6448", "loss": "26.4805", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\\tfalse\\n\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 422, "n_pass": [718, 269, 67]}
{"time": "2021-02-24 07:17:41.173174", "score": "0.6517", "loss": "26.9151", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603830\\t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 418, "n_pass": [719, 270, 68]}
{"time": "2021-02-24 07:17:43.166379", "score": "0.6517", "loss": "26.9151", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.5725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 414, "n_pass": [722, 271, 69]}
{"time": "2021-02-24 07:17:45.115471", "score": "0.6458", "loss": "26.3804", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603725\\t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 410, "n_pass": [723, 272, 70]}
{"time": "2021-02-24 07:17:47.062845", "score": "0.6458", "loss": "26.3804", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.648\\ttrue\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 406, "n_pass": [724, 273, 71]}
{"time": "2021-02-24 07:17:50.985146", "score": "0.6473", "loss": "26.5093", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t0.5967\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 402, "n_pass": [726, 275, 72]}
{"time": "2021-02-24 07:17:56.877382", "score": "0.6352", "loss": "25.7102", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.003\\tfalse\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 397, "n_pass": [731, 278, 73]}
{"time": "2021-02-24 07:18:00.795183", "score": "0.6476", "loss": "26.4714", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse\\t0.177\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 392, "n_pass": [733, 280, 74]}
{"time": "2021-02-24 07:18:02.763145", "score": "0.6476", "loss": "26.4714", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0000\\tfalse\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 387, "n_pass": [736, 281, 75]}
{"time": "2021-02-24 07:18:10.590813", "score": "0.6476", "loss": "26.4714", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0\\t0.3n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 382, "n_pass": [740, 285, 76]}
{"time": "2021-02-24 07:18:12.571091", "score": "0.6476", "loss": "26.4714", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.030\\tfalse\\n\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 377, "n_pass": [741, 286, 77]}
{"time": "2021-02-24 07:18:20.406009", "score": "0.6476", "loss": "26.4714", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\" + \"KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 372, "n_pass": [748, 290, 78]}
{"time": "2021-02-24 07:18:22.368908", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03KK\\tfalse\\t6369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 367, "n_pass": [749, 291, 79]}
{"time": "2021-02-24 07:18:24.293206", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.036369109\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 362, "n_pass": [750, 292, 80]}
{"time": "2021-02-24 07:18:26.238939", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.0309\\t0.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 357, "n_pass": [751, 293, 81]}
{"time": "2021-02-24 07:18:28.185804", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03.5619\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 352, "n_pass": [752, 294, 82]}
{"time": "2021-02-24 07:18:30.166687", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\t632.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 347, "n_pass": [753, 295, 83]}
{"time": "2021-02-24 07:18:32.110051", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03.921875000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 342, "n_pass": [754, 296, 84]}
{"time": "2021-02-24 07:18:34.024672", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.0375000000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 337, "n_pass": [755, 297, 85]}
{"time": "2021-02-24 07:18:35.991272", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03000\\tfalse\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 332, "n_pass": [756, 298, 86]}
{"time": "2021-02-24 07:18:37.982675", "score": "0.6342", "loss": "25.4856", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0.5433\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 327, "n_pass": [757, 299, 87]}
{"time": "2021-02-24 07:18:39.938761", "score": "0.634", "loss": "25.4871", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\t0.000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 322, "n_pass": [760, 300, 88]}
{"time": "2021-02-24 07:18:41.895619", "score": "0.6247", "loss": "25.0158", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t000000\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 317, "n_pass": [761, 301, 89]}
{"time": "2021-02-24 07:18:43.825064", "score": "0.6247", "loss": "25.0158", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue766890\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 312, "n_pass": [762, 302, 90]}
{"time": "2021-02-24 07:18:45.775702", "score": "0.6247", "loss": "25.0158", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\t0.68\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 307, "n_pass": [765, 303, 91]}
{"time": "2021-02-24 07:18:57.401728", "score": "0.6105", "loss": "24.0656", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6827\\t7437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 302, "n_pass": [774, 309, 92]}
{"time": "2021-02-24 07:18:59.370288", "score": "0.6024", "loss": "23.5605", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.67437\\ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 297, "n_pass": [776, 310, 93]}
{"time": "2021-02-24 07:19:01.334927", "score": "0.6024", "loss": "23.5605", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\tfalse\\t-8\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 292, "n_pass": [777, 311, 94]}
{"time": "2021-02-24 07:19:03.287605", "score": "0.5997", "loss": "23.4117", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1168\\t-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 287, "n_pass": [780, 312, 95]}
{"time": "2021-02-24 07:19:07.207067", "score": "0.5866", "loss": "22.7309", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1-842.n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 282, "n_pass": [782, 314, 96]}
{"time": "2021-02-24 07:19:09.149710", "score": "0.5925", "loss": "23.0231", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\t0649\\tfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 277, "n_pass": [783, 315, 97]}
{"time": "2021-02-24 07:19:16.876917", "score": "0.5597", "loss": "21.7588", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t7\\t0.\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 272, "n_pass": [789, 319, 98]}
{"time": "2021-02-24 07:19:32.411619", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t02495\\t\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 267, "n_pass": [814, 327, 99]}
{"time": "2021-02-24 07:20:18.809263", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse77\\t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 265, "n_pass": [983, 351, 100]}
{"time": "2021-02-24 07:20:26.603987", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1609\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 263, "n_pass": [990, 355, 101]}
{"time": "2021-02-24 07:20:32.430276", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.19\\t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 261, "n_pass": [993, 358, 102]}
{"time": "2021-02-24 07:20:34.377537", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"XX\\tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 259, "n_pass": [994, 359, 103]}
{"time": "2021-02-24 07:20:40.215681", "score": "0.5375", "loss": "21.2563", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"tfalse\\t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 257, "n_pass": [1000, 362, 104]}
{"time": "2021-02-24 07:20:42.150728", "score": "0.5598", "loss": "21.9557", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"t77178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 255, "n_pass": [1001, 363, 105]}
{"time": "2021-02-24 07:20:44.086120", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"7178\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 253, "n_pass": [1002, 364, 106]}
{"time": "2021-02-24 07:20:46.019466", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"78\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 251, "n_pass": [1003, 365, 107]}
{"time": "2021-02-24 07:20:47.945209", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.7274\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 249, "n_pass": [1004, 366, 108]}
{"time": "2021-02-24 07:20:53.785815", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.03\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 247, "n_pass": [1007, 369, 109]}
{"time": "2021-02-24 07:21:01.448262", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\\n\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 245, "n_pass": [1011, 373, 110]}
{"time": "2021-02-24 07:21:03.383156", "score": "0.5431", "loss": "21.5506", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\t0\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 243, "n_pass": [1012, 374, 111]}
{"time": "2021-02-24 07:21:05.361368", "score": "0.5348", "loss": "21.1403", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6746\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 241, "n_pass": [1016, 375, 112]}
{"time": "2021-02-24 07:21:11.172607", "score": "0.5348", "loss": "21.1403", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.00\\tfalse\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 238, "n_pass": [1023, 378, 113]}
{"time": "2021-02-24 07:21:16.965738", "score": "0.5348", "loss": "21.1403", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX00\\ttrue\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 235, "n_pass": [1026, 381, 114]}
{"time": "2021-02-24 07:21:18.923620", "score": "0.5348", "loss": "21.37", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.6ttrue\\n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 232, "n_pass": [1030, 382, 115]}
{"time": "2021-02-24 07:21:24.847669", "score": "0.5304", "loss": "21.6129", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"BZ\\\\t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 229, "n_pass": [1036, 385, 116]}
{"time": "2021-02-24 07:21:26.793934", "score": "0.5591", "loss": "22.5835", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.49\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 226, "n_pass": [1039, 386, 117]}
{"time": "2021-02-24 07:21:32.542134", "score": "0.557", "loss": "22.687", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t9\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 223, "n_pass": [1045, 389, 118]}
{"time": "2021-02-24 07:21:34.487877", "score": "0.531", "loss": "21.8031", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4967\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 220, "n_pass": [1046, 390, 119]}
{"time": "2021-02-24 07:21:38.356573", "score": "0.531", "loss": "21.8031", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, d abc'\", true); }", "n_tokens": 217, "n_pass": [1048, 392, 120]}
{"time": "2021-02-24 07:21:51.860639", "score": "0.531", "loss": "21.8031", "code": " void testVirtualColumn() throws Exception { final String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 214, "n_pass": [1059, 399, 121]}
{"time": "2021-02-24 07:21:54.249588", "score": "0.531", "loss": "21.8031", "code": " void testVirtualColumn() throws Exception { String expected = \"str0n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 212, "n_pass": [1069, 400, 122]}
{"time": "2021-02-24 07:22:00.020113", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"KK\\tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 210, "n_pass": [1074, 403, 123]}
{"time": "2021-02-24 07:22:01.969150", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"603t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 208, "n_pass": [1078, 404, 124]}
{"time": "2021-02-24 07:22:05.791488", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\\n\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 206, "n_pass": [1084, 406, 125]}
{"time": "2021-02-24 07:22:11.537446", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\ttrue\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 204, "n_pass": [1087, 409, 126]}
{"time": "2021-02-24 07:22:13.488631", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t0249t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 202, "n_pass": [1091, 410, 127]}
{"time": "2021-02-24 07:22:17.384757", "score": "0.5186", "loss": "21.2786", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"\\t0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 200, "n_pass": [1093, 412, 128]}
{"time": "2021-02-24 07:22:34.793048", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \"0.74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 198, "n_pass": [1108, 421, 129]}
{"time": "2021-02-24 07:23:52.763914", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".74\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 197, "n_pass": [1355, 455, 130]}
{"time": "2021-02-24 07:23:54.661780", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4\\t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 196, "n_pass": [1356, 456, 131]}
{"time": "2021-02-24 07:23:58.514621", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\" + \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 195, "n_pass": [1358, 458, 132]}
{"time": "2021-02-24 07:24:06.268645", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+ \"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 194, "n_pass": [1363, 462, 133]}
{"time": "2021-02-24 07:24:08.192735", "score": "0.4925", "loss": "20.6785", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 193, "n_pass": [1365, 463, 134]}
{"time": "2021-02-24 07:24:10.135131", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\" + \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 192, "n_pass": [1367, 464, 135]}
{"time": "2021-02-24 07:24:14.022065", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+ \"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 191, "n_pass": [1371, 466, 136]}
{"time": "2021-02-24 07:24:15.935351", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0\\t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 190, "n_pass": [1373, 467, 137]}
{"time": "2021-02-24 07:24:25.432129", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6\\t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 189, "n_pass": [1379, 472, 138]}
{"time": "2021-02-24 07:24:34.974034", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.0\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 188, "n_pass": [1384, 477, 139]}
{"time": "2021-02-24 07:24:42.652673", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\" + \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 187, "n_pass": [1388, 481, 140]}
{"time": "2021-02-24 07:24:46.528702", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+ \"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 186, "n_pass": [1392, 483, 141]}
{"time": "2021-02-24 07:24:48.450344", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX0\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 185, "n_pass": [1394, 484, 142]}
{"time": "2021-02-24 07:24:52.383913", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\" + \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 184, "n_pass": [1397, 486, 143]}
{"time": "2021-02-24 07:24:56.310996", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+ \"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 183, "n_pass": [1401, 488, 144]}
{"time": "2021-02-24 07:24:58.246735", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"AX\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 182, "n_pass": [1403, 489, 145]}
{"time": "2021-02-24 07:25:00.284874", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"\\ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 181, "n_pass": [1405, 490, 146]}
{"time": "2021-02-24 07:25:02.230118", "score": "0.4956", "loss": "20.7972", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"ttrue\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 180, "n_pass": [1406, 491, 147]}
{"time": "2021-02-24 07:25:04.135061", "score": "0.5157", "loss": "21.4438", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"\\\\t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 179, "n_pass": [1407, 492, 148]}
{"time": "2021-02-24 07:25:06.072856", "score": "0.5157", "loss": "21.4438", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\tfalse\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 177, "n_pass": [1408, 493, 149]}
{"time": "2021-02-24 07:25:15.637433", "score": "0.5157", "loss": "21.4438", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\ttfalse\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 175, "n_pass": [1419, 498, 150]}
{"time": "2021-02-24 07:25:23.279493", "score": "0.5362", "loss": "22.0672", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f, '\", true); }", "n_tokens": 173, "n_pass": [1423, 502, 151]}
{"time": "2021-02-24 07:25:38.560125", "score": "0.5362", "loss": "22.0672", "code": " void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 171, "n_pass": [1437, 510, 152]}
{"time": "2021-02-24 07:25:40.482944", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn() throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 170, "n_pass": [1442, 511, 153]}
{"time": "2021-02-24 07:25:43.310571", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception { String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 169, "n_pass": [1448, 512, 154]}
{"time": "2021-02-24 07:25:45.215471", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{ String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 168, "n_pass": [1452, 513, 155]}
{"time": "2021-02-24 07:25:47.143820", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{String expected = \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 167, "n_pass": [1454, 514, 156]}
{"time": "2021-02-24 07:25:54.703933", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{String expected= \"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 166, "n_pass": [1458, 518, 157]}
{"time": "2021-02-24 07:25:56.646404", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{String expected=\"n\" + \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 165, "n_pass": [1460, 519, 158]}
{"time": "2021-02-24 07:26:00.495878", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+ \"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 164, "n_pass": [1464, 521, 159]}
{"time": "2021-02-24 07:26:02.406268", "score": "0.5362", "loss": "22.0672", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"tfalse\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 163, "n_pass": [1466, 522, 160]}
{"time": "2021-02-24 07:26:04.330220", "score": "0.5654", "loss": "23.3177", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\\t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 162, "n_pass": [1468, 523, 161]}
{"time": "2021-02-24 07:26:06.244850", "score": "0.5654", "loss": "23.3177", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"t0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 161, "n_pass": [1469, 524, 162]}
{"time": "2021-02-24 07:26:08.153588", "score": "0.5273", "loss": "22.0619", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"0\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 160, "n_pass": [1470, 525, 163]}
{"time": "2021-02-24 07:26:10.117861", "score": "0.5467", "loss": "22.6551", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\" + \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 159, "n_pass": [1471, 526, 164]}
{"time": "2021-02-24 07:26:12.066060", "score": "0.5467", "loss": "22.6551", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+ \"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 158, "n_pass": [1473, 527, 165]}
{"time": "2021-02-24 07:26:14.018264", "score": "0.5467", "loss": "22.6551", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"6t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 157, "n_pass": [1475, 528, 166]}
{"time": "2021-02-24 07:26:15.915370", "score": "0.5467", "loss": "22.6551", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"t0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 156, "n_pass": [1477, 529, 167]}
{"time": "2021-02-24 07:26:17.837978", "score": "0.506", "loss": "21.4511", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"0.6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 155, "n_pass": [1478, 530, 168]}
{"time": "2021-02-24 07:26:19.760107", "score": "0.506", "loss": "21.4511", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\".6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 154, "n_pass": [1479, 531, 169]}
{"time": "2021-02-24 07:26:21.672964", "score": "0.5266", "loss": "21.42", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"6\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 153, "n_pass": [1480, 532, 170]}
{"time": "2021-02-24 07:26:23.605740", "score": "0.5293", "loss": "22.1632", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\" + \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 152, "n_pass": [1481, 533, 171]}
{"time": "2021-02-24 07:26:25.581431", "score": "0.5293", "loss": "22.1632", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+ \"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 151, "n_pass": [1483, 534, 172]}
{"time": "2021-02-24 07:26:27.497106", "score": "0.5293", "loss": "22.1632", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"BZ\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 150, "n_pass": [1485, 535, 173]}
{"time": "2021-02-24 07:26:29.413616", "score": "0.5613", "loss": "23.2781", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\\t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 149, "n_pass": [1487, 536, 174]}
{"time": "2021-02-24 07:26:31.359502", "score": "0.5613", "loss": "23.2781", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"t49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 148, "n_pass": [1488, 537, 175]}
{"time": "2021-02-24 07:26:33.304075", "score": "0.5319", "loss": "22.5321", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"49t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 147, "n_pass": [1489, 538, 176]}
{"time": "2021-02-24 07:26:35.228552", "score": "0.5319", "loss": "22.5321", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"9t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 146, "n_pass": [1490, 539, 177]}
{"time": "2021-02-24 07:26:37.146670", "score": "0.5319", "loss": "22.5321", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"t\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 145, "n_pass": [1491, 540, 178]}
{"time": "2021-02-24 07:26:39.057083", "score": "0.5152", "loss": "21.8975", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\\n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 144, "n_pass": [1492, 541, 179]}
{"time": "2021-02-24 07:26:41.016772", "score": "0.4938", "loss": "21.39", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"n\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 143, "n_pass": [1493, 542, 180]}
{"time": "2021-02-24 07:26:42.942928", "score": "0.5152", "loss": "21.8975", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\" + \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 142, "n_pass": [1494, 543, 181]}
{"time": "2021-02-24 07:26:44.877547", "score": "0.5152", "loss": "21.8975", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+ \"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 141, "n_pass": [1496, 544, 182]}
{"time": "2021-02-24 07:26:46.837170", "score": "0.5152", "loss": "21.8975", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AX\\tfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 140, "n_pass": [1498, 545, 183]}
{"time": "2021-02-24 07:26:50.724776", "score": "0.5135", "loss": "21.9705", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse7t0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 139, "n_pass": [1501, 547, 184]}
{"time": "2021-02-24 07:26:54.550027", "score": "0.4813", "loss": "21.2198", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalset0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 138, "n_pass": [1503, 549, 185]}
{"time": "2021-02-24 07:26:56.444631", "score": "0.4813", "loss": "21.2198", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse0.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 137, "n_pass": [1504, 550, 186]}
{"time": "2021-02-24 07:26:58.384778", "score": "0.4783", "loss": "21.0892", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse.1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 136, "n_pass": [1505, 551, 187]}
{"time": "2021-02-24 07:27:00.321560", "score": "0.4783", "loss": "21.0892", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 135, "n_pass": [1506, 552, 188]}
{"time": "2021-02-24 07:27:06.056142", "score": "0.4859", "loss": "21.317", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t.0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 134, "n_pass": [1509, 555, 189]}
{"time": "2021-02-24 07:27:08.003668", "score": "0.4859", "loss": "21.317", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0n\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 133, "n_pass": [1510, 556, 190]}
{"time": "2021-02-24 07:27:11.830116", "score": "0.4922", "loss": "21.6116", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\" + \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 132, "n_pass": [1512, 558, 191]}
{"time": "2021-02-24 07:27:13.771146", "score": "0.4922", "loss": "21.6116", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+ \".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 131, "n_pass": [1514, 559, 192]}
{"time": "2021-02-24 07:27:15.700872", "score": "0.4922", "loss": "21.6116", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\\n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 130, "n_pass": [1516, 560, 193]}
{"time": "2021-02-24 07:27:27.182050", "score": "0.4598", "loss": "21.0415", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"n\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 129, "n_pass": [1526, 566, 194]}
{"time": "2021-02-24 07:27:29.118055", "score": "0.4922", "loss": "21.6116", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\\n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 128, "n_pass": [1527, 567, 195]}
{"time": "2021-02-24 07:27:52.057817", "score": "0.4784", "loss": "21.3348", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.n\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 127, "n_pass": [1542, 579, 196]}
{"time": "2021-02-24 07:27:53.967087", "score": "0.4922", "loss": "21.6116", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"AX\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 126, "n_pass": [1543, 580, 197]}
{"time": "2021-02-24 07:27:55.922746", "score": "0.5338", "loss": "22.4691", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\\n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 125, "n_pass": [1547, 581, 198]}
{"time": "2021-02-24 07:27:57.808276", "score": "0.5006", "loss": "21.7747", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"n\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 124, "n_pass": [1548, 582, 199]}
{"time": "2021-02-24 07:27:59.709059", "score": "0.5338", "loss": "22.4691", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"t0.n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 123, "n_pass": [1549, 583, 200]}
{"time": "2021-02-24 07:28:01.644314", "score": "0.5282", "loss": "22.3209", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\".n\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 121, "n_pass": [1553, 584, 201]}
{"time": "2021-02-24 07:28:03.564737", "score": "0.5603", "loss": "23.0857", "code": "void testVirtualColumn()throws Exception{String expected=\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 119, "n_pass": [1554, 585, 202]}
{"time": "2021-02-24 07:28:33.322745", "score": "0.5457", "loss": "22.6363", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AXtfalse1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 118, "n_pass": [1594, 600, 203]}
{"time": "2021-02-24 07:28:38.953235", "score": "0.5417", "loss": "22.2504", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t0\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 117, "n_pass": [1611, 603, 204]}
{"time": "2021-02-24 07:28:44.677304", "score": "0.5417", "loss": "22.2504", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4t0.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 116, "n_pass": [1614, 606, 205]}
{"time": "2021-02-24 07:28:50.392229", "score": "0.5164", "loss": "21.5028", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".40.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 115, "n_pass": [1620, 609, 206]}
{"time": "2021-02-24 07:28:52.288783", "score": "0.5164", "loss": "21.5028", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"XX\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 114, "n_pass": [1621, 610, 207]}
{"time": "2021-02-24 07:28:56.091640", "score": "0.5505", "loss": "22.1095", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"\\ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 113, "n_pass": [1629, 612, 208]}
{"time": "2021-02-24 07:28:57.994823", "score": "0.5505", "loss": "22.1095", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"ttrue0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 112, "n_pass": [1630, 613, 209]}
{"time": "2021-02-24 07:28:59.855739", "score": "0.5327", "loss": "22.0313", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"0t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 111, "n_pass": [1631, 614, 210]}
{"time": "2021-02-24 07:29:01.769990", "score": "0.5327", "loss": "22.0313", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.4\\\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 110, "n_pass": [1632, 615, 211]}
{"time": "2021-02-24 07:29:24.552277", "score": "0.5125", "loss": "21.6049", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.\\n\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 108, "n_pass": [1656, 627, 212]}
{"time": "2021-02-24 07:29:26.520116", "score": "0.5125", "loss": "21.6049", "code": "void testVirtualColumn()throws Exception{String =\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 106, "n_pass": [1657, 628, 213]}
{"time": "2021-02-24 07:29:42.557014", "score": "0.5125", "loss": "21.6049", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\".4.\"+\"\"+\"t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 105, "n_pass": [1684, 636, 214]}
{"time": "2021-02-24 07:29:54.001414", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\" + \"t0.1n\" + \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 104, "n_pass": [1707, 642, 215]}
{"time": "2021-02-24 07:30:48.259069", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+ \"t0.1n\" + \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 103, "n_pass": [1839, 667, 216]}
{"time": "2021-02-24 07:30:50.164685", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\" + \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 102, "n_pass": [1841, 668, 217]}
{"time": "2021-02-24 07:31:01.555926", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+ \"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 101, "n_pass": [1849, 674, 218]}
{"time": "2021-02-24 07:31:03.433156", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\"; assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 100, "n_pass": [1851, 675, 219]}
{"time": "2021-02-24 07:31:14.819517", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected, \"select str, boo, f+d, f,\", true); }", "n_tokens": 99, "n_pass": [1860, 681, 220]}
{"time": "2021-02-24 07:31:16.718061", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str, boo, f+d, f,\", true); }", "n_tokens": 98, "n_pass": [1865, 682, 221]}
{"time": "2021-02-24 07:31:24.328806", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo, f+d, f,\", true); }", "n_tokens": 97, "n_pass": [1870, 686, 222]}
{"time": "2021-02-24 07:31:29.954956", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo f+d, f,\", true); }", "n_tokens": 96, "n_pass": [1873, 689, 223]}
{"time": "2021-02-24 07:31:35.621602", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo fd, f,\", true); }", "n_tokens": 95, "n_pass": [1876, 692, 224]}
{"time": "2021-02-24 07:31:39.376381", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo fd f,\", true); }", "n_tokens": 94, "n_pass": [1878, 694, 225]}
{"time": "2021-02-24 07:31:45.043889", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo fd f\", true); }", "n_tokens": 93, "n_pass": [1881, 697, 226]}
{"time": "2021-02-24 07:31:46.938673", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo fd f\",true); }", "n_tokens": 92, "n_pass": [1884, 698, 227]}
{"time": "2021-02-24 07:31:48.844430", "score": "0.521", "loss": "21.4423", "code": "void testVirtualColumn()throws Exception{String=\"n\"+\"\"+\"\"+\"\"+\"AX1t\"+\"..\"+\"\"+\"t0.6t0.\"+\"\"+\"\"+\"t0.1n\"+\"BZ\\t0.\";assertThat(expected,\"select str boo fd f\",true);}", "n_tokens": 91, "n_pass": [1888, 699, 228]}

Minimal simplified code:
void testVirtualColumn()throws Exception{String="n"+""+""+""+"AX1t"+".."+""+"t0.6t0."+""+""+"t0.1n"+"BZ\t0.";assertThat(expected,"select str boo fd f",true);}

