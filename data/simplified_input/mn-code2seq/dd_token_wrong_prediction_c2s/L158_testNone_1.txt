
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks-provider/src/test/java/org/dmfs/provider/tasks/processors/tasks/instancedata/StartDatedTest_testNone.java
method_name = testNone
method_body = @Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }
predict, score, loss = testStartInstanceStart, 0.524573028087616, 11.73597526550293

Trace of simplified code(s):
{"time": "2021-02-24 05:14:20.949117", "score": "0.5463", "loss": "11.859", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 118, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:14:27.656433", "score": "0.5432", "loss": "11.8746", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 111, "n_pass": [48, 4, 2]}
{"time": "2021-02-24 05:14:30.103630", "score": "0.5176", "loss": "12.0018", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 107, "n_pass": [96, 5, 3]}
{"time": "2021-02-24 05:14:32.051823", "score": "0.6274", "loss": "12.5585", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 103, "n_pass": [98, 6, 4]}
{"time": "2021-02-24 05:14:35.924518", "score": "0.5093", "loss": "12.2683", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }", "n_tokens": 99, "n_pass": [101, 8, 5]}
{"time": "2021-02-24 05:14:41.730869", "score": "0.5297", "loss": "12.6937", "code": "@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.sizeis(0)); }", "n_tokens": 95, "n_pass": [113, 11, 6]}
{"time": "2021-02-24 05:14:45.581370", "score": "0.5855", "loss": "11.944", "code": "public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.sizeis(0)); }", "n_tokens": 92, "n_pass": [116, 13, 7]}
{"time": "2021-02-24 05:14:49.894643", "score": "0.5946", "loss": "12.4185", "code": "public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.sizeis(0)); }", "n_tokens": 88, "n_pass": [132, 15, 8]}
{"time": "2021-02-24 05:14:53.692320", "score": "0.6049", "loss": "12.9782", "code": "public void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 84, "n_pass": [140, 17, 9]}
{"time": "2021-02-24 05:15:01.129677", "score": "0.6049", "loss": "12.9782", "code": " void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 83, "n_pass": [212, 20, 10]}
{"time": "2021-02-24 05:15:03.005400", "score": "0.6049", "loss": "12.9782", "code": "void testNone() throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 82, "n_pass": [213, 21, 11]}
{"time": "2021-02-24 05:15:05.379371", "score": "0.6049", "loss": "12.9782", "code": "void testNone()throws Exception { ContentValues instanceData = new StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 81, "n_pass": [218, 22, 12]}
{"time": "2021-02-24 05:15:11.157860", "score": "0.5488", "loss": "14.1", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long.class))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 79, "n_pass": [225, 25, 13]}
{"time": "2021-02-24 05:15:18.763534", "score": "0.566", "loss": "14.108", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size); }", "n_tokens": 77, "n_pass": [236, 29, 14]}
{"time": "2021-02-24 05:15:32.023083", "score": "0.5811", "loss": "13.8413", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long))); assertThat(instanceData.size); }", "n_tokens": 75, "n_pass": [249, 36, 15]}
{"time": "2021-02-24 05:15:57.581311", "score": "0.5905", "loss": "14.2806", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING,(Long))); assertThat(instanceData.size); }", "n_tokens": 73, "n_pass": [288, 49, 16]}
{"time": "2021-02-24 05:16:17.462396", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long))); assertThat(instanceData.size); }", "n_tokens": 71, "n_pass": [324, 59, 17]}
{"time": "2021-02-24 05:16:57.867876", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size); }", "n_tokens": 70, "n_pass": [440, 77, 18]}
{"time": "2021-02-24 05:17:01.631882", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception { ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 69, "n_pass": [447, 79, 19]}
{"time": "2021-02-24 05:17:04.440642", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception{ ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 68, "n_pass": [457, 80, 20]}
{"time": "2021-02-24 05:17:06.367304", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception{ContentValues instanceData = StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 67, "n_pass": [459, 81, 21]}
{"time": "2021-02-24 05:17:13.835110", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception{ContentValues instanceData= StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 66, "n_pass": [463, 85, 22]}
{"time": "2021-02-24 05:17:15.734002", "score": "0.5705", "loss": "13.3769", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absentnew). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 65, "n_pass": [465, 86, 23]}
{"time": "2021-02-24 05:17:19.549856", "score": "0.6016", "loss": "13.0336", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent). assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 64, "n_pass": [469, 88, 24]}
{"time": "2021-02-24 05:17:21.425948", "score": "0.6016", "loss": "13.0336", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(instanceDataContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 63, "n_pass": [472, 89, 25]}
{"time": "2021-02-24 05:17:23.323313", "score": "0.5868", "loss": "12.5161", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances.INSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 62, "n_pass": [475, 90, 26]}
{"time": "2021-02-24 05:17:29.033624", "score": "0.5846", "loss": "12.9034", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.InstancesINSTANCE_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 61, "n_pass": [481, 93, 27]}
{"time": "2021-02-24 05:17:30.916355", "score": "0.6021", "loss": "12.551", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances_(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 60, "n_pass": [482, 94, 28]}
{"time": "2021-02-24 05:17:32.774841", "score": "0.6021", "loss": "12.551", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long))); assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 59, "n_pass": [483, 95, 29]}
{"time": "2021-02-24 05:17:36.564608", "score": "0.6021", "loss": "12.551", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long)));assertThat(instanceDataContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 58, "n_pass": [490, 97, 30]}
{"time": "2021-02-24 05:17:40.350149", "score": "0.5397", "loss": "12.3163", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));assertThat(instanceData.size);}", "n_tokens": 57, "n_pass": [493, 99, 31]}
{"time": "2021-02-24 05:17:55.475208", "score": "0.6457", "loss": "12.6993", "code": "void testNone()throws Exception{ContentValues instanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 56, "n_pass": [510, 107, 32]}
{"time": "2021-02-24 05:18:02.046095", "score": "0.6146", "loss": "12.3132", "code": "void testNone()throws Exception{ContentValuesinstanceData=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 55, "n_pass": [528, 110, 33]}
{"time": "2021-02-24 05:18:03.930736", "score": "0.5978", "loss": "12.4762", "code": "void testNone()throws Exception{ContentValues=StartDated(absent).assertThat(ContentValuesWithLong(TaskContract.Instances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 54, "n_pass": [529, 111, 34]}
{"time": "2021-02-24 05:18:11.390944", "score": "0.5347", "loss": "11.9843", "code": "void testNone()throws Exception{ContentValues=StartDated(absent).assertThat((TaskContract.Instances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 53, "n_pass": [538, 115, 35]}
{"time": "2021-02-24 05:18:13.235666", "score": "0.5548", "loss": "12.0168", "code": "void testNone()throws Exception{ContentValues=StartDated(absent).assertThat((TaskContractInstances(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 52, "n_pass": [541, 116, 36]}
{"time": "2021-02-24 05:18:15.065638", "score": "0.5609", "loss": "12.7229", "code": "void testNone()throws Exception{ContentValues=StartDated(absent).assertThat((TaskContract(Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 51, "n_pass": [542, 117, 37]}
{"time": "2021-02-24 05:18:42.094456", "score": "0.5197", "loss": "12.4615", "code": "void testNone()throws Exception{ContentValues=StartDated(absent).assertThat(((Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}", "n_tokens": 50, "n_pass": [593, 131, 38]}

Minimal simplified code:
void testNone()throws Exception{ContentValues=StartDated(absent).assertThat(((Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}

