
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/kernel-impl/src/main/java/org/sakaiproject/user/impl/BaseUserDirectoryService_unlockCheck.java
method_name = unlockCheck
method_body = protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }
predict, score, loss = unlock, 0.9495186805725098, 7.869804859161377

Trace of simplified code(s):
{"time": "2021-02-24 07:51:26.029433", "score": "0.9495", "loss": "7.8698", "code": "protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 07:51:27.927388", "score": "0.9637", "loss": "9.0374", "code": "protected boolean unlockCheck(List<String> locks, String resource) {locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }", "n_tokens": 72, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 07:51:29.801763", "score": "0.9887", "loss": "9.0128", "code": "protected boolean unlockCheck(List<String> locks, String resource) {; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }", "n_tokens": 67, "n_pass": [43, 3, 3]}
{"time": "2021-02-24 07:51:31.691339", "score": "0.9626", "loss": "7.7875", "code": "protected boolean unlockCheck(List<String> locks, String resource) {; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 62, "n_pass": [48, 4, 4]}
{"time": "2021-02-24 07:51:33.600288", "score": "0.7842", "loss": "8.0408", "code": "protected boolean unlockCheck(List<String> resource) {; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 57, "n_pass": [54, 5, 5]}
{"time": "2021-02-24 07:51:39.182518", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String> resource) {; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 55, "n_pass": [106, 8, 6]}
{"time": "2021-02-24 07:51:50.428533", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String>resource) {; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 54, "n_pass": [178, 11, 7]}
{"time": "2021-02-24 07:51:52.299071", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String>resource){; while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 53, "n_pass": [180, 12, 8]}
{"time": "2021-02-24 07:51:54.136617", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String>resource){ while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 52, "n_pass": [182, 13, 9]}
{"time": "2021-02-24 07:51:55.992726", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String>resource){while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 51, "n_pass": [183, 14, 10]}
{"time": "2021-02-24 07:51:57.858120", "score": "0.7842", "loss": "8.0408", "code": "boolean unlockCheck(List<String>resource){while(locksIterator.hasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 50, "n_pass": [185, 15, 11]}
{"time": "2021-02-24 07:51:59.714738", "score": "0.9674", "loss": "8.3684", "code": "boolean unlockCheck(List<String>resource){while(locksIteratorhasNext()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 49, "n_pass": [188, 16, 12]}
{"time": "2021-02-24 07:52:01.554326", "score": "0.9696", "loss": "8.4192", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()) { if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 48, "n_pass": [189, 17, 13]}
{"time": "2021-02-24 07:52:03.423014", "score": "0.9696", "loss": "8.4192", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){ if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 47, "n_pass": [193, 18, 14]}
{"time": "2021-02-24 07:52:05.276994", "score": "0.9696", "loss": "8.4192", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if (securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 46, "n_pass": [195, 19, 15]}
{"time": "2021-02-24 07:52:07.167404", "score": "0.9696", "loss": "8.4192", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService().unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 45, "n_pass": [197, 20, 16]}
{"time": "2021-02-24 07:52:09.051383", "score": "0.9278", "loss": "7.8646", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator.resource)) return true; } return false; }", "n_tokens": 43, "n_pass": [199, 21, 17]}
{"time": "2021-02-24 07:52:12.753566", "score": "0.9504", "loss": "9.0469", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator)) return true; } return false; }", "n_tokens": 41, "n_pass": [202, 23, 18]}
{"time": "2021-02-24 07:52:16.499240", "score": "0.7708", "loss": "8.5928", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator)) return; } return false; }", "n_tokens": 39, "n_pass": [205, 25, 19]}
{"time": "2021-02-24 07:52:23.021183", "score": "0.7708", "loss": "8.5928", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator)); } return false; }", "n_tokens": 37, "n_pass": [234, 28, 20]}
{"time": "2021-02-24 07:52:33.873853", "score": "0.7708", "loss": "8.5928", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator)); }return false; }", "n_tokens": 36, "n_pass": [281, 32, 21]}
{"time": "2021-02-24 07:52:41.234085", "score": "0.7708", "loss": "8.5928", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock(locksIterator)); }return false;}", "n_tokens": 35, "n_pass": [286, 36, 22]}
{"time": "2021-02-24 07:52:47.675026", "score": "0.3366", "loss": "8.7776", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock()); }return false;}", "n_tokens": 34, "n_pass": [312, 39, 23]}
{"time": "2021-02-24 07:52:49.502095", "score": "0.3366", "loss": "8.7776", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock());}return false;}", "n_tokens": 33, "n_pass": [316, 40, 24]}
{"time": "2021-02-24 07:52:51.356035", "score": "0.4534", "loss": "8.6755", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock());} false;}", "n_tokens": 32, "n_pass": [318, 41, 25]}
{"time": "2021-02-24 07:52:53.216245", "score": "0.4534", "loss": "8.6755", "code": "boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock());}false;}", "n_tokens": 31, "n_pass": [319, 42, 26]}

Minimal simplified code:
boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock());}false;}

