
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/nayuki__Project-Euler-solutions/java/p064_run.java
method_name = run
method_body = public String run() { int count = 0; for (int i = 1; i <= 10000; i++) { if (!Library.isSquare(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }
predict, score, loss = getFractionFraction, 0.6281048655509949, 12.784608840942383

Trace of simplified code(s):
{"time": "2021-02-24 10:29:44.507903", "score": "0.6281", "loss": "12.7846", "code": "public String run() { int count = 0; for (int i = 1; i <= 10000; i++) { if (!Library.isSquare(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 97, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 10:29:48.317778", "score": "0.6224", "loss": "12.0106", "code": "public String run() { int count = 0; for (int i = 1;10000; i++) { if (!Library.isSquare(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 91, "n_pass": [49, 3, 2]}
{"time": "2021-02-24 10:29:50.275316", "score": "0.6224", "loss": "12.0106", "code": "public String run() { int count = 0; for (int i = 1;00; i++) { if (!Library.isSquare(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 88, "n_pass": [94, 4, 3]}
{"time": "2021-02-24 10:29:52.206950", "score": "0.6471", "loss": "12.0142", "code": "public String run() { int count = 0; for (int i = 1;00; i++) { if (!(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 85, "n_pass": [99, 5, 4]}
{"time": "2021-02-24 10:29:54.122647", "score": "0.6668", "loss": "12.8172", "code": "public String run() { int count = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 82, "n_pass": [101, 6, 5]}
{"time": "2021-02-24 10:30:15.391657", "score": "0.6668", "loss": "12.8172", "code": " String run() { int count = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 81, "n_pass": [205, 14, 6]}
{"time": "2021-02-24 10:30:17.303401", "score": "0.6668", "loss": "12.8172", "code": "String run() { int count = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 80, "n_pass": [206, 15, 7]}
{"time": "2021-02-24 10:30:20.111246", "score": "0.6668", "loss": "12.8172", "code": "String run(){ int count = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 79, "n_pass": [211, 16, 8]}
{"time": "2021-02-24 10:30:22.006666", "score": "0.6668", "loss": "12.8172", "code": "String run(){int count = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 78, "n_pass": [213, 17, 9]}
{"time": "2021-02-24 10:30:25.836303", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount = 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 77, "n_pass": [215, 19, 10]}
{"time": "2021-02-24 10:30:27.713361", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount= 0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 76, "n_pass": [217, 20, 11]}
{"time": "2021-02-24 10:30:29.625844", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount=0; for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 75, "n_pass": [219, 21, 12]}
{"time": "2021-02-24 10:30:31.546729", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount=0;for (int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 74, "n_pass": [222, 22, 13]}
{"time": "2021-02-24 10:30:33.482831", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount=0;for(int i = 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 73, "n_pass": [224, 23, 14]}
{"time": "2021-02-24 10:30:39.149323", "score": "0.6812", "loss": "11.6509", "code": "String run(){intcount=0;for(int i= 1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 72, "n_pass": [229, 26, 15]}
{"time": "2021-02-24 10:30:41.064136", "score": "0.6829", "loss": "11.438", "code": "String run(){intcount=0;for(int i1;00; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 70, "n_pass": [230, 27, 16]}
{"time": "2021-02-24 10:30:42.923614", "score": "0.6798", "loss": "11.429", "code": "String run(){intcount=0;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 68, "n_pass": [232, 28, 17]}
{"time": "2021-02-24 10:30:51.902123", "score": "0.6731", "loss": "11.173", "code": "String run(){count=0;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 67, "n_pass": [264, 32, 18]}
{"time": "2021-02-24 10:30:53.757830", "score": "0.6604", "loss": "11.2951", "code": "String run(){count0;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 66, "n_pass": [266, 33, 19]}
{"time": "2021-02-24 10:30:55.618968", "score": "0.6604", "loss": "11.2951", "code": "String run(){count;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); }", "n_tokens": 65, "n_pass": [267, 34, 20]}
{"time": "2021-02-24 10:31:05.089515", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count); }", "n_tokens": 63, "n_pass": [296, 39, 21]}
{"time": "2021-02-24 10:31:29.187649", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i1;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 62, "n_pass": [388, 47, 22]}
{"time": "2021-02-24 10:31:38.060865", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;; i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 61, "n_pass": [402, 51, 23]}
{"time": "2021-02-24 10:31:39.943080", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;;i++) { if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 60, "n_pass": [405, 52, 24]}
{"time": "2021-02-24 10:31:41.835032", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;;i++){ if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 59, "n_pass": [410, 53, 25]}
{"time": "2021-02-24 10:31:43.705393", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;;i++){if (!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 58, "n_pass": [412, 54, 26]}
{"time": "2021-02-24 10:31:45.629990", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;;i++){if(!(i) getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 57, "n_pass": [414, 55, 27]}
{"time": "2021-02-24 10:31:49.422974", "score": "0.5984", "loss": "10.4791", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer(count);}", "n_tokens": 56, "n_pass": [420, 57, 28]}
{"time": "2021-02-24 10:31:53.162869", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod() % 2 == 1) count++; } return Integer(count);}", "n_tokens": 55, "n_pass": [423, 59, 29]}
{"time": "2021-02-24 10:31:55.077789", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()% 2 == 1) count++; } return Integer(count);}", "n_tokens": 54, "n_pass": [425, 60, 30]}
{"time": "2021-02-24 10:31:56.962119", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2 == 1) count++; } return Integer(count);}", "n_tokens": 53, "n_pass": [427, 61, 31]}
{"time": "2021-02-24 10:31:58.841820", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2== 1) count++; } return Integer(count);}", "n_tokens": 52, "n_pass": [429, 62, 32]}
{"time": "2021-02-24 10:32:01.625885", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1) count++; } return Integer(count);}", "n_tokens": 51, "n_pass": [432, 63, 33]}
{"time": "2021-02-24 10:32:03.495352", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++; } return Integer(count);}", "n_tokens": 50, "n_pass": [435, 64, 34]}
{"time": "2021-02-24 10:32:05.395206", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;} return Integer(count);}", "n_tokens": 49, "n_pass": [440, 65, 35]}
{"time": "2021-02-24 10:32:07.246345", "score": "0.6226", "loss": "11.0453", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}return Integer(count);}", "n_tokens": 48, "n_pass": [442, 66, 36]}
{"time": "2021-02-24 10:32:14.771227", "score": "0.637", "loss": "11.7326", "code": "String run(){count;for(int i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}return Integer();}", "n_tokens": 47, "n_pass": [447, 70, 37]}
{"time": "2021-02-24 10:32:19.889421", "score": "0.6346", "loss": "11.3027", "code": "String run(){count;for( i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}return Integer();}", "n_tokens": 46, "n_pass": [461, 72, 38]}
{"time": "2021-02-24 10:32:21.782184", "score": "0.6346", "loss": "11.3027", "code": "String run(){count;for(i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}return Integer();}", "n_tokens": 45, "n_pass": [462, 73, 39]}
{"time": "2021-02-24 10:32:28.323770", "score": "0.577", "loss": "10.4586", "code": "String run(){count;for(i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;} Integer();}", "n_tokens": 44, "n_pass": [491, 76, 40]}
{"time": "2021-02-24 10:32:30.176306", "score": "0.577", "loss": "10.4586", "code": "String run(){count;for(i;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}Integer();}", "n_tokens": 43, "n_pass": [492, 77, 41]}
{"time": "2021-02-24 10:32:35.190408", "score": "0.5843", "loss": "11.0008", "code": "String run(){count;for(;;i++){if(!(i)getSqrtContinuedFractionPeriod()%2==1)count++;}Integer();}", "n_tokens": 42, "n_pass": [508, 79, 42]}
{"time": "2021-02-24 10:32:37.015603", "score": "0.6329", "loss": "11.7532", "code": "String run(){count;for(;;i++){if((i)getSqrtContinuedFractionPeriod()%2==1)count++;}Integer();}", "n_tokens": 41, "n_pass": [518, 80, 43]}

Minimal simplified code:
String run(){count;for(;;i++){if((i)getSqrtContinuedFractionPeriod()%2==1)count++;}Integer();}

