
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/diffplug__spotless/_ext/greclipse/src/main/java/com/diffplug/gradle/spotless/groovy/eclipse/GrEclipseFormatterStepImpl_logging.java
method_name = logging
method_body = @Override public void logging(final IStatus status, final String plugin) { if (!status.isOK()) { errors.add(status.getMessage()); } }
predict, score, loss = onStatusChanged, 0.5090402960777283, 15.18543815612793

Trace of simplified code(s):
{"time": "2021-02-23 21:44:49.781195", "score": "0.509", "loss": "15.1854", "code": "@Override public void logging(final IStatus status, final String plugin) { if (!status.isOK()) { errors.add(status.getMessage()); } }", "n_tokens": 53, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:44:52.145879", "score": "0.421", "loss": "16.6034", "code": "@Override public void logging(final IStatusString plugin) { if (!status.isOK()) { errors.add(status.getMessage()); } }", "n_tokens": 47, "n_pass": [22, 2, 2]}
{"time": "2021-02-23 21:44:54.455457", "score": "0.5923", "loss": "16.5739", "code": "@Override public void logging(final IStatusString plugin) { if (!status.isOK()) {(status.getMessage()); } }", "n_tokens": 43, "n_pass": [50, 3, 3]}
{"time": "2021-02-23 21:45:01.772936", "score": "0.5597", "loss": "16.1701", "code": "@Override public void logging(final IStatusString plugin) { if (!status.isOK()) {(status()); } }", "n_tokens": 41, "n_pass": [91, 6, 4]}
{"time": "2021-02-23 21:45:03.625446", "score": "0.5421", "loss": "16.6516", "code": "@Override public void logging(final IStatusString plugin) { if (!status.isOK()) {(status); } }", "n_tokens": 39, "n_pass": [92, 7, 5]}
{"time": "2021-02-23 21:45:05.487818", "score": "0.4393", "loss": "14.7084", "code": "@Overridepublic void logging(final IStatusString plugin) { if (!status.isOK()) {(status); } }", "n_tokens": 38, "n_pass": [98, 8, 6]}
{"time": "2021-02-23 21:45:07.316602", "score": "0.5421", "loss": "16.6516", "code": "@Override void logging(final IStatusString plugin) { if (!status.isOK()) {(status); } }", "n_tokens": 37, "n_pass": [99, 9, 7]}
{"time": "2021-02-23 21:45:10.439120", "score": "0.5421", "loss": "16.6516", "code": "@Override void logging(IStatusString plugin) { if (!status.isOK()) {(status); } }", "n_tokens": 35, "n_pass": [105, 10, 8]}
{"time": "2021-02-23 21:45:12.311284", "score": "0.5285", "loss": "17.0241", "code": "@Override void logging(IStatusString plugin) { if (!isOK()) {(status); } }", "n_tokens": 33, "n_pass": [112, 11, 9]}
{"time": "2021-02-23 21:45:18.954635", "score": "0.5285", "loss": "17.0241", "code": "@Override void logging(IStatusString plugin) { if (!isOK()){(status); } }", "n_tokens": 32, "n_pass": [161, 12, 10]}
{"time": "2021-02-23 21:45:20.746335", "score": "0.5285", "loss": "17.0241", "code": "@Override void logging(IStatusString plugin) { if (!isOK()){(status);} }", "n_tokens": 31, "n_pass": [166, 13, 11]}
{"time": "2021-02-23 21:45:22.586205", "score": "0.5285", "loss": "17.0241", "code": "@Override void logging(IStatusString plugin) { if (!isOK()){(status);}}", "n_tokens": 30, "n_pass": [168, 14, 12]}
{"time": "2021-02-23 21:45:27.551557", "score": "0.6012", "loss": "17.8312", "code": "@Override void logging(IStatus plugin) { if (!isOK()){(status);}}", "n_tokens": 29, "n_pass": [178, 16, 13]}
{"time": "2021-02-23 21:45:29.404256", "score": "0.6012", "loss": "17.8312", "code": "@Override void logging(IStatus plugin){ if (!isOK()){(status);}}", "n_tokens": 28, "n_pass": [182, 17, 14]}
{"time": "2021-02-23 21:45:31.245744", "score": "0.6012", "loss": "17.8312", "code": "@Override void logging(IStatus plugin){if (!isOK()){(status);}}", "n_tokens": 27, "n_pass": [184, 18, 15]}
{"time": "2021-02-23 21:45:33.082062", "score": "0.6012", "loss": "17.8312", "code": "@Override void logging(IStatus plugin){if(!isOK()){(status);}}", "n_tokens": 26, "n_pass": [186, 19, 16]}
{"time": "2021-02-23 21:45:34.931178", "score": "0.5994", "loss": "17.7303", "code": "@Override void logging(IStatus plugin){if(isOK()){(status);}}", "n_tokens": 25, "n_pass": [188, 20, 17]}

Minimal simplified code:
@Override void logging(IStatus plugin){if(isOK()){(status);}}

