
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/core-utilities/src/main/java/edu/illinois/cs/cogcomp/core/datastructures/textannotation/Sentence_initializeTokens.java
method_name = initializeTokens
method_body = private void initializeTokens() { if (tokens == null) { tokens = textAnnotation.getTokensInSpan(this.getStartSpan(), this.getEndSpan()); } }
predict, score, loss = ensureTokens, 0.6981502771377563, 4.323923110961914

Trace of simplified code(s):
{"time": "2021-02-23 18:34:21.185156", "score": "0.6982", "loss": "4.3239", "code": "private void initializeTokens() { if (tokens == null) { tokens = textAnnotation.getTokensInSpan(this.getStartSpan(), this.getEndSpan()); } }", "n_tokens": 49, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 18:34:27.195532", "score": "0.5373", "loss": "4.5529", "code": "private void initializeTokens() { if (tokens == null) { tokens = textAnnotation.getTokensInSpan(this.getStartSpan().getEndSpan()); } }", "n_tokens": 46, "n_pass": [56, 4, 2]}
{"time": "2021-02-23 18:34:31.392256", "score": "0.4779", "loss": "5.319", "code": "private void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan().getEndSpan()); } }", "n_tokens": 43, "n_pass": [68, 6, 3]}
{"time": "2021-02-23 18:34:39.911973", "score": "0.3452", "loss": "6.3018", "code": "private void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan.getEndSpan()); } }", "n_tokens": 41, "n_pass": [115, 9, 4]}
{"time": "2021-02-23 18:34:41.739361", "score": "0.5877", "loss": "4.5792", "code": "private void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan()); } }", "n_tokens": 39, "n_pass": [116, 10, 5]}
{"time": "2021-02-23 18:34:43.576547", "score": "0.3654", "loss": "5.2662", "code": "private void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 37, "n_pass": [117, 11, 6]}
{"time": "2021-02-23 18:34:45.433106", "score": "0.3654", "loss": "5.2662", "code": " void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 36, "n_pass": [121, 12, 7]}
{"time": "2021-02-23 18:34:47.257441", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens() { if (tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 35, "n_pass": [122, 13, 8]}
{"time": "2021-02-23 18:34:49.985713", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){ if (tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 34, "n_pass": [128, 14, 9]}
{"time": "2021-02-23 18:34:51.818685", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if (tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 33, "n_pass": [130, 15, 10]}
{"time": "2021-02-23 18:34:53.631585", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens == null) { tokens = (this.getStartSpan); } }", "n_tokens": 32, "n_pass": [132, 16, 11]}
{"time": "2021-02-23 18:35:05.614500", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null) { tokens = (this.getStartSpan); } }", "n_tokens": 31, "n_pass": [178, 20, 12]}
{"time": "2021-02-23 18:35:07.430153", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){ tokens = (this.getStartSpan); } }", "n_tokens": 30, "n_pass": [180, 21, 13]}
{"time": "2021-02-23 18:35:09.228063", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){tokens = (this.getStartSpan); } }", "n_tokens": 29, "n_pass": [182, 22, 14]}
{"time": "2021-02-23 18:35:11.057069", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){tokens= (this.getStartSpan); } }", "n_tokens": 28, "n_pass": [184, 23, 15]}
{"time": "2021-02-23 18:35:14.714532", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){tokens=(this.getStartSpan); } }", "n_tokens": 27, "n_pass": [186, 25, 16]}
{"time": "2021-02-23 18:35:18.345987", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){tokens=(this.getStartSpan);} }", "n_tokens": 26, "n_pass": [193, 27, 17]}
{"time": "2021-02-23 18:35:20.206787", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens ==null){tokens=(this.getStartSpan);}}", "n_tokens": 25, "n_pass": [195, 28, 18]}
{"time": "2021-02-23 18:35:22.899667", "score": "0.3654", "loss": "5.2662", "code": "void initializeTokens(){if(tokens==null){tokens=(this.getStartSpan);}}", "n_tokens": 24, "n_pass": [206, 29, 19]}

Minimal simplified code:
void initializeTokens(){if(tokens==null){tokens=(this.getStartSpan);}}

