
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-util/radeox/src/test/java/org/radeox/test/macro/list/SimpleListTest_testSingeItem.java
method_name = testSingeItem
method_body = public void testSingeItem() { Collection c = Arrays.asList(new String[] { "test" }); try { formatter.format(writer, emptyLinkable, "", c, "", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals("Single item is rendered", "<div class=\"list\"><div class=\"list-title\"></div><blockquote>test</blockquote></div>", writer.toString()); }
predict, score, loss = testEmpty, 0.6377611756324768, 16.29366683959961

Trace of simplified code(s):
{"time": "2021-02-24 00:02:55.851167", "score": "0.6378", "loss": "16.2937", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable, \"\", c, \"\", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(\"Single item is rendered\", \"<div class=\\\"list\\\"><div class=\\\"list-title\\\"></div><blockquote>test</blockquote></div>\", writer.toString()); }", "n_tokens": 160, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:02:57.805518", "score": "0.7085", "loss": "19.7508", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable, \"\", c, \"\", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(\"Single itemdiv class=\\\"list-title\\\"></div><blockquote>test</blockquote></div>\", writer.toString()); }", "n_tokens": 140, "n_pass": [25, 2, 2]}
{"time": "2021-02-24 00:02:59.710490", "score": "0.7062", "loss": "19.7363", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable, \"\", c, \"\", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(\"Single item</blockquote></div>\", writer.toString()); }", "n_tokens": 120, "n_pass": [26, 3, 3]}
{"time": "2021-02-24 00:03:01.663156", "score": "0.7458", "loss": "19.8183", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(\"Single item</blockquote></div>\", writer.toString()); }", "n_tokens": 110, "n_pass": [52, 4, 4]}
{"time": "2021-02-24 00:03:03.618642", "score": "0.7751", "loss": "20.0409", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"Single item</blockquote></div>\", writer.toString()); }", "n_tokens": 100, "n_pass": [55, 5, 5]}
{"time": "2021-02-24 00:03:05.547992", "score": "0.7751", "loss": "20.0409", "code": "public void testSingeItem() { Collection c = Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"Single item/div>\", writer.toString()); }", "n_tokens": 95, "n_pass": [88, 6, 6]}
{"time": "2021-02-24 00:03:07.443837", "score": "0.7203", "loss": "20.2514", "code": "public void testSingeItem() {  Arrays.asList(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"Single item/div>\", writer.toString()); }", "n_tokens": 90, "n_pass": [93, 7, 7]}
{"time": "2021-02-24 00:03:09.374954", "score": "0.6705", "loss": "19.8705", "code": "public void testSingeItem() {  Arrays(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"Single item/div>\", writer.toString()); }", "n_tokens": 88, "n_pass": [150, 8, 8]}
{"time": "2021-02-24 00:03:15.019998", "score": "0.771", "loss": "19.8096", "code": "public void testSingeItem() {  Arrays(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"/div>\", writer.toString()); }", "n_tokens": 85, "n_pass": [174, 11, 9]}
{"time": "2021-02-24 00:03:16.898144", "score": "0.6628", "loss": "20.8414", "code": "public void testSingeItem() {  Arrays(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 82, "n_pass": [175, 12, 10]}
{"time": "2021-02-24 00:03:18.756248", "score": "0.6628", "loss": "20.8414", "code": "void testSingeItem() {  Arrays(new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 80, "n_pass": [180, 13, 11]}
{"time": "2021-02-24 00:03:21.056946", "score": "0.73", "loss": "20.9988", "code": "void testSingeItem() { (new String[] { \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 78, "n_pass": [185, 14, 12]}
{"time": "2021-02-24 00:03:34.423425", "score": "0.73", "loss": "20.9988", "code": "void testSingeItem() { (new String[]{ \"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 77, "n_pass": [285, 17, 13]}
{"time": "2021-02-24 00:03:36.299638", "score": "0.73", "loss": "20.9988", "code": "void testSingeItem() { (new String[]{\"test\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 76, "n_pass": [286, 18, 14]}
{"time": "2021-02-24 00:03:38.139680", "score": "0.7478", "loss": "20.9268", "code": "void testSingeItem() { (new String[]{\"\" }); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 75, "n_pass": [288, 19, 15]}
{"time": "2021-02-24 00:03:40.071227", "score": "0.7478", "loss": "20.9268", "code": "void testSingeItem() { (new String[]{\"\"}); try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 74, "n_pass": [290, 20, 16]}
{"time": "2021-02-24 00:03:42.008507", "score": "0.7478", "loss": "20.9268", "code": "void testSingeItem() { (new String[]{\"\"});try { formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 73, "n_pass": [294, 21, 17]}
{"time": "2021-02-24 00:03:43.916937", "score": "0.7478", "loss": "20.9268", "code": "void testSingeItem() { (new String[]{\"\"});try{ formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 72, "n_pass": [296, 22, 18]}
{"time": "2021-02-24 00:03:45.775575", "score": "0.7478", "loss": "20.9268", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter.format(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 71, "n_pass": [298, 23, 19]}
{"time": "2021-02-24 00:03:47.641373", "score": "0.718", "loss": "20.8018", "code": "void testSingeItem() { (new String[]{\"\"});try{formatterformat(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 70, "n_pass": [300, 24, 20]}
{"time": "2021-02-24 00:03:49.524710", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer, emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 69, "n_pass": [301, 25, 21]}
{"time": "2021-02-24 00:03:51.425039", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,  false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 68, "n_pass": [305, 26, 22]}
{"time": "2021-02-24 00:03:53.325679", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable, false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 67, "n_pass": [308, 27, 23]}
{"time": "2021-02-24 00:03:55.204057", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false); } catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 66, "n_pass": [309, 28, 24]}
{"time": "2021-02-24 00:03:57.092902", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);} catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 65, "n_pass": [313, 29, 25]}
{"time": "2021-02-24 00:03:58.969985", "score": "0.6451", "loss": "20.3209", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { log.error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 64, "n_pass": [315, 30, 26]}
{"time": "2021-02-24 00:04:00.837477", "score": "0.6606", "loss": "20.308", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { error; } assertEquals(\"\", writer.toString()); }", "n_tokens": 62, "n_pass": [321, 31, 27]}
{"time": "2021-02-24 00:04:04.634953", "score": "0.7036", "loss": "19.7744", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { error; } assertEquals(\"\", writer()); }", "n_tokens": 60, "n_pass": [328, 33, 28]}
{"time": "2021-02-24 00:04:06.511933", "score": "0.6774", "loss": "19.8992", "code": "void testSingeItem() { (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { error; } assertEquals(\"\", writer); }", "n_tokens": 58, "n_pass": [329, 34, 29]}
{"time": "2021-02-24 00:04:09.315047", "score": "0.6774", "loss": "19.8992", "code": "void testSingeItem(){ (new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { error; } assertEquals(\"\", writer); }", "n_tokens": 57, "n_pass": [337, 35, 30]}
{"time": "2021-02-24 00:04:11.170075", "score": "0.6774", "loss": "19.8992", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable,false);}catch (IOException e) { error; } assertEquals(\"\", writer); }", "n_tokens": 56, "n_pass": [339, 36, 31]}
{"time": "2021-02-24 00:04:14.926317", "score": "0.6533", "loss": "20.7622", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkablefalse);}catch (IOException e) { error; } assertEquals(\"\", writer); }", "n_tokens": 55, "n_pass": [359, 38, 32]}
{"time": "2021-02-24 00:04:16.823034", "score": "0.6777", "loss": "20.2198", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch (IOException e) { error; } assertEquals(\"\", writer); }", "n_tokens": 54, "n_pass": [360, 39, 33]}
{"time": "2021-02-24 00:04:18.688964", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch (IOException e) {  } assertEquals(\"\", writer); }", "n_tokens": 52, "n_pass": [369, 40, 34]}
{"time": "2021-02-24 00:04:27.170708", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch (IOException e) {  } assertEquals(\"\",writer); }", "n_tokens": 51, "n_pass": [438, 42, 35]}
{"time": "2021-02-24 00:04:29.022127", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch (IOException e) {  } assertEquals(\"\",writer);}", "n_tokens": 50, "n_pass": [441, 43, 36]}
{"time": "2021-02-24 00:04:33.622378", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch(IOException e) {  } assertEquals(\"\",writer);}", "n_tokens": 49, "n_pass": [472, 45, 37]}
{"time": "2021-02-24 00:04:35.524780", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch(IOException e){  } assertEquals(\"\",writer);}", "n_tokens": 48, "n_pass": [478, 46, 38]}
{"time": "2021-02-24 00:04:37.382240", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch(IOException e){ } assertEquals(\"\",writer);}", "n_tokens": 47, "n_pass": [480, 47, 39]}
{"time": "2021-02-24 00:04:39.260726", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch(IOException e){} assertEquals(\"\",writer);}", "n_tokens": 46, "n_pass": [481, 48, 40]}
{"time": "2021-02-24 00:04:41.141217", "score": "0.6472", "loss": "20.1856", "code": "void testSingeItem(){(new String[]{\"\"});try{formatter(writer,emptyLinkable);}catch(IOException e){}assertEquals(\"\",writer);}", "n_tokens": 45, "n_pass": [483, 49, 41]}

Minimal simplified code:
void testSingeItem(){(new String[]{""});try{formatter(writer,emptyLinkable);}catch(IOException e){}assertEquals("",writer);}

