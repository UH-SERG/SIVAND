
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-core/src/main/java/com/bj58/oceanus/core/loadbalance/ha/DataNodeChecker_dataNodeAlive.java
method_name = dataNodeAlive
method_body = public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error("DataNode [" + dataNode.getId() + "] is not in the check list !!"); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }
predict, score, loss = isNodeDataNode, 0.6149622201919556, 13.780145645141602

Trace of simplified code(s):
{"time": "2021-02-23 18:32:12.795021", "score": "0.615", "loss": "13.7801", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + dataNode.getId() + \"] is not in the check list !!\"); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }", "n_tokens": 130, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 18:32:14.713770", "score": "0.6608", "loss": "13.9743", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is not in the check list !!\"); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }", "n_tokens": 122, "n_pass": [53, 2, 2]}
{"time": "2021-02-23 18:32:16.609507", "score": "0.6283", "loss": "14.3849", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is list !!\"); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }", "n_tokens": 114, "n_pass": [55, 3, 3]}
{"time": "2021-02-23 18:32:18.554545", "score": "0.698", "loss": "14.4793", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \"); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }", "n_tokens": 110, "n_pass": [98, 4, 4]}
{"time": "2021-02-23 18:32:20.490581", "score": "0.72", "loss": "14.3486", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \");  } return dataNodeAliveMap.get(dataNode.getId()).get(); }", "n_tokens": 106, "n_pass": [99, 5, 5]}
{"time": "2021-02-23 18:32:22.414247", "score": "0.6657", "loss": "16.7864", "code": "public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \");  } return(dataNode.getId()).get(); }", "n_tokens": 102, "n_pass": [101, 6, 6]}
{"time": "2021-02-23 18:32:24.282787", "score": "0.6657", "loss": "16.7864", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \");  } return(dataNode.getId()).get(); }", "n_tokens": 98, "n_pass": [105, 7, 7]}
{"time": "2021-02-23 18:32:26.161069", "score": "0.6503", "loss": "16.9177", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode  || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \");  } return(dataNode.getId()).get(); }", "n_tokens": 94, "n_pass": [110, 8, 8]}
{"time": "2021-02-23 18:32:28.026355", "score": "0.6351", "loss": "16.494", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode  || dataNode.getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"] is \");  } return(dataNode.getId()).get(); }", "n_tokens": 90, "n_pass": [115, 9, 9]}
{"time": "2021-02-23 18:32:31.806142", "score": "0.6066", "loss": "16.1783", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode  || dataNode.getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode.getId()).get(); }", "n_tokens": 86, "n_pass": [124, 11, 10]}
{"time": "2021-02-23 18:32:37.892606", "score": "0.6029", "loss": "16.0619", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode  || dataNode.getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode()).get(); }", "n_tokens": 84, "n_pass": [193, 14, 11]}
{"time": "2021-02-23 18:32:39.808767", "score": "0.6082", "loss": "16.2808", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode  || dataNode.getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 82, "n_pass": [194, 15, 12]}
{"time": "2021-02-23 18:32:42.125453", "score": "0.586", "loss": "16.7419", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | dataNode.getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 80, "n_pass": [206, 16, 13]}
{"time": "2021-02-23 18:32:44.015465", "score": "0.6022", "loss": "16.2483", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 78, "n_pass": [208, 17, 14]}
{"time": "2021-02-23 18:32:47.805304", "score": "0.6049", "loss": "16.6867", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode())) { logger.error(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 76, "n_pass": [219, 19, 15]}
{"time": "2021-02-23 18:32:49.674824", "score": "0.5933", "loss": "17.1596", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode)) { logger.error(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 74, "n_pass": [220, 20, 16]}
{"time": "2021-02-23 18:32:51.595201", "score": "0.557", "loss": "17.8197", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode)) { logger(\"DataNode [\" + \"\");  } return(dataNode).get(); }", "n_tokens": 72, "n_pass": [224, 21, 17]}
{"time": "2021-02-23 18:32:55.378323", "score": "0.4393", "loss": "17.2102", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode)) { logger(\"DataNode [\" + \"\");  }(dataNode).get(); }", "n_tokens": 70, "n_pass": [233, 23, 18]}
{"time": "2021-02-23 18:32:59.638924", "score": "0.5133", "loss": "18.0068", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap.containsKey(dataNode)) {(\"DataNode [\" + \"\");  }(dataNode).get(); }", "n_tokens": 68, "n_pass": [259, 25, 19]}
{"time": "2021-02-23 18:33:03.954915", "score": "0.4186", "loss": "17.8822", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap(dataNode)) {(\"DataNode [\" + \"\");  }(dataNode).get(); }", "n_tokens": 66, "n_pass": [289, 27, 20]}
{"time": "2021-02-23 18:33:18.025269", "score": "0.4772", "loss": "17.5045", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()) {(\"DataNode [\" + \"\");  }(dataNode).get(); }", "n_tokens": 65, "n_pass": [387, 30, 21]}
{"time": "2021-02-23 18:33:19.889769", "score": "0.4772", "loss": "17.5045", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode [\" + \"\");  }(dataNode).get(); }", "n_tokens": 64, "n_pass": [390, 31, 22]}
{"time": "2021-02-23 18:33:23.565978", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode[\" + \"\");  }(dataNode).get(); }", "n_tokens": 63, "n_pass": [395, 33, 23]}
{"time": "2021-02-23 18:33:25.428243", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\" + \"\");  }(dataNode).get(); }", "n_tokens": 62, "n_pass": [396, 34, 24]}
{"time": "2021-02-23 18:33:27.333777", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+ \"\");  }(dataNode).get(); }", "n_tokens": 61, "n_pass": [398, 35, 25]}
{"time": "2021-02-23 18:33:29.197930", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");  }(dataNode).get(); }", "n_tokens": 60, "n_pass": [400, 36, 26]}
{"time": "2021-02-23 18:33:31.117743", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\"); }(dataNode).get(); }", "n_tokens": 59, "n_pass": [405, 37, 27]}
{"time": "2021-02-23 18:33:32.958265", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode) { if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 58, "n_pass": [406, 38, 28]}
{"time": "2021-02-23 18:33:36.162282", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){ if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 57, "n_pass": [424, 39, 29]}
{"time": "2021-02-23 18:33:38.050938", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if (dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 56, "n_pass": [426, 40, 30]}
{"time": "2021-02-23 18:33:39.915475", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode | getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 55, "n_pass": [428, 41, 31]}
{"time": "2021-02-23 18:33:41.784421", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode| getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 54, "n_pass": [431, 42, 32]}
{"time": "2021-02-23 18:33:43.612693", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId() == null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 53, "n_pass": [433, 43, 33]}
{"time": "2021-02-23 18:33:45.473617", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId()== null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 52, "n_pass": [437, 44, 34]}
{"time": "2021-02-23 18:33:48.207162", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId()==null)  if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 51, "n_pass": [440, 45, 35]}
{"time": "2021-02-23 18:33:50.065703", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId()==null) if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 50, "n_pass": [443, 46, 36]}
{"time": "2021-02-23 18:33:51.966650", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId()==null)if (!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 49, "n_pass": [444, 47, 37]}
{"time": "2021-02-23 18:33:53.813116", "score": "0.4521", "loss": "17.6718", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode|getId()==null)if(!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 48, "n_pass": [446, 48, 38]}
{"time": "2021-02-23 18:34:00.763372", "score": "0.5744", "loss": "16.0125", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNodegetId()==null)if(!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 47, "n_pass": [484, 51, 39]}
{"time": "2021-02-23 18:34:02.650804", "score": "0.5881", "loss": "16.7004", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode()==null)if(!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get(); }", "n_tokens": 46, "n_pass": [485, 52, 40]}
{"time": "2021-02-23 18:34:11.379557", "score": "0.5881", "loss": "16.7004", "code": "boolean dataNodeAlive(DataNode dataNode){if(dataNode()==null)if(!dataNodeAliveMap()){(\"DataNode\"+\"\");}(dataNode).get();}", "n_tokens": 45, "n_pass": [536, 55, 41]}

Minimal simplified code:
boolean dataNodeAlive(DataNode dataNode){if(dataNode()==null)if(!dataNodeAliveMap()){("DataNode"+"");}(dataNode).get();}

