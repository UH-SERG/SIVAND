
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/velocity/tool/src/java/org/sakaiproject/cheftool/menu/MenuImpl_adjustDividers.java
method_name = adjustDividers
method_body = public void adjustDividers() { while ((m_items.size() > 0) && (m_items.get(0) instanceof MenuDivider)) { m_items.remove(0); } while ((m_items.size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }
predict, score, loss = removeAllMenuItems, 0.5076322555541992, 16.059341430664062

Trace of simplified code(s):
{"time": "2021-02-24 08:47:27.421564", "score": "0.5076", "loss": "16.0593", "code": "public void adjustDividers() { while ((m_items.size() > 0) && (m_items.get(0) instanceof MenuDivider)) { m_items.remove(0); } while ((m_items.size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 08:47:31.234238", "score": "0.5187", "loss": "16.4959", "code": "public void adjustDividers() { while ((m__items.get(0) instanceof MenuDivider)) { m_items.remove(0); } while ((m_items.size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }", "n_tokens": 115, "n_pass": [21, 3, 2]}
{"time": "2021-02-24 08:47:35.484051", "score": "0.5018", "loss": "16.2632", "code": "public void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((m_items.size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }", "n_tokens": 111, "n_pass": [84, 5, 3]}
{"time": "2021-02-24 08:47:39.247087", "score": "0.4876", "loss": "16.1947", "code": "public void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }", "n_tokens": 107, "n_pass": [91, 7, 4]}
{"time": "2021-02-24 08:47:41.137506", "score": "0.5096", "loss": "16.0662", "code": "public void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } }", "n_tokens": 103, "n_pass": [97, 8, 5]}
{"time": "2021-02-24 08:47:43.007213", "score": "0.5398", "loss": "16.6945", "code": "public void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_items.size() - 1); } }", "n_tokens": 99, "n_pass": [102, 9, 6]}
{"time": "2021-02-24 08:47:44.923613", "score": "0.5352", "loss": "17.108", "code": "public void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 94, "n_pass": [104, 10, 7]}
{"time": "2021-02-24 08:47:49.669984", "score": "0.5352", "loss": "17.108", "code": "void adjustDividers() { while ((m_(0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 92, "n_pass": [178, 12, 8]}
{"time": "2021-02-24 08:47:51.594258", "score": "0.5495", "loss": "17.4979", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { m_items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 90, "n_pass": [184, 13, 9]}
{"time": "2021-02-24 08:47:53.472044", "score": "0.5509", "loss": "17.3737", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0) && (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 88, "n_pass": [191, 14, 10]}
{"time": "2021-02-24 08:47:57.212798", "score": "0.5396", "loss": "18.1012", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m_items.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 86, "n_pass": [203, 16, 11]}
{"time": "2021-02-24 08:47:59.067406", "score": "0.4968", "loss": "17.8174", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m.get(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 84, "n_pass": [206, 17, 12]}
{"time": "2021-02-24 08:48:00.908520", "score": "0.5494", "loss": "17.6892", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m() - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 82, "n_pass": [207, 18, 13]}
{"time": "2021-02-24 08:48:02.777043", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m - 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 80, "n_pass": [209, 19, 14]}
{"time": "2021-02-24 08:48:19.187213", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m- 1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 79, "n_pass": [327, 22, 15]}
{"time": "2021-02-24 08:48:21.084380", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1) instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 78, "n_pass": [328, 23, 16]}
{"time": "2021-02-24 08:48:22.989429", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)) { remove(m_ - 1); } }", "n_tokens": 77, "n_pass": [331, 24, 17]}
{"time": "2021-02-24 08:48:24.880379", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){ remove(m_ - 1); } }", "n_tokens": 76, "n_pass": [337, 25, 18]}
{"time": "2021-02-24 08:48:26.787547", "score": "0.4859", "loss": "17.9302", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(m_ - 1); } }", "n_tokens": 75, "n_pass": [339, 26, 19]}
{"time": "2021-02-24 08:48:30.498935", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_ - 1); } }", "n_tokens": 74, "n_pass": [342, 28, 20]}
{"time": "2021-02-24 08:48:34.310690", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_- 1); } }", "n_tokens": 73, "n_pass": [344, 30, 21]}
{"time": "2021-02-24 08:48:36.158286", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers() { while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 72, "n_pass": [346, 31, 22]}
{"time": "2021-02-24 08:48:38.948942", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){ while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 71, "n_pass": [357, 32, 23]}
{"time": "2021-02-24 08:48:40.779180", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){while (((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 70, "n_pass": [359, 33, 24]}
{"time": "2021-02-24 08:48:42.635229", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){while(((0) instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 69, "n_pass": [361, 34, 25]}
{"time": "2021-02-24 08:48:44.550466", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)) { items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 68, "n_pass": [367, 35, 26]}
{"time": "2021-02-24 08:48:46.403649", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){ items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 67, "n_pass": [373, 36, 27]}
{"time": "2021-02-24 08:48:48.269875", "score": "0.4784", "loss": "17.6269", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove(0); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 66, "n_pass": [375, 37, 28]}
{"time": "2021-02-24 08:48:51.977907", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove(); } while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 65, "n_pass": [380, 39, 29]}
{"time": "2021-02-24 08:48:53.835664", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();} while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 64, "n_pass": [383, 40, 30]}
{"time": "2021-02-24 08:48:55.650798", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while ((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 63, "n_pass": [385, 41, 31]}
{"time": "2021-02-24 08:48:57.533682", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size() > 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 62, "n_pass": [387, 42, 32]}
{"time": "2021-02-24 08:48:59.414446", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()> 0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 61, "n_pass": [393, 43, 33]}
{"time": "2021-02-24 08:49:01.277827", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)& (m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 60, "n_pass": [395, 44, 34]}
{"time": "2021-02-24 08:49:03.142483", "score": "0.5411", "loss": "17.7388", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&(m(m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 59, "n_pass": [399, 45, 35]}
{"time": "2021-02-24 08:49:05.029889", "score": "0.5224", "loss": "17.9924", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((m-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 58, "n_pass": [401, 46, 36]}
{"time": "2021-02-24 08:49:06.899834", "score": "0.5334", "loss": "17.9575", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((-1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 57, "n_pass": [403, 47, 37]}
{"time": "2021-02-24 08:49:08.792980", "score": "0.5152", "loss": "18.116", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove(_-1); } }", "n_tokens": 56, "n_pass": [404, 48, 38]}
{"time": "2021-02-24 08:49:14.464286", "score": "0.5356", "loss": "16.9893", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove(_1); } }", "n_tokens": 55, "n_pass": [416, 51, 39]}
{"time": "2021-02-24 08:49:16.352377", "score": "0.5429", "loss": "17.034", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove(_); } }", "n_tokens": 54, "n_pass": [417, 52, 40]}
{"time": "2021-02-24 08:49:22.935410", "score": "0.5444", "loss": "16.7753", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove(); } }", "n_tokens": 53, "n_pass": [469, 55, 41]}
{"time": "2021-02-24 08:49:28.376473", "score": "0.5444", "loss": "16.7753", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove();} }", "n_tokens": 52, "n_pass": [525, 57, 42]}
{"time": "2021-02-24 08:49:30.220805", "score": "0.5444", "loss": "16.7753", "code": "void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove();}}", "n_tokens": 51, "n_pass": [526, 58, 43]}

Minimal simplified code:
void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove();}}

