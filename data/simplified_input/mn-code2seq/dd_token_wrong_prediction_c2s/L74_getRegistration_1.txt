
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-cloud__spring-cloud-function/spring-cloud-function-context/src/main/java/org/springframework/cloud/function/context/config/ContextFunctionCatalogAutoConfiguration_getRegistration.java
method_name = getRegistration
method_body = public FunctionRegistration<?> getRegistration(Object function) { if (function == null || !names.containsKey(function)) { return null; } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); }
predict, score, loss = getFunctionFunction, 0.7012613415718079, 6.924656867980957

Trace of simplified code(s):
{"time": "2021-02-24 03:25:09.702812", "score": "0.7013", "loss": "6.9247", "code": "public FunctionRegistration<?> getRegistration(Object function) { if (function == null || !names.containsKey(function)) { return null; } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:25:11.629012", "score": "0.6857", "loss": "6.1421", "code": "public FunctionRegistration<?> getRegistration(Object function) { if (functionnames.containsKey(function)) { return null; } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); }", "n_tokens": 72, "n_pass": [22, 2, 2]}
{"time": "2021-02-24 03:25:15.393881", "score": "0.6565", "loss": "6.1305", "code": "public FunctionRegistration<?> getRegistration(Object function) { if (functionnames.containsKey(function)) { } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); }", "n_tokens": 67, "n_pass": [45, 4, 3]}
{"time": "2021-02-24 03:25:17.342085", "score": "0.5979", "loss": "5.3199", "code": "public FunctionRegistration<?> getRegistration(Object function) { if (functionnames.containsKey(function)) { } return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 62, "n_pass": [47, 5, 4]}
{"time": "2021-02-24 03:25:19.238015", "score": "0.5979", "loss": "5.3199", "code": "FunctionRegistration<?> getRegistration(Object function) { if (functionnames.containsKey(function)) { } return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 60, "n_pass": [92, 6, 5]}
{"time": "2021-02-24 03:25:21.140642", "score": "0.6084", "loss": "6.5", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function(function)) { } return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 57, "n_pass": [102, 7, 6]}
{"time": "2021-02-24 03:25:22.997377", "score": "0.6258", "loss": "6.0402", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function) { } return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 54, "n_pass": [103, 8, 7]}
{"time": "2021-02-24 03:25:29.167379", "score": "0.6258", "loss": "6.0402", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function){ } return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 53, "n_pass": [168, 9, 8]}
{"time": "2021-02-24 03:25:31.002871", "score": "0.6258", "loss": "6.0402", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function){} return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 52, "n_pass": [170, 10, 9]}
{"time": "2021-02-24 03:25:32.899011", "score": "0.6258", "loss": "6.0402", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function){}return new FunctionRegistration<>(names.get(function)).type(findType(function).getType()); }", "n_tokens": 51, "n_pass": [172, 11, 10]}
{"time": "2021-02-24 03:25:36.569296", "score": "0.6243", "loss": "6.1759", "code": "FunctionRegistration<?> getRegistration(Object function) { if (function){}return new FunctionRegistration<>(get(function)).type(findType(function).getType()); }", "n_tokens": 49, "n_pass": [180, 13, 11]}
{"time": "2021-02-24 03:25:40.329161", "score": "0.6243", "loss": "6.1759", "code": "FunctionRegistration<?>getRegistration(Object function) { if (function){}return new FunctionRegistration<>(get(function)).type(findType(function).getType()); }", "n_tokens": 48, "n_pass": [195, 15, 12]}
{"time": "2021-02-24 03:25:42.214394", "score": "0.6243", "loss": "6.1759", "code": "FunctionRegistration<?>getRegistration(Object function){ if (function){}return new FunctionRegistration<>(get(function)).type(findType(function).getType()); }", "n_tokens": 47, "n_pass": [202, 16, 13]}
{"time": "2021-02-24 03:25:44.086536", "score": "0.6243", "loss": "6.1759", "code": "FunctionRegistration<?>getRegistration(Object function){if (function){}return new FunctionRegistration<>(get(function)).type(findType(function).getType()); }", "n_tokens": 46, "n_pass": [204, 17, 14]}
{"time": "2021-02-24 03:25:45.958075", "score": "0.6243", "loss": "6.1759", "code": "FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>(get(function)).type(findType(function).getType()); }", "n_tokens": 45, "n_pass": [206, 18, 15]}
{"time": "2021-02-24 03:25:52.448515", "score": "0.4699", "loss": "7.5241", "code": "FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>((function)).type(findType(function).getType()); }", "n_tokens": 44, "n_pass": [265, 21, 16]}
{"time": "2021-02-24 03:25:54.327664", "score": "0.4771", "loss": "6.6803", "code": "FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>((function)).type((function).getType()); }", "n_tokens": 43, "n_pass": [272, 22, 17]}
{"time": "2021-02-24 03:25:58.091940", "score": "0.4771", "loss": "6.6803", "code": "FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>((function)).type((function).getType());}", "n_tokens": 42, "n_pass": [282, 24, 18]}

Minimal simplified code:
FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>((function)).type((function).getType());}

