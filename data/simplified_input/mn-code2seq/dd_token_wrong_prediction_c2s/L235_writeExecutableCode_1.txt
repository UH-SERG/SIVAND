
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/coverage/reporting/lineCoverage/LineCoverageOutput_writeExecutableCode.java
method_name = writeExecutableCode
method_body = private void writeExecutableCode(@Nonnull LineParser lineParser) { String formattedLine = lineCoverageFormatter.format(lineParser, lineCoverageData); output.write(" <td>"); output.write(formattedLine); output.println("</td>"); }
predict, score, loss = writeLine, 0.7458416223526001, 19.974105834960938

Trace of simplified code(s):
{"time": "2021-02-24 00:57:58.468160", "score": "0.7458", "loss": "19.9741", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { String formattedLine = lineCoverageFormatter.format(lineParser, lineCoverageData); output.write(\" <td>\"); output.write(formattedLine); output.println(\"</td>\"); }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:58:02.169937", "score": "0.6617", "loss": "19.4947", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData); output.write(\" <td>\"); output.write(formattedLine); output.println(\"</td>\"); }", "n_tokens": 60, "n_pass": [22, 3, 2]}
{"time": "2021-02-24 00:58:05.915736", "score": "0.6219", "loss": "19.7719", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\" <td>\"); output.write(formattedLine); output.println(\"</td>\"); }", "n_tokens": 56, "n_pass": [46, 5, 3]}
{"time": "2021-02-24 00:58:11.015083", "score": "0.6219", "loss": "19.7719", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); output.write(formattedLine); output.println(\"</td>\"); }", "n_tokens": 54, "n_pass": [87, 7, 4]}
{"time": "2021-02-24 00:58:14.743674", "score": "0.6306", "loss": "19.5563", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); write(formattedLine); output.println(\"</td>\"); }", "n_tokens": 52, "n_pass": [91, 9, 5]}
{"time": "2021-02-24 00:58:16.617149", "score": "0.6138", "loss": "19.6052", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); write(formattedLine); println(\"</td>\"); }", "n_tokens": 50, "n_pass": [95, 10, 6]}
{"time": "2021-02-24 00:58:18.473308", "score": "0.6575", "loss": "19.8342", "code": "private void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); write(formattedLine); println(\">\"); }", "n_tokens": 47, "n_pass": [97, 11, 7]}
{"time": "2021-02-24 00:58:20.321990", "score": "0.6575", "loss": "19.8342", "code": "void writeExecutableCode(@Nonnull LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); write(formattedLine); println(\">\"); }", "n_tokens": 45, "n_pass": [100, 12, 8]}
{"time": "2021-02-24 00:58:22.613884", "score": "0.5892", "loss": "19.8263", "code": "void writeExecutableCode( LineParser lineParser) { format(lineParser, lineCoverageData);(\"td>\"); write(formattedLine); println(\">\"); }", "n_tokens": 43, "n_pass": [103, 13, 9]}
{"time": "2021-02-24 00:58:24.455458", "score": "0.554", "loss": "19.8522", "code": "void writeExecutableCode( LineParser lineParser) { format( lineCoverageData);(\"td>\"); write(formattedLine); println(\">\"); }", "n_tokens": 41, "n_pass": [109, 14, 10]}
{"time": "2021-02-24 00:58:35.103790", "score": "0.554", "loss": "19.8522", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td>\"); write(formattedLine); println(\">\"); }", "n_tokens": 40, "n_pass": [167, 17, 11]}
{"time": "2021-02-24 00:58:38.785771", "score": "0.554", "loss": "19.8522", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td\"); write(formattedLine); println(\">\"); }", "n_tokens": 39, "n_pass": [173, 19, 12]}
{"time": "2021-02-24 00:58:40.630889", "score": "0.554", "loss": "19.8522", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td\");write(formattedLine); println(\">\"); }", "n_tokens": 38, "n_pass": [177, 20, 13]}
{"time": "2021-02-24 00:58:44.297088", "score": "0.5638", "loss": "20.1025", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td\");write(); println(\">\"); }", "n_tokens": 37, "n_pass": [180, 22, 14]}
{"time": "2021-02-24 00:58:46.118988", "score": "0.5638", "loss": "20.1025", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td\");write();println(\">\"); }", "n_tokens": 36, "n_pass": [183, 23, 15]}
{"time": "2021-02-24 00:58:47.939869", "score": "0.5753", "loss": "19.7009", "code": "void writeExecutableCode( LineParser lineParser) { format(lineCoverageData);(\"td\");write();(\">\"); }", "n_tokens": 35, "n_pass": [184, 24, 16]}
{"time": "2021-02-24 00:58:50.603845", "score": "0.5753", "loss": "19.7009", "code": "void writeExecutableCode(LineParser lineParser) { format(lineCoverageData);(\"td\");write();(\">\"); }", "n_tokens": 34, "n_pass": [194, 25, 17]}
{"time": "2021-02-24 00:58:52.449795", "score": "0.5753", "loss": "19.7009", "code": "void writeExecutableCode(LineParser lineParser){ format(lineCoverageData);(\"td\");write();(\">\"); }", "n_tokens": 33, "n_pass": [199, 26, 18]}
{"time": "2021-02-24 00:58:54.263012", "score": "0.5753", "loss": "19.7009", "code": "void writeExecutableCode(LineParser lineParser){format(lineCoverageData);(\"td\");write();(\">\"); }", "n_tokens": 32, "n_pass": [201, 27, 19]}
{"time": "2021-02-24 00:58:56.117816", "score": "0.4855", "loss": "20.3975", "code": "void writeExecutableCode(LineParser lineParser){(lineCoverageData);(\"td\");write();(\">\"); }", "n_tokens": 31, "n_pass": [202, 28, 20]}
{"time": "2021-02-24 00:58:58.395948", "score": "0.4964", "loss": "20.705", "code": "void writeExecutableCode(LineParser lineParser){(lineCoverageData);(\"\");write();(\">\"); }", "n_tokens": 30, "n_pass": [209, 29, 21]}
{"time": "2021-02-24 00:59:04.218626", "score": "0.4964", "loss": "20.705", "code": "void writeExecutableCode(LineParser lineParser){(lineCoverageData);(\"\");write();(\">\");}", "n_tokens": 29, "n_pass": [247, 31, 22]}

Minimal simplified code:
void writeExecutableCode(LineParser lineParser){(lineCoverageData);("");write();(">");}

