
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/ner/src/main/java/edu/illinois/cs/cogcomp/ner/ClassifiersAndUtils/FeatureMap_save.java
method_name = save
method_body = public void save(String file) { OutFile out = new OutFile(file); out.println(String.valueOf(dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); }
predict, score, loss = print, 0.4749346971511841, 5.006913661956787

Trace of simplified code(s):
{"time": "2021-02-24 04:22:25.485105", "score": "0.5481", "loss": "5.1421", "code": "public void save(String file) { OutFile out = new OutFile(file); out.println(String.valueOf(dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); }", "n_tokens": 94, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 04:22:27.867543", "score": "0.5104", "loss": "5.0769", "code": "public void save(String file) { OutFile out = new OutFile.println(String.valueOf(dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); }", "n_tokens": 88, "n_pass": [48, 2, 2]}
{"time": "2021-02-24 04:22:31.811022", "score": "0.5205", "loss": "5.217", "code": "public void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); }", "n_tokens": 85, "n_pass": [94, 4, 3]}
{"time": "2021-02-24 04:22:37.573100", "score": "0.5897", "loss": "5.584", "code": "public void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println; out.println(String.valueOf(wordToFid.get(w))); } out.close(); }", "n_tokens": 82, "n_pass": [104, 7, 4]}
{"time": "2021-02-24 04:22:39.529814", "score": "0.5393", "loss": "5.2999", "code": "public void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); } out.close(); }", "n_tokens": 79, "n_pass": [105, 8, 5]}
{"time": "2021-02-24 04:22:43.368820", "score": "0.6435", "loss": "5.5725", "code": "public void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }close(); }", "n_tokens": 76, "n_pass": [112, 10, 6]}
{"time": "2021-02-24 04:22:45.246793", "score": "0.7166", "loss": "6.3065", "code": "public void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 73, "n_pass": [113, 11, 7]}
{"time": "2021-02-24 04:22:47.154487", "score": "0.7166", "loss": "6.3065", "code": "void save(String file) { OutFile out = new OutFile.println((dim)); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 71, "n_pass": [115, 12, 8]}
{"time": "2021-02-24 04:22:49.531504", "score": "0.7627", "loss": "6.7288", "code": "void save(String file) { OutFile out = new OutFile.println(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 68, "n_pass": [124, 13, 9]}
{"time": "2021-02-24 04:22:58.087762", "score": "0.7627", "loss": "6.7288", "code": "void save(String file) { OutFile out =new OutFile.println(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 67, "n_pass": [194, 15, 10]}
{"time": "2021-02-24 04:22:59.988064", "score": "0.8045", "loss": "6.8996", "code": "void save(String file) { OutFile out = OutFile.println(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 66, "n_pass": [195, 16, 11]}
{"time": "2021-02-24 04:23:01.914792", "score": "0.8045", "loss": "6.8996", "code": "void save(String file) { OutFile out =OutFile.println(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 65, "n_pass": [196, 17, 12]}
{"time": "2021-02-24 04:23:03.841916", "score": "0.8165", "loss": "7.0673", "code": "void save(String file) { OutFile out =OutFileprintln(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 64, "n_pass": [198, 18, 13]}
{"time": "2021-02-24 04:23:05.764001", "score": "0.7993", "loss": "6.7128", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid.keySet()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 63, "n_pass": [199, 19, 14]}
{"time": "2021-02-24 04:23:07.661474", "score": "0.7844", "loss": "6.6168", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid()) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 61, "n_pass": [208, 20, 15]}
{"time": "2021-02-24 04:23:09.549315", "score": "0.7836", "loss": "6.5977", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid) { out.println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 59, "n_pass": [209, 21, 16]}
{"time": "2021-02-24 04:23:11.453182", "score": "0.757", "loss": "6.4534", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid) { println.println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 57, "n_pass": [212, 22, 17]}
{"time": "2021-02-24 04:23:13.367497", "score": "0.8149", "loss": "7.4067", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid) { println(String.valueOf(wordToFid.get(w))); }; }", "n_tokens": 55, "n_pass": [213, 23, 18]}
{"time": "2021-02-24 04:23:15.255923", "score": "0.8315", "loss": "7.1712", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid) { println(valueOf(wordToFid.get(w))); }; }", "n_tokens": 53, "n_pass": [215, 24, 19]}
{"time": "2021-02-24 04:23:17.103393", "score": "0.8272", "loss": "7.1509", "code": "void save(String file) { OutFile out =OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 51, "n_pass": [217, 25, 20]}
{"time": "2021-02-24 04:23:19.865243", "score": "0.8272", "loss": "7.1509", "code": "void save(String file){ OutFile out =OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 50, "n_pass": [232, 26, 21]}
{"time": "2021-02-24 04:23:21.744468", "score": "0.8272", "loss": "7.1509", "code": "void save(String file){OutFile out =OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 49, "n_pass": [234, 27, 22]}
{"time": "2021-02-24 04:23:23.644207", "score": "0.6018", "loss": "5.6239", "code": "void save(String file){ out =OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 48, "n_pass": [235, 28, 23]}
{"time": "2021-02-24 04:23:25.544560", "score": "0.6018", "loss": "5.6239", "code": "void save(String file){out =OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 47, "n_pass": [236, 29, 24]}
{"time": "2021-02-24 04:23:27.392741", "score": "0.6018", "loss": "5.6239", "code": "void save(String file){out=OutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 46, "n_pass": [238, 30, 25]}
{"time": "2021-02-24 04:23:29.248958", "score": "0.8282", "loss": "7.0268", "code": "void save(String file){outOutFile(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 45, "n_pass": [239, 31, 26]}
{"time": "2021-02-24 04:23:31.125237", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for (String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 44, "n_pass": [240, 32, 27]}
{"time": "2021-02-24 04:23:39.055801", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for(String w : wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 43, "n_pass": [301, 33, 28]}
{"time": "2021-02-24 04:23:40.950220", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for(String w: wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 42, "n_pass": [306, 34, 29]}
{"time": "2021-02-24 04:23:42.805749", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for(String w:wordToFid) { println(valueOf(get(w))); }; }", "n_tokens": 41, "n_pass": [308, 35, 30]}
{"time": "2021-02-24 04:23:44.685372", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for(String w:wordToFid){ println(valueOf(get(w))); }; }", "n_tokens": 40, "n_pass": [311, 36, 31]}
{"time": "2021-02-24 04:23:46.556995", "score": "0.8173", "loss": "7.964", "code": "void save(String file){out(); for(String w:wordToFid){println(valueOf(get(w))); }; }", "n_tokens": 39, "n_pass": [313, 37, 32]}
{"time": "2021-02-24 04:23:50.254282", "score": "0.7", "loss": "7.3031", "code": "void save(String file){out(); for(String w:wordToFid){println((get(w))); }; }", "n_tokens": 38, "n_pass": [316, 39, 33]}
{"time": "2021-02-24 04:23:52.107773", "score": "0.7258", "loss": "8.1294", "code": "void save(String file){out(); for(String w:wordToFid){println(((w))); }; }", "n_tokens": 37, "n_pass": [318, 40, 34]}
{"time": "2021-02-24 04:23:54.041870", "score": "0.7258", "loss": "8.1294", "code": "void save(String file){out(); for(String w:wordToFid){println(((w)));}; }", "n_tokens": 36, "n_pass": [325, 41, 35]}
{"time": "2021-02-24 04:23:55.934797", "score": "0.7258", "loss": "8.1294", "code": "void save(String file){out(); for(String w:wordToFid){println(((w)));} }", "n_tokens": 35, "n_pass": [327, 42, 36]}
{"time": "2021-02-24 04:23:57.791263", "score": "0.7258", "loss": "8.1294", "code": "void save(String file){out(); for(String w:wordToFid){println(((w)));}}", "n_tokens": 34, "n_pass": [328, 43, 37]}
{"time": "2021-02-24 04:24:00.537628", "score": "0.7258", "loss": "8.1294", "code": "void save(String file){out();for(String w:wordToFid){println(((w)));}}", "n_tokens": 33, "n_pass": [343, 44, 38]}

Minimal simplified code:
void save(String file){out();for(String w:wordToFid){println(((w)));}}

