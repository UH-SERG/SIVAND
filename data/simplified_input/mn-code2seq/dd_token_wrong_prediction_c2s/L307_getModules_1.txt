
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam/src/main/java/org/rakam/bootstrap/SystemRegistry_getModules.java
method_name = getModules
method_body = public synchronized List<ModuleDescriptor> getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; }
predict, score, loss = getModuleDescriptors, 0.8436051607131958, 13.689032554626465

Trace of simplified code(s):
{"time": "2021-02-23 21:57:11.479637", "score": "0.8436", "loss": "13.689", "code": "public synchronized List<ModuleDescriptor> getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:57:14.258354", "score": "0.8436", "loss": "13.689", "code": "synchronized List<ModuleDescriptor> getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; }", "n_tokens": 45, "n_pass": [44, 2, 2]}
{"time": "2021-02-23 21:57:16.117704", "score": "0.9452", "loss": "13.0874", "code": "synchronized List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; }", "n_tokens": 42, "n_pass": [45, 3, 3]}
{"time": "2021-02-23 21:57:18.407707", "score": "0.9852", "loss": "12.5204", "code": "synchronized List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors (); } return moduleDescriptors; }", "n_tokens": 39, "n_pass": [54, 4, 4]}
{"time": "2021-02-23 21:57:20.219563", "score": "0.9133", "loss": "7.595", "code": "synchronized List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors (); } ; }", "n_tokens": 36, "n_pass": [57, 5, 5]}
{"time": "2021-02-23 21:57:25.550388", "score": "0.9133", "loss": "7.595", "code": "synchronized List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 34, "n_pass": [94, 6, 6]}
{"time": "2021-02-23 21:57:27.382687", "score": "0.9133", "loss": "7.595", "code": " List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 33, "n_pass": [96, 7, 7]}
{"time": "2021-02-23 21:57:29.228212", "score": "0.9133", "loss": "7.595", "code": "List getModules() { if (moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 32, "n_pass": [97, 8, 8]}
{"time": "2021-02-23 21:57:32.379490", "score": "0.9133", "loss": "7.595", "code": "List getModules(){ if (moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 31, "n_pass": [103, 9, 9]}
{"time": "2021-02-23 21:57:34.203945", "score": "0.9133", "loss": "7.595", "code": "List getModules(){if (moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 30, "n_pass": [105, 10, 10]}
{"time": "2021-02-23 21:57:36.040777", "score": "0.9133", "loss": "7.595", "code": "List getModules(){if(moduleDescriptors == null) { this.moduleDescriptors (); } }", "n_tokens": 29, "n_pass": [107, 11, 11]}
{"time": "2021-02-23 21:57:37.850493", "score": "0.8714", "loss": "8.4041", "code": "List getModules(){if(moduleDescriptors= null) { this.moduleDescriptors (); } }", "n_tokens": 27, "n_pass": [109, 12, 12]}
{"time": "2021-02-23 21:57:39.715963", "score": "0.8461", "loss": "6.0826", "code": "List getModules(){if(moduleDescriptorsnull) { this.moduleDescriptors (); } }", "n_tokens": 25, "n_pass": [110, 13, 13]}
{"time": "2021-02-23 21:57:45.823676", "score": "0.8461", "loss": "6.0826", "code": "List getModules(){if(moduleDescriptorsnull) {this.moduleDescriptors (); } }", "n_tokens": 24, "n_pass": [146, 14, 14]}
{"time": "2021-02-23 21:57:49.442738", "score": "0.8461", "loss": "6.0826", "code": "List getModules(){if(moduleDescriptorsnull) {this.moduleDescriptors(); } }", "n_tokens": 23, "n_pass": [149, 16, 15]}
{"time": "2021-02-23 21:57:51.270734", "score": "0.8461", "loss": "6.0826", "code": "List getModules(){if(moduleDescriptorsnull) {this.moduleDescriptors();} }", "n_tokens": 22, "n_pass": [153, 17, 16]}
{"time": "2021-02-23 21:57:53.146591", "score": "0.8461", "loss": "6.0826", "code": "List getModules(){if(moduleDescriptorsnull) {this.moduleDescriptors();}}", "n_tokens": 21, "n_pass": [155, 18, 17]}
{"time": "2021-02-23 21:57:56.289842", "score": "0.7032", "loss": "8.2626", "code": "List getModules(){if(null) {this.moduleDescriptors();}}", "n_tokens": 20, "n_pass": [165, 19, 18]}
{"time": "2021-02-23 21:57:58.138527", "score": "0.7032", "loss": "8.2626", "code": "List getModules(){if(null){this.moduleDescriptors();}}", "n_tokens": 19, "n_pass": [168, 20, 19]}

Minimal simplified code:
List getModules(){if(null){this.moduleDescriptors();}}

