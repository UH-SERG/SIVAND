
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/spi/src/main/java/org/kaazing/gateway/transport/AbstractBridgeService_addLoggerFilter.java
method_name = addLoggerFilter
method_body = private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session, getTransportMetadata().getName()); if (session.getParent() != null) { LoggingFilter.moveAfterCodec(session.getParent()); } } }
predict, score, loss = addIfNeeded, 0.5633175373077393, 19.391521453857422

Trace of simplified code(s):
{"time": "2021-02-24 10:46:12.146393", "score": "0.5633", "loss": "19.3915", "code": "private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session, getTransportMetadata().getName()); if (session.getParent() != null) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 85, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 10:46:15.975284", "score": "0.3979", "loss": "18.5472", "code": "private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session.getParent() != null) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 80, "n_pass": [52, 3, 2]}
{"time": "2021-02-24 10:46:17.849785", "score": "0.394", "loss": "19.0227", "code": "private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session= null) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 74, "n_pass": [55, 4, 3]}
{"time": "2021-02-24 10:46:21.639677", "score": "0.4016", "loss": "17.8797", "code": "private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 71, "n_pass": [98, 6, 4]}
{"time": "2021-02-24 10:46:25.391912", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 69, "n_pass": [105, 8, 5]}
{"time": "2021-02-24 10:46:37.056069", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 68, "n_pass": [192, 11, 6]}
{"time": "2021-02-24 10:46:38.913884", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){ if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 67, "n_pass": [196, 12, 7]}
{"time": "2021-02-24 10:46:40.776304", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if (logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 66, "n_pass": [198, 13, 8]}
{"time": "2021-02-24 10:46:42.656828", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if(logger != null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 65, "n_pass": [200, 14, 9]}
{"time": "2021-02-24 10:46:44.531367", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if(logger!= null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 64, "n_pass": [203, 15, 10]}
{"time": "2021-02-24 10:46:48.326101", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null) { LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 63, "n_pass": [206, 17, 11]}
{"time": "2021-02-24 10:46:50.196937", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){ LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 62, "n_pass": [209, 18, 12]}
{"time": "2021-02-24 10:46:52.049758", "score": "0.4016", "loss": "17.8797", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter.moveAfterCodec(session.getParent()); } } }", "n_tokens": 61, "n_pass": [211, 19, 13]}
{"time": "2021-02-24 10:46:59.524484", "score": "0.5858", "loss": "18.6338", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter(session.getParent()); } } }", "n_tokens": 59, "n_pass": [227, 23, 14]}
{"time": "2021-02-24 10:47:01.383280", "score": "0.5789", "loss": "18.6668", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session,getName()); if (session) { LoggingFilter(session()); } } }", "n_tokens": 57, "n_pass": [229, 24, 15]}
{"time": "2021-02-24 10:47:13.489967", "score": "0.6603", "loss": "19.6441", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session,getName()); if (session) {(session()); } } }", "n_tokens": 55, "n_pass": [270, 30, 16]}
{"time": "2021-02-24 10:47:21.860546", "score": "0.3847", "loss": "16.9781", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session()); if (session) {(session()); } } }", "n_tokens": 53, "n_pass": [305, 34, 17]}
{"time": "2021-02-24 10:47:23.747634", "score": "0.704", "loss": "19.4645", "code": "void addLoggerFilter(T session,Logger logger){if(logger!=null){LoggingFilter.addIfNeeded(logger, session); if (session) {(session()); } } }", "n_tokens": 51, "n_pass": [306, 35, 18]}
{"time": "2021-02-24 10:47:28.381993", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger, session); if (session) {(session()); } } }", "n_tokens": 50, "n_pass": [334, 37, 19]}
{"time": "2021-02-24 10:47:40.648868", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session); if (session) {(session()); } } }", "n_tokens": 49, "n_pass": [397, 41, 20]}
{"time": "2021-02-24 10:47:42.512473", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if (session) {(session()); } } }", "n_tokens": 48, "n_pass": [400, 42, 21]}
{"time": "2021-02-24 10:47:44.388061", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session) {(session()); } } }", "n_tokens": 47, "n_pass": [402, 43, 22]}
{"time": "2021-02-24 10:47:46.263925", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session()); } } }", "n_tokens": 46, "n_pass": [406, 44, 23]}
{"time": "2021-02-24 10:47:48.159263", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session());} } }", "n_tokens": 45, "n_pass": [414, 45, 24]}
{"time": "2021-02-24 10:47:50.027679", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session());}} }", "n_tokens": 44, "n_pass": [416, 46, 25]}
{"time": "2021-02-24 10:47:51.920247", "score": "0.6022", "loss": "19.3858", "code": "void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session());}}}", "n_tokens": 43, "n_pass": [418, 47, 26]}

Minimal simplified code:
void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session());}}}

