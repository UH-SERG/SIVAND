
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/cairo/TableReader_countDefaultPartitions.java
method_name = countDefaultPartitions
method_body = private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = 0; } else { Path path = pathGenDefault(); partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } }
predict, score, loss = trim, 0.4373122751712799, 18.731422424316406

Trace of simplified code(s):
{"time": "2021-02-24 00:42:02.933685", "score": "0.4373", "loss": "18.7314", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = 0; } else { Path path = pathGenDefault(); partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } }", "n_tokens": 82, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:42:05.292494", "score": "0.6037", "loss": "19.2689", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = 0; } else {  partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } }", "n_tokens": 72, "n_pass": [24, 2, 2]}
{"time": "2021-02-24 00:42:07.167511", "score": "0.4757", "loss": "18.9456", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } }", "n_tokens": 62, "n_pass": [31, 3, 3]}
{"time": "2021-02-24 00:42:09.048615", "score": "0.5379", "loss": "19.998", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount =ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } }", "n_tokens": 57, "n_pass": [50, 4, 4]}
{"time": "2021-02-24 00:42:11.354192", "score": "0.7391", "loss": "20.6714", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount =(path) ? 1 : 0; path.trimTo(rootLen); } }", "n_tokens": 54, "n_pass": [84, 5, 5]}
{"time": "2021-02-24 00:42:15.108022", "score": "0.7206", "loss": "19.7615", "code": "private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 51, "n_pass": [89, 7, 6]}
{"time": "2021-02-24 00:42:16.972301", "score": "0.7206", "loss": "19.7615", "code": "void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 49, "n_pass": [93, 8, 7]}
{"time": "2021-02-24 00:42:19.382802", "score": "0.7004", "loss": "20.3822", "code": "void countDefaultPartitions() { if (maxTimestamp= Numbers.LONG_NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 47, "n_pass": [100, 9, 8]}
{"time": "2021-02-24 00:42:21.202818", "score": "0.7506", "loss": "20.3517", "code": "void countDefaultPartitions() { if (maxTimestampNumbers.LONG_NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 45, "n_pass": [101, 10, 9]}
{"time": "2021-02-24 00:42:34.243218", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions() { if (maxTimestampNumbers._NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 44, "n_pass": [155, 15, 10]}
{"time": "2021-02-24 00:42:36.102079", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions() { if (maxTimestampNumbers.NaN) { partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 43, "n_pass": [156, 16, 11]}
{"time": "2021-02-24 00:42:37.935665", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions() { if (maxTimestampNumbers.NaN){ partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 42, "n_pass": [159, 17, 12]}
{"time": "2021-02-24 00:42:39.803148", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions() { if (maxTimestampNumbers.NaN){partitionCount =(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 41, "n_pass": [161, 18, 13]}
{"time": "2021-02-24 00:42:41.686443", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions() { if (maxTimestampNumbers.NaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 40, "n_pass": [163, 19, 14]}
{"time": "2021-02-24 00:42:44.434119", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions(){ if (maxTimestampNumbers.NaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 39, "n_pass": [180, 20, 15]}
{"time": "2021-02-24 00:42:46.270889", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions(){if (maxTimestampNumbers.NaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 38, "n_pass": [182, 21, 16]}
{"time": "2021-02-24 00:42:48.148053", "score": "0.7748", "loss": "20.3558", "code": "void countDefaultPartitions(){if(maxTimestampNumbers.NaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 37, "n_pass": [184, 22, 17]}
{"time": "2021-02-24 00:42:49.985060", "score": "0.8255", "loss": "20.4377", "code": "void countDefaultPartitions(){if(Numbers.NaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 36, "n_pass": [186, 23, 18]}
{"time": "2021-02-24 00:42:51.810027", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path) ? 1 : 0;trimTo(rootLen); } }", "n_tokens": 35, "n_pass": [188, 24, 19]}
{"time": "2021-02-24 00:43:02.136804", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)? 1 : 0;trimTo(rootLen); } }", "n_tokens": 34, "n_pass": [239, 27, 20]}
{"time": "2021-02-24 00:43:04.018601", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1 : 0;trimTo(rootLen); } }", "n_tokens": 33, "n_pass": [240, 28, 21]}
{"time": "2021-02-24 00:43:05.958921", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1: 0;trimTo(rootLen); } }", "n_tokens": 32, "n_pass": [242, 29, 22]}
{"time": "2021-02-24 00:43:07.813693", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1:0;trimTo(rootLen); } }", "n_tokens": 31, "n_pass": [244, 30, 23]}
{"time": "2021-02-24 00:43:13.291515", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1:0;trimTo(rootLen);} }", "n_tokens": 30, "n_pass": [252, 33, 24]}
{"time": "2021-02-24 00:43:15.137257", "score": "0.7507", "loss": "20.2955", "code": "void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1:0;trimTo(rootLen);}}", "n_tokens": 29, "n_pass": [254, 34, 25]}

Minimal simplified code:
void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1:0;trimTo(rootLen);}}

