
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/util/googleApi/GoogleApiClientManager_initializeDriverThread.java
method_name = initializeDriverThread
method_body = private void initializeDriverThread() { if (mDriverThread == null || mDriverThread.isInterrupted()) { mDriverThread = new Thread(mDriverRunnable, "GAC Manager Driver Thread"); mDriverThread.start(); } }
predict, score, loss = startThread, 0.8134334087371826, 10.452227592468262

Trace of simplified code(s):
{"time": "2021-02-24 04:43:46.076496", "score": "0.8134", "loss": "10.4522", "code": "private void initializeDriverThread() { if (mDriverThread == null || mDriverThread.isInterrupted()) { mDriverThread = new Thread(mDriverRunnable, \"GAC Manager Driver Thread\"); mDriverThread.start(); } }", "n_tokens": 65, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 04:43:48.901593", "score": "0.7029", "loss": "9.0501", "code": "private void initializeDriverThread() { if (mDriverThread == null .isInterrupted()) { mDriverThread = new Thread(mDriverRunnable, \"GAC Manager Driver Thread\"); mDriverThread.start(); } }", "n_tokens": 61, "n_pass": [49, 2, 2]}
{"time": "2021-02-24 04:43:50.720366", "score": "0.7373", "loss": "8.8452", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { mDriverThread = new Thread(mDriverRunnable, \"GAC Manager Driver Thread\"); mDriverThread.start(); } }", "n_tokens": 57, "n_pass": [50, 3, 3]}
{"time": "2021-02-24 04:43:52.578183", "score": "0.8442", "loss": "10.6372", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"GAC Manager Driver Thread\"); mDriverThread.start(); } }", "n_tokens": 53, "n_pass": [52, 4, 4]}
{"time": "2021-02-24 04:43:54.412233", "score": "0.7973", "loss": "9.9007", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Driver Thread\"); mDriverThread.start(); } }", "n_tokens": 49, "n_pass": [55, 5, 5]}
{"time": "2021-02-24 04:43:59.068498", "score": "0.7763", "loss": "10.207", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread.start(); } }", "n_tokens": 47, "n_pass": [92, 7, 6]}
{"time": "2021-02-24 04:44:00.903699", "score": "0.3756", "loss": "10.2516", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread(); } }", "n_tokens": 45, "n_pass": [95, 8, 7]}
{"time": "2021-02-24 04:44:02.768935", "score": "0.3774", "loss": "8.9491", "code": "private void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 43, "n_pass": [96, 9, 8]}
{"time": "2021-02-24 04:44:04.593794", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread() { if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 41, "n_pass": [99, 10, 9]}
{"time": "2021-02-24 04:44:23.285323", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){ if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 40, "n_pass": [165, 16, 10]}
{"time": "2021-02-24 04:44:25.113344", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if (mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 39, "n_pass": [167, 17, 11]}
{"time": "2021-02-24 04:44:26.917667", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread == null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 38, "n_pass": [169, 18, 12]}
{"time": "2021-02-24 04:44:28.739134", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread== null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 37, "n_pass": [172, 19, 13]}
{"time": "2021-02-24 04:44:34.208776", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null ) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 36, "n_pass": [175, 22, 14]}
{"time": "2021-02-24 04:44:36.024313", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null) { new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 35, "n_pass": [177, 23, 15]}
{"time": "2021-02-24 04:44:37.840071", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){ new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 34, "n_pass": [179, 24, 16]}
{"time": "2021-02-24 04:44:39.654179", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable, \"Thread\"); mDriverThread; } }", "n_tokens": 33, "n_pass": [181, 25, 17]}
{"time": "2021-02-24 04:44:45.185248", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,\"Thread\"); mDriverThread; } }", "n_tokens": 32, "n_pass": [188, 28, 18]}
{"time": "2021-02-24 04:44:48.912916", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,\"Thread\");mDriverThread; } }", "n_tokens": 31, "n_pass": [194, 30, 19]}
{"time": "2021-02-24 04:44:52.593908", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,\"Thread\");mDriverThread;} }", "n_tokens": 30, "n_pass": [197, 32, 20]}
{"time": "2021-02-24 04:45:06.868630", "score": "0.3774", "loss": "8.9491", "code": "void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,\"Thread\");mDriverThread;}}", "n_tokens": 29, "n_pass": [229, 39, 21]}

Minimal simplified code:
void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,"Thread");mDriverThread;}}

