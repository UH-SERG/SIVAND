
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-util/radeox/src/test/java/org/radeox/test/BaseRenderEngineTest_testParagraphTest.java
method_name = testParagraphTest
method_body = public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance(); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals("Some <b class=\"bold\">Simple</b> Content", engine.render("Some __Simple__ Content", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals("\n <p class=\"paragraph\">Some</p>\n <p class=\"paragraph\"> <b class=\"bold\">Simple</b> Content</p>", engine.render("Some\n\n __Simple__ Content", context)); }
predict, score, loss = testRender, 0.9382248520851135, 18.218639373779297

Trace of simplified code(s):
{"time": "2021-02-23 19:56:12.552959", "score": "0.9405", "loss": "18.2152", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance(); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"Some <b class=\\\"bold\\\">Simple</b> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n <p class=\\\"paragraph\\\">Some</p>\\n <p class=\\\"paragraph\\\"> <b class=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 184, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:56:14.498196", "score": "0.9528", "loss": "17.7852", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class=\\\"bold\\\">Simple</b> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n <p class=\\\"paragraph\\\">Some</p>\\n <p class=\\\"paragraph\\\"> <b class=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 173, "n_pass": [46, 2, 2]}
{"time": "2021-02-23 19:56:16.408177", "score": "0.9557", "loss": "17.9429", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n <p class=\\\"paragraph\\\">Some</p>\\n <p class=\\\"paragraph\\\"> <b class=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 162, "n_pass": [48, 3, 3]}
{"time": "2021-02-23 19:56:18.350335", "score": "0.9599", "loss": "17.963", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\nSome</p>\\n <p class=\\\"paragraph\\\"> <b class=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 150, "n_pass": [53, 4, 4]}
{"time": "2021-02-23 19:56:20.252233", "score": "0.9591", "loss": "16.9997", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n=\\\"paragraph\\\"> <b class=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 138, "n_pass": [54, 5, 5]}
{"time": "2021-02-23 19:56:22.192403", "score": "0.9608", "loss": "18.4283", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n=\\\"bold\\\">Simple</b> Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 126, "n_pass": [55, 6, 6]}
{"time": "2021-02-23 19:56:24.094525", "score": "0.9634", "loss": "18.6333", "code": "public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance();; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 114, "n_pass": [56, 7, 7]}
{"time": "2021-02-23 19:56:25.952777", "score": "0.9483", "loss": "19.0854", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b class> Content\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 103, "n_pass": [61, 8, 8]}
{"time": "2021-02-23 19:56:27.838056", "score": "0.9559", "loss": "19.0355", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n Content</p>\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 98, "n_pass": [91, 9, 9]}
{"time": "2021-02-23 19:56:29.726498", "score": "0.9584", "loss": "18.6975", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\\n\\n __Simple__ Content\", context)); }", "n_tokens": 92, "n_pass": [99, 10, 10]}
{"time": "2021-02-23 19:56:31.637497", "score": "0.9604", "loss": "18.2682", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Somen __Simple__ Content\", context)); }", "n_tokens": 89, "n_pass": [151, 11, 11]}
{"time": "2021-02-23 19:56:33.516613", "score": "0.9584", "loss": "18.6975", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some_Simple__ Content\", context)); }", "n_tokens": 86, "n_pass": [152, 12, 12]}
{"time": "2021-02-23 19:56:35.419636", "score": "0.9551", "loss": "18.3338", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some_ Content\", context)); }", "n_tokens": 83, "n_pass": [153, 13, 13]}
{"time": "2021-02-23 19:56:37.296792", "score": "0.9601", "loss": "18.1952", "code": "public void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 80, "n_pass": [154, 14, 14]}
{"time": "2021-02-23 19:56:39.139203", "score": "0.9601", "loss": "18.1952", "code": "void testParagraphTest() { RenderEngine; assertEquals(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 78, "n_pass": [158, 15, 15]}
{"time": "2021-02-23 19:56:41.448795", "score": "0.9539", "loss": "18.6824", "code": "void testParagraphTest() { RenderEngine(\"Some <b\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 75, "n_pass": [163, 16, 16]}
{"time": "2021-02-23 19:56:43.272012", "score": "0.9456", "loss": "18.8494", "code": "void testParagraphTest() { RenderEngine(\"Some\", engine.render(\"Some __Simple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 72, "n_pass": [165, 17, 17]}
{"time": "2021-02-23 19:56:45.133882", "score": "0.9456", "loss": "18.8494", "code": "void testParagraphTest() { RenderEngine(\"Some\", engine.render(\"SomeSimple__ Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 69, "n_pass": [169, 18, 18]}
{"time": "2021-02-23 19:56:46.988791", "score": "0.9409", "loss": "18.5626", "code": "void testParagraphTest() { RenderEngine(\"Some\", engine.render(\"Some Content\", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 66, "n_pass": [170, 19, 19]}
{"time": "2021-02-23 19:56:48.830182", "score": "0.9392", "loss": "18.272", "code": "void testParagraphTest() { RenderEngine(\"Some\", engine.render(\"Some Content\")); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 63, "n_pass": [172, 20, 20]}
{"time": "2021-02-23 19:56:50.713695", "score": "0.9252", "loss": "17.817", "code": "void testParagraphTest() { RenderEngine(\"Some\", engine.render(\"Some Content\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 60, "n_pass": [174, 21, 21]}
{"time": "2021-02-23 19:56:53.074025", "score": "0.9429", "loss": "17.941", "code": "void testParagraphTest() { RenderEngine(\"Some\", (\"Some Content\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 57, "n_pass": [192, 22, 22]}
{"time": "2021-02-23 19:56:57.500860", "score": "0.9429", "loss": "17.941", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\"Some Content\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 56, "n_pass": [255, 23, 23]}
{"time": "2021-02-23 19:56:59.375087", "score": "0.9537", "loss": "17.5508", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\" Content\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 55, "n_pass": [258, 24, 24]}
{"time": "2021-02-23 19:57:01.233023", "score": "0.9537", "loss": "17.5508", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\"Content\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 54, "n_pass": [259, 25, 25]}
{"time": "2021-02-23 19:57:03.069775", "score": "0.9595", "loss": "17.5035", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\\n\", engine.render(\"Some\", context)); }", "n_tokens": 53, "n_pass": [260, 26, 26]}
{"time": "2021-02-23 19:57:04.924580", "score": "0.9595", "loss": "17.5035", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\", engine.render(\"Some\", context)); }", "n_tokens": 51, "n_pass": [271, 27, 27]}
{"time": "2021-02-23 19:57:06.802459", "score": "0.8178", "loss": "16.6577", "code": "void testParagraphTest() { RenderEngine(\"Some\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 49, "n_pass": [274, 28, 28]}
{"time": "2021-02-23 19:57:09.555250", "score": "0.8178", "loss": "16.6577", "code": "void testParagraphTest(){ RenderEngine(\"Some\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 48, "n_pass": [286, 29, 29]}
{"time": "2021-02-23 19:57:11.369214", "score": "0.8178", "loss": "16.6577", "code": "void testParagraphTest(){RenderEngine(\"Some\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 47, "n_pass": [288, 30, 30]}
{"time": "2021-02-23 19:57:13.223573", "score": "0.8102", "loss": "16.385", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));setRenderEngine(new MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 46, "n_pass": [292, 31, 31]}
{"time": "2021-02-23 19:57:19.395221", "score": "0.7344", "loss": "15.8013", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(new MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 45, "n_pass": [355, 32, 32]}
{"time": "2021-02-23 19:57:21.211921", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));( MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 44, "n_pass": [357, 33, 33]}
{"time": "2021-02-23 19:57:23.007592", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(MockWikiRenderEngine()); assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 43, "n_pass": [358, 34, 34]}
{"time": "2021-02-23 19:57:24.833098", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(MockWikiRenderEngine());assertEquals(\"\", engine(\"Some\", context)); }", "n_tokens": 42, "n_pass": [364, 35, 35]}
{"time": "2021-02-23 19:57:26.672040", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(MockWikiRenderEngine());assertEquals(\"\",engine(\"Some\", context)); }", "n_tokens": 41, "n_pass": [370, 36, 36]}
{"time": "2021-02-23 19:57:30.344648", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(MockWikiRenderEngine());assertEquals(\"\",engine(\"Some\",context)); }", "n_tokens": 40, "n_pass": [377, 38, 37]}
{"time": "2021-02-23 19:57:32.175693", "score": "0.7946", "loss": "15.7338", "code": "void testParagraphTest(){RenderEngine(\"\",(\"\"));(MockWikiRenderEngine());assertEquals(\"\",engine(\"Some\",context));}", "n_tokens": 39, "n_pass": [382, 39, 38]}

Minimal simplified code:
void testParagraphTest(){RenderEngine("",(""));(MockWikiRenderEngine());assertEquals("",engine("Some",context));}

