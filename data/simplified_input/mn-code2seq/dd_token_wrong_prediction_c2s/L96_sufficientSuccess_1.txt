
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/test/java/com/sun/identity/authentication/jaas/LoginContextTest_sufficientSuccess.java
method_name = sufficientSuccess
method_body = @Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }
predict, score, loss = testSetDelegateDelegate, 0.6528676152229309, 27.899551391601562

Trace of simplified code(s):
{"time": "2021-02-24 03:49:02.075564", "score": "0.6554", "loss": "28.6969", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:49:04.021285", "score": "0.7547", "loss": "27.874", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 75, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 03:49:05.910535", "score": "0.7249", "loss": "28.0247", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 69, "n_pass": [36, 3, 3]}
{"time": "2021-02-24 03:49:10.142245", "score": "0.7073", "loss": "28.2538", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 66, "n_pass": [72, 5, 4]}
{"time": "2021-02-24 03:49:12.028917", "score": "0.6762", "loss": "27.7297", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 63, "n_pass": [76, 6, 5]}
{"time": "2021-02-24 03:49:18.053795", "score": "0.6352", "loss": "27.6059", "code": "@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 60, "n_pass": [90, 9, 6]}
{"time": "2021-02-24 03:49:27.522994", "score": "0.6352", "loss": "27.6059", "code": "@Test public void sufficientSuccess() throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin(requiredDelegate, sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 59, "n_pass": [148, 12, 7]}
{"time": "2021-02-24 03:49:31.268492", "score": "0.6304", "loss": "27.0481", "code": "@Test public void sufficientSuccess() throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 57, "n_pass": [156, 14, 8]}
{"time": "2021-02-24 03:49:44.324903", "score": "0.6304", "loss": "27.0481", "code": "@Test  void sufficientSuccess() throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 56, "n_pass": [175, 21, 9]}
{"time": "2021-02-24 03:49:46.178815", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess() throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 55, "n_pass": [176, 22, 10]}
{"time": "2021-02-24 03:49:48.948733", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate, sufficientDelegate); verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 54, "n_pass": [182, 23, 11]}
{"time": "2021-02-24 03:50:09.669370", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate); verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 53, "n_pass": [262, 30, 12]}
{"time": "2021-02-24 03:50:11.568657", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin( sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 52, "n_pass": [266, 31, 13]}
{"time": "2021-02-24 03:50:15.260035", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate); verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 51, "n_pass": [269, 33, 14]}
{"time": "2021-02-24 03:50:18.970814", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 50, "n_pass": [273, 35, 15]}
{"time": "2021-02-24 03:50:20.785455", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 49, "n_pass": [278, 36, 16]}
{"time": "2021-02-24 03:50:22.650322", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 48, "n_pass": [282, 37, 17]}
{"time": "2021-02-24 03:50:24.514441", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate, sufficientDelegate, optionalDelegate); }", "n_tokens": 47, "n_pass": [287, 38, 18]}
{"time": "2021-02-24 03:50:26.353446", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate, optionalDelegate); }", "n_tokens": 46, "n_pass": [290, 39, 19]}
{"time": "2021-02-24 03:50:28.225628", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate,optionalDelegate); }", "n_tokens": 45, "n_pass": [293, 40, 20]}
{"time": "2021-02-24 03:50:30.116962", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{ whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate,optionalDelegate);}", "n_tokens": 44, "n_pass": [297, 41, 21]}
{"time": "2021-02-24 03:50:33.341136", "score": "0.6304", "loss": "27.0481", "code": "@Test void sufficientSuccess()throws LoginException{whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate,optionalDelegate);}", "n_tokens": 43, "n_pass": [311, 42, 22]}

Minimal simplified code:
@Test void sufficientSuccess()throws LoginException{whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate,optionalDelegate);}

