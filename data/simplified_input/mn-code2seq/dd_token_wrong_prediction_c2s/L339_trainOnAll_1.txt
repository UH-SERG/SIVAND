
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/quantifier/src/main/java/edu/illinois/cs/cogcomp/quant/driver/Quantifier_trainOnAll.java
method_name = trainOnAll
method_body = public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + ".lc", modelName + ".lex"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + "/allData.txt", "train"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }
predict, score, loss = train, 0.8442241549491882, 14.18927001953125

Trace of simplified code(s):
{"time": "2021-02-24 00:45:02.344079", "score": "0.8442", "loss": "14.1893", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + \".lc\", modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }", "n_tokens": 103, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:45:04.331069", "score": "0.6311", "loss": "14.4433", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\"); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }", "n_tokens": 97, "n_pass": [48, 2, 2]}
{"time": "2021-02-24 00:45:06.236067", "score": "0.4799", "loss": "14.7597", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }", "n_tokens": 90, "n_pass": [55, 3, 3]}
{"time": "2021-02-24 00:45:10.004472", "score": "0.7483", "loss": "14.1931", "code": "public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 86, "n_pass": [100, 5, 4]}
{"time": "2021-02-24 00:45:12.325647", "score": "0.8306", "loss": "14.0733", "code": "public void trainOnAll() {classifier = new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 83, "n_pass": [109, 6, 5]}
{"time": "2021-02-24 00:45:14.244049", "score": "0.8949", "loss": "13.6464", "code": "public void trainOnAll() { new QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 80, "n_pass": [110, 7, 6]}
{"time": "2021-02-24 00:45:16.145756", "score": "0.951", "loss": "13.1137", "code": "public void trainOnAll() {QuantitiesClassifier(modelName + modelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 77, "n_pass": [111, 8, 7]}
{"time": "2021-02-24 00:45:18.038899", "score": "0.9012", "loss": "13.1899", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 74, "n_pass": [113, 9, 8]}
{"time": "2021-02-24 00:45:19.913660", "score": "0.8346", "loss": "12.8711", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader(dataDir + \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 71, "n_pass": [118, 10, 9]}
{"time": "2021-02-24 00:45:21.778344", "score": "0.8726", "loss": "12.4522", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/allData.txt\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 68, "n_pass": [121, 11, 10]}
{"time": "2021-02-24 00:45:23.662886", "score": "0.8017", "loss": "13.7101", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");new BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 65, "n_pass": [123, 12, 11]}
{"time": "2021-02-24 00:45:29.026186", "score": "0.9638", "loss": "13.5389", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer.train(45); classifier.save(); }", "n_tokens": 63, "n_pass": [190, 13, 12]}
{"time": "2021-02-24 00:45:30.920845", "score": "0.8852", "loss": "13.2444", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); classifier.save(); }", "n_tokens": 61, "n_pass": [194, 14, 13]}
{"time": "2021-02-24 00:45:32.813449", "score": "0.8776", "loss": "13.3565", "code": "public void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 59, "n_pass": [198, 15, 14]}
{"time": "2021-02-24 00:45:34.714998", "score": "0.8776", "loss": "13.3565", "code": " void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 58, "n_pass": [202, 16, 15]}
{"time": "2021-02-24 00:45:36.596346", "score": "0.8776", "loss": "13.3565", "code": "void trainOnAll() {QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 57, "n_pass": [203, 17, 16]}
{"time": "2021-02-24 00:45:39.347886", "score": "0.8776", "loss": "13.3565", "code": "void trainOnAll(){QuantitiesClassifier(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 56, "n_pass": [209, 18, 17]}
{"time": "2021-02-24 00:45:41.189538", "score": "0.7905", "loss": "13.6603", "code": "void trainOnAll(){(modelNamemodelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 55, "n_pass": [211, 19, 18]}
{"time": "2021-02-24 00:45:43.025627", "score": "0.8076", "loss": "13.8551", "code": "void trainOnAll(){(modelName + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 54, "n_pass": [213, 20, 19]}
{"time": "2021-02-24 00:45:44.855662", "score": "0.7504", "loss": "13.8197", "code": "void trainOnAll(){( + \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 53, "n_pass": [214, 21, 20]}
{"time": "2021-02-24 00:45:46.720117", "score": "0.7504", "loss": "13.8197", "code": "void trainOnAll(){(+ \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 52, "n_pass": [215, 22, 21]}
{"time": "2021-02-24 00:45:48.566357", "score": "0.7685", "loss": "13.8415", "code": "void trainOnAll(){( \".lex\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 51, "n_pass": [216, 23, 22]}
{"time": "2021-02-24 00:45:50.436698", "score": "0.8589", "loss": "13.6086", "code": "void trainOnAll(){( \"\"); QuantitiesDataReader= new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 49, "n_pass": [218, 24, 23]}
{"time": "2021-02-24 00:45:52.259048", "score": "0.9401", "loss": "13.9414", "code": "void trainOnAll(){( \"\");  new QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 47, "n_pass": [221, 25, 24]}
{"time": "2021-02-24 00:45:54.098233", "score": "0.9783", "loss": "14.6084", "code": "void trainOnAll(){( \"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer(); trainer(45); save(); }", "n_tokens": 45, "n_pass": [222, 26, 25]}
{"time": "2021-02-24 00:45:55.936541", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){( \"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(45); save(); }", "n_tokens": 43, "n_pass": [232, 27, 26]}
{"time": "2021-02-24 00:46:03.800055", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){( \"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5); save(); }", "n_tokens": 42, "n_pass": [294, 28, 27]}
{"time": "2021-02-24 00:46:05.653690", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){( \"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5);save(); }", "n_tokens": 41, "n_pass": [298, 29, 28]}
{"time": "2021-02-24 00:46:07.525196", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){( \"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 40, "n_pass": [303, 30, 29]}
{"time": "2021-02-24 00:46:10.225290", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){(\"\");  QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 39, "n_pass": [312, 31, 30]}
{"time": "2021-02-24 00:46:12.148177", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){(\"\"); QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 38, "n_pass": [317, 32, 31]}
{"time": "2021-02-24 00:46:13.985529", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){(\"\");QuantitiesDataReader( \"/\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 37, "n_pass": [318, 33, 32]}
{"time": "2021-02-24 00:46:15.821773", "score": "0.9722", "loss": "14.7174", "code": "void trainOnAll(){(\"\");QuantitiesDataReader(\"/\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 36, "n_pass": [321, 34, 33]}
{"time": "2021-02-24 00:46:17.682993", "score": "0.9825", "loss": "14.554", "code": "void trainOnAll(){(\"\");QuantitiesDataReader(\"\", \"train\");BatchTrainer();(5);save();}", "n_tokens": 35, "n_pass": [323, 35, 34]}
{"time": "2021-02-24 00:46:19.528389", "score": "0.9825", "loss": "14.554", "code": "void trainOnAll(){(\"\");QuantitiesDataReader(\"\",\"train\");BatchTrainer();(5);save();}", "n_tokens": 34, "n_pass": [326, 36, 35]}

Minimal simplified code:
void trainOnAll(){("");QuantitiesDataReader("","train");BatchTrainer();(5);save();}

