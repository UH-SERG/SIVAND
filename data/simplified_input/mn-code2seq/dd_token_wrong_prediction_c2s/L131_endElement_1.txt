
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mucommander__mucommander/src/main/java/com/mucommander/xml/XmlWriter_endElement.java
method_name = endElement
method_body = public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print("</"); out.print(name); out.print('>'); println(); if (out.checkError()) throw new IOException(); }
predict, score, loss = close, 0.6892308592796326, 3.9982266426086426

Trace of simplified code(s):
{"time": "2021-02-23 21:29:46.176884", "score": "0.6892", "loss": "3.9982", "code": "public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print(\"</\"); out.print(name); out.print('>'); println(); if (out.checkError()) throw new IOException(); }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:29:49.932230", "score": "0.8145", "loss": "5.4393", "code": "public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print(\"</\");; if (out.checkError()) throw new IOException(); }", "n_tokens": 64, "n_pass": [10, 3, 2]}
{"time": "2021-02-23 21:29:51.803104", "score": "0.7656", "loss": "4.7036", "code": "public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print(\"</\"); throw new IOException(); }", "n_tokens": 53, "n_pass": [20, 4, 3]}
{"time": "2021-02-23 21:29:55.978586", "score": "0.524", "loss": "3.6781", "code": "public void endElement(String name){ offset -= OFFSET_INCREMENT; indent(); out.print(\"</\"); throw new IOException(); }", "n_tokens": 48, "n_pass": [39, 6, 4]}
{"time": "2021-02-23 21:29:57.804365", "score": "0.6563", "loss": "4.862", "code": "public void endElement(String name){ offset -= OFFSET_INCREMENT; out.print(\"</\"); throw new IOException(); }", "n_tokens": 43, "n_pass": [41, 7, 5]}
{"time": "2021-02-23 21:29:59.635614", "score": "0.536", "loss": "3.8873", "code": "public void endElement(String name){ offset -= OFFSET_INCREMENT(\"</\"); throw new IOException(); }", "n_tokens": 38, "n_pass": [42, 8, 6]}
{"time": "2021-02-23 21:30:03.756100", "score": "0.5592", "loss": "4.6512", "code": "public void endElement(String name){ offset -= OFFSET_INCREMENT(\"</\"); throwIOException(); }", "n_tokens": 35, "n_pass": [67, 10, 7]}
{"time": "2021-02-23 21:30:05.585666", "score": "0.5592", "loss": "4.6512", "code": "void endElement(String name){ offset -= OFFSET_INCREMENT(\"</\"); throwIOException(); }", "n_tokens": 33, "n_pass": [70, 11, 8]}
{"time": "2021-02-23 21:30:07.863202", "score": "0.7079", "loss": "4.4455", "code": "void endElement(String name){ offset -= (\"</\"); throwIOException(); }", "n_tokens": 30, "n_pass": [77, 12, 9]}
{"time": "2021-02-23 21:30:10.089274", "score": "0.5432", "loss": "6.9302", "code": "void endElement(String name){ offset (\"</\"); throwIOException(); }", "n_tokens": 27, "n_pass": [88, 13, 10]}
{"time": "2021-02-23 21:30:12.358446", "score": "0.8344", "loss": "6.6207", "code": "void endElement(String name){(\"</\"); throwIOException(); }", "n_tokens": 24, "n_pass": [98, 14, 11]}
{"time": "2021-02-23 21:30:17.251532", "score": "0.7996", "loss": "6.1656", "code": "void endElement(String name){(\"</\");IOException(); }", "n_tokens": 22, "n_pass": [132, 16, 12]}
{"time": "2021-02-23 21:30:23.031487", "score": "0.7996", "loss": "6.1656", "code": "void endElement(String name){(\"</\");IOException();}", "n_tokens": 21, "n_pass": [162, 18, 13]}

Minimal simplified code:
void endElement(String name){("</");IOException();}

