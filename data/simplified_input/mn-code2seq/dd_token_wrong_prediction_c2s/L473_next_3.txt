
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/ql/RecordList_next.java
method_name = next
method_body = @Override public Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe().getLong(readAddress - 8); return record; }
predict, score, loss = getRecord, 0.49410006403923035, 3.158226490020752

Trace of simplified code(s):
{"time": "2021-02-23 19:27:36.226070", "score": "0.4941", "loss": "3.1582", "code": "@Override public Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe().getLong(readAddress - 8); return record; }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:27:38.582219", "score": "0.6574", "loss": "5.3455", "code": "Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe().getLong(readAddress - 8); return record; }", "n_tokens": 42, "n_pass": [20, 2, 2]}
{"time": "2021-02-23 19:27:40.428687", "score": "0.6519", "loss": "5.5972", "code": "Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe(- 8); return record; }", "n_tokens": 36, "n_pass": [24, 3, 3]}
{"time": "2021-02-23 19:27:42.725577", "score": "0.5776", "loss": "5.0593", "code": "Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe(); return record; }", "n_tokens": 33, "n_pass": [43, 4, 4]}
{"time": "2021-02-23 19:27:46.395430", "score": "0.6925", "loss": "6.0775", "code": "Record next() { record.of(readAddress); readAddress .getUnsafe(); return record; }", "n_tokens": 30, "n_pass": [52, 6, 5]}
{"time": "2021-02-23 19:27:48.205675", "score": "0.5599", "loss": "5.6441", "code": "Record next() { record.of(readAddress); readAddress .getUnsafe(); ; }", "n_tokens": 27, "n_pass": [55, 7, 6]}
{"time": "2021-02-23 19:27:51.767943", "score": "0.5599", "loss": "5.6441", "code": "Record next() { record.of(readAddress); readAddress .getUnsafe(); }", "n_tokens": 25, "n_pass": [83, 8, 7]}
{"time": "2021-02-23 19:27:54.927407", "score": "0.5599", "loss": "5.6441", "code": "Record next(){ record.of(readAddress); readAddress .getUnsafe(); }", "n_tokens": 24, "n_pass": [90, 9, 8]}
{"time": "2021-02-23 19:27:56.719483", "score": "0.5599", "loss": "5.6441", "code": "Record next(){record.of(readAddress); readAddress .getUnsafe(); }", "n_tokens": 23, "n_pass": [92, 10, 9]}
{"time": "2021-02-23 19:27:58.529127", "score": "0.6178", "loss": "5.1274", "code": "Record next(){record(readAddress); readAddress .getUnsafe(); }", "n_tokens": 21, "n_pass": [94, 11, 10]}
{"time": "2021-02-23 19:28:07.423869", "score": "0.6178", "loss": "5.1274", "code": "Record next(){record(readAddress);readAddress .getUnsafe(); }", "n_tokens": 20, "n_pass": [124, 14, 11]}
{"time": "2021-02-23 19:28:09.221234", "score": "0.6178", "loss": "5.1274", "code": "Record next(){record(readAddress);readAddress.getUnsafe(); }", "n_tokens": 19, "n_pass": [125, 15, 12]}
{"time": "2021-02-23 19:28:12.867987", "score": "0.6178", "loss": "5.1274", "code": "Record next(){record(readAddress);readAddress.getUnsafe();}", "n_tokens": 18, "n_pass": [131, 17, 13]}

Minimal simplified code:
Record next(){record(readAddress);readAddress.getUnsafe();}

