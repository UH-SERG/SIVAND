
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-postgresql/src/main/java/org/rakam/postgresql/plugin/user/PostgresqlUserModule_setup.java
method_name = setup
method_body = @Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, "store.adapter.postgresql"); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named("store.adapter.postgresql")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named("user.storage.postgresql")).toInstance("postgresql".equals(true)); }
predict, score, loss = configure, 0.984072744846344, 7.490246772766113

Trace of simplified code(s):
{"time": "2021-02-24 03:29:59.069939", "score": "0.9801", "loss": "7.776", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\"); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named(\"store.adapter.postgresql\")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 155, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 03:30:01.049631", "score": "0.982", "loss": "8.586", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 116, "n_pass": [9, 2, 2]}
{"time": "2021-02-24 03:30:04.854394", "score": "0.9894", "loss": "8.1948", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");bind(PostgresqlQueryExecutor.class).in(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 106, "n_pass": [37, 4, 3]}
{"time": "2021-02-24 03:30:06.780707", "score": "0.9872", "loss": "7.6401", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, \"store.adapter.postgresql\");bind(PostgresqlQueryExecutor.class).in(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 96, "n_pass": [40, 5, 4]}
{"time": "2021-02-24 03:30:08.686924", "score": "0.986", "loss": "7.8429", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 87, "n_pass": [47, 6, 5]}
{"time": "2021-02-24 03:30:10.646876", "score": "0.9815", "loss": "7.7207", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 82, "n_pass": [77, 7, 6]}
{"time": "2021-02-24 03:30:12.562272", "score": "0.9708", "loss": "7.6071", "code": "@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 77, "n_pass": [78, 8, 7]}
{"time": "2021-02-24 03:30:14.444537", "score": "0.9262", "loss": "6.1139", "code": " void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 73, "n_pass": [86, 9, 8]}
{"time": "2021-02-24 03:30:16.321651", "score": "0.9265", "loss": "6.1268", "code": " void setup(Binder binder) { JDBCConfigbuildConfigObject(JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 68, "n_pass": [90, 10, 9]}
{"time": "2021-02-24 03:30:18.225368", "score": "0.9208", "loss": "6.2701", "code": " void setup(Binder binder) { (JDBCConfig.class);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 66, "n_pass": [133, 11, 10]}
{"time": "2021-02-24 03:30:20.162761", "score": "0.9279", "loss": "6.2765", "code": " void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).in.to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 64, "n_pass": [135, 12, 11]}
{"time": "2021-02-24 03:30:22.035529", "score": "0.9464", "loss": "6.4699", "code": " void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorage.Scopes.SINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 62, "n_pass": [140, 13, 12]}
{"time": "2021-02-24 03:30:23.925231", "score": "0.9188", "loss": "6.3304", "code": " void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"user.storage.postgresql\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 59, "n_pass": [143, 14, 13]}
{"time": "2021-02-24 03:30:25.739007", "score": "0.9168", "loss": "6.3264", "code": " void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"user.\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 56, "n_pass": [148, 15, 14]}
{"time": "2021-02-24 03:30:31.051126", "score": "0.9199", "loss": "6.3787", "code": " void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 54, "n_pass": [220, 16, 15]}
{"time": "2021-02-24 03:30:32.877007", "score": "0.9199", "loss": "6.3787", "code": "void setup(Binder binder) { (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 53, "n_pass": [230, 17, 16]}
{"time": "2021-02-24 03:30:35.630594", "score": "0.9199", "loss": "6.3787", "code": "void setup(Binder binder){ (JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 52, "n_pass": [239, 18, 17]}
{"time": "2021-02-24 03:30:37.495851", "score": "0.9199", "loss": "6.3787", "code": "void setup(Binder binder){(JDBCConfig);bind(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 51, "n_pass": [241, 19, 18]}
{"time": "2021-02-24 03:30:39.825672", "score": "0.8952", "loss": "5.9181", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor.class).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 50, "n_pass": [246, 20, 19]}
{"time": "2021-02-24 03:30:41.683977", "score": "0.8281", "loss": "5.7076", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutorclass).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 49, "n_pass": [249, 21, 20]}
{"time": "2021-02-24 03:30:43.509014", "score": "0.8496", "loss": "5.8335", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to(AbstractPostgresqlUserStorageSINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 48, "n_pass": [250, 22, 21]}
{"time": "2021-02-24 03:30:45.790669", "score": "0.8877", "loss": "5.729", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to(SINGLETON);annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 47, "n_pass": [255, 23, 22]}
{"time": "2021-02-24 03:30:47.604822", "score": "0.8992", "loss": "5.9996", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();annotatedWith(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 46, "n_pass": [256, 24, 23]}
{"time": "2021-02-24 03:30:49.434706", "score": "0.8545", "loss": "6.4671", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();(Names.named(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 45, "n_pass": [259, 25, 24]}
{"time": "2021-02-24 03:30:51.281437", "score": "0.8495", "loss": "6.0472", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();(Namesnamed(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 44, "n_pass": [262, 26, 25]}
{"time": "2021-02-24 03:30:53.132174", "score": "0.8423", "loss": "6.2839", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();(Names(\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 43, "n_pass": [263, 27, 26]}
{"time": "2021-02-24 03:30:56.804681", "score": "0.7943", "loss": "6.3608", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();((\"\")).toInstance(\"postgresql\".equals(true)); }", "n_tokens": 42, "n_pass": [297, 28, 27]}
{"time": "2021-02-24 03:31:01.318644", "score": "0.779", "loss": "6.076", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();((\"\")).toInstance(\"\".equals(true)); }", "n_tokens": 41, "n_pass": [352, 29, 28]}
{"time": "2021-02-24 03:31:03.206671", "score": "0.7413", "loss": "5.8961", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();((\"\")).toInstance(\"\".equals()); }", "n_tokens": 40, "n_pass": [357, 30, 29]}
{"time": "2021-02-24 03:31:05.041859", "score": "0.7413", "loss": "5.8961", "code": "void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();((\"\")).toInstance(\"\".equals());}", "n_tokens": 39, "n_pass": [361, 31, 30]}

Minimal simplified code:
void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();(("")).toInstance("".equals());}

