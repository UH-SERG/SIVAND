
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/OrderedPropertyStore_put.java
method_name = put
method_body = void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }
predict, score, loss = addKeyValue, 0.5750436782836914, 1.6670658588409424

Trace of simplified code(s):
{"time": "2021-02-23 20:15:41.095469", "score": "0.575", "loss": "1.6671", "code": "void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 97, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 20:15:46.885086", "score": "0.6185", "loss": "1.7291", "code": "void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 91, "n_pass": [56, 4, 2]}
{"time": "2021-02-23 20:15:56.718272", "score": "0.5878", "loss": "1.9659", "code": "void put(String key, String value) { keyValueMap.put(key); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 88, "n_pass": [114, 9, 3]}
{"time": "2021-02-23 20:16:10.948605", "score": "0.5878", "loss": "1.9659", "code": "void put(String key, String value) {keyValueMap.put(key); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 87, "n_pass": [202, 14, 4]}
{"time": "2021-02-23 20:16:16.711881", "score": "0.5878", "loss": "1.9659", "code": "void put(String key, String value) {keyValueMap.put(key);int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 86, "n_pass": [210, 17, 5]}
{"time": "2021-02-23 20:16:22.389680", "score": "0.5878", "loss": "1.9659", "code": "void put(String key, String value) {keyValueMap.put(key);int index= removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 85, "n_pass": [214, 20, 6]}
{"time": "2021-02-23 20:16:30.032292", "score": "0.5913", "loss": "1.5802", "code": "void put(String key, String value) {keyValueMap.put(key);int index= removeFromList(key); if (index != -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList.add(new KeyValue(key, value)); } }", "n_tokens": 83, "n_pass": [229, 24, 7]}
{"time": "2021-02-23 20:16:33.857472", "score": "0.5283", "loss": "1.4293", "code": "void put(String key, String value) {keyValueMap.put(key);int index= removeFromList(key); if (index != -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 81, "n_pass": [236, 26, 8]}
{"time": "2021-02-23 20:16:38.670940", "score": "0.5283", "loss": "1.4293", "code": "void put(String key,String value) {keyValueMap.put(key);int index= removeFromList(key); if (index != -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 80, "n_pass": [253, 28, 9]}
{"time": "2021-02-23 20:16:40.626596", "score": "0.5283", "loss": "1.4293", "code": "void put(String key,String value){keyValueMap.put(key);int index= removeFromList(key); if (index != -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 79, "n_pass": [258, 29, 10]}
{"time": "2021-02-23 20:16:44.423907", "score": "0.4825", "loss": "1.5866", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index != -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 78, "n_pass": [264, 31, 11]}
{"time": "2021-02-23 20:16:50.130450", "score": "0.4873", "loss": "1.4502", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index, KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 76, "n_pass": [276, 34, 12]}
{"time": "2021-02-23 20:17:18.791004", "score": "0.4873", "loss": "1.4502", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key, value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 75, "n_pass": [385, 45, 13]}
{"time": "2021-02-23 20:17:20.725863", "score": "0.4873", "loss": "1.4502", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value)); keyValueList(new KeyValue(key, value)); } }", "n_tokens": 74, "n_pass": [389, 46, 14]}
{"time": "2021-02-23 20:17:22.617934", "score": "0.4873", "loss": "1.4502", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(new KeyValue(key, value)); } }", "n_tokens": 73, "n_pass": [394, 47, 15]}
{"time": "2021-02-23 20:17:28.426590", "score": "0.5132", "loss": "1.6586", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key, value)); } }", "n_tokens": 72, "n_pass": [398, 50, 16]}
{"time": "2021-02-23 20:17:30.369543", "score": "0.5132", "loss": "1.6586", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value)); } }", "n_tokens": 71, "n_pass": [403, 51, 17]}
{"time": "2021-02-23 20:17:32.280841", "score": "0.5132", "loss": "1.6586", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));} }", "n_tokens": 70, "n_pass": [408, 52, 18]}
{"time": "2021-02-23 20:17:34.186669", "score": "0.5132", "loss": "1.6586", "code": "void put(String key,String value){keyValueMap.put();int index= removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 69, "n_pass": [410, 53, 19]}
{"time": "2021-02-23 20:17:42.770706", "score": "0.5132", "loss": "1.6586", "code": "void put(String key,String value){keyValueMap.put();int index=removeFromList(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 68, "n_pass": [435, 57, 20]}
{"time": "2021-02-23 20:17:44.663766", "score": "0.4754", "loss": "2.1074", "code": "void put(String key,String value){keyValueMap.put();int index=(key); if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 67, "n_pass": [436, 58, 21]}
{"time": "2021-02-23 20:17:46.596819", "score": "0.4754", "loss": "2.1074", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if (index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 66, "n_pass": [441, 59, 22]}
{"time": "2021-02-23 20:17:48.535676", "score": "0.4754", "loss": "2.1074", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index= -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 65, "n_pass": [443, 60, 23]}
{"time": "2021-02-23 20:17:50.427189", "score": "0.5163", "loss": "2.3937", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index -1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 64, "n_pass": [446, 61, 24]}
{"time": "2021-02-23 20:17:52.282046", "score": "0.5163", "loss": "2.3937", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index-1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 63, "n_pass": [447, 62, 25]}
{"time": "2021-02-23 20:17:54.139014", "score": "0.4614", "loss": "1.8427", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index1) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 62, "n_pass": [448, 63, 26]}
{"time": "2021-02-23 20:17:56.050220", "score": "0.4614", "loss": "1.8427", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index) { keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 61, "n_pass": [449, 64, 27]}
{"time": "2021-02-23 20:17:58.019157", "score": "0.4614", "loss": "1.8427", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){ keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 60, "n_pass": [451, 65, 28]}
{"time": "2021-02-23 20:17:59.944629", "score": "0.4614", "loss": "1.8427", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(index,KeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 59, "n_pass": [453, 66, 29]}
{"time": "2021-02-23 20:18:03.698503", "score": "0.4315", "loss": "1.9147", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(indexKeyValue(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 58, "n_pass": [459, 68, 30]}
{"time": "2021-02-23 20:18:05.579881", "score": "0.4327", "loss": "1.7918", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(index(key,value));keyValueList(newKeyValue(key,value));}}", "n_tokens": 57, "n_pass": [460, 69, 31]}
{"time": "2021-02-23 20:18:07.451751", "score": "0.4114", "loss": "2.1476", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key,value));}}", "n_tokens": 56, "n_pass": [463, 70, 32]}
{"time": "2021-02-23 20:18:15.039389", "score": "0.5944", "loss": "2.3472", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(keyvalue));}}", "n_tokens": 55, "n_pass": [474, 74, 33]}
{"time": "2021-02-23 20:18:16.916200", "score": "0.5862", "loss": "2.2784", "code": "void put(String key,String value){keyValueMap.put();int index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 54, "n_pass": [475, 75, 34]}
{"time": "2021-02-23 20:18:19.743268", "score": "0.545", "loss": "1.7058", "code": "void put(String key,String value){keyValueMapput();int index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 53, "n_pass": [495, 76, 35]}
{"time": "2021-02-23 20:18:21.608548", "score": "0.5518", "loss": "2.1117", "code": "void put(String key,String value){keyValueMap();int index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 52, "n_pass": [496, 77, 36]}
{"time": "2021-02-23 20:18:23.475747", "score": "0.5156", "loss": "2.5879", "code": "void put(String key,String value){keyValueMap(); index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 51, "n_pass": [500, 78, 37]}
{"time": "2021-02-23 20:18:25.341228", "score": "0.5156", "loss": "2.5879", "code": "void put(String key,String value){keyValueMap();index=(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 50, "n_pass": [501, 79, 38]}
{"time": "2021-02-23 20:18:27.226790", "score": "0.5774", "loss": "1.6781", "code": "void put(String key,String value){keyValueMap();index(key);if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 49, "n_pass": [503, 80, 39]}
{"time": "2021-02-23 20:18:29.061718", "score": "0.5648", "loss": "2.173", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add(index(keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 48, "n_pass": [505, 81, 40]}
{"time": "2021-02-23 20:18:32.766320", "score": "0.5535", "loss": "2.0032", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((keyvalue));keyValueList(newKeyValue(key));}}", "n_tokens": 47, "n_pass": [517, 83, 41]}
{"time": "2021-02-23 20:18:34.633817", "score": "0.5198", "loss": "1.9822", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));keyValueList(newKeyValue(key));}}", "n_tokens": 46, "n_pass": [519, 84, 42]}
{"time": "2021-02-23 20:18:36.497792", "score": "0.5148", "loss": "1.9321", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));(newKeyValue(key));}}", "n_tokens": 45, "n_pass": [524, 85, 43]}
{"time": "2021-02-23 20:18:38.354115", "score": "0.5382", "loss": "1.5044", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));(KeyValue(key));}}", "n_tokens": 44, "n_pass": [526, 86, 44]}
{"time": "2021-02-23 20:18:40.191668", "score": "0.5131", "loss": "1.8217", "code": "void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));((key));}}", "n_tokens": 43, "n_pass": [527, 87, 45]}

Minimal simplified code:
void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));((key));}}

