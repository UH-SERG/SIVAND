
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Treeptik__cloudunit/cu-core/src/main/java/fr/treeptik/cloudunit/utils/CheckUtils_validateInputSizeMax.java
method_name = validateInputSizeMax
method_body = public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + " : " + field); } }
predict, score, loss = check, 0.7345589995384216, 19.056076049804688

Trace of simplified code(s):
{"time": "2021-02-24 00:18:53.012333", "score": "0.7346", "loss": "19.0561", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + \" : \" + field); } }", "n_tokens": 120, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:18:58.802893", "score": "0.721", "loss": "18.5611", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + \" : \" + field); } }", "n_tokens": 113, "n_pass": [51, 4, 2]}
{"time": "2021-02-24 00:19:06.540757", "score": "0.6294", "loss": "18.287", "code": "public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 109, "n_pass": [107, 8, 3]}
{"time": "2021-02-24 00:19:08.475228", "score": "0.6294", "loss": "18.287", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 106, "n_pass": [112, 9, 4]}
{"time": "2021-02-24 00:19:14.643079", "score": "0.6352", "loss": "18.5228", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 102, "n_pass": [125, 12, 5]}
{"time": "2021-02-24 00:19:18.913489", "score": "0.6247", "loss": "18.5668", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 98, "n_pass": [150, 14, 6]}
{"time": "2021-02-24 00:19:35.467494", "score": "0.4666", "loss": "20.5765", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource.getMessage(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 96, "n_pass": [242, 22, 7]}
{"time": "2021-02-24 00:19:37.391370", "score": "0.4376", "loss": "21.2477", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(message, null, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 94, "n_pass": [245, 23, 8]}
{"time": "2021-02-24 00:19:39.261959", "score": "0.4927", "loss": "21.0958", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(messagenull, Locale.ENGLISH); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 92, "n_pass": [247, 24, 9]}
{"time": "2021-02-24 00:19:41.156483", "score": "0.4539", "loss": "22.122", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(messagenull, Locale); throw(messageTranslated + \" : \" + field); } }", "n_tokens": 90, "n_pass": [250, 25, 10]}
{"time": "2021-02-24 00:19:43.059688", "score": "0.2378", "loss": "23.3913", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" : \" + field); } }", "n_tokens": 88, "n_pass": [252, 26, 11]}
{"time": "2021-02-24 00:19:44.955502", "score": "0.2414", "loss": "23.444", "code": " void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 86, "n_pass": [256, 27, 12]}
{"time": "2021-02-24 00:19:46.837697", "score": "0.2414", "loss": "23.444", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldnull || field.trim || field.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 85, "n_pass": [263, 28, 13]}
{"time": "2021-02-24 00:19:49.621687", "score": "0.3189", "loss": "22.7217", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field|| field.trim || field.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 83, "n_pass": [281, 29, 14]}
{"time": "2021-02-24 00:19:53.365198", "score": "0.353", "loss": "22.6835", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field|| field.trim| field.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 81, "n_pass": [285, 31, 15]}
{"time": "2021-02-24 00:19:55.243086", "score": "0.3098", "loss": "22.171", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field|| field.trimfield.length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 79, "n_pass": [286, 32, 16]}
{"time": "2021-02-24 00:19:57.123627", "score": "0.2953", "loss": "22.9834", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field|| field.trimlength() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 77, "n_pass": [287, 33, 17]}
{"time": "2021-02-24 00:19:59.936999", "score": "0.309", "loss": "23.0332", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field|| fieldlength() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 75, "n_pass": [328, 34, 18]}
{"time": "2021-02-24 00:20:02.750458", "score": "0.2896", "loss": "22.9503", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field||length() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 73, "n_pass": [368, 35, 19]}
{"time": "2021-02-24 00:20:05.566581", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength() > size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 71, "n_pass": [407, 36, 20]}
{"time": "2021-02-24 00:20:19.703008", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()> size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 70, "n_pass": [513, 37, 21]}
{"time": "2021-02-24 00:20:21.569833", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size) { String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 69, "n_pass": [515, 38, 22]}
{"time": "2021-02-24 00:20:23.462517", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){ String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 68, "n_pass": [518, 39, 23]}
{"time": "2021-02-24 00:20:25.377118", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String = messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 67, "n_pass": [520, 40, 24]}
{"time": "2021-02-24 00:20:27.258275", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String= messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 66, "n_pass": [522, 41, 25]}
{"time": "2021-02-24 00:20:29.119268", "score": "0.2616", "loss": "23.1965", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(messagenull, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 65, "n_pass": [524, 42, 26]}
{"time": "2021-02-24 00:20:31.025021", "score": "0.3249", "loss": "22.8676", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null, Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 64, "n_pass": [527, 43, 27]}
{"time": "2021-02-24 00:20:32.886886", "score": "0.3249", "loss": "22.8676", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(messageTranslated + \" \" + field); } }", "n_tokens": 63, "n_pass": [530, 44, 28]}
{"time": "2021-02-24 00:20:34.783276", "score": "0.368", "loss": "23.7276", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);( + \" \" + field); } }", "n_tokens": 62, "n_pass": [535, 45, 29]}
{"time": "2021-02-24 00:20:36.660709", "score": "0.368", "loss": "23.7276", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(+ \" \" + field); } }", "n_tokens": 61, "n_pass": [536, 46, 30]}
{"time": "2021-02-24 00:20:38.521282", "score": "0.2946", "loss": "24.2084", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);( \" \" + field); } }", "n_tokens": 60, "n_pass": [537, 47, 31]}
{"time": "2021-02-24 00:20:40.411491", "score": "0.2946", "loss": "24.2084", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\" \" + field); } }", "n_tokens": 59, "n_pass": [538, 48, 32]}
{"time": "2021-02-24 00:20:42.333905", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\" + field); } }", "n_tokens": 58, "n_pass": [540, 49, 33]}
{"time": "2021-02-24 00:20:44.201308", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+ field); } }", "n_tokens": 57, "n_pass": [542, 50, 34]}
{"time": "2021-02-24 00:20:46.095087", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field); } }", "n_tokens": 56, "n_pass": [544, 51, 35]}
{"time": "2021-02-24 00:20:47.975261", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);} }", "n_tokens": 55, "n_pass": [548, 52, 36]}
{"time": "2021-02-24 00:20:49.877300", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field, String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 54, "n_pass": [550, 53, 37]}
{"time": "2021-02-24 00:20:52.626389", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message, int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 53, "n_pass": [560, 54, 38]}
{"time": "2021-02-24 00:20:54.515616", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message,int size) throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 52, "n_pass": [565, 55, 39]}
{"time": "2021-02-24 00:20:56.387067", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException { if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 51, "n_pass": [570, 56, 40]}
{"time": "2021-02-24 00:20:58.295901", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{ if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 50, "n_pass": [574, 57, 41]}
{"time": "2021-02-24 00:21:00.166015", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if (fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 49, "n_pass": [576, 58, 42]}
{"time": "2021-02-24 00:21:02.022313", "score": "0.3124", "loss": "24.1971", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(fieldlength()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 48, "n_pass": [578, 59, 43]}
{"time": "2021-02-24 00:21:03.910251", "score": "0.3153", "loss": "23.8267", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String=messageSource(null,Locale);(\"\"+field);}}", "n_tokens": 47, "n_pass": [580, 60, 44]}
{"time": "2021-02-24 00:21:05.803147", "score": "0.526", "loss": "24.6941", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){StringmessageSource(null,Locale);(\"\"+field);}}", "n_tokens": 46, "n_pass": [589, 61, 45]}
{"time": "2021-02-24 00:21:07.675433", "score": "0.5191", "loss": "25.9024", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String(null,Locale);(\"\"+field);}}", "n_tokens": 45, "n_pass": [590, 62, 46]}
{"time": "2021-02-24 00:21:09.541865", "score": "0.6459", "loss": "25.3245", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String(nullLocale);(\"\"+field);}}", "n_tokens": 44, "n_pass": [593, 63, 47]}
{"time": "2021-02-24 00:21:11.384224", "score": "0.5491", "loss": "25.036", "code": "void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String(null);(\"\"+field);}}", "n_tokens": 43, "n_pass": [594, 64, 48]}

Minimal simplified code:
void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String(null);(""+field);}}

