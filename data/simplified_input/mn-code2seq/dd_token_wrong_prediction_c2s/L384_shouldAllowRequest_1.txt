
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ouya__ouya-sdk-examples/Cordova/InAppPurchases/plugins/cordova-plugin-whitelist/src/android/WhitelistPlugin_shouldAllowRequest.java
method_name = shouldAllowRequest
method_body = @Override public Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { return true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; }
predict, score, loss = isValidUrl, 0.5912240147590637, 11.767749786376953

Trace of simplified code(s):
{"time": "2021-02-23 18:45:17.037341", "score": "0.5912", "loss": "11.7677", "code": "@Override public Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { return true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; }", "n_tokens": 67, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 18:45:26.904624", "score": "0.5912", "loss": "11.7677", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { return true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; }", "n_tokens": 65, "n_pass": [93, 6, 2]}
{"time": "2021-02-23 18:45:35.415828", "score": "0.5846", "loss": "12.2539", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; }", "n_tokens": 63, "n_pass": [109, 10, 3]}
{"time": "2021-02-23 18:45:37.245139", "score": "0.5824", "loss": "11.8956", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; }", "n_tokens": 61, "n_pass": [110, 11, 4]}
{"time": "2021-02-23 18:45:40.952714", "score": "0.5302", "loss": "12.572", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) { true; } return null; }", "n_tokens": 59, "n_pass": [119, 13, 5]}
{"time": "2021-02-23 18:45:42.768378", "score": "0.5678", "loss": "12.1678", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 57, "n_pass": [120, 14, 6]}
{"time": "2021-02-23 18:45:49.185819", "score": "0.5768", "loss": "11.5364", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean == shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 55, "n_pass": [133, 17, 7]}
{"time": "2021-02-23 18:46:08.472927", "score": "0.5768", "loss": "11.5364", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean== shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 54, "n_pass": [212, 23, 8]}
{"time": "2021-02-23 18:46:12.145006", "score": "0.5768", "loss": "11.5364", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==shouldAllowNavigation(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 53, "n_pass": [214, 25, 9]}
{"time": "2021-02-23 18:46:14.001144", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)) {  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 52, "n_pass": [215, 26, 10]}
{"time": "2021-02-23 18:46:15.856679", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){  } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 51, "n_pass": [220, 27, 11]}
{"time": "2021-02-23 18:46:17.702820", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){ } if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 50, "n_pass": [222, 28, 12]}
{"time": "2021-02-23 18:46:19.519570", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){} if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 49, "n_pass": [223, 29, 13]}
{"time": "2021-02-23 18:46:21.333918", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if (allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 48, "n_pass": [225, 30, 14]}
{"time": "2021-02-23 18:46:23.168484", "score": "0.542", "loss": "15.0016", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequests.isUrlWhiteListed(url)) {  } return null; }", "n_tokens": 47, "n_pass": [227, 31, 15]}
{"time": "2021-02-23 18:46:24.991331", "score": "0.4933", "loss": "16.6992", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed(url)) {  } return null; }", "n_tokens": 46, "n_pass": [230, 32, 16]}
{"time": "2021-02-23 18:46:28.676921", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()) {  } return null; }", "n_tokens": 45, "n_pass": [233, 34, 17]}
{"time": "2021-02-23 18:46:30.480180", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){  } return null; }", "n_tokens": 44, "n_pass": [236, 35, 18]}
{"time": "2021-02-23 18:46:32.302346", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){ } return null; }", "n_tokens": 43, "n_pass": [238, 36, 19]}
{"time": "2021-02-23 18:46:34.115220", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){} return null; }", "n_tokens": 42, "n_pass": [239, 37, 20]}
{"time": "2021-02-23 18:46:35.975970", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url) { if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){}return null; }", "n_tokens": 41, "n_pass": [241, 38, 21]}
{"time": "2021-02-23 18:46:41.903119", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url){ if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){}return null; }", "n_tokens": 40, "n_pass": [256, 40, 22]}
{"time": "2021-02-23 18:46:43.738302", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url){if (Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){}return null; }", "n_tokens": 39, "n_pass": [258, 41, 23]}
{"time": "2021-02-23 18:46:45.596650", "score": "0.4743", "loss": "16.354", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean==(url)){}if(allowedRequestsisUrlWhiteListed()){}return null; }", "n_tokens": 38, "n_pass": [260, 42, 24]}
{"time": "2021-02-23 18:46:47.486002", "score": "0.4024", "loss": "16.5501", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}return null; }", "n_tokens": 37, "n_pass": [263, 43, 25]}
{"time": "2021-02-23 18:47:03.846441", "score": "0.3941", "loss": "15.3605", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}return ; }", "n_tokens": 36, "n_pass": [306, 50, 26]}
{"time": "2021-02-23 18:47:05.662747", "score": "0.3941", "loss": "15.3605", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}return ;}", "n_tokens": 35, "n_pass": [307, 51, 27]}
{"time": "2021-02-23 18:47:15.340486", "score": "0.3941", "loss": "15.3605", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){} ;}", "n_tokens": 34, "n_pass": [340, 55, 28]}
{"time": "2021-02-23 18:47:17.179272", "score": "0.3941", "loss": "15.3605", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){};}", "n_tokens": 33, "n_pass": [341, 56, 29]}
{"time": "2021-02-23 18:47:19.022379", "score": "0.3941", "loss": "15.3605", "code": "@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}}", "n_tokens": 32, "n_pass": [342, 57, 30]}

Minimal simplified code:
@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}}

