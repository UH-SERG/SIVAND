
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qqchenjian318__VideoEditor-For-Android/app/src/main/java/com/example/cj/videoeditor/gpufilter/filter/MagicFreudFilter_onInputSizeChanged.java
method_name = onInputSizeChanged
method_body = public void onInputSizeChanged(final int width, final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() { @Override public void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }
predict, score, loss = onInputChanged, 0.6824019551277161, 10.897442817687988

Trace of simplified code(s):
{"time": "2021-02-24 00:00:44.007552", "score": "0.6824", "loss": "10.8974", "code": "public void onInputSizeChanged(final int width, final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() { @Override public void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }", "n_tokens": 101, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 00:00:47.843512", "score": "0.64", "loss": "12.138", "code": "public void onInputSizeChanged( final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() { @Override public void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }", "n_tokens": 95, "n_pass": [45, 3, 2]}
{"time": "2021-02-24 00:00:51.746586", "score": "0.7632", "loss": "12.5702", "code": "public void onInputSizeChanged( final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() {void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }", "n_tokens": 89, "n_pass": [51, 5, 3]}
{"time": "2021-02-24 00:00:57.545318", "score": "0.682", "loss": "10.7229", "code": "public void onInputSizeChanged( final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() {void run() { GLESglUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }", "n_tokens": 86, "n_pass": [97, 8, 4]}
{"time": "2021-02-24 00:00:59.482400", "score": "0.7134", "loss": "11.1019", "code": "public void onInputSizeChanged( final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }", "n_tokens": 83, "n_pass": [98, 9, 5]}
{"time": "2021-02-24 00:01:03.322917", "score": "0.7047", "loss": "11.4058", "code": "public void onInputSizeChanged( final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 79, "n_pass": [106, 11, 6]}
{"time": "2021-02-24 00:01:05.672859", "score": "0.7047", "loss": "11.4058", "code": "public void onInputSizeChanged(int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 76, "n_pass": [112, 12, 7]}
{"time": "2021-02-24 00:01:11.402611", "score": "0.6694", "loss": "11.8729", "code": "public void onInputSizeChanged(int height) { super.onInputSizeChanged(width); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 73, "n_pass": [117, 15, 8]}
{"time": "2021-02-24 00:01:22.483406", "score": "0.6694", "loss": "11.8729", "code": "public void onInputSizeChanged(int height) {super.onInputSizeChanged(width); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 72, "n_pass": [187, 19, 9]}
{"time": "2021-02-24 00:01:26.207674", "score": "0.7009", "loss": "10.9349", "code": "public void onInputSizeChanged(int height) {super.onInputSizeChanged(); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 71, "n_pass": [192, 21, 10]}
{"time": "2021-02-24 00:01:33.789379", "score": "0.7009", "loss": "10.9349", "code": " void onInputSizeChanged(int height) {super.onInputSizeChanged(); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 70, "n_pass": [221, 25, 11]}
{"time": "2021-02-24 00:01:35.681264", "score": "0.7009", "loss": "10.9349", "code": "void onInputSizeChanged(int height) {super.onInputSizeChanged(); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 69, "n_pass": [222, 26, 12]}
{"time": "2021-02-24 00:01:38.458468", "score": "0.7009", "loss": "10.9349", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged(); runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 68, "n_pass": [231, 27, 13]}
{"time": "2021-02-24 00:01:56.169762", "score": "0.7009", "loss": "10.9349", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable() {void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 67, "n_pass": [328, 32, 14]}
{"time": "2021-02-24 00:01:59.977392", "score": "0.7009", "loss": "10.9349", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){void run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 66, "n_pass": [336, 34, 15]}
{"time": "2021-02-24 00:02:01.858346", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){ run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 65, "n_pass": [338, 35, 16]}
{"time": "2021-02-24 00:02:03.752880", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run() { GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 64, "n_pass": [339, 36, 17]}
{"time": "2021-02-24 00:02:05.624551", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){ GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 63, "n_pass": [343, 37, 18]}
{"time": "2021-02-24 00:02:07.515257", "score": "0.6211", "loss": "13.1351", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 62, "n_pass": [345, 38, 19]}
{"time": "2021-02-24 00:02:09.411835", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 61, "n_pass": [350, 39, 20]}
{"time": "2021-02-24 00:02:11.308011", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width); GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 60, "n_pass": [354, 40, 21]}
{"time": "2021-02-24 00:02:13.246171", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES20.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 59, "n_pass": [358, 41, 22]}
{"time": "2021-02-24 00:02:15.119073", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES0.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 58, "n_pass": [360, 42, 23]}
{"time": "2021-02-24 00:02:17.027894", "score": "0.6211", "loss": "13.135", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES.glUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 57, "n_pass": [361, 43, 24]}
{"time": "2021-02-24 00:02:18.914701", "score": "0.7926", "loss": "12.3136", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLESglUniform1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 56, "n_pass": [362, 44, 25]}
{"time": "2021-02-24 00:02:20.796881", "score": "0.7896", "loss": "12.5064", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES1f(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 55, "n_pass": [363, 45, 26]}
{"time": "2021-02-24 00:02:22.674163", "score": "0.7185", "loss": "13.107", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLESf(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 54, "n_pass": [364, 46, 27]}
{"time": "2021-02-24 00:02:24.569548", "score": "0.7889", "loss": "12.3339", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation, height); } }); }", "n_tokens": 53, "n_pass": [365, 47, 28]}
{"time": "2021-02-24 00:02:26.456152", "score": "0.7889", "loss": "12.3339", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation,height); } }); }", "n_tokens": 52, "n_pass": [369, 48, 29]}
{"time": "2021-02-24 00:02:28.374649", "score": "0.7889", "loss": "12.3339", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation,height);} }); }", "n_tokens": 51, "n_pass": [373, 49, 30]}
{"time": "2021-02-24 00:02:30.250127", "score": "0.7889", "loss": "12.3339", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation,height);}}); }", "n_tokens": 50, "n_pass": [375, 50, 31]}
{"time": "2021-02-24 00:02:32.135703", "score": "0.7889", "loss": "12.3339", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation,height);}});}", "n_tokens": 49, "n_pass": [379, 51, 32]}
{"time": "2021-02-24 00:02:38.842467", "score": "0.7546", "loss": "12.3149", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocationheight);}});}", "n_tokens": 48, "n_pass": [421, 54, 33]}
{"time": "2021-02-24 00:02:40.719625", "score": "0.748", "loss": "12.9993", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);GLES(mTexelHeightUniformLocation);}});}", "n_tokens": 47, "n_pass": [422, 55, 34]}
{"time": "2021-02-24 00:02:47.274627", "score": "0.7629", "loss": "12.1113", "code": "void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);(mTexelHeightUniformLocation);}});}", "n_tokens": 46, "n_pass": [467, 58, 35]}

Minimal simplified code:
void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);(mTexelHeightUniformLocation);}});}

