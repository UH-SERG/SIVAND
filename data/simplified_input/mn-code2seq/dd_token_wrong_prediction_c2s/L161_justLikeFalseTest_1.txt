
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/morphology/src/test/java/zemberek/morphology/analysis/NounDerivationTest_justLikeFalseTest.java
method_name = justLikeFalseTest
method_body = @Test public void justLikeFalseTest() { AnalysisTester tester = getTester("meyve"); tester.expectFalse("meyvemsi", matchesTailLex("P1sg + JustLike + Adj")); tester.expectFalse("meyvesi", matchesTailLex("A3sg + JustLike + Adj")); }
predict, score, loss = lex, 0.5668482780456543, 30.217323303222656

Trace of simplified code(s):
{"time": "2021-02-24 05:46:21.263864", "score": "0.5668", "loss": "30.2173", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(\"meyve\"); tester.expectFalse(\"meyvemsi\", matchesTailLex(\"P1sg + JustLike + Adj\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg + JustLike + Adj\")); }", "n_tokens": 84, "n_pass": [1, 1, 1]}
{"time": "2021-02-24 05:46:31.202585", "score": "0.5416", "loss": "27.575", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(\"meyve\"); tester.expectFalse(\"meyvemsi\", matchesTailLex(\"PJustLike + Adj\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg + JustLike + Adj\")); }", "n_tokens": 79, "n_pass": [52, 6, 2]}
{"time": "2021-02-24 05:46:33.075003", "score": "0.6641", "loss": "31.0338", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(\"meyve\"); tester.expectFalse(\"meyvemsi\", matchesTailLex(\"P\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg + JustLike + Adj\")); }", "n_tokens": 74, "n_pass": [53, 7, 3]}
{"time": "2021-02-24 05:46:34.962675", "score": "0.5411", "loss": "32.0697", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(\"meyve\"); tester.expectFalse(\"meyvemsi\", matchesTailLex(\"P\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg +\")); }", "n_tokens": 68, "n_pass": [58, 8, 4]}
{"time": "2021-02-24 05:46:40.544967", "score": "0.4772", "loss": "32.0117", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester; tester.expectFalse(\"meyvemsi\", matchesTailLex(\"P\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg +\")); }", "n_tokens": 63, "n_pass": [64, 11, 5]}
{"time": "2021-02-24 05:46:49.930292", "score": "0.4796", "loss": "32.0989", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester;expectFalse(\"meyvemsi\", matchesTailLex(\"P\")); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg +\")); }", "n_tokens": 60, "n_pass": [103, 16, 6]}
{"time": "2021-02-24 05:46:51.823208", "score": "0.7098", "loss": "32.3689", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester;expectFalse(\"meyvemsi\", matchesTailLex()); tester.expectFalse(\"meyvesi\", matchesTailLex(\"A3sg +\")); }", "n_tokens": 57, "n_pass": [107, 17, 7]}
{"time": "2021-02-24 05:46:53.691415", "score": "0.4707", "loss": "31.6874", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester;expectFalse(\"meyvemsi\", matchesTailLex());expectFalse(\"meyvesi\", matchesTailLex(\"A3sg +\")); }", "n_tokens": 54, "n_pass": [109, 18, 8]}
{"time": "2021-02-24 05:46:55.563813", "score": "0.5943", "loss": "31.9491", "code": "@Test public void justLikeFalseTest() { AnalysisTester tester = getTester;expectFalse(\"meyvemsi\", matchesTailLex());expectFalse(\"meyvesi\", matchesTailLex(\"A3\")); }", "n_tokens": 51, "n_pass": [114, 19, 9]}
{"time": "2021-02-24 05:46:59.298685", "score": "0.5943", "loss": "31.9491", "code": "@Test void justLikeFalseTest() { AnalysisTester tester = getTester;expectFalse(\"meyvemsi\", matchesTailLex());expectFalse(\"meyvesi\", matchesTailLex(\"A3\")); }", "n_tokens": 49, "n_pass": [118, 21, 10]}
{"time": "2021-02-24 05:47:05.282325", "score": "0.8407", "loss": "31.7507", "code": "@Test void justLikeFalseTest() { AnalysisTester tester =expectFalse(\"meyvemsi\", matchesTailLex());expectFalse(\"meyvesi\", matchesTailLex(\"A3\")); }", "n_tokens": 46, "n_pass": [126, 24, 11]}
{"time": "2021-02-24 05:47:18.038776", "score": "0.8407", "loss": "31.7507", "code": "@Test void justLikeFalseTest() { AnalysisTester tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\", matchesTailLex(\"A3\")); }", "n_tokens": 45, "n_pass": [187, 29, 12]}
{"time": "2021-02-24 05:47:19.905501", "score": "0.9255", "loss": "33.8107", "code": "@Test void justLikeFalseTest() { AnalysisTester tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 43, "n_pass": [195, 30, 13]}
{"time": "2021-02-24 05:47:24.964948", "score": "0.9255", "loss": "33.8107", "code": "@Test void justLikeFalseTest(){ AnalysisTester tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 42, "n_pass": [209, 32, 14]}
{"time": "2021-02-24 05:47:26.844828", "score": "0.9255", "loss": "33.8107", "code": "@Test void justLikeFalseTest(){AnalysisTester tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 41, "n_pass": [211, 33, 15]}
{"time": "2021-02-24 05:47:28.677386", "score": "0.4846", "loss": "31.7536", "code": "@Test void justLikeFalseTest(){ tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 40, "n_pass": [212, 34, 16]}
{"time": "2021-02-24 05:47:30.533168", "score": "0.4846", "loss": "31.7536", "code": "@Test void justLikeFalseTest(){tester =expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 39, "n_pass": [213, 35, 17]}
{"time": "2021-02-24 05:47:32.400442", "score": "0.4846", "loss": "31.7536", "code": "@Test void justLikeFalseTest(){tester=expectFalse(\"meyvemsi\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 38, "n_pass": [215, 36, 18]}
{"time": "2021-02-24 05:47:36.113530", "score": "0.5021", "loss": "31.6847", "code": "@Test void justLikeFalseTest(){tester=expectFalse(\"\",matchesTailLex());expectFalse(\"meyvesi\",(\"A3\")); }", "n_tokens": 37, "n_pass": [220, 38, 19]}
{"time": "2021-02-24 05:47:47.988950", "score": "0.5021", "loss": "31.6847", "code": "@Test void justLikeFalseTest(){tester=expectFalse(\"\",matchesTailLex());expectFalse(\"meyvesi\",(\"A\")); }", "n_tokens": 36, "n_pass": [278, 43, 20]}
{"time": "2021-02-24 05:47:49.851028", "score": "0.5021", "loss": "31.6847", "code": "@Test void justLikeFalseTest(){tester=expectFalse(\"\",matchesTailLex());expectFalse(\"meyvesi\",(\"A\"));}", "n_tokens": 35, "n_pass": [283, 44, 21]}

Minimal simplified code:
@Test void justLikeFalseTest(){tester=expectFalse("",matchesTailLex());expectFalse("meyvesi",("A"));}

