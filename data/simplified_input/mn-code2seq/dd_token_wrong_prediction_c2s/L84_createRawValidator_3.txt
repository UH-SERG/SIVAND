
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-liberty-schema/src/main/java/com/sun/identity/liberty/ws/common/jaxb/ps/impl/EncryptableNameIdentifierTypeImpl_createRawValidator.java
method_name = createRawValidator
method_body = public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su" + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra" + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi" + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b" + "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv." + "grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data" + "type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq" + "\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun." + "msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*co" + "m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s" + "un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d" + "atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava" + "/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da" + "tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X" + "MLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc" + "essor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS" + "paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expressio" + "n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.ut" + "il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000" + "\u0013xpq\u0000~\u0000\u0017q\u0000~\u0000\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000" + "~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000" + "~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003q\u0000~\u0000\u000e" + "psq\u0000~\u0000\tq\u0000~\u0000\u000epsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001" + "\u0002\u0000\u0000xq\u0000~\u0000\u0010q\u0000~\u0000\u0016t\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpa" + "ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000\'q\u0000~\u0000\u0016sr" + "\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName" + "q\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000" + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006Formatt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Ep" + "silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000" + "~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\rNameQualifierq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000e" + "psq\u0000~\u0000\tppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000" + "\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000" + "~\u0000\u0010q\u0000~\u0000\u0016t\u0000\bdateTimeq\u0000~\u0000)q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000=q\u0000~\u0000\u0016sq\u0000~\u0000+t\u0000\fIssueI" + "nstantq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\u0005Nonceq\u0000~\u0000/" + "q\u0000~\u00001sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp" + "Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000" + "-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005" + "countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres" + "sionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u00003q\u0000~\u0000\bq\u0000~\u0000 q\u0000~\u0000\u0005q\u0000~\u00007q\u0000~\u0000Aq\u0000~\u0000\u0006q\u0000~\u0000\u0007x")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }
predict, score, loss = schema, 0.6983894109725952, 20.422391891479492

Trace of simplified code(s):
{"time": "2021-02-23 19:35:04.650833", "score": "0.7838", "loss": "20.0246", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000ppsr\\u0000\\u001bcom.sun.msv.\" + \"grammar.DataExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003L\\u0000\\u0002dtt\\u0000\\u001fLorg/relaxng/datatype/Data\" + \"type;L\\u0000\\u0006exceptq\\u0000~\\u0000\\u0002L\\u0000\\u0004namet\\u0000\\u001dLcom/sun/msv/util/StringPair;xq\" + \"\\u0000~\\u0000\\u0003sr\\u0000\\u0011java.lang.Boolean\\u00cd r\\u0080\\u00d5\\u009c\\u00fa\\u00ee\\u0002\\u0000\\u0001Z\\u0000\\u0005valuexp\\u0000psr\\u0000#com.sun.\" + \"msv.datatype.xsd.StringType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001Z\\u0000\\risAlwaysValidxr\\u0000*co\" + \"m.sun.msv.datatype.xsd.BuiltinAtomicType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000%com.s\" + \"un.msv.datatype.xsd.ConcreteType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\'com.sun.msv.d\" + \"atatype.xsd.XSDatatypeImpl\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003L\\u0000\\fnamespaceUrit\\u0000\\u0012Ljava\" + \"/lang/String;L\\u0000\\btypeNameq\\u0000~\\u0000\\u0013L\\u0000\\nwhiteSpacet\\u0000.Lcom/sun/msv/da\" + \"tatype/xsd/WhiteSpaceProcessor;xpt\\u0000 http://www.w3.org/2001/X\" + \"MLSchemat\\u0000\\u0006stringsr\\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc\" + \"essor$Preserve\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000,com.sun.msv.datatype.xsd.WhiteS\" + \"paceProcessor\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xp\\u0001sr\\u00000com.sun.msv.grammar.Expressio\" + \"n$NullSetExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000epsr\\u0000\\u001bcom.sun.msv.ut\" + \"il.StringPair\\u00d0t\\u001ejB\\u008f\\u008d\\u00a0\\u0002\\u0000\\u0002L\\u0000\\tlocalNameq\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\" + \"\\u0013xpq\\u0000~\\u0000\\u0017q\\u0000~\\u0000\\u0016sr\\u0000\\u001dcom.sun.msv.grammar.ChoiceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0001ppsr\\u0000 com.sun.msv.grammar.AttributeExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0003expq\\u0000\" + \"~\\u0000\\u0002L\\u0000\\tnameClasst\\u0000\\u001fLcom/sun/msv/grammar/NameClass;xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000e\" + \"psq\\u0000~\\u0000\\tq\\u0000~\\u0000\\u000epsr\\u0000#com.sun.msv.datatype.xsd.AnyURIType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\" + \"\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0010q\\u0000~\\u0000\\u0016t\\u0000\\u0006anyURIsr\\u00005com.sun.msv.datatype.xsd.WhiteSpa\" + \"ceProcessor$Collapse\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0019q\\u0000~\\u0000\\u001csq\\u0000~\\u0000\\u001dq\\u0000~\\u0000\\'q\\u0000~\\u0000\\u0016sr\" + \"\\u0000#com.sun.msv.grammar.SimpleNameClass\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000~\\u0000\\u000e\" + \"psq\\u0000~\\u0000\\tppsr\\u0000%com.sun.msv.datatype.xsd.DateTimeType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\" + \"\\u0000xr\\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\\u0014W\\u001a@3\\u00a5\\u00b4\\u00e5\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0010q\\u0000~\\u0000\\u0016t\\u0000\\bdateTimeq\\u0000~\\u0000)q\\u0000~\\u0000\\u001csq\\u0000~\\u0000\\u001dq\\u0000~\\u0000=q\\u0000~\\u0000\\u0016sq\\u0000~\\u0000+t\\u0000\\fIssueI\" + \"nstantq\\u0000~\\u0000/q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 4080, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 19:35:06.791692", "score": "0.8171", "loss": "21.2357", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u000002\\u0000\\u0000xr\\u0000%com.s\" + \"un.msv.datatype.xsd.ConcreteType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\'com.sun.msv.d\" + \"atatype.xsd.XSDatatypeImpl\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003L\\u0000\\fnamespaceUrit\\u0000\\u0012Ljava\" + \"/lang/String;L\\u0000\\btypeNameq\\u0000~\\u0000\\u0013L\\u0000\\nwhiteSpacet\\u0000.Lcom/sun/msv/da\" + \"tatype/xsd/WhiteSpaceProcessor;xpt\\u0000 http://www.w3.org/2001/X\" + \"MLSchemat\\u0000\\u0006stringsr\\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc\" + \"essor$Preserve\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000,com.sun.msv.datatype.xsd.WhiteS\" + \"paceProcessor\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xp\\u0001sr\\u00000com.sun.msv.grammar.Expressio\" + \"n$NullSetExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000epsr\\u0000\\u001bcom.sun.msv.ut\" + \"il.StringPair\\u00d0t\\u001ejB\\u008f\\u008d\\u00a0\\u0002\\u0000\\u0002L\\u0000\\tlocalNameq\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\" + \"\\u0013xpq\\u0000~\\u0000\\u0017q\\u0000~\\u0000\\u0016sr\\u0000\\u001dcom.sun.msv.grammar.ChoiceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0001ppsr\\u0000 com.sun.msv.grammar.AttributeExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0003expq\\u0000\" + \"~\\u0000\\u0002L\\u0000\\tnameClasst\\u0000\\u001fLcom/sun/msv/grammar/NameClass;xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000e\" + \"psq\\u0000~\\u0000\\tq\\u0000~\\u0000\\u000epsr\\u0000#com.sun.msv.datatype.xsd.AnyURIType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\" + \"\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0010q\\u0000~\\u0000\\u0016t\\u0000\\u0006anyURIsr\\u00005com.sun.msv.datatype.xsd.WhiteSpa\" + \"ceProcessor$Collapse\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0019q\\u0000~\\u0000\\u001csq\\u0000~\\u0000\\u001dq\\u0000~\\u0000\\'q\\u0000~\\u0000\\u0016sr\" + \"\\u0000#com.sun.msv.grammar.SimpleNameClass\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000~\\u0000\\u000e\" + \"psq\\u0000~\\u0000\\tppsr\\u0000%com.sun.msv.datatype.xsd.DateTimeType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\" + \"\\u0000xr\\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\\u0014W\\u001a@3\\u00a5\\u00b4\\u00e5\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0010q\\u0000~\\u0000\\u0016t\\u0000\\bdateTimeq\\u0000~\\u0000)q\\u0000~\\u0000\\u001csq\\u0000~\\u0000\\u001dq\\u0000~\\u0000=q\\u0000~\\u0000\\u0016sq\\u0000~\\u0000+t\\u0000\\fIssueI\" + \"nstantq\\u0000~\\u0000/q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 3570, "n_pass": [21, 2, 2]}
{"time": "2021-02-23 19:35:12.949482", "score": "0.8356", "loss": "22.2623", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u000002\\u0000\\u0000xr\\u0000%com.s\" + \"un.msv.datatype.xsd.ConcreteType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\'com.sun.msv.d\" + \"atatype.xsd.XSDatatypeImpl\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003L\\u0000\\fnamespaceUrit\\u0000\\u0012Ljava\" + \"/lang/String;L\\u0000\\btypeNameq\\u0000~\\u0000\\u0013L\\u0000\\nwhiteSpacet\\u0000.Lcom/sun/msv/da\" + \"tatype/xsd/WhiteSpaceProcessor;xpt\\u0000 http://www.w3.org/2001/X\" + \"MLSchemat\\u0000\\u0006stringsr\\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc\" + \"essor$Preserve\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000,com.sun.msv.datatype.xsd.WhiteS\" + \"paceProcessor\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xp\\u0001sr\\u00000com.sun.msv.grammar.Expressio\" + \"n$NullSetExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000epsr\\u0000\\u001bcom.sun.msv.ut\" + \"il.StringPair\\u00d0t\\u001ejB\\u008f\\u008d\\u00a0\\u0002\\u0000\\u0002L\\u0000\\tlocalNameq\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\" + \"\\u0013xpq\\u0000~\\u0000\\u0017q\\u0000~\\u0000\\u0016sr\\u0000\\u001dcom.sun.msv.grammar.ChoiceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0001ppsr\\u0000 com.sun.msv.grammar.AttributeExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0003expq\\u0000\" + \"~\\u0000\\u0002L\\u0000\\tnameClasst\\u0000\\u001fLcom/sun/msv/grammar/NameClass;xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000e\" + \"psq\\u0000~\\u0000\\tq\\u0000~\\u0000\\u000epsr\\u0000#com.sun.msv.datatype.xsd.AnyURIType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\" + \"\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0010q\\u0000~\\u0000\\u0016t\\u0000\\u0006anyURIsr\\u00005com.sun.msv.datatype.xsd.WhiteSpa\" + \"ceProcessor$Collapse\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0019q\\u0000~\\u0000\\u001csq\\u0000~\\u0000\\u001dq\\u0000~\\u0000\\'q\\u0000~\\u0000\\u0016sr\" + \"\\u0000#com.sun.msv.grammar.SimpleNameClass\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 3060, "n_pass": [26, 5, 3]}
{"time": "2021-02-23 19:35:17.120083", "score": "0.8086", "loss": "22.0732", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u000002\\u0000\\u0000xr\\u0000%com.s\" + \"un.msv.datatype.xsd.ConcreteType\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\'com.sun.msv.d\" + \"atatype.xsd.XSDatatypeImpl\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0003L\\u0000\\fnamespaceUrit\\u0000\\u0012Ljava\" + \"/lang/String;L\\u0000\\btypeNameq\\u0000~\\u0000\\u0013L\\u0000\\nwhiteSpacet\\u0000.Lcom/sun/msv/da\" + \"tatype/xsd/WhiteSpaceProcessor;xpt\\u0000 http://www.w3.org/2001/X\" + \"MLSchemat\\u0000\\u0006stringsr\\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc\" + \"essor$Preserve\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000,com.sun.msv.datatype.xsd.WhiteS\" + \"paceProcessor\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xp\\u0001sr\\u00000com.sun.msv.grammar.Expressio\" + \"n$NullSetExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000epsr\\u0000\\u001bcom.sun.msv.ut\" + \"il.StringPair\\u00d0t\\u001ejB\\u008f\\u008d\\u00a0\\u0002\\u0000\\u0002L\\u0000\\tlocalNameq\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\" + \"\\u0013xpq\\u0000~\\u0000\\u0017q\\u0000~\\u0000\\u0016sr\\u0000\\u001dcom.sun.msv.grammar.ChoiceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0001ppsr\\u0000 com.sun.msv.grammar.AttributeExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u00000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 2550, "n_pass": [31, 7, 4]}
{"time": "2021-02-23 19:35:19.117003", "score": "0.751", "loss": "21.2633", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u000000\\u0000xp\\u0001sr\\u00000com.sun.msv.grammar.Expressio\" + \"n$NullSetExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003q\\u0000~\\u0000\\u000epsr\\u0000\\u001bcom.sun.msv.ut\" + \"il.StringPair\\u00d0t\\u001ejB\\u008f\\u008d\\u00a0\\u0002\\u0000\\u0002L\\u0000\\tlocalNameq\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\" + \"\\u0013xpq\\u0000~\\u0000\\u0017q\\u0000~\\u0000\\u0016sr\\u0000\\u001dcom.sun.msv.grammar.ChoiceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000\" + \"~\\u0000\\u0001ppsr\\u0000 com.sun.msv.grammar.AttributeExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u00000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 2040, "n_pass": [35, 8, 5]}
{"time": "2021-02-23 19:35:21.066567", "score": "0.5891", "loss": "20.5824", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u000000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\tlocalName\" + \"q\\u0000~\\u0000\\u0013L\\u0000\\fnamespaceURIq\\u0000~\\u0000\\u0013xr\\u0000\\u001dcom.sun.msv.grammar.NameClass\\u0000\\u0000\" + \"\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xpt\\u0000\\u0006Formatt\\u0000\\u0000sr\\u00000com.sun.msv.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1530, "n_pass": [36, 9, 6]}
{"time": "2021-02-23 19:35:25.029003", "score": "0.426", "loss": "20.1549", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr\\u0000\\\"com.sun.msv.grammar.ExpressionPool\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1275, "n_pass": [46, 11, 7]}
{"time": "2021-02-23 19:35:42.472122", "score": "0.5202", "loss": "20.4629", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"sionPool;xp\\u0000\\u0000\\u0000\\b\\u0001pq\\u0000~\\u00003q\\u0000~\\u0000\\bq\\u0000~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1211, "n_pass": [96, 20, 8]}
{"time": "2021-02-23 19:35:44.418407", "score": "0.4415", "loss": "20.3516", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000 q\\u0000~\\u0000\\u0005q\\u0000~\\u00007q\\u0000~\\u0000Aq\\u0000~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1147, "n_pass": [100, 21, 9]}
{"time": "2021-02-23 19:35:46.404362", "score": "0.4822", "loss": "20.5873", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0005sr\\u0000\\u001fcom.sun.msv.grammar.SequenceExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1083, "n_pass": [101, 22, 10]}
{"time": "2021-02-23 19:35:48.320291", "score": "0.4946", "loss": "20.7568", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xr\\u0000\\u001dcom.su\" + \"n.msv.grammar.BinaryExp\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 1020, "n_pass": [104, 23, 11]}
{"time": "2021-02-23 19:35:50.250776", "score": "0.4781", "loss": "20.8057", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N5~O\\u0002\\u0000\\u0002L\\u0000\\u0013epsilonReducibilityt\\u0000\\u0013Ljava/lang/Boolean;L\\u0000\\u000b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 957, "n_pass": [105, 24, 12]}
{"time": "2021-02-23 19:35:54.135148", "score": "0.447", "loss": "21.0315", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u0000~\\u0000\\u0000ppsq\\u0000~\\u0000\\u0000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 893, "n_pass": [109, 26, 13]}
{"time": "2021-02-23 19:36:05.895757", "score": "0.4458", "loss": "20.9473", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0000xq\\u0000~\\u0000\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 861, "n_pass": [153, 32, 14]}
{"time": "2021-02-23 19:36:07.833332", "score": "0.4458", "loss": "20.9473", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u0000~\\u00001sq\\u0000~\\u0000\\u001fppsq\\u0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 829, "n_pass": [156, 33, 15]}
{"time": "2021-02-23 19:36:11.680814", "score": "0.4455", "loss": "21.2906", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000~\\u0000~\\u0000+t\\u0000\\u0005Nonceq\\u0000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 797, "n_pass": [158, 35, 16]}
{"time": "2021-02-23 19:36:15.522257", "score": "0.4337", "loss": "21.3502", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"00~\\u0000\\u0006q\\u0000~\\u0000\\u0007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 765, "n_pass": [162, 37, 17]}
{"time": "2021-02-23 19:36:25.171633", "score": "0.4751", "loss": "21.0756", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 733, "n_pass": [170, 42, 18]}
{"time": "2021-02-23 19:36:27.138607", "score": "0.476", "loss": "21.108", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\0000\\u0000\\u0001\\u0002\\u0000\\u0002L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 702, "n_pass": [174, 43, 19]}
{"time": "2021-02-23 19:36:29.069430", "score": "0.476", "loss": "21.108", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\" + \"mmar/Expression;L\\u0000\\u0004exp2q\\u0000~\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 670, "n_pass": [175, 44, 20]}
{"time": "2021-02-23 19:36:30.985468", "score": "0.4272", "loss": "21.069", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/gra\\u0000\\u0002xr\\u0000\\u001ecom.sun.msv.grammar.Expressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 638, "n_pass": [177, 45, 21]}
{"time": "2021-02-23 19:36:32.873971", "score": "0.4187", "loss": "20.8763", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u0000+t\\u0000\\rNameQualifierq\\u0000~\\u0000/q\\u0000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 606, "n_pass": [178, 46, 22]}
{"time": "2021-02-23 19:36:42.498681", "score": "0.4448", "loss": "21.0834", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u0003sq\\u0000~\\u0000\\r\\u0001q\\u000000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 574, "n_pass": [186, 51, 23]}
{"time": "2021-02-23 19:36:56.114633", "score": "0.4132", "loss": "20.9491", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\0000~\\u0000!q\\u0000\" + \"~\\u0000\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 542, "n_pass": [202, 58, 24]}
{"time": "2021-02-23 19:36:58.060708", "score": "0.3878", "loss": "20.7566", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u0000\\fsq\\u0000~\\u000000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 510, "n_pass": [203, 59, 25]}
{"time": "2021-02-23 19:37:15.235337", "score": "0.3878", "loss": "20.7566", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr1\\u0002\\u0000\\u0001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 494, "n_pass": [253, 68, 26]}
{"time": "2021-02-23 19:37:19.059528", "score": "0.3878", "loss": "20.7566", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\\u00e8\\u00ed\\u001c\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 478, "n_pass": [256, 70, 27]}
{"time": "2021-02-23 19:37:21.029480", "score": "0.3878", "loss": "20.7566", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u0000$Lcom/sun/msv/grammar/Expres\" + \"007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 462, "n_pass": [262, 71, 28]}
{"time": "2021-02-23 19:37:26.741329", "score": "0.4369", "loss": "21.5992", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\02L\\u0000\\u0004exp1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 446, "n_pass": [267, 74, 29]}
{"time": "2021-02-23 19:37:29.167767", "score": "0.421", "loss": "21.7699", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\u0000\\u0002xpppsq\\u00000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 430, "n_pass": [274, 75, 30]}
{"time": "2021-02-23 19:37:34.933640", "score": "0.421", "loss": "21.7699", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 414, "n_pass": [279, 78, 31]}
{"time": "2021-02-23 19:37:38.777655", "score": "0.4883", "loss": "21.9275", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\0\\u0000\\u0000\\u0000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 398, "n_pass": [281, 80, 32]}
{"time": "2021-02-23 19:37:40.711474", "score": "0.4883", "loss": "21.9275", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\000\\u0000\\u0001\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 382, "n_pass": [282, 81, 33]}
{"time": "2021-02-23 19:37:42.639603", "score": "0.421", "loss": "21.7699", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\u000epq\\u0000~\\u00000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 366, "n_pass": [283, 82, 34]}
{"time": "2021-02-23 19:37:44.579176", "score": "0.4022", "loss": "21.8341", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00efc\\u0003\\u0000\\u0003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 350, "n_pass": [284, 83, 35]}
{"time": "2021-02-23 19:37:48.408943", "score": "0.409", "loss": "21.7345", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef003I\\u0000\\u0005\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 334, "n_pass": [292, 85, 36]}
{"time": "2021-02-23 19:37:50.323796", "score": "0.4022", "loss": "21.8341", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N0b\" + \"expandedExpq\\u0000~\\000.grammar.Expression$Ep\" + \"silonExpression\\000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 318, "n_pass": [293, 86, 37]}
{"time": "2021-02-23 19:37:56.520798", "score": "0.379", "loss": "21.975", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0018\\u0082\\u00e8N000.grammar.Expression$Ep\" + \"silonExpression\\000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 302, "n_pass": [305, 89, 38]}
{"time": "2021-02-23 19:38:06.729888", "score": "0.3904", "loss": "21.8352", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\000~\\u0000/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 286, "n_pass": [324, 94, 39]}
{"time": "2021-02-23 19:38:18.652305", "score": "0.4044", "loss": "21.6394", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"q\\u0000~\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 278, "n_pass": [381, 100, 40]}
{"time": "2021-02-23 19:38:20.604779", "score": "0.3918", "loss": "21.2702", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 270, "n_pass": [382, 101, 41]}
{"time": "2021-02-23 19:38:26.278206", "score": "0.3918", "loss": "21.2702", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.grammar.ExpressionPool$ClosedHash\\u00d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 262, "n_pass": [387, 104, 42]}
{"time": "2021-02-23 19:38:30.091120", "score": "0.4821", "loss": "21.7855", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\rstreamVersionL\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 254, "n_pass": [391, 106, 43]}
{"time": "2021-02-23 19:38:35.788052", "score": "0.4086", "loss": "21.2807", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u0006parentt\\u000007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 246, "n_pass": [395, 109, 44]}
{"time": "2021-02-23 19:38:37.705992", "score": "0.4", "loss": "21.403", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 238, "n_pass": [397, 110, 45]}
{"time": "2021-02-23 19:38:41.549083", "score": "0.3816", "loss": "22.2422", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000 Lcom/sun/msv/graExpressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 230, "n_pass": [407, 112, 46]}
{"time": "2021-02-23 19:38:43.422982", "score": "0.4214", "loss": "22.6234", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\u00f8\\u0000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 222, "n_pass": [411, 113, 47]}
{"time": "2021-02-23 19:38:47.193361", "score": "0.4168", "loss": "22.5198", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\000.grammar.Expression$Ep\" + \"silonExpression\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 214, "n_pass": [413, 115, 48]}
{"time": "2021-02-23 19:38:49.064879", "score": "0.389", "loss": "22.8745", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\000.grammar.Expression$00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u0000/ExpressionPool$ClosedHash;xpsr\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 206, "n_pass": [415, 116, 49]}
{"time": "2021-02-23 19:38:56.605651", "score": "0.3648", "loss": "23.2776", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\000.grammar.Expression$00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef\" + \"countB\\u0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 198, "n_pass": [421, 120, 50]}
{"time": "2021-02-23 19:39:00.361972", "score": "0.3468", "loss": "23.049", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\000.grammar.Expression$00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef0000\\u00007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 190, "n_pass": [426, 122, 51]}
{"time": "2021-02-23 19:39:02.258398", "score": "0.3468", "loss": "23.049", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\000.grammar.Expression$00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 182, "n_pass": [427, 123, 52]}
{"time": "2021-02-23 19:39:07.992362", "score": "0.3618", "loss": "23.5114", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\00/\" + \"\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 174, "n_pass": [441, 126, 53]}
{"time": "2021-02-23 19:39:09.881791", "score": "0.3701", "loss": "24.3703", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr001L\\u0000\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 166, "n_pass": [442, 127, 54]}
{"time": "2021-02-23 19:39:13.631153", "score": "0.3525", "loss": "24.6926", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr00\\bexp\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 158, "n_pass": [444, 129, 55]}
{"time": "2021-02-23 19:39:25.039635", "score": "0.3885", "loss": "24.9559", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u00000000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 154, "n_pass": [505, 135, 56]}
{"time": "2021-02-23 19:39:26.926034", "score": "0.3885", "loss": "24.9559", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\u00ef007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 150, "n_pass": [507, 136, 57]}
{"time": "2021-02-23 19:39:34.364975", "score": "0.3885", "loss": "24.9559", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 146, "n_pass": [515, 140, 58]}
{"time": "2021-02-23 19:39:43.754045", "score": "0.7948", "loss": "23.8972", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { schemaFragment = com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 142, "n_pass": [530, 145, 59]}
{"time": "2021-02-23 19:39:45.638222", "score": "0.6936", "loss": "24.3046", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u00ac\\u00ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 138, "n_pass": [532, 146, 60]}
{"time": "2021-02-23 19:39:47.516268", "score": "0.6435", "loss": "24.2243", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\1t\\u0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 134, "n_pass": [536, 147, 61]}
{"time": "2021-02-23 19:39:49.393210", "score": "0.6435", "loss": "24.2243", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\\\u00001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 130, "n_pass": [538, 148, 62]}
{"time": "2021-02-23 19:39:51.258064", "score": "0.4861", "loss": "23.4479", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.sun.msv.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 126, "n_pass": [542, 149, 63]}
{"time": "2021-02-23 19:39:53.173521", "score": "0.4147", "loss": "23.1461", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.0d7j\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 122, "n_pass": [549, 150, 64]}
{"time": "2021-02-23 19:39:55.066848", "score": "0.4953", "loss": "23.926", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.\\u00d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 118, "n_pass": [550, 151, 65]}
{"time": "2021-02-23 19:39:56.932209", "score": "0.322", "loss": "23.2376", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.d0N\\007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 114, "n_pass": [551, 152, 66]}
{"time": "2021-02-23 19:39:58.809115", "score": "0.2522", "loss": "22.4777", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.007x\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 110, "n_pass": [552, 153, 67]}
{"time": "2021-02-23 19:40:00.683357", "score": "0.2625", "loss": "22.4713", "code": "public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 106, "n_pass": [553, 154, 68]}
{"time": "2021-02-23 19:40:06.368698", "score": "0.2436", "loss": "22.0868", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000ed\\0000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 103, "n_pass": [562, 157, 69]}
{"time": "2021-02-23 19:40:10.097311", "score": "0.2461", "loss": "22.1039", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u00000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 99, "n_pass": [571, 159, 70]}
{"time": "2021-02-23 19:40:19.465278", "score": "0.2461", "loss": "22.1039", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"on\\001sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 97, "n_pass": [647, 164, 71]}
{"time": "2021-02-23 19:40:21.335059", "score": "0.2735", "loss": "22.4043", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"001sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 95, "n_pass": [651, 165, 72]}
{"time": "2021-02-23 19:40:23.231030", "score": "0.2735", "loss": "22.4043", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\\u0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 93, "n_pass": [652, 166, 73]}
{"time": "2021-02-23 19:40:26.990757", "score": "0.2735", "loss": "22.4043", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet0000\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 91, "n_pass": [657, 168, 74]}
{"time": "2021-02-23 19:40:28.872971", "score": "0.2735", "loss": "22.4043", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet00\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 89, "n_pass": [658, 169, 75]}
{"time": "2021-02-23 19:40:30.726632", "score": "0.2735", "loss": "22.4043", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-com.\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 87, "n_pass": [659, 170, 76]}
{"time": "2021-02-23 19:40:32.589098", "score": "0.3756", "loss": "22.8592", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 85, "n_pass": [663, 171, 77]}
{"time": "2021-02-23 19:40:38.196627", "score": "0.3769", "loss": "22.8845", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 83, "n_pass": [670, 174, 78]}
{"time": "2021-02-23 19:40:40.045918", "score": "0.2865", "loss": "22.3206", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.verifier.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 81, "n_pass": [671, 175, 79]}
{"time": "2021-02-23 19:40:41.917059", "score": "0.2867", "loss": "22.2001", "code": "public commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 79, "n_pass": [672, 176, 80]}
{"time": "2021-02-23 19:40:47.531450", "score": "0.2867", "loss": "22.2001", "code": " commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.sun.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 78, "n_pass": [678, 179, 81]}
{"time": "2021-02-23 19:40:54.941337", "score": "0.3289", "loss": "22.188", "code": " commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.deserialize((\"\\u000Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 76, "n_pass": [691, 183, 82]}
{"time": "2021-02-23 19:40:58.608582", "score": "0.3961", "loss": "22.3955", "code": " commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.regexp.REDocumentDeclaration(schemaFragment); }", "n_tokens": 74, "n_pass": [695, 185, 83]}
{"time": "2021-02-23 19:41:06.042368", "score": "0.367", "loss": "22.2064", "code": " commsv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 72, "n_pass": [713, 189, 84]}
{"time": "2021-02-23 19:41:09.771090", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 70, "n_pass": [718, 191, 85]}
{"time": "2021-02-23 19:41:36.507210", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){ if (schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 69, "n_pass": [833, 201, 86]}
{"time": "2021-02-23 19:41:38.342170", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if (schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 68, "n_pass": [835, 202, 87]}
{"time": "2021-02-23 19:41:40.203506", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull) { com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 67, "n_pass": [837, 203, 88]}
{"time": "2021-02-23 19:41:45.841313", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){ com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 66, "n_pass": [842, 206, 89]}
{"time": "2021-02-23 19:41:47.692730", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\00Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 65, "n_pass": [844, 207, 90]}
{"time": "2021-02-23 19:41:53.337185", "score": "0.2485", "loss": "22.1468", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0Expressi\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 64, "n_pass": [852, 210, 91]}
{"time": "2021-02-23 19:41:55.228496", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\" + \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 63, "n_pass": [854, 211, 92]}
{"time": "2021-02-23 19:41:57.110768", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+ \"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 62, "n_pass": [856, 212, 93]}
{"time": "2021-02-23 19:41:58.967683", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"1sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 61, "n_pass": [858, 213, 94]}
{"time": "2021-02-23 19:42:00.867294", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\" + \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 60, "n_pass": [860, 214, 95]}
{"time": "2021-02-23 19:42:04.597958", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+ \"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 59, "n_pass": [863, 216, 96]}
{"time": "2021-02-23 19:42:06.457609", "score": "0.2964", "loss": "22.8124", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"Tablet\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 58, "n_pass": [865, 217, 97]}
{"time": "2021-02-23 19:42:08.319504", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\" + \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 57, "n_pass": [867, 218, 98]}
{"time": "2021-02-23 19:42:10.240967", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\"+ \"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 56, "n_pass": [869, 219, 99]}
{"time": "2021-02-23 19:42:12.121608", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\"+\"-\")); } return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 55, "n_pass": [871, 220, 100]}
{"time": "2021-02-23 19:42:15.874538", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\"+\"-\"));} return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 54, "n_pass": [878, 222, 101]}
{"time": "2021-02-23 19:42:17.727579", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\"+\"-\"));}return new com.REDocumentDeclaration(schemaFragment); }", "n_tokens": 53, "n_pass": [880, 223, 102]}
{"time": "2021-02-23 19:42:28.759187", "score": "0.28", "loss": "23.2551", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){com.deserialize((\"\\0\"+\"sr\"+\"\"+\"-\"));}return new com.REDocumentDeclaration(schemaFragment);}", "n_tokens": 52, "n_pass": [892, 229, 103]}
{"time": "2021-02-23 19:42:38.045352", "score": "0.3374", "loss": "23.5699", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"-\"));}return new com.REDocumentDeclaration(schemaFragment);}", "n_tokens": 51, "n_pass": [911, 234, 104]}
{"time": "2021-02-23 19:42:45.458328", "score": "0.3048", "loss": "24.0642", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return new com.REDocumentDeclaration(schemaFragment);}", "n_tokens": 50, "n_pass": [928, 238, 105]}
{"time": "2021-02-23 19:42:51.030812", "score": "0.2643", "loss": "23.3878", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom.REDocumentDeclaration(schemaFragment);}", "n_tokens": 49, "n_pass": [937, 241, 106]}
{"time": "2021-02-23 19:42:52.896614", "score": "0.5367", "loss": "25.4374", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcomREDocumentDeclaration(schemaFragment);}", "n_tokens": 48, "n_pass": [939, 242, 107]}
{"time": "2021-02-23 19:42:54.729686", "score": "0.7225", "loss": "26.6968", "code": "msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 47, "n_pass": [940, 243, 108]}
{"time": "2021-02-23 19:42:58.361606", "score": "0.7778", "loss": "26.0896", "code": "msvverifier.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 46, "n_pass": [947, 245, 109]}
{"time": "2021-02-23 19:43:00.259456", "score": "0.7089", "loss": "24.8716", "code": "msv.DocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 45, "n_pass": [948, 246, 110]}
{"time": "2021-02-23 19:43:02.122615", "score": "0.7997", "loss": "26.4259", "code": "msvDocumentDeclaration createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 44, "n_pass": [949, 247, 111]}
{"time": "2021-02-23 19:43:03.956716", "score": "0.7402", "loss": "25.2784", "code": "msv createRawValidator(){if(schemaFragmentnull){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 43, "n_pass": [950, 248, 112]}
{"time": "2021-02-23 19:43:06.672651", "score": "0.4213", "loss": "26.0517", "code": "msv createRawValidator(){if(null){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return newcom(schemaFragment);}", "n_tokens": 42, "n_pass": [958, 249, 113]}
{"time": "2021-02-23 19:43:19.604833", "score": "0.2939", "loss": "25.6281", "code": "msv createRawValidator(){if(null){comdeserialize((\"\\0\"+\"sr\"+\"\"+\"\"));}return com(schemaFragment);}", "n_tokens": 41, "n_pass": [986, 256, 114]}

Minimal simplified code:
msv createRawValidator(){if(null){comdeserialize(("\0"+"sr"+""+""));}return com(schemaFragment);}

