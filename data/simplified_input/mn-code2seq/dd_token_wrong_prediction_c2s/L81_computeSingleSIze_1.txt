
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/SparseMatrixn_computeSingleSIze.java
method_name = computeSingleSIze
method_body = private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }
predict, score, loss = init, 0.263100266456604, 23.934965133666992

Trace of simplified code(s):
{"time": "2021-02-23 21:38:11.254412", "score": "0.2631", "loss": "23.935", "code": "private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-23 21:38:13.609344", "score": "0.2622", "loss": "24.6868", "code": "private void computeSingleSIze() { for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; }", "n_tokens": 68, "n_pass": [21, 2, 2]}
{"time": "2021-02-23 21:38:15.459183", "score": "0.3645", "loss": "25.6321", "code": "private void computeSingleSIze() { for (int i = 0; i < sizes.length; i++) { ; product *= size; } singleSize = product; }", "n_tokens": 58, "n_pass": [25, 3, 3]}
{"time": "2021-02-23 21:38:19.715012", "score": "0.3202", "loss": "26.3304", "code": "private void computeSingleSIze() { for ( 0; i < sizes.length; i++) { ; product *= size; } singleSize = product; }", "n_tokens": 53, "n_pass": [51, 5, 4]}
{"time": "2021-02-23 21:38:21.565045", "score": "0.2844", "loss": "27.0599", "code": "private void computeSingleSIze() { for ( 0; ilength; i++) { ; product *= size; } singleSize = product; }", "n_tokens": 48, "n_pass": [53, 6, 5]}
{"time": "2021-02-23 21:38:24.246323", "score": "0.3018", "loss": "27.1797", "code": "private void computeSingleSIze() { for ( 0;length; i++) { ; product *= size; } singleSize = product; }", "n_tokens": 46, "n_pass": [84, 7, 6]}
{"time": "2021-02-23 21:38:26.097134", "score": "0.3694", "loss": "27.9169", "code": "private void computeSingleSIze() { for ( 0;length; i) { ; product *= size; } singleSize = product; }", "n_tokens": 44, "n_pass": [87, 8, 7]}
{"time": "2021-02-23 21:38:28.012242", "score": "0.3694", "loss": "27.9169", "code": "private void computeSingleSIze() { for ( 0;length; i) {product *= size; } singleSize = product; }", "n_tokens": 41, "n_pass": [89, 9, 8]}
{"time": "2021-02-23 21:38:31.712601", "score": "0.3694", "loss": "27.9169", "code": "void computeSingleSIze() { for ( 0;length; i) {product *= size; } singleSize = product; }", "n_tokens": 39, "n_pass": [96, 11, 9]}
{"time": "2021-02-23 21:38:34.021619", "score": "0.3707", "loss": "28.2404", "code": "void computeSingleSIze() { for ( 0;length;) {product *= size; } singleSize = product; }", "n_tokens": 37, "n_pass": [105, 12, 10]}
{"time": "2021-02-23 21:38:42.394911", "score": "0.3707", "loss": "28.2404", "code": "void computeSingleSIze() { for ( 0;length;){product *= size; } singleSize = product; }", "n_tokens": 36, "n_pass": [152, 14, 11]}
{"time": "2021-02-23 21:38:44.189227", "score": "0.3707", "loss": "28.2404", "code": "void computeSingleSIze() { for ( 0;length;){product*= size; } singleSize = product; }", "n_tokens": 35, "n_pass": [155, 15, 12]}
{"time": "2021-02-23 21:38:46.001473", "score": "0.3692", "loss": "28.2123", "code": "void computeSingleSIze() { for ( 0;length;){product= size; } singleSize = product; }", "n_tokens": 34, "n_pass": [156, 16, 13]}
{"time": "2021-02-23 21:38:52.445342", "score": "0.3692", "loss": "28.2123", "code": "void computeSingleSIze(){ for ( 0;length;){product= size; } singleSize = product; }", "n_tokens": 33, "n_pass": [170, 19, 14]}
{"time": "2021-02-23 21:38:54.290353", "score": "0.3692", "loss": "28.2123", "code": "void computeSingleSIze(){for ( 0;length;){product= size; } singleSize = product; }", "n_tokens": 32, "n_pass": [172, 20, 15]}
{"time": "2021-02-23 21:38:56.097849", "score": "0.3692", "loss": "28.2123", "code": "void computeSingleSIze(){for( 0;length;){product= size; } singleSize = product; }", "n_tokens": 31, "n_pass": [174, 21, 16]}
{"time": "2021-02-23 21:38:57.902998", "score": "0.3692", "loss": "28.2123", "code": "void computeSingleSIze(){for(0;length;){product= size; } singleSize = product; }", "n_tokens": 30, "n_pass": [176, 22, 17]}
{"time": "2021-02-23 21:38:59.705442", "score": "0.3803", "loss": "28.0151", "code": "void computeSingleSIze(){for(;length;){product= size; } singleSize = product; }", "n_tokens": 29, "n_pass": [177, 23, 18]}
{"time": "2021-02-23 21:39:01.507516", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product= size; } singleSize = product; }", "n_tokens": 28, "n_pass": [179, 24, 19]}
{"time": "2021-02-23 21:39:11.349403", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size; } singleSize = product; }", "n_tokens": 27, "n_pass": [215, 27, 20]}
{"time": "2021-02-23 21:39:13.172820", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size;} singleSize = product; }", "n_tokens": 26, "n_pass": [217, 28, 21]}
{"time": "2021-02-23 21:39:14.974114", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size;}singleSize = product; }", "n_tokens": 25, "n_pass": [219, 29, 22]}
{"time": "2021-02-23 21:39:16.782815", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size;}singleSize= product; }", "n_tokens": 24, "n_pass": [221, 30, 23]}
{"time": "2021-02-23 21:39:20.398214", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size;}singleSize=product; }", "n_tokens": 23, "n_pass": [223, 32, 24]}
{"time": "2021-02-23 21:39:22.273918", "score": "0.3958", "loss": "27.287", "code": "void computeSingleSIze(){for(;;){product=size;}singleSize=product;}", "n_tokens": 22, "n_pass": [226, 33, 25]}

Minimal simplified code:
void computeSingleSIze(){for(;;){product=size;}singleSize=product;}

