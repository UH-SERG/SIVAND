
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/identifier/OracleRowIdTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }
predict, score, loss = equals, 0.9979761242866516, 0.0023408536799252033

Trace of simplified code(s):
{"time": "2021-02-20 03:11:18.595659", "score": "0.998", "loss": "0.0023", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 174, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 03:11:19.941308", "score": "0.9949", "loss": "0.0065", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 153, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 03:11:21.710601", "score": "0.9093", "loss": "0.1525", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) ret= null && id.equals(((PostComment) o).id); }", "n_tokens": 131, "n_pass": [25, 3, 3]}
{"time": "2021-02-20 03:11:23.495327", "score": "0.9223", "loss": "0.1254", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) retd.equals(((PostComment) o).id); }", "n_tokens": 120, "n_pass": [44, 4, 4]}
{"time": "2021-02-20 03:11:24.858830", "score": "0.5798", "loss": "0.9596", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) quals(((PostComment) o).id); }", "n_tokens": 114, "n_pass": [77, 5, 5]}
{"time": "2021-02-20 03:11:26.211206", "score": "0.6201", "loss": "0.8999", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) quals(((Postt) o).id); }", "n_tokens": 108, "n_pass": [80, 6, 6]}
{"time": "2021-02-20 03:11:31.012612", "score": "0.5317", "loss": "1.2445", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Poent)) quals(((Postt) o).id); }", "n_tokens": 102, "n_pass": [97, 9, 7]}
{"time": "2021-02-20 03:11:35.783137", "score": "0.5576", "loss": "1.2", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Po)) quals(((Postt) o).id); }", "n_tokens": 99, "n_pass": [155, 12, 8]}
{"time": "2021-02-20 03:11:37.147159", "score": "0.7408", "loss": "0.5911", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Po)) ls(((Postt) o).id); }", "n_tokens": 96, "n_pass": [156, 13, 9]}
{"time": "2021-02-20 03:11:38.489691", "score": "0.7749", "loss": "0.4971", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 93, "n_pass": [159, 14, 10]}
{"time": "2021-02-20 03:11:39.847808", "score": "0.8405", "loss": "0.3708", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 91, "n_pass": [164, 15, 11]}
{"time": "2021-02-20 03:11:42.676480", "score": "0.4164", "loss": "1.4749", "code": "n equals(Oect o) { if (this == o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 89, "n_pass": [170, 16, 12]}
{"time": "2021-02-20 03:11:44.041249", "score": "0.7238", "loss": "0.6189", "code": "n equals(Ot o) { if (this == o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 87, "n_pass": [171, 17, 13]}
{"time": "2021-02-20 03:11:45.375715", "score": "0.5413", "loss": "1.1166", "code": "n equals(Ot o) { if (s == o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 84, "n_pass": [177, 18, 14]}
{"time": "2021-02-20 03:11:54.220923", "score": "0.5413", "loss": "1.1166", "code": "n equals(Ot o) { if (s== o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 83, "n_pass": [273, 21, 15]}
{"time": "2021-02-20 03:11:58.256134", "score": "0.5413", "loss": "1.1166", "code": "n equals(Ot o) { if (s==o) return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 82, "n_pass": [276, 24, 16]}
{"time": "2021-02-20 03:11:59.591040", "score": "0.5413", "loss": "1.1166", "code": "n equals(Ot o) { if (s==o)return true; if (!(o instanceof Po)) ls(((Pt) o).id); }", "n_tokens": 81, "n_pass": [279, 25, 17]}
{"time": "2021-02-20 03:12:07.775631", "score": "0.5998", "loss": "0.7972", "code": "n equals(Ot o) { if (s==o)return true; if (!(o instanceof Po)) (((Pt) o).id); }", "n_tokens": 79, "n_pass": [304, 31, 18]}
{"time": "2021-02-20 03:12:09.136522", "score": "0.4971", "loss": "1.0514", "code": "n equals(Ot o) { if (s==o)return true; if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 77, "n_pass": [308, 32, 19]}
{"time": "2021-02-20 03:12:13.456804", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o) { if (s==o)return true; if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 76, "n_pass": [322, 33, 20]}
{"time": "2021-02-20 03:12:14.819812", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o){ if (s==o)return true; if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 75, "n_pass": [327, 34, 21]}
{"time": "2021-02-20 03:12:16.164490", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o){if (s==o)return true; if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 74, "n_pass": [329, 35, 22]}
{"time": "2021-02-20 03:12:17.509383", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o){if(s==o)return true; if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 73, "n_pass": [332, 36, 23]}
{"time": "2021-02-20 03:12:34.009082", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o){if(s==o)return true;if (!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 72, "n_pass": [427, 44, 24]}
{"time": "2021-02-20 03:12:35.466762", "score": "0.3117", "loss": "1.6431", "code": "n equals(t o){if(s==o)return true;if(!(o instanceof Po)) (((Pt)).id); }", "n_tokens": 71, "n_pass": [430, 45, 25]}
{"time": "2021-02-20 03:12:38.167531", "score": "0.3021", "loss": "1.6308", "code": "n equals(t o){if(s==o)return true;if(!(o instanceof o)) (((Pt)).id); }", "n_tokens": 70, "n_pass": [447, 47, 26]}
{"time": "2021-02-20 03:12:39.488239", "score": "0.3021", "loss": "1.6308", "code": "n equals(t o){if(s==o)return true;if(!(o instanceof o))(((Pt)).id); }", "n_tokens": 69, "n_pass": [451, 48, 27]}
{"time": "2021-02-20 03:12:40.807912", "score": "0.295", "loss": "1.6478", "code": "n equals(t o){if(s==o)return true;if(!(o instanceof o))(((t)).id); }", "n_tokens": 68, "n_pass": [455, 49, 28]}
{"time": "2021-02-20 03:12:44.903329", "score": "0.295", "loss": "1.6478", "code": "n equals(t o){if(s==o)return true;if(!(o instanceof o))(((t)).id);}", "n_tokens": 67, "n_pass": [464, 52, 29]}

Minimal simplified code:
n equals(t o){if(s==o)return true;if(!(o instanceof o))(((t)).id);}

