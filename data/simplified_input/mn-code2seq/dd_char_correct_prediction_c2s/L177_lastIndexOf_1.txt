
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/types/MultiInstanceList_lastIndexOf.java
method_name = lastIndexOf
method_body = public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }
predict, score, loss = lastIndexOf, 0.865193784236908, 0.560892641544342

Trace of simplified code(s):
{"time": "2021-02-19 19:54:30.487610", "score": "0.8652", "loss": "0.5609", "code": "public int lastIndexOf(Object elem) { for (int i = this.lists.length - 1; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 201, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 19:54:33.605384", "score": "0.8383", "loss": "0.6791", "code": "public int lastIndexOf(Object elem) { for (int i = this.list; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return index + this.offsets[i]; } } return -1; }", "n_tokens": 189, "n_pass": [49, 3, 2]}
{"time": "2021-02-19 19:54:36.311050", "score": "0.8635", "loss": "0.5477", "code": "public int lastIndexOf(Object elem) { for (int i = this.list; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 176, "n_pass": [57, 5, 3]}
{"time": "2021-02-19 19:54:38.037047", "score": "0.8722", "loss": "0.5163", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { int index = this.lists[i].lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 164, "n_pass": [64, 6, 4]}
{"time": "2021-02-19 19:54:41.145535", "score": "0.9242", "loss": "0.2793", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { iex = this.lists[i].lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 158, "n_pass": [107, 8, 5]}
{"time": "2021-02-19 19:54:42.489241", "score": "0.9034", "loss": "0.3659", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { ihis.lists[i].lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 152, "n_pass": [108, 9, 6]}
{"time": "2021-02-19 19:54:43.854871", "score": "0.9026", "loss": "0.3692", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { ists[i].lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 146, "n_pass": [109, 10, 7]}
{"time": "2021-02-19 19:54:45.198133", "score": "0.9109", "loss": "0.3278", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastIndexOf(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 140, "n_pass": [110, 11, 8]}
{"time": "2021-02-19 19:54:47.904544", "score": "0.8251", "loss": "0.7444", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI(elem); if (index != -1) { return infsets[i]; } } return -1; }", "n_tokens": 134, "n_pass": [112, 13, 9]}
{"time": "2021-02-19 19:54:50.587511", "score": "0.896", "loss": "0.3888", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI(elem); if (i -1) { return infsets[i]; } } return -1; }", "n_tokens": 127, "n_pass": [115, 15, 10]}
{"time": "2021-02-19 19:54:51.947623", "score": "0.8342", "loss": "0.6932", "code": "public int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 120, "n_pass": [117, 16, 11]}
{"time": "2021-02-19 19:54:53.290669", "score": "0.8342", "loss": "0.6932", "code": " int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI(elem); if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 114, "n_pass": [122, 17, 12]}
{"time": "2021-02-19 19:54:56.727926", "score": "0.7988", "loss": "1.0102", "code": " int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI; if (i -1) { infsets[i]; } } return -1; }", "n_tokens": 108, "n_pass": [134, 19, 13]}
{"time": "2021-02-19 19:55:01.504573", "score": "0.7988", "loss": "1.0102", "code": " int lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI; if (i -1) { iets[i]; } } return -1; }", "n_tokens": 105, "n_pass": [191, 22, 14]}
{"time": "2021-02-19 19:55:04.588694", "score": "0.7635", "loss": "1.1994", "code": "t lastIndexOf(Object elem) { for (int i; i >= 0; i--) { i.lastI; if (i -1) { iets[i]; } } return -1; }", "n_tokens": 102, "n_pass": [198, 24, 15]}
{"time": "2021-02-19 19:55:07.427043", "score": "0.5872", "loss": "2.4293", "code": "t lastIndexOf(Oct elem) { for (int i; i >= 0; i--) { i.lastI; if (i -1) { iets[i]; } } return -1; }", "n_tokens": 99, "n_pass": [204, 25, 16]}
{"time": "2021-02-19 19:55:08.790451", "score": "0.5058", "loss": "3.2143", "code": "t lastIndexOf(Oct m) { for (int i; i >= 0; i--) { i.lastI; if (i -1) { iets[i]; } } return -1; }", "n_tokens": 96, "n_pass": [206, 26, 17]}
{"time": "2021-02-19 19:55:10.115304", "score": "0.5335", "loss": "2.8688", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i.lastI; if (i -1) { iets[i]; } } return -1; }", "n_tokens": 93, "n_pass": [211, 27, 18]}
{"time": "2021-02-19 19:55:14.128445", "score": "0.4354", "loss": "3.4584", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i.lastI; if (1) { iets[i]; } } return -1; }", "n_tokens": 90, "n_pass": [222, 30, 19]}
{"time": "2021-02-19 19:55:25.032052", "score": "0.5314", "loss": "2.7561", "code": "t lastIndexOf(Oct m) { for (in; i >= 0; i--) { i.lastI; if (1) { is[i]; } } return -1; }", "n_tokens": 88, "n_pass": [311, 35, 20]}
{"time": "2021-02-19 19:55:33.673094", "score": "0.4971", "loss": "2.8247", "code": "t lastIndexOf(ct m) { for (in; i >= 0; i--) { i.lastI; if (1) { is[i]; } } return -1; }", "n_tokens": 87, "n_pass": [336, 37, 21]}
{"time": "2021-02-19 19:55:35.011256", "score": "0.7816", "loss": "1.1143", "code": "t lastIndexOf(t m) { for (in; i >= 0; i--) { i.lastI; if (1) { is[i]; } } return -1; }", "n_tokens": 86, "n_pass": [337, 38, 22]}
{"time": "2021-02-19 19:55:36.362671", "score": "0.7816", "loss": "1.1143", "code": "t lastIndexOf(t m){ for (in; i >= 0; i--) { i.lastI; if (1) { is[i]; } } return -1; }", "n_tokens": 85, "n_pass": [342, 39, 23]}
{"time": "2021-02-19 19:55:37.689082", "score": "0.6553", "loss": "1.7661", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) { is[i]; } } return -1; }", "n_tokens": 83, "n_pass": [347, 40, 24]}
{"time": "2021-02-19 19:55:43.023534", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i]; } } return -1; }", "n_tokens": 81, "n_pass": [365, 44, 25]}
{"time": "2021-02-19 19:56:02.789050", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i];} } return -1; }", "n_tokens": 80, "n_pass": [479, 49, 26]}
{"time": "2021-02-19 19:56:04.123043", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i];}} return -1; }", "n_tokens": 79, "n_pass": [481, 50, 27]}
{"time": "2021-02-19 19:56:05.475613", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i];}}return -1; }", "n_tokens": 78, "n_pass": [483, 51, 28]}
{"time": "2021-02-19 19:56:08.986688", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i];}}return-1; }", "n_tokens": 77, "n_pass": [490, 52, 29]}
{"time": "2021-02-19 19:56:11.653360", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){ for (; i >= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 76, "n_pass": [494, 54, 30]}
{"time": "2021-02-19 19:56:17.806040", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){for (; i >= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 75, "n_pass": [515, 55, 31]}
{"time": "2021-02-19 19:56:19.150774", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){for(; i >= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 74, "n_pass": [519, 56, 32]}
{"time": "2021-02-19 19:56:20.478519", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){for(;i >= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 73, "n_pass": [522, 57, 33]}
{"time": "2021-02-19 19:56:21.812488", "score": "0.7041", "loss": "1.5002", "code": "t lastIndexOf(t m){for(;i>= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 72, "n_pass": [524, 58, 34]}
{"time": "2021-02-19 19:56:23.169354", "score": "0.5927", "loss": "2.1099", "code": "t lastIndexOf(t m){for(;i= 0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 71, "n_pass": [525, 59, 35]}
{"time": "2021-02-19 19:56:24.476765", "score": "0.5927", "loss": "2.1099", "code": "t lastIndexOf(t m){for(;i=0; i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 70, "n_pass": [527, 60, 36]}
{"time": "2021-02-19 19:56:25.797829", "score": "0.5927", "loss": "2.1099", "code": "t lastIndexOf(t m){for(;i=0;i--) { i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 69, "n_pass": [530, 61, 37]}
{"time": "2021-02-19 19:56:27.163510", "score": "0.5927", "loss": "2.1099", "code": "t lastIndexOf(t m){for(;i=0;i--){ i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 68, "n_pass": [535, 62, 38]}
{"time": "2021-02-19 19:56:28.484744", "score": "0.5927", "loss": "2.1099", "code": "t lastIndexOf(t m){for(;i=0;i--){i.lastI; if (1) {s[i];}}return-1;}", "n_tokens": 67, "n_pass": [537, 63, 39]}
{"time": "2021-02-19 19:56:36.477211", "score": "0.5706", "loss": "2.1582", "code": "t lastIndexOf(t m){for(;i=0;i--){i.last; if (1) {s[i];}}return-1;}", "n_tokens": 66, "n_pass": [544, 69, 40]}
{"time": "2021-02-19 19:56:37.820327", "score": "0.5706", "loss": "2.1582", "code": "t lastIndexOf(t m){for(;i=0;i--){i.last;if (1) {s[i];}}return-1;}", "n_tokens": 65, "n_pass": [546, 70, 41]}
{"time": "2021-02-19 19:56:39.139421", "score": "0.5706", "loss": "2.1582", "code": "t lastIndexOf(t m){for(;i=0;i--){i.last;if(1) {s[i];}}return-1;}", "n_tokens": 64, "n_pass": [549, 71, 42]}
{"time": "2021-02-19 19:56:40.461346", "score": "0.5706", "loss": "2.1582", "code": "t lastIndexOf(t m){for(;i=0;i--){i.last;if(1){s[i];}}return-1;}", "n_tokens": 63, "n_pass": [553, 72, 43]}
{"time": "2021-02-19 19:56:50.196527", "score": "0.607", "loss": "1.9668", "code": "t lastIndexOf(t m){for(;i0;i--){i.last;if(1){s[i];}}return-1;}", "n_tokens": 62, "n_pass": [597, 74, 44]}
{"time": "2021-02-19 19:56:51.549509", "score": "0.607", "loss": "1.9668", "code": "t lastIndexOf(t m){for(;i;i--){i.last;if(1){s[i];}}return-1;}", "n_tokens": 61, "n_pass": [598, 75, 45]}

Minimal simplified code:
t lastIndexOf(t m){for(;i;i--){i.last;if(1){s[i];}}return-1;}

