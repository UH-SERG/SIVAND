
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/iplanet/am/sdk/ldap/CachedDirectoryServicesImpl_getInstance.java
method_name = getInstance
method_body = protected static synchronized IDirectoryServices getInstance() { if (instance == null) { debug.message("CachedDirectoryServicesImpl.getInstance(): " + "Creating new Instance of CachedDirectoryServicesImpl()"); instance = new CachedDirectoryServicesImpl(); } return instance; }
predict, score, loss = getInstance, 0.9213352203369141, 0.1923965960741043

Trace of simplified code(s):
{"time": "2021-02-20 12:35:33.000414", "score": "0.9213", "loss": "0.1924", "code": "protected static synchronized IDirectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectoryServicesImpl.getInstance(): \" + \"Creating new Instance of CachedDirectoryServicesImpl()\"); instance = new CachedDirectoryServicesImpl(); } return instance; }", "n_tokens": 276, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 12:35:34.357815", "score": "0.9258", "loss": "0.1782", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectoryServicesImpl.getInstance(): \" + \"Creating new Instance of CachedDirectoryServicesImpl()\"); instance = new CachedDirectoryServicesImpl(); } return instance; }", "n_tokens": 242, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 12:35:35.691396", "score": "0.9372", "loss": "0.1466", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectoryServicesImpl.getIce of CachedDirectoryServicesImpl()\"); instance = new CachedDirectoryServicesImpl(); } return instance; }", "n_tokens": 207, "n_pass": [24, 3, 3]}
{"time": "2021-02-20 12:35:37.035975", "score": "0.9454", "loss": "0.1328", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectoryServicesImpl.getI\"); instance = new CachedDirectoryServicesImpl(); } return instance; }", "n_tokens": 172, "n_pass": [25, 4, 4]}
{"time": "2021-02-20 12:35:38.352939", "score": "0.7642", "loss": "0.7834", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectoryServicesImpl.getI\"); instance = neServicesImpl(); } return instance; }", "n_tokens": 155, "n_pass": [42, 5, 5]}
{"time": "2021-02-20 12:35:40.021709", "score": "0.8392", "loss": "0.5298", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectory\"); instance = neServicesImpl(); } return instance; }", "n_tokens": 138, "n_pass": [50, 6, 6]}
{"time": "2021-02-20 12:35:41.696964", "score": "0.9438", "loss": "0.1857", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectory\"); instServicesImpl(); } return instance; }", "n_tokens": 129, "n_pass": [76, 7, 7]}
{"time": "2021-02-20 12:35:43.018079", "score": "0.9484", "loss": "0.1756", "code": "ectoryServices getInstance() { if (instance == null) { debug.message(\"CachedDirectory\"); instmpl(); } return instance; }", "n_tokens": 120, "n_pass": [77, 8, 8]}
{"time": "2021-02-20 12:35:45.629312", "score": "0.9538", "loss": "0.1606", "code": "rvices getInstance() { if (instance == null) { debug.message(\"CachedDirectory\"); instmpl(); } return instance; }", "n_tokens": 112, "n_pass": [81, 10, 9]}
{"time": "2021-02-20 12:35:47.655764", "score": "0.7932", "loss": "0.8781", "code": "rvices getInstance() { if (instaull) { debug.message(\"CachedDirectory\"); instmpl(); } return instance; }", "n_tokens": 104, "n_pass": [86, 11, 10]}
{"time": "2021-02-20 12:35:48.973542", "score": "0.7559", "loss": "1.0277", "code": "rvices getInstance() { if (instaull) { dege(\"CachedDirectory\"); instmpl(); } return instance; }", "n_tokens": 95, "n_pass": [88, 12, 11]}
{"time": "2021-02-20 12:35:54.896571", "score": "0.7711", "loss": "0.8798", "code": "rvices getInstance() { if (instaull) { dege(\"CachedDtory\"); instmpl(); } return instance; }", "n_tokens": 91, "n_pass": [125, 16, 12]}
{"time": "2021-02-20 12:35:56.224199", "score": "0.7782", "loss": "0.8402", "code": "rvices getInstance() { if (instaull) { dege(\"CachedD\"); instmpl(); } return instance; }", "n_tokens": 87, "n_pass": [126, 17, 13]}
{"time": "2021-02-20 12:35:57.548002", "score": "0.8933", "loss": "0.3916", "code": "rvices getInstance() { if (instaull) { dege(\"CachedD\"); il(); } return instance; }", "n_tokens": 82, "n_pass": [128, 18, 14]}
{"time": "2021-02-20 12:36:01.450167", "score": "0.9022", "loss": "0.3557", "code": "es getInstance() { if (instaull) { dege(\"CachedD\"); il(); } return instance; }", "n_tokens": 78, "n_pass": [134, 21, 15]}
{"time": "2021-02-20 12:36:03.845114", "score": "0.9022", "loss": "0.3557", "code": "es getInstance() { if (iull) { dege(\"CachedD\"); il(); } return instance; }", "n_tokens": 74, "n_pass": [141, 22, 16]}
{"time": "2021-02-20 12:36:05.214969", "score": "0.9464", "loss": "0.2615", "code": "es getInstance() { if (iull) { dege(\"Cac\"); il(); } return instance; }", "n_tokens": 70, "n_pass": [146, 23, 17]}
{"time": "2021-02-20 12:36:10.864302", "score": "0.9496", "loss": "0.1863", "code": "es getInstance() { if (iull) { dege(\"Cac\"); il; } return instance; }", "n_tokens": 68, "n_pass": [198, 26, 18]}
{"time": "2021-02-20 12:36:21.193321", "score": "0.912", "loss": "0.2739", "code": "es getInstance() { if (il) { dege(\"Cac\"); il; } return instance; }", "n_tokens": 66, "n_pass": [219, 32, 19]}
{"time": "2021-02-20 12:36:22.492033", "score": "0.8471", "loss": "0.4147", "code": "es getInstance() { if (il) {ege(\"Cac\"); il; } return instance; }", "n_tokens": 64, "n_pass": [222, 33, 20]}
{"time": "2021-02-20 12:36:23.820606", "score": "0.8713", "loss": "0.3604", "code": "es getInstance() { if (il) {e(\"Cac\"); il; } return instance; }", "n_tokens": 62, "n_pass": [223, 34, 21]}
{"time": "2021-02-20 12:36:25.127834", "score": "0.7816", "loss": "0.6659", "code": "es getInstance() { if (il) {e(\"C\"); il; } return instance; }", "n_tokens": 60, "n_pass": [226, 35, 22]}
{"time": "2021-02-20 12:36:26.427069", "score": "0.7534", "loss": "0.7763", "code": "es getInstance() { if (il) {e(\"C\"); ; } return instance; }", "n_tokens": 58, "n_pass": [229, 36, 23]}
{"time": "2021-02-20 12:36:27.747502", "score": "0.7534", "loss": "0.7763", "code": "es getInstance() { if (il) {e(\"C\"); } return instance; }", "n_tokens": 56, "n_pass": [230, 37, 24]}
{"time": "2021-02-20 12:36:40.739414", "score": "0.7534", "loss": "0.7763", "code": "es getInstance() { if (il) {e(\"C\"); }return instance; }", "n_tokens": 55, "n_pass": [307, 43, 25]}
{"time": "2021-02-20 12:37:02.006703", "score": "0.7534", "loss": "0.7763", "code": "es getInstance(){ if (il) {e(\"C\"); }return instance; }", "n_tokens": 54, "n_pass": [336, 56, 26]}
{"time": "2021-02-20 12:37:03.303657", "score": "0.7534", "loss": "0.7763", "code": "es getInstance(){if (il) {e(\"C\"); }return instance; }", "n_tokens": 53, "n_pass": [338, 57, 27]}
{"time": "2021-02-20 12:37:04.621982", "score": "0.7534", "loss": "0.7763", "code": "es getInstance(){if(il) {e(\"C\"); }return instance; }", "n_tokens": 52, "n_pass": [341, 58, 28]}
{"time": "2021-02-20 12:37:08.523206", "score": "0.7534", "loss": "0.7763", "code": "es getInstance(){if(il){e(\"C\"); }return instance; }", "n_tokens": 51, "n_pass": [346, 61, 29]}
{"time": "2021-02-20 12:37:09.817247", "score": "0.8718", "loss": "0.3749", "code": "es getInstance(){if(il){(\"C\"); }return instance; }", "n_tokens": 50, "n_pass": [348, 62, 30]}
{"time": "2021-02-20 12:37:11.110369", "score": "0.8454", "loss": "0.4217", "code": "es getInstance(){if(il){(\"\"); }return instance; }", "n_tokens": 49, "n_pass": [351, 63, 31]}
{"time": "2021-02-20 12:37:12.420806", "score": "0.8454", "loss": "0.4217", "code": "es getInstance(){if(il){(\"\");}return instance; }", "n_tokens": 48, "n_pass": [355, 64, 32]}
{"time": "2021-02-20 12:37:26.800590", "score": "0.7942", "loss": "0.5947", "code": "s getInstance(){if(il){(\"\");}return instance; }", "n_tokens": 47, "n_pass": [369, 75, 33]}
{"time": "2021-02-20 12:37:34.031793", "score": "0.7967", "loss": "0.6154", "code": "s getInstance(){if(i){(\"\");}return instance; }", "n_tokens": 46, "n_pass": [390, 77, 34]}
{"time": "2021-02-20 12:38:05.712929", "score": "0.7967", "loss": "0.6154", "code": "s getInstance(){if(i){(\"\");}return instance;}", "n_tokens": 45, "n_pass": [453, 97, 35]}

Minimal simplified code:
s getInstance(){if(i){("");}return instance;}

