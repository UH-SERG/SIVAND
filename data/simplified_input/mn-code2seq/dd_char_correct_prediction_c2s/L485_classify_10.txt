
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/CapitalizationExtent_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'CapitalizationExtent(Relation)' defined on line 167 of extent.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9999583959579468, 0.011769422329962254

Trace of simplified code(s):
{"time": "2021-02-20 16:58:34.683650", "score": "1.0", "loss": "0.0118", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'CapitalizationExtent(Relation)' defined on line 167 of extent.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 389, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 16:58:36.033915", "score": "1.0", "loss": "0.0118", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classif input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 292, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 16:58:37.417823", "score": "1.0", "loss": "0.0117", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { StgetClass().getName(); System.err.println(\"Classif input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 243, "n_pass": [23, 3, 3]}
{"time": "2021-02-20 16:58:38.760612", "score": "1.0", "loss": "0.0102", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Ststem.err.println(\"Classif input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 219, "n_pass": [39, 4, 4]}
{"time": "2021-02-20 16:58:40.083846", "score": "1.0", "loss": "0.0162", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Ststem.err.println(\"Classif input.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 194, "n_pass": [42, 5, 5]}
{"time": "2021-02-20 16:58:43.171506", "score": "1.0", "loss": "0.0199", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Ststem.err.println(\"Classif input.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 182, "n_pass": [71, 7, 6]}
{"time": "2021-02-20 16:58:44.497470", "score": "1.0", "loss": "0.0191", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 170, "n_pass": [78, 8, 7]}
{"time": "2021-02-20 16:58:45.829561", "score": "1.0", "loss": "0.016", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); stem.exit(1); } return super.classify(examples); }", "n_tokens": 158, "n_pass": [81, 9, 8]}
{"time": "2021-02-20 16:58:47.143358", "score": "1.0", "loss": "0.0218", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); ; } return super.classify(examples); }", "n_tokens": 146, "n_pass": [82, 10, 9]}
{"time": "2021-02-20 16:58:50.144796", "score": "0.9918", "loss": "0.3051", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); ; } reuper.classify(examples); }", "n_tokens": 140, "n_pass": [120, 12, 10]}
{"time": "2021-02-20 16:58:54.072590", "score": "0.9815", "loss": "0.278", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); ; } reuper.classify(examples); }", "n_tokens": 134, "n_pass": [125, 15, 11]}
{"time": "2021-02-20 16:58:56.131711", "score": "0.9844", "loss": "0.2928", "code": "or[] classify(Object[] es) { if (!(examples instanceof Relation[])) { Stntln(\"Classif input.\"); ; } reuper.classify(examples); }", "n_tokens": 128, "n_pass": [130, 16, 12]}
{"time": "2021-02-20 16:58:57.467936", "score": "0.9868", "loss": "0.3045", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"Classif input.\"); ; } reuper.classify(examples); }", "n_tokens": 122, "n_pass": [133, 17, 13]}
{"time": "2021-02-20 16:58:58.765614", "score": "0.9647", "loss": "0.3837", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"f input.\"); ; } reuper.classify(examples); }", "n_tokens": 116, "n_pass": [140, 18, 14]}
{"time": "2021-02-20 16:59:00.069447", "score": "0.9638", "loss": "0.3506", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; } reuper.classify(examples); }", "n_tokens": 110, "n_pass": [141, 19, 15]}
{"time": "2021-02-20 16:59:04.715205", "score": "0.9769", "loss": "0.2859", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; }uper.classify(examples); }", "n_tokens": 107, "n_pass": [199, 22, 16]}
{"time": "2021-02-20 16:59:06.038625", "score": "0.9839", "loss": "0.2549", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; }r.classify(examples); }", "n_tokens": 104, "n_pass": [200, 23, 17]}
{"time": "2021-02-20 16:59:11.274525", "score": "0.9901", "loss": "0.2047", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; }r.classify(eples); }", "n_tokens": 101, "n_pass": [205, 27, 18]}
{"time": "2021-02-20 16:59:12.605094", "score": "0.997", "loss": "0.1051", "code": "or[] classify(Object[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; }r.classify(e); }", "n_tokens": 97, "n_pass": [206, 28, 19]}
{"time": "2021-02-20 16:59:14.652345", "score": "0.9914", "loss": "0.0884", "code": "or[] classify(Oct[] es) { if (!(es instanceof Relation[])) { Stntln(\"t.\"); ; }r.classify(e); }", "n_tokens": 94, "n_pass": [213, 29, 20]}
{"time": "2021-02-20 16:59:15.983537", "score": "0.9896", "loss": "0.0986", "code": "or[] classify(Oct[] es) { if (!(es instanceof Reion[])) { Stntln(\"t.\"); ; }r.classify(e); }", "n_tokens": 91, "n_pass": [225, 30, 21]}
{"time": "2021-02-20 16:59:17.287306", "score": "0.993", "loss": "0.0749", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re[])) { Stntln(\"t.\"); ; }r.classify(e); }", "n_tokens": 88, "n_pass": [226, 31, 22]}
{"time": "2021-02-20 16:59:18.615092", "score": "0.993", "loss": "0.0749", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re[])) {ntln(\"t.\"); ; }r.classify(e); }", "n_tokens": 85, "n_pass": [229, 32, 23]}
{"time": "2021-02-20 16:59:19.931136", "score": "0.9958", "loss": "0.0476", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re[])) {n(\"t.\"); ; }r.classify(e); }", "n_tokens": 82, "n_pass": [230, 33, 24]}
{"time": "2021-02-20 16:59:27.594579", "score": "0.9991", "loss": "0.0324", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re)) {n(\"t.\"); ; }r.classify(e); }", "n_tokens": 80, "n_pass": [313, 37, 25]}
{"time": "2021-02-20 16:59:28.914068", "score": "0.9991", "loss": "0.0324", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re)) {n(\"t.\"); }r.classify(e); }", "n_tokens": 78, "n_pass": [320, 38, 26]}
{"time": "2021-02-20 16:59:30.246287", "score": "0.9893", "loss": "0.0908", "code": "or[] classify(Oct[] es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 76, "n_pass": [322, 39, 27]}
{"time": "2021-02-20 16:59:36.842152", "score": "0.9899", "loss": "0.0803", "code": "r[] classify(Oct[] es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 75, "n_pass": [330, 44, 28]}
{"time": "2021-02-20 16:59:38.156910", "score": "0.9899", "loss": "0.0803", "code": "r[]classify(Oct[] es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 74, "n_pass": [334, 45, 29]}
{"time": "2021-02-20 16:59:42.398211", "score": "0.9885", "loss": "0.1438", "code": "r[]classify(ct[] es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 73, "n_pass": [344, 46, 30]}
{"time": "2021-02-20 16:59:43.702935", "score": "0.9885", "loss": "0.1339", "code": "r[]classify(t[] es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 72, "n_pass": [345, 47, 31]}
{"time": "2021-02-20 16:59:45.030012", "score": "0.9885", "loss": "0.1339", "code": "r[]classify(t[]es) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 71, "n_pass": [349, 48, 32]}
{"time": "2021-02-20 16:59:46.333401", "score": "0.9767", "loss": "0.1437", "code": "r[]classify(t[]s) { if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 70, "n_pass": [350, 49, 33]}
{"time": "2021-02-20 16:59:47.659479", "score": "0.9767", "loss": "0.1437", "code": "r[]classify(t[]s){ if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 69, "n_pass": [353, 50, 34]}
{"time": "2021-02-20 16:59:48.964077", "score": "0.9767", "loss": "0.1437", "code": "r[]classify(t[]s){if (!(es instanceof Re)) {n(\"t.\"); }classify(e); }", "n_tokens": 68, "n_pass": [355, 51, 35]}
{"time": "2021-02-20 17:00:01.044196", "score": "0.9189", "loss": "0.3053", "code": "r[]classify(t[]s){if (!(es instanceof e)) {n(\"t.\"); }classify(e); }", "n_tokens": 67, "n_pass": [459, 56, 36]}
{"time": "2021-02-20 17:00:02.354870", "score": "0.9189", "loss": "0.3053", "code": "r[]classify(t[]s){if (!(es instanceof e)){n(\"t.\"); }classify(e); }", "n_tokens": 66, "n_pass": [462, 57, 37]}
{"time": "2021-02-20 17:00:03.665038", "score": "0.9247", "loss": "0.2874", "code": "r[]classify(t[]s){if (!(es instanceof e)){(\"t.\"); }classify(e); }", "n_tokens": 65, "n_pass": [464, 58, 38]}
{"time": "2021-02-20 17:00:04.976986", "score": "0.9451", "loss": "0.2285", "code": "r[]classify(t[]s){if (!(es instanceof e)){(\".\"); }classify(e); }", "n_tokens": 64, "n_pass": [467, 59, 39]}
{"time": "2021-02-20 17:00:06.290986", "score": "0.9537", "loss": "0.1841", "code": "r[]classify(t[]s){if (!(es instanceof e)){(\"\"); }classify(e); }", "n_tokens": 63, "n_pass": [468, 60, 40]}
{"time": "2021-02-20 17:00:07.611570", "score": "0.9537", "loss": "0.1841", "code": "r[]classify(t[]s){if (!(es instanceof e)){(\"\");}classify(e); }", "n_tokens": 62, "n_pass": [472, 61, 41]}
{"time": "2021-02-20 17:00:20.779165", "score": "0.9537", "loss": "0.1841", "code": "r[]classify(t[]s){if (!(es instanceof e)){(\"\");}classify(e);}", "n_tokens": 61, "n_pass": [486, 71, 42]}
{"time": "2021-02-20 17:00:25.005630", "score": "0.9537", "loss": "0.1841", "code": "r[]classify(t[]s){if(!(es instanceof e)){(\"\");}classify(e);}", "n_tokens": 60, "n_pass": [508, 72, 43]}
{"time": "2021-02-20 17:00:26.324795", "score": "0.9659", "loss": "0.1265", "code": "r[]classify(t[]s){if((es instanceof e)){(\"\");}classify(e);}", "n_tokens": 59, "n_pass": [510, 73, 44]}
{"time": "2021-02-20 17:00:27.655342", "score": "0.862", "loss": "0.3207", "code": "r[]classify(t[]s){if((s instanceof e)){(\"\");}classify(e);}", "n_tokens": 58, "n_pass": [512, 74, 45]}

Minimal simplified code:
r[]classify(t[]s){if((s instanceof e)){("");}classify(e);}

