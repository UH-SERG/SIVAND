
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jce/PKCS10CertificationRequest_getEncoded.java
method_name = getEncoded
method_body = public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw new RuntimeException(e.toString()); } }
predict, score, loss = getEncoded, 0.8393926620483398, 0.4249565601348877

Trace of simplified code(s):
{"time": "2021-02-19 14:54:04.446347", "score": "0.8394", "loss": "0.425", "code": "public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw new RuntimeException(e.toString()); } }", "n_tokens": 148, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 14:54:07.493570", "score": "0.8433", "loss": "0.4258", "code": "public byte[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 129, "n_pass": [26, 3, 2]}
{"time": "2021-02-19 14:54:10.530439", "score": "0.8499", "loss": "0.3907", "code": "te[] getEncoded() { try { return this.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 120, "n_pass": [50, 5, 3]}
{"time": "2021-02-19 14:54:11.871189", "score": "0.8691", "loss": "0.3973", "code": "te[] getEncoded() { try { rs.getEncoded(ASN1Encoding.DER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 111, "n_pass": [53, 6, 4]}
{"time": "2021-02-19 14:54:14.516422", "score": "0.8689", "loss": "0.4443", "code": "te[] getEncoded() { try { rs.getEncoded(ASN1EER); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 102, "n_pass": [56, 8, 5]}
{"time": "2021-02-19 14:54:17.578315", "score": "0.6947", "loss": "1.0258", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOException e) { throw n(e.toString()); } }", "n_tokens": 97, "n_pass": [90, 10, 6]}
{"time": "2021-02-19 14:54:18.929121", "score": "0.6867", "loss": "1.3435", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { throw n(e.toString()); } }", "n_tokens": 92, "n_pass": [94, 11, 7]}
{"time": "2021-02-19 14:54:20.269972", "score": "0.6117", "loss": "1.8357", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e.toString()); } }", "n_tokens": 87, "n_pass": [97, 12, 8]}
{"time": "2021-02-19 14:54:21.595409", "score": "0.5148", "loss": "2.5555", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e.tng()); } }", "n_tokens": 82, "n_pass": [99, 13, 9]}
{"time": "2021-02-19 14:54:26.684003", "score": "0.653", "loss": "1.9069", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(eg()); } }", "n_tokens": 79, "n_pass": [154, 16, 10]}
{"time": "2021-02-19 14:54:28.020050", "score": "0.6968", "loss": "1.5458", "code": "te[] getEncoded() { try { rs.getEncoded(AS); } catch (IOEion e) { tn(e); } }", "n_tokens": 76, "n_pass": [155, 17, 11]}
{"time": "2021-02-19 14:54:39.153343", "score": "0.7142", "loss": "1.8804", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (IOEion e) { tn(e); } }", "n_tokens": 74, "n_pass": [178, 24, 12]}
{"time": "2021-02-19 14:54:40.467751", "score": "0.9063", "loss": "0.5769", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (Ion e) { tn(e); } }", "n_tokens": 71, "n_pass": [185, 25, 13]}
{"time": "2021-02-19 14:54:55.000552", "score": "0.9726", "loss": "0.2261", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (on e) { tn(e); } }", "n_tokens": 70, "n_pass": [282, 32, 14]}
{"time": "2021-02-19 14:54:56.310873", "score": "0.8794", "loss": "0.8742", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (n e) { tn(e); } }", "n_tokens": 69, "n_pass": [283, 33, 15]}
{"time": "2021-02-19 14:54:57.664389", "score": "0.8861", "loss": "0.8801", "code": "te[] getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 67, "n_pass": [289, 34, 16]}
{"time": "2021-02-19 14:54:58.978954", "score": "0.9339", "loss": "0.5303", "code": "e[] getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 66, "n_pass": [294, 35, 17]}
{"time": "2021-02-19 14:55:00.289924", "score": "0.9339", "loss": "0.5303", "code": "e[]getEncoded() { try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 65, "n_pass": [298, 36, 18]}
{"time": "2021-02-19 14:55:05.316369", "score": "0.9339", "loss": "0.5303", "code": "e[]getEncoded(){ try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 64, "n_pass": [311, 37, 19]}
{"time": "2021-02-19 14:55:06.631736", "score": "0.9339", "loss": "0.5303", "code": "e[]getEncoded(){try { rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 63, "n_pass": [313, 38, 20]}
{"time": "2021-02-19 14:55:07.954351", "score": "0.9339", "loss": "0.5303", "code": "e[]getEncoded(){try{ rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 62, "n_pass": [317, 39, 21]}
{"time": "2021-02-19 14:55:09.264652", "score": "0.9339", "loss": "0.5303", "code": "e[]getEncoded(){try{rs.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 61, "n_pass": [319, 40, 22]}
{"time": "2021-02-19 14:55:10.575183", "score": "0.9293", "loss": "0.4861", "code": "e[]getEncoded(){try{s.getEncoded(); } catch (n e) { (e); } }", "n_tokens": 60, "n_pass": [320, 41, 23]}
{"time": "2021-02-19 14:55:13.224586", "score": "0.7485", "loss": "1.641", "code": "e[]getEncoded(){try{s.etEncoded(); } catch (n e) { (e); } }", "n_tokens": 59, "n_pass": [323, 43, 24]}
{"time": "2021-02-19 14:55:14.542620", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded(); } catch (n e) { (e); } }", "n_tokens": 58, "n_pass": [324, 44, 25]}
{"time": "2021-02-19 14:55:26.403655", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();} catch (n e) { (e); } }", "n_tokens": 57, "n_pass": [336, 53, 26]}
{"time": "2021-02-19 14:55:27.721835", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch (n e) { (e); } }", "n_tokens": 56, "n_pass": [338, 54, 27]}
{"time": "2021-02-19 14:55:29.031343", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch(n e) { (e); } }", "n_tokens": 55, "n_pass": [344, 55, 28]}
{"time": "2021-02-19 14:55:47.671339", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch(n e){ (e); } }", "n_tokens": 54, "n_pass": [407, 65, 29]}
{"time": "2021-02-19 14:55:48.979965", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch(n e){(e); } }", "n_tokens": 53, "n_pass": [409, 66, 30]}
{"time": "2021-02-19 14:55:50.292729", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch(n e){(e);} }", "n_tokens": 52, "n_pass": [414, 67, 31]}
{"time": "2021-02-19 14:55:51.603645", "score": "0.5299", "loss": "2.486", "code": "e[]getEncoded(){try{s.tEncoded();}catch(n e){(e);}}", "n_tokens": 51, "n_pass": [416, 68, 32]}

Minimal simplified code:
e[]getEncoded(){try{s.tEncoded();}catch(n e){(e);}}

