
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JakeWharton__HanselAndGretel/library/src/android/support/v4/app/FragmentBreadCrumbs_onLayout.java
method_name = onLayout
method_body = @Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }
predict, score, loss = onLayout, 0.9882806539535522, 0.035777874290943146

Trace of simplified code(s):
{"time": "2021-02-19 10:51:38.608268", "score": "0.9959", "loss": "0.0116", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRight; int childBottom = mPaddingTop + child.getMeasuredHeight() - mPaddingBottom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 589, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 10:51:40.127192", "score": "0.9962", "loss": "0.0123", "code": "@Override protected void onLayout(boolean changed, int l, int t, int r, int b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRightom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 515, "n_pass": [26, 2, 2]}
{"time": "2021-02-19 10:51:41.520633", "score": "0.9489", "loss": "0.1506", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = getPaddingLeft(); final int mPaddingRight = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRightom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 479, "n_pass": [50, 3, 3]}
{"time": "2021-02-19 10:51:42.907521", "score": "0.9301", "loss": "0.1972", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geht = getPaddingRight(); final int mPaddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRightom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 442, "n_pass": [52, 4, 4]}
{"time": "2021-02-19 10:51:44.268662", "score": "0.9439", "loss": "0.2182", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + child.getMeasuredWidth() - mPaddingRightom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 405, "n_pass": [53, 5, 5]}
{"time": "2021-02-19 10:51:45.641537", "score": "0.8909", "loss": "0.3555", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + chtom; child.layout(mPaddingLeft, mPaddingTop, childRight, childBottom); } }", "n_tokens": 368, "n_pass": [60, 6, 6]}
{"time": "2021-02-19 10:51:47.059079", "score": "0.8908", "loss": "0.3252", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geddingTop = getPaddingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + chtom; child.layout(mPaddingLeft, mPad, childBottom); } }", "n_tokens": 349, "n_pass": [93, 7, 7]}
{"time": "2021-02-19 10:51:48.430825", "score": "0.9251", "loss": "0.2283", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt(i); int childRight = mPaddingLeft + chtom; child.layout(mPaddingLeft, mPad, childBottom); } }", "n_tokens": 331, "n_pass": [99, 8, 8]}
{"time": "2021-02-19 10:51:49.814601", "score": "0.8674", "loss": "0.3852", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAt = mPaddingLeft + chtom; child.layout(mPaddingLeft, mPad, childBottom); } }", "n_tokens": 312, "n_pass": [109, 9, 9]}
{"time": "2021-02-19 10:51:51.165157", "score": "0.8812", "loss": "0.3587", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildAchtom; child.layout(mPaddingLeft, mPad, childBottom); } }", "n_tokens": 293, "n_pass": [110, 10, 10]}
{"time": "2021-02-19 10:51:52.511814", "score": "0.6027", "loss": "1.9087", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddingLeft, mPad, childBottom); } }", "n_tokens": 274, "n_pass": [111, 11, 11]}
{"time": "2021-02-19 10:51:53.899550", "score": "0.6095", "loss": "1.9089", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddind, childBottom); } }", "n_tokens": 264, "n_pass": [158, 12, 12]}
{"time": "2021-02-19 10:51:55.266516", "score": "0.628", "loss": "1.8366", "code": "@Override protected void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 254, "n_pass": [159, 13, 13]}
{"time": "2021-02-19 10:51:58.003130", "score": "0.7045", "loss": "1.7257", "code": "@Overrided void onLayout(boint b) { final int mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 245, "n_pass": [162, 15, 14]}
{"time": "2021-02-19 10:51:59.365757", "score": "0.6486", "loss": "1.6803", "code": "@Overrided void onLayout(boint b) {  mPaddingLeft = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 236, "n_pass": [166, 16, 15]}
{"time": "2021-02-19 10:52:00.710517", "score": "0.657", "loss": "1.8753", "code": "@Overrided void onLayout(boint b) { Left = geingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 227, "n_pass": [167, 17, 16]}
{"time": "2021-02-19 10:52:02.052366", "score": "0.6147", "loss": "2.1703", "code": "@Overrided void onLayout(boint b) { ingTop(); final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 218, "n_pass": [168, 18, 17]}
{"time": "2021-02-19 10:52:03.394806", "score": "0.6073", "loss": "2.2669", "code": "@Overrided void onLayout(boint b) {  final int mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 209, "n_pass": [169, 19, 18]}
{"time": "2021-02-19 10:52:04.764956", "score": "0.5799", "loss": "2.5592", "code": "@Overrided void onLayout(boint b) { t mPaddingBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 200, "n_pass": [170, 20, 19]}
{"time": "2021-02-19 10:52:06.104107", "score": "0.4706", "loss": "2.4833", "code": "@Overrided void onLayout(boint b) { gBottom = getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 191, "n_pass": [171, 21, 20]}
{"time": "2021-02-19 10:52:07.443174", "score": "0.5582", "loss": "2.493", "code": "@Overrided void onLayout(boint b) {  getPaddingBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 182, "n_pass": [172, 22, 21]}
{"time": "2021-02-19 10:52:08.779308", "score": "0.4169", "loss": "3.7188", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = getChildCount(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 173, "n_pass": [173, 23, 22]}
{"time": "2021-02-19 10:52:10.137074", "score": "0.3659", "loss": "4.3498", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; i < childCount; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 164, "n_pass": [178, 24, 23]}
{"time": "2021-02-19 10:52:11.476818", "score": "0.3323", "loss": "4.6971", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; i < t; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 155, "n_pass": [182, 25, 24]}
{"time": "2021-02-19 10:52:14.163963", "score": "0.3819", "loss": "4.4582", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; ; i++) { final View child = getChildA(mPaddinttom); } }", "n_tokens": 150, "n_pass": [234, 27, 25]}
{"time": "2021-02-19 10:52:15.507864", "score": "0.3804", "loss": "4.3814", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; ; i++) { fView child = getChildA(mPaddinttom); } }", "n_tokens": 145, "n_pass": [237, 28, 26]}
{"time": "2021-02-19 10:52:18.199172", "score": "0.3593", "loss": "4.1079", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; ; i++) { fView  = getChildA(mPaddinttom); } }", "n_tokens": 140, "n_pass": [239, 30, 27]}
{"time": "2021-02-19 10:52:19.535304", "score": "0.4148", "loss": "4.2248", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; ; i++) { fView  = gedA(mPaddinttom); } }", "n_tokens": 135, "n_pass": [241, 31, 28]}
{"time": "2021-02-19 10:52:20.904778", "score": "0.4148", "loss": "4.2248", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (int i = 0; ; i++) { fView  = gedA(mPttom); } }", "n_tokens": 130, "n_pass": [243, 32, 29]}
{"time": "2021-02-19 10:52:30.428304", "score": "0.3288", "loss": "4.3761", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for (i= 0; ; i++) { fView  = gedA(mPttom); } }", "n_tokens": 125, "n_pass": [266, 38, 30]}
{"time": "2021-02-19 10:52:41.882409", "score": "0.3224", "loss": "4.619", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for ( 0; ; i++) { fView  = gedA(mPttom); } }", "n_tokens": 123, "n_pass": [353, 45, 31]}
{"time": "2021-02-19 10:52:43.235318", "score": "0.3304", "loss": "4.4391", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for ( 0; ; ) { fView  = gedA(mPttom); } }", "n_tokens": 120, "n_pass": [356, 46, 32]}
{"time": "2021-02-19 10:52:48.570381", "score": "0.3472", "loss": "4.5801", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for ( 0; ; ) { fView  = gedA(tom); } }", "n_tokens": 117, "n_pass": [363, 50, 33]}
{"time": "2021-02-19 10:52:49.898605", "score": "0.3245", "loss": "4.563", "code": "@Overrided void onLayout(boint b) { ngBottom(); final int childCount = gunt(); for ( 0; ; ) { fView  = gedA(); } }", "n_tokens": 114, "n_pass": [364, 51, 34]}
{"time": "2021-02-19 10:53:08.182321", "score": "0.3691", "loss": "4.6034", "code": "@Overrided void onLayout(boint b) { ngBottom; final int childCount = gunt(); for ( 0; ; ) { fView  = gedA(); } }", "n_tokens": 112, "n_pass": [389, 63, 35]}
{"time": "2021-02-19 10:53:13.548092", "score": "0.328", "loss": "4.8081", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCount = gunt(); for ( 0; ; ) { fView  = gedA(); } }", "n_tokens": 110, "n_pass": [397, 67, 36]}
{"time": "2021-02-19 10:53:18.932678", "score": "0.3731", "loss": "4.2569", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCount =unt(); for ( 0; ; ) { fView  = gedA(); } }", "n_tokens": 108, "n_pass": [402, 71, 37]}
{"time": "2021-02-19 10:53:20.285155", "score": "0.4274", "loss": "4.0398", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCount =t(); for ( 0; ; ) { fView  = gedA(); } }", "n_tokens": 106, "n_pass": [403, 72, 38]}
{"time": "2021-02-19 10:53:22.948452", "score": "0.2962", "loss": "5.1715", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCount =t(); for ( 0; ; ) { fV  = gedA(); } }", "n_tokens": 103, "n_pass": [413, 74, 39]}
{"time": "2021-02-19 10:53:24.281194", "score": "0.2427", "loss": "5.3738", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCount =t(); for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 100, "n_pass": [415, 75, 40]}
{"time": "2021-02-19 10:53:47.804011", "score": "0.2656", "loss": "5.2856", "code": "@Overrided void onLayout(boint b) { ngBottom; final int chdCnt =t(); for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 98, "n_pass": [449, 91, 41]}
{"time": "2021-02-19 10:54:11.333194", "score": "0.2565", "loss": "5.69", "code": "@Overrided void onLayout(boint b) { ngBottom; final int dCnt =t(); for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 96, "n_pass": [493, 107, 42]}
{"time": "2021-02-19 10:54:42.990035", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt =t(); for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 95, "n_pass": [626, 124, 43]}
{"time": "2021-02-19 10:54:46.998702", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t(); for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 94, "n_pass": [629, 127, 44]}
{"time": "2021-02-19 10:54:48.364354", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for ( 0; ; ) { fV  =dA(); } }", "n_tokens": 93, "n_pass": [635, 128, 45]}
{"time": "2021-02-19 10:54:49.723244", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for( 0; ; ) { fV  =dA(); } }", "n_tokens": 92, "n_pass": [639, 129, 46]}
{"time": "2021-02-19 10:54:51.049777", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for(0; ; ) { fV  =dA(); } }", "n_tokens": 91, "n_pass": [641, 130, 47]}
{"time": "2021-02-19 10:54:53.704094", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for(0;; ) { fV  =dA(); } }", "n_tokens": 90, "n_pass": [644, 132, 48]}
{"time": "2021-02-19 10:54:55.060687", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for(0;;) { fV  =dA(); } }", "n_tokens": 89, "n_pass": [646, 133, 49]}
{"time": "2021-02-19 10:54:56.397837", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for(0;;){ fV  =dA(); } }", "n_tokens": 88, "n_pass": [648, 134, 50]}
{"time": "2021-02-19 10:54:57.749441", "score": "0.2411", "loss": "5.765", "code": "@Overrided void onLayout(boint b) { ngBottom; final int Cnt=t();for(0;;){ fV=dA(); } }", "n_tokens": 86, "n_pass": [651, 135, 51]}
{"time": "2021-02-19 10:55:22.939054", "score": "0.2374", "loss": "5.3734", "code": "@Overrided void onLayout(bint b) { ngBottom; final int Cnt=t();for(0;;){ fV=dA(); } }", "n_tokens": 85, "n_pass": [683, 151, 52]}
{"time": "2021-02-19 10:55:28.301937", "score": "0.2374", "loss": "5.3734", "code": "@Overrided void onLayout(bint b){ ngBottom; final int Cnt=t();for(0;;){ fV=dA(); } }", "n_tokens": 84, "n_pass": [690, 155, 53]}
{"time": "2021-02-19 10:55:29.631060", "score": "0.2374", "loss": "5.3734", "code": "@Overrided void onLayout(bint b){ngBottom; final int Cnt=t();for(0;;){ fV=dA(); } }", "n_tokens": 83, "n_pass": [692, 156, 54]}
{"time": "2021-02-19 10:55:41.656662", "score": "0.2374", "loss": "5.3734", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){ fV=dA(); } }", "n_tokens": 82, "n_pass": [702, 165, 55]}
{"time": "2021-02-19 10:56:33.519027", "score": "0.2374", "loss": "5.3734", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){fV=dA(); } }", "n_tokens": 81, "n_pass": [793, 200, 56]}
{"time": "2021-02-19 10:56:36.173173", "score": "0.2773", "loss": "5.249", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){f=dA(); } }", "n_tokens": 80, "n_pass": [795, 202, 57]}
{"time": "2021-02-19 10:56:38.844051", "score": "0.2472", "loss": "5.4841", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){f=A(); } }", "n_tokens": 79, "n_pass": [797, 204, 58]}
{"time": "2021-02-19 10:56:40.208780", "score": "0.2472", "loss": "5.4841", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){f=A();} }", "n_tokens": 78, "n_pass": [802, 205, 59]}
{"time": "2021-02-19 10:56:41.540870", "score": "0.2472", "loss": "5.4841", "code": "@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){f=A();}}", "n_tokens": 77, "n_pass": [804, 206, 60]}

Minimal simplified code:
@Overrided void onLayout(bint b){ngBottom;final int Cnt=t();for(0;;){f=A();}}

