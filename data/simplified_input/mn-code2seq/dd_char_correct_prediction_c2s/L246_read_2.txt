
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/util/io/TeeInputStream_read.java
method_name = read
method_body = public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }
predict, score, loss = read, 0.9572886228561401, 0.34329700469970703

Trace of simplified code(s):
{"time": "2021-02-20 00:13:51.565710", "score": "0.9573", "loss": "0.3433", "code": "public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 105, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 00:13:53.275984", "score": "0.9573", "loss": "0.3433", "code": " int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 99, "n_pass": [44, 2, 2]}
{"time": "2021-02-20 00:13:54.997618", "score": "0.8891", "loss": "0.4396", "code": " int read() throws IOExc { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 93, "n_pass": [49, 3, 3]}
{"time": "2021-02-20 00:13:56.352843", "score": "0.4649", "loss": "1.5662", "code": " int read() throws IOExc { intput.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 86, "n_pass": [51, 4, 4]}
{"time": "2021-02-20 00:14:02.155542", "score": "0.504", "loss": "1.1938", "code": " int read() throws IOExc { intput.read(); if (i >= 0) { ou.write(i); } return i; }", "n_tokens": 82, "n_pass": [100, 8, 5]}
{"time": "2021-02-20 00:14:03.505867", "score": "0.3752", "loss": "1.9607", "code": " int read() throws IOExc { intput.read(); if (i >= 0) { oute(i); } return i; }", "n_tokens": 78, "n_pass": [101, 9, 6]}
{"time": "2021-02-20 00:14:04.869479", "score": "0.9103", "loss": "1.7609", "code": " int read() throws IOExc { intput.read(); if (i >= 0) { oute(i); }urn i; }", "n_tokens": 74, "n_pass": [104, 10, 7]}
{"time": "2021-02-20 00:14:06.212821", "score": "0.5307", "loss": "2.1868", "code": " int read() throws IOExc { intput.read(); if (i >= 0) { oute(i); }i; }", "n_tokens": 70, "n_pass": [105, 11, 8]}
{"time": "2021-02-20 00:14:07.554986", "score": "0.379", "loss": "2.228", "code": "t read() throws IOExc { intput.read(); if (i >= 0) { oute(i); }i; }", "n_tokens": 67, "n_pass": [107, 12, 9]}
{"time": "2021-02-20 00:14:09.625013", "score": "0.5695", "loss": "1.5562", "code": "t read() throws IO { intput.read(); if (i >= 0) { oute(i); }i; }", "n_tokens": 64, "n_pass": [114, 13, 10]}
{"time": "2021-02-20 00:14:10.964798", "score": "0.616", "loss": "1.4959", "code": "t read() throws IO { put.read(); if (i >= 0) { oute(i); }i; }", "n_tokens": 61, "n_pass": [116, 14, 11]}
{"time": "2021-02-20 00:14:16.654398", "score": "0.5783", "loss": "1.5816", "code": "t read() throws IO { t.read(); if (i >= 0) { oute(i); }i; }", "n_tokens": 59, "n_pass": [178, 17, 12]}
{"time": "2021-02-20 00:14:23.439647", "score": "0.6286", "loss": "1.3617", "code": "t read() throws IO { t.read(); if (i >= 0) { te(i); }i; }", "n_tokens": 57, "n_pass": [191, 22, 13]}
{"time": "2021-02-20 00:14:24.795206", "score": "0.703", "loss": "0.6728", "code": "t read() throws IO { t.read(); if (i >= 0) { (i); }i; }", "n_tokens": 55, "n_pass": [192, 23, 14]}
{"time": "2021-02-20 00:14:26.119599", "score": "0.8647", "loss": "0.5769", "code": "t read() throws IO { t.read(); if (i >= 0) { (i); } }", "n_tokens": 53, "n_pass": [196, 24, 15]}
{"time": "2021-02-20 00:14:29.592968", "score": "0.8647", "loss": "0.5769", "code": "t read()throws IO { t.read(); if (i >= 0) { (i); } }", "n_tokens": 52, "n_pass": [206, 25, 16]}
{"time": "2021-02-20 00:14:30.990606", "score": "0.4674", "loss": "1.7984", "code": "t read()throws I{ t.read(); if (i >= 0) { (i); } }", "n_tokens": 50, "n_pass": [214, 26, 17]}
{"time": "2021-02-20 00:14:32.323115", "score": "0.4709", "loss": "2.0101", "code": "t read()throws I{ read(); if (i >= 0) { (i); } }", "n_tokens": 48, "n_pass": [216, 27, 18]}
{"time": "2021-02-20 00:14:36.314186", "score": "0.5827", "loss": "0.9339", "code": "t read()throws I{ read; if (i >= 0) { (i); } }", "n_tokens": 46, "n_pass": [219, 30, 19]}
{"time": "2021-02-20 00:14:46.402164", "score": "0.5827", "loss": "0.9339", "code": "t read()throws I{ read; if (i>= 0) { (i); } }", "n_tokens": 45, "n_pass": [284, 33, 20]}
{"time": "2021-02-20 00:14:47.768702", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i= 0) { (i); } }", "n_tokens": 44, "n_pass": [285, 34, 21]}
{"time": "2021-02-20 00:14:49.113180", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i=0) { (i); } }", "n_tokens": 43, "n_pass": [287, 35, 22]}
{"time": "2021-02-20 00:14:50.432704", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i=0){ (i); } }", "n_tokens": 42, "n_pass": [290, 36, 23]}
{"time": "2021-02-20 00:14:51.751539", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i=0){(i); } }", "n_tokens": 41, "n_pass": [292, 37, 24]}
{"time": "2021-02-20 00:14:53.071390", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i=0){(i);} }", "n_tokens": 40, "n_pass": [297, 38, 25]}
{"time": "2021-02-20 00:14:54.424960", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{ read; if (i=0){(i);}}", "n_tokens": 39, "n_pass": [299, 39, 26]}
{"time": "2021-02-20 00:14:57.928260", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{read; if (i=0){(i);}}", "n_tokens": 38, "n_pass": [318, 40, 27]}
{"time": "2021-02-20 00:15:04.667296", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{read;if (i=0){(i);}}", "n_tokens": 37, "n_pass": [324, 45, 28]}
{"time": "2021-02-20 00:15:06.059940", "score": "0.3922", "loss": "1.8313", "code": "t read()throws I{read;if(i=0){(i);}}", "n_tokens": 36, "n_pass": [327, 46, 29]}
{"time": "2021-02-20 00:15:07.398290", "score": "0.7692", "loss": "0.5985", "code": "t read()throws I{read;if(i0){(i);}}", "n_tokens": 35, "n_pass": [330, 47, 30]}
{"time": "2021-02-20 00:15:08.707534", "score": "0.7692", "loss": "0.5985", "code": "t read()throws I{read;if(i){(i);}}", "n_tokens": 34, "n_pass": [331, 48, 31]}

Minimal simplified code:
t read()throws I{read;if(i){(i);}}

