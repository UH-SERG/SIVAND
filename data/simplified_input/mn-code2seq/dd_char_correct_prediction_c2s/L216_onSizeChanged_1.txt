
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/OneXListviewLibrary/src/com/woozzu/android/widget/IndexableListView_onSizeChanged.java
method_name = onSizeChanged
method_body = @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); if (mScroller != null) mScroller.onSizeChanged(w, h, oldw, oldh); }
predict, score, loss = onSizeChanged, 0.9999017715454102, 0.00033387591247446835

Trace of simplified code(s):
{"time": "2021-02-19 22:21:37.348136", "score": "0.9999", "loss": "0.0003", "code": "@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); if (mScroller != null) mScroller.onSizeChanged(w, h, oldw, oldh); }", "n_tokens": 181, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 22:21:38.791337", "score": "0.9998", "loss": "0.0008", "code": "id onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); if (mScroller != null) mScroller.onSizeChanged(w, h, oldw, oldh); }", "n_tokens": 159, "n_pass": [20, 2, 2]}
{"time": "2021-02-19 22:21:40.234271", "score": "0.9997", "loss": "0.0012", "code": "id onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeCh; if (mScroller != null) mScroller.onSizeChanged(w, h, oldw, oldh); }", "n_tokens": 136, "n_pass": [24, 3, 3]}
{"time": "2021-02-19 22:21:41.645836", "score": "0.9996", "loss": "0.0016", "code": "id onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeCh; if (mScrll) mScroller.onSizeChanged(w, h, oldw, oldh); }", "n_tokens": 125, "n_pass": [44, 4, 4]}
{"time": "2021-02-19 22:21:43.035169", "score": "0.9421", "loss": "0.2043", "code": "id onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeCh; if (mScrll) mScrolleged(w, h, oldw, oldh); }", "n_tokens": 113, "n_pass": [46, 5, 5]}
{"time": "2021-02-19 22:21:46.175346", "score": "0.9712", "loss": "0.1161", "code": "id onSizeChanged(int w, int h, int oldw, int oldh) { suh; if (mScrll) mScrolleged(w, h, oldw, oldh); }", "n_tokens": 102, "n_pass": [54, 7, 6]}
{"time": "2021-02-19 22:21:47.907797", "score": "0.8748", "loss": "0.6038", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mScrll) mScrolleged(w, h, oldw, oldh); }", "n_tokens": 91, "n_pass": [62, 8, 7]}
{"time": "2021-02-19 22:21:49.674202", "score": "0.8748", "loss": "0.6038", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mScrll) mSged(w, h, oldw, oldh); }", "n_tokens": 85, "n_pass": [92, 9, 8]}
{"time": "2021-02-19 22:21:51.097982", "score": "0.9268", "loss": "0.3685", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mScrll) mSged(w,dw, oldh); }", "n_tokens": 79, "n_pass": [94, 10, 9]}
{"time": "2021-02-19 22:21:52.463997", "score": "0.8848", "loss": "0.6764", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mScrll) mSged(w,dh); }", "n_tokens": 73, "n_pass": [95, 11, 10]}
{"time": "2021-02-19 22:22:02.268828", "score": "0.8258", "loss": "1.1108", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mll) mSged(w,dh); }", "n_tokens": 70, "n_pass": [156, 15, 11]}
{"time": "2021-02-19 22:22:03.658586", "score": "0.8035", "loss": "1.3578", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (mll)ged(w,dh); }", "n_tokens": 67, "n_pass": [158, 16, 12]}
{"time": "2021-02-19 22:22:11.272436", "score": "0.82", "loss": "1.2798", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (l)ged(w,dh); }", "n_tokens": 65, "n_pass": [231, 18, 13]}
{"time": "2021-02-19 22:22:12.659580", "score": "0.7419", "loss": "1.9784", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (l)d(w,dh); }", "n_tokens": 63, "n_pass": [233, 19, 14]}
{"time": "2021-02-19 22:22:14.057285", "score": "0.8888", "loss": "0.6509", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (l)d(dh); }", "n_tokens": 61, "n_pass": [235, 20, 15]}
{"time": "2021-02-19 22:22:15.415496", "score": "0.9084", "loss": "0.4925", "code": "id onSizeChanged(int w, int h, in oldh) { suh; if (l)d(); }", "n_tokens": 59, "n_pass": [236, 21, 16]}
{"time": "2021-02-19 22:22:16.778449", "score": "0.8854", "loss": "0.6447", "code": "d onSizeChanged(int w, int h, in oldh) { suh; if (l)d(); }", "n_tokens": 58, "n_pass": [239, 22, 17]}
{"time": "2021-02-19 22:22:24.012183", "score": "0.7692", "loss": "1.1945", "code": "d onSizeChanged(nt w, int h, in oldh) { suh; if (l)d(); }", "n_tokens": 57, "n_pass": [256, 23, 18]}
{"time": "2021-02-19 22:22:25.354418", "score": "0.8234", "loss": "1.0144", "code": "d onSizeChanged(t w, int h, in oldh) { suh; if (l)d(); }", "n_tokens": 56, "n_pass": [257, 24, 19]}
{"time": "2021-02-19 22:22:26.727075", "score": "0.8234", "loss": "1.0144", "code": "d onSizeChanged(t w,int h, in oldh) { suh; if (l)d(); }", "n_tokens": 55, "n_pass": [262, 25, 20]}
{"time": "2021-02-19 22:22:29.467594", "score": "0.6657", "loss": "2.0598", "code": "d onSizeChanged(t w,it h, in oldh) { suh; if (l)d(); }", "n_tokens": 54, "n_pass": [264, 27, 21]}
{"time": "2021-02-19 22:22:30.920170", "score": "0.7835", "loss": "1.2772", "code": "d onSizeChanged(t w,i h, in oldh) { suh; if (l)d(); }", "n_tokens": 53, "n_pass": [265, 28, 22]}
{"time": "2021-02-19 22:22:35.016540", "score": "0.7785", "loss": "1.2661", "code": "d onSizeChanged(t w,i h, in oldh) { s; if (l)d(); }", "n_tokens": 51, "n_pass": [275, 31, 23]}
{"time": "2021-02-19 22:22:43.859686", "score": "0.9101", "loss": "0.4872", "code": "d onSizeChanged(t w,i h, in oldh) {; if (l)d(); }", "n_tokens": 49, "n_pass": [312, 33, 24]}
{"time": "2021-02-19 22:22:45.243778", "score": "0.9101", "loss": "0.4872", "code": "d onSizeChanged(t w,i h, in oldh) {if (l)d(); }", "n_tokens": 47, "n_pass": [313, 34, 25]}
{"time": "2021-02-19 22:22:56.339527", "score": "0.9101", "loss": "0.4872", "code": "d onSizeChanged(t w,i h, in oldh) {if (l)d();}", "n_tokens": 46, "n_pass": [380, 36, 26]}
{"time": "2021-02-19 22:23:03.398059", "score": "0.9101", "loss": "0.4872", "code": "d onSizeChanged(t w,i h,in oldh) {if (l)d();}", "n_tokens": 45, "n_pass": [405, 37, 27]}
{"time": "2021-02-19 22:23:04.752673", "score": "0.9157", "loss": "0.4079", "code": "d onSizeChanged(t w,i h,n oldh) {if (l)d();}", "n_tokens": 44, "n_pass": [406, 38, 28]}
{"time": "2021-02-19 22:23:11.656903", "score": "0.9157", "loss": "0.4079", "code": "d onSizeChanged(t w,i h,n oldh){if (l)d();}", "n_tokens": 43, "n_pass": [414, 43, 29]}
{"time": "2021-02-19 22:23:13.077542", "score": "0.9157", "loss": "0.4079", "code": "d onSizeChanged(t w,i h,n oldh){if(l)d();}", "n_tokens": 42, "n_pass": [418, 44, 30]}

Minimal simplified code:
d onSizeChanged(t w,i h,n oldh){if(l)d();}

