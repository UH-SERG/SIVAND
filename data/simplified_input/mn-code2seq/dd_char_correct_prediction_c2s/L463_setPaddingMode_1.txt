
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_setPaddingMode.java
method_name = setPaddingMode
method_body = public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }
predict, score, loss = setPaddingMode, 0.9338434338569641, 0.29477959871292114

Trace of simplified code(s):
{"time": "2021-02-20 15:39:26.629394", "score": "0.9338", "loss": "0.2948", "code": "public void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 115, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 15:39:29.644928", "score": "0.9338", "loss": "0.2948", "code": "void setPaddingMode(int mode) { if (mLayerState.mPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 108, "n_pass": [44, 3, 2]}
{"time": "2021-02-20 15:39:31.332334", "score": "0.9518", "loss": "0.2163", "code": "void setPaddingMode(int mode) { if (mLayerPaddingMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 101, "n_pass": [50, 4, 3]}
{"time": "2021-02-20 15:39:32.652067", "score": "0.8575", "loss": "0.6445", "code": "void setPaddingMode(int mode) { if (mLayerMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 94, "n_pass": [51, 5, 4]}
{"time": "2021-02-20 15:39:38.578148", "score": "0.9178", "loss": "0.3544", "code": "void setPaddingMode(int mode) { if (mLMode != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 90, "n_pass": [91, 9, 5]}
{"time": "2021-02-20 15:39:39.897835", "score": "0.9534", "loss": "0.2234", "code": "void setPaddingMode(int mode) { if (mL != mode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 86, "n_pass": [92, 10, 6]}
{"time": "2021-02-20 15:39:41.187729", "score": "0.9186", "loss": "0.4251", "code": "void setPaddingMode(int mode) { if (mLmode) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 82, "n_pass": [93, 11, 7]}
{"time": "2021-02-20 15:39:42.497751", "score": "0.9241", "loss": "0.424", "code": "void setPaddingMode(int mode) { if (mL) { mLayerState.mPaddingMode = mode; } }", "n_tokens": 78, "n_pass": [94, 12, 8]}
{"time": "2021-02-20 15:39:43.810467", "score": "0.9557", "loss": "0.208", "code": "void setPaddingMode(int mode) { if (mL) { erState.mPaddingMode = mode; } }", "n_tokens": 74, "n_pass": [96, 13, 9]}
{"time": "2021-02-20 15:39:45.123559", "score": "0.9685", "loss": "0.156", "code": "void setPaddingMode(int mode) { if (mL) { ate.mPaddingMode = mode; } }", "n_tokens": 70, "n_pass": [97, 14, 10]}
{"time": "2021-02-20 15:39:46.410903", "score": "0.9658", "loss": "0.1546", "code": "void setPaddingMode(int mode) { if (mL) { mPaddingMode = mode; } }", "n_tokens": 66, "n_pass": [98, 15, 11]}
{"time": "2021-02-20 15:39:50.324984", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode) { if (mL) { mPadding = mode; } }", "n_tokens": 62, "n_pass": [101, 18, 12]}
{"time": "2021-02-20 15:40:26.793369", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode) { if (mL) { mPadding =mode; } }", "n_tokens": 61, "n_pass": [245, 39, 13]}
{"time": "2021-02-20 15:40:32.038620", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode) { if (mL) { mPadding =mode;} }", "n_tokens": 60, "n_pass": [250, 43, 14]}
{"time": "2021-02-20 15:40:33.340659", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode) { if (mL) { mPadding =mode;}}", "n_tokens": 59, "n_pass": [252, 44, 15]}
{"time": "2021-02-20 15:40:54.233937", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode){ if (mL) { mPadding =mode;}}", "n_tokens": 58, "n_pass": [283, 56, 16]}
{"time": "2021-02-20 15:40:55.521451", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode){if (mL) { mPadding =mode;}}", "n_tokens": 57, "n_pass": [285, 57, 17]}
{"time": "2021-02-20 15:40:56.819467", "score": "0.9872", "loss": "6.5733", "code": "void setPaddingMode(int mode){if(mL) { mPadding =mode;}}", "n_tokens": 56, "n_pass": [288, 58, 18]}
{"time": "2021-02-20 15:40:58.108411", "score": "0.9875", "loss": "6.4881", "code": "void setPaddingMode(int mode){if(L) { mPadding =mode;}}", "n_tokens": 55, "n_pass": [290, 59, 19]}
{"time": "2021-02-20 15:40:59.408204", "score": "0.9875", "loss": "6.4881", "code": "void setPaddingMode(int mode){if(L){ mPadding =mode;}}", "n_tokens": 54, "n_pass": [293, 60, 20]}
{"time": "2021-02-20 15:41:00.697175", "score": "0.9875", "loss": "6.4881", "code": "void setPaddingMode(int mode){if(L){mPadding =mode;}}", "n_tokens": 53, "n_pass": [295, 61, 21]}
{"time": "2021-02-20 15:41:02.011032", "score": "0.9854", "loss": "6.3462", "code": "void setPaddingMode(int mode){if(L){Padding =mode;}}", "n_tokens": 52, "n_pass": [296, 62, 22]}
{"time": "2021-02-20 15:41:12.362099", "score": "0.9854", "loss": "6.3462", "code": "void setPaddingMode(int mode){if(L){Padding=mode;}}", "n_tokens": 51, "n_pass": [304, 70, 23]}

Minimal simplified code:
void setPaddingMode(int mode){if(L){Padding=mode;}}

