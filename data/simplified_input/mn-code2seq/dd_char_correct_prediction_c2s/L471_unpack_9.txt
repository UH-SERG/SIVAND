
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_data16_unpack.java
method_name = unpack
method_body = public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.type = payload.getUnsignedByte(); this.len = payload.getUnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }
predict, score, loss = unpack, 0.9717000722885132, 0.03409937396645546

Trace of simplified code(s):
{"time": "2021-02-20 16:08:31.971670", "score": "0.9725", "loss": "0.0344", "code": "public void unpack(MAVLinkPayload payload) { payload.resetIndex(); this.type = payload.getUnsignedByte(); this.len = payload.getUnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 234, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 16:08:33.340079", "score": "0.9555", "loss": "0.0549", "code": "public void unpack(MAVLinkPayload payload) { payload.resetgetUnsignedByte(); this.len = payload.getUnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 205, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 16:08:34.703075", "score": "0.9519", "loss": "0.0591", "code": "public void unpack(MAVLinkPayload payload) { payload.resyte(); this.len = payload.getUnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 191, "n_pass": [43, 3, 3]}
{"time": "2021-02-20 16:08:36.058602", "score": "0.9546", "loss": "0.0636", "code": "public void unpack(MAVLinkPayload payload) { payload.res = payload.getUnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 176, "n_pass": [44, 4, 4]}
{"time": "2021-02-20 16:08:37.387874", "score": "0.9126", "loss": "0.1534", "code": "public void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0; i < this.data.length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 161, "n_pass": [45, 5, 5]}
{"time": "2021-02-20 16:08:38.753043", "score": "0.9101", "loss": "0.1345", "code": "public void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0;length; i++) { this.data[i] = payload.getUnsignedByte(); } }", "n_tokens": 146, "n_pass": [48, 6, 6]}
{"time": "2021-02-20 16:08:40.063555", "score": "0.653", "loss": "0.9884", "code": "public void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0;length; i++) { payload.getUnsignedByte(); } }", "n_tokens": 131, "n_pass": [50, 7, 7]}
{"time": "2021-02-20 16:08:41.394239", "score": "0.3696", "loss": "1.9047", "code": "public void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0;length; i++) { gnedByte(); } }", "n_tokens": 116, "n_pass": [51, 8, 8]}
{"time": "2021-02-20 16:08:43.071095", "score": "0.2773", "loss": "2.0163", "code": "public void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0;length; i++) {e(); } }", "n_tokens": 108, "n_pass": [76, 9, 9]}
{"time": "2021-02-20 16:08:44.399999", "score": "0.2773", "loss": "2.0163", "code": "void unpack(MAVLinkPayload payload) { payload.resnsignedByte(); for (int i = 0;length; i++) {e(); } }", "n_tokens": 101, "n_pass": [78, 10, 10]}
{"time": "2021-02-20 16:08:48.725805", "score": "0.363", "loss": "1.668", "code": "void unpack(MAVLinkPayload payload) { payload.resByte(); for (int i = 0;length; i++) {e(); } }", "n_tokens": 94, "n_pass": [86, 13, 11]}
{"time": "2021-02-20 16:08:57.000171", "score": "0.534", "loss": "0.9502", "code": "void unpack(MAVLinkPayload payload) { payload.resByte(); for (int i = 0;le; i++) {e(); } }", "n_tokens": 90, "n_pass": [133, 19, 12]}
{"time": "2021-02-20 16:08:58.317689", "score": "0.3903", "loss": "1.8685", "code": "void unpack(MAVLinkPayload payload) { payload.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 86, "n_pass": [136, 20, 13]}
{"time": "2021-02-20 16:08:59.628527", "score": "0.2628", "loss": "2.5771", "code": "d unpack(MAVLinkPayload payload) { payload.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 83, "n_pass": [138, 21, 14]}
{"time": "2021-02-20 16:09:04.308599", "score": "0.7716", "loss": "0.6742", "code": "d unpack(MAVLinyload payload) { payload.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 80, "n_pass": [144, 24, 15]}
{"time": "2021-02-20 16:09:05.624375", "score": "0.7716", "loss": "0.6742", "code": "d unpack(MAVLinad payload) { payload.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 77, "n_pass": [145, 25, 16]}
{"time": "2021-02-20 16:09:06.939337", "score": "0.4972", "loss": "1.7631", "code": "d unpack(MAVLinad load) { payload.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 74, "n_pass": [147, 26, 17]}
{"time": "2021-02-20 16:09:08.248462", "score": "0.1988", "loss": "3.1029", "code": "d unpack(MAVLinad load) { oad.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 70, "n_pass": [150, 27, 18]}
{"time": "2021-02-20 16:09:17.557733", "score": "0.1628", "loss": "3.577", "code": "d unpack(MAVLinad load) { d.resByte(); for (int i = 0;le; i++) { } }", "n_tokens": 68, "n_pass": [208, 33, 19]}
{"time": "2021-02-20 16:09:22.840218", "score": "0.2361", "loss": "3.0943", "code": "d unpack(MAVLinad load) { d.resByte(); for (t i = 0;le; i++) { } }", "n_tokens": 66, "n_pass": [217, 37, 20]}
{"time": "2021-02-20 16:09:33.310585", "score": "0.3552", "loss": "2.001", "code": "d unpack(MAVLid load) { d.resByte(); for (t i = 0;le; i++) { } }", "n_tokens": 64, "n_pass": [239, 43, 21]}
{"time": "2021-02-20 16:09:34.657001", "score": "0.4923", "loss": "1.3459", "code": "d unpack(MAVLid ad) { d.resByte(); for (t i = 0;le; i++) { } }", "n_tokens": 62, "n_pass": [241, 44, 22]}
{"time": "2021-02-20 16:09:36.022099", "score": "0.4843", "loss": "1.3772", "code": "d unpack(MAVLid ad) { resByte(); for (t i = 0;le; i++) { } }", "n_tokens": 60, "n_pass": [245, 45, 23]}
{"time": "2021-02-20 16:09:37.335085", "score": "0.4225", "loss": "1.4537", "code": "d unpack(MAVLid ad) { sByte(); for (t i = 0;le; i++) { } }", "n_tokens": 58, "n_pass": [246, 46, 24]}
{"time": "2021-02-20 16:09:41.282107", "score": "0.4628", "loss": "1.1978", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;le; i++) { } }", "n_tokens": 56, "n_pass": [254, 49, 25]}
{"time": "2021-02-20 16:09:42.577033", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;; i++) { } }", "n_tokens": 54, "n_pass": [258, 50, 26]}
{"time": "2021-02-20 16:09:56.262608", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;;i++) { } }", "n_tokens": 53, "n_pass": [337, 55, 27]}
{"time": "2021-02-20 16:09:57.557616", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;;i++){ } }", "n_tokens": 52, "n_pass": [342, 56, 28]}
{"time": "2021-02-20 16:09:58.870908", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;;i++){} }", "n_tokens": 51, "n_pass": [344, 57, 29]}
{"time": "2021-02-20 16:10:00.179971", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad) { sByte(); for (i = 0;;i++){}}", "n_tokens": 50, "n_pass": [346, 58, 30]}
{"time": "2021-02-20 16:10:14.755057", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad){ sByte(); for (i = 0;;i++){}}", "n_tokens": 49, "n_pass": [367, 67, 31]}
{"time": "2021-02-20 16:10:16.072723", "score": "0.3313", "loss": "1.9695", "code": "d unpack(MAVLid ad){sByte(); for (i = 0;;i++){}}", "n_tokens": 48, "n_pass": [369, 68, 32]}
{"time": "2021-02-20 16:10:17.381905", "score": "0.3042", "loss": "2.0496", "code": "d unpack(MAVLid ad){Byte(); for (i = 0;;i++){}}", "n_tokens": 47, "n_pass": [370, 69, 33]}
{"time": "2021-02-20 16:10:19.983387", "score": "0.2457", "loss": "2.3113", "code": "d unpack(MAVLid ad){Bte(); for (i = 0;;i++){}}", "n_tokens": 46, "n_pass": [372, 71, 34]}
{"time": "2021-02-20 16:10:23.912175", "score": "0.2457", "loss": "2.3113", "code": "d unpack(MAVLid ad){Bte();for (i = 0;;i++){}}", "n_tokens": 45, "n_pass": [378, 74, 35]}
{"time": "2021-02-20 16:10:25.225913", "score": "0.2457", "loss": "2.3113", "code": "d unpack(MAVLid ad){Bte();for(i = 0;;i++){}}", "n_tokens": 44, "n_pass": [382, 75, 36]}
{"time": "2021-02-20 16:10:26.539926", "score": "0.2457", "loss": "2.3113", "code": "d unpack(MAVLid ad){Bte();for(i= 0;;i++){}}", "n_tokens": 43, "n_pass": [385, 76, 37]}
{"time": "2021-02-20 16:10:27.847990", "score": "0.2457", "loss": "2.3113", "code": "d unpack(MAVLid ad){Bte();for(i=0;;i++){}}", "n_tokens": 42, "n_pass": [387, 77, 38]}

Minimal simplified code:
d unpack(MAVLid ad){Bte();for(i=0;;i++){}}

