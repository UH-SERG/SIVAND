
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/StateData_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); sb.append(" instanceName: "); sb.append(instanceName).append(LINE_SEP); sb.append(" isInstanceData: "); sb.append(isInstanceData).append(LINE_SEP); sb.append(" nameValueMap:").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(" "); sb.append((String) me.getKey()).append(" = "); sb.append(me.getValue().toString()).append("\n"); } return sb.toString(); }
predict, score, loss = toString, 0.9722585678100586, 0.09765231609344482

Trace of simplified code(s):
{"time": "2021-02-19 23:47:39.730413", "score": "0.9107", "loss": "0.2998", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append(\" isInstanceData: \"); sb.append(isInstanceData).append(LINE_SEP); sb.append(\" nameValueMap:\").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 514, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 23:47:41.121589", "score": "0.9631", "loss": "0.1358", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 386, "n_pass": [9, 2, 2]}
{"time": "2021-02-19 23:47:42.888583", "score": "0.9392", "loss": "0.2142", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 353, "n_pass": [43, 3, 3]}
{"time": "2021-02-19 23:47:44.300805", "score": "0.923", "loss": "0.2985", "code": "public String toString() { StringBuffer sb = new StringBuffer();b.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 321, "n_pass": [47, 4, 4]}
{"time": "2021-02-19 23:47:45.694340", "score": "0.9153", "loss": "0.3253", "code": "public String toString() { Strinb.append(instanceName).append(LI); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 289, "n_pass": [57, 5, 5]}
{"time": "2021-02-19 23:47:47.062211", "score": "0.9206", "loss": "0.3122", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 273, "n_pass": [86, 6, 6]}
{"time": "2021-02-19 23:47:48.420149", "score": "0.9171", "loss": "0.3169", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 257, "n_pass": [89, 7, 7]}
{"time": "2021-02-19 23:47:49.803375", "score": "0.8999", "loss": "0.3738", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 241, "n_pass": [94, 8, 8]}
{"time": "2021-02-19 23:47:51.142030", "score": "0.8485", "loss": "0.5668", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); sb.append(\"\\n\"); } return sb.toString(); }", "n_tokens": 225, "n_pass": [95, 9, 9]}
{"time": "2021-02-19 23:47:52.881999", "score": "0.8206", "loss": "0.751", "code": "public String toString() { Strinb.append(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 217, "n_pass": [143, 10, 10]}
{"time": "2021-02-19 23:47:57.333571", "score": "0.8335", "loss": "0.7352", "code": "public String toString() { Strin(instanc); Iterator iter = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 209, "n_pass": [152, 13, 11]}
{"time": "2021-02-19 23:47:58.692268", "score": "0.8658", "loss": "0.5982", "code": "public String toString() { Strin(instanc); Itera = nameValueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 201, "n_pass": [155, 14, 12]}
{"time": "2021-02-19 23:48:00.024651", "score": "0.8383", "loss": "0.707", "code": "public String toString() { Strin(instanc); IteraalueMap.tor(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 193, "n_pass": [156, 15, 13]}
{"time": "2021-02-19 23:48:01.368167", "score": "0.9273", "loss": "0.3475", "code": "public String toString() { Strin(instanc); Iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 185, "n_pass": [157, 16, 14]}
{"time": "2021-02-19 23:48:02.763273", "score": "0.9067", "loss": "0.4483", "code": "public String toString() { Strin(instanc); Iterator(); while (itxt()) { Map.Entry me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 177, "n_pass": [160, 17, 15]}
{"time": "2021-02-19 23:48:04.126066", "score": "0.8982", "loss": "0.4654", "code": "public String toString() { Strin(instanc); Iterator(); while (itxt()) { y me = (Map.Entry) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 169, "n_pass": [162, 18, 16]}
{"time": "2021-02-19 23:48:05.486966", "score": "0.8785", "loss": "0.5289", "code": "public String toString() { Strin(instanc); Iterator(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 161, "n_pass": [164, 19, 17]}
{"time": "2021-02-19 23:48:08.191726", "score": "0.8057", "loss": "0.9101", "code": "tring toString() { Strin(instanc); Iterator(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 153, "n_pass": [175, 21, 18]}
{"time": "2021-02-19 23:48:11.249421", "score": "0.7761", "loss": "1.1302", "code": "g toString() { Strin(instanc); Iterator(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 149, "n_pass": [233, 23, 19]}
{"time": "2021-02-19 23:48:12.982378", "score": "0.8472", "loss": "0.8114", "code": "g toString() { S(instanc); Iterator(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 145, "n_pass": [237, 24, 20]}
{"time": "2021-02-19 23:48:14.429039", "score": "0.822", "loss": "0.9424", "code": "g toString() { S(ins); Iterator(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 141, "n_pass": [239, 25, 21]}
{"time": "2021-02-19 23:48:15.841757", "score": "0.719", "loss": "1.4785", "code": "g toString() { S(ins); Itor(); while (itxt()) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 137, "n_pass": [241, 26, 22]}
{"time": "2021-02-19 23:48:17.208679", "score": "0.8358", "loss": "0.8531", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) iter.d((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 133, "n_pass": [246, 27, 23]}
{"time": "2021-02-19 23:48:18.550787", "score": "0.7727", "loss": "1.195", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((String) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 129, "n_pass": [251, 28, 24]}
{"time": "2021-02-19 23:48:19.904589", "score": "0.7632", "loss": "1.2861", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) me.getKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 125, "n_pass": [253, 29, 25]}
{"time": "2021-02-19 23:48:21.247493", "score": "0.6476", "loss": "2.0765", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) mtKey()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 121, "n_pass": [255, 30, 26]}
{"time": "2021-02-19 23:48:22.576772", "score": "0.7758", "loss": "1.3644", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).append(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 117, "n_pass": [256, 31, 27]}
{"time": "2021-02-19 23:48:23.939364", "score": "0.7083", "loss": "1.7711", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" = \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 113, "n_pass": [258, 32, 28]}
{"time": "2021-02-19 23:48:30.366345", "score": "0.703", "loss": "1.9057", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \"); s(\"\\n\"); } return sb.toString(); }", "n_tokens": 111, "n_pass": [345, 36, 29]}
{"time": "2021-02-19 23:48:31.726379", "score": "0.728", "loss": "1.7943", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\\n\"); } return sb.toString(); }", "n_tokens": 109, "n_pass": [347, 37, 30]}
{"time": "2021-02-19 23:48:33.076117", "score": "0.728", "loss": "1.7943", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } return sb.toString(); }", "n_tokens": 107, "n_pass": [349, 38, 31]}
{"time": "2021-02-19 23:48:34.433042", "score": "0.6596", "loss": "2.1005", "code": "g toString() { S(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 105, "n_pass": [356, 39, 32]}
{"time": "2021-02-19 23:48:45.713597", "score": "0.672", "loss": "2.0662", "code": "g toString() {(ins); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 103, "n_pass": [371, 46, 33]}
{"time": "2021-02-19 23:48:47.037432", "score": "0.6808", "loss": "1.9335", "code": "g toString() {(i); Itor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 101, "n_pass": [373, 47, 34]}
{"time": "2021-02-19 23:48:48.364923", "score": "0.6933", "loss": "1.7707", "code": "g toString() {(i);tor(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 99, "n_pass": [375, 48, 35]}
{"time": "2021-02-19 23:48:49.719495", "score": "0.7231", "loss": "1.708", "code": "g toString() {(i);r(); while (it) { y me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 97, "n_pass": [376, 49, 36]}
{"time": "2021-02-19 23:48:51.062814", "score": "0.7434", "loss": "1.5009", "code": "g toString() {(i);r(); while (it) { me = (y) id((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 95, "n_pass": [386, 50, 37]}
{"time": "2021-02-19 23:48:52.383711", "score": "0.7451", "loss": "1.4382", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m()).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 93, "n_pass": [391, 51, 38]}
{"time": "2021-02-19 23:48:53.733086", "score": "0.7736", "loss": "1.29", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } returnb.toString(); }", "n_tokens": 91, "n_pass": [396, 52, 39]}
{"time": "2021-02-19 23:48:55.103197", "score": "0.7736", "loss": "1.29", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } turnb.toString(); }", "n_tokens": 89, "n_pass": [406, 53, 40]}
{"time": "2021-02-19 23:48:56.449308", "score": "0.8503", "loss": "0.8534", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } rnb.toString(); }", "n_tokens": 87, "n_pass": [407, 54, 41]}
{"time": "2021-02-19 23:48:57.795717", "score": "0.8772", "loss": "0.7334", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } b.toString(); }", "n_tokens": 85, "n_pass": [408, 55, 42]}
{"time": "2021-02-19 23:48:59.123296", "score": "0.6387", "loss": "2.0453", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } toString(); }", "n_tokens": 83, "n_pass": [409, 56, 43]}
{"time": "2021-02-19 23:49:05.729498", "score": "0.75", "loss": "1.4315", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg) m).nd(\" \");(\"\"); } toString; }", "n_tokens": 81, "n_pass": [414, 61, 44]}
{"time": "2021-02-19 23:49:08.931108", "score": "0.7865", "loss": "1.2415", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } toString; }", "n_tokens": 79, "n_pass": [441, 62, 45]}
{"time": "2021-02-19 23:49:10.265197", "score": "0.5545", "loss": "2.5586", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } String; }", "n_tokens": 77, "n_pass": [451, 63, 46]}
{"time": "2021-02-19 23:49:11.612550", "score": "0.5125", "loss": "2.9685", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } ring; }", "n_tokens": 75, "n_pass": [452, 64, 47]}
{"time": "2021-02-19 23:49:22.850811", "score": "0.4343", "loss": "3.3783", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } ing; }", "n_tokens": 74, "n_pass": [564, 67, 48]}
{"time": "2021-02-19 23:49:24.204334", "score": "0.3522", "loss": "3.8437", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } ig; }", "n_tokens": 73, "n_pass": [565, 68, 49]}
{"time": "2021-02-19 23:49:25.556057", "score": "0.3922", "loss": "3.5433", "code": "g toString() {(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 72, "n_pass": [566, 69, 50]}
{"time": "2021-02-19 23:49:30.595951", "score": "0.3922", "loss": "3.5433", "code": "g toString(){(i);r(); while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 71, "n_pass": [581, 70, 51]}
{"time": "2021-02-19 23:49:32.287320", "score": "0.3922", "loss": "3.5433", "code": "g toString(){(i);r();while (it) { me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 70, "n_pass": [591, 71, 52]}
{"time": "2021-02-19 23:49:33.643917", "score": "0.3922", "loss": "3.5433", "code": "g toString(){(i);r();while(it) { me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 69, "n_pass": [597, 72, 53]}
{"time": "2021-02-19 23:49:34.968929", "score": "0.3897", "loss": "3.5524", "code": "g toString(){(i);r();while(t) { me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 68, "n_pass": [599, 73, 54]}
{"time": "2021-02-19 23:49:36.322115", "score": "0.3897", "loss": "3.5524", "code": "g toString(){(i);r();while(t){ me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 67, "n_pass": [602, 74, 55]}
{"time": "2021-02-19 23:49:37.680813", "score": "0.3897", "loss": "3.5524", "code": "g toString(){(i);r();while(t){me = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 66, "n_pass": [604, 75, 56]}
{"time": "2021-02-19 23:49:39.035061", "score": "0.5178", "loss": "2.901", "code": "g toString(){(i);r();while(t){e = (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 65, "n_pass": [605, 76, 57]}
{"time": "2021-02-19 23:49:40.357586", "score": "0.5178", "loss": "2.901", "code": "g toString(){(i);r();while(t){e= (y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 64, "n_pass": [607, 77, 58]}
{"time": "2021-02-19 23:49:41.681700", "score": "0.5178", "loss": "2.901", "code": "g toString(){(i);r();while(t){e=(y)d((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 63, "n_pass": [609, 78, 59]}
{"time": "2021-02-19 23:49:43.024503", "score": "0.6064", "loss": "2.3943", "code": "g toString(){(i);r();while(t){e=(y)((Sg)).nd(\" \");(\"\"); } i; }", "n_tokens": 62, "n_pass": [613, 79, 60]}
{"time": "2021-02-19 23:49:44.362480", "score": "0.5838", "loss": "2.4009", "code": "g toString(){(i);r();while(t){e=(y)((g)).nd(\" \");(\"\"); } i; }", "n_tokens": 61, "n_pass": [616, 80, 61]}
{"time": "2021-02-19 23:49:45.717910", "score": "0.5841", "loss": "2.4955", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\" \");(\"\"); } i; }", "n_tokens": 60, "n_pass": [621, 81, 62]}
{"time": "2021-02-19 23:49:47.096630", "score": "0.5408", "loss": "2.6652", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\"); } i; }", "n_tokens": 59, "n_pass": [625, 82, 63]}
{"time": "2021-02-19 23:49:48.452250", "score": "0.5408", "loss": "2.6652", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");} i; }", "n_tokens": 58, "n_pass": [634, 83, 64]}
{"time": "2021-02-19 23:49:49.804707", "score": "0.5408", "loss": "2.6652", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}i; }", "n_tokens": 57, "n_pass": [636, 84, 65]}
{"time": "2021-02-19 23:49:51.145970", "score": "0.5039", "loss": "3.0028", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}; }", "n_tokens": 56, "n_pass": [637, 85, 66]}
{"time": "2021-02-19 23:49:52.506591", "score": "0.5039", "loss": "3.0028", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");} }", "n_tokens": 55, "n_pass": [638, 86, 67]}
{"time": "2021-02-19 23:49:58.223690", "score": "0.5039", "loss": "3.0028", "code": "g toString(){(i);r();while(t){e=(y)((g)).d(\"\");(\"\");}}", "n_tokens": 54, "n_pass": [695, 87, 68]}

Minimal simplified code:
g toString(){(i);r();while(t){e=(y)((g)).d("");("");}}

