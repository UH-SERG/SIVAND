
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/facebook__stetho/stetho/src/main/java/com/facebook/stetho/common/ProcessUtil_getProcessName.java
method_name = getProcessName
method_body = @Nullable public static synchronized String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }
predict, score, loss = getProcessName, 0.9753831028938293, 0.12362086772918701

Trace of simplified code(s):
{"time": "2021-02-19 18:10:43.452464", "score": "0.9754", "loss": "0.1236", "code": "@Nullable public static synchronized String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 205, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 18:10:45.539395", "score": "0.9754", "loss": "0.1236", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { sProcessNameRead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 193, "n_pass": [46, 2, 2]}
{"time": "2021-02-19 18:10:47.236937", "score": "0.9627", "loss": "0.1956", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sProcessName = readProcessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 180, "n_pass": [51, 3, 3]}
{"time": "2021-02-19 18:10:48.600098", "score": "0.9324", "loss": "0.3313", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sProcessocessName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 167, "n_pass": [54, 4, 4]}
{"time": "2021-02-19 18:10:50.350887", "score": "0.9328", "loss": "0.3416", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPressName(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 160, "n_pass": [94, 5, 5]}
{"time": "2021-02-19 18:10:51.682839", "score": "0.9399", "loss": "0.2845", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (IOException e) { } } return sProcessName; }", "n_tokens": 153, "n_pass": [95, 6, 6]}
{"time": "2021-02-19 18:10:53.046542", "score": "0.9521", "loss": "0.2353", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } return sProcessName; }", "n_tokens": 146, "n_pass": [98, 7, 7]}
{"time": "2021-02-19 18:10:54.382188", "score": "0.8801", "loss": "0.7252", "code": "@Nullable public static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 139, "n_pass": [101, 8, 8]}
{"time": "2021-02-19 18:10:57.096723", "score": "0.8353", "loss": "1.0128", "code": "@Nullablic static  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 133, "n_pass": [105, 10, 9]}
{"time": "2021-02-19 18:10:58.424345", "score": "0.8353", "loss": "1.0128", "code": "@Nullatatic  String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 127, "n_pass": [106, 11, 10]}
{"time": "2021-02-19 18:10:59.724094", "score": "0.8296", "loss": "1.1249", "code": "@Nulla String getProcessName() { if (!sProcessNameRead) { ead = true; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 121, "n_pass": [107, 12, 11]}
{"time": "2021-02-19 18:11:03.511817", "score": "0.8019", "loss": "1.3562", "code": "@Nulla String getProcessName() { if (!sProcessNa) { ead = true; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 115, "n_pass": [115, 14, 12]}
{"time": "2021-02-19 18:11:04.838554", "score": "0.8568", "loss": "0.9812", "code": "@Nulla String getProcessName() { if (!sProcessNa) { eaue; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 109, "n_pass": [117, 15, 13]}
{"time": "2021-02-19 18:11:07.485837", "score": "0.9156", "loss": "0.5219", "code": " String getProcessName() { if (!sProcessNa) { eaue; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 103, "n_pass": [126, 17, 14]}
{"time": "2021-02-19 18:11:08.816827", "score": "0.7034", "loss": "1.6903", "code": "g getProcessName() { if (!sProcessNa) { eaue; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 97, "n_pass": [127, 18, 15]}
{"time": "2021-02-19 18:11:19.439291", "score": "0.7909", "loss": "1.119", "code": "g getProcessName() { if (!sProcessNa) {ue; try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 94, "n_pass": [186, 24, 16]}
{"time": "2021-02-19 18:11:20.773762", "score": "0.7216", "loss": "1.4908", "code": "g getProcessName() { if (!sProcessNa) { try { sPr(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 91, "n_pass": [187, 25, 17]}
{"time": "2021-02-19 18:11:22.085780", "score": "0.6995", "loss": "1.6193", "code": "g getProcessName() { if (!sProcessNa) { try {r(); } catch (Iion e) { } } rProcessName; }", "n_tokens": 88, "n_pass": [190, 26, 18]}
{"time": "2021-02-19 18:11:23.408267", "score": "0.7794", "loss": "1.1696", "code": "g getProcessName() { if (!sProcessNa) { try {; } catch (Iion e) { } } rProcessName; }", "n_tokens": 85, "n_pass": [191, 27, 19]}
{"time": "2021-02-19 18:11:35.454802", "score": "0.7794", "loss": "1.1696", "code": "g getProcessName() { if (!sProcessNa) { try {} catch (Iion e) { } } rProcessName; }", "n_tokens": 83, "n_pass": [272, 34, 20]}
{"time": "2021-02-19 18:11:36.781469", "score": "0.6692", "loss": "1.7831", "code": "g getProcessName() { if (!sProcessNa) { try {} catch (In e) { } } rProcessName; }", "n_tokens": 81, "n_pass": [278, 35, 21]}
{"time": "2021-02-19 18:11:51.931771", "score": "0.6692", "loss": "1.7831", "code": "g getProcessName(){ if (!sProcessNa) { try {} catch (In e) { } } rProcessName; }", "n_tokens": 80, "n_pass": [310, 42, 22]}
{"time": "2021-02-19 18:12:24.998100", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN) { try {} catch (In e) { } } rProcessName; }", "n_tokens": 79, "n_pass": [427, 59, 23]}
{"time": "2021-02-19 18:12:26.321378", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN){ try {} catch (In e) { } } rProcessName; }", "n_tokens": 78, "n_pass": [428, 60, 24]}
{"time": "2021-02-19 18:12:27.651365", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN){try {} catch (In e) { } } rProcessName; }", "n_tokens": 77, "n_pass": [430, 61, 25]}
{"time": "2021-02-19 18:12:28.966827", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN){try{} catch (In e) { } } rProcessName; }", "n_tokens": 76, "n_pass": [434, 62, 26]}
{"time": "2021-02-19 18:12:30.277984", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN){try{}catch (In e) { } } rProcessName; }", "n_tokens": 75, "n_pass": [437, 63, 27]}
{"time": "2021-02-19 18:12:31.595755", "score": "0.7779", "loss": "1.0303", "code": "g getProcessName(){ if (!sProcessN){try{}catch(In e) { } } rProcessName; }", "n_tokens": 74, "n_pass": [443, 64, 28]}
{"time": "2021-02-19 18:12:32.904939", "score": "0.8418", "loss": "0.7039", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e) { } } rProcessName; }", "n_tokens": 73, "n_pass": [445, 65, 29]}
{"time": "2021-02-19 18:12:34.232075", "score": "0.8418", "loss": "0.7039", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){ } } rProcessName; }", "n_tokens": 72, "n_pass": [450, 66, 30]}
{"time": "2021-02-19 18:12:35.569064", "score": "0.8418", "loss": "0.7039", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){} } rProcessName; }", "n_tokens": 71, "n_pass": [452, 67, 31]}
{"time": "2021-02-19 18:12:36.881708", "score": "0.8418", "loss": "0.7039", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){}} rProcessName; }", "n_tokens": 70, "n_pass": [454, 68, 32]}
{"time": "2021-02-19 18:12:38.221396", "score": "0.8418", "loss": "0.7039", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){}}rProcessName; }", "n_tokens": 69, "n_pass": [456, 69, 33]}
{"time": "2021-02-19 18:12:39.532821", "score": "0.9409", "loss": "0.3453", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){}}ProcessName; }", "n_tokens": 68, "n_pass": [457, 70, 34]}
{"time": "2021-02-19 18:12:55.295768", "score": "0.9409", "loss": "0.3453", "code": "g getProcessName(){ if (!sProcessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 67, "n_pass": [470, 82, 35]}
{"time": "2021-02-19 18:13:02.500062", "score": "0.9409", "loss": "0.3453", "code": "g getProcessName(){if (!sProcessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 66, "n_pass": [491, 83, 36]}
{"time": "2021-02-19 18:13:03.809238", "score": "0.9409", "loss": "0.3453", "code": "g getProcessName(){if(!sProcessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 65, "n_pass": [494, 84, 37]}
{"time": "2021-02-19 18:13:05.122942", "score": "0.9007", "loss": "0.6149", "code": "g getProcessName(){if(sProcessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 64, "n_pass": [496, 85, 38]}
{"time": "2021-02-19 18:13:06.435804", "score": "0.8758", "loss": "0.7701", "code": "g getProcessName(){if(ProcessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 63, "n_pass": [497, 86, 39]}
{"time": "2021-02-19 18:13:07.757806", "score": "0.8188", "loss": "1.1711", "code": "g getProcessName(){if(rocessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 62, "n_pass": [498, 87, 40]}
{"time": "2021-02-19 18:13:09.071129", "score": "0.8188", "loss": "1.1711", "code": "g getProcessName(){if(ocessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 61, "n_pass": [499, 88, 41]}
{"time": "2021-02-19 18:13:10.384236", "score": "0.8188", "loss": "1.1711", "code": "g getProcessName(){if(cessN){try{}catch(n e){}}ProcessName;}", "n_tokens": 60, "n_pass": [500, 89, 42]}
{"time": "2021-02-19 18:13:11.718422", "score": "0.7945", "loss": "1.3021", "code": "g getProcessName(){if(essN){try{}catch(n e){}}ProcessName;}", "n_tokens": 59, "n_pass": [501, 90, 43]}
{"time": "2021-02-19 18:13:13.031774", "score": "0.8163", "loss": "1.2057", "code": "g getProcessName(){if(ssN){try{}catch(n e){}}ProcessName;}", "n_tokens": 58, "n_pass": [502, 91, 44]}
{"time": "2021-02-19 18:13:14.352938", "score": "0.8081", "loss": "1.1882", "code": "g getProcessName(){if(sN){try{}catch(n e){}}ProcessName;}", "n_tokens": 57, "n_pass": [503, 92, 45]}
{"time": "2021-02-19 18:13:15.696809", "score": "0.8067", "loss": "1.2368", "code": "g getProcessName(){if(N){try{}catch(n e){}}ProcessName;}", "n_tokens": 56, "n_pass": [504, 93, 46]}

Minimal simplified code:
g getProcessName(){if(N){try{}catch(n e){}}ProcessName;}

