
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/ConstraintDefinitionNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, "columnList: "); columnList.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9976354241371155, 0.008137715049088001

Trace of simplified code(s):
{"time": "2021-02-19 12:11:37.513801", "score": "0.9976", "loss": "0.0081", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 164, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 12:11:39.251762", "score": "0.9968", "loss": "0.0108", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 154, "n_pass": [44, 2, 2]}
{"time": "2021-02-19 12:11:41.918027", "score": "0.9928", "loss": "0.0231", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); colePrint(depth + 1); } }", "n_tokens": 143, "n_pass": [56, 4, 3]}
{"time": "2021-02-19 12:11:44.980458", "score": "0.9914", "loss": "0.0273", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); cont(depth + 1); } }", "n_tokens": 138, "n_pass": [99, 6, 4]}
{"time": "2021-02-19 12:11:46.316406", "score": "0.9843", "loss": "0.0494", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); cont(dep); } }", "n_tokens": 132, "n_pass": [101, 7, 5]}
{"time": "2021-02-19 12:11:52.764614", "score": "0.9882", "loss": "0.0371", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colut != null) { printLabel(depth, \"columnList: \"); cont(dep); } }", "n_tokens": 127, "n_pass": [116, 11, 6]}
{"time": "2021-02-19 12:11:54.109347", "score": "0.9745", "loss": "0.0808", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"columnList: \"); cont(dep); } }", "n_tokens": 122, "n_pass": [117, 12, 7]}
{"time": "2021-02-19 12:11:56.747685", "score": "0.9781", "loss": "0.0694", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"colst: \"); cont(dep); } }", "n_tokens": 117, "n_pass": [124, 14, 8]}
{"time": "2021-02-19 12:12:04.445678", "score": "0.9756", "loss": "0.0772", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"ct: \"); cont(dep); } }", "n_tokens": 114, "n_pass": [194, 19, 9]}
{"time": "2021-02-19 12:12:05.764407", "score": "0.9785", "loss": "0.0681", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\"); cont(dep); } }", "n_tokens": 111, "n_pass": [195, 20, 10]}
{"time": "2021-02-19 12:12:07.079221", "score": "0.9793", "loss": "0.0656", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\");nt(dep); } }", "n_tokens": 108, "n_pass": [197, 21, 11]}
{"time": "2021-02-19 12:12:08.391986", "score": "0.9864", "loss": "0.0432", "code": "d printSubNodes(int depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 105, "n_pass": [199, 22, 12]}
{"time": "2021-02-19 12:12:12.314844", "score": "0.9812", "loss": "0.0594", "code": "d printSubNodes(t depth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 103, "n_pass": [210, 23, 13]}
{"time": "2021-02-19 12:12:13.644385", "score": "0.9882", "loss": "0.0378", "code": "d printSubNodes(t pth) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 101, "n_pass": [212, 24, 14]}
{"time": "2021-02-19 12:12:14.989798", "score": "0.9752", "loss": "0.0789", "code": "d printSubNodes(t h) { super.printSubNodes(depth); if (colunull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 99, "n_pass": [213, 25, 15]}
{"time": "2021-02-19 12:12:28.388541", "score": "0.979", "loss": "0.067", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (colunull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 96, "n_pass": [226, 35, 16]}
{"time": "2021-02-19 12:12:29.727146", "score": "0.979", "loss": "0.067", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (coull) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 93, "n_pass": [230, 36, 17]}
{"time": "2021-02-19 12:12:31.053341", "score": "0.954", "loss": "0.1501", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (co) { printLabel(depth, \"c\");nt(); } }", "n_tokens": 90, "n_pass": [231, 37, 18]}
{"time": "2021-02-19 12:12:32.362568", "score": "0.8454", "loss": "0.6241", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (co) {intLabel(depth, \"c\");nt(); } }", "n_tokens": 87, "n_pass": [233, 38, 19]}
{"time": "2021-02-19 12:12:33.681156", "score": "0.8484", "loss": "0.6077", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (co) {Label(depth, \"c\");nt(); } }", "n_tokens": 84, "n_pass": [234, 39, 20]}
{"time": "2021-02-19 12:12:36.322006", "score": "0.8673", "loss": "0.5089", "code": "d printSubNodes(t h) { super.printSubNodes(de); if (co) {Label(th, \"c\");nt(); } }", "n_tokens": 81, "n_pass": [237, 41, 21]}
{"time": "2021-02-19 12:12:41.558618", "score": "0.5158", "loss": "2.8218", "code": "d printSubNodes(t h) {uper.printSubNodes(de); if (co) {Label(th, \"c\");nt(); } }", "n_tokens": 79, "n_pass": [255, 43, 22]}
{"time": "2021-02-19 12:12:42.892768", "score": "0.651", "loss": "1.943", "code": "d printSubNodes(t h) {er.printSubNodes(de); if (co) {Label(th, \"c\");nt(); } }", "n_tokens": 77, "n_pass": [256, 44, 23]}
{"time": "2021-02-19 12:12:52.130687", "score": "0.604", "loss": "2.1154", "code": "d printSubNodes(t h) {er.printSubNodes(de); if (co) {el(th, \"c\");nt(); } }", "n_tokens": 74, "n_pass": [269, 51, 24]}
{"time": "2021-02-19 12:13:12.626905", "score": "0.604", "loss": "2.1154", "code": "d printSubNodes(t h){er.printSubNodes(de); if (co) {el(th, \"c\");nt(); } }", "n_tokens": 73, "n_pass": [394, 59, 25]}
{"time": "2021-02-19 12:13:13.948056", "score": "0.5288", "loss": "2.766", "code": "d printSubNodes(t h){r.printSubNodes(de); if (co) {el(th, \"c\");nt(); } }", "n_tokens": 72, "n_pass": [395, 60, 26]}
{"time": "2021-02-19 12:13:36.414427", "score": "0.5288", "loss": "2.766", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th, \"c\");nt(); } }", "n_tokens": 71, "n_pass": [416, 77, 27]}
{"time": "2021-02-19 12:14:10.857977", "score": "0.5288", "loss": "2.766", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th,\"c\");nt(); } }", "n_tokens": 70, "n_pass": [507, 97, 28]}
{"time": "2021-02-19 12:14:12.198082", "score": "0.6202", "loss": "2.2503", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th,\"\");nt(); } }", "n_tokens": 69, "n_pass": [509, 98, 29]}
{"time": "2021-02-19 12:14:13.522177", "score": "0.7005", "loss": "1.7842", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th,\"\");t(); } }", "n_tokens": 68, "n_pass": [513, 99, 30]}
{"time": "2021-02-19 12:14:14.845753", "score": "0.7005", "loss": "1.7842", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th,\"\");t();} }", "n_tokens": 67, "n_pass": [518, 100, 31]}
{"time": "2021-02-19 12:14:16.172875", "score": "0.7005", "loss": "1.7842", "code": "d printSubNodes(t h){r.printSubNodes(de);if (co) {el(th,\"\");t();}}", "n_tokens": 66, "n_pass": [520, 101, 32]}
{"time": "2021-02-19 12:14:41.644895", "score": "0.6976", "loss": "1.5943", "code": "d printSubNodes(t h){r.printSubNodes(e);if (co) {el(th,\"\");t();}}", "n_tokens": 65, "n_pass": [559, 116, 33]}
{"time": "2021-02-19 12:14:42.974154", "score": "0.6396", "loss": "1.9626", "code": "d printSubNodes(t h){r.printSubNodes();if (co) {el(th,\"\");t();}}", "n_tokens": 64, "n_pass": [560, 117, 34]}
{"time": "2021-02-19 12:14:44.292901", "score": "0.6396", "loss": "1.9626", "code": "d printSubNodes(t h){r.printSubNodes();if(co) {el(th,\"\");t();}}", "n_tokens": 63, "n_pass": [565, 118, 35]}
{"time": "2021-02-19 12:14:45.615428", "score": "0.5947", "loss": "2.1169", "code": "d printSubNodes(t h){r.printSubNodes();if(o) {el(th,\"\");t();}}", "n_tokens": 62, "n_pass": [567, 119, 36]}
{"time": "2021-02-19 12:14:46.936225", "score": "0.5947", "loss": "2.1169", "code": "d printSubNodes(t h){r.printSubNodes();if(o){el(th,\"\");t();}}", "n_tokens": 61, "n_pass": [570, 120, 37]}
{"time": "2021-02-19 12:14:48.251572", "score": "0.663", "loss": "1.8011", "code": "d printSubNodes(t h){r.printSubNodes();if(o){l(th,\"\");t();}}", "n_tokens": 60, "n_pass": [572, 121, 38]}
{"time": "2021-02-19 12:14:50.889843", "score": "0.5134", "loss": "2.6015", "code": "d printSubNodes(t h){r.printSubNodes();if(o){l(t,\"\");t();}}", "n_tokens": 59, "n_pass": [576, 123, 39]}

Minimal simplified code:
d printSubNodes(t h){r.printSubNodes();if(o){l(t,"");t();}}

