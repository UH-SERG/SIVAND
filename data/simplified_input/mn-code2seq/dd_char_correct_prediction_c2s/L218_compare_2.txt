
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rover12421__ShakaApktool/shaka/lib/src/main/java/com/rover12421/shaka/lib/multiLanguage/MultiLanguageSupport_compare.java
method_name = compare
method_body = @Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }
predict, score, loss = compare, 0.999142050743103, 0.0017974532674998045

Trace of simplified code(s):
{"time": "2021-02-19 22:29:38.639092", "score": "0.9991", "loss": "0.0018", "code": "@Override public int compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 149, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 22:29:40.077101", "score": "0.9952", "loss": "0.0576", "code": "nt compare(String o1, String o2) { if (o2.length() == o1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 131, "n_pass": [20, 2, 2]}
{"time": "2021-02-19 22:29:41.888716", "score": "0.9987", "loss": "0.0211", "code": "nt compare(String o1, String o2) { if (o2.leno1.length()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 122, "n_pass": [47, 3, 3]}
{"time": "2021-02-19 22:29:43.328744", "score": "0.997", "loss": "0.0418", "code": "nt compare(String o1, String o2) { if (o2.len()) { return o2.compareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 113, "n_pass": [48, 4, 4]}
{"time": "2021-02-19 22:29:44.757859", "score": "0.4828", "loss": "1.4865", "code": "nt compare(String o1, String o2) { if (o2.len()) { retmpareTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 104, "n_pass": [50, 5, 5]}
{"time": "2021-02-19 22:29:48.380812", "score": "0.5031", "loss": "1.5053", "code": "nt compare(String o1, String o2) { if (o2.len()) { retTo(o1); } return o2.length() - o1.length(); }", "n_tokens": 99, "n_pass": [84, 7, 6]}
{"time": "2021-02-19 22:29:50.132578", "score": "0.6015", "loss": "1.2954", "code": "nt compare(String o1, String o2) { if (o2.len()) { retTo(o1); } return o2.h() - o1.length(); }", "n_tokens": 94, "n_pass": [88, 8, 7]}
{"time": "2021-02-19 22:29:52.969693", "score": "0.3932", "loss": "1.8001", "code": "nt compare(String o1, String o2) { if (o2.len()) { retTo(o1); } return o2.h() -ength(); }", "n_tokens": 89, "n_pass": [90, 10, 8]}
{"time": "2021-02-19 22:29:55.109344", "score": "0.572", "loss": "1.4016", "code": "nt compare(Sg o1, String o2) { if (o2.len()) { retTo(o1); } return o2.h() -ength(); }", "n_tokens": 85, "n_pass": [96, 11, 9]}
{"time": "2021-02-19 22:29:56.548484", "score": "0.5945", "loss": "1.2896", "code": "nt compare(Sg o1, String o2) { if (n()) { retTo(o1); } return o2.h() -ength(); }", "n_tokens": 80, "n_pass": [102, 12, 10]}
{"time": "2021-02-19 22:30:00.605514", "score": "0.549", "loss": "1.414", "code": "nt compare(Sg o1, String o2) { if (n) { retTo(o1); } return o2.h() -ength(); }", "n_tokens": 78, "n_pass": [156, 14, 11]}
{"time": "2021-02-19 22:30:02.090748", "score": "0.5761", "loss": "1.3382", "code": "nt compare(Sg o1, String o2) { if (n) { tTo(o1); } return o2.h() -ength(); }", "n_tokens": 76, "n_pass": [159, 15, 12]}
{"time": "2021-02-19 22:30:03.542221", "score": "0.7657", "loss": "0.9008", "code": "nt compare(Sg o1, String o2) { if (n) { (o1); } return o2.h() -ength(); }", "n_tokens": 73, "n_pass": [160, 16, 13]}
{"time": "2021-02-19 22:30:05.308487", "score": "0.5102", "loss": "1.532", "code": "nt compare(Sg o1, String o2) { if (n) { (o1); } return h() -ength(); }", "n_tokens": 70, "n_pass": [166, 17, 14]}
{"time": "2021-02-19 22:30:08.131890", "score": "0.4113", "loss": "1.8343", "code": "nt compare(Sg o1, String o2) { if (n) { (o1); } return h() -eh(); }", "n_tokens": 67, "n_pass": [169, 19, 15]}
{"time": "2021-02-19 22:30:09.507605", "score": "0.8018", "loss": "0.6459", "code": "nt compare(Sg o1, String o2) { if (n) { (o1); } return h() -e; }", "n_tokens": 64, "n_pass": [170, 20, 16]}
{"time": "2021-02-19 22:30:12.876775", "score": "0.6883", "loss": "0.8138", "code": "nt compare(Sg o1, ring o2) { if (n) { (o1); } return h() -e; }", "n_tokens": 62, "n_pass": [181, 21, 17]}
{"time": "2021-02-19 22:30:14.329173", "score": "0.7325", "loss": "0.7126", "code": "nt compare(Sg o1, ng o2) { if (n) { (o1); } return h() -e; }", "n_tokens": 60, "n_pass": [182, 22, 18]}
{"time": "2021-02-19 22:30:25.293420", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o2) { if (n) { (o1); } return h() -e; }", "n_tokens": 59, "n_pass": [261, 25, 19]}
{"time": "2021-02-19 22:30:26.743060", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o) { if (n) { (o1); } return h() -e; }", "n_tokens": 58, "n_pass": [264, 26, 20]}
{"time": "2021-02-19 22:30:28.179786", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o){ if (n) { (o1); } return h() -e; }", "n_tokens": 57, "n_pass": [266, 27, 21]}
{"time": "2021-02-19 22:30:29.666973", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o){if (n) { (o1); } return h() -e; }", "n_tokens": 56, "n_pass": [268, 28, 22]}
{"time": "2021-02-19 22:30:31.062043", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o){if(n) { (o1); } return h() -e; }", "n_tokens": 55, "n_pass": [271, 29, 23]}
{"time": "2021-02-19 22:30:32.512382", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o){if(n){ (o1); } return h() -e; }", "n_tokens": 54, "n_pass": [275, 30, 24]}
{"time": "2021-02-19 22:30:34.038452", "score": "0.809", "loss": "0.5558", "code": "nt compare(Sg o1, g o){if(n){(o1); } return h() -e; }", "n_tokens": 53, "n_pass": [277, 31, 25]}
{"time": "2021-02-19 22:30:35.432123", "score": "0.8263", "loss": "0.5463", "code": "nt compare(Sg o1, g o){if(n){(1); } return h() -e; }", "n_tokens": 52, "n_pass": [279, 32, 26]}
{"time": "2021-02-19 22:30:36.793618", "score": "0.8263", "loss": "0.5463", "code": "nt compare(Sg o1, g o){if(n){(1);} return h() -e; }", "n_tokens": 51, "n_pass": [283, 33, 27]}
{"time": "2021-02-19 22:30:38.286933", "score": "0.8263", "loss": "0.5463", "code": "nt compare(Sg o1, g o){if(n){(1);}return h() -e; }", "n_tokens": 50, "n_pass": [285, 34, 28]}
{"time": "2021-02-19 22:30:39.655483", "score": "0.8944", "loss": "0.3543", "code": "nt compare(Sg o1, g o){if(n){(1);}return h -e; }", "n_tokens": 48, "n_pass": [290, 35, 29]}
{"time": "2021-02-19 22:30:42.647673", "score": "0.9065", "loss": "0.3596", "code": "t compare(Sg o1, g o){if(n){(1);}return h -e; }", "n_tokens": 47, "n_pass": [294, 37, 30]}
{"time": "2021-02-19 22:30:47.635359", "score": "0.8274", "loss": "0.5459", "code": "t compare(g o1, g o){if(n){(1);}return h -e; }", "n_tokens": 46, "n_pass": [305, 38, 31]}
{"time": "2021-02-19 22:30:49.081403", "score": "0.8274", "loss": "0.5459", "code": "t compare(g o, g o){if(n){(1);}return h -e; }", "n_tokens": 45, "n_pass": [309, 39, 32]}
{"time": "2021-02-19 22:30:50.420212", "score": "0.8274", "loss": "0.5459", "code": "t compare(g o,g o){if(n){(1);}return h -e; }", "n_tokens": 44, "n_pass": [311, 40, 33]}
{"time": "2021-02-19 22:31:01.246319", "score": "0.8274", "loss": "0.5459", "code": "t compare(g o,g o){if(n){(1);}return h-e; }", "n_tokens": 43, "n_pass": [371, 44, 34]}
{"time": "2021-02-19 22:31:02.618339", "score": "0.8274", "loss": "0.5459", "code": "t compare(g o,g o){if(n){(1);}return h-e;}", "n_tokens": 42, "n_pass": [374, 45, 35]}

Minimal simplified code:
t compare(g o,g o){if(n){(1);}return h-e;}

