
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/drewnoakes__metadata-extractor/Tests/com/drew/metadata/exif/NikonType2MakernoteTest2_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { _metadata = ExifReaderTest.processBytes("Tests/Data/nikonMakernoteType2b.jpg.app1"); _nikonDirectory = _metadata.getFirstDirectoryOfType(NikonType2MakernoteDirectory.class); _exifIFD0Directory = _metadata.getFirstDirectoryOfType(ExifIFD0Directory.class); _exifSubIFDDirectory = _metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory = _metadata.getFirstDirectoryOfType(ExifThumbnailDirectory.class); assertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }
predict, score, loss = setUp, 0.8261065483093262, 0.47390127182006836

Trace of simplified code(s):
{"time": "2021-02-19 01:19:28.494010", "score": "0.8261", "loss": "0.4739", "code": "@Before public void setUp() throws Exception { _metadata = ExifReaderTest.processBytes(\"Tests/Data/nikonMakernoteType2b.jpg.app1\"); _nikonDirectory = _metadata.getFirstDirectoryOfType(NikonType2MakernoteDirectory.class); _exifIFD0Directory = _metadata.getFirstDirectoryOfType(ExifIFD0Directory.class); _exifSubIFDDirectory = _metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory = _metadata.getFirstDirectoryOfType(ExifThumbnailDirectory.class); assertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 540, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 01:19:29.874428", "score": "0.8165", "loss": "0.4955", "code": "@Before public void setUp() throws Exception { _metadata = ExifReaderTest.processBytes(\"Tests/Data/nikonMakernoteType2b.jpg.app1\"); _nifType(ExifIFD0Directory.class); _exifSubIFDDirectory = _metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory = _metadata.getFirstDirectoryOfType(ExifThumbnailDirectory.class); assertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 405, "n_pass": [9, 2, 2]}
{"time": "2021-02-19 01:19:32.576166", "score": "0.805", "loss": "0.534", "code": "@Before public void setUp() throws Exception { _metadata = ExifReaderTest.processBytes(\"Tests/Data/nikonMakernoteType2b.jpg.app1\"); _netFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory = _metadata.getFirstDirectoryOfType(ExifThumbnailDirectory.class); assertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 338, "n_pass": [18, 4, 3]}
{"time": "2021-02-19 01:19:33.931676", "score": "0.7811", "loss": "0.6072", "code": "@Before public void setUp() throws Exception { _metadata = ExifReaderTest.processBytes(\"Tests/Data/nikonMakernoteType2b.jpg.app1\"); _netFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory =sertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 270, "n_pass": [20, 5, 4]}
{"time": "2021-02-19 01:19:35.323089", "score": "0.8249", "loss": "0.4466", "code": "@Before public void setUp() throws Exception { _metadata = ExifReadetFirstDirectoryOfType(ExifSubIFDDirectory.class); _thumbDirectory =sertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 203, "n_pass": [23, 6, 5]}
{"time": "2021-02-19 01:19:36.715255", "score": "0.7743", "loss": "0.6344", "code": "@Before public void setUp() throws Exception { _metadata = ExifReadsertNotNull(_nikonDirectory); assertNotNull(_exifSubIFDDirectory); }", "n_tokens": 135, "n_pass": [24, 7, 6]}
{"time": "2021-02-19 01:19:38.038366", "score": "0.8745", "loss": "0.3187", "code": "@Before public void setUp() throws Exception { _metadata = ExifReadrtNotNull(_exifSubIFDDirectory); }", "n_tokens": 101, "n_pass": [29, 8, 7]}
{"time": "2021-02-19 01:19:40.684779", "score": "0.8124", "loss": "0.5624", "code": "@Before public void setUp() throws Exception { _mertNotNull(_exifSubIFDDirectory); }", "n_tokens": 84, "n_pass": [43, 10, 8]}
{"time": "2021-02-19 01:19:43.272775", "score": "0.7932", "loss": "0.5958", "code": "@Before public void setUp() throws Exception { _ll(_exifSubIFDDirectory); }", "n_tokens": 75, "n_pass": [58, 12, 9]}
{"time": "2021-02-19 01:19:44.598008", "score": "0.6538", "loss": "0.9489", "code": "@Before public void setUp() throws Exception { _ll(_exifSctory); }", "n_tokens": 66, "n_pass": [60, 13, 10]}
{"time": "2021-02-19 01:19:48.950367", "score": "0.776", "loss": "0.7088", "code": "@Before public void setUp() throws Exception { _ll(_exify); }", "n_tokens": 61, "n_pass": [85, 16, 11]}
{"time": "2021-02-19 01:19:51.560387", "score": "0.6104", "loss": "2.1573", "code": "@Before publoid setUp() throws Exception { _ll(_exify); }", "n_tokens": 57, "n_pass": [90, 18, 12]}
{"time": "2021-02-19 01:19:56.207235", "score": "0.6354", "loss": "1.8963", "code": "@Before publoid setUp() throws Exception { _ll(_y); }", "n_tokens": 53, "n_pass": [100, 21, 13]}
{"time": "2021-02-19 01:20:05.591254", "score": "0.6354", "loss": "1.8963", "code": "@Before bloid setUp() throws Exception { _ll(_y); }", "n_tokens": 51, "n_pass": [146, 27, 14]}
{"time": "2021-02-19 01:20:14.505099", "score": "0.6354", "loss": "1.8963", "code": "@Before bloid setUp() throws Exception {ll(_y); }", "n_tokens": 49, "n_pass": [162, 33, 15]}
{"time": "2021-02-19 01:20:33.754075", "score": "0.6354", "loss": "1.8963", "code": "@Before bloid setUp() throws Exception {ll(y); }", "n_tokens": 48, "n_pass": [238, 45, 16]}
{"time": "2021-02-19 01:20:35.116876", "score": "0.651", "loss": "1.6757", "code": "@Before bloid setUp() throws Exception {ll(); }", "n_tokens": 47, "n_pass": [239, 46, 17]}
{"time": "2021-02-19 01:20:44.713839", "score": "0.651", "loss": "1.6757", "code": "@Before loid setUp() throws Exception {ll(); }", "n_tokens": 46, "n_pass": [251, 53, 18]}
{"time": "2021-02-19 01:20:47.344131", "score": "0.6683", "loss": "1.5062", "code": "@Before lid setUp() throws Exception {ll(); }", "n_tokens": 45, "n_pass": [253, 55, 19]}
{"time": "2021-02-19 01:20:48.642761", "score": "0.6208", "loss": "1.8871", "code": "@Before ld setUp() throws Exception {ll(); }", "n_tokens": 44, "n_pass": [254, 56, 20]}
{"time": "2021-02-19 01:20:49.966205", "score": "0.7219", "loss": "1.1919", "code": "@Before l setUp() throws Exception {ll(); }", "n_tokens": 43, "n_pass": [255, 57, 21]}
{"time": "2021-02-19 01:20:53.483477", "score": "0.7219", "loss": "1.1919", "code": "@Before l setUp()throws Exception {ll(); }", "n_tokens": 42, "n_pass": [264, 58, 22]}
{"time": "2021-02-19 01:20:54.803673", "score": "0.7195", "loss": "1.3997", "code": "@Before l setUp()throws xception {ll(); }", "n_tokens": 41, "n_pass": [272, 59, 23]}
{"time": "2021-02-19 01:20:56.102713", "score": "0.6985", "loss": "1.5645", "code": "@Before l setUp()throws ception {ll(); }", "n_tokens": 40, "n_pass": [273, 60, 24]}
{"time": "2021-02-19 01:20:57.435227", "score": "0.6985", "loss": "1.5645", "code": "@Before l setUp()throws eption {ll(); }", "n_tokens": 39, "n_pass": [274, 61, 25]}
{"time": "2021-02-19 01:20:58.784989", "score": "0.6682", "loss": "1.5064", "code": "@Before l setUp()throws ption {ll(); }", "n_tokens": 38, "n_pass": [275, 62, 26]}
{"time": "2021-02-19 01:21:00.084574", "score": "0.7077", "loss": "1.5769", "code": "@Before l setUp()throws tion {ll(); }", "n_tokens": 37, "n_pass": [276, 63, 27]}
{"time": "2021-02-19 01:21:01.390444", "score": "0.6513", "loss": "1.7645", "code": "@Before l setUp()throws ion {ll(); }", "n_tokens": 36, "n_pass": [277, 64, 28]}
{"time": "2021-02-19 01:21:02.698047", "score": "0.7689", "loss": "1.1581", "code": "@Before l setUp()throws on {ll(); }", "n_tokens": 35, "n_pass": [278, 65, 29]}
{"time": "2021-02-19 01:21:04.057632", "score": "0.7523", "loss": "1.1596", "code": "@Before l setUp()throws n {ll(); }", "n_tokens": 34, "n_pass": [279, 66, 30]}
{"time": "2021-02-19 01:21:05.365147", "score": "0.7523", "loss": "1.1596", "code": "@Before l setUp()throws n{ll(); }", "n_tokens": 33, "n_pass": [281, 67, 31]}
{"time": "2021-02-19 01:21:20.562320", "score": "0.7523", "loss": "1.1596", "code": "@Before l setUp()throws n{ll();}", "n_tokens": 32, "n_pass": [316, 76, 32]}

Minimal simplified code:
@Before l setUp()throws n{ll();}

