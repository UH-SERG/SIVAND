
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wnameless__json-flattener/src/main/java/com/github/wnameless/json/unflattener/JsonUnflattener_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }
predict, score, loss = equals, 0.9977430105209351, 0.0027126173954457045

Trace of simplified code(s):
{"time": "2021-02-20 08:41:41.964213", "score": "0.9977", "loss": "0.0027", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 172, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 08:41:43.288895", "score": "0.9858", "loss": "0.0213", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof JsonUnflattener)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 151, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 08:41:44.976560", "score": "0.9897", "loss": "0.0146", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return false; return root.equals(((JsonUnflattener) o).root); }", "n_tokens": 140, "n_pass": [49, 3, 3]}
{"time": "2021-02-20 08:41:46.305854", "score": "0.9172", "loss": "0.1487", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return false; returls(((JsonUnflattener) o).root); }", "n_tokens": 129, "n_pass": [52, 4, 4]}
{"time": "2021-02-20 08:41:47.619437", "score": "0.2617", "loss": "2.2082", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((JsonUnflattener) o).root); }", "n_tokens": 118, "n_pass": [64, 5, 5]}
{"time": "2021-02-20 08:41:48.941715", "score": "0.275", "loss": "2.1529", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((Jsontener) o).root); }", "n_tokens": 112, "n_pass": [100, 6, 6]}
{"time": "2021-02-20 08:41:53.629046", "score": "0.3225", "loss": "1.9209", "code": "ean equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((Jsoner) o).root); }", "n_tokens": 109, "n_pass": [164, 9, 7]}
{"time": "2021-02-20 08:41:54.938817", "score": "0.3693", "loss": "1.7252", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) return fls(((Jsoner) o).root); }", "n_tokens": 107, "n_pass": [169, 10, 8]}
{"time": "2021-02-20 08:42:05.640161", "score": "0.6759", "loss": "0.677", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) returls(((Jsoner) o).root); }", "n_tokens": 104, "n_pass": [201, 17, 9]}
{"time": "2021-02-20 08:42:06.952412", "score": "0.6579", "loss": "0.7317", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof Json)) returls(((Jer) o).root); }", "n_tokens": 101, "n_pass": [204, 18, 10]}
{"time": "2021-02-20 08:42:16.295402", "score": "0.4971", "loss": "1.0548", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof n)) returls(((Jer) o).root); }", "n_tokens": 98, "n_pass": [237, 24, 11]}
{"time": "2021-02-20 08:42:17.601587", "score": "0.2614", "loss": "1.9646", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof n))turls(((Jer) o).root); }", "n_tokens": 95, "n_pass": [239, 25, 12]}
{"time": "2021-02-20 08:42:18.932437", "score": "0.8202", "loss": "0.4842", "code": "n equals(Object o) { if (this == o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 92, "n_pass": [240, 26, 13]}
{"time": "2021-02-20 08:42:21.711632", "score": "0.3751", "loss": "1.759", "code": "n equals(Oect o) { if (this == o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 90, "n_pass": [253, 27, 14]}
{"time": "2021-02-20 08:42:23.038174", "score": "0.6771", "loss": "0.7895", "code": "n equals(Ot o) { if (this == o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 88, "n_pass": [254, 28, 15]}
{"time": "2021-02-20 08:42:24.347373", "score": "0.4604", "loss": "1.4121", "code": "n equals(Ot o) { if (t == o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 85, "n_pass": [261, 29, 16]}
{"time": "2021-02-20 08:42:33.360423", "score": "0.4604", "loss": "1.4121", "code": "n equals(Ot o) { if (t== o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 84, "n_pass": [358, 32, 17]}
{"time": "2021-02-20 08:42:37.297490", "score": "0.4604", "loss": "1.4121", "code": "n equals(Ot o) { if (t==o) return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 83, "n_pass": [361, 35, 18]}
{"time": "2021-02-20 08:42:38.608978", "score": "0.4604", "loss": "1.4121", "code": "n equals(Ot o) { if (t==o)return true; if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 82, "n_pass": [364, 36, 19]}
{"time": "2021-02-20 08:42:46.476893", "score": "0.4604", "loss": "1.4121", "code": "n equals(Ot o) { if (t==o)return true;if (!(o instanceof n))ls(((Jer) o).root); }", "n_tokens": 81, "n_pass": [377, 42, 20]}
{"time": "2021-02-20 08:42:47.806221", "score": "0.4399", "loss": "1.3428", "code": "n equals(Ot o) { if (t==o)return true;if (!(o instanceof n))ls(((r) o).root); }", "n_tokens": 79, "n_pass": [392, 43, 21]}
{"time": "2021-02-20 08:42:50.441153", "score": "0.5858", "loss": "0.8515", "code": "n equals(Ot o) { if (t==o)return true;if (!(o instanceof n))ls(((r) o).ot); }", "n_tokens": 77, "n_pass": [396, 45, 22]}
{"time": "2021-02-20 08:42:54.664736", "score": "0.4889", "loss": "1.1642", "code": "n equals(t o) { if (t==o)return true;if (!(o instanceof n))ls(((r) o).ot); }", "n_tokens": 76, "n_pass": [409, 46, 23]}
{"time": "2021-02-20 08:42:55.973310", "score": "0.4889", "loss": "1.1642", "code": "n equals(t o){ if (t==o)return true;if (!(o instanceof n))ls(((r) o).ot); }", "n_tokens": 75, "n_pass": [414, 47, 24]}
{"time": "2021-02-20 08:42:57.297884", "score": "0.4889", "loss": "1.1642", "code": "n equals(t o){if (t==o)return true;if (!(o instanceof n))ls(((r) o).ot); }", "n_tokens": 74, "n_pass": [416, 48, 25]}
{"time": "2021-02-20 08:42:58.604843", "score": "0.4889", "loss": "1.1642", "code": "n equals(t o){if(t==o)return true;if (!(o instanceof n))ls(((r) o).ot); }", "n_tokens": 73, "n_pass": [419, 49, 26]}
{"time": "2021-02-20 08:43:09.112512", "score": "0.3578", "loss": "1.6024", "code": "n equals(t o){if(t==o)return true;if (!(o instanceof n))ls(((r)).ot); }", "n_tokens": 71, "n_pass": [453, 57, 27]}
{"time": "2021-02-20 08:43:26.860850", "score": "0.3578", "loss": "1.6024", "code": "n equals(t o){if(t==o)return true;if (!(o instanceof n))ls(((r)).ot);}", "n_tokens": 70, "n_pass": [547, 67, 28]}
{"time": "2021-02-20 08:43:40.315756", "score": "0.3578", "loss": "1.6024", "code": "n equals(t o){if(t==o)return true;if(!(o instanceof n))ls(((r)).ot);}", "n_tokens": 69, "n_pass": [584, 75, 29]}

Minimal simplified code:
n equals(t o){if(t==o)return true;if(!(o instanceof n))ls(((r)).ot);}

