
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/com/sun/tools/attach/VirtualMachineDescriptor_toString.java
method_name = toString
method_body = public String toString() { String s = provider.toString() + ": " + id; if (displayName != id) { s += " " + displayName; } return s; }
predict, score, loss = toString, 0.9384564161300659, 0.15922971069812775

Trace of simplified code(s):
{"time": "2021-02-20 04:19:18.707233", "score": "0.9385", "loss": "0.1592", "code": "public String toString() { String s = provider.toString() + \": \" + id; if (displayName != id) { s += \" \" + displayName; } return s; }", "n_tokens": 133, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 04:19:20.009647", "score": "0.7822", "loss": "0.655", "code": "public String toString() { String id; if (displayName != id) { s += \" \" + displayName; } return s; }", "n_tokens": 100, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 04:19:23.444814", "score": "0.7852", "loss": "0.6702", "code": "public String toString() { String id; if (displayName != id) { s += \" \" +ame; } return s; }", "n_tokens": 91, "n_pass": [41, 4, 3]}
{"time": "2021-02-20 04:19:29.081665", "score": "0.8972", "loss": "0.331", "code": "public String toString() { String id; if (displayName != id) { s += \" \" +ame; } r s; }", "n_tokens": 86, "n_pass": [77, 8, 4]}
{"time": "2021-02-20 04:19:30.420548", "score": "0.5362", "loss": "2.3869", "code": "publtring toString() { String id; if (displayName != id) { s += \" \" +ame; } r s; }", "n_tokens": 82, "n_pass": [80, 9, 5]}
{"time": "2021-02-20 04:19:31.739967", "score": "0.5362", "loss": "2.3869", "code": "publg toString() { String id; if (displayName != id) { s += \" \" +ame; } r s; }", "n_tokens": 78, "n_pass": [81, 10, 6]}
{"time": "2021-02-20 04:19:35.141995", "score": "0.6748", "loss": "1.4792", "code": "publg toString() { Strin; if (displayName != id) { s += \" \" +ame; } r s; }", "n_tokens": 74, "n_pass": [87, 12, 7]}
{"time": "2021-02-20 04:19:36.529441", "score": "0.7385", "loss": "1.1846", "code": "publg toString() { Strin; if (diyName != id) { s += \" \" +ame; } r s; }", "n_tokens": 70, "n_pass": [90, 13, 8]}
{"time": "2021-02-20 04:19:37.884454", "score": "0.6941", "loss": "1.2895", "code": "publg toString() { Strin; if (die != id) { s += \" \" +ame; } r s; }", "n_tokens": 66, "n_pass": [91, 14, 9]}
{"time": "2021-02-20 04:19:41.846249", "score": "0.736", "loss": "1.1067", "code": "g toString() { Strin; if (die != id) { s += \" \" +ame; } r s; }", "n_tokens": 62, "n_pass": [100, 17, 10]}
{"time": "2021-02-20 04:19:43.901317", "score": "0.7557", "loss": "1.0504", "code": "g toString() { S; if (die != id) { s += \" \" +ame; } r s; }", "n_tokens": 58, "n_pass": [105, 18, 11]}
{"time": "2021-02-20 04:19:46.544732", "score": "0.7292", "loss": "1.1068", "code": "g toString() { S; if (die != id) { s += \" \" ; } r s; }", "n_tokens": 54, "n_pass": [113, 20, 12]}
{"time": "2021-02-20 04:19:49.223397", "score": "0.793", "loss": "0.863", "code": "g toString() { S; if (die != id) { s += \" \" ; } ; }", "n_tokens": 51, "n_pass": [155, 21, 13]}
{"time": "2021-02-20 04:19:52.314752", "score": "0.7349", "loss": "1.1068", "code": "g toString() {; if (die != id) { s += \" \" ; } ; }", "n_tokens": 49, "n_pass": [164, 22, 14]}
{"time": "2021-02-20 04:19:53.601146", "score": "0.7349", "loss": "1.1068", "code": "g toString() {if (die != id) { s += \" \" ; } ; }", "n_tokens": 47, "n_pass": [165, 23, 15]}
{"time": "2021-02-20 04:19:54.888384", "score": "0.8131", "loss": "0.7953", "code": "g toString() {if (e != id) { s += \" \" ; } ; }", "n_tokens": 45, "n_pass": [168, 24, 16]}
{"time": "2021-02-20 04:19:56.204552", "score": "0.8598", "loss": "0.5941", "code": "g toString() {if (e !=d) { s += \" \" ; } ; }", "n_tokens": 43, "n_pass": [171, 25, 17]}
{"time": "2021-02-20 04:20:05.518084", "score": "0.8598", "loss": "0.5941", "code": "g toString() {if (e !=d){ s += \" \" ; } ; }", "n_tokens": 42, "n_pass": [237, 27, 18]}
{"time": "2021-02-20 04:20:06.805855", "score": "0.8598", "loss": "0.5941", "code": "g toString() {if (e !=d){s += \" \" ; } ; }", "n_tokens": 41, "n_pass": [238, 28, 19]}
{"time": "2021-02-20 04:20:08.092116", "score": "0.8598", "loss": "0.5941", "code": "g toString() {if (e !=d){s+= \" \" ; } ; }", "n_tokens": 40, "n_pass": [240, 29, 20]}
{"time": "2021-02-20 04:20:11.045884", "score": "0.8598", "loss": "0.5941", "code": "g toString() {if (e !=d){s+=\" \" ; } ; }", "n_tokens": 39, "n_pass": [243, 31, 21]}
{"time": "2021-02-20 04:20:12.329734", "score": "0.8419", "loss": "0.6722", "code": "g toString() {if (e !=d){s+=\"\" ; } ; }", "n_tokens": 38, "n_pass": [245, 32, 22]}
{"time": "2021-02-20 04:20:13.616101", "score": "0.8419", "loss": "0.6722", "code": "g toString() {if (e !=d){s+=\"\"; } ; }", "n_tokens": 37, "n_pass": [247, 33, 23]}
{"time": "2021-02-20 04:20:14.921362", "score": "0.8419", "loss": "0.6722", "code": "g toString() {if (e !=d){s+=\"\";} ; }", "n_tokens": 36, "n_pass": [249, 34, 24]}
{"time": "2021-02-20 04:20:16.207995", "score": "0.8419", "loss": "0.6722", "code": "g toString() {if (e !=d){s+=\"\";}; }", "n_tokens": 35, "n_pass": [251, 35, 25]}
{"time": "2021-02-20 04:20:17.532827", "score": "0.8419", "loss": "0.6722", "code": "g toString() {if (e !=d){s+=\"\";} }", "n_tokens": 34, "n_pass": [252, 36, 26]}
{"time": "2021-02-20 04:20:22.370211", "score": "0.8419", "loss": "0.6722", "code": "g toString(){if (e !=d){s+=\"\";} }", "n_tokens": 33, "n_pass": [266, 37, 27]}
{"time": "2021-02-20 04:20:23.656663", "score": "0.8419", "loss": "0.6722", "code": "g toString(){if(e !=d){s+=\"\";} }", "n_tokens": 32, "n_pass": [270, 38, 28]}
{"time": "2021-02-20 04:20:24.943962", "score": "0.8419", "loss": "0.6722", "code": "g toString(){if(e!=d){s+=\"\";} }", "n_tokens": 31, "n_pass": [273, 39, 29]}
{"time": "2021-02-20 04:20:26.236907", "score": "0.7454", "loss": "1.0786", "code": "g toString(){if(e=d){s+=\"\";} }", "n_tokens": 30, "n_pass": [274, 40, 30]}
{"time": "2021-02-20 04:20:34.307249", "score": "0.7454", "loss": "1.0786", "code": "g toString(){if(e=d){s+=\"\";}}", "n_tokens": 29, "n_pass": [306, 43, 31]}

Minimal simplified code:
g toString(){if(e=d){s+="";}}

