
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Blankj__AndroidUtilCode/app/src/main/java/com/blankj/androidutilcode/feature/core/bar/BarStatusDrawerActivity_onProgressChanged.java
method_name = onProgressChanged
method_body = @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(String.valueOf(mAlpha)); updateStatusBar(); }
predict, score, loss = onProgressChanged, 0.9997053146362305, 0.001014133682474494

Trace of simplified code(s):
{"time": "2021-02-20 11:55:00.536464", "score": "0.9997", "loss": "0.001", "code": "@Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(String.valueOf(mAlpha)); updateStatusBar(); }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 11:55:02.554720", "score": "0.9998", "loss": "0.0007", "code": "@Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 155, "n_pass": [26, 2, 2]}
{"time": "2021-02-20 11:55:04.945806", "score": "0.932", "loss": "0.2601", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha = progress; tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 144, "n_pass": [54, 3, 3]}
{"time": "2021-02-20 11:55:06.282111", "score": "0.8974", "loss": "0.4151", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha =tvStatusAlpha.setText(); updateStatusBar(); }", "n_tokens": 133, "n_pass": [58, 4, 4]}
{"time": "2021-02-20 11:55:07.583592", "score": "0.835", "loss": "0.7407", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha =ha.setText(); updateStatusBar(); }", "n_tokens": 122, "n_pass": [59, 5, 5]}
{"time": "2021-02-20 11:55:09.611436", "score": "0.8225", "loss": "0.8891", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlphaetText(); updateStatusBar(); }", "n_tokens": 116, "n_pass": [93, 6, 6]}
{"time": "2021-02-20 11:55:10.907466", "score": "0.8493", "loss": "0.7234", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha(); updateStatusBar(); }", "n_tokens": 110, "n_pass": [94, 7, 7]}
{"time": "2021-02-20 11:55:13.524080", "score": "0.8051", "loss": "0.9739", "code": "@Override public void onProgressChanged(SeekBar seekBaress, boolean fromUser) { mAlpha(); upatusBar(); }", "n_tokens": 104, "n_pass": [96, 9, 8]}
{"time": "2021-02-20 11:55:21.218845", "score": "0.8193", "loss": "0.9765", "code": "@Override public void onProgressChanged(SeekBar sess, boolean fromUser) { mAlpha(); upatusBar(); }", "n_tokens": 98, "n_pass": [109, 14, 9]}
{"time": "2021-02-20 11:55:22.515032", "score": "0.8379", "loss": "0.8949", "code": "@Override public void onProgressChanged(SeekBar sess, boolean er) { mAlpha(); upatusBar(); }", "n_tokens": 92, "n_pass": [112, 15, 10]}
{"time": "2021-02-20 11:55:23.808855", "score": "0.8337", "loss": "0.9197", "code": "@Override public void onProgressChanged(SeekBar sess, boolean er) { mAlphaatusBar(); }", "n_tokens": 86, "n_pass": [115, 16, 11]}
{"time": "2021-02-20 11:55:25.183157", "score": "0.8856", "loss": "0.6004", "code": "@Override public void onProgressChanged(SeekBar sess, boolean er) { mAlphar(); }", "n_tokens": 80, "n_pass": [116, 17, 12]}
{"time": "2021-02-20 11:55:26.496905", "score": "0.7557", "loss": "1.5975", "code": "@Overpublic void onProgressChanged(SeekBar sess, boolean er) { mAlphar(); }", "n_tokens": 75, "n_pass": [119, 18, 13]}
{"time": "2021-02-20 11:55:27.785025", "score": "0.7557", "loss": "1.5975", "code": "@Overc void onProgressChanged(SeekBar sess, boolean er) { mAlphar(); }", "n_tokens": 70, "n_pass": [120, 19, 14]}
{"time": "2021-02-20 11:55:31.806176", "score": "0.7147", "loss": "2.1102", "code": "@Overc void onProgressChanged(SeekBar sess, boolean er) { r(); }", "n_tokens": 64, "n_pass": [131, 21, 15]}
{"time": "2021-02-20 11:55:37.117804", "score": "0.7013", "loss": "2.24", "code": "@Orc void onProgressChanged(SeekBar sess, boolean er) { r(); }", "n_tokens": 62, "n_pass": [171, 24, 16]}
{"time": "2021-02-20 11:55:38.428980", "score": "0.7616", "loss": "1.6205", "code": "@O void onProgressChanged(SeekBar sess, boolean er) { r(); }", "n_tokens": 60, "n_pass": [172, 25, 17]}
{"time": "2021-02-20 11:55:49.071828", "score": "0.6011", "loss": "2.8555", "code": "@O void onProgressChanged(SeekBar sess, boolean er) { ; }", "n_tokens": 57, "n_pass": [192, 31, 18]}
{"time": "2021-02-20 11:56:01.924468", "score": "0.6011", "loss": "2.8555", "code": "@O void onProgressChanged(SeekBar sess, boolean er) { }", "n_tokens": 55, "n_pass": [256, 38, 19]}
{"time": "2021-02-20 11:56:20.365580", "score": "0.7752", "loss": "1.2324", "code": "@O void onProgressChanged(SeekBar ss, boolean er) { }", "n_tokens": 53, "n_pass": [289, 47, 20]}
{"time": "2021-02-20 11:56:48.193781", "score": "0.831", "loss": "0.9287", "code": "@O void onProgressChanged(SeekBar ss, boolen er) { }", "n_tokens": 52, "n_pass": [358, 62, 21]}
{"time": "2021-02-20 11:56:49.503022", "score": "0.891", "loss": "0.5002", "code": "@O void onProgressChanged(SeekBar ss, boolen r) { }", "n_tokens": 51, "n_pass": [360, 63, 22]}
{"time": "2021-02-20 11:56:50.793564", "score": "0.891", "loss": "0.5002", "code": "@O void onProgressChanged(SeekBar ss, boolen r){ }", "n_tokens": 50, "n_pass": [363, 64, 23]}
{"time": "2021-02-20 11:56:52.118798", "score": "0.891", "loss": "0.5002", "code": "@O void onProgressChanged(SeekBar ss, boolen r){}", "n_tokens": 49, "n_pass": [365, 65, 24]}
{"time": "2021-02-20 11:57:14.496480", "score": "0.8777", "loss": "0.5557", "code": "@O void onProgressChanged(SeekBar s, boolen r){}", "n_tokens": 48, "n_pass": [401, 77, 25]}
{"time": "2021-02-20 11:57:15.792204", "score": "0.8777", "loss": "0.5557", "code": "@O void onProgressChanged(SeekBar s,boolen r){}", "n_tokens": 47, "n_pass": [404, 78, 26]}
{"time": "2021-02-20 11:57:23.642863", "score": "0.8742", "loss": "0.5298", "code": "@O void onProgressChanged(SeekBar s,boole r){}", "n_tokens": 46, "n_pass": [410, 84, 27]}
{"time": "2021-02-20 11:57:51.057095", "score": "0.8077", "loss": "1.028", "code": "@O void onProgressChanged(SeekBar s,bool r){}", "n_tokens": 45, "n_pass": [456, 100, 28]}
{"time": "2021-02-20 11:58:13.366608", "score": "0.7551", "loss": "1.4373", "code": "@O void onProgressChanged(SeekBar s,ool r){}", "n_tokens": 44, "n_pass": [498, 112, 29]}
{"time": "2021-02-20 11:58:17.327613", "score": "0.7193", "loss": "1.5345", "code": "@O void onProgressChanged(SeekBar s,oo r){}", "n_tokens": 43, "n_pass": [501, 115, 30]}
{"time": "2021-02-20 11:58:39.702052", "score": "0.8011", "loss": "1.0109", "code": "@O void onProgressChanged(SeekBar s,o r){}", "n_tokens": 42, "n_pass": [543, 127, 31]}

Minimal simplified code:
@O void onProgressChanged(SeekBar s,o r){}

