
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/descriptor/web/WebXml_toString.java
method_name = toString
method_body = @Override public String toString() { StringBuilder buf = new StringBuilder(32); buf.append("Name: "); buf.append(getName()); buf.append(", URL: "); buf.append(getURL()); return buf.toString(); }
predict, score, loss = toString, 0.9658498764038086, 0.08227897435426712

Trace of simplified code(s):
{"time": "2021-02-20 02:41:28.827774", "score": "0.9658", "loss": "0.0823", "code": "@Override public String toString() { StringBuilder buf = new StringBuilder(32); buf.append(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.append(getURL()); return buf.toString(); }", "n_tokens": 194, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:41:30.511999", "score": "0.9782", "loss": "0.0601", "code": "@Override public String toString() { StringBuilder(32); buf.append(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.append(getURL()); return buf.toString(); }", "n_tokens": 170, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 02:41:32.180858", "score": "0.9602", "loss": "0.1049", "code": "@Override public String toString() { StringBuildappend(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.append(getURL()); return buf.toString(); }", "n_tokens": 158, "n_pass": [43, 3, 3]}
{"time": "2021-02-20 02:41:33.510623", "score": "0.8629", "loss": "0.383", "code": "@Override public String toString() { StringBuildappend(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.appe; return buf.toString(); }", "n_tokens": 146, "n_pass": [49, 4, 4]}
{"time": "2021-02-20 02:41:34.852610", "score": "0.7744", "loss": "0.7628", "code": "@Override public String toString() { StringBuildappend(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.appetoString(); }", "n_tokens": 133, "n_pass": [50, 5, 5]}
{"time": "2021-02-20 02:41:36.589986", "score": "0.8637", "loss": "0.3968", "code": "@Override public String toString() {append(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.appetoString(); }", "n_tokens": 121, "n_pass": [55, 6, 6]}
{"time": "2021-02-20 02:41:38.403578", "score": "0.8557", "loss": "0.4096", "code": "@Override public String toString() {(\"Name: \"); buf.append(getName()); buf.append(\", URL: \"); buf.appetoString(); }", "n_tokens": 115, "n_pass": [86, 7, 7]}
{"time": "2021-02-20 02:41:41.121118", "score": "0.9489", "loss": "0.1807", "code": "@Override public String toString() {(\"Name: \"); buf.append(g()); buf.append(\", URL: \"); buf.appetoString(); }", "n_tokens": 109, "n_pass": [90, 9, 8]}
{"time": "2021-02-20 02:41:42.486207", "score": "0.8391", "loss": "0.6444", "code": "@Override public String toString() {(\"Name: \"); buf.append(g()); bend(\", URL: \"); buf.appetoString(); }", "n_tokens": 103, "n_pass": [92, 10, 9]}
{"time": "2021-02-20 02:41:43.868785", "score": "0.911", "loss": "0.5194", "code": "@Override public String toString() {(\"Name: \"); buf.append(g()); bend(\",\"); buf.appetoString(); }", "n_tokens": 97, "n_pass": [94, 11, 10]}
{"time": "2021-02-20 02:41:45.172057", "score": "0.8897", "loss": "0.7203", "code": "@Override public String toString() {(\"Name: \"); buf.append(g()); bend(\",\"); butoString(); }", "n_tokens": 91, "n_pass": [96, 12, 11]}
{"time": "2021-02-20 02:41:46.476931", "score": "0.852", "loss": "0.8436", "code": "@Override public String toString() {(\"Name: \"); buf.append(g()); bend(\",\"); bung(); }", "n_tokens": 85, "n_pass": [97, 13, 12]}
{"time": "2021-02-20 02:41:47.812571", "score": "0.7908", "loss": "1.3665", "code": "@Overrblic String toString() {(\"Name: \"); buf.append(g()); bend(\",\"); bung(); }", "n_tokens": 79, "n_pass": [100, 14, 13]}
{"time": "2021-02-20 02:41:51.539719", "score": "0.7908", "loss": "1.3665", "code": "@Overrc String toString() {(\"Name: \"); buf.append(g()); bend(\",\"); bung(); }", "n_tokens": 76, "n_pass": [140, 16, 14]}
{"time": "2021-02-20 02:41:55.336379", "score": "0.7738", "loss": "1.5063", "code": "@Overrc String toString() {(\"N: \"); buf.append(g()); bend(\",\"); bung(); }", "n_tokens": 73, "n_pass": [148, 18, 15]}
{"time": "2021-02-20 02:41:59.329651", "score": "0.7016", "loss": "1.9026", "code": "@Overrc String toString() {(\"N: \"); buf.append(g()); b(\",\"); bung(); }", "n_tokens": 70, "n_pass": [157, 21, 16]}
{"time": "2021-02-20 02:42:00.677908", "score": "0.7076", "loss": "1.9601", "code": "@Overrc String toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 67, "n_pass": [160, 22, 17]}
{"time": "2021-02-20 02:42:01.993022", "score": "0.7323", "loss": "1.8517", "code": "@Ovc String toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 64, "n_pass": [164, 23, 18]}
{"time": "2021-02-20 02:42:09.698674", "score": "0.7126", "loss": "1.8988", "code": "@Oc String toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 63, "n_pass": [228, 27, 19]}
{"time": "2021-02-20 02:42:11.010706", "score": "0.777", "loss": "1.6103", "code": "@O String toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 62, "n_pass": [229, 28, 20]}
{"time": "2021-02-20 02:42:12.655801", "score": "0.4517", "loss": "3.6805", "code": "@O tring toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 61, "n_pass": [231, 29, 21]}
{"time": "2021-02-20 02:42:15.304194", "score": "0.5356", "loss": "2.9286", "code": "@O ting toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 60, "n_pass": [233, 31, 22]}
{"time": "2021-02-20 02:42:16.698598", "score": "0.5472", "loss": "2.6955", "code": "@O tng toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 59, "n_pass": [234, 32, 23]}
{"time": "2021-02-20 02:42:19.419816", "score": "0.4574", "loss": "3.7186", "code": "@O tn toString() {(\"N: \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 58, "n_pass": [236, 34, 24]}
{"time": "2021-02-20 02:42:24.042848", "score": "0.5347", "loss": "2.9747", "code": "@O tn toString() {(\" \"); buf.append(g()); b(\",\");ng(); }", "n_tokens": 56, "n_pass": [249, 35, 25]}
{"time": "2021-02-20 02:42:26.632963", "score": "0.4903", "loss": "3.4439", "code": "@O tn toString() {(\" \"); b.append(g()); b(\",\");ng(); }", "n_tokens": 54, "n_pass": [253, 37, 26]}
{"time": "2021-02-20 02:42:29.255238", "score": "0.455", "loss": "3.4408", "code": "@O tn toString() {(\" \"); b.aend(g()); b(\",\");ng(); }", "n_tokens": 52, "n_pass": [255, 39, 27]}
{"time": "2021-02-20 02:42:32.559816", "score": "0.4976", "loss": "3.0339", "code": "@O n toString() {(\" \"); b.aend(g()); b(\",\");ng(); }", "n_tokens": 51, "n_pass": [271, 41, 28]}
{"time": "2021-02-20 02:42:38.727908", "score": "0.4398", "loss": "3.6648", "code": "@O n toString() {(\" \"); b.ad(g()); b(\",\");ng(); }", "n_tokens": 49, "n_pass": [289, 43, 29]}
{"time": "2021-02-20 02:42:48.679082", "score": "0.4398", "loss": "3.6648", "code": "@O n toString() {(\" \"); b.ad(g());b(\",\");ng(); }", "n_tokens": 48, "n_pass": [360, 45, 30]}
{"time": "2021-02-20 02:42:51.302646", "score": "0.4398", "loss": "3.6648", "code": "@O n toString() {(\" \"); b.ad(g());b(\"\");ng(); }", "n_tokens": 47, "n_pass": [364, 47, 31]}
{"time": "2021-02-20 02:42:53.975429", "score": "0.4641", "loss": "3.2536", "code": "@O n toString() {(\" \"); b.ad(g());b(\"\");n(); }", "n_tokens": 46, "n_pass": [369, 49, 32]}
{"time": "2021-02-20 02:42:55.288382", "score": "0.4641", "loss": "3.2536", "code": "@O n toString() {(\" \"); b.ad(g());b(\"\");n();}", "n_tokens": 45, "n_pass": [373, 50, 33]}
{"time": "2021-02-20 02:43:00.921504", "score": "0.4641", "loss": "3.2536", "code": "@O n toString(){(\" \"); b.ad(g());b(\"\");n();}", "n_tokens": 44, "n_pass": [390, 51, 34]}
{"time": "2021-02-20 02:43:02.251896", "score": "0.4028", "loss": "3.3987", "code": "@O n toString(){(\"\"); b.ad(g());b(\"\");n();}", "n_tokens": 43, "n_pass": [394, 52, 35]}
{"time": "2021-02-20 02:43:03.582248", "score": "0.4028", "loss": "3.3987", "code": "@O n toString(){(\"\");b.ad(g());b(\"\");n();}", "n_tokens": 42, "n_pass": [398, 53, 36]}

Minimal simplified code:
@O n toString(){("");b.ad(g());b("");n();}

