
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/UniqueId_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }
predict, score, loss = equals, 0.9005621671676636, 0.14175456762313843

Trace of simplified code(s):
{"time": "2021-02-19 22:43:17.308629", "score": "0.8927", "loss": "0.1716", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 379, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 22:43:19.167596", "score": "0.8507", "loss": "0.218", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 332, "n_pass": [21, 2, 2]}
{"time": "2021-02-19 22:43:20.607621", "score": "0.7767", "loss": "0.3177", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 284, "n_pass": [25, 3, 3]}
{"time": "2021-02-19 22:43:22.009514", "score": "0.8157", "loss": "0.2651", "code": "@Override public boolean equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 260, "n_pass": [45, 4, 4]}
{"time": "2021-02-19 22:43:23.412573", "score": "0.3471", "loss": "1.6344", "code": "n equals(Object other) {if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 237, "n_pass": [48, 5, 5]}
{"time": "2021-02-19 22:43:25.244196", "score": "0.3715", "loss": "1.5081", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 214, "n_pass": [51, 6, 6]}
{"time": "2021-02-19 22:43:28.490378", "score": "0.3376", "loss": "1.7119", "code": "n equals(Object other) {if (result) { UniqueId; if (this.id == null &&ull) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 202, "n_pass": [81, 8, 7]}
{"time": "2021-02-19 22:43:33.933487", "score": "0.3721", "loss": "1.6979", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) result = true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 190, "n_pass": [97, 12, 8]}
{"time": "2021-02-19 22:43:39.706896", "score": "0.4013", "loss": "1.6331", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) r= true; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 184, "n_pass": [147, 16, 9]}
{"time": "2021-02-19 22:43:41.088920", "score": "0.4234", "loss": "1.5234", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) r; else if (this.id == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 178, "n_pass": [148, 17, 10]}
{"time": "2021-02-19 22:43:42.437937", "score": "0.3017", "loss": "1.967", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) r; else if (t == null && uid.id != nuuid.id == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 172, "n_pass": [151, 18, 11]}
{"time": "2021-02-19 22:43:47.972353", "score": "0.2702", "loss": "2.1536", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) r; else if (t == null && uid.id != nu == null) result =rays.equals(this.id, uid.id); } return result; }", "n_tokens": 166, "n_pass": [156, 22, 12]}
{"time": "2021-02-19 22:43:50.740395", "score": "0.2167", "loss": "2.3", "code": "n equals(Object other) {if (result) { UniqueId; if (this.iull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.id, uid.id); } return result; }", "n_tokens": 160, "n_pass": [159, 24, 13]}
{"time": "2021-02-19 22:43:57.956941", "score": "0.2952", "loss": "1.9886", "code": "n equals(Object other) {if (result) { Un; if (this.iull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.id, uid.id); } return result; }", "n_tokens": 154, "n_pass": [175, 29, 14]}
{"time": "2021-02-19 22:43:59.319471", "score": "0.2485", "loss": "2.1706", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.id, uid.id); } return result; }", "n_tokens": 148, "n_pass": [177, 30, 15]}
{"time": "2021-02-19 22:44:09.137668", "score": "0.2401", "loss": "2.2786", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.i.id); } return result; }", "n_tokens": 142, "n_pass": [190, 37, 16]}
{"time": "2021-02-19 22:44:20.641606", "score": "0.3824", "loss": "1.796", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.i.id); } rrn result; }", "n_tokens": 139, "n_pass": [266, 45, 17]}
{"time": "2021-02-19 22:44:23.398332", "score": "0.2808", "loss": "2.1814", "code": "n equals(Object other) {if (result) { Un; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 136, "n_pass": [268, 47, 18]}
{"time": "2021-02-19 22:44:31.632151", "score": "0.286", "loss": "2.1718", "code": "n equals(Object other) {if (res) { Un; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 133, "n_pass": [282, 52, 19]}
{"time": "2021-02-19 22:44:33.042639", "score": "0.4727", "loss": "1.569", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t == null && uid.id != nu == null) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 130, "n_pass": [284, 53, 20]}
{"time": "2021-02-19 22:44:34.431010", "score": "0.5331", "loss": "1.3308", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid.id != nu == null) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 127, "n_pass": [294, 54, 21]}
{"time": "2021-02-19 22:44:35.898491", "score": "0.4178", "loss": "1.7229", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu == null) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 124, "n_pass": [298, 55, 22]}
{"time": "2021-02-19 22:44:37.296710", "score": "0.389", "loss": "1.7409", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll) rerays.equals(this.i.id); } rrn ult; }", "n_tokens": 121, "n_pass": [302, 56, 23]}
{"time": "2021-02-19 22:44:40.045726", "score": "0.454", "loss": "1.4707", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll) res.equals(this.i.id); } rrn ult; }", "n_tokens": 118, "n_pass": [305, 58, 24]}
{"time": "2021-02-19 22:44:44.278097", "score": "0.3786", "loss": "1.7955", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll) res.equals(s.i.id); } rrn ult; }", "n_tokens": 115, "n_pass": [309, 61, 25]}
{"time": "2021-02-19 22:44:45.641813", "score": "0.3319", "loss": "2.0251", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll) res.equals(s.i); } rrn ult; }", "n_tokens": 112, "n_pass": [311, 62, 26]}
{"time": "2021-02-19 22:44:56.462029", "score": "0.366", "loss": "1.9333", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(s.i); } rrn ult; }", "n_tokens": 109, "n_pass": [345, 69, 27]}
{"time": "2021-02-19 22:45:00.616998", "score": "0.4156", "loss": "1.843", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ult; }", "n_tokens": 106, "n_pass": [349, 72, 28]}
{"time": "2021-02-19 22:45:03.359489", "score": "0.2188", "loss": "2.6074", "code": "n equals(Object other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 103, "n_pass": [353, 74, 29]}
{"time": "2021-02-19 22:45:24.126296", "score": "0.2211", "loss": "2.498", "code": "n equals(Obect other) {if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 102, "n_pass": [472, 84, 30]}
{"time": "2021-02-19 22:45:36.374418", "score": "0.2211", "loss": "2.498", "code": "n equals(Obect other){if (res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 101, "n_pass": [483, 93, 31]}
{"time": "2021-02-19 22:45:37.743466", "score": "0.2211", "loss": "2.498", "code": "n equals(Obect other){if(res) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 100, "n_pass": [487, 94, 32]}
{"time": "2021-02-19 22:45:41.863011", "score": "0.3129", "loss": "2.2012", "code": "n equals(Obect other){if(re) {; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 99, "n_pass": [491, 97, 33]}
{"time": "2021-02-19 22:45:43.228158", "score": "0.3129", "loss": "2.2012", "code": "n equals(Obect other){if(re){; if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 98, "n_pass": [493, 98, 34]}
{"time": "2021-02-19 22:45:44.652578", "score": "0.3129", "loss": "2.2012", "code": "n equals(Obect other){if(re){ if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 97, "n_pass": [495, 99, 35]}
{"time": "2021-02-19 22:45:46.016970", "score": "0.3129", "loss": "2.2012", "code": "n equals(Obect other){if(re){if (ull) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 96, "n_pass": [496, 100, 36]}
{"time": "2021-02-19 22:45:47.433861", "score": "0.3943", "loss": "1.8254", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==ll && uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 94, "n_pass": [500, 101, 37]}
{"time": "2021-02-19 22:45:48.815680", "score": "0.4573", "loss": "1.4845", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==ll& uid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 92, "n_pass": [511, 102, 38]}
{"time": "2021-02-19 22:45:50.199263", "score": "0.2371", "loss": "2.4274", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==lluid != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 90, "n_pass": [512, 103, 39]}
{"time": "2021-02-19 22:45:51.583261", "score": "0.3206", "loss": "1.9939", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==lld != nu ==ll)s.equals(); } rrn ; }", "n_tokens": 88, "n_pass": [513, 104, 40]}
{"time": "2021-02-19 22:45:52.921748", "score": "0.3739", "loss": "1.8586", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==ll!= nu ==ll)s.equals(); } rrn ; }", "n_tokens": 86, "n_pass": [514, 105, 41]}
{"time": "2021-02-19 22:45:54.324833", "score": "0.3866", "loss": "1.8152", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } rrn ; }", "n_tokens": 84, "n_pass": [516, 106, 42]}
{"time": "2021-02-19 22:46:01.158110", "score": "0.3474", "loss": "1.9909", "code": "n equals(Obect other){if(re){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } r ; }", "n_tokens": 82, "n_pass": [528, 111, 43]}
{"time": "2021-02-19 22:46:19.751786", "score": "0.2612", "loss": "2.3484", "code": "n equals(Obect other){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } r ; }", "n_tokens": 81, "n_pass": [556, 122, 44]}
{"time": "2021-02-19 22:46:26.792233", "score": "0.4606", "loss": "1.4573", "code": "n equals(Obect other){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } ; }", "n_tokens": 79, "n_pass": [584, 127, 45]}
{"time": "2021-02-19 22:46:28.198975", "score": "0.4606", "loss": "1.4573", "code": "n equals(Obect other){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 77, "n_pass": [585, 128, 46]}
{"time": "2021-02-19 22:46:39.667896", "score": "0.2093", "loss": "2.4013", "code": "n equals(Obect ther){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 76, "n_pass": [602, 134, 47]}
{"time": "2021-02-19 22:46:42.460189", "score": "0.1856", "loss": "2.638", "code": "n equals(Obect ter){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 75, "n_pass": [604, 136, 48]}
{"time": "2021-02-19 22:46:45.194409", "score": "0.216", "loss": "2.3655", "code": "n equals(Obect te){if(e){if (u) r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 74, "n_pass": [606, 138, 49]}
{"time": "2021-02-19 22:47:09.198859", "score": "0.216", "loss": "2.3655", "code": "n equals(Obect te){if(e){if(u) r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 73, "n_pass": [706, 150, 50]}
{"time": "2021-02-19 22:47:10.674003", "score": "0.216", "loss": "2.3655", "code": "n equals(Obect te){if(e){if(u)r; else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 72, "n_pass": [710, 151, 51]}
{"time": "2021-02-19 22:47:12.119642", "score": "0.2658", "loss": "2.0472", "code": "n equals(Obect te){if(e){if(u); else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 71, "n_pass": [711, 152, 52]}
{"time": "2021-02-19 22:47:13.552056", "score": "0.2658", "loss": "2.0472", "code": "n equals(Obect te){if(e){if(u);else if (t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 70, "n_pass": [713, 153, 53]}
{"time": "2021-02-19 22:47:14.966123", "score": "0.2658", "loss": "2.0472", "code": "n equals(Obect te){if(e){if(u);else if(t ==ll!=u ==ll)s.equals(); } }", "n_tokens": 69, "n_pass": [721, 154, 54]}
{"time": "2021-02-19 22:47:16.403916", "score": "0.2658", "loss": "2.0472", "code": "n equals(Obect te){if(e){if(u);else if(t==ll!=u ==ll)s.equals(); } }", "n_tokens": 68, "n_pass": [724, 155, 55]}
{"time": "2021-02-19 22:47:23.674248", "score": "0.2658", "loss": "2.0472", "code": "n equals(Obect te){if(e){if(u);else if(t==ll!=u==ll)s.equals(); } }", "n_tokens": 67, "n_pass": [732, 160, 56]}
{"time": "2021-02-19 22:47:36.703916", "score": "0.2771", "loss": "1.7136", "code": "n equals(Obect te){if(e){if(u);else if(t==ll!=u==ll)s.equal(); } }", "n_tokens": 66, "n_pass": [745, 169, 57]}
{"time": "2021-02-19 22:47:38.062400", "score": "0.2771", "loss": "1.7136", "code": "n equals(Obect te){if(e){if(u);else if(t==ll!=u==ll)s.equal();} }", "n_tokens": 65, "n_pass": [749, 170, 58]}
{"time": "2021-02-19 22:47:39.423489", "score": "0.2771", "loss": "1.7136", "code": "n equals(Obect te){if(e){if(u);else if(t==ll!=u==ll)s.equal();}}", "n_tokens": 64, "n_pass": [751, 171, 59]}
{"time": "2021-02-19 22:47:50.625394", "score": "0.2522", "loss": "1.9583", "code": "n equals(Obect e){if(e){if(u);else if(t==ll!=u==ll)s.equal();}}", "n_tokens": 63, "n_pass": [768, 177, 60]}
{"time": "2021-02-19 22:47:52.013045", "score": "0.1883", "loss": "2.3542", "code": "n equals(Obect e){if(e){if(u);else if(t=ll!=u==ll)s.equal();}}", "n_tokens": 62, "n_pass": [793, 178, 61]}

Minimal simplified code:
n equals(Obect e){if(e){if(u);else if(t=ll!=u==ll)s.equal();}}

