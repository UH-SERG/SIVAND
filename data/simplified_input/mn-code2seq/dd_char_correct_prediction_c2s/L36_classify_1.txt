
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/BrownClusterPaths_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'BrownClusterPaths(Constituent)' defined on line 101 of md.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9999626874923706, 0.011863823980093002

Trace of simplified code(s):
{"time": "2021-02-19 10:34:26.679141", "score": "1.0", "loss": "0.0119", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'BrownClusterPaths(Constituent)' defined on line 101 of md.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 388, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 10:34:28.033775", "score": "1.0", "loss": "0.0119", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 291, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 10:34:29.379387", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {les.getClass().getName(); System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 243, "n_pass": [23, 3, 3]}
{"time": "2021-02-19 10:34:30.738166", "score": "1.0", "loss": "0.0106", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 219, "n_pass": [39, 4, 4]}
{"time": "2021-02-19 10:34:32.093982", "score": "0.9999", "loss": "0.0152", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 194, "n_pass": [42, 5, 5]}
{"time": "2021-02-19 10:34:35.179072", "score": "0.9999", "loss": "0.0184", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); new Exceptiostem.exit(1); } return super.classify(examples); }", "n_tokens": 182, "n_pass": [71, 7, 6]}
{"time": "2021-02-19 10:34:36.517894", "score": "1.0", "loss": "0.0155", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); stem.exit(1); } return super.classify(examples); }", "n_tokens": 170, "n_pass": [81, 8, 7]}
{"time": "2021-02-19 10:34:37.834106", "score": "0.9999", "loss": "0.0213", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } return super.classify(examples); }", "n_tokens": 158, "n_pass": [82, 9, 8]}
{"time": "2021-02-19 10:34:40.871609", "score": "0.9291", "loss": "0.4125", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 152, "n_pass": [123, 11, 9]}
{"time": "2021-02-19 10:34:44.832362", "score": "0.8066", "loss": "0.7056", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 146, "n_pass": [128, 14, 10]}
{"time": "2021-02-19 10:34:46.891141", "score": "0.8341", "loss": "0.6744", "code": "or[] classify(Object[] es) { if (!(examples instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 140, "n_pass": [133, 15, 11]}
{"time": "2021-02-19 10:34:48.222871", "score": "0.8639", "loss": "0.6568", "code": "or[] classify(Object[] es) { if (!(es instanceof Constituent[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 134, "n_pass": [136, 16, 12]}
{"time": "2021-02-19 10:34:49.538826", "score": "0.8801", "loss": "0.6706", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {; System.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 128, "n_pass": [140, 17, 13]}
{"time": "2021-02-19 10:34:50.859113", "score": "0.9146", "loss": "0.5585", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.err.println(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 122, "n_pass": [142, 18, 14]}
{"time": "2021-02-19 10:34:52.172756", "score": "0.9304", "loss": "0.5047", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.errln(\"Clasinput.\"); ; } reuper.classify(examples); }", "n_tokens": 116, "n_pass": [144, 19, 15]}
{"time": "2021-02-19 10:34:53.489644", "score": "0.9588", "loss": "0.3358", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {em.errln(\"Clt.\"); ; } reuper.classify(examples); }", "n_tokens": 110, "n_pass": [146, 20, 16]}
{"time": "2021-02-19 10:34:58.171558", "score": "0.9665", "loss": "0.2339", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; } reuper.classify(examples); }", "n_tokens": 104, "n_pass": [163, 23, 17]}
{"time": "2021-02-19 10:35:02.906785", "score": "0.9809", "loss": "0.1647", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }uper.classify(examples); }", "n_tokens": 101, "n_pass": [220, 26, 18]}
{"time": "2021-02-19 10:35:04.215334", "score": "0.9817", "loss": "0.1587", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(examples); }", "n_tokens": 98, "n_pass": [221, 27, 19]}
{"time": "2021-02-19 10:35:09.535681", "score": "0.9807", "loss": "0.1354", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(eples); }", "n_tokens": 95, "n_pass": [226, 31, 20]}
{"time": "2021-02-19 10:35:10.859850", "score": "0.9935", "loss": "0.0596", "code": "or[] classify(Object[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 91, "n_pass": [227, 32, 21]}
{"time": "2021-02-19 10:35:12.933624", "score": "0.9636", "loss": "0.1484", "code": "or[] classify(Oct[] es) { if (!(es instanceof Const[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 88, "n_pass": [234, 33, 22]}
{"time": "2021-02-19 10:35:14.271299", "score": "0.9805", "loss": "0.0898", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"Clt.\"); ; }r.classify(e); }", "n_tokens": 85, "n_pass": [246, 34, 23]}
{"time": "2021-02-19 10:35:22.066495", "score": "0.9931", "loss": "0.0491", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); ; }r.classify(e); }", "n_tokens": 83, "n_pass": [342, 38, 24]}
{"time": "2021-02-19 10:35:23.391452", "score": "0.9931", "loss": "0.0491", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }r.classify(e); }", "n_tokens": 81, "n_pass": [345, 39, 25]}
{"time": "2021-02-19 10:35:24.714556", "score": "0.9476", "loss": "0.1998", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 79, "n_pass": [347, 40, 26]}
{"time": "2021-02-19 10:35:31.347045", "score": "0.9562", "loss": "0.1734", "code": "r[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 78, "n_pass": [355, 45, 27]}
{"time": "2021-02-19 10:35:32.655526", "score": "0.9562", "loss": "0.1734", "code": "r[]classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 77, "n_pass": [359, 46, 28]}
{"time": "2021-02-19 10:35:36.959921", "score": "0.9667", "loss": "0.1976", "code": "r[]classify(ct[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 76, "n_pass": [369, 47, 29]}
{"time": "2021-02-19 10:35:38.282814", "score": "0.9504", "loss": "0.2223", "code": "r[]classify(t[] es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 75, "n_pass": [370, 48, 30]}
{"time": "2021-02-19 10:35:39.626905", "score": "0.9504", "loss": "0.2223", "code": "r[]classify(t[]es) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 74, "n_pass": [374, 49, 31]}
{"time": "2021-02-19 10:35:40.965037", "score": "0.9151", "loss": "0.2933", "code": "r[]classify(t[]s) { if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 73, "n_pass": [375, 50, 32]}
{"time": "2021-02-19 10:35:42.307434", "score": "0.9151", "loss": "0.2933", "code": "r[]classify(t[]s){ if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 72, "n_pass": [378, 51, 33]}
{"time": "2021-02-19 10:35:43.627712", "score": "0.9151", "loss": "0.2933", "code": "r[]classify(t[]s){if (!(es instanceof Co[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 71, "n_pass": [380, 52, 34]}
{"time": "2021-02-19 10:35:55.918788", "score": "0.9599", "loss": "0.1643", "code": "r[]classify(t[]s){if (!(es instanceof o[])) {ln(\"C.\"); }classify(e); }", "n_tokens": 70, "n_pass": [488, 57, 35]}
{"time": "2021-02-19 10:35:57.240463", "score": "0.9599", "loss": "0.1643", "code": "r[]classify(t[]s){if (!(es instanceof o[])){ln(\"C.\"); }classify(e); }", "n_tokens": 69, "n_pass": [494, 58, 36]}
{"time": "2021-02-19 10:35:58.561508", "score": "0.9253", "loss": "0.3013", "code": "r[]classify(t[]s){if (!(es instanceof o[])){n(\"C.\"); }classify(e); }", "n_tokens": 68, "n_pass": [496, 59, 37]}
{"time": "2021-02-19 10:35:59.868715", "score": "0.905", "loss": "0.3535", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\"C.\"); }classify(e); }", "n_tokens": 67, "n_pass": [497, 60, 38]}
{"time": "2021-02-19 10:36:01.189596", "score": "0.9156", "loss": "0.3131", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\".\"); }classify(e); }", "n_tokens": 66, "n_pass": [500, 61, 39]}
{"time": "2021-02-19 10:36:02.495787", "score": "0.9284", "loss": "0.2599", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\"\"); }classify(e); }", "n_tokens": 65, "n_pass": [501, 62, 40]}
{"time": "2021-02-19 10:36:03.803592", "score": "0.9284", "loss": "0.2599", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\"\");}classify(e); }", "n_tokens": 64, "n_pass": [505, 63, 41]}
{"time": "2021-02-19 10:36:15.645992", "score": "0.2255", "loss": "2.6725", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\"\");}classify(); }", "n_tokens": 63, "n_pass": [516, 72, 42]}
{"time": "2021-02-19 10:36:16.955835", "score": "0.2255", "loss": "2.6725", "code": "r[]classify(t[]s){if (!(es instanceof o[])){(\"\");}classify();}", "n_tokens": 62, "n_pass": [519, 73, 43]}
{"time": "2021-02-19 10:36:21.288896", "score": "0.2255", "loss": "2.6725", "code": "r[]classify(t[]s){if(!(es instanceof o[])){(\"\");}classify();}", "n_tokens": 61, "n_pass": [541, 74, 44]}
{"time": "2021-02-19 10:36:22.606800", "score": "0.318", "loss": "2.2395", "code": "r[]classify(t[]s){if((es instanceof o[])){(\"\");}classify();}", "n_tokens": 60, "n_pass": [543, 75, 45]}

Minimal simplified code:
r[]classify(t[]s){if((es instanceof o[])){("");}classify();}

