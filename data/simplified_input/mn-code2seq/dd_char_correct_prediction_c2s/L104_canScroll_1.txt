
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ppamorim__Dragger/dragger/src/main/java/com/github/ppamorim/dragger/ViewDragHelper_canScroll.java
method_name = canScroll
method_body = protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x + scrollX >= child.getLeft() && x + scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }
predict, score, loss = canScroll, 0.9701207876205444, 0.09337981045246124

Trace of simplified code(s):
{"time": "2021-02-19 15:09:38.064549", "score": "0.987", "loss": "0.0591", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x + scrollX >= child.getLeft() && x + scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 703, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 15:09:39.522959", "score": "0.9497", "loss": "0.1645", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x + scrollX >= child.getLeft() && x + scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 659, "n_pass": [48, 2, 2]}
{"time": "2021-02-19 15:09:40.923742", "score": "0.9901", "loss": "0.0463", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 615, "n_pass": [51, 3, 3]}
{"time": "2021-02-19 15:09:42.319361", "score": "0.9859", "loss": "0.0503", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x < child.getRight() && y + scrollY >= child.g& canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 571, "n_pass": [53, 4, 4]}
{"time": "2021-02-19 15:09:43.740326", "score": "0.9888", "loss": "0.0408", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x < child.getRight() && y + scrollY >= child.g& canScroll(child, true, dx, dy, x + scrollXop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 527, "n_pass": [55, 5, 5]}
{"time": "2021-02-19 15:09:45.156932", "score": "0.9571", "loss": "0.1777", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x & canScroll(child, true, dx, dy, x + scrollXop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 483, "n_pass": [66, 6, 6]}
{"time": "2021-02-19 15:09:46.569293", "score": "0.9903", "loss": "0.0455", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 461, "n_pass": [101, 7, 7]}
{"time": "2021-02-19 15:09:47.954320", "score": "0.9705", "loss": "0.1254", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScroll| ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 439, "n_pass": [105, 8, 8]}
{"time": "2021-02-19 15:09:49.320594", "score": "0.9409", "loss": "0.2203", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 417, "n_pass": [106, 9, 9]}
{"time": "2021-02-19 15:09:51.084195", "score": "0.9747", "loss": "0.0887", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 395, "n_pass": [115, 10, 10]}
{"time": "2021-02-19 15:09:52.456393", "score": "0.9303", "loss": "0.2066", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi.getChildAt(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 373, "n_pass": [120, 11, 11]}
{"time": "2021-02-19 15:09:54.247470", "score": "0.9758", "loss": "0.0862", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } return checkV && (ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 362, "n_pass": [172, 12, 12]}
{"time": "2021-02-19 15:09:56.993664", "score": "0.6155", "loss": "1.8444", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 351, "n_pass": [178, 14, 13]}
{"time": "2021-02-19 15:09:58.378179", "score": "0.6699", "loss": "1.6245", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 340, "n_pass": [180, 15, 14]}
{"time": "2021-02-19 15:10:02.863110", "score": "0.6368", "loss": "1.787", "code": "protected boolean canScroll(View v, booleant dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 329, "n_pass": [187, 18, 15]}
{"time": "2021-02-19 15:10:08.762535", "score": "0.7273", "loss": "1.3802", "code": "protected boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 318, "n_pass": [217, 22, 16]}
{"time": "2021-02-19 15:10:12.933156", "score": "0.6678", "loss": "1.6281", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; lY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 308, "n_pass": [244, 25, 17]}
{"time": "2021-02-19 15:10:14.686789", "score": "0.7935", "loss": "0.8947", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;  int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 297, "n_pass": [256, 26, 18]}
{"time": "2021-02-19 15:10:19.309914", "score": "0.6795", "loss": "1.5651", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 292, "n_pass": [340, 29, 19]}
{"time": "2021-02-19 15:10:20.664427", "score": "0.822", "loss": "0.7574", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;t = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 287, "n_pass": [341, 30, 20]}
{"time": "2021-02-19 15:10:22.054214", "score": "0.6708", "loss": "1.6059", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;roup.getChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 282, "n_pass": [342, 31, 21]}
{"time": "2021-02-19 15:10:23.416333", "score": "0.6791", "loss": "1.5234", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;etChildCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 276, "n_pass": [343, 32, 22]}
{"time": "2021-02-19 15:10:24.792548", "score": "0.7913", "loss": "0.8701", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (int i = count - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 270, "n_pass": [344, 33, 23]}
{"time": "2021-02-19 15:10:26.186835", "score": "0.7065", "loss": "1.4044", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) { fi(i); if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 264, "n_pass": [348, 34, 24]}
{"time": "2021-02-19 15:10:27.579064", "score": "0.7337", "loss": "1.2449", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(child, truop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 258, "n_pass": [353, 35, 25]}
{"time": "2021-02-19 15:10:31.690538", "score": "0.536", "loss": "2.7111", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (ViewCompaVertically(v, -dy)); }", "n_tokens": 252, "n_pass": [358, 38, 26]}
{"time": "2021-02-19 15:10:35.778204", "score": "0.5242", "loss": "2.9253", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (ViewComically(v, -dy)); }", "n_tokens": 246, "n_pass": [366, 41, 27]}
{"time": "2021-02-19 15:10:37.143359", "score": "0.5405", "loss": "2.7258", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (ViewCom(v, -dy)); }", "n_tokens": 240, "n_pass": [367, 42, 28]}
{"time": "2021-02-19 15:10:40.633741", "score": "0.5266", "loss": "3.1049", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (ViewCom(v, -dy)); }", "n_tokens": 235, "n_pass": [384, 44, 29]}
{"time": "2021-02-19 15:10:50.224520", "score": "0.56", "loss": "2.7994", "code": "boolean canScroll(Viewt dx, int dy, int x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 229, "n_pass": [411, 51, 30]}
{"time": "2021-02-19 15:11:09.256298", "score": "0.5798", "loss": "2.6038", "code": "boolean canScroll(ewt dx, int dy, int x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 227, "n_pass": [551, 63, 31]}
{"time": "2021-02-19 15:11:10.614907", "score": "0.5623", "loss": "2.8665", "code": "boolean canScroll(t dx, int dy, int x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 225, "n_pass": [552, 64, 32]}
{"time": "2021-02-19 15:11:11.965665", "score": "0.5646", "loss": "2.8987", "code": "boolean canScroll(t dx, t dy, int x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 223, "n_pass": [556, 65, 33]}
{"time": "2021-02-19 15:11:13.324114", "score": "0.5809", "loss": "2.8068", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup) v;dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 221, "n_pass": [560, 66, 34]}
{"time": "2021-02-19 15:11:27.036202", "score": "0.6093", "loss": "2.4434", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)dCount(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 218, "n_pass": [587, 76, 35]}
{"time": "2021-02-19 15:11:28.392670", "score": "0.6135", "loss": "2.3946", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (intount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 215, "n_pass": [588, 77, 36]}
{"time": "2021-02-19 15:11:29.764063", "score": "0.6135", "loss": "2.3946", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; i--) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 212, "n_pass": [593, 78, 37]}
{"time": "2021-02-19 15:11:32.518406", "score": "0.6923", "loss": "1.6207", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if (x & canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 209, "n_pass": [600, 80, 38]}
{"time": "2021-02-19 15:11:33.874628", "score": "0.8478", "loss": "0.9017", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(chilop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 206, "n_pass": [604, 81, 39]}
{"time": "2021-02-19 15:11:39.347282", "score": "0.8533", "loss": "0.8554", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { return true; } } } retur (V(v, -dy)); }", "n_tokens": 203, "n_pass": [609, 85, 40]}
{"time": "2021-02-19 15:11:40.704983", "score": "0.6507", "loss": "2.2871", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } retur (V(v, -dy)); }", "n_tokens": 200, "n_pass": [615, 86, 41]}
{"time": "2021-02-19 15:11:42.079164", "score": "0.6718", "loss": "1.9562", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } }tur (V(v, -dy)); }", "n_tokens": 197, "n_pass": [619, 87, 42]}
{"time": "2021-02-19 15:11:43.429949", "score": "0.6881", "loss": "2.1209", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v, -dy)); }", "n_tokens": 194, "n_pass": [620, 88, 43]}
{"time": "2021-02-19 15:11:44.799810", "score": "0.7343", "loss": "1.7427", "code": "boolean canScroll(t dx, t dy, t x, int y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 191, "n_pass": [623, 89, 44]}
{"time": "2021-02-19 15:11:52.147182", "score": "0.7266", "loss": "1.8114", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof Voup) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 189, "n_pass": [643, 93, 45]}
{"time": "2021-02-19 15:11:53.526376", "score": "0.7406", "loss": "1.6676", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { final ViewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 186, "n_pass": [653, 94, 46]}
{"time": "2021-02-19 15:11:54.869402", "score": "0.7128", "loss": "1.9064", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalewGroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 183, "n_pass": [657, 95, 47]}
{"time": "2021-02-19 15:11:56.247070", "score": "0.6902", "loss": "2.0715", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalroup group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 180, "n_pass": [658, 96, 48]}
{"time": "2021-02-19 15:11:57.624424", "score": "0.6902", "loss": "2.0715", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp group = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 177, "n_pass": [659, 97, 49]}
{"time": "2021-02-19 15:12:00.337844", "score": "0.6763", "loss": "2.1378", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (ViewGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 174, "n_pass": [661, 99, 50]}
{"time": "2021-02-19 15:12:01.694528", "score": "0.6568", "loss": "2.2713", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (VGroup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 171, "n_pass": [664, 100, 51]}
{"time": "2021-02-19 15:12:03.041933", "score": "0.6546", "loss": "2.3383", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for (ount - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 168, "n_pass": [665, 101, 52]}
{"time": "2021-02-19 15:12:04.402788", "score": "0.6648", "loss": "2.2265", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for (t - 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 165, "n_pass": [671, 102, 53]}
{"time": "2021-02-19 15:12:05.766462", "score": "0.7029", "loss": "1.7786", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) { returnue; } } } (V(v,y)); }", "n_tokens": 162, "n_pass": [672, 103, 54]}
{"time": "2021-02-19 15:12:11.224401", "score": "0.7029", "loss": "1.7786", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) { urnue; } } } (V(v,y)); }", "n_tokens": 159, "n_pass": [687, 107, 55]}
{"time": "2021-02-19 15:12:12.597602", "score": "0.7059", "loss": "1.7107", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) { ue; } } } (V(v,y)); }", "n_tokens": 156, "n_pass": [688, 108, 56]}
{"time": "2021-02-19 15:12:13.971252", "score": "0.7152", "loss": "1.6286", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) { finalp gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 153, "n_pass": [689, 109, 57]}
{"time": "2021-02-19 15:12:21.303211", "score": "0.7152", "loss": "1.6286", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) {nalp gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 150, "n_pass": [723, 113, 58]}
{"time": "2021-02-19 15:12:22.673608", "score": "0.7466", "loss": "1.3724", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) {p gp = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 147, "n_pass": [724, 114, 59]}
{"time": "2021-02-19 15:12:24.016554", "score": "0.7281", "loss": "1.3388", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V) {p = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 144, "n_pass": [725, 115, 60]}
{"time": "2021-02-19 15:12:41.588344", "score": "0.7281", "loss": "1.3388", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p = (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 143, "n_pass": [895, 122, 61]}
{"time": "2021-02-19 15:12:42.933515", "score": "0.7281", "loss": "1.3388", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p= (Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 142, "n_pass": [898, 123, 62]}
{"time": "2021-02-19 15:12:44.287973", "score": "0.7281", "loss": "1.3388", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(Vup)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 141, "n_pass": [900, 124, 63]}
{"time": "2021-02-19 15:12:45.630649", "score": "0.723", "loss": "1.4269", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(up)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 140, "n_pass": [902, 125, 64]}
{"time": "2021-02-19 15:12:46.963912", "score": "0.706", "loss": "1.4602", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(p)unt(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 139, "n_pass": [903, 126, 65]}
{"time": "2021-02-19 15:12:48.328558", "score": "0.6867", "loss": "1.6208", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(p)t(); for ( 1; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 137, "n_pass": [906, 127, 66]}
{"time": "2021-02-19 15:12:49.678092", "score": "0.706", "loss": "1.3427", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(cop())) {  } } } (V(v,y)); }", "n_tokens": 135, "n_pass": [912, 128, 67]}
{"time": "2021-02-19 15:12:56.441308", "score": "0.6998", "loss": "1.325", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(v,y)); }", "n_tokens": 133, "n_pass": [928, 133, 68]}
{"time": "2021-02-19 15:12:57.796559", "score": "0.6531", "loss": "1.7292", "code": "boolean canScroll(t dx, t dy, t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 131, "n_pass": [938, 134, 69]}
{"time": "2021-02-19 15:13:15.152782", "score": "0.6531", "loss": "1.7292", "code": "boolean canScroll(t dx,t dy, t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 130, "n_pass": [965, 144, 70]}
{"time": "2021-02-19 15:13:16.513323", "score": "0.6421", "loss": "1.7576", "code": "boolean canScroll(t dx,t y, t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 129, "n_pass": [968, 145, 71]}
{"time": "2021-02-19 15:13:17.862490", "score": "0.6421", "loss": "1.7576", "code": "boolean canScroll(t dx,t y,t x,nt y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 128, "n_pass": [971, 146, 72]}
{"time": "2021-02-19 15:13:19.222101", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y) { if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 127, "n_pass": [976, 147, 73]}
{"time": "2021-02-19 15:13:20.564300", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){ if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 126, "n_pass": [981, 148, 74]}
{"time": "2021-02-19 15:13:21.902403", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if (v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 125, "n_pass": [983, 149, 75]}
{"time": "2021-02-19 15:13:23.242595", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t(); for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 124, "n_pass": [986, 150, 76]}
{"time": "2021-02-19 15:13:53.493984", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for (; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 123, "n_pass": [1147, 164, 77]}
{"time": "2021-02-19 15:13:54.869097", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(; i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 122, "n_pass": [1150, 165, 78]}
{"time": "2021-02-19 15:13:56.212650", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i >= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 121, "n_pass": [1153, 166, 79]}
{"time": "2021-02-19 15:13:57.571420", "score": "0.6705", "loss": "1.5966", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>= 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 120, "n_pass": [1155, 167, 80]}
{"time": "2021-02-19 15:14:00.276952", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i> 0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 119, "n_pass": [1157, 169, 81]}
{"time": "2021-02-19 15:14:01.640623", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0; ) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 118, "n_pass": [1158, 170, 82]}
{"time": "2021-02-19 15:14:02.987082", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;) {; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 117, "n_pass": [1161, 171, 83]}
{"time": "2021-02-19 15:14:04.339963", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){; if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 116, "n_pass": [1163, 172, 84]}
{"time": "2021-02-19 15:14:05.704297", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){ if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 115, "n_pass": [1165, 173, 85]}
{"time": "2021-02-19 15:14:07.060879", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if ( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 114, "n_pass": [1166, 174, 86]}
{"time": "2021-02-19 15:14:08.393720", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if( canScroll(p())) {  } } } (V(y)); }", "n_tokens": 113, "n_pass": [1169, 175, 87]}
{"time": "2021-02-19 15:14:09.762781", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())) {  } } } (V(y)); }", "n_tokens": 112, "n_pass": [1171, 176, 88]}
{"time": "2021-02-19 15:14:23.214067", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){  } } } (V(y)); }", "n_tokens": 111, "n_pass": [1187, 186, 89]}
{"time": "2021-02-19 15:14:24.575776", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){ } } } (V(y)); }", "n_tokens": 110, "n_pass": [1189, 187, 90]}
{"time": "2021-02-19 15:14:25.917395", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){} } } (V(y)); }", "n_tokens": 109, "n_pass": [1190, 188, 91]}
{"time": "2021-02-19 15:14:27.259621", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){}} } (V(y)); }", "n_tokens": 108, "n_pass": [1192, 189, 92]}
{"time": "2021-02-19 15:14:28.601717", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){}}} (V(y)); }", "n_tokens": 107, "n_pass": [1194, 190, 93]}
{"time": "2021-02-19 15:14:29.960246", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){}}}(V(y)); }", "n_tokens": 106, "n_pass": [1196, 191, 94]}
{"time": "2021-02-19 15:14:33.984161", "score": "0.6464", "loss": "1.7513", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i>0;){if(canScroll(p())){}}}(V(y));}", "n_tokens": 105, "n_pass": [1204, 194, 95]}
{"time": "2021-02-19 15:14:51.236890", "score": "0.6414", "loss": "1.6124", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i0;){if(canScroll(p())){}}}(V(y));}", "n_tokens": 104, "n_pass": [1276, 204, 96]}
{"time": "2021-02-19 15:14:52.581771", "score": "0.6414", "loss": "1.6124", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i;){if(canScroll(p())){}}}(V(y));}", "n_tokens": 103, "n_pass": [1277, 205, 97]}
{"time": "2021-02-19 15:15:07.376021", "score": "0.5662", "loss": "2.1093", "code": "boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i;){if(canScroll(p())){}}}(V());}", "n_tokens": 102, "n_pass": [1306, 216, 98]}

Minimal simplified code:
boolean canScroll(t dx,t y,t x,t y){if(v instanceof V){p=(p)t();for(;i;){if(canScroll(p())){}}}(V());}

