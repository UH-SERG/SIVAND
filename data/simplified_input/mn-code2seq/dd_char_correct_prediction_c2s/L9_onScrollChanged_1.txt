
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/widget/ListenableScrollView_onScrollChanged.java
method_name = onScrollChanged
method_body = @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }
predict, score, loss = onScrollChanged, 0.9995158910751343, 0.0015608442481607199

Trace of simplified code(s):
{"time": "2021-02-19 01:09:41.856187", "score": "0.9995", "loss": "0.0016", "code": "@Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 187, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 01:09:43.200249", "score": "0.9991", "loss": "0.003", "code": "d onScrollChanged(int l, int t, int oldl, int oldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 164, "n_pass": [20, 2, 2]}
{"time": "2021-02-19 01:09:44.528911", "score": "0.9825", "loss": "0.0567", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t, oldl, oldt); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 141, "n_pass": [21, 3, 3]}
{"time": "2021-02-19 01:09:47.213647", "score": "0.8971", "loss": "0.368", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScrollListener != null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 129, "n_pass": [43, 5, 4]}
{"time": "2021-02-19 01:09:48.538163", "score": "0.9262", "loss": "0.249", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mScrollListener.onScroll(oldt, t); } }", "n_tokens": 117, "n_pass": [45, 6, 5]}
{"time": "2021-02-19 01:09:49.876919", "score": "0.9515", "loss": "0.1596", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSr.onScroll(oldt, t); } }", "n_tokens": 105, "n_pass": [47, 7, 6]}
{"time": "2021-02-19 01:09:52.909826", "score": "0.9559", "loss": "0.1577", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSroll(oldt, t); } }", "n_tokens": 99, "n_pass": [75, 9, 7]}
{"time": "2021-02-19 01:09:54.237727", "score": "0.9686", "loss": "0.1143", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro= null) { mSroll(o); } }", "n_tokens": 93, "n_pass": [76, 10, 8]}
{"time": "2021-02-19 01:10:00.771144", "score": "0.963", "loss": "0.1404", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) { mSroll(o); } }", "n_tokens": 87, "n_pass": [90, 14, 9]}
{"time": "2021-02-19 01:10:07.250881", "score": "0.9793", "loss": "0.0763", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) {roll(o); } }", "n_tokens": 84, "n_pass": [137, 18, 10]}
{"time": "2021-02-19 01:10:08.603192", "score": "0.8648", "loss": "0.6272", "code": "d onScrollChanged(int loldt) { super.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 81, "n_pass": [138, 19, 11]}
{"time": "2021-02-19 01:10:12.146712", "score": "0.9656", "loss": "0.1325", "code": "d onScrollChanged(int lo) { super.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 78, "n_pass": [151, 20, 12]}
{"time": "2021-02-19 01:10:14.865194", "score": "0.8271", "loss": "1.0763", "code": "d onScrollChanged(int lo) { su.onScrollChanged(l, t); if (mScro) {l(o); } }", "n_tokens": 75, "n_pass": [154, 22, 13]}
{"time": "2021-02-19 01:10:22.891221", "score": "0.9304", "loss": "0.3669", "code": "d onScrollChanged(int lo) { su.onScrollChanged(l); if (mScro) {l(o); } }", "n_tokens": 72, "n_pass": [161, 28, 14]}
{"time": "2021-02-19 01:10:24.241788", "score": "0.9395", "loss": "0.3254", "code": "d onScrollChanged(int lo) { su.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 69, "n_pass": [165, 29, 15]}
{"time": "2021-02-19 01:10:42.331484", "score": "0.8997", "loss": "0.5573", "code": "d onScrollChanged(nt lo) { su.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 68, "n_pass": [264, 35, 16]}
{"time": "2021-02-19 01:10:43.648533", "score": "0.8806", "loss": "0.7149", "code": "d onScrollChanged(t lo) { su.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 67, "n_pass": [265, 36, 17]}
{"time": "2021-02-19 01:10:44.987778", "score": "0.8552", "loss": "0.915", "code": "d onScrollChanged(t o) { su.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 66, "n_pass": [267, 37, 18]}
{"time": "2021-02-19 01:10:46.365471", "score": "0.8552", "loss": "0.915", "code": "d onScrollChanged(t o){ su.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 65, "n_pass": [270, 38, 19]}
{"time": "2021-02-19 01:10:47.712520", "score": "0.7562", "loss": "1.5445", "code": "d onScrollChanged(t o){u.onScrollChanged(l); if (mS) {l(o); } }", "n_tokens": 63, "n_pass": [272, 39, 20]}
{"time": "2021-02-19 01:11:17.607033", "score": "0.7443", "loss": "1.6096", "code": "d onScrollChanged(t o){u.onScrollChanged(); if (mS) {l(o); } }", "n_tokens": 62, "n_pass": [364, 55, 21]}
{"time": "2021-02-19 01:11:18.913783", "score": "0.7443", "loss": "1.6096", "code": "d onScrollChanged(t o){u.onScrollChanged();if (mS) {l(o); } }", "n_tokens": 61, "n_pass": [366, 56, 22]}
{"time": "2021-02-19 01:11:20.271685", "score": "0.7443", "loss": "1.6096", "code": "d onScrollChanged(t o){u.onScrollChanged();if(mS) {l(o); } }", "n_tokens": 60, "n_pass": [369, 57, 23]}
{"time": "2021-02-19 01:11:21.601639", "score": "0.7049", "loss": "1.9842", "code": "d onScrollChanged(t o){u.onScrollChanged();if(S) {l(o); } }", "n_tokens": 59, "n_pass": [371, 58, 24]}
{"time": "2021-02-19 01:11:22.919587", "score": "0.7049", "loss": "1.9842", "code": "d onScrollChanged(t o){u.onScrollChanged();if(S){l(o); } }", "n_tokens": 58, "n_pass": [374, 59, 25]}
{"time": "2021-02-19 01:11:25.564178", "score": "0.6267", "loss": "2.3398", "code": "d onScrollChanged(t o){u.onScrollChanged();if(S){l(); } }", "n_tokens": 57, "n_pass": [378, 61, 26]}
{"time": "2021-02-19 01:11:26.921229", "score": "0.6267", "loss": "2.3398", "code": "d onScrollChanged(t o){u.onScrollChanged();if(S){l();} }", "n_tokens": 56, "n_pass": [381, 62, 27]}
{"time": "2021-02-19 01:11:28.230525", "score": "0.6267", "loss": "2.3398", "code": "d onScrollChanged(t o){u.onScrollChanged();if(S){l();}}", "n_tokens": 55, "n_pass": [383, 63, 28]}

Minimal simplified code:
d onScrollChanged(t o){u.onScrollChanged();if(S){l();}}

