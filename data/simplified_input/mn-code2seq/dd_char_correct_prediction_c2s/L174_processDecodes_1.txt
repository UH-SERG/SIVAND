
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/jsf/jsf-widgets/src/java/org/sakaiproject/jsf/component/FlowState_processDecodes.java
method_name = processDecodes
method_body = public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug("processDecodes " + getBean()); super.processDecodes(context); }
predict, score, loss = processDecodes, 0.9933169484138489, 0.016400841996073723

Trace of simplified code(s):
{"time": "2021-02-19 19:40:35.566234", "score": "0.9933", "loss": "0.0164", "code": "public void processDecodes(FacesContext context) { if (log.isDebugEnabled()) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 19:40:37.268776", "score": "0.9924", "loss": "0.0191", "code": "public void processDecodes(FacesContext context) { if (l) log.debug(\"processDecodes \" + getBean()); super.processDecodes(context); }", "n_tokens": 132, "n_pass": [23, 2, 2]}
{"time": "2021-02-19 19:40:38.988422", "score": "0.9943", "loss": "0.0147", "code": "public void processDecodes(FacesContext context) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 122, "n_pass": [46, 3, 3]}
{"time": "2021-02-19 19:40:41.695636", "score": "0.9938", "loss": "0.0156", "code": "id processDecodes(FacesContext context) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 113, "n_pass": [52, 5, 4]}
{"time": "2021-02-19 19:40:43.387943", "score": "0.9924", "loss": "0.021", "code": "id processDecodes(ext context) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 104, "n_pass": [55, 6, 5]}
{"time": "2021-02-19 19:40:46.405452", "score": "0.9944", "loss": "0.0171", "code": "id processDecodes(ext co) { if (l) log.debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 99, "n_pass": [91, 8, 6]}
{"time": "2021-02-19 19:40:47.717084", "score": "0.9926", "loss": "0.0255", "code": "id processDecodes(ext co) { if (l)debug(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 94, "n_pass": [94, 9, 7]}
{"time": "2021-02-19 19:40:49.026093", "score": "0.9863", "loss": "0.0487", "code": "id processDecodes(ext co) { if (l)(\"pros \" + getBean()); super.processDecodes(context); }", "n_tokens": 89, "n_pass": [95, 10, 8]}
{"time": "2021-02-19 19:40:50.345870", "score": "0.9835", "loss": "0.0666", "code": "id processDecodes(ext co) { if (l)(\"pros \" +ean()); super.processDecodes(context); }", "n_tokens": 84, "n_pass": [98, 11, 9]}
{"time": "2021-02-19 19:40:55.579299", "score": "0.9582", "loss": "0.2676", "code": "id processDecodes(ext co) { if (l)(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 79, "n_pass": [105, 15, 10]}
{"time": "2021-02-19 19:40:58.373872", "score": "0.9017", "loss": "0.9224", "code": "id processDecodes(ext co) { i(\"pros \" +ean()); super.processDecodes(ct); }", "n_tokens": 74, "n_pass": [114, 16, 11]}
{"time": "2021-02-19 19:41:05.092969", "score": "0.854", "loss": "1.1902", "code": "id processDecodes(ext co) { i(\"ps \" +ean()); super.processDecodes(ct); }", "n_tokens": 72, "n_pass": [165, 20, 12]}
{"time": "2021-02-19 19:41:06.399965", "score": "0.9451", "loss": "0.3782", "code": "id processDecodes(ext co) { i(\"p\" +ean()); super.processDecodes(ct); }", "n_tokens": 70, "n_pass": [166, 21, 13]}
{"time": "2021-02-19 19:41:07.732730", "score": "0.9645", "loss": "0.2293", "code": "id processDecodes(ext co) { i(\"p\" +e()); super.processDecodes(ct); }", "n_tokens": 68, "n_pass": [169, 22, 14]}
{"time": "2021-02-19 19:41:09.039432", "score": "0.9548", "loss": "0.3144", "code": "id processDecodes(ext co) { i(\"p\" +e); super.processDecodes(ct); }", "n_tokens": 66, "n_pass": [170, 23, 15]}
{"time": "2021-02-19 19:41:21.225117", "score": "0.9793", "loss": "0.133", "code": "id processDecodes(t co) { i(\"p\" +e); super.processDecodes(ct); }", "n_tokens": 64, "n_pass": [190, 30, 16]}
{"time": "2021-02-19 19:41:22.535802", "score": "0.9531", "loss": "0.3763", "code": "id processDecodes(t co) { i(\"p\" ); super.processDecodes(ct); }", "n_tokens": 62, "n_pass": [198, 31, 17]}
{"time": "2021-02-19 19:41:37.052894", "score": "0.9531", "loss": "0.3763", "code": "id processDecodes(t co) { i(\"p\" );super.processDecodes(ct); }", "n_tokens": 61, "n_pass": [279, 38, 18]}
{"time": "2021-02-19 19:41:55.525315", "score": "0.7423", "loss": "1.4547", "code": "id processDecodes(t co) { i(\"p\" );super.processDecodes(); }", "n_tokens": 59, "n_pass": [294, 52, 19]}
{"time": "2021-02-19 19:41:56.859774", "score": "0.7675", "loss": "1.2842", "code": "d processDecodes(t co) { i(\"p\" );super.processDecodes(); }", "n_tokens": 58, "n_pass": [297, 53, 20]}
{"time": "2021-02-19 19:42:06.734642", "score": "0.7675", "loss": "1.2842", "code": "d processDecodes(t co){ i(\"p\" );super.processDecodes(); }", "n_tokens": 57, "n_pass": [320, 56, 21]}
{"time": "2021-02-19 19:42:08.080502", "score": "0.7675", "loss": "1.2842", "code": "d processDecodes(t co){i(\"p\" );super.processDecodes(); }", "n_tokens": 56, "n_pass": [322, 57, 22]}
{"time": "2021-02-19 19:42:10.706665", "score": "0.8793", "loss": "0.7717", "code": "d processDecodes(t co){i(\"\" );super.processDecodes(); }", "n_tokens": 55, "n_pass": [326, 59, 23]}
{"time": "2021-02-19 19:42:12.042509", "score": "0.8793", "loss": "0.7717", "code": "d processDecodes(t co){i(\"\");super.processDecodes(); }", "n_tokens": 54, "n_pass": [328, 60, 24]}
{"time": "2021-02-19 19:42:13.355794", "score": "0.5813", "loss": "2.1449", "code": "d processDecodes(t co){i(\"\");uper.processDecodes(); }", "n_tokens": 53, "n_pass": [331, 61, 25]}
{"time": "2021-02-19 19:42:15.978246", "score": "0.7858", "loss": "0.8198", "code": "d processDecodes(t co){i(\"\");uer.processDecodes(); }", "n_tokens": 52, "n_pass": [333, 63, 26]}
{"time": "2021-02-19 19:42:17.295512", "score": "0.8148", "loss": "0.7131", "code": "d processDecodes(t co){i(\"\");ur.processDecodes(); }", "n_tokens": 51, "n_pass": [334, 64, 27]}
{"time": "2021-02-19 19:42:18.634785", "score": "0.7385", "loss": "1.2", "code": "d processDecodes(t co){i(\"\");u.processDecodes(); }", "n_tokens": 50, "n_pass": [335, 65, 28]}
{"time": "2021-02-19 19:42:36.378796", "score": "0.736", "loss": "1.0681", "code": "d processDecodes(t o){i(\"\");u.processDecodes(); }", "n_tokens": 49, "n_pass": [366, 74, 29]}
{"time": "2021-02-19 19:43:13.356588", "score": "0.736", "loss": "1.0681", "code": "d processDecodes(t o){i(\"\");u.processDecodes();}", "n_tokens": 48, "n_pass": [441, 97, 30]}

Minimal simplified code:
d processDecodes(t o){i("");u.processDecodes();}

