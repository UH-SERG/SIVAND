
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/content/content-tool/tool/src/java/org/sakaiproject/content/tool/ListItem_setPermissions.java
method_name = setPermissions
method_body = public void setPermissions(Collection<ContentPermissions> permissions) { if (this.permissions == null) { this.permissions = new TreeSet<ContentPermissions>(); } this.permissions.clear(); this.permissions.addAll(permissions); }
predict, score, loss = setPermissions, 0.7637954950332642, 0.6837069988250732

Trace of simplified code(s):
{"time": "2021-02-20 17:54:12.151489", "score": "0.7638", "loss": "0.6837", "code": "public void setPermissions(Collection<ContentPermissions> permissions) { if (this.permissions == null) { this.permissions = new TreeSet<ContentPermissions>(); } this.permissions.clear(); this.permissions.addAll(permissions); }", "n_tokens": 226, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 17:54:15.166086", "score": "0.7483", "loss": "0.7686", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.permissions == null) { this.permissions = new TreeSet<ContentPermissions>(); } this.permissions.clear(); this.permissions.addAll(permissions); }", "n_tokens": 212, "n_pass": [47, 3, 2]}
{"time": "2021-02-20 17:54:16.491873", "score": "0.8222", "loss": "0.6285", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<ContentPermissions>(); } this.permissions.clear(); this.permissions.addAll(permissions); }", "n_tokens": 198, "n_pass": [50, 4, 3]}
{"time": "2021-02-20 17:54:17.934584", "score": "0.832", "loss": "0.5961", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.permissions.clear(); this.permissions.addAll(permissions); }", "n_tokens": 184, "n_pass": [54, 5, 4]}
{"time": "2021-02-20 17:54:19.248427", "score": "0.7322", "loss": "1.0439", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); this.permissions.addAll(permissions); }", "n_tokens": 170, "n_pass": [56, 6, 5]}
{"time": "2021-02-20 17:54:23.615758", "score": "0.7259", "loss": "1.1417", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); thissions.addAll(permissions); }", "n_tokens": 163, "n_pass": [94, 9, 6]}
{"time": "2021-02-20 17:54:24.952037", "score": "0.679", "loss": "1.4355", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); th.addAll(permissions); }", "n_tokens": 156, "n_pass": [95, 10, 7]}
{"time": "2021-02-20 17:54:26.262802", "score": "0.539", "loss": "2.9424", "code": "public void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); th(permissions); }", "n_tokens": 149, "n_pass": [96, 11, 8]}
{"time": "2021-02-20 17:54:27.571373", "score": "0.539", "loss": "2.9424", "code": "void setPermissions(Collection<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); th(permissions); }", "n_tokens": 142, "n_pass": [99, 12, 9]}
{"time": "2021-02-20 17:54:29.632967", "score": "0.539", "loss": "2.9424", "code": "void setPermissions(Con<Cont> permissions) { if (this.peull) { this.permissions = new TreeSet<Cont>(); } this.per(); th(permissions); }", "n_tokens": 135, "n_pass": [103, 13, 10]}
{"time": "2021-02-20 17:54:30.947501", "score": "0.4003", "loss": "3.6925", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { this.permissions = new TreeSet<Cont>(); } this.per(); th(permissions); }", "n_tokens": 128, "n_pass": [108, 14, 11]}
{"time": "2021-02-20 17:54:36.208505", "score": "0.4615", "loss": "3.3133", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { this.permissions = new TreeSet<Cont>(); } this.pe(permissions); }", "n_tokens": 121, "n_pass": [117, 18, 12]}
{"time": "2021-02-20 17:54:40.859240", "score": "0.9159", "loss": "0.3634", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { this.permissions = new TreeSet<Cont>(); } (permissions); }", "n_tokens": 114, "n_pass": [134, 21, 13]}
{"time": "2021-02-20 17:54:42.880071", "score": "0.6721", "loss": "1.7934", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { rmissions = new TreeSet<Cont>(); } (permissions); }", "n_tokens": 107, "n_pass": [145, 22, 14]}
{"time": "2021-02-20 17:54:44.179144", "score": "0.6638", "loss": "1.8748", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { ns = new TreeSet<Cont>(); } (permissions); }", "n_tokens": 100, "n_pass": [146, 23, 15]}
{"time": "2021-02-20 17:54:47.508992", "score": "0.6638", "loss": "1.8748", "code": "void setPermissions(Con<Cont> permissions) { if (ull) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 96, "n_pass": [193, 25, 16]}
{"time": "2021-02-20 17:54:54.534995", "score": "0.7284", "loss": "1.3869", "code": "void setPermissions(Con<t> permissions) { if (ull) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 93, "n_pass": [209, 29, 17]}
{"time": "2021-02-20 17:54:57.157776", "score": "0.5423", "loss": "2.6758", "code": "void setPermissions(Con<t> persions) { if (ull) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 90, "n_pass": [212, 31, 18]}
{"time": "2021-02-20 17:54:58.477985", "score": "0.5238", "loss": "2.659", "code": "void setPermissions(Con<t> pers) { if (ull) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 86, "n_pass": [213, 32, 19]}
{"time": "2021-02-20 17:55:06.793189", "score": "0.4543", "loss": "3.0267", "code": "void setPermissions(Con<t> s) { if (ull) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 83, "n_pass": [237, 37, 20]}
{"time": "2021-02-20 17:55:15.826345", "score": "0.5823", "loss": "2.1346", "code": "void setPermissions(Con<t> s) { if (u) { ns = new Tre<Cont>(); } (permissions); }", "n_tokens": 81, "n_pass": [312, 42, 21]}
{"time": "2021-02-20 17:55:17.124907", "score": "0.5823", "loss": "2.1346", "code": "void setPermissions(Con<t> s) { if (u) { ns = new T<Cont>(); } (permissions); }", "n_tokens": 79, "n_pass": [320, 43, 22]}
{"time": "2021-02-20 17:55:18.443685", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(Con<t> s) { if (u) { ns = new T<Ct>(); } (permissions); }", "n_tokens": 77, "n_pass": [322, 44, 23]}
{"time": "2021-02-20 17:55:35.078174", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s) { if (u) { ns = new T<Ct>(); } (permissions); }", "n_tokens": 75, "n_pass": [350, 54, 24]}
{"time": "2021-02-20 17:55:56.230724", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s){ if (u) { ns = new T<Ct>(); } (permissions); }", "n_tokens": 74, "n_pass": [460, 64, 25]}
{"time": "2021-02-20 17:55:57.527749", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s){if (u) { ns = new T<Ct>(); } (permissions); }", "n_tokens": 73, "n_pass": [461, 65, 26]}
{"time": "2021-02-20 17:55:58.825542", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s){if(u) { ns = new T<Ct>(); } (permissions); }", "n_tokens": 72, "n_pass": [464, 66, 27]}
{"time": "2021-02-20 17:56:00.134019", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s){if(u){ ns = new T<Ct>(); } (permissions); }", "n_tokens": 71, "n_pass": [468, 67, 28]}
{"time": "2021-02-20 17:56:01.458655", "score": "0.6517", "loss": "1.7075", "code": "void setPermissions(C<t> s){if(u){ns = new T<Ct>(); } (permissions); }", "n_tokens": 70, "n_pass": [470, 68, 29]}
{"time": "2021-02-20 17:56:02.741895", "score": "0.633", "loss": "1.8029", "code": "void setPermissions(C<t> s){if(u){s = new T<Ct>(); } (permissions); }", "n_tokens": 69, "n_pass": [471, 69, 30]}
{"time": "2021-02-20 17:56:04.051505", "score": "0.633", "loss": "1.8029", "code": "void setPermissions(C<t> s){if(u){s= new T<Ct>(); } (permissions); }", "n_tokens": 68, "n_pass": [473, 70, 31]}
{"time": "2021-02-20 17:56:05.347570", "score": "0.633", "loss": "1.8029", "code": "void setPermissions(C<t> s){if(u){s=new T<Ct>(); } (permissions); }", "n_tokens": 67, "n_pass": [475, 71, 32]}
{"time": "2021-02-20 17:56:06.657745", "score": "0.5764", "loss": "2.0598", "code": "void setPermissions(C<t> s){if(u){s=new T<t>(); } (permissions); }", "n_tokens": 66, "n_pass": [482, 72, 33]}
{"time": "2021-02-20 17:56:07.950993", "score": "0.481", "loss": "2.6662", "code": "void setPermissions(C<t> s){if(u){s=new T<>(); } (permissions); }", "n_tokens": 65, "n_pass": [483, 73, 34]}
{"time": "2021-02-20 17:56:09.247828", "score": "0.481", "loss": "2.6662", "code": "void setPermissions(C<t> s){if(u){s=new T<>();} (permissions); }", "n_tokens": 64, "n_pass": [488, 74, 35]}
{"time": "2021-02-20 17:56:10.544333", "score": "0.481", "loss": "2.6662", "code": "void setPermissions(C<t> s){if(u){s=new T<>();}(permissions); }", "n_tokens": 63, "n_pass": [490, 75, 36]}
{"time": "2021-02-20 17:56:26.181127", "score": "0.481", "loss": "2.6662", "code": "void setPermissions(C<t> s){if(u){s=new T<>();}(permissions);}", "n_tokens": 62, "n_pass": [505, 87, 37]}
{"time": "2021-02-20 17:56:38.160975", "score": "0.481", "loss": "2.6662", "code": "void setPermissions(C<t>s){if(u){s=new T<>();}(permissions);}", "n_tokens": 61, "n_pass": [531, 92, 38]}

Minimal simplified code:
void setPermissions(C<t>s){if(u){s=new T<>();}(permissions);}

