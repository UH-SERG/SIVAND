
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/codec/Base64Codec_encode.java
method_name = encode
method_body = public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }
predict, score, loss = encode, 0.6824114322662354, 0.9270321726799011

Trace of simplified code(s):
{"time": "2021-02-20 03:31:09.092375", "score": "0.9305", "loss": "0.5777", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncodeLength(pArray, lineLength, lineSeparator); byte[] buf = new byte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 509, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 03:31:10.421328", "score": "0.9342", "loss": "0.4785", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != buf) { readResults(buf, 0, buf.length); } if (isUrlSafe() && pos < buf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 446, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 03:31:11.734552", "score": "0.9742", "loss": "0.3255", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopy(buf, 0, smallerBuf, 0, pos); buf = smallerBuf; } return buf; }", "n_tokens": 382, "n_pass": [25, 3, 3]}
{"time": "2021-02-20 03:31:13.053626", "score": "0.9919", "loss": "0.1587", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEncoyte[(int) len]; setInitialBuffer(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 350, "n_pass": [46, 4, 4]}
{"time": "2021-02-20 03:31:14.381345", "score": "0.9962", "loss": "0.1083", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArray, 0, pArray.length); encode(pArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 318, "n_pass": [51, 5, 5]}
{"time": "2021-02-20 03:31:15.663043", "score": "0.8557", "loss": "0.624", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { byte[] smallerBuf = new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 286, "n_pass": [53, 6, 6]}
{"time": "2021-02-20 03:31:17.009682", "score": "0.858", "loss": "0.5345", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; System.arraycopuf = smallerBuf; } return buf; }", "n_tokens": 270, "n_pass": [84, 7, 7]}
{"time": "2021-02-20 03:31:18.316969", "score": "0.7748", "loss": "0.5897", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos];uf = smallerBuf; } return buf; }", "n_tokens": 254, "n_pass": [86, 8, 8]}
{"time": "2021-02-20 03:31:19.623480", "score": "0.9667", "loss": "0.1909", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == null || pArray.length == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 238, "n_pass": [87, 9, 9]}
{"time": "2021-02-20 03:31:21.244523", "score": "0.9628", "loss": "0.3416", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } long len = getEnco(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 222, "n_pass": [93, 10, 10]}
{"time": "2021-02-20 03:31:22.545672", "score": "0.9913", "loss": "0.2", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0, buf.length); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 206, "n_pass": [96, 11, 11]}
{"time": "2021-02-20 03:31:25.524036", "score": "0.9823", "loss": "0.3335", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pArArray, 0, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 198, "n_pass": [137, 13, 12]}
{"time": "2021-02-20 03:31:26.811987", "score": "0.9826", "loss": "0.329", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffer != bufbuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 190, "n_pass": [140, 14, 13]}
{"time": "2021-02-20 03:31:28.084826", "score": "0.9663", "loss": "0.3667", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffebuf.length) { by= new byte[pos]; } return buf; }", "n_tokens": 182, "n_pass": [143, 15, 14]}
{"time": "2021-02-20 03:31:29.340049", "score": "0.9593", "loss": "0.4927", "code": "public byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 174, "n_pass": [144, 16, 15]}
{"time": "2021-02-20 03:31:30.605746", "score": "0.9593", "loss": "0.4927", "code": "byte[] encode(byte[] pArray) { reset(); if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 167, "n_pass": [150, 17, 16]}
{"time": "2021-02-20 03:31:32.217285", "score": "0.9679", "loss": "0.4309", "code": "byte[] encode(byte[] pArray) {  if (pArray == nngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 159, "n_pass": [155, 18, 17]}
{"time": "2021-02-20 03:31:33.524721", "score": "0.9509", "loss": "0.5205", "code": "byte[] encode(byte[] pArray) {  if (pArngth == 0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 151, "n_pass": [157, 19, 18]}
{"time": "2021-02-20 03:31:34.801909", "score": "0.9324", "loss": "0.442", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { return pArray; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 143, "n_pass": [158, 20, 19]}
{"time": "2021-02-20 03:31:36.090782", "score": "0.9282", "loss": "0.5495", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(buf, 0,gth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 135, "n_pass": [160, 21, 20]}
{"time": "2021-02-20 03:31:37.716675", "score": "0.8912", "loss": "0.7276", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr, -1); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 131, "n_pass": [215, 22, 21]}
{"time": "2021-02-20 03:31:40.248444", "score": "0.925", "loss": "0.5076", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (buffeth) { by= new byte[pos]; } return buf; }", "n_tokens": 127, "n_pass": [220, 24, 22]}
{"time": "2021-02-20 03:31:41.507981", "score": "0.9246", "loss": "0.489", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= new byte[pos]; } return buf; }", "n_tokens": 123, "n_pass": [223, 25, 23]}
{"time": "2021-02-20 03:31:42.759406", "score": "0.9528", "loss": "0.4885", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } return buf; }", "n_tokens": 119, "n_pass": [227, 26, 24]}
{"time": "2021-02-20 03:31:44.016371", "score": "0.987", "loss": "0.1613", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rn buf; }", "n_tokens": 115, "n_pass": [231, 27, 25]}
{"time": "2021-02-20 03:31:45.268243", "score": "0.9459", "loss": "0.3684", "code": "byte[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 111, "n_pass": [232, 28, 26]}
{"time": "2021-02-20 03:31:46.516378", "score": "0.9364", "loss": "0.4309", "code": "e[] encode(byte[] pArray) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 108, "n_pass": [234, 29, 27]}
{"time": "2021-02-20 03:31:48.457860", "score": "0.9249", "loss": "0.5015", "code": "e[] encode(byte[] pA) {  if (pAr0) { retay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 104, "n_pass": [240, 30, 28]}
{"time": "2021-02-20 03:31:49.759519", "score": "0.8629", "loss": "0.7034", "code": "e[] encode(byte[] pA) {  if (pAr0) {ay; } lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 100, "n_pass": [245, 31, 29]}
{"time": "2021-02-20 03:31:50.997694", "score": "0.9344", "loss": "0.4361", "code": "e[] encode(byte[] pA) {  if (pAr0) {} lo(bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 96, "n_pass": [246, 32, 30]}
{"time": "2021-02-20 03:31:54.528669", "score": "0.944", "loss": "0.506", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bufgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 94, "n_pass": [320, 34, 31]}
{"time": "2021-02-20 03:31:55.825223", "score": "0.944", "loss": "0.506", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bgth); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 92, "n_pass": [322, 35, 32]}
{"time": "2021-02-20 03:31:57.063883", "score": "0.922", "loss": "0.5468", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(pAr); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 90, "n_pass": [323, 36, 33]}
{"time": "2021-02-20 03:32:02.380778", "score": "0.9582", "loss": "0.3937", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (bth) { by= nete[pos]; } rf; }", "n_tokens": 88, "n_pass": [330, 40, 34]}
{"time": "2021-02-20 03:32:03.632677", "score": "0.9471", "loss": "0.3258", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { by= nete[pos]; } rf; }", "n_tokens": 86, "n_pass": [335, 41, 35]}
{"time": "2021-02-20 03:32:04.870647", "score": "0.8867", "loss": "0.5713", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { bynete[pos]; } rf; }", "n_tokens": 84, "n_pass": [339, 42, 36]}
{"time": "2021-02-20 03:32:06.104796", "score": "0.8867", "loss": "0.5713", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { byne[pos]; } rf; }", "n_tokens": 82, "n_pass": [341, 43, 37]}
{"time": "2021-02-20 03:32:07.349595", "score": "0.9024", "loss": "0.4309", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } rf; }", "n_tokens": 80, "n_pass": [343, 44, 38]}
{"time": "2021-02-20 03:32:08.587162", "score": "0.909", "loss": "0.4862", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; }f; }", "n_tokens": 78, "n_pass": [346, 45, 39]}
{"time": "2021-02-20 03:32:09.875504", "score": "0.9668", "loss": "0.3696", "code": "e[] encode(byte[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 76, "n_pass": [347, 46, 40]}
{"time": "2021-02-20 03:32:12.168141", "score": "0.9026", "loss": "0.5054", "code": "e[] encode(be[] pA) {  if (pAr0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 74, "n_pass": [355, 47, 41]}
{"time": "2021-02-20 03:32:13.442139", "score": "0.9248", "loss": "0.507", "code": "e[] encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { byne[p]; } }", "n_tokens": 72, "n_pass": [364, 48, 42]}
{"time": "2021-02-20 03:32:18.764854", "score": "0.8655", "loss": "0.4787", "code": "e[] encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { ne[p]; } }", "n_tokens": 70, "n_pass": [381, 52, 43]}
{"time": "2021-02-20 03:32:30.770437", "score": "0.9297", "loss": "0.3426", "code": "e[] encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { e[p]; } }", "n_tokens": 69, "n_pass": [487, 56, 44]}
{"time": "2021-02-20 03:32:32.007951", "score": "0.9297", "loss": "0.3426", "code": "e[] encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { e[p];} }", "n_tokens": 68, "n_pass": [492, 57, 45]}
{"time": "2021-02-20 03:32:33.282100", "score": "0.9297", "loss": "0.3426", "code": "e[] encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 67, "n_pass": [494, 58, 46]}
{"time": "2021-02-20 03:32:34.527656", "score": "0.9297", "loss": "0.3426", "code": "e[]encode(be[] pA) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 66, "n_pass": [499, 59, 47]}
{"time": "2021-02-20 03:32:37.876684", "score": "0.875", "loss": "0.4422", "code": "e[]encode(e[] pA) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 65, "n_pass": [507, 60, 48]}
{"time": "2021-02-20 03:32:39.122138", "score": "0.875", "loss": "0.4422", "code": "e[]encode(e[]pA) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 64, "n_pass": [511, 61, 49]}
{"time": "2021-02-20 03:32:40.390352", "score": "0.886", "loss": "0.4154", "code": "e[]encode(e[]A) {  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 63, "n_pass": [512, 62, 50]}
{"time": "2021-02-20 03:32:41.630500", "score": "0.886", "loss": "0.4154", "code": "e[]encode(e[]A){  if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 62, "n_pass": [515, 63, 51]}
{"time": "2021-02-20 03:32:42.863170", "score": "0.886", "loss": "0.4154", "code": "e[]encode(e[]A){ if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 61, "n_pass": [517, 64, 52]}
{"time": "2021-02-20 03:32:44.096216", "score": "0.886", "loss": "0.4154", "code": "e[]encode(e[]A){if (p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 60, "n_pass": [518, 65, 53]}
{"time": "2021-02-20 03:32:45.336575", "score": "0.886", "loss": "0.4154", "code": "e[]encode(e[]A){if(p0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 59, "n_pass": [521, 66, 54]}
{"time": "2021-02-20 03:32:46.594199", "score": "0.8683", "loss": "0.4145", "code": "e[]encode(e[]A){if(0) {} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 58, "n_pass": [523, 67, 55]}
{"time": "2021-02-20 03:32:47.828305", "score": "0.8683", "loss": "0.4145", "code": "e[]encode(e[]A){if(0){} (bh); encode(p); if (b) { e[p];}}", "n_tokens": 57, "n_pass": [526, 68, 56]}
{"time": "2021-02-20 03:32:49.067739", "score": "0.8683", "loss": "0.4145", "code": "e[]encode(e[]A){if(0){}(bh); encode(p); if (b) { e[p];}}", "n_tokens": 56, "n_pass": [529, 69, 57]}
{"time": "2021-02-20 03:32:50.335125", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h); encode(p); if (b) { e[p];}}", "n_tokens": 55, "n_pass": [531, 70, 58]}
{"time": "2021-02-20 03:32:51.944931", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h);encode(p); if (b) { e[p];}}", "n_tokens": 54, "n_pass": [535, 71, 59]}
{"time": "2021-02-20 03:33:02.165987", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h);encode(p);if (b) { e[p];}}", "n_tokens": 53, "n_pass": [546, 79, 60]}
{"time": "2021-02-20 03:33:03.407816", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h);encode(p);if(b) { e[p];}}", "n_tokens": 52, "n_pass": [549, 80, 61]}
{"time": "2021-02-20 03:33:04.639356", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h);encode(p);if(b){ e[p];}}", "n_tokens": 51, "n_pass": [553, 81, 62]}
{"time": "2021-02-20 03:33:05.883050", "score": "0.954", "loss": "0.2355", "code": "e[]encode(e[]A){if(0){}(h);encode(p);if(b){e[p];}}", "n_tokens": 50, "n_pass": [555, 82, 63]}

Minimal simplified code:
e[]encode(e[]A){if(0){}(h);encode(p);if(b){e[p];}}

