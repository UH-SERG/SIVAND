
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/std/ConcurrentHashMap_next.java
method_name = next
method_body = public final Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new NoSuchElementException(); CharSequence k = p.key; V v = p.val; lastReturned = p; advance(); return new MapEntry<>(k, v, map); }
predict, score, loss = next, 0.9740985035896301, 0.029568500816822052

Trace of simplified code(s):
{"time": "2021-02-20 02:55:30.686877", "score": "0.9741", "loss": "0.0296", "code": "public final Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new NoSuchElementException(); CharSequence k = p.key; V v = p.val; lastReturned = p; advance(); return new MapEntry<>(k, v, map); }", "n_tokens": 221, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:55:32.530585", "score": "0.9428", "loss": "0.0647", "code": "public final Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new NoSuchElementException(); CharSequence k = rned = p; advance(); return new MapEntry<>(k, v, map); }", "n_tokens": 193, "n_pass": [25, 2, 2]}
{"time": "2021-02-20 02:55:33.848300", "score": "0.9971", "loss": "0.0473", "code": "public final Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new NoSuchElementException(); CharSequence k = new MapEntry<>(k, v, map); }", "n_tokens": 165, "n_pass": [26, 3, 3]}
{"time": "2021-02-20 02:55:35.170761", "score": "0.9971", "loss": "0.0473", "code": "Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new NoSuchElementException(); CharSequence k = new MapEntry<>(k, v, map); }", "n_tokens": 152, "n_pass": [47, 4, 4]}
{"time": "2021-02-20 02:55:36.522080", "score": "0.9681", "loss": "0.0912", "code": "Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new Nception(); CharSequence k = new MapEntry<>(k, v, map); }", "n_tokens": 138, "n_pass": [54, 5, 5]}
{"time": "2021-02-20 02:55:37.857579", "score": "0.9775", "loss": "0.0572", "code": "Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new N(); CharSequence k = new MapEntry<>(k, v, map); }", "n_tokens": 131, "n_pass": [85, 6, 6]}
{"time": "2021-02-20 02:55:39.214834", "score": "0.8791", "loss": "0.1971", "code": "Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new N(); Chace k = new MapEntry<>(k, v, map); }", "n_tokens": 124, "n_pass": [86, 7, 7]}
{"time": "2021-02-20 02:55:40.550957", "score": "0.8286", "loss": "0.2794", "code": "Map.Entry<CharSequence, V> next() { Node<V> p; if ((p = next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 117, "n_pass": [89, 8, 8]}
{"time": "2021-02-20 02:55:41.889288", "score": "0.4138", "loss": "1.0995", "code": "Map.Entry<Chnce, V> next() { Node<V> p; if ((p = next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 110, "n_pass": [94, 9, 9]}
{"time": "2021-02-20 02:55:44.642578", "score": "0.5592", "loss": "0.7694", "code": "Map.Entry<Ch, V> next() { Node<V> p; if ((p = next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 107, "n_pass": [143, 11, 10]}
{"time": "2021-02-20 02:55:47.713162", "score": "0.5592", "loss": "0.7694", "code": "Map.Entry<Ch, V> next() { N<V> p; if ((p = next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 104, "n_pass": [149, 13, 11]}
{"time": "2021-02-20 02:55:49.047754", "score": "0.4551", "loss": "1.1", "code": "Map.Entry<Ch, V> next() { N p; if ((p = next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 101, "n_pass": [150, 14, 12]}
{"time": "2021-02-20 02:55:50.398042", "score": "0.494", "loss": "0.9535", "code": "Map.Entry<Ch, V> next() { N p; if (( next) == null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 98, "n_pass": [154, 15, 13]}
{"time": "2021-02-20 02:55:53.057760", "score": "0.4842", "loss": "0.9892", "code": "Map.Entry<Ch, V> next() { N p; if (( next)null) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 94, "n_pass": [157, 17, 14]}
{"time": "2021-02-20 02:55:54.477229", "score": "0.6989", "loss": "0.5179", "code": "Map.Entry<Ch, V> next() { N p; if (( next)) throw new N(); Chace k = new Map(k, v, map); }", "n_tokens": 90, "n_pass": [158, 18, 15]}
{"time": "2021-02-20 02:55:55.841729", "score": "0.6349", "loss": "0.6466", "code": "Map.Entry<Ch, V> next() { N p; if (( next)) throw N(); Chace k = new Map(k, v, map); }", "n_tokens": 86, "n_pass": [161, 19, 16]}
{"time": "2021-02-20 02:55:57.174845", "score": "0.7372", "loss": "0.479", "code": "Map.Entry<Ch, V> next() { N p; if (( next)) throw N();ce k = new Map(k, v, map); }", "n_tokens": 82, "n_pass": [163, 20, 17]}
{"time": "2021-02-20 02:55:59.816248", "score": "0.4616", "loss": "1.164", "code": "Maptry<Ch, V> next() { N p; if (( next)) throw N();ce k = new Map(k, v, map); }", "n_tokens": 79, "n_pass": [172, 22, 18]}
{"time": "2021-02-20 02:56:01.141634", "score": "0.4616", "loss": "1.164", "code": "Map<Ch, V> next() { N p; if (( next)) throw N();ce k = new Map(k, v, map); }", "n_tokens": 76, "n_pass": [173, 23, 19]}
{"time": "2021-02-20 02:56:05.489132", "score": "0.4806", "loss": "1.2682", "code": "Map<Ch, V> next() { N p; if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 72, "n_pass": [186, 26, 20]}
{"time": "2021-02-20 02:56:08.484353", "score": "0.2308", "loss": "2.529", "code": "Map<Ch> next() { N p; if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 69, "n_pass": [197, 28, 21]}
{"time": "2021-02-20 02:56:14.858160", "score": "0.2096", "loss": "2.5206", "code": "Map<C> next() { N p; if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 68, "n_pass": [259, 32, 22]}
{"time": "2021-02-20 02:56:16.175816", "score": "0.2096", "loss": "2.5206", "code": "Map<C>next() { N p; if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 67, "n_pass": [261, 33, 23]}
{"time": "2021-02-20 02:56:18.600014", "score": "0.5435", "loss": "1.3321", "code": "Map<C>next() { p; if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 65, "n_pass": [268, 34, 24]}
{"time": "2021-02-20 02:56:19.967264", "score": "0.7068", "loss": "0.8978", "code": "Map<C>next() {  if (( next)) thN();ce k = new Map(k, v, map); }", "n_tokens": 63, "n_pass": [269, 35, 25]}
{"time": "2021-02-20 02:56:24.219212", "score": "0.6609", "loss": "0.9807", "code": "Map<C>next() {  if (( next)) N();ce k = new Map(k, v, map); }", "n_tokens": 61, "n_pass": [277, 38, 26]}
{"time": "2021-02-20 02:56:25.525026", "score": "0.4174", "loss": "1.7282", "code": "Map<C>next() {  if (( next)) N(); k = new Map(k, v, map); }", "n_tokens": 59, "n_pass": [280, 39, 27]}
{"time": "2021-02-20 02:56:26.828447", "score": "0.7572", "loss": "0.8601", "code": "Map<C>next() {  if (( next)) N(); k = newap(k, v, map); }", "n_tokens": 57, "n_pass": [285, 40, 28]}
{"time": "2021-02-20 02:56:28.165652", "score": "0.8493", "loss": "0.6399", "code": "Map<C>next() {  if (( next)) N(); k = newap(kv, map); }", "n_tokens": 55, "n_pass": [288, 41, 29]}
{"time": "2021-02-20 02:56:29.450771", "score": "0.8182", "loss": "0.7351", "code": "Map<C>next() {  if (( next)) N(); k = newap(kv,ap); }", "n_tokens": 53, "n_pass": [290, 42, 30]}
{"time": "2021-02-20 02:56:30.758097", "score": "0.8182", "loss": "0.7351", "code": "ap<C>next() {  if (( next)) N(); k = newap(kv,ap); }", "n_tokens": 52, "n_pass": [294, 43, 31]}
{"time": "2021-02-20 02:56:32.049320", "score": "0.8182", "loss": "0.7351", "code": "p<C>next() {  if (( next)) N(); k = newap(kv,ap); }", "n_tokens": 51, "n_pass": [295, 44, 32]}
{"time": "2021-02-20 02:56:37.348898", "score": "0.8182", "loss": "0.7351", "code": "p<C>next() {  if (( next)) N(); k =ewap(kv,ap); }", "n_tokens": 49, "n_pass": [317, 47, 33]}
{"time": "2021-02-20 02:56:38.653795", "score": "0.8684", "loss": "0.4188", "code": "p<C>next() {  if (( next)) N(); k =ap(kv,ap); }", "n_tokens": 47, "n_pass": [318, 48, 34]}
{"time": "2021-02-20 02:56:39.959169", "score": "0.8315", "loss": "0.9229", "code": "p<C>next() {  if (( next)) N(); k =ap(kap); }", "n_tokens": 45, "n_pass": [321, 49, 35]}
{"time": "2021-02-20 02:56:41.275091", "score": "0.7353", "loss": "0.912", "code": "p<C>next() {  if (( next)) N(); k =ap(k); }", "n_tokens": 43, "n_pass": [322, 50, 36]}
{"time": "2021-02-20 02:56:45.468192", "score": "0.2478", "loss": "2.7502", "code": "p<C>next() {  if (( nt)) N(); k =ap(k); }", "n_tokens": 41, "n_pass": [339, 52, 37]}
{"time": "2021-02-20 02:56:48.068590", "score": "0.3595", "loss": "2.1564", "code": "p<C>next() {  if (( nt)) N(); k =(k); }", "n_tokens": 39, "n_pass": [346, 54, 38]}
{"time": "2021-02-20 02:56:50.823386", "score": "0.4963", "loss": "1.7273", "code": "p<C>next() {  if ((t)) N(); k =(k); }", "n_tokens": 37, "n_pass": [363, 55, 39]}
{"time": "2021-02-20 02:56:58.216689", "score": "0.4963", "loss": "1.7273", "code": "p<C>next() {  if ((t))N(); k =(k); }", "n_tokens": 36, "n_pass": [417, 57, 40]}
{"time": "2021-02-20 02:56:59.532309", "score": "0.4963", "loss": "1.7273", "code": "p<C>next() {  if ((t))N();k =(k); }", "n_tokens": 35, "n_pass": [422, 58, 41]}
{"time": "2021-02-20 02:57:00.851754", "score": "0.4963", "loss": "1.7273", "code": "p<C>next() {  if ((t))N();k=(k); }", "n_tokens": 34, "n_pass": [424, 59, 42]}
{"time": "2021-02-20 02:57:03.447068", "score": "0.4963", "loss": "1.7273", "code": "p<C>next() {  if ((t))N();k=(k);}", "n_tokens": 33, "n_pass": [430, 61, 43]}
{"time": "2021-02-20 02:57:06.577152", "score": "0.4963", "loss": "1.7273", "code": "p<C>next(){  if ((t))N();k=(k);}", "n_tokens": 32, "n_pass": [442, 62, 44]}
{"time": "2021-02-20 02:57:07.887266", "score": "0.4963", "loss": "1.7273", "code": "p<C>next(){ if ((t))N();k=(k);}", "n_tokens": 31, "n_pass": [444, 63, 45]}
{"time": "2021-02-20 02:57:09.195624", "score": "0.4963", "loss": "1.7273", "code": "p<C>next(){if ((t))N();k=(k);}", "n_tokens": 30, "n_pass": [445, 64, 46]}
{"time": "2021-02-20 02:57:10.516254", "score": "0.4963", "loss": "1.7273", "code": "p<C>next(){if((t))N();k=(k);}", "n_tokens": 29, "n_pass": [448, 65, 47]}

Minimal simplified code:
p<C>next(){if((t))N();k=(k);}

