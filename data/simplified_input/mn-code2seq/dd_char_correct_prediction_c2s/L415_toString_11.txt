
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/entitybroker/utils/src/java/org/sakaiproject/entitybroker/util/http/LazyRequestInputStream_toString.java
method_name = toString
method_body = @Override public String toString() { if (stream == null) { return super.toString() + ":LazyStreamNotOpenYet"; } else { return getStream().toString(); } }
predict, score, loss = toString, 0.9996585845947266, 0.0010956679470837116

Trace of simplified code(s):
{"time": "2021-02-20 11:38:35.102029", "score": "0.9997", "loss": "0.0011", "code": "@Override public String toString() { if (stream == null) { return super.toString() + \":LazyStreamNotOpenYet\"; } else { return getStream().toString(); } }", "n_tokens": 153, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 11:38:36.406214", "score": "0.9973", "loss": "0.0098", "code": "ring toString() { if (stream == null) { return super.toString() + \":LazyStreamNotOpenYet\"; } else { return getStream().toString(); } }", "n_tokens": 134, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 11:38:38.082206", "score": "0.9961", "loss": "0.0144", "code": "ring toString() { if (strea) { return super.toString() + \":LazyStreamNotOpenYet\"; } else { return getStream().toString(); } }", "n_tokens": 125, "n_pass": [44, 3, 3]}
{"time": "2021-02-20 11:38:41.150374", "score": "0.998", "loss": "0.0073", "code": "ring toString() { if (strea) { return super.toString() + \":LazyStnYet\"; } else { return getStream().toString(); } }", "n_tokens": 115, "n_pass": [49, 5, 4]}
{"time": "2021-02-20 11:38:42.445923", "score": "0.9967", "loss": "0.0125", "code": "ring toString() { if (strea) { return super.toString() + \":LazyStnYet\"; } else { retuam().toString(); } }", "n_tokens": 105, "n_pass": [52, 6, 5]}
{"time": "2021-02-20 11:38:43.741676", "score": "0.9959", "loss": "0.0166", "code": "ring toString() { if (strea) { return super.toString() + \":LazyStnYet\"; } else { retuing(); } }", "n_tokens": 95, "n_pass": [53, 7, 6]}
{"time": "2021-02-20 11:38:47.088968", "score": "0.9979", "loss": "0.0069", "code": "ring toString() { if (strea) { return super.toString() + \":LazyStnYet\"; } else { retu; } }", "n_tokens": 90, "n_pass": [84, 9, 7]}
{"time": "2021-02-20 11:38:53.736790", "score": "0.9866", "loss": "0.0371", "code": "ring toString() { if (strea) { return super.toString() + \":LnYet\"; } else { retu; } }", "n_tokens": 85, "n_pass": [98, 13, 8]}
{"time": "2021-02-20 11:38:55.029297", "score": "0.9697", "loss": "0.0947", "code": "ring toString() { if (strea) { return super.toString() + \":LnYet\"; } else {; } }", "n_tokens": 80, "n_pass": [102, 14, 9]}
{"time": "2021-02-20 11:39:01.655392", "score": "0.9771", "loss": "0.0845", "code": "ng toString() { if (strea) { return super.toString() + \":LnYet\"; } else {; } }", "n_tokens": 78, "n_pass": [156, 18, 10]}
{"time": "2021-02-20 11:39:04.385790", "score": "0.9503", "loss": "0.1881", "code": "ng toString() { if (rea) { return super.toString() + \":LnYet\"; } else {; } }", "n_tokens": 76, "n_pass": [166, 19, 11]}
{"time": "2021-02-20 11:39:05.677104", "score": "0.9879", "loss": "0.046", "code": "ng toString() { if (a) { return super.toString() + \":LnYet\"; } else {; } }", "n_tokens": 74, "n_pass": [167, 20, 12]}
{"time": "2021-02-20 11:39:07.363245", "score": "0.7489", "loss": "0.9811", "code": "ng toString() { if (a) { return per.toString() + \":LnYet\"; } else {; } }", "n_tokens": 72, "n_pass": [174, 21, 13]}
{"time": "2021-02-20 11:39:08.674764", "score": "0.7713", "loss": "0.8997", "code": "ng toString() { if (a) { return r.toString() + \":LnYet\"; } else {; } }", "n_tokens": 70, "n_pass": [175, 22, 14]}
{"time": "2021-02-20 11:39:09.965419", "score": "0.5559", "loss": "2.3813", "code": "ng toString() { if (a) { return toString() + \":LnYet\"; } else {; } }", "n_tokens": 68, "n_pass": [176, 23, 15]}
{"time": "2021-02-20 11:39:25.139073", "score": "0.522", "loss": "2.6779", "code": "ng toString() { if (a) { return toSting() + \":LnYet\"; } else {; } }", "n_tokens": 67, "n_pass": [265, 31, 16]}
{"time": "2021-02-20 11:39:30.312409", "score": "0.522", "loss": "2.6779", "code": "ng toString() { if (a) { return toSting()+ \":LnYet\"; } else {; } }", "n_tokens": 66, "n_pass": [271, 35, 17]}
{"time": "2021-02-20 11:39:31.601152", "score": "0.4091", "loss": "3.1981", "code": "ng toString() { if (a) { return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 64, "n_pass": [274, 36, 18]}
{"time": "2021-02-20 11:39:35.504923", "score": "0.5668", "loss": "2.5322", "code": "g toString() { if (a) { return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 63, "n_pass": [285, 39, 19]}
{"time": "2021-02-20 11:39:40.393364", "score": "0.5668", "loss": "2.5322", "code": "g toString(){ if (a) { return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 62, "n_pass": [298, 40, 20]}
{"time": "2021-02-20 11:39:41.682807", "score": "0.5668", "loss": "2.5322", "code": "g toString(){if (a) { return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 61, "n_pass": [300, 41, 21]}
{"time": "2021-02-20 11:39:42.978982", "score": "0.5668", "loss": "2.5322", "code": "g toString(){if(a) { return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 60, "n_pass": [303, 42, 22]}
{"time": "2021-02-20 11:39:44.269381", "score": "0.5668", "loss": "2.5322", "code": "g toString(){if(a){ return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 59, "n_pass": [307, 43, 23]}
{"time": "2021-02-20 11:39:45.567917", "score": "0.5668", "loss": "2.5322", "code": "g toString(){if(a){return toSting()+ \"nYet\"; } else {; } }", "n_tokens": 58, "n_pass": [309, 44, 24]}
{"time": "2021-02-20 11:39:47.215139", "score": "0.3587", "loss": "4.3669", "code": "g toString(){if(a){return oSting()+ \"nYet\"; } else {; } }", "n_tokens": 57, "n_pass": [317, 45, 25]}
{"time": "2021-02-20 11:39:56.319867", "score": "0.4107", "loss": "3.8731", "code": "g toString(){if(a){return oSting()+ \"et\"; } else {; } }", "n_tokens": 55, "n_pass": [328, 52, 26]}
{"time": "2021-02-20 11:39:57.638088", "score": "0.4725", "loss": "3.6443", "code": "g toString(){if(a){return oSting()+ \"\"; } else {; } }", "n_tokens": 53, "n_pass": [329, 53, 27]}
{"time": "2021-02-20 11:40:06.721251", "score": "0.3978", "loss": "4.1794", "code": "g toString(){if(a){return oStng()+ \"\"; } else {; } }", "n_tokens": 52, "n_pass": [367, 57, 28]}
{"time": "2021-02-20 11:40:09.338372", "score": "0.5411", "loss": "3.1716", "code": "g toString(){if(a){return oStn()+ \"\"; } else {; } }", "n_tokens": 51, "n_pass": [369, 59, 29]}
{"time": "2021-02-20 11:40:14.572613", "score": "0.5935", "loss": "3.0928", "code": "g toString(){if(a){return Stn()+ \"\"; } else {; } }", "n_tokens": 50, "n_pass": [408, 60, 30]}
{"time": "2021-02-20 11:40:17.180610", "score": "0.3907", "loss": "4.3585", "code": "g toString(){if(a){return Sn()+ \"\"; } else {; } }", "n_tokens": 49, "n_pass": [410, 62, 31]}
{"time": "2021-02-20 11:40:18.469842", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\"; } else {; } }", "n_tokens": 48, "n_pass": [411, 63, 32]}
{"time": "2021-02-20 11:40:26.311554", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";} else {; } }", "n_tokens": 47, "n_pass": [470, 64, 33]}
{"time": "2021-02-20 11:40:27.598662", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";}else {; } }", "n_tokens": 46, "n_pass": [471, 65, 34]}
{"time": "2021-02-20 11:40:28.906927", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";}else{; } }", "n_tokens": 45, "n_pass": [476, 66, 35]}
{"time": "2021-02-20 11:40:30.198604", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";}else{ } }", "n_tokens": 44, "n_pass": [478, 67, 36]}
{"time": "2021-02-20 11:40:31.525687", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";}else{} }", "n_tokens": 43, "n_pass": [479, 68, 37]}
{"time": "2021-02-20 11:40:32.816712", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+ \"\";}else{}}", "n_tokens": 42, "n_pass": [481, 69, 38]}
{"time": "2021-02-20 11:40:38.068121", "score": "0.563", "loss": "3.1558", "code": "g toString(){if(a){return S()+\"\";}else{}}", "n_tokens": 41, "n_pass": [513, 70, 39]}

Minimal simplified code:
g toString(){if(a){return S()+"";}else{}}

