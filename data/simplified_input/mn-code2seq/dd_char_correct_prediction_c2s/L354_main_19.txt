
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/core/StatUtils_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals("L")) { String I = "I"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, "M" + args[2])); }
predict, score, loss = main, 0.9879114627838135, 0.014993960037827492

Trace of simplified code(s):
{"time": "2021-02-20 07:26:35.953116", "score": "0.9595", "loss": "0.0519", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 417, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 07:26:37.334679", "score": "0.9832", "loss": "0.0207", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 365, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 07:26:38.727364", "score": "0.9753", "loss": "0.028", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 313, "n_pass": [24, 3, 3]}
{"time": "2021-02-20 07:26:40.143905", "score": "0.9945", "loss": "0.0066", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUx(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 287, "n_pass": [43, 4, 4]}
{"time": "2021-02-20 07:26:41.545499", "score": "0.9808", "loss": "0.0207", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 274, "n_pass": [76, 5, 5]}
{"time": "2021-02-20 07:26:42.922406", "score": "0.9958", "loss": "0.0045", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 261, "n_pass": [78, 6, 6]}
{"time": "2021-02-20 07:26:44.277410", "score": "0.9936", "loss": "0.007", "code": " void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 248, "n_pass": [81, 7, 7]}
{"time": "2021-02-20 07:26:45.628503", "score": "0.9947", "loss": "0.006", "code": " void main(String[] args) throws Exception { Instanction.loadDataset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 235, "n_pass": [86, 8, 8]}
{"time": "2021-02-20 07:26:46.999861", "score": "0.9921", "loss": "0.0094", "code": " void main(String[] args) throws Exception { Instancset(args); ML[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 222, "n_pass": [87, 9, 9]}
{"time": "2021-02-20 07:26:48.344544", "score": "0.9887", "loss": "0.0124", "code": " void main(String[] args) throws Exception { Instanc[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 209, "n_pass": [88, 10, 10]}
{"time": "2021-02-20 07:26:49.672665", "score": "0.99", "loss": "0.0145", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 196, "n_pass": [89, 11, 11]}
{"time": "2021-02-20 07:26:51.019613", "score": "0.9905", "loss": "0.0136", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; if (ar3) I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 183, "n_pass": [94, 12, 12]}
{"time": "2021-02-20 07:26:52.403324", "score": "0.9908", "loss": "0.0113", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; i I = args[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 176, "n_pass": [137, 13, 13]}
{"time": "2021-02-20 07:26:53.740889", "score": "0.9908", "loss": "0.0108", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; igs[3]; CD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 169, "n_pass": [138, 14, 14]}
{"time": "2021-02-20 07:26:55.073891", "score": "0.9915", "loss": "0.0109", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iCD = StatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 162, "n_pass": [139, 15, 15]}
{"time": "2021-02-20 07:26:56.430838", "score": "0.9956", "loss": "0.0055", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } System.out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 155, "n_pass": [140, 16, 16]}
{"time": "2021-02-20 07:26:57.784756", "score": "0.9893", "loss": "0.0135", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } out.println(Matring(CD, \"M\" + args[2])); }", "n_tokens": 148, "n_pass": [142, 17, 17]}
{"time": "2021-02-20 07:26:59.118597", "score": "0.9866", "loss": "0.0186", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(CD, \"M\" + args[2])); }", "n_tokens": 141, "n_pass": [143, 18, 18]}
{"time": "2021-02-20 07:27:00.453915", "score": "0.9926", "loss": "0.01", "code": " void main(String[] args) throws Exception { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 134, "n_pass": [146, 19, 19]}
{"time": "2021-02-20 07:27:02.150995", "score": "0.9604", "loss": "0.0524", "code": " void main(String[] args) throws Exc { Instancl; if (args[2].equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 128, "n_pass": [155, 20, 20]}
{"time": "2021-02-20 07:27:03.498138", "score": "0.9629", "loss": "0.0486", "code": " void main(String[] args) throws Exc { Instancl; if (a.equals(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 122, "n_pass": [159, 21, 21]}
{"time": "2021-02-20 07:27:04.820674", "score": "0.9422", "loss": "0.0745", "code": " void main(String[] args) throws Exc { Instancl; if (as(\"L\")) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 116, "n_pass": [160, 22, 22]}
{"time": "2021-02-20 07:27:06.142478", "score": "0.904", "loss": "0.1216", "code": " void main(String[] args) throws Exc { Instancl; if (a) { String I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 110, "n_pass": [161, 23, 23]}
{"time": "2021-02-20 07:27:09.169734", "score": "0.911", "loss": "0.117", "code": " void main(String[] args) throws Exc { Instancl; if (a) {ring I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 107, "n_pass": [214, 25, 24]}
{"time": "2021-02-20 07:27:10.491987", "score": "0.9142", "loss": "0.1057", "code": " void main(String[] args) throws Exc { Instancl; if (a) {g I = \"I\"; iatU; } ntln(Matring(C+ args[2])); }", "n_tokens": 104, "n_pass": [215, 26, 25]}
{"time": "2021-02-20 07:27:11.834332", "score": "0.4873", "loss": "0.76", "code": " void main(String[] args) throws Exc { Instancl; if (a) {g I = \"I\"; i; } ntln(Matring(C+ args[2])); }", "n_tokens": 101, "n_pass": [220, 27, 26]}
{"time": "2021-02-20 07:27:13.145919", "score": "0.8785", "loss": "0.1616", "code": " void main(String[] args) throws Exc { Instancl; if (a) {g I = \"I\"; i; } (Matring(C+ args[2])); }", "n_tokens": 97, "n_pass": [222, 28, 27]}
{"time": "2021-02-20 07:27:14.456651", "score": "0.9705", "loss": "0.0517", "code": " void main(String[] args) throws Exc { Instancl; if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 93, "n_pass": [224, 29, 28]}
{"time": "2021-02-20 07:27:17.813299", "score": "0.954", "loss": "0.0695", "code": " void main(Sng[] args) throws Exc { Instancl; if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 90, "n_pass": [233, 31, 29]}
{"time": "2021-02-20 07:27:19.132606", "score": "0.7627", "loss": "0.4756", "code": " void main(Sng[] a) throws Exc { Instancl; if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 87, "n_pass": [236, 32, 30]}
{"time": "2021-02-20 07:27:20.447512", "score": "0.7627", "loss": "0.4756", "code": " void main(Sng[] a) throws Exc { tancl; if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 84, "n_pass": [242, 33, 31]}
{"time": "2021-02-20 07:27:21.757065", "score": "0.7983", "loss": "0.3772", "code": " void main(Sng[] a) throws Exc { cl; if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 81, "n_pass": [243, 34, 32]}
{"time": "2021-02-20 07:27:23.068161", "score": "0.9256", "loss": "0.1531", "code": " void main(Sng[] a) throws Exc {  if (a) {g I = \"I\"; i; } (Mat(C+ args[2])); }", "n_tokens": 78, "n_pass": [244, 35, 33]}
{"time": "2021-02-20 07:27:24.404720", "score": "0.9564", "loss": "0.0856", "code": " void main(Sng[] a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 75, "n_pass": [251, 36, 34]}
{"time": "2021-02-20 07:27:25.749355", "score": "0.4101", "loss": "1.3679", "code": "id main(Sng[] a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 72, "n_pass": [258, 37, 35]}
{"time": "2021-02-20 07:27:28.810425", "score": "0.62", "loss": "0.8041", "code": "d main(Sng[] a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 71, "n_pass": [325, 38, 36]}
{"time": "2021-02-20 07:27:32.342382", "score": "0.5392", "loss": "1.1638", "code": "d main(ng[] a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 70, "n_pass": [333, 39, 37]}
{"time": "2021-02-20 07:27:33.676147", "score": "0.6781", "loss": "0.7707", "code": "d main(g[] a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 69, "n_pass": [334, 40, 38]}
{"time": "2021-02-20 07:27:34.995819", "score": "0.6781", "loss": "0.7707", "code": "d main(g[]a) throws Exc {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 68, "n_pass": [338, 41, 39]}
{"time": "2021-02-20 07:27:36.431375", "score": "0.9499", "loss": "0.1133", "code": "d main(g[]a) throws c {  if (a) {g I = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 66, "n_pass": [345, 42, 40]}
{"time": "2021-02-20 07:27:37.754859", "score": "0.9478", "loss": "0.1149", "code": "d main(g[]a) throws c {  if (a) {g = \"I\"; } (Mat(C+ args[2])); }", "n_tokens": 64, "n_pass": [353, 43, 41]}
{"time": "2021-02-20 07:27:39.097223", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a) throws c {  if (a) {g = \"I\"; } (M(C+ args[2])); }", "n_tokens": 62, "n_pass": [360, 44, 42]}
{"time": "2021-02-20 07:27:51.511892", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a) throws c {  if (a) {g = \"I\"; } (M(C+args[2])); }", "n_tokens": 61, "n_pass": [449, 48, 43]}
{"time": "2021-02-20 07:27:58.092437", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a) throws c {  if (a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 60, "n_pass": [460, 53, 44]}
{"time": "2021-02-20 07:28:01.590072", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c {  if (a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 59, "n_pass": [474, 54, 45]}
{"time": "2021-02-20 07:28:02.911808", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{  if (a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 58, "n_pass": [483, 55, 46]}
{"time": "2021-02-20 07:28:04.226330", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{ if (a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 57, "n_pass": [485, 56, 47]}
{"time": "2021-02-20 07:28:05.567258", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{if (a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 56, "n_pass": [486, 57, 48]}
{"time": "2021-02-20 07:28:06.882898", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{if(a) {g = \"I\"; } (M(C+args[2]));}", "n_tokens": 55, "n_pass": [489, 58, 49]}
{"time": "2021-02-20 07:28:08.199269", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{if(a){g = \"I\"; } (M(C+args[2]));}", "n_tokens": 54, "n_pass": [493, 59, 50]}
{"time": "2021-02-20 07:28:09.518503", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{if(a){g= \"I\"; } (M(C+args[2]));}", "n_tokens": 53, "n_pass": [496, 60, 51]}
{"time": "2021-02-20 07:28:10.863189", "score": "0.925", "loss": "0.1135", "code": "d main(g[]a)throws c{if(a){g=\"I\"; } (M(C+args[2]));}", "n_tokens": 52, "n_pass": [498, 61, 52]}
{"time": "2021-02-20 07:28:12.174449", "score": "0.8696", "loss": "0.198", "code": "d main(g[]a)throws c{if(a){g=\"\"; } (M(C+args[2]));}", "n_tokens": 51, "n_pass": [500, 62, 53]}
{"time": "2021-02-20 07:28:13.516761", "score": "0.8696", "loss": "0.198", "code": "d main(g[]a)throws c{if(a){g=\"\";} (M(C+args[2]));}", "n_tokens": 50, "n_pass": [503, 63, 54]}
{"time": "2021-02-20 07:28:14.829637", "score": "0.8696", "loss": "0.198", "code": "d main(g[]a)throws c{if(a){g=\"\";}(M(C+args[2]));}", "n_tokens": 49, "n_pass": [505, 64, 55]}
{"time": "2021-02-20 07:28:16.148476", "score": "0.2669", "loss": "2.2431", "code": "d main(g[]a)throws c{if(a){g=\"\";}((C+args[2]));}", "n_tokens": 48, "n_pass": [507, 65, 56]}
{"time": "2021-02-20 07:28:17.459873", "score": "0.5507", "loss": "1.1997", "code": "d main(g[]a)throws c{if(a){g=\"\";}((+args[2]));}", "n_tokens": 47, "n_pass": [509, 66, 57]}
{"time": "2021-02-20 07:28:18.755112", "score": "0.1945", "loss": "2.6419", "code": "d main(g[]a)throws c{if(a){g=\"\";}((args[2]));}", "n_tokens": 46, "n_pass": [510, 67, 58]}

Minimal simplified code:
d main(g[]a)throws c{if(a){g="";}((args[2]));}

