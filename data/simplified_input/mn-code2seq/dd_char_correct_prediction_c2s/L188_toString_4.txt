
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/main/java/org/jupiter/common/util/collection/ByteObjectHashMap_toString.java
method_name = toString
method_body = @Override public String toString() { if (isEmpty()) { return "{}"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(", "); } sb.append(keyToString(keys[i])).append('=').append(value == this ? "(this Map)" : toExternal(value)); first = false; } } return sb.append('}').toString(); }
predict, score, loss = toString, 0.9979183673858643, 0.009839757345616817

Trace of simplified code(s):
{"time": "2021-02-19 20:37:22.627994", "score": "0.9191", "loss": "0.2067", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').append(value == this ? \"(this Map)\" : toExternal(value)); first = false; } } return sb.append('}').toString(); }", "n_tokens": 428, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 20:37:24.037882", "score": "0.998", "loss": "0.0066", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 374, "n_pass": [26, 2, 2]}
{"time": "2021-02-19 20:37:25.892201", "score": "0.988", "loss": "0.0403", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuir(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 348, "n_pass": [53, 3, 3]}
{"time": "2021-02-19 20:37:27.258043", "score": "0.9961", "loss": "0.0189", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBui; boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 321, "n_pass": [54, 4, 4]}
{"time": "2021-02-19 20:37:29.050819", "score": "0.997", "loss": "0.0111", "code": "@Override public String toString() { if (isEmpty()) ; boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 295, "n_pass": [66, 5, 5]}
{"time": "2021-02-19 20:37:30.840866", "score": "0.9975", "loss": "0.0103", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 282, "n_pass": [100, 6, 6]}
{"time": "2021-02-19 20:37:32.223716", "score": "0.9972", "loss": "0.0115", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 269, "n_pass": [103, 7, 7]}
{"time": "2021-02-19 20:37:33.620472", "score": "0.9965", "loss": "0.0153", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').appefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 256, "n_pass": [105, 8, 8]}
{"time": "2021-02-19 20:37:35.013659", "score": "0.9962", "loss": "0.0169", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).pefirst = false; } } return sb.append('}').toString(); }", "n_tokens": 242, "n_pass": [113, 9, 9]}
{"time": "2021-02-19 20:37:36.378926", "score": "0.9947", "loss": "0.0219", "code": "@Override public String toString() { if (isEmpty()) st = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 228, "n_pass": [114, 10, 10]}
{"time": "2021-02-19 20:37:38.143751", "score": "0.9948", "loss": "0.0197", "code": "@Override public String toString() { ifst = true; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 215, "n_pass": [121, 11, 11]}
{"time": "2021-02-19 20:37:39.930765", "score": "0.995", "loss": "0.0175", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 209, "n_pass": [171, 12, 12]}
{"time": "2021-02-19 20:37:41.319880", "score": "0.9943", "loss": "0.0188", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 202, "n_pass": [179, 13, 13]}
{"time": "2021-02-19 20:37:42.681120", "score": "0.9935", "loss": "0.0219", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } return sb.append('}').toString(); }", "n_tokens": 195, "n_pass": [183, 14, 14]}
{"time": "2021-02-19 20:37:45.387096", "score": "0.9913", "loss": "0.0318", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } sb.append('}').toString(); }", "n_tokens": 188, "n_pass": [191, 16, 15]}
{"time": "2021-02-19 20:37:46.785982", "score": "0.9793", "loss": "0.0975", "code": "@Override public String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 181, "n_pass": [192, 17, 16]}
{"time": "2021-02-19 20:37:48.139697", "score": "0.9631", "loss": "0.1919", "code": "@Overrblic String toString() { ifst ; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 175, "n_pass": [197, 18, 17]}
{"time": "2021-02-19 20:37:50.639235", "score": "0.9681", "loss": "0.173", "code": "@Overrblic String toString() {; for (int i = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 169, "n_pass": [202, 19, 18]}
{"time": "2021-02-19 20:37:54.496615", "score": "0.9661", "loss": "0.1811", "code": "@Overrblic String toString() {; for (in = 0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 166, "n_pass": [281, 21, 19]}
{"time": "2021-02-19 20:37:55.865733", "score": "0.9771", "loss": "0.1237", "code": "@Overrblic String toString() {; for (in0;ength; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 163, "n_pass": [282, 22, 20]}
{"time": "2021-02-19 20:37:57.206680", "score": "0.9778", "loss": "0.1153", "code": "@Overrblic String toString() {; for (in0;eh; ++i) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 160, "n_pass": [284, 23, 21]}
{"time": "2021-02-19 20:37:58.548716", "score": "0.9765", "loss": "0.1201", "code": "@Overrblic String toString() {; for (in0;eh; ) {lues[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 157, "n_pass": [286, 24, 22]}
{"time": "2021-02-19 20:37:59.908365", "score": "0.9865", "loss": "0.0702", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (valuel) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 154, "n_pass": [288, 25, 23]}
{"time": "2021-02-19 20:38:01.253959", "score": "0.9888", "loss": "0.057", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (!first) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 151, "n_pass": [293, 26, 24]}
{"time": "2021-02-19 20:38:02.614293", "score": "0.9825", "loss": "0.1046", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } sb.append(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 148, "n_pass": [297, 27, 25]}
{"time": "2021-02-19 20:38:03.956929", "score": "0.9364", "loss": "0.3559", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } ppend(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 144, "n_pass": [303, 28, 26]}
{"time": "2021-02-19 20:38:05.294911", "score": "0.9424", "loss": "0.3376", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keyToString(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 140, "n_pass": [304, 29, 27]}
{"time": "2021-02-19 20:38:06.634665", "score": "0.8313", "loss": "0.9293", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(ketring(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 136, "n_pass": [306, 30, 28]}
{"time": "2021-02-19 20:38:07.991716", "score": "0.8313", "loss": "0.9293", "code": "@Overrblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 132, "n_pass": [307, 31, 29]}
{"time": "2021-02-19 20:38:10.717782", "score": "0.8313", "loss": "0.9293", "code": "@Ovblic String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 129, "n_pass": [319, 33, 30]}
{"time": "2021-02-19 20:38:12.053238", "score": "0.8518", "loss": "0.8348", "code": "@Ovc String toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 126, "n_pass": [320, 34, 31]}
{"time": "2021-02-19 20:38:13.758768", "score": "0.4256", "loss": "2.65", "code": "@Ovc Sng toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 123, "n_pass": [322, 35, 32]}
{"time": "2021-02-19 20:38:21.725603", "score": "0.5053", "loss": "2.6576", "code": "@Ovc Sg toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 122, "n_pass": [433, 38, 33]}
{"time": "2021-02-19 20:38:23.068003", "score": "0.7611", "loss": "1.165", "code": "@Ovc S toString() {; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 121, "n_pass": [434, 39, 34]}
{"time": "2021-02-19 20:38:27.440539", "score": "0.7611", "loss": "1.165", "code": "@Ovc S toString(){; for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 120, "n_pass": [445, 40, 35]}
{"time": "2021-02-19 20:38:28.775431", "score": "0.7611", "loss": "1.165", "code": "@Ovc S toString(){for (in0;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 118, "n_pass": [447, 41, 36]}
{"time": "2021-02-19 20:38:30.132901", "score": "0.7517", "loss": "1.2064", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (val) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 116, "n_pass": [451, 42, 37]}
{"time": "2021-02-19 20:38:31.475212", "score": "0.7223", "loss": "1.3518", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (rst) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 114, "n_pass": [461, 43, 38]}
{"time": "2021-02-19 20:38:32.834533", "score": "0.7633", "loss": "1.0659", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { sb(\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 112, "n_pass": [467, 44, 39]}
{"time": "2021-02-19 20:38:34.170174", "score": "0.7299", "loss": "1.1527", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\", \"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 110, "n_pass": [470, 45, 40]}
{"time": "2021-02-19 20:38:35.516977", "score": "0.7263", "loss": "1.1707", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(keg(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 108, "n_pass": [472, 46, 41]}
{"time": "2021-02-19 20:38:36.854711", "score": "0.7519", "loss": "1.0414", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(keys[i])).e; } } nd('}').toString(); }", "n_tokens": 106, "n_pass": [477, 47, 42]}
{"time": "2021-02-19 20:38:38.190926", "score": "0.7838", "loss": "0.9216", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } } nd('}').toString(); }", "n_tokens": 104, "n_pass": [479, 48, 43]}
{"time": "2021-02-19 20:38:39.531838", "score": "0.7643", "loss": "0.981", "code": "@Ovc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toString(); }", "n_tokens": 102, "n_pass": [487, 49, 44]}
{"time": "2021-02-19 20:38:44.913089", "score": "0.6303", "loss": "1.7741", "code": "@vc S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toString(); }", "n_tokens": 101, "n_pass": [499, 53, 45]}
{"time": "2021-02-19 20:38:46.248416", "score": "0.7905", "loss": "0.8799", "code": "@c S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toString(); }", "n_tokens": 100, "n_pass": [500, 54, 46]}
{"time": "2021-02-19 20:38:54.919168", "score": "0.3281", "loss": "3.6753", "code": "@c S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStrg(); }", "n_tokens": 98, "n_pass": [554, 57, 47]}
{"time": "2021-02-19 20:39:10.564874", "score": "0.6132", "loss": "1.6163", "code": "@c S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr(); }", "n_tokens": 97, "n_pass": [694, 60, 48]}
{"time": "2021-02-19 20:39:11.908084", "score": "0.6132", "loss": "1.6163", "code": "@c S toString(){for (i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 96, "n_pass": [697, 61, 49]}
{"time": "2021-02-19 20:39:17.732802", "score": "0.6132", "loss": "1.6163", "code": "@c S toString(){for(i;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 95, "n_pass": [718, 62, 50]}
{"time": "2021-02-19 20:39:19.089174", "score": "0.5506", "loss": "1.9332", "code": "@c S toString(){for(;eh; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 94, "n_pass": [720, 63, 51]}
{"time": "2021-02-19 20:39:20.432397", "score": "0.736", "loss": "1.3357", "code": "@c S toString(){for(;h; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 93, "n_pass": [722, 64, 52]}
{"time": "2021-02-19 20:39:21.764597", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;; ) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 92, "n_pass": [723, 65, 53]}
{"time": "2021-02-19 20:39:23.128613", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;) {s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 91, "n_pass": [725, 66, 54]}
{"time": "2021-02-19 20:39:24.482632", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i]; if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 90, "n_pass": [727, 67, 55]}
{"time": "2021-02-19 20:39:25.821181", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if (l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 89, "n_pass": [734, 68, 56]}
{"time": "2021-02-19 20:39:27.166752", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l) { if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 88, "n_pass": [737, 69, 57]}
{"time": "2021-02-19 20:39:28.505673", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){ if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 87, "n_pass": [741, 70, 58]}
{"time": "2021-02-19 20:39:29.837679", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if (r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 86, "n_pass": [743, 71, 59]}
{"time": "2021-02-19 20:39:31.198495", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if(r) { (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 85, "n_pass": [746, 72, 60]}
{"time": "2021-02-19 20:39:32.559016", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if(r){ (\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 84, "n_pass": [750, 73, 61]}
{"time": "2021-02-19 20:39:33.889605", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\"); } d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 83, "n_pass": [752, 74, 62]}
{"time": "2021-02-19 20:39:35.251660", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");} d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 82, "n_pass": [758, 75, 63]}
{"time": "2021-02-19 20:39:36.613139", "score": "0.6848", "loss": "1.3335", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}d(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 81, "n_pass": [760, 76, 64]}
{"time": "2021-02-19 20:39:37.943550", "score": "0.7938", "loss": "0.8398", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}(g(ys[i])).e; } }d('}').toStr();}", "n_tokens": 80, "n_pass": [761, 77, 65]}
{"time": "2021-02-19 20:39:39.282892", "score": "0.8728", "loss": "0.5381", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((ys[i])).e; } }d('}').toStr();}", "n_tokens": 79, "n_pass": [763, 78, 66]}
{"time": "2021-02-19 20:39:40.616459", "score": "0.8685", "loss": "0.5026", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e; } }d('}').toStr();}", "n_tokens": 78, "n_pass": [765, 79, 67]}
{"time": "2021-02-19 20:39:41.973056", "score": "0.8685", "loss": "0.5026", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;} }d('}').toStr();}", "n_tokens": 77, "n_pass": [775, 80, 68]}
{"time": "2021-02-19 20:39:43.304204", "score": "0.8685", "loss": "0.5026", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}d('}').toStr();}", "n_tokens": 76, "n_pass": [777, 81, 69]}
{"time": "2021-02-19 20:39:44.632643", "score": "0.9147", "loss": "0.3018", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}('}').toStr();}", "n_tokens": 75, "n_pass": [779, 82, 70]}
{"time": "2021-02-19 20:39:46.296721", "score": "0.8085", "loss": "0.9929", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}('}').oStr();}", "n_tokens": 74, "n_pass": [786, 83, 71]}
{"time": "2021-02-19 20:39:47.647161", "score": "0.821", "loss": "0.8409", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}('}').Str();}", "n_tokens": 73, "n_pass": [787, 84, 72]}
{"time": "2021-02-19 20:39:48.978609", "score": "0.7146", "loss": "1.4037", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}('}').tr();}", "n_tokens": 72, "n_pass": [788, 85, 73]}
{"time": "2021-02-19 20:39:50.327944", "score": "0.6875", "loss": "1.6028", "code": "@c S toString(){for(;;){s[i];if(l){if(r){(\"\");}((s[i])).e;}}('}').r();}", "n_tokens": 71, "n_pass": [789, 86, 74]}

Minimal simplified code:
@c S toString(){for(;;){s[i];if(l){if(r){("");}((s[i])).e;}}('}').r();}

