
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/ql/ops/eq/DoubleScaledEqualOperator_prepare.java
method_name = prepare
method_body = @Override public void prepare(StorageFacade facade) { lhs.prepare(facade); rhs.prepare(facade); scale.prepare(facade); }
predict, score, loss = prepare, 0.9897941946983337, 0.11063060909509659

Trace of simplified code(s):
{"time": "2021-02-19 11:22:02.754879", "score": "0.9898", "loss": "0.1106", "code": "@Override public void prepare(StorageFacade facade) { lhs.prepare(facade); rhs.prepare(facade); scale.prepare(facade); }", "n_tokens": 120, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 11:22:04.108807", "score": "0.9772", "loss": "0.1701", "code": "@Override public void prepare(StorageFacade facade) { lhs.prrhs.prepare(facade); scale.prepare(facade); }", "n_tokens": 105, "n_pass": [24, 2, 2]}
{"time": "2021-02-19 11:22:05.430507", "score": "0.9232", "loss": "0.3235", "code": "@Override public void prepare(StorageFacade facade) { lhsrepare(facade); scale.prepare(facade); }", "n_tokens": 97, "n_pass": [45, 3, 3]}
{"time": "2021-02-19 11:22:08.073890", "score": "0.9039", "loss": "0.3997", "code": "@Overriic void prepare(StorageFacade facade) { lhsrepare(facade); scale.prepare(facade); }", "n_tokens": 90, "n_pass": [52, 5, 4]}
{"time": "2021-02-19 11:22:10.121079", "score": "0.7536", "loss": "0.7585", "code": "@Overriic void prepare(Storae facade) { lhsrepare(facade); scale.prepare(facade); }", "n_tokens": 83, "n_pass": [56, 6, 5]}
{"time": "2021-02-19 11:22:14.798980", "score": "0.7536", "loss": "0.7585", "code": "@Overriic void prepare(Storae facade) {repare(facade); scale.prepare(facade); }", "n_tokens": 79, "n_pass": [93, 9, 6]}
{"time": "2021-02-19 11:22:16.106792", "score": "0.8825", "loss": "0.4263", "code": "@Overriic void prepare(Storae facade) {re(facade); scale.prepare(facade); }", "n_tokens": 75, "n_pass": [94, 10, 7]}
{"time": "2021-02-19 11:22:17.416590", "score": "0.5025", "loss": "1.7072", "code": "@Overriic void prepare(Storae facade) {re(fe); scale.prepare(facade); }", "n_tokens": 71, "n_pass": [96, 11, 8]}
{"time": "2021-02-19 11:22:18.724889", "score": "0.6485", "loss": "1.2942", "code": "@Overriic void prepare(Storae facade) {re(fe); e.prepare(facade); }", "n_tokens": 67, "n_pass": [98, 12, 9]}
{"time": "2021-02-19 11:22:24.005186", "score": "0.6485", "loss": "1.2942", "code": "@Oviic void prepare(Storae facade) {re(fe); e.prepare(facade); }", "n_tokens": 64, "n_pass": [105, 16, 10]}
{"time": "2021-02-19 11:22:25.312580", "score": "0.4073", "loss": "2.0691", "code": "@Ov void prepare(Storae facade) {re(fe); e.prepare(facade); }", "n_tokens": 61, "n_pass": [106, 17, 11]}
{"time": "2021-02-19 11:22:27.745005", "score": "0.6977", "loss": "1.0596", "code": "@Ov void prepare(ae facade) {re(fe); e.prepare(facade); }", "n_tokens": 57, "n_pass": [111, 18, 12]}
{"time": "2021-02-19 11:22:33.065555", "score": "0.2652", "loss": "2.7972", "code": "@Ov void prepare(ae facade) {re(fe); e.prepare(fa); }", "n_tokens": 53, "n_pass": [120, 22, 13]}
{"time": "2021-02-19 11:22:34.375575", "score": "0.4341", "loss": "1.5671", "code": " void prepare(ae facade) {re(fe); e.prepare(fa); }", "n_tokens": 50, "n_pass": [122, 23, 14]}
{"time": "2021-02-19 11:22:35.679648", "score": "0.3568", "loss": "2.1054", "code": "id prepare(ae facade) {re(fe); e.prepare(fa); }", "n_tokens": 47, "n_pass": [123, 24, 15]}
{"time": "2021-02-19 11:22:46.120124", "score": "0.3367", "loss": "1.9192", "code": "id prepare(ae face) {re(fe); e.prepare(fa); }", "n_tokens": 45, "n_pass": [169, 30, 16]}
{"time": "2021-02-19 11:22:53.999922", "score": "0.4426", "loss": "1.4158", "code": "id prepare(ae face) {re(fe); e.prepare(); }", "n_tokens": 43, "n_pass": [181, 36, 17]}
{"time": "2021-02-19 11:22:55.333776", "score": "0.3972", "loss": "1.5618", "code": "d prepare(ae face) {re(fe); e.prepare(); }", "n_tokens": 42, "n_pass": [184, 37, 18]}
{"time": "2021-02-19 11:23:14.267678", "score": "0.2595", "loss": "2.2841", "code": "d prepare(ae ace) {re(fe); e.prepare(); }", "n_tokens": 41, "n_pass": [261, 46, 19]}
{"time": "2021-02-19 11:23:16.932361", "score": "0.4239", "loss": "1.4886", "code": "d prepare(ae ae) {re(fe); e.prepare(); }", "n_tokens": 40, "n_pass": [263, 48, 20]}
{"time": "2021-02-19 11:23:19.557019", "score": "0.4239", "loss": "1.4886", "code": "d prepare(ae ae){re(fe); e.prepare(); }", "n_tokens": 39, "n_pass": [266, 50, 21]}
{"time": "2021-02-19 11:23:20.884034", "score": "0.4285", "loss": "1.3219", "code": "d prepare(ae ae){e(fe); e.prepare(); }", "n_tokens": 38, "n_pass": [268, 51, 22]}
{"time": "2021-02-19 11:23:22.187874", "score": "0.5203", "loss": "1.0135", "code": "d prepare(ae ae){(fe); e.prepare(); }", "n_tokens": 37, "n_pass": [269, 52, 23]}
{"time": "2021-02-19 11:23:23.522972", "score": "0.6598", "loss": "0.9877", "code": "d prepare(ae ae){(e); e.prepare(); }", "n_tokens": 36, "n_pass": [271, 53, 24]}
{"time": "2021-02-19 11:23:25.188307", "score": "0.6598", "loss": "0.9877", "code": "d prepare(ae ae){(e);e.prepare(); }", "n_tokens": 35, "n_pass": [275, 54, 25]}
{"time": "2021-02-19 11:23:36.910669", "score": "0.6598", "loss": "0.9877", "code": "d prepare(ae ae){(e);e.prepare();}", "n_tokens": 34, "n_pass": [288, 63, 26]}
{"time": "2021-02-19 11:23:41.520645", "score": "0.354", "loss": "2.1868", "code": "d prepare(e ae){(e);e.prepare();}", "n_tokens": 33, "n_pass": [300, 64, 27]}

Minimal simplified code:
d prepare(e ae){(e);e.prepare();}

