
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-shared/src/main/java/com/iplanet/security/util/BigInt_equals.java
method_name = equals
method_body = public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }
predict, score, loss = equals, 0.9438145756721497, 0.24908998608589172

Trace of simplified code(s):
{"time": "2021-02-19 22:40:00.464481", "score": "0.929", "loss": "0.352", "code": "public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 268, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 22:40:01.934320", "score": "0.9611", "loss": "0.1116", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 235, "n_pass": [22, 2, 2]}
{"time": "2021-02-19 22:40:03.333360", "score": "0.9687", "loss": "0.0729", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 218, "n_pass": [46, 3, 3]}
{"time": "2021-02-19 22:40:04.758217", "score": "0.9758", "loss": "0.0546", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 201, "n_pass": [48, 4, 4]}
{"time": "2021-02-19 22:40:06.125134", "score": "0.933", "loss": "0.1236", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) return false; return true; }", "n_tokens": 184, "n_pass": [50, 5, 5]}
{"time": "2021-02-19 22:40:07.935448", "score": "0.8448", "loss": "0.3302", "code": "public boolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 175, "n_pass": [85, 6, 6]}
{"time": "2021-02-19 22:40:09.314938", "score": "0.813", "loss": "0.4482", "code": "oolean equals(BigInt other) { if (this == other) return trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 167, "n_pass": [88, 7, 7]}
{"time": "2021-02-19 22:40:11.086340", "score": "0.8071", "loss": "0.432", "code": "oolean equals(BigInt other) { if (this == other)trByteArray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 159, "n_pass": [95, 8, 8]}
{"time": "2021-02-19 22:40:12.462423", "score": "0.7759", "loss": "0.5659", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (places.length !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 151, "n_pass": [96, 9, 9]}
{"time": "2021-02-19 22:40:13.853455", "score": "0.681", "loss": "0.8307", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (place !=th) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 143, "n_pass": [99, 10, 10]}
{"time": "2021-02-19 22:40:17.102625", "score": "0.3951", "loss": "1.7832", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (placess[i]) rse; return true; }", "n_tokens": 139, "n_pass": [151, 12, 11]}
{"time": "2021-02-19 22:40:21.291402", "score": "0.5906", "loss": "1.1474", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) rse; return true; }", "n_tokens": 134, "n_pass": [162, 15, 12]}
{"time": "2021-02-19 22:40:22.658091", "score": "0.854", "loss": "0.3565", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) return true; }", "n_tokens": 129, "n_pass": [164, 16, 13]}
{"time": "2021-02-19 22:40:24.056504", "score": "0.4584", "loss": "1.849", "code": "oolean equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 124, "n_pass": [166, 17, 14]}
{"time": "2021-02-19 22:40:25.473551", "score": "0.4852", "loss": "1.7122", "code": "an equals(BigInt other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 120, "n_pass": [168, 18, 15]}
{"time": "2021-02-19 22:40:27.674078", "score": "0.5702", "loss": "1.2444", "code": "an equals(Bi other) { if (this == other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 116, "n_pass": [172, 19, 16]}
{"time": "2021-02-19 22:40:29.079853", "score": "0.1634", "loss": "3.0975", "code": "an equals(Bi other) { if (th= other)ray(); if (placeh) return false; for (int i = 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 112, "n_pass": [177, 20, 17]}
{"time": "2021-02-19 22:40:31.871782", "score": "0.2701", "loss": "2.3762", "code": "an equals(Bi other) { if (th= other)ray(); if (ph) return false; for (int i = 0; ; i++) if (ps[i]) retuue; }", "n_tokens": 108, "n_pass": [183, 22, 18]}
{"time": "2021-02-19 22:40:36.033866", "score": "0.3808", "loss": "1.8597", "code": "an equals(Bi other) { if (th= other)ray(); if (ph) return false; for (int i = 0; ; i++) if (ps[i])ue; }", "n_tokens": 103, "n_pass": [196, 25, 19]}
{"time": "2021-02-19 22:40:38.184357", "score": "0.2182", "loss": "2.836", "code": "an equals(Bi other) { if (thher)ray(); if (ph) return false; for (int i = 0; ; i++) if (ps[i])ue; }", "n_tokens": 99, "n_pass": [205, 26, 20]}
{"time": "2021-02-19 22:40:43.543062", "score": "0.3375", "loss": "2.2512", "code": "an equals(Bi other) { if (thr)ray(); if (ph) return false; for (int i = 0; ; i++) if (ps[i])ue; }", "n_tokens": 97, "n_pass": [278, 29, 21]}
{"time": "2021-02-19 22:40:50.507747", "score": "0.2845", "loss": "2.4469", "code": "an equals(Bi other) { if (thr)ray(); if (ph) return false; for (t i = 0; ; i++) if (ps[i])ue; }", "n_tokens": 95, "n_pass": [296, 34, 22]}
{"time": "2021-02-19 22:40:54.656423", "score": "0.4864", "loss": "1.7018", "code": "an equals(Bi other) { if (thr)ray(); if (ph) return false; for (t i = 0; ; i) if (ps[i])ue; }", "n_tokens": 93, "n_pass": [303, 37, 23]}
{"time": "2021-02-19 22:40:56.060466", "score": "0.4072", "loss": "1.9378", "code": "an equals(Bi other) { if (thr)ray(); if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 90, "n_pass": [308, 38, 24]}
{"time": "2021-02-19 22:40:59.013870", "score": "0.2476", "loss": "2.619", "code": "an equals(Bi oer) { if (thr)ray(); if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 88, "n_pass": [318, 39, 25]}
{"time": "2021-02-19 22:41:00.433030", "score": "0.3053", "loss": "2.281", "code": "an equals(Bi o) { if (thr)ray(); if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 86, "n_pass": [319, 40, 26]}
{"time": "2021-02-19 22:41:02.212648", "score": "0.3907", "loss": "2.0033", "code": "an equals(Bi o) { if (r)ray(); if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 84, "n_pass": [324, 41, 27]}
{"time": "2021-02-19 22:41:03.578647", "score": "0.2562", "loss": "2.5429", "code": "an equals(Bi o) { if (r)y(); if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 82, "n_pass": [326, 42, 28]}
{"time": "2021-02-19 22:41:23.616256", "score": "0.2562", "loss": "2.5429", "code": "an equals(Bi o) { if (r)y();if (ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 81, "n_pass": [451, 49, 29]}
{"time": "2021-02-19 22:41:24.987472", "score": "0.2562", "loss": "2.5429", "code": "an equals(Bi o) { if (r)y();if(ph) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 80, "n_pass": [453, 50, 30]}
{"time": "2021-02-19 22:41:26.367924", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h) return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 79, "n_pass": [455, 51, 31]}
{"time": "2021-02-19 22:41:27.759467", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false; for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 78, "n_pass": [458, 52, 32]}
{"time": "2021-02-19 22:41:37.554498", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for (t i = 0; ; i) if (ps)ue; }", "n_tokens": 77, "n_pass": [472, 59, 33]}
{"time": "2021-02-19 22:41:38.957914", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i = 0; ; i) if (ps)ue; }", "n_tokens": 76, "n_pass": [476, 60, 34]}
{"time": "2021-02-19 22:41:44.529228", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i= 0; ; i) if (ps)ue; }", "n_tokens": 75, "n_pass": [481, 64, 35]}
{"time": "2021-02-19 22:41:45.935387", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0; ; i) if (ps)ue; }", "n_tokens": 74, "n_pass": [483, 65, 36]}
{"time": "2021-02-19 22:41:47.386908", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;; i) if (ps)ue; }", "n_tokens": 73, "n_pass": [486, 66, 37]}
{"time": "2021-02-19 22:41:48.757326", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i) if (ps)ue; }", "n_tokens": 72, "n_pass": [488, 67, 38]}
{"time": "2021-02-19 22:41:51.561378", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i)if (ps)ue; }", "n_tokens": 71, "n_pass": [491, 69, 39]}
{"time": "2021-02-19 22:41:52.963901", "score": "0.3181", "loss": "2.3992", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i)if(ps)ue; }", "n_tokens": 70, "n_pass": [494, 70, 40]}
{"time": "2021-02-19 22:41:54.367520", "score": "0.2338", "loss": "2.7145", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i)if(s)ue; }", "n_tokens": 69, "n_pass": [496, 71, 41]}
{"time": "2021-02-19 22:41:55.771926", "score": "0.1706", "loss": "2.9904", "code": "an equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 68, "n_pass": [499, 72, 42]}
{"time": "2021-02-19 22:41:57.175424", "score": "0.1822", "loss": "2.9908", "code": "n equals(Bi o) { if (r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 67, "n_pass": [502, 73, 43]}
{"time": "2021-02-19 22:42:03.080713", "score": "0.3305", "loss": "2.6759", "code": "n equals(B o) { if (r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 66, "n_pass": [513, 75, 44]}
{"time": "2021-02-19 22:42:04.454012", "score": "0.3305", "loss": "2.6759", "code": "n equals(B o){ if (r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 65, "n_pass": [517, 76, 45]}
{"time": "2021-02-19 22:42:05.858932", "score": "0.3305", "loss": "2.6759", "code": "n equals(B o){if (r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 64, "n_pass": [519, 77, 46]}
{"time": "2021-02-19 22:42:07.237733", "score": "0.3305", "loss": "2.6759", "code": "n equals(B o){if(r)y();if(h)return false;for(t i=0;;i)if(s)e; }", "n_tokens": 63, "n_pass": [522, 78, 47]}
{"time": "2021-02-19 22:42:21.125779", "score": "0.2302", "loss": "3.0454", "code": "n equals(B o){if(r)y();if(h)return false;for(t i0;;i)if(s)e; }", "n_tokens": 62, "n_pass": [555, 88, 48]}
{"time": "2021-02-19 22:42:22.528554", "score": "0.2302", "loss": "3.0454", "code": "n equals(B o){if(r)y();if(h)return false;for(t i;;i)if(s)e; }", "n_tokens": 61, "n_pass": [556, 89, 49]}
{"time": "2021-02-19 22:42:41.718058", "score": "0.6756", "loss": "1.1742", "code": "n equals(B o){if(r)y();if(h)return false;for(t i;;i)if(s); }", "n_tokens": 60, "n_pass": [620, 100, 50]}
{"time": "2021-02-19 22:42:43.099267", "score": "0.6756", "loss": "1.1742", "code": "n equals(B o){if(r)y();if(h)return false;for(t i;;i)if(s);}", "n_tokens": 59, "n_pass": [621, 101, 51]}
{"time": "2021-02-19 22:42:55.992563", "score": "0.4329", "loss": "1.8996", "code": "n equals(B o){if(r)y();if(h)return false;for( i;;i)if(s);}", "n_tokens": 58, "n_pass": [668, 108, 52]}
{"time": "2021-02-19 22:42:57.376771", "score": "0.4329", "loss": "1.8996", "code": "n equals(B o){if(r)y();if(h)return false;for(i;;i)if(s);}", "n_tokens": 57, "n_pass": [669, 109, 53]}
{"time": "2021-02-19 22:42:58.752064", "score": "0.2519", "loss": "2.6109", "code": "n equals(B o){if(r)y();if(h)return false;for(;;i)if(s);}", "n_tokens": 56, "n_pass": [670, 110, 54]}

Minimal simplified code:
n equals(B o){if(r)y();if(h)return false;for(;;i)if(s);}

