
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_v.java
method_name = v
method_body = public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }
predict, score, loss = v, 0.9810284972190857, 0.02560439705848694

Trace of simplified code(s):
{"time": "2021-02-19 18:00:58.351772", "score": "0.9772", "loss": "0.0311", "code": "public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 264, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 18:01:00.112741", "score": "0.9817", "loss": "0.0247", "code": "id v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 248, "n_pass": [44, 2, 2]}
{"time": "2021-02-19 18:01:01.466250", "score": "0.9672", "loss": "0.0508", "code": "id v(String contr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 232, "n_pass": [46, 3, 3]}
{"time": "2021-02-19 18:01:02.814450", "score": "0.8965", "loss": "0.2059", "code": "id v(String contr) { if (!allowV) return; StackTer = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 216, "n_pass": [49, 4, 4]}
{"time": "2021-02-19 18:01:04.200527", "score": "0.9412", "loss": "0.0923", "code": "id v(String contr) { if (!allowV) return; StackTackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 200, "n_pass": [50, 5, 5]}
{"time": "2021-02-19 18:01:05.553306", "score": "0.9539", "loss": "0.0733", "code": "id v(String contr) { if (!allowV) return; StackTElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 192, "n_pass": [87, 6, 6]}
{"time": "2021-02-19 18:01:06.919234", "score": "0.9201", "loss": "0.1126", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StringenerateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 184, "n_pass": [89, 7, 7]}
{"time": "2021-02-19 18:01:08.279089", "score": "0.9485", "loss": "0.0664", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 176, "n_pass": [90, 8, 8]}
{"time": "2021-02-19 18:01:09.620323", "score": "0.9136", "loss": "0.1142", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 167, "n_pass": [96, 9, 9]}
{"time": "2021-02-19 18:01:10.984131", "score": "0.9261", "loss": "0.0963", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 158, "n_pass": [98, 10, 10]}
{"time": "2021-02-19 18:01:12.333489", "score": "0.9727", "loss": "0.0352", "code": "id v(String contr) { if (!allowV) return; StackTElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 149, "n_pass": [102, 11, 11]}
{"time": "2021-02-19 18:01:13.679847", "score": "0.9839", "loss": "0.0224", "code": "id v(String contr) { if (!allowV) returnElement(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 141, "n_pass": [109, 12, 12]}
{"time": "2021-02-19 18:01:15.076527", "score": "0.9843", "loss": "0.0219", "code": "id v(String contr) { if (!allowV) returnent(); StrinTag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 137, "n_pass": [161, 13, 13]}
{"time": "2021-02-19 18:01:16.418194", "score": "0.9813", "loss": "0.0264", "code": "id v(String contr) { if (!allowV) returnent(); STag(caller); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 133, "n_pass": [163, 14, 14]}
{"time": "2021-02-19 18:01:17.784292", "score": "0.9369", "loss": "0.0947", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (customLogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 129, "n_pass": [165, 15, 15]}
{"time": "2021-02-19 18:01:19.157274", "score": "0.7576", "loss": "0.3906", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusogger != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 125, "n_pass": [169, 16, 16]}
{"time": "2021-02-19 18:01:20.491599", "score": "0.7576", "loss": "0.3906", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr != null) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 121, "n_pass": [170, 17, 17]}
{"time": "2021-02-19 18:01:21.824890", "score": "0.6328", "loss": "0.6155", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(tat, tr); } else { Log.v(tag, tr); } }", "n_tokens": 117, "n_pass": [172, 18, 18]}
{"time": "2021-02-19 18:01:24.512617", "score": "0.4515", "loss": "1.1004", "code": "id v(String contr) { if (!allowV) returnent(); STag(er); if (cusr !=l) {gger.v(tat, tr); } else {v(tag, tr); } }", "n_tokens": 112, "n_pass": [180, 20, 19]}
{"time": "2021-02-19 18:01:27.221899", "score": "0.3959", "loss": "1.2133", "code": "id v(String contr) { if (!al) returnent(); STag(er); if (cusr !=l) {gger.v(tat, tr); } else {v(tag, tr); } }", "n_tokens": 108, "n_pass": [191, 22, 20]}
{"time": "2021-02-19 18:01:28.569777", "score": "0.3959", "loss": "1.2133", "code": "id v(String contr) { if (!al) reent(); STag(er); if (cusr !=l) {gger.v(tat, tr); } else {v(tag, tr); } }", "n_tokens": 104, "n_pass": [193, 23, 21]}
{"time": "2021-02-19 18:01:29.914987", "score": "0.4418", "loss": "1.0503", "code": "id v(String contr) { if (!al) reent(); STag(er); if (cusl) {gger.v(tat, tr); } else {v(tag, tr); } }", "n_tokens": 100, "n_pass": [200, 24, 22]}
{"time": "2021-02-19 18:01:33.940231", "score": "0.4985", "loss": "0.8617", "code": "id v(String contr) { if (!al) reent(); STag(er); if (cusl) {er.v(tat, tr); } else {v(tag, tr); } }", "n_tokens": 98, "n_pass": [275, 27, 23]}
{"time": "2021-02-19 18:01:36.607470", "score": "0.5057", "loss": "0.9141", "code": "id v(String contr) { if (!al) reent(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 96, "n_pass": [278, 29, 24]}
{"time": "2021-02-19 18:01:41.354588", "score": "0.578", "loss": "0.7757", "code": "id v(Strg contr) { if (!al) reent(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 94, "n_pass": [296, 32, 25]}
{"time": "2021-02-19 18:01:42.686105", "score": "0.5667", "loss": "0.7433", "code": "id v(Strg ntr) { if (!al) reent(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 92, "n_pass": [298, 33, 26]}
{"time": "2021-02-19 18:01:44.025193", "score": "0.4426", "loss": "1.0923", "code": "id v(Strg r) { if (!al) reent(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 90, "n_pass": [299, 34, 27]}
{"time": "2021-02-19 18:01:45.366157", "score": "0.6183", "loss": "0.6877", "code": "id v(Strg r) { if (!al) ent(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 88, "n_pass": [307, 35, 28]}
{"time": "2021-02-19 18:01:46.715015", "score": "0.5599", "loss": "0.8145", "code": "id v(Strg r) { if (!al) t(); STag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 86, "n_pass": [308, 36, 29]}
{"time": "2021-02-19 18:01:48.069632", "score": "0.558", "loss": "0.8185", "code": "id v(Strg r) { if (!al) t();Tag(er); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 84, "n_pass": [311, 37, 30]}
{"time": "2021-02-19 18:01:50.747358", "score": "0.9298", "loss": "0.1049", "code": "id v(Strg r) { if (!al) t();Tag(); if (cusl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 82, "n_pass": [314, 39, 31]}
{"time": "2021-02-19 18:01:52.230092", "score": "0.9686", "loss": "0.0482", "code": "id v(Strg r) { if (!al) t();Tag(); if (cl) {er.v(t, tr); } else {v(tag, tr); } }", "n_tokens": 80, "n_pass": [319, 40, 32]}
{"time": "2021-02-19 18:01:53.559686", "score": "0.8393", "loss": "0.2741", "code": "id v(Strg r) { if (!al) t();Tag(); if (cl) {er(t, tr); } else {v(tag, tr); } }", "n_tokens": 78, "n_pass": [323, 41, 33]}
{"time": "2021-02-19 18:01:54.875110", "score": "0.8254", "loss": "0.3133", "code": "id v(Strg r) { if (!al) t();Tag(); if (cl) {er(ttr); } else {v(tag, tr); } }", "n_tokens": 76, "n_pass": [325, 42, 34]}
{"time": "2021-02-19 18:01:56.207186", "score": "0.8789", "loss": "0.2188", "code": "id v(Strg r) { if (!al) t();Tag(); if (cl) {er(t); } else {v(tag, tr); } }", "n_tokens": 74, "n_pass": [326, 43, 35]}
{"time": "2021-02-19 18:01:58.294957", "score": "0.8218", "loss": "0.3091", "code": "id v(Sg r) { if (!al) t();Tag(); if (cl) {er(t); } else {v(tag, tr); } }", "n_tokens": 72, "n_pass": [341, 44, 36]}
{"time": "2021-02-19 18:01:59.644732", "score": "0.3991", "loss": "1.2464", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {er(t); } else {v(tag, tr); } }", "n_tokens": 70, "n_pass": [352, 45, 37]}
{"time": "2021-02-19 18:02:00.998719", "score": "0.7728", "loss": "0.403", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t); } else {v(tag, tr); } }", "n_tokens": 68, "n_pass": [360, 46, 38]}
{"time": "2021-02-19 18:02:08.496741", "score": "0.7728", "loss": "0.403", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t);} else {v(tag, tr); } }", "n_tokens": 67, "n_pass": [461, 47, 39]}
{"time": "2021-02-19 18:02:09.811383", "score": "0.7728", "loss": "0.403", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t);}else {v(tag, tr); } }", "n_tokens": 66, "n_pass": [462, 48, 40]}
{"time": "2021-02-19 18:02:11.136109", "score": "0.7728", "loss": "0.403", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t);}else{v(tag, tr); } }", "n_tokens": 65, "n_pass": [467, 49, 41]}
{"time": "2021-02-19 18:02:15.160470", "score": "0.5625", "loss": "0.9292", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t);}else{v(ta, tr); } }", "n_tokens": 64, "n_pass": [473, 52, 42]}
{"time": "2021-02-19 18:02:16.476169", "score": "0.5625", "loss": "0.9292", "code": "id v(Sg r) { if (!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 63, "n_pass": [475, 53, 43]}
{"time": "2021-02-19 18:02:17.793564", "score": "0.5615", "loss": "0.9289", "code": "d v(Sg r) { if (!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 62, "n_pass": [480, 54, 44]}
{"time": "2021-02-19 18:02:20.212042", "score": "0.6828", "loss": "0.6308", "code": "d v(g r) { if (!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 61, "n_pass": [485, 55, 45]}
{"time": "2021-02-19 18:02:21.552433", "score": "0.6828", "loss": "0.6308", "code": "d v(g r){ if (!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 60, "n_pass": [490, 56, 46]}
{"time": "2021-02-19 18:02:22.882032", "score": "0.6828", "loss": "0.6308", "code": "d v(g r){if (!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 59, "n_pass": [492, 57, 47]}
{"time": "2021-02-19 18:02:24.200175", "score": "0.6828", "loss": "0.6308", "code": "d v(g r){if(!al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 58, "n_pass": [495, 58, 48]}
{"time": "2021-02-19 18:02:25.523725", "score": "0.7071", "loss": "0.6016", "code": "d v(g r){if(al) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 57, "n_pass": [497, 59, 49]}
{"time": "2021-02-19 18:02:26.846922", "score": "0.5379", "loss": "0.8855", "code": "d v(g r){if(l) t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 56, "n_pass": [498, 60, 50]}
{"time": "2021-02-19 18:02:28.172093", "score": "0.5379", "loss": "0.8855", "code": "d v(g r){if(l)t();g(); if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 55, "n_pass": [501, 61, 51]}
{"time": "2021-02-19 18:02:29.504846", "score": "0.5379", "loss": "0.8855", "code": "d v(g r){if(l)t();g();if (cl) {(t);}else{v(ta,tr); } }", "n_tokens": 54, "n_pass": [510, 62, 52]}
{"time": "2021-02-19 18:02:30.856677", "score": "0.5379", "loss": "0.8855", "code": "d v(g r){if(l)t();g();if(cl) {(t);}else{v(ta,tr); } }", "n_tokens": 53, "n_pass": [513, 63, 53]}
{"time": "2021-02-19 18:02:32.182160", "score": "0.4608", "loss": "1.1225", "code": "d v(g r){if(l)t();g();if(l) {(t);}else{v(ta,tr); } }", "n_tokens": 52, "n_pass": [515, 64, 54]}
{"time": "2021-02-19 18:02:33.505941", "score": "0.4608", "loss": "1.1225", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(ta,tr); } }", "n_tokens": 51, "n_pass": [518, 65, 55]}
{"time": "2021-02-19 18:02:34.867450", "score": "0.5007", "loss": "0.9974", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(a,tr); } }", "n_tokens": 50, "n_pass": [532, 66, 56]}
{"time": "2021-02-19 18:02:36.208098", "score": "0.558", "loss": "1.1515", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(atr); } }", "n_tokens": 49, "n_pass": [534, 67, 57]}
{"time": "2021-02-19 18:02:37.527126", "score": "0.3521", "loss": "1.5117", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(a); } }", "n_tokens": 47, "n_pass": [535, 68, 58]}
{"time": "2021-02-19 18:02:43.672529", "score": "0.3521", "loss": "1.5117", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(a);} }", "n_tokens": 46, "n_pass": [586, 71, 59]}
{"time": "2021-02-19 18:02:44.995387", "score": "0.3521", "loss": "1.5117", "code": "d v(g r){if(l)t();g();if(l){(t);}else{v(a);}}", "n_tokens": 45, "n_pass": [587, 72, 60]}

Minimal simplified code:
d v(g r){if(l)t();g();if(l){(t);}else{v(a);}}

