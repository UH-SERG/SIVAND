
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/user/cover/UserDirectoryService_getInstance.java
method_name = getInstance
method_body = public static org.sakaiproject.user.api.UserDirectoryService getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }
predict, score, loss = getInstance, 0.8579442501068115, 0.3899803161621094

Trace of simplified code(s):
{"time": "2021-02-20 02:47:56.766633", "score": "0.8579", "loss": "0.39", "code": "public static org.sakaiproject.user.api.UserDirectoryService getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 443, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:47:58.134946", "score": "0.8938", "loss": "0.3145", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 388, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 02:47:59.598292", "score": "0.9736", "loss": "0.0823", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.class); return m_instance; } else { return (org.sakaiprojecg.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 332, "n_pass": [25, 3, 3]}
{"time": "2021-02-20 02:48:00.951020", "score": "0.8272", "loss": "0.7396", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.clag.sakaiproject.user.api.UserDirectoryService.class); } }", "n_tokens": 276, "n_pass": [31, 4, 4]}
{"time": "2021-02-20 02:48:02.326950", "score": "0.7805", "loss": "0.9339", "code": "rvice getInstance() { if (ComponentManager.CACHE_COMPONENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 248, "n_pass": [47, 5, 5]}
{"time": "2021-02-20 02:48:03.656972", "score": "0.9238", "loss": "0.3429", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == null) m_instance = (org.sakaiproject.user.api.UserDirectoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 221, "n_pass": [49, 6, 6]}
{"time": "2021-02-20 02:48:06.297051", "score": "0.9349", "loss": "0.3167", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == null) m_instance = (org.saktoryService) ComponentManager.get(org.sakaiproject.user.api.UserDirectoryService.claDirectoryService.class); } }", "n_tokens": 193, "n_pass": [52, 8, 7]}
{"time": "2021-02-20 02:48:07.614921", "score": "0.9216", "loss": "0.3776", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == null) m_instance = (org.saktoryService) ComponentManager.get(org.sakaiproject.user.DirectoryService.class); } }", "n_tokens": 165, "n_pass": [55, 9, 8]}
{"time": "2021-02-20 02:48:08.914900", "score": "0.6771", "loss": "1.6202", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakaiproject.user.DirectoryService.class); } }", "n_tokens": 138, "n_pass": [59, 10, 9]}
{"time": "2021-02-20 02:48:11.512355", "score": "0.6956", "loss": "1.5909", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakaDirectoryService.class); } }", "n_tokens": 124, "n_pass": [78, 12, 10]}
{"time": "2021-02-20 02:48:12.821433", "score": "0.6956", "loss": "1.5909", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == toryService) ComponentManager.get(org.sakace.class); } }", "n_tokens": 110, "n_pass": [79, 13, 11]}
{"time": "2021-02-20 02:48:21.786450", "score": "0.7381", "loss": "1.2912", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == vice) ComponentManager.get(org.sakace.class); } }", "n_tokens": 103, "n_pass": [114, 19, 12]}
{"time": "2021-02-20 02:48:23.101083", "score": "0.7599", "loss": "1.1221", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == vice) CtManager.get(org.sakace.class); } }", "n_tokens": 96, "n_pass": [115, 20, 13]}
{"time": "2021-02-20 02:48:37.113185", "score": "0.7599", "loss": "1.1221", "code": "rvice getInstance() { if (CNENTS) { if (m_instance == vice) CtManager.get(org.sa.class); } }", "n_tokens": 92, "n_pass": [164, 30, 14]}
{"time": "2021-02-20 02:48:39.735084", "score": "0.8321", "loss": "0.7683", "code": "ce getInstance() { if (CNENTS) { if (m_instance == vice) CtManager.get(org.sa.class); } }", "n_tokens": 89, "n_pass": [168, 32, 15]}
{"time": "2021-02-20 02:48:42.501730", "score": "0.8691", "loss": "0.6933", "code": "ce getInstance() { if (CTS) { if (m_instance == vice) CtManager.get(org.sa.class); } }", "n_tokens": 86, "n_pass": [177, 33, 16]}
{"time": "2021-02-20 02:48:43.825801", "score": "0.6096", "loss": "2.5935", "code": "ce getInstance() { if (CTS) { if (m_tance == vice) CtManager.get(org.sa.class); } }", "n_tokens": 83, "n_pass": [182, 34, 17]}
{"time": "2021-02-20 02:48:45.148390", "score": "0.616", "loss": "2.2497", "code": "ce getInstance() { if (CTS) { if (m_ce == vice) CtManager.get(org.sa.class); } }", "n_tokens": 80, "n_pass": [183, 35, 18]}
{"time": "2021-02-20 02:48:57.447799", "score": "0.6456", "loss": "2.1998", "code": "ce getInstance() { if (CTS) { if (m_ == vice) CtManager.get(org.sa.class); } }", "n_tokens": 78, "n_pass": [253, 43, 19]}
{"time": "2021-02-20 02:49:01.430368", "score": "0.5439", "loss": "3.2288", "code": "ce getInstance() { if (CTS) { if (m_ == vi) CtManager.get(org.sa.class); } }", "n_tokens": 76, "n_pass": [256, 46, 20]}
{"time": "2021-02-20 02:49:02.730687", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance() { if (CTS) { if (m_ == vi) Manager.get(org.sa.class); } }", "n_tokens": 74, "n_pass": [258, 47, 21]}
{"time": "2021-02-20 02:49:46.260431", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance() { if (CTS) { if (m_ == vi) Manager.get(org.a.class); } }", "n_tokens": 73, "n_pass": [376, 74, 22]}
{"time": "2021-02-20 02:49:55.408056", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance() { if (CTS) { if (m_ == vi) Manager.get(org.a.class);} }", "n_tokens": 72, "n_pass": [385, 81, 23]}
{"time": "2021-02-20 02:49:56.725516", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance() { if (CTS) { if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 71, "n_pass": [387, 82, 24]}
{"time": "2021-02-20 02:50:05.089730", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){ if (CTS) { if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 70, "n_pass": [405, 85, 25]}
{"time": "2021-02-20 02:50:06.377530", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){if (CTS) { if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 69, "n_pass": [407, 86, 26]}
{"time": "2021-02-20 02:50:07.699053", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){if(CTS) { if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 68, "n_pass": [410, 87, 27]}
{"time": "2021-02-20 02:50:13.107888", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){if(CTS){ if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 67, "n_pass": [416, 91, 28]}
{"time": "2021-02-20 02:50:14.399793", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){if(CTS){if (m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 66, "n_pass": [418, 92, 29]}
{"time": "2021-02-20 02:50:15.770292", "score": "0.5605", "loss": "2.7751", "code": "ce getInstance(){if(CTS){if(m_ == vi) Manager.get(org.a.class);}}", "n_tokens": 65, "n_pass": [421, 93, 30]}
{"time": "2021-02-20 02:50:17.069909", "score": "0.5516", "loss": "3.1384", "code": "ce getInstance(){if(CTS){if(_ == vi) Manager.get(org.a.class);}}", "n_tokens": 64, "n_pass": [423, 94, 31]}
{"time": "2021-02-20 02:50:18.367128", "score": "0.5516", "loss": "3.1384", "code": "ce getInstance(){if(CTS){if(_== vi) Manager.get(org.a.class);}}", "n_tokens": 63, "n_pass": [425, 95, 32]}
{"time": "2021-02-20 02:50:22.337124", "score": "0.5516", "loss": "3.1384", "code": "ce getInstance(){if(CTS){if(_==vi) Manager.get(org.a.class);}}", "n_tokens": 62, "n_pass": [428, 98, 33]}
{"time": "2021-02-20 02:50:23.655251", "score": "0.6045", "loss": "2.6586", "code": "ce getInstance(){if(CTS){if(_==i) Manager.get(org.a.class);}}", "n_tokens": 61, "n_pass": [429, 99, 34]}
{"time": "2021-02-20 02:50:24.985268", "score": "0.6045", "loss": "2.6586", "code": "ce getInstance(){if(CTS){if(_==i)Manager.get(org.a.class);}}", "n_tokens": 60, "n_pass": [432, 100, 35]}
{"time": "2021-02-20 02:50:30.213509", "score": "0.5195", "loss": "3.5654", "code": "ce getInstance(){if(CTS){if(_==i)Manger.get(org.a.class);}}", "n_tokens": 59, "n_pass": [436, 104, 36]}
{"time": "2021-02-20 02:50:36.864199", "score": "0.488", "loss": "3.7851", "code": "ce getInstance(){if(CTS){if(_==i)Manger.et(org.a.class);}}", "n_tokens": 58, "n_pass": [441, 109, 37]}
{"time": "2021-02-20 02:50:44.684372", "score": "0.5273", "loss": "3.5435", "code": "ce getInstance(){if(CTS){if(_==i)Manger.et(orga.class);}}", "n_tokens": 57, "n_pass": [448, 115, 38]}
{"time": "2021-02-20 02:50:46.093551", "score": "0.499", "loss": "3.6811", "code": "ce getInstance(){if(CTS){if(_==i)Manger.et(org.class);}}", "n_tokens": 56, "n_pass": [449, 116, 39]}
{"time": "2021-02-20 02:50:56.543891", "score": "0.4889", "loss": "3.8075", "code": "c getInstance(){if(CTS){if(_==i)Manger.et(org.class);}}", "n_tokens": 55, "n_pass": [461, 124, 40]}

Minimal simplified code:
c getInstance(){if(CTS){if(_==i)Manger.et(org.class);}}

