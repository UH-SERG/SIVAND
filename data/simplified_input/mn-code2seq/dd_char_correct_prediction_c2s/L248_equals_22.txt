
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/adamkewley__jobson/src/main/java/com/github/jobson/jobinputs/select/SelectOption_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; SelectOption that = (SelectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equals(that.name) : that.name != null) return false; return description != null ? description.equals(that.description) : that.description == null; }
predict, score, loss = equals, 0.9985709190368652, 0.001778963953256607

Trace of simplified code(s):
{"time": "2021-02-20 00:17:42.637403", "score": "0.999", "loss": "0.0012", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; SelectOption that = (SelectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equals(that.name) : that.name != null) return false; return description != null ? description.equals(that.description) : that.description == null; }", "n_tokens": 412, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 00:17:44.156457", "score": "0.9992", "loss": "0.001", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() !=electOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equals(that.name) : that.name != null) return false; return description != null ? description.equals(that.description) : that.description == null; }", "n_tokens": 361, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 00:17:45.534012", "score": "0.9939", "loss": "0.0076", "code": "@Override public boolean equals(Object o) { if (thielectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equals(that.name) : that.name != null) return false; return description != null ? description.equals(that.description) : that.description == null; }", "n_tokens": 310, "n_pass": [29, 3, 3]}
{"time": "2021-02-20 00:17:47.308168", "score": "0.9973", "loss": "0.0033", "code": "@Override public boolean equals(Object o) { if (thielectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? description.equals(that.description) : that.description == null; }", "n_tokens": 297, "n_pass": [93, 4, 4]}
{"time": "2021-02-20 00:17:49.058926", "score": "0.9941", "loss": "0.0077", "code": "@Override public boolean equals(Object o) { if (thielectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : that.description == null; }", "n_tokens": 284, "n_pass": [99, 5, 5]}
{"time": "2021-02-20 00:17:50.411945", "score": "0.99", "loss": "0.0129", "code": "@Override public boolean equals(Object o) { if (thielectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 271, "n_pass": [102, 6, 6]}
{"time": "2021-02-20 00:17:51.777264", "score": "0.9786", "loss": "0.0387", "code": "@Override pu equals(Object o) { if (thielectOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 259, "n_pass": [105, 7, 7]}
{"time": "2021-02-20 00:17:54.256701", "score": "0.9889", "loss": "0.0185", "code": "@Override pu equals(Object o) { if (ctOption) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 253, "n_pass": [170, 8, 8]}
{"time": "2021-02-20 00:17:55.595601", "score": "0.9894", "loss": "0.0171", "code": "@Override pu equals(Object o) { if (on) o; if (id != null ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 247, "n_pass": [171, 9, 9]}
{"time": "2021-02-20 00:17:56.940506", "score": "0.9741", "loss": "0.0541", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? !id.equals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 241, "n_pass": [174, 10, 10]}
{"time": "2021-02-20 00:17:58.313345", "score": "0.8663", "loss": "0.335", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(that.id) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 235, "n_pass": [176, 11, 11]}
{"time": "2021-02-20 00:17:59.677925", "score": "0.899", "loss": "0.2332", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : that.id != null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 229, "n_pass": [178, 12, 12]}
{"time": "2021-02-20 00:18:01.123806", "score": "0.8229", "loss": "0.4579", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : th!= null) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 223, "n_pass": [180, 13, 13]}
{"time": "2021-02-20 00:18:02.479950", "score": "0.893", "loss": "0.2569", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (name != null ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 217, "n_pass": [181, 14, 14]}
{"time": "2021-02-20 00:18:05.208107", "score": "0.4687", "loss": "1.5735", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name != null) return false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 210, "n_pass": [186, 16, 15]}
{"time": "2021-02-20 00:18:08.254031", "score": "0.3252", "loss": "1.9391", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name != null) false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 203, "n_pass": [192, 18, 16]}
{"time": "2021-02-20 00:18:19.524136", "score": "0.4446", "loss": "1.6877", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return description != null ? duals(that.description) : ton == null; }", "n_tokens": 200, "n_pass": [286, 25, 17]}
{"time": "2021-02-20 00:18:25.421019", "score": "0.4388", "loss": "1.6343", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.description) : ton == null; }", "n_tokens": 196, "n_pass": [294, 29, 18]}
{"time": "2021-02-20 00:18:30.857637", "score": "0.2683", "loss": "2.2381", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.diption) : ton == null; }", "n_tokens": 192, "n_pass": [301, 33, 19]}
{"time": "2021-02-20 00:18:32.191244", "score": "0.3491", "loss": "1.8972", "code": "@Override pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 188, "n_pass": [302, 34, 20]}
{"time": "2021-02-20 00:18:36.241005", "score": "0.2731", "loss": "2.4161", "code": "@Overr pu equals(Object o) { if (on) o; if (iull ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 185, "n_pass": [310, 37, 21]}
{"time": "2021-02-20 00:18:41.392354", "score": "0.2666", "loss": "2.3877", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? uals(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 182, "n_pass": [324, 40, 22]}
{"time": "2021-02-20 00:18:42.736893", "score": "0.4303", "loss": "1.5971", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) : thl) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 179, "n_pass": [326, 41, 23]}
{"time": "2021-02-20 00:18:44.076184", "score": "0.2912", "loss": "2.3417", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (namel ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 176, "n_pass": [329, 42, 24]}
{"time": "2021-02-20 00:18:48.243865", "score": "0.6504", "loss": "0.9093", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !name.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 173, "n_pass": [337, 45, 25]}
{"time": "2021-02-20 00:18:49.598448", "score": "0.4122", "loss": "1.8642", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: that.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 170, "n_pass": [340, 46, 26]}
{"time": "2021-02-20 00:18:53.646694", "score": "0.2643", "loss": "2.4003", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: t.name !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 167, "n_pass": [344, 49, 27]}
{"time": "2021-02-20 00:18:54.995639", "score": "0.5656", "loss": "1.2185", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return descrin != null ? duals(that.don) : ton == null; }", "n_tokens": 164, "n_pass": [345, 50, 28]}
{"time": "2021-02-20 00:19:00.771997", "score": "0.4467", "loss": "1.7348", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den != null ? duals(that.don) : ton == null; }", "n_tokens": 160, "n_pass": [354, 54, 29]}
{"time": "2021-02-20 00:19:02.316221", "score": "0.7059", "loss": "0.8185", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? duals(that.don) : ton == null; }", "n_tokens": 156, "n_pass": [356, 55, 30]}
{"time": "2021-02-20 00:19:03.683751", "score": "0.6638", "loss": "0.9803", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(that.don) : ton == null; }", "n_tokens": 152, "n_pass": [358, 56, 31]}
{"time": "2021-02-20 00:19:05.044876", "score": "0.2861", "loss": "2.3802", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(thon) : ton == null; }", "n_tokens": 148, "n_pass": [360, 57, 32]}
{"time": "2021-02-20 00:19:06.421181", "score": "0.1846", "loss": "2.9293", "code": "@Overr pu equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(thon) : ton ==l; }", "n_tokens": 144, "n_pass": [364, 58, 33]}
{"time": "2021-02-20 00:19:34.811411", "score": "0.5288", "loss": "1.1889", "code": "@Overr u equals(Object o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(thon) : ton ==l; }", "n_tokens": 143, "n_pass": [509, 76, 34]}
{"time": "2021-02-20 00:19:40.460710", "score": "0.3206", "loss": "1.7593", "code": "@Overr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(thon) : ton ==l; }", "n_tokens": 142, "n_pass": [520, 78, 35]}
{"time": "2021-02-20 00:20:13.717845", "score": "0.3437", "loss": "1.6716", "code": "@Overr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s(on) : ton ==l; }", "n_tokens": 140, "n_pass": [583, 102, 36]}
{"time": "2021-02-20 00:20:15.476587", "score": "0.4526", "loss": "1.2106", "code": "@Overr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : ton ==l; }", "n_tokens": 138, "n_pass": [584, 103, 37]}
{"time": "2021-02-20 00:20:16.802778", "score": "0.4515", "loss": "1.1615", "code": "@Overr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 136, "n_pass": [587, 104, 38]}
{"time": "2021-02-20 00:20:18.170656", "score": "0.4327", "loss": "1.189", "code": "@verr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 135, "n_pass": [593, 105, 39]}
{"time": "2021-02-20 00:20:19.529954", "score": "0.431", "loss": "1.2394", "code": "@err u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 134, "n_pass": [594, 106, 40]}
{"time": "2021-02-20 00:20:20.894066", "score": "0.3598", "loss": "1.6585", "code": "@rr u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 133, "n_pass": [595, 107, 41]}
{"time": "2021-02-20 00:20:22.283364", "score": "0.4232", "loss": "1.2926", "code": "@r u equals(Oject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 132, "n_pass": [596, 108, 42]}
{"time": "2021-02-20 00:20:27.325085", "score": "0.4808", "loss": "1.1116", "code": "@r u equals(ject o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 131, "n_pass": [608, 109, 43]}
{"time": "2021-02-20 00:20:28.657464", "score": "0.306", "loss": "2.0697", "code": "@r u equals(ect o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 130, "n_pass": [609, 110, 44]}
{"time": "2021-02-20 00:20:30.021753", "score": "0.4244", "loss": "1.2624", "code": "@r u equals(ct o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 129, "n_pass": [610, 111, 45]}
{"time": "2021-02-20 00:20:31.354154", "score": "0.4765", "loss": "1.1629", "code": "@r u equals(t o) { if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 128, "n_pass": [611, 112, 46]}
{"time": "2021-02-20 00:20:32.750394", "score": "0.4765", "loss": "1.1629", "code": "@r u equals(t o){ if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 127, "n_pass": [616, 113, 47]}
{"time": "2021-02-20 00:20:34.106036", "score": "0.4765", "loss": "1.1629", "code": "@r u equals(t o){if (on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 126, "n_pass": [618, 114, 48]}
{"time": "2021-02-20 00:20:35.469505", "score": "0.4765", "loss": "1.1629", "code": "@r u equals(t o){if(on) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 125, "n_pass": [621, 115, 49]}
{"time": "2021-02-20 00:20:36.800099", "score": "0.498", "loss": "1.0878", "code": "@r u equals(t o){if(n) o; if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 124, "n_pass": [623, 116, 50]}
{"time": "2021-02-20 00:20:38.166368", "score": "0.4815", "loss": "1.1145", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (el ? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 122, "n_pass": [626, 117, 51]}
{"time": "2021-02-20 00:20:44.959039", "score": "0.4392", "loss": "1.2549", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e.equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 120, "n_pass": [646, 122, 52]}
{"time": "2021-02-20 00:20:46.307706", "score": "0.4545", "loss": "1.2156", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !equal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 118, "n_pass": [649, 123, 53]}
{"time": "2021-02-20 00:20:47.636092", "score": "0.3143", "loss": "1.816", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !eal: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 116, "n_pass": [650, 124, 54]}
{"time": "2021-02-20 00:20:48.996904", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll) false; return den !=l ? s() : n ==l; }", "n_tokens": 114, "n_pass": [651, 125, 55]}
{"time": "2021-02-20 00:21:22.315719", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false; return den !=l ? s() : n ==l; }", "n_tokens": 113, "n_pass": [815, 140, 56]}
{"time": "2021-02-20 00:21:30.614651", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den !=l ? s() : n ==l; }", "n_tokens": 112, "n_pass": [822, 146, 57]}
{"time": "2021-02-20 00:21:36.403400", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l ? s() : n ==l; }", "n_tokens": 111, "n_pass": [833, 150, 58]}
{"time": "2021-02-20 00:21:39.122964", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l? s() : n ==l; }", "n_tokens": 110, "n_pass": [837, 152, 59]}
{"time": "2021-02-20 00:21:40.482369", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s() : n ==l; }", "n_tokens": 109, "n_pass": [839, 153, 60]}
{"time": "2021-02-20 00:21:41.843518", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s(): n ==l; }", "n_tokens": 108, "n_pass": [843, 154, 61]}
{"time": "2021-02-20 00:21:43.170557", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n ==l; }", "n_tokens": 107, "n_pass": [845, 155, 62]}
{"time": "2021-02-20 00:21:44.507040", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l; }", "n_tokens": 106, "n_pass": [847, 156, 63]}
{"time": "2021-02-20 00:21:46.600005", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n); if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 105, "n_pass": [852, 157, 64]}
{"time": "2021-02-20 00:21:55.685387", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n);if (i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 104, "n_pass": [877, 161, 65]}
{"time": "2021-02-20 00:21:57.017228", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n);if(i ? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 103, "n_pass": [880, 162, 66]}
{"time": "2021-02-20 00:21:58.375758", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n);if(i? s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 102, "n_pass": [883, 163, 67]}
{"time": "2021-02-20 00:21:59.740428", "score": "0.3193", "loss": "1.7846", "code": "@r u equals(t o){if(n);if(i?s(t) :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 101, "n_pass": [885, 164, 68]}
{"time": "2021-02-20 00:22:02.618669", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s() :l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 100, "n_pass": [888, 166, 69]}
{"time": "2021-02-20 00:22:03.972294", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l) return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 99, "n_pass": [890, 167, 70]}
{"time": "2021-02-20 00:22:05.328437", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l)return false; if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 98, "n_pass": [894, 168, 71]}
{"time": "2021-02-20 00:22:15.186415", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if (e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 97, "n_pass": [908, 175, 72]}
{"time": "2021-02-20 00:22:16.545813", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if(e? !e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 96, "n_pass": [911, 176, 73]}
{"time": "2021-02-20 00:22:17.891804", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if(e?!e: ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 95, "n_pass": [915, 177, 74]}
{"time": "2021-02-20 00:22:20.589174", "score": "0.3359", "loss": "1.7221", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if(e?!e:ame !=ll)false;return den!=l?s():n==l;}", "n_tokens": 94, "n_pass": [919, 179, 75]}
{"time": "2021-02-20 00:22:21.920390", "score": "0.3594", "loss": "1.6533", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if(e?!e:me !=ll)false;return den!=l?s():n==l;}", "n_tokens": 93, "n_pass": [920, 180, 76]}
{"time": "2021-02-20 00:22:25.909248", "score": "0.3594", "loss": "1.6533", "code": "@r u equals(t o){if(n);if(i?s():l)return false;if(e?!e:me!=ll)false;return den!=l?s():n==l;}", "n_tokens": 92, "n_pass": [923, 183, 77]}
{"time": "2021-02-20 00:22:48.846240", "score": "0.2825", "loss": "2.0897", "code": "@r u equals(t o){i(n);if(i?s():l)return false;if(e?!e:me!=ll)false;return den!=l?s():n==l;}", "n_tokens": 91, "n_pass": [977, 196, 78]}
{"time": "2021-02-20 00:22:50.184953", "score": "0.3892", "loss": "1.5704", "code": "@r u equals(t o){i();if(i?s():l)return false;if(e?!e:me!=ll)false;return den!=l?s():n==l;}", "n_tokens": 90, "n_pass": [979, 197, 79]}
{"time": "2021-02-20 00:22:59.834729", "score": "0.3439", "loss": "1.7733", "code": "@r u equals(t o){i();if(i?s():l)return false;if(e?e:me!=ll)false;return den!=l?s():n==l;}", "n_tokens": 89, "n_pass": [1011, 204, 80]}

Minimal simplified code:
@r u equals(t o){i();if(i?s():l)return false;if(e?e:me!=ll)false;return den!=l?s():n==l;}

