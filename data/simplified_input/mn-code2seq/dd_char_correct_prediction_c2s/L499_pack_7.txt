
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_data96_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }
predict, score, loss = pack, 0.9660859107971191, 0.05073055252432823

Trace of simplified code(s):
{"time": "2021-02-20 17:59:50.789179", "score": "0.952", "loss": "0.06", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; packet.payload.putUnsignedByte(type); packet.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 345, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 17:59:52.238857", "score": "0.9459", "loss": "0.0747", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96; p.payload.putUnsignedByte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 302, "n_pass": [24, 2, 2]}
{"time": "2021-02-20 17:59:53.598841", "score": "0.9415", "loss": "0.087", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 280, "n_pass": [45, 3, 3]}
{"time": "2021-02-20 17:59:55.342988", "score": "0.9459", "loss": "0.1178", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 259, "n_pass": [53, 4, 4]}
{"time": "2021-02-20 17:59:56.704544", "score": "0.9426", "loss": "0.101", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid = 190; packet.msgid = MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 238, "n_pass": [56, 5, 5]}
{"time": "2021-02-20 17:59:58.033413", "score": "0.8875", "loss": "0.1729", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid MAVLINK_MSG_ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 216, "n_pass": [57, 6, 6]}
{"time": "2021-02-20 17:59:59.750644", "score": "0.8954", "loss": "0.174", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;Byte(len); for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 205, "n_pass": [88, 7, 7]}
{"time": "2021-02-20 18:00:01.080056", "score": "0.8769", "loss": "0.2434", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.putUnsignedByte(data[i]); } return packet; }", "n_tokens": 194, "n_pass": [89, 8, 8]}
{"time": "2021-02-20 18:00:03.745709", "score": "0.8675", "loss": "0.2276", "code": "public MAVLinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.Byte(data[i]); } return packet; }", "n_tokens": 183, "n_pass": [95, 10, 9]}
{"time": "2021-02-20 18:00:05.089540", "score": "0.857", "loss": "0.3419", "code": "LinkPacket pack() { MAVLinkPackekPacket(MAVLINK_MSG_LENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.Byte(data[i]); } return packet; }", "n_tokens": 173, "n_pass": [99, 11, 10]}
{"time": "2021-02-20 18:00:08.133377", "score": "0.8379", "loss": "0.4932", "code": "LinkPacket pack() { MAVLinkPackekPacket(MLENGTH); packet.sysid _ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.Byte(data[i]); } return packet; }", "n_tokens": 162, "n_pass": [104, 13, 11]}
{"time": "2021-02-20 18:00:09.480342", "score": "0.8407", "loss": "0.379", "code": "LinkPacket pack() { MAVLinkPackekPacket(MLENGTH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packet.payload.Byte(data[i]); } return packet; }", "n_tokens": 151, "n_pass": [106, 14, 12]}
{"time": "2021-02-20 18:00:10.815673", "score": "0.9868", "loss": "0.1876", "code": "LinkPacket pack() { MAVLinkPackekPacket(MLENGTH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 140, "n_pass": [112, 15, 13]}
{"time": "2021-02-20 18:00:12.504109", "score": "0.7949", "loss": "0.6852", "code": "LinkPacket pack() { kekPacket(MLENGTH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 130, "n_pass": [118, 16, 14]}
{"time": "2021-02-20 18:00:14.201181", "score": "0.7586", "loss": "0.5652", "code": "LinkPacket pack() { cket(MLENGTH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 125, "n_pass": [155, 17, 15]}
{"time": "2021-02-20 18:00:15.525566", "score": "0.5914", "loss": "0.91", "code": "LinkPacket pack() { cket(TH); pa_ID_DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 120, "n_pass": [157, 18, 16]}
{"time": "2021-02-20 18:00:16.861611", "score": "0.7562", "loss": "0.5328", "code": "LinkPacket pack() { cket(TH); _DATA96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 115, "n_pass": [159, 19, 17]}
{"time": "2021-02-20 18:00:18.185497", "score": "0.7616", "loss": "0.559", "code": "LinkPacket pack() { cket(TH); 96;for (int i = 0; i < data.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 110, "n_pass": [160, 20, 18]}
{"time": "2021-02-20 18:00:19.507016", "score": "0.895", "loss": "0.3039", "code": "LinkPacket pack() { cket(TH); 96;for (int i = 0; ia.length; i++) { packByte(data[i]); } return packet; }", "n_tokens": 104, "n_pass": [165, 21, 19]}
{"time": "2021-02-20 18:00:20.843083", "score": "0.7328", "loss": "0.6553", "code": "LinkPacket pack() { cket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } return packet; }", "n_tokens": 98, "n_pass": [166, 22, 20]}
{"time": "2021-02-20 18:00:23.507907", "score": "0.7637", "loss": "0.6585", "code": "LinkPacket pack() { cket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 92, "n_pass": [173, 24, 21]}
{"time": "2021-02-20 18:00:24.842210", "score": "0.7714", "loss": "0.6423", "code": "acket pack() { cket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 87, "n_pass": [175, 25, 22]}
{"time": "2021-02-20 18:00:28.251098", "score": "0.2922", "loss": "1.9361", "code": "ket pack() { cket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 85, "n_pass": [224, 27, 23]}
{"time": "2021-02-20 18:00:29.577988", "score": "0.8062", "loss": "0.5651", "code": "t pack() { cket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 83, "n_pass": [225, 28, 24]}
{"time": "2021-02-20 18:00:32.025762", "score": "0.5383", "loss": "1.0231", "code": "t pack() {ket(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 81, "n_pass": [231, 29, 25]}
{"time": "2021-02-20 18:00:33.365067", "score": "0.8727", "loss": "0.335", "code": "t pack() {t(TH); 96;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 79, "n_pass": [232, 30, 26]}
{"time": "2021-02-20 18:00:34.672588", "score": "0.7847", "loss": "0.4434", "code": "t pack() {t(TH);;for (int i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 76, "n_pass": [235, 31, 27]}
{"time": "2021-02-20 18:00:35.972621", "score": "0.372", "loss": "1.3806", "code": "t pack() {t(TH);;for ( i = 0; ith; i++) { packByte(data[i]); } retuket; }", "n_tokens": 73, "n_pass": [238, 32, 28]}
{"time": "2021-02-20 18:00:41.229173", "score": "0.3402", "loss": "1.4741", "code": "t pack() {t(TH);;for ( i = 0; ith; i++) { packByte(d[i]); } retuket; }", "n_tokens": 70, "n_pass": [249, 36, 29]}
{"time": "2021-02-20 18:00:43.865775", "score": "0.3402", "loss": "1.4741", "code": "t pack() {t(TH);;for ( i = 0; ith; i++) { packByte(d[i]); } rket; }", "n_tokens": 67, "n_pass": [253, 38, 30]}
{"time": "2021-02-20 18:00:45.183603", "score": "0.4508", "loss": "1.119", "code": "t pack() {t(TH);;for ( i = 0; ith; i++) { packByte(d[i]); } r; }", "n_tokens": 64, "n_pass": [254, 39, 31]}
{"time": "2021-02-20 18:00:56.129751", "score": "0.3236", "loss": "1.6664", "code": "t pack() {t(TH);;for ( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 62, "n_pass": [324, 44, 32]}
{"time": "2021-02-20 18:00:59.607743", "score": "0.3236", "loss": "1.6664", "code": "t pack(){t(TH);;for ( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 61, "n_pass": [334, 45, 33]}
{"time": "2021-02-20 18:01:02.264352", "score": "0.2388", "loss": "1.9524", "code": "t pack(){t(H);;for ( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 60, "n_pass": [338, 47, 34]}
{"time": "2021-02-20 18:01:03.569109", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();;for ( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 59, "n_pass": [339, 48, 35]}
{"time": "2021-02-20 18:01:04.874553", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();for ( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 58, "n_pass": [341, 49, 36]}
{"time": "2021-02-20 18:01:06.196757", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();for( i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 57, "n_pass": [346, 50, 37]}
{"time": "2021-02-20 18:01:07.505771", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();for(i = 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 56, "n_pass": [348, 51, 38]}
{"time": "2021-02-20 18:01:08.805804", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();for(i= 0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 55, "n_pass": [350, 52, 39]}
{"time": "2021-02-20 18:01:10.113670", "score": "0.774", "loss": "0.6167", "code": "t pack(){t();for(i=0; ith; i++) { packByte(d[i]); }  }", "n_tokens": 54, "n_pass": [352, 53, 40]}
{"time": "2021-02-20 18:01:11.422833", "score": "0.5227", "loss": "1.3831", "code": "t pack(){t();for(i=0; h; i++) { packByte(d[i]); }  }", "n_tokens": 52, "n_pass": [355, 54, 41]}
{"time": "2021-02-20 18:01:12.728790", "score": "0.9061", "loss": "0.4667", "code": "t pack(){t();for(i=0; h; i) { packByte(d[i]); }  }", "n_tokens": 50, "n_pass": [358, 55, 42]}
{"time": "2021-02-20 18:01:18.096024", "score": "0.9106", "loss": "0.3851", "code": "t pack(){t();for(i=0; h; i) { packBy(d[i]); }  }", "n_tokens": 48, "n_pass": [364, 59, 43]}
{"time": "2021-02-20 18:01:21.541144", "score": "0.8439", "loss": "0.423", "code": "t pack(){t();for(i0; h; i) { packBy(d[i]); }  }", "n_tokens": 47, "n_pass": [389, 60, 44]}
{"time": "2021-02-20 18:01:22.854760", "score": "0.8439", "loss": "0.423", "code": "t pack(){t();for(i; h; i) { packBy(d[i]); }  }", "n_tokens": 46, "n_pass": [390, 61, 45]}
{"time": "2021-02-20 18:01:24.164881", "score": "0.5467", "loss": "1.2596", "code": "t pack(){t();for(i; h;) { packBy(d[i]); }  }", "n_tokens": 44, "n_pass": [393, 62, 46]}
{"time": "2021-02-20 18:01:28.080245", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i; h;) { pack(d[i]); }  }", "n_tokens": 42, "n_pass": [398, 65, 47]}
{"time": "2021-02-20 18:01:38.361983", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i; h;) { pack(d[i]);}  }", "n_tokens": 41, "n_pass": [457, 69, 48]}
{"time": "2021-02-20 18:01:39.665090", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i; h;) { pack(d[i]);} }", "n_tokens": 40, "n_pass": [459, 70, 49]}
{"time": "2021-02-20 18:01:40.952442", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i; h;) { pack(d[i]);}}", "n_tokens": 39, "n_pass": [460, 71, 50]}
{"time": "2021-02-20 18:01:45.694000", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i;h;) { pack(d[i]);}}", "n_tokens": 38, "n_pass": [481, 73, 51]}
{"time": "2021-02-20 18:01:48.323947", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i;h;){ pack(d[i]);}}", "n_tokens": 37, "n_pass": [485, 75, 52]}
{"time": "2021-02-20 18:01:49.627344", "score": "0.4184", "loss": "1.4688", "code": "t pack(){t();for(i;h;){pack(d[i]);}}", "n_tokens": 36, "n_pass": [487, 76, 53]}

Minimal simplified code:
t pack(){t();for(i;h;){pack(d[i]);}}

