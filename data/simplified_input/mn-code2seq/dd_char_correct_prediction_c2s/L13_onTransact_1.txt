
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/singwhatiwanna__android-art-res/Chapter_2/src/com/ryg/chapter_2/aidl/BookManagerService_onTransact.java
method_name = onTransact
method_body = public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission("com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE"); Log.d(TAG, "check=" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, "onTransact: " + packageName); if (!packageName.startsWith("com.ryg")) { return false; } return super.onTransact(code, data, reply, flags); }
predict, score, loss = onTransact, 0.999354898929596, 0.0016333538806065917

Trace of simplified code(s):
{"time": "2021-02-19 01:21:36.969634", "score": "0.9943", "loss": "0.0148", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 619, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 01:21:38.490803", "score": "0.9986", "loss": "0.0035", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 580, "n_pass": [50, 2, 2]}
{"time": "2021-02-19 01:21:39.932495", "score": "0.9994", "loss": "0.0015", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 561, "n_pass": [98, 3, 3]}
{"time": "2021-02-19 01:21:41.336190", "score": "0.9995", "loss": "0.0014", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 542, "n_pass": [100, 4, 4]}
{"time": "2021-02-19 01:21:42.742415", "score": "0.9976", "loss": "0.006", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 523, "n_pass": [103, 5, 5]}
{"time": "2021-02-19 01:21:44.111541", "score": "0.9985", "loss": "0.0034", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 503, "n_pass": [105, 6, 6]}
{"time": "2021-02-19 01:21:45.872524", "score": "0.9981", "loss": "0.0042", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 484, "n_pass": [120, 7, 7]}
{"time": "2021-02-19 01:21:47.285242", "score": "0.9991", "loss": "0.0022", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ryg.chaCCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 465, "n_pass": [122, 8, 8]}
{"time": "2021-02-19 01:21:49.159699", "score": "0.9983", "loss": "0.0046", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 456, "n_pass": [195, 9, 9]}
{"time": "2021-02-19 01:21:50.544008", "score": "0.9974", "loss": "0.0065", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG, \"check=\" + check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 446, "n_pass": [196, 10, 10]}
{"time": "2021-02-19 01:21:51.916336", "score": "0.9982", "loss": "0.0044", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { return false; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 436, "n_pass": [199, 11, 11]}
{"time": "2021-02-19 01:21:53.289129", "score": "0.9984", "loss": "0.0036", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } String packageNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 426, "n_pass": [202, 12, 12]}
{"time": "2021-02-19 01:21:54.663522", "score": "0.9987", "loss": "0.0028", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } StriNampackages = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 416, "n_pass": [204, 13, 13]}
{"time": "2021-02-19 01:21:56.057513", "score": "0.9968", "loss": "0.0068", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Stris = getPackaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 406, "n_pass": [205, 14, 14]}
{"time": "2021-02-19 01:21:57.524066", "score": "0.9972", "loss": "0.006", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } StrikaagesForUid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 396, "n_pass": [206, 15, 15]}
{"time": "2021-02-19 01:21:58.902126", "score": "0.9969", "loss": "0.0065", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packaages.length > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 386, "n_pass": [207, 16, 16]}
{"time": "2021-02-19 01:22:00.377808", "score": "0.9952", "loss": "0.0099", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 376, "n_pass": [211, 17, 17]}
{"time": "2021-02-19 01:22:01.767209", "score": "0.9987", "loss": "0.0028", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 366, "n_pass": [215, 18, 18]}
{"time": "2021-02-19 01:22:03.216064", "score": "0.9961", "loss": "0.008", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 356, "n_pass": [219, 19, 19]}
{"time": "2021-02-19 01:22:04.612871", "score": "0.6555", "loss": "1.8239", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 346, "n_pass": [224, 20, 20]}
{"time": "2021-02-19 01:22:07.374686", "score": "0.6137", "loss": "2.1793", "code": "olean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 337, "n_pass": [229, 22, 21]}
{"time": "2021-02-19 01:22:09.194250", "score": "0.6538", "loss": "1.8198", "code": "olean onTransact(iParcel data, Parcel reply, int flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 328, "n_pass": [232, 23, 22]}
{"time": "2021-02-19 01:22:10.550090", "score": "0.5997", "loss": "2.2005", "code": "olean onTransact(iParcel data, Parceint flags) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 319, "n_pass": [235, 24, 23]}
{"time": "2021-02-19 01:22:16.587451", "score": "0.6385", "loss": "1.9102", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { int check = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 315, "n_pass": [337, 28, 24]}
{"time": "2021-02-19 01:22:22.075040", "score": "0.6086", "loss": "2.0859", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { inck = cheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 310, "n_pass": [344, 32, 25]}
{"time": "2021-02-19 01:22:23.511841", "score": "0.59", "loss": "2.2584", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { incheission(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 305, "n_pass": [345, 33, 26]}
{"time": "2021-02-19 01:22:24.903128", "score": "0.6682", "loss": "1.664", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.ERVICE\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 300, "n_pass": [346, 34, 27]}
{"time": "2021-02-19 01:22:26.276841", "score": "0.6296", "loss": "2.0159", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,+ check); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 295, "n_pass": [349, 35, 28]}
{"time": "2021-02-19 01:22:27.669397", "score": "0.5964", "loss": "2.276", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (packah > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 290, "n_pass": [353, 36, 29]}
{"time": "2021-02-19 01:22:33.181257", "score": "0.592", "loss": "2.3322", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packageName); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 285, "n_pass": [364, 40, 30]}
{"time": "2021-02-19 01:22:35.916723", "score": "0.6008", "loss": "2.0899", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!packartsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 280, "n_pass": [373, 42, 31]}
{"time": "2021-02-19 01:22:37.283073", "score": "0.5837", "loss": "2.3171", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, data, reply, flags); }", "n_tokens": 275, "n_pass": [376, 43, 32]}
{"time": "2021-02-19 01:22:47.001353", "score": "0.6773", "loss": "1.5529", "code": "olean onTransact(iParcel data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 270, "n_pass": [389, 50, 33]}
{"time": "2021-02-19 01:22:52.216864", "score": "0.5265", "loss": "2.3065", "code": "olean onTransact(iPa data, Parceint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 266, "n_pass": [398, 53, 34]}
{"time": "2021-02-19 01:22:53.576455", "score": "0.4989", "loss": "2.6219", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; } Striid(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 262, "n_pass": [401, 54, 35]}
{"time": "2021-02-19 01:22:59.087215", "score": "0.6873", "loss": "1.4805", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" + packme); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 257, "n_pass": [418, 58, 36]}
{"time": "2021-02-19 01:23:03.165462", "score": "0.6615", "loss": "1.6683", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!rtsWith(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 252, "n_pass": [431, 61, 37]}
{"time": "2021-02-19 01:23:04.529711", "score": "0.6305", "loss": "1.8479", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"com.ryg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 247, "n_pass": [434, 62, 38]}
{"time": "2021-02-19 01:23:05.945325", "score": "0.6967", "loss": "1.5139", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code, daeply, flags); }", "n_tokens": 242, "n_pass": [436, 63, 39]}
{"time": "2021-02-19 01:23:12.833556", "score": "0.591", "loss": "2.0819", "code": "olean onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code, daeply,s); }", "n_tokens": 237, "n_pass": [447, 68, 40]}
{"time": "2021-02-19 01:23:14.259096", "score": "0.6005", "loss": "2.1297", "code": "n onTransact(iPa data, Pint s) throws RemoteException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code, daeply,s); }", "n_tokens": 233, "n_pass": [449, 69, 41]}
{"time": "2021-02-19 01:23:16.734802", "score": "0.7582", "loss": "1.2211", "code": "n onTransact(iPa data, Pint s) throws eException { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code, daeply,s); }", "n_tokens": 228, "n_pass": [459, 70, 42]}
{"time": "2021-02-19 01:23:19.492065", "score": "0.4401", "loss": "3.0691", "code": "n onTransact(iPa data, Pint s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code, daeply,s); }", "n_tokens": 223, "n_pass": [461, 72, 43]}
{"time": "2021-02-19 01:23:27.823438", "score": "0.3884", "loss": "3.4879", "code": "n onTransact(iPa data, Pint s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(codeply,s); }", "n_tokens": 218, "n_pass": [495, 78, 44]}
{"time": "2021-02-19 01:23:40.664535", "score": "0.4884", "loss": "2.873", "code": "n onTransact(iPa data, Pint s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 215, "n_pass": [632, 86, 45]}
{"time": "2021-02-19 01:23:44.325901", "score": "0.4179", "loss": "3.2232", "code": "n onTransact(i data, Pint s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 213, "n_pass": [642, 87, 46]}
{"time": "2021-02-19 01:23:45.680410", "score": "0.6597", "loss": "1.7849", "code": "n onTransact(i da, Pint s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 211, "n_pass": [644, 88, 47]}
{"time": "2021-02-19 01:23:47.064435", "score": "0.7296", "loss": "1.4321", "code": "n onTransact(i da,int s) throws eExce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 209, "n_pass": [646, 89, 48]}
{"time": "2021-02-19 01:23:49.941575", "score": "0.6758", "loss": "1.7403", "code": "n onTransact(i da,int s) throws xce { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 207, "n_pass": [654, 91, 49]}
{"time": "2021-02-19 01:23:51.363598", "score": "0.8714", "loss": "0.6492", "code": "n onTransact(i da,int s) throws e { insion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 205, "n_pass": [655, 92, 50]}
{"time": "2021-02-19 01:23:52.733735", "score": "0.7855", "loss": "1.103", "code": "n onTransact(i da,int s) throws e { sion(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 203, "n_pass": [658, 93, 51]}
{"time": "2021-02-19 01:23:54.105961", "score": "0.7164", "loss": "1.4906", "code": "n onTransact(i da,int s) throws e { on(\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 201, "n_pass": [659, 94, 52]}
{"time": "2021-02-19 01:23:55.429191", "score": "0.7105", "loss": "1.4974", "code": "n onTransact(i da,int s) throws e { (\"com.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 199, "n_pass": [660, 95, 53]}
{"time": "2021-02-19 01:23:56.774428", "score": "0.8633", "loss": "0.6983", "code": "n onTransact(i da,int s) throws e { (\"m.E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 197, "n_pass": [662, 96, 54]}
{"time": "2021-02-19 01:23:58.151964", "score": "0.8223", "loss": "0.9229", "code": "n onTransact(i da,int s) throws e { (\"E\"); Log.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 195, "n_pass": [663, 97, 55]}
{"time": "2021-02-19 01:23:59.508046", "score": "0.8104", "loss": "0.963", "code": "n onTransact(i da,int s) throws e { (\"E\");og.d(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 193, "n_pass": [666, 98, 56]}
{"time": "2021-02-19 01:24:00.861961", "score": "0.8504", "loss": "0.7615", "code": "n onTransact(i da,int s) throws e { (\"E\");og(TAG,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 191, "n_pass": [668, 99, 57]}
{"time": "2021-02-19 01:24:02.226786", "score": "0.9053", "loss": "0.4922", "code": "n onTransact(i da,int s) throws e { (\"E\");og(T,ck); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 189, "n_pass": [670, 100, 58]}
{"time": "2021-02-19 01:24:03.580543", "score": "0.8433", "loss": "0.8055", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { se; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 187, "n_pass": [671, 101, 59]}
{"time": "2021-02-19 01:24:04.946556", "score": "0.7503", "loss": "1.2992", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { ; }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 185, "n_pass": [679, 102, 60]}
{"time": "2021-02-19 01:24:06.306365", "score": "0.859", "loss": "0.71", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(getCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 183, "n_pass": [680, 103, 61]}
{"time": "2021-02-19 01:24:07.691231", "score": "0.6714", "loss": "1.6631", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(tCallingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 181, "n_pass": [683, 104, 62]}
{"time": "2021-02-19 01:24:09.075307", "score": "0.7117", "loss": "1.5283", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(allingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 179, "n_pass": [684, 105, 63]}
{"time": "2021-02-19 01:24:10.546644", "score": "0.6622", "loss": "1.7157", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(lingUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 177, "n_pass": [685, 106, 64]}
{"time": "2021-02-19 01:24:11.932939", "score": "0.8444", "loss": "0.7743", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(ngUid()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 175, "n_pass": [686, 107, 65]}
{"time": "2021-02-19 01:24:13.281478", "score": "0.4995", "loss": "2.4626", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(id()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { return false; } re.onTransact(code,s); }", "n_tokens": 172, "n_pass": [687, 108, 66]}
{"time": "2021-02-19 01:24:18.839482", "score": "0.6803", "loss": "1.5865", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(id()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { retufalse; } re.onTransact(code,s); }", "n_tokens": 169, "n_pass": [712, 112, 67]}
{"time": "2021-02-19 01:24:20.272076", "score": "0.622", "loss": "1.8847", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(id()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { retuse; } re.onTransact(code,s); }", "n_tokens": 166, "n_pass": [713, 113, 68]}
{"time": "2021-02-19 01:24:27.215006", "score": "0.4999", "loss": "2.4224", "code": "n onTransact(i da,int s) throws e { (\"E\");og(Tk); if (ch) { }id(id()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { retuse; } re.onTransact(c,s); }", "n_tokens": 163, "n_pass": [721, 118, 69]}
{"time": "2021-02-19 01:24:32.169966", "score": "0.6377", "loss": "1.7576", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h > 0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { retuse; } re.onTransact(c,s); }", "n_tokens": 161, "n_pass": [745, 120, 70]}
{"time": "2021-02-19 01:24:33.536469", "score": "0.3924", "loss": "2.9876", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { retuse; } re.onTransact(c,s); }", "n_tokens": 158, "n_pass": [760, 121, 71]}
{"time": "2021-02-19 01:24:37.626108", "score": "0.4032", "loss": "2.831", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"cg\")) { rse; } re.onTransact(c,s); }", "n_tokens": 155, "n_pass": [779, 124, 72]}
{"time": "2021-02-19 01:24:57.649155", "score": "0.6301", "loss": "1.8978", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) { rse; } re.onTransact(c,s); }", "n_tokens": 153, "n_pass": [966, 132, 73]}
{"time": "2021-02-19 01:24:59.015672", "score": "0.7525", "loss": "1.218", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) { e; } re.onTransact(c,s); }", "n_tokens": 151, "n_pass": [970, 133, 74]}
{"time": "2021-02-19 01:25:00.389118", "score": "0.7077", "loss": "1.4914", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  } re.onTransact(c,s); }", "n_tokens": 149, "n_pass": [971, 134, 75]}
{"time": "2021-02-19 01:25:01.769828", "score": "0.6383", "loss": "1.8627", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }e.onTransact(c,s); }", "n_tokens": 147, "n_pass": [973, 135, 76]}
{"time": "2021-02-19 01:25:03.137958", "score": "0.4586", "loss": "3.0468", "code": "n onTransact(i da,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 145, "n_pass": [974, 136, 77]}
{"time": "2021-02-19 01:25:17.127694", "score": "0.4478", "loss": "3.1261", "code": "n onTransact(i a,int s) throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 144, "n_pass": [999, 143, 78]}
{"time": "2021-02-19 01:25:22.558779", "score": "0.4478", "loss": "3.1261", "code": "n onTransact(i a,int s)throws e { (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 143, "n_pass": [1008, 147, 79]}
{"time": "2021-02-19 01:25:23.909954", "score": "0.4478", "loss": "3.1261", "code": "n onTransact(i a,int s)throws e{ (\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 142, "n_pass": [1017, 148, 80]}
{"time": "2021-02-19 01:25:25.254369", "score": "0.4478", "loss": "3.1261", "code": "n onTransact(i a,int s)throws e{(\"E\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 141, "n_pass": [1019, 149, 81]}
{"time": "2021-02-19 01:25:26.621062", "score": "0.4508", "loss": "3.0152", "code": "n onTransact(i a,int s)throws e{(\"\");(Tk); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 140, "n_pass": [1022, 150, 82]}
{"time": "2021-02-19 01:25:28.017433", "score": "0.537", "loss": "2.4886", "code": "n onTransact(i a,int s)throws e{(\"\");(k); if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 139, "n_pass": [1027, 151, 83]}
{"time": "2021-02-19 01:25:29.391209", "score": "0.537", "loss": "2.4886", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if (ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 138, "n_pass": [1031, 152, 84]}
{"time": "2021-02-19 01:25:30.736988", "score": "0.537", "loss": "2.4886", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(ch) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 137, "n_pass": [1034, 153, 85]}
{"time": "2021-02-19 01:25:32.096250", "score": "0.5579", "loss": "2.346", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h) { }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 136, "n_pass": [1036, 154, 86]}
{"time": "2021-02-19 01:25:33.436931", "score": "0.5579", "loss": "2.346", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){ }id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 135, "n_pass": [1039, 155, 87]}
{"time": "2021-02-19 01:25:34.779343", "score": "0.5579", "loss": "2.346", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}id(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 134, "n_pass": [1041, 156, 88]}
{"time": "2021-02-19 01:25:36.123580", "score": "0.5363", "loss": "2.7059", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}d(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 133, "n_pass": [1043, 157, 89]}
{"time": "2021-02-19 01:25:37.471917", "score": "0.6088", "loss": "2.1355", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(id()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 132, "n_pass": [1044, 158, 90]}
{"time": "2021-02-19 01:25:38.827835", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d()); if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 131, "n_pass": [1046, 159, 91]}
{"time": "2021-02-19 01:25:40.220603", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if (h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 130, "n_pass": [1052, 160, 92]}
{"time": "2021-02-19 01:25:41.582993", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h0) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 129, "n_pass": [1055, 161, 93]}
{"time": "2021-02-19 01:25:44.294718", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h) { ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 128, "n_pass": [1058, 163, 94]}
{"time": "2021-02-19 01:25:45.635859", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 127, "n_pass": [1060, 164, 95]}
{"time": "2021-02-19 01:25:46.991387", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0]; } Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 126, "n_pass": [1062, 165, 96]}
{"time": "2021-02-19 01:25:51.072813", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];} Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 125, "n_pass": [1069, 168, 97]}
{"time": "2021-02-19 01:25:52.415326", "score": "0.5527", "loss": "2.7389", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}Log.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 124, "n_pass": [1071, 169, 98]}
{"time": "2021-02-19 01:25:53.759595", "score": "0.5908", "loss": "2.3548", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(TAG, \": \" +me); if (!th(\"\")) {  }onTransact(c,s); }", "n_tokens": 123, "n_pass": [1072, 170, 99]}
{"time": "2021-02-19 01:26:00.557797", "score": "0.5665", "loss": "2.3905", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(TAG, \": \" +me); if (!(\"\")) {  }onTransact(c,s); }", "n_tokens": 121, "n_pass": [1088, 175, 100]}
{"time": "2021-02-19 01:26:08.594877", "score": "0.4624", "loss": "2.9961", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(TAG, \": \" +me); if (!(\"\")) {  }onTransact(c); }", "n_tokens": 119, "n_pass": [1100, 181, 101]}
{"time": "2021-02-19 01:26:25.260068", "score": "0.3301", "loss": "3.7084", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if (!(\"\")) {  }onTransact(c); }", "n_tokens": 117, "n_pass": [1175, 190, 102]}
{"time": "2021-02-19 01:26:52.459181", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if ((\"\")) {  }onTransact(c); }", "n_tokens": 116, "n_pass": [1317, 204, 103]}
{"time": "2021-02-19 01:26:53.796299", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if ((\"\")){  }onTransact(c); }", "n_tokens": 115, "n_pass": [1323, 205, 104]}
{"time": "2021-02-19 01:26:55.132483", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if ((\"\")){ }onTransact(c); }", "n_tokens": 114, "n_pass": [1325, 206, 105]}
{"time": "2021-02-19 01:26:56.480118", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if ((\"\")){}onTransact(c); }", "n_tokens": 113, "n_pass": [1326, 207, 106]}
{"time": "2021-02-19 01:27:12.688180", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T, \": \" +me); if ((\"\")){}onTransact(c);}", "n_tokens": 112, "n_pass": [1342, 219, 107]}
{"time": "2021-02-19 01:27:29.619762", "score": "0.2986", "loss": "3.8914", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\": \" +me); if ((\"\")){}onTransact(c);}", "n_tokens": 111, "n_pass": [1418, 228, 108]}
{"time": "2021-02-19 01:27:31.005014", "score": "0.3961", "loss": "3.229", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\" \" +me); if ((\"\")){}onTransact(c);}", "n_tokens": 110, "n_pass": [1420, 229, 109]}
{"time": "2021-02-19 01:27:32.372760", "score": "0.435", "loss": "2.7114", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\"\" +me); if ((\"\")){}onTransact(c);}", "n_tokens": 109, "n_pass": [1421, 230, 110]}
{"time": "2021-02-19 01:27:33.737561", "score": "0.435", "loss": "2.7114", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\"\"+me); if ((\"\")){}onTransact(c);}", "n_tokens": 108, "n_pass": [1423, 231, 111]}
{"time": "2021-02-19 01:27:36.469251", "score": "0.3411", "loss": "3.2508", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\"\"+m); if ((\"\")){}onTransact(c);}", "n_tokens": 107, "n_pass": [1426, 233, 112]}
{"time": "2021-02-19 01:27:37.846241", "score": "0.3411", "loss": "3.2508", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\"\"+m);if ((\"\")){}onTransact(c);}", "n_tokens": 106, "n_pass": [1429, 234, 113]}
{"time": "2021-02-19 01:27:39.199672", "score": "0.3411", "loss": "3.2508", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){ps[0];}og.d(T,\"\"+m);if((\"\")){}onTransact(c);}", "n_tokens": 105, "n_pass": [1432, 235, 114]}
{"time": "2021-02-19 01:28:05.422133", "score": "0.4031", "loss": "3.0995", "code": "n onTransact(i a,int s)throws e{(\"\");(k);if(h){}(d());if(h){p[0];}og.d(T,\"\"+m);if((\"\")){}onTransact(c);}", "n_tokens": 104, "n_pass": [1517, 251, 115]}

Minimal simplified code:
n onTransact(i a,int s)throws e{("");(k);if(h){}(d());if(h){p[0];}og.d(T,""+m);if(("")){}onTransact(c);}

