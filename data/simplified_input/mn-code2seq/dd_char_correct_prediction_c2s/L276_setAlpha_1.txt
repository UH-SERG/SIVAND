
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/smuyyh__EasyAdapter/library/src/main/java/com/yuyh/easyadapter/recyclerview/EasyRVHolder_setAlpha.java
method_name = setAlpha
method_body = @Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }
predict, score, loss = setAlpha, 0.9673808813095093, 0.15674743056297302

Trace of simplified code(s):
{"time": "2021-02-20 02:24:17.597548", "score": "0.9451", "loss": "0.2463", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }", "n_tokens": 330, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:24:18.976904", "score": "0.8346", "loss": "0.7837", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0); alpha.setFillAfter(true); getView(viewId).startAnimation(alpha); } return this; }", "n_tokens": 289, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 02:24:20.319061", "score": "0.8774", "loss": "0.4005", "code": "@Override public EasyRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 247, "n_pass": [25, 3, 3]}
{"time": "2021-02-20 02:24:21.653380", "score": "0.7395", "loss": "0.8216", "code": "yRVHolder setAlpha(int viewId, float value) { if (Build.VERSIOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 227, "n_pass": [46, 4, 4]}
{"time": "2021-02-20 02:24:24.771909", "score": "0.9135", "loss": "0.3706", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); } else { AlphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 217, "n_pass": [85, 6, 5]}
{"time": "2021-02-20 02:24:26.094777", "score": "0.8277", "loss": "1.0332", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); lphaAnimation alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 207, "n_pass": [90, 7, 6]}
{"time": "2021-02-20 02:24:27.419797", "score": "0.8306", "loss": "0.9704", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new AlphaAnimation(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 197, "n_pass": [91, 8, 7]}
{"time": "2021-02-20 02:24:28.764204", "score": "0.8222", "loss": "1.2714", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alpha.setDuration(0d).startAnimation(alpha); } return this; }", "n_tokens": 187, "n_pass": [94, 9, 8]}
{"time": "2021-02-20 02:24:30.110993", "score": "0.9097", "loss": "0.5044", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alpha.setDurationnimation(alpha); } return this; }", "n_tokens": 176, "n_pass": [98, 10, 9]}
{"time": "2021-02-20 02:24:31.822999", "score": "0.8036", "loss": "1.0711", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alpha.nimation(alpha); } return this; }", "n_tokens": 165, "n_pass": [115, 11, 10]}
{"time": "2021-02-20 02:24:33.541742", "score": "0.7713", "loss": "1.2593", "code": "yRVHolder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alphation(alpha); } return this; }", "n_tokens": 160, "n_pass": [164, 12, 11]}
{"time": "2021-02-20 02:24:36.176752", "score": "0.7741", "loss": "1.2225", "code": "lder setAlpha(int viewId, float value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alphation(alpha); } return this; }", "n_tokens": 155, "n_pass": [170, 14, 12]}
{"time": "2021-02-20 02:24:38.241713", "score": "0.7025", "loss": "1.6802", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(viewId).setAlpha(value); ion alpha = new Alph(value, value); alphation(alpha); } return this; }", "n_tokens": 150, "n_pass": [176, 15, 13]}
{"time": "2021-02-20 02:24:39.603859", "score": "0.7283", "loss": "1.5618", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion alpha = new Alph(value, value); alphation(alpha); } return this; }", "n_tokens": 145, "n_pass": [183, 16, 14]}
{"time": "2021-02-20 02:24:43.612769", "score": "0.6813", "loss": "1.7712", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(value, value); alphation(alpha); } return this; }", "n_tokens": 140, "n_pass": [189, 19, 15]}
{"time": "2021-02-20 02:24:46.262656", "score": "0.7629", "loss": "1.2399", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(value, value);ation(alpha); } return this; }", "n_tokens": 135, "n_pass": [195, 21, 16]}
{"time": "2021-02-20 02:24:50.942397", "score": "0.6658", "loss": "1.7553", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(valulue);ation(alpha); } return this; }", "n_tokens": 130, "n_pass": [220, 24, 17]}
{"time": "2021-02-20 02:24:55.679864", "score": "0.7506", "loss": "1.3258", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);ation(alpha); } return this; }", "n_tokens": 127, "n_pass": [296, 27, 18]}
{"time": "2021-02-20 02:24:57.019040", "score": "0.863", "loss": "0.7729", "code": "lder setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 124, "n_pass": [298, 28, 19]}
{"time": "2021-02-20 02:25:02.360720", "score": "0.8599", "loss": "0.7815", "code": "er setAlpha(int viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 122, "n_pass": [308, 32, 20]}
{"time": "2021-02-20 02:25:05.530139", "score": "0.7557", "loss": "1.2994", "code": "er setAlpha(t viewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 120, "n_pass": [315, 33, 21]}
{"time": "2021-02-20 02:25:06.872071", "score": "0.5972", "loss": "2.1369", "code": "er setAlpha(t ewId,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 118, "n_pass": [317, 34, 22]}
{"time": "2021-02-20 02:25:08.263847", "score": "0.6668", "loss": "1.8281", "code": "er setAlpha(t Id,t value) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 116, "n_pass": [318, 35, 23]}
{"time": "2021-02-20 02:25:10.949649", "score": "0.5733", "loss": "2.361", "code": "er setAlpha(t Id,t val) { if (IOB) { getView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 114, "n_pass": [323, 37, 24]}
{"time": "2021-02-20 02:25:12.303789", "score": "0.5195", "loss": "2.7114", "code": "er setAlpha(t Id,t val) { if (IOB) {tView(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 111, "n_pass": [330, 38, 25]}
{"time": "2021-02-20 02:25:13.618647", "score": "0.4597", "loss": "3.0879", "code": "er setAlpha(t Id,t val) { if (IOB) {ew(d).setAlpha(value); ion a= new Alph(vale);on(alpha); } return this; }", "n_tokens": 108, "n_pass": [331, 39, 26]}
{"time": "2021-02-20 02:25:20.314429", "score": "0.5428", "loss": "2.7767", "code": "er setAlpha(t Id,t val) { if (IOB) {ew(d).setAlpha(value); ion a=  Alph(vale);on(alpha); } return this; }", "n_tokens": 105, "n_pass": [342, 44, 27]}
{"time": "2021-02-20 02:25:21.653415", "score": "0.5103", "loss": "3.1042", "code": "er setAlpha(t Id,t val) { if (IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return this; }", "n_tokens": 102, "n_pass": [343, 45, 28]}
{"time": "2021-02-20 02:25:27.043377", "score": "0.4812", "loss": "3.7419", "code": "er setAlpha(t Id,t val) { if (IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 99, "n_pass": [354, 49, 29]}
{"time": "2021-02-20 02:25:30.197917", "score": "0.4993", "loss": "3.4846", "code": "er setAlpha(t Id,t v) { if (IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 97, "n_pass": [366, 50, 30]}
{"time": "2021-02-20 02:25:48.016080", "score": "0.4993", "loss": "3.4846", "code": "er setAlpha(t Id,t v){ if (IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 96, "n_pass": [479, 60, 31]}
{"time": "2021-02-20 02:25:49.338719", "score": "0.4993", "loss": "3.4846", "code": "er setAlpha(t Id,t v){if (IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 95, "n_pass": [481, 61, 32]}
{"time": "2021-02-20 02:25:50.665606", "score": "0.4993", "loss": "3.4846", "code": "er setAlpha(t Id,t v){if(IOB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 94, "n_pass": [484, 62, 33]}
{"time": "2021-02-20 02:25:52.011979", "score": "0.4954", "loss": "3.1317", "code": "er setAlpha(t Id,t v){if(OB) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 93, "n_pass": [486, 63, 34]}
{"time": "2021-02-20 02:25:53.334604", "score": "0.4568", "loss": "3.2162", "code": "er setAlpha(t Id,t v){if(B) {ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 92, "n_pass": [487, 64, 35]}
{"time": "2021-02-20 02:25:54.719190", "score": "0.4568", "loss": "3.2162", "code": "er setAlpha(t Id,t v){if(B){ew(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 91, "n_pass": [490, 65, 36]}
{"time": "2021-02-20 02:25:56.073355", "score": "0.4688", "loss": "3.0947", "code": "er setAlpha(t Id,t v){if(B){w(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 90, "n_pass": [492, 66, 37]}
{"time": "2021-02-20 02:25:57.395932", "score": "0.5018", "loss": "2.7417", "code": "er setAlpha(t Id,t v){if(B){(d).setAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 89, "n_pass": [493, 67, 38]}
{"time": "2021-02-20 02:26:01.810692", "score": "0.4055", "loss": "4.5447", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); ion a= ph(vale);on(alpha); } return t; }", "n_tokens": 88, "n_pass": [500, 70, 39]}
{"time": "2021-02-20 02:26:13.830531", "score": "0.4515", "loss": "4.1948", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a= ph(vale);on(alpha); } return t; }", "n_tokens": 86, "n_pass": [512, 79, 40]}
{"time": "2021-02-20 02:26:16.550985", "score": "0.5178", "loss": "3.1105", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a=h(vale);on(alpha); } return t; }", "n_tokens": 84, "n_pass": [515, 81, 41]}
{"time": "2021-02-20 02:26:19.269090", "score": "0.5795", "loss": "2.9787", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a=h(va);on(alpha); } return t; }", "n_tokens": 82, "n_pass": [518, 83, 42]}
{"time": "2021-02-20 02:26:24.715213", "score": "0.4576", "loss": "3.7265", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a=h(va);on(alpha); }eturn t; }", "n_tokens": 80, "n_pass": [526, 87, 43]}
{"time": "2021-02-20 02:26:26.029645", "score": "0.6051", "loss": "2.6096", "code": "er setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a=h(va);on(alpha); }urn t; }", "n_tokens": 78, "n_pass": [527, 88, 44]}
{"time": "2021-02-20 02:26:30.079480", "score": "0.6867", "loss": "1.9939", "code": "r setAlpha(t Id,t v){if(B){(d).seAlpha(value); n a=h(va);on(alpha); }urn t; }", "n_tokens": 77, "n_pass": [532, 91, 45]}
{"time": "2021-02-20 02:26:36.405530", "score": "0.5881", "loss": "2.4521", "code": "r setAlpha(t I,t v){if(B){(d).seAlpha(value); n a=h(va);on(alpha); }urn t; }", "n_tokens": 76, "n_pass": [547, 93, 46]}
{"time": "2021-02-20 02:26:47.531762", "score": "0.5373", "loss": "3.0684", "code": "r setAlpha(t I,t v){if(B){(d).seAlpha(alue); n a=h(va);on(alpha); }urn t; }", "n_tokens": 75, "n_pass": [572, 101, 47]}
{"time": "2021-02-20 02:26:50.199168", "score": "0.6079", "loss": "2.3346", "code": "r setAlpha(t I,t v){if(B){(d).seAlpha(ae); n a=h(va);on(alpha); }urn t; }", "n_tokens": 73, "n_pass": [574, 103, 48]}
{"time": "2021-02-20 02:26:51.579057", "score": "0.5737", "loss": "2.4895", "code": "r setAlpha(t I,t v){if(B){(d).seAlpha(ae); a=h(va);on(alpha); }urn t; }", "n_tokens": 71, "n_pass": [577, 104, 49]}
{"time": "2021-02-20 02:26:55.702796", "score": "0.6917", "loss": "2.2437", "code": "r setAlpha(t I,t v){if(B){(d).seAlpha(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 69, "n_pass": [582, 107, 50]}
{"time": "2021-02-20 02:27:06.428890", "score": "0.5835", "loss": "2.5922", "code": "r setAlpha(t I,t v){if(B){(d).eAlpha(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 68, "n_pass": [622, 112, 51]}
{"time": "2021-02-20 02:27:07.749477", "score": "0.6317", "loss": "2.4371", "code": "r setAlpha(t I,t v){if(B){(d).Alpha(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 67, "n_pass": [623, 113, 52]}
{"time": "2021-02-20 02:27:09.082831", "score": "0.5163", "loss": "3.159", "code": "r setAlpha(t I,t v){if(B){(d).lpha(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 66, "n_pass": [624, 114, 53]}
{"time": "2021-02-20 02:27:10.600014", "score": "0.4722", "loss": "3.0249", "code": "r setAlpha(t I,t v){if(B){(d).pha(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 65, "n_pass": [625, 115, 54]}
{"time": "2021-02-20 02:27:13.237184", "score": "0.5474", "loss": "2.8951", "code": "r setAlpha(t I,t v){if(B){(d).pa(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 64, "n_pass": [627, 117, 55]}
{"time": "2021-02-20 02:27:14.586087", "score": "0.5169", "loss": "2.8627", "code": "r setAlpha(t I,t v){if(B){(d).p(ae); a=h(va);(alpha); }urn t; }", "n_tokens": 63, "n_pass": [628, 118, 56]}
{"time": "2021-02-20 02:27:17.348301", "score": "0.5731", "loss": "2.4011", "code": "r setAlpha(t I,t v){if(B){(d).p(ae); h(va);(alpha); }urn t; }", "n_tokens": 61, "n_pass": [633, 120, 57]}
{"time": "2021-02-20 02:27:18.694191", "score": "0.4208", "loss": "3.0422", "code": "r setAlpha(t I,t v){if(B){(d).p(ae); h();(alpha); }urn t; }", "n_tokens": 59, "n_pass": [635, 121, 58]}
{"time": "2021-02-20 02:27:34.811582", "score": "0.4208", "loss": "3.0422", "code": "r setAlpha(t I,t v){if(B){(d).p(ae); h();(alpha);}urn t; }", "n_tokens": 58, "n_pass": [711, 128, 59]}
{"time": "2021-02-20 02:27:42.887056", "score": "0.4208", "loss": "3.0422", "code": "r setAlpha(t I,t v){if(B){(d).p(ae); h();(alpha);}urn t;}", "n_tokens": 57, "n_pass": [718, 134, 60]}
{"time": "2021-02-20 02:27:51.106420", "score": "0.4208", "loss": "3.0422", "code": "r setAlpha(t I,t v){if(B){(d).p(ae);h();(alpha);}urn t;}", "n_tokens": 56, "n_pass": [756, 137, 61]}

Minimal simplified code:
r setAlpha(t I,t v){if(B){(d).p(ae);h();(alpha);}urn t;}

