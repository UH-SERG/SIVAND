
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/core/StandardWrapper_getRootCause.java
method_name = getRootCause
method_body = public static Throwable getRootCause(ServletException e) { Throwable rootCause = e; Throwable rootCauseCheck = null; int loops = 0; do { loops++; rootCauseCheck = rootCause.getCause(); if (rootCauseCheck != null) rootCause = rootCauseCheck; } while (rootCauseCheck != null && (loops < 20)); return rootCause; }
predict, score, loss = getRootCause, 0.8713979721069336, 0.5919062495231628

Trace of simplified code(s):
{"time": "2021-02-19 10:15:43.399047", "score": "0.8714", "loss": "0.5919", "code": "public static Throwable getRootCause(ServletException e) { Throwable rootCause = e; Throwable rootCauseCheck = null; int loops = 0; do { loops++; rootCauseCheck = rootCause.getCause(); if (rootCauseCheck != null) rootCause = rootCauseCheck; } while (rootCauseCheck != null && (loops < 20)); return rootCause; }", "n_tokens": 310, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 10:15:44.738112", "score": "0.8991", "loss": "0.5169", "code": "public static Throwable getRootCause(ServletException e) { Throwable rootCause = e; Throwable rootCauseCheck = null; int loops = 0; do { loops++; rootCausseCheck; } while (rootCauseCheck != null && (loops < 20)); return rootCause; }", "n_tokens": 232, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 10:15:46.075661", "score": "0.8908", "loss": "0.5569", "code": "public static Throwable getRootCause(ServletException e) { Throwable rootCau; int loops = 0; do { loops++; rootCausseCheck; } while (rootCauseCheck != null && (loops < 20)); return rootCause; }", "n_tokens": 193, "n_pass": [24, 3, 3]}
{"time": "2021-02-19 10:15:47.441627", "score": "0.8692", "loss": "0.6799", "code": "public static Throwable getRootCause(ServletException e) { Throwable rootCau; int loops = 0; do { loops++; rootCausseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 173, "n_pass": [43, 4, 4]}
{"time": "2021-02-19 10:15:48.791746", "score": "0.8536", "loss": "0.747", "code": "able getRootCause(ServletException e) { Throwable rootCau; int loops = 0; do { loops++; rootCausseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 154, "n_pass": [46, 5, 5]}
{"time": "2021-02-19 10:15:50.525543", "score": "0.7575", "loss": "1.3707", "code": "able getRootCause(ception e) { Throwable rootCau; int loops = 0; do { loops++; rootCausseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 145, "n_pass": [73, 6, 6]}
{"time": "2021-02-19 10:15:51.856874", "score": "0.7919", "loss": "1.1086", "code": "able getRootCause() { Throwable rootCau; int loops = 0; do { loops++; rootCausseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 136, "n_pass": [74, 7, 7]}
{"time": "2021-02-19 10:15:53.168475", "score": "0.777", "loss": "1.2664", "code": "able getRootCause() { ThrowCau; int loops = 0; do { loops++; rootCausseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 127, "n_pass": [76, 8, 8]}
{"time": "2021-02-19 10:15:55.791975", "score": "0.8806", "loss": "0.7022", "code": "able getRootCause() { ThrowCau; int loops = 0; do { loopsusseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 117, "n_pass": [80, 10, 9]}
{"time": "2021-02-19 10:15:58.829654", "score": "0.7118", "loss": "1.9015", "code": "able getRootCause() { Throwoops = 0; do { loopsusseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 107, "n_pass": [90, 12, 10]}
{"time": "2021-02-19 10:16:01.845645", "score": "0.7572", "loss": "1.7668", "code": "able getRootCause() { Throw= 0; do { loopsusseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 102, "n_pass": [124, 14, 11]}
{"time": "2021-02-19 10:16:03.250473", "score": "0.7572", "loss": "1.7668", "code": "able getRootCause() { Throw= 0; do { usseCheck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 97, "n_pass": [126, 15, 12]}
{"time": "2021-02-19 10:16:04.566455", "score": "0.7557", "loss": "1.7142", "code": "able getRootCause() { Throw= 0; do { heck; } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 92, "n_pass": [127, 16, 13]}
{"time": "2021-02-19 10:16:05.867378", "score": "0.7229", "loss": "2.1635", "code": "able getRootCause() { Throw= 0; do {  } while (ll && (loops < 20)); return rootCause; }", "n_tokens": 87, "n_pass": [128, 17, 14]}
{"time": "2021-02-19 10:16:07.198907", "score": "0.7159", "loss": "2.1935", "code": "able getRootCause() { Throw= 0; do {  } while ( (loops < 20)); return rootCause; }", "n_tokens": 82, "n_pass": [131, 18, 15]}
{"time": "2021-02-19 10:16:08.500743", "score": "0.8671", "loss": "0.9589", "code": "able getRootCause() { Throw= 0; do {  } while ( (loo20)); return rootCause; }", "n_tokens": 77, "n_pass": [133, 19, 16]}
{"time": "2021-02-19 10:16:15.872725", "score": "0.8598", "loss": "1.0245", "code": "able getRootCause() { Throw= 0; do {  } while ( (l0)); return rootCause; }", "n_tokens": 74, "n_pass": [183, 23, 17]}
{"time": "2021-02-19 10:16:23.748989", "score": "0.868", "loss": "1.0255", "code": "le getRootCause() { Throw= 0; do {  } while ( (l0)); return rootCause; }", "n_tokens": 72, "n_pass": [192, 29, 18]}
{"time": "2021-02-19 10:16:27.592158", "score": "0.8012", "loss": "1.1902", "code": "le getRootCause() { row= 0; do {  } while ( (l0)); return rootCause; }", "n_tokens": 70, "n_pass": [203, 30, 19]}
{"time": "2021-02-19 10:16:28.915706", "score": "0.8272", "loss": "1.1939", "code": "le getRootCause() { w= 0; do {  } while ( (l0)); return rootCause; }", "n_tokens": 68, "n_pass": [204, 31, 20]}
{"time": "2021-02-19 10:16:30.216893", "score": "0.9771", "loss": "0.11", "code": "le getRootCause() {  0; do {  } while ( (l0)); return rootCause; }", "n_tokens": 66, "n_pass": [205, 32, 21]}
{"time": "2021-02-19 10:16:31.544304", "score": "0.9645", "loss": "0.1389", "code": "le getRootCause() { ; do {  } while ( (l0)); return rootCause; }", "n_tokens": 64, "n_pass": [206, 33, 22]}
{"time": "2021-02-19 10:16:32.862959", "score": "0.9645", "loss": "0.1389", "code": "le getRootCause() { do {  } while ( (l0)); return rootCause; }", "n_tokens": 62, "n_pass": [207, 34, 23]}
{"time": "2021-02-19 10:16:34.159360", "score": "0.9697", "loss": "0.1199", "code": "le getRootCause() {  {  } while ( (l0)); return rootCause; }", "n_tokens": 60, "n_pass": [208, 35, 24]}
{"time": "2021-02-19 10:16:35.459244", "score": "0.9697", "loss": "0.1199", "code": "le getRootCause() {  {} while ( (l0)); return rootCause; }", "n_tokens": 58, "n_pass": [210, 36, 25]}
{"time": "2021-02-19 10:16:36.762149", "score": "0.9661", "loss": "0.215", "code": "le getRootCause() {  {} we ( (l0)); return rootCause; }", "n_tokens": 55, "n_pass": [212, 37, 26]}
{"time": "2021-02-19 10:16:49.498765", "score": "0.9556", "loss": "0.3259", "code": "le getRootCause() {  {} e ( (l0)); return rootCause; }", "n_tokens": 54, "n_pass": [279, 43, 27]}
{"time": "2021-02-19 10:16:50.786044", "score": "0.9761", "loss": "0.1272", "code": "le getRootCause() {  {}  ( (l0)); return rootCause; }", "n_tokens": 53, "n_pass": [280, 44, 28]}
{"time": "2021-02-19 10:16:52.098070", "score": "0.9761", "loss": "0.1272", "code": "le getRootCause() {  {} ( (l0)); return rootCause; }", "n_tokens": 52, "n_pass": [281, 45, 29]}
{"time": "2021-02-19 10:16:53.386715", "score": "0.9761", "loss": "0.1272", "code": "le getRootCause() {  {} ((l0)); return rootCause; }", "n_tokens": 51, "n_pass": [283, 46, 30]}
{"time": "2021-02-19 10:16:54.685462", "score": "0.9845", "loss": "0.0743", "code": "le getRootCause() {  {} ((0)); return rootCause; }", "n_tokens": 50, "n_pass": [285, 47, 31]}
{"time": "2021-02-19 10:17:06.507973", "score": "0.977", "loss": "0.1056", "code": "e getRootCause() {  {} ((0)); return rootCause; }", "n_tokens": 49, "n_pass": [299, 56, 32]}
{"time": "2021-02-19 10:17:12.910901", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){  {} ((0)); return rootCause; }", "n_tokens": 48, "n_pass": [316, 57, 33]}
{"time": "2021-02-19 10:17:14.206583", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){ {} ((0)); return rootCause; }", "n_tokens": 47, "n_pass": [318, 58, 34]}
{"time": "2021-02-19 10:17:15.524787", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){{} ((0)); return rootCause; }", "n_tokens": 46, "n_pass": [319, 59, 35]}
{"time": "2021-02-19 10:17:16.846699", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){{}((0)); return rootCause; }", "n_tokens": 45, "n_pass": [322, 60, 36]}
{"time": "2021-02-19 10:17:35.409164", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){{}((0));return rootCause; }", "n_tokens": 44, "n_pass": [379, 69, 37]}
{"time": "2021-02-19 10:17:56.379341", "score": "0.977", "loss": "0.1056", "code": "e getRootCause(){{}((0));return rootCause;}", "n_tokens": 43, "n_pass": [396, 85, 38]}

Minimal simplified code:
e getRootCause(){{}((0));return rootCause;}

