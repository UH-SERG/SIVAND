
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/HotBitmapGG__RingProgressBar/library/src/main/java/io/netopen/hotbitmapgg/library/view/RingProgressBar_onSizeChanged.java
method_name = onSizeChanged
method_body = @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }
predict, score, loss = onSizeChanged, 0.9999562501907349, 0.00017451576422899961

Trace of simplified code(s):
{"time": "2021-02-20 05:10:38.721436", "score": "1.0", "loss": "0.0002", "code": "@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 138, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 05:10:40.758912", "score": "0.9995", "loss": "0.0017", "code": "@Override protected void onSizeChanged(int w, int hldh) { super.onSizeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 121, "n_pass": [23, 2, 2]}
{"time": "2021-02-20 05:10:42.447641", "score": "0.8592", "loss": "0.621", "code": "@Override protected void onSizeChanged(int w, int hldh) { izeChanged(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 112, "n_pass": [45, 3, 3]}
{"time": "2021-02-20 05:10:43.764835", "score": "0.8912", "loss": "0.4656", "code": "@Override protected void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width = w; height = h; }", "n_tokens": 103, "n_pass": [46, 4, 4]}
{"time": "2021-02-20 05:10:46.401823", "score": "0.9389", "loss": "0.2059", "code": "@Override protected void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 94, "n_pass": [50, 6, 5]}
{"time": "2021-02-20 05:10:47.719799", "score": "0.9081", "loss": "0.3291", "code": "@Overridted void onSizeChanged(int w, int hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 86, "n_pass": [53, 7, 6]}
{"time": "2021-02-20 05:10:49.740922", "score": "0.8958", "loss": "0.5356", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h, oldw, oldh); width ht = h; }", "n_tokens": 77, "n_pass": [57, 8, 7]}
{"time": "2021-02-20 05:10:53.092135", "score": "0.8724", "loss": "0.7231", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h,w, oldh); width ht = h; }", "n_tokens": 73, "n_pass": [89, 10, 8]}
{"time": "2021-02-20 05:10:57.014807", "score": "0.8703", "loss": "0.8044", "code": "@Overridted void onSizeChanged(i hldh) { d(w, h,w, oldh); width h; }", "n_tokens": 68, "n_pass": [93, 13, 9]}
{"time": "2021-02-20 05:10:58.332212", "score": "0.8703", "loss": "0.8044", "code": "@Oveted void onSizeChanged(i hldh) { d(w, h,w, oldh); width h; }", "n_tokens": 64, "n_pass": [96, 14, 10]}
{"time": "2021-02-20 05:11:01.537327", "score": "0.9275", "loss": "0.4957", "code": "@Oveted void onSizeChanged(i hldh) { d(ww, oldh); width h; }", "n_tokens": 60, "n_pass": [106, 15, 11]}
{"time": "2021-02-20 05:11:04.206012", "score": "0.8967", "loss": "0.7308", "code": "@Oveted void onSizeChanged(i hldh) { d(ww, oldh);  h; }", "n_tokens": 55, "n_pass": [109, 17, 12]}
{"time": "2021-02-20 05:11:08.591103", "score": "0.9156", "loss": "0.5308", "code": "@Oveted void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 52, "n_pass": [149, 19, 13]}
{"time": "2021-02-20 05:11:09.921086", "score": "0.9156", "loss": "0.5308", "code": "@Oted void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 50, "n_pass": [152, 20, 14]}
{"time": "2021-02-20 05:11:11.240955", "score": "0.9096", "loss": "0.573", "code": "@Od void onSizeChanged(i hldh) { d(ww, oldh);; }", "n_tokens": 48, "n_pass": [153, 21, 15]}
{"time": "2021-02-20 05:11:17.993417", "score": "0.9108", "loss": "0.5125", "code": "@Od void onSizeChanged(i hh) { d(ww, oldh);; }", "n_tokens": 46, "n_pass": [166, 24, 16]}
{"time": "2021-02-20 05:11:29.718109", "score": "0.9209", "loss": "0.4394", "code": "@Od void onSizeChanged(i h) { d(ww, oldh);; }", "n_tokens": 45, "n_pass": [233, 29, 17]}
{"time": "2021-02-20 05:11:31.014544", "score": "0.9209", "loss": "0.4394", "code": "@Od void onSizeChanged(i h){ d(ww, oldh);; }", "n_tokens": 44, "n_pass": [234, 30, 18]}
{"time": "2021-02-20 05:11:32.311301", "score": "0.9209", "loss": "0.4394", "code": "@Od void onSizeChanged(i h){d(ww, oldh);; }", "n_tokens": 43, "n_pass": [236, 31, 19]}
{"time": "2021-02-20 05:11:33.614624", "score": "0.8881", "loss": "0.655", "code": "@Od void onSizeChanged(i h){d(w, oldh);; }", "n_tokens": 42, "n_pass": [239, 32, 20]}
{"time": "2021-02-20 05:11:34.910686", "score": "0.8881", "loss": "0.655", "code": "@Od void onSizeChanged(i h){d(w,oldh);; }", "n_tokens": 41, "n_pass": [242, 33, 21]}
{"time": "2021-02-20 05:11:41.600215", "score": "0.9075", "loss": "0.5493", "code": "@d void onSizeChanged(i h){d(w,oldh);; }", "n_tokens": 40, "n_pass": [251, 38, 22]}
{"time": "2021-02-20 05:12:01.062552", "score": "0.9075", "loss": "0.5493", "code": "@d void onSizeChanged(i h){d(w,oldh); }", "n_tokens": 39, "n_pass": [294, 48, 23]}
{"time": "2021-02-20 05:12:02.382203", "score": "0.9075", "loss": "0.5493", "code": "@d void onSizeChanged(i h){d(w,oldh);}", "n_tokens": 38, "n_pass": [295, 49, 24]}

Minimal simplified code:
@d void onSizeChanged(i h){d(w,oldh);}

