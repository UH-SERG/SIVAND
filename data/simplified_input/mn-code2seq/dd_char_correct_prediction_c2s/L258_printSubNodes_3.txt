
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CopyStatementNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, "subquery: "); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, "columnList: "); columnList.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9975182414054871, 0.008343871682882309

Trace of simplified code(s):
{"time": "2021-02-20 01:02:56.058673", "score": "0.9975", "loss": "0.0083", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 254, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 01:02:57.388761", "score": "0.9971", "loss": "0.0096", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); subel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 190, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 01:02:58.747554", "score": "0.9967", "loss": "0.0111", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); sumnList.treePrint(depth + 1); } }", "n_tokens": 158, "n_pass": [20, 3, 3]}
{"time": "2021-02-20 01:03:00.063331", "score": "0.9945", "loss": "0.0192", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { primnList.treePrint(depth + 1); } }", "n_tokens": 126, "n_pass": [24, 4, 4]}
{"time": "2021-02-20 01:03:03.127764", "score": "0.9678", "loss": "0.1043", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { prireePrint(depth + 1); } }", "n_tokens": 118, "n_pass": [61, 6, 5]}
{"time": "2021-02-20 01:03:04.456968", "score": "0.9678", "loss": "0.1043", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { prireePrint(depth + 1); } }", "n_tokens": 111, "n_pass": [64, 7, 6]}
{"time": "2021-02-20 01:03:09.165207", "score": "0.9795", "loss": "0.067", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (subquerl) { prireePrint(depth + 1); } }", "n_tokens": 103, "n_pass": [74, 10, 7]}
{"time": "2021-02-20 01:03:15.127118", "score": "0.9448", "loss": "0.1845", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (subquerl) {reePrint(depth + 1); } }", "n_tokens": 99, "n_pass": [115, 14, 8]}
{"time": "2021-02-20 01:03:16.447223", "score": "0.8818", "loss": "0.4425", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (subquerl) {rint(depth + 1); } }", "n_tokens": 95, "n_pass": [116, 15, 9]}
{"time": "2021-02-20 01:03:21.441059", "score": "0.8717", "loss": "0.4893", "code": "void printSubNodes(int h) { super.printSubNodes(depth); if (subquerl) {rint(depth + 1); } }", "n_tokens": 91, "n_pass": [128, 18, 10]}
{"time": "2021-02-20 01:03:22.754499", "score": "0.9532", "loss": "0.1848", "code": "void printSubNodes(int h) {er.printSubNodes(depth); if (subquerl) {rint(depth + 1); } }", "n_tokens": 87, "n_pass": [130, 19, 11]}
{"time": "2021-02-20 01:03:29.392286", "score": "0.9417", "loss": "0.2312", "code": "void printSubNodes(int h) {er.printSubNodes(depth); if (subl) {rint(depth + 1); } }", "n_tokens": 83, "n_pass": [139, 24, 12]}
{"time": "2021-02-20 01:03:30.733141", "score": "0.8594", "loss": "0.6075", "code": "void printSubNodes(int h) {er.printSubNodes(depth); if (subl) {(depth + 1); } }", "n_tokens": 79, "n_pass": [141, 25, 13]}
{"time": "2021-02-20 01:03:39.740791", "score": "0.8273", "loss": "0.7735", "code": "void printSubNodes(int h) {er.printSubNodes(depth); if (subl) {(dth + 1); } }", "n_tokens": 77, "n_pass": [203, 31, 14]}
{"time": "2021-02-20 01:03:41.036909", "score": "0.8606", "loss": "0.6116", "code": "void printSubNodes(int h) {er.printSubNodes(depth); if (subl) {(d + 1); } }", "n_tokens": 75, "n_pass": [204, 32, 15]}
{"time": "2021-02-20 01:03:47.521082", "score": "0.8272", "loss": "0.8396", "code": "void printSubNodes(t h) {er.printSubNodes(depth); if (subl) {(d + 1); } }", "n_tokens": 73, "n_pass": [220, 35, 16]}
{"time": "2021-02-20 01:03:58.000338", "score": "0.7502", "loss": "1.4612", "code": "void printSubNodes(t h) {er.printSubNodes(dth); if (subl) {(d + 1); } }", "n_tokens": 71, "n_pass": [233, 43, 17]}
{"time": "2021-02-20 01:03:59.325229", "score": "0.8263", "loss": "0.9099", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (subl) {(d + 1); } }", "n_tokens": 69, "n_pass": [234, 44, 18]}
{"time": "2021-02-20 01:04:00.631042", "score": "0.8791", "loss": "0.5447", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (sl) {(d + 1); } }", "n_tokens": 67, "n_pass": [239, 45, 19]}
{"time": "2021-02-20 01:04:20.441591", "score": "0.8891", "loss": "0.4581", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s) {(d + 1); } }", "n_tokens": 66, "n_pass": [340, 55, 20]}
{"time": "2021-02-20 01:04:21.759244", "score": "0.8891", "loss": "0.4581", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){(d + 1); } }", "n_tokens": 65, "n_pass": [341, 56, 21]}
{"time": "2021-02-20 01:04:23.137453", "score": "0.897", "loss": "0.3971", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){( + 1); } }", "n_tokens": 64, "n_pass": [344, 57, 22]}
{"time": "2021-02-20 01:04:24.485976", "score": "0.897", "loss": "0.3971", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){(+ 1); } }", "n_tokens": 63, "n_pass": [345, 58, 23]}
{"time": "2021-02-20 01:04:25.784834", "score": "0.8738", "loss": "0.5033", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){( 1); } }", "n_tokens": 62, "n_pass": [346, 59, 24]}
{"time": "2021-02-20 01:04:27.122900", "score": "0.8738", "loss": "0.5033", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){(1); } }", "n_tokens": 61, "n_pass": [347, 60, 25]}
{"time": "2021-02-20 01:04:28.440742", "score": "0.8738", "loss": "0.5033", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){(1);} }", "n_tokens": 60, "n_pass": [351, 61, 26]}
{"time": "2021-02-20 01:04:29.743810", "score": "0.8738", "loss": "0.5033", "code": "void printSubNodes(t h) {er.printSubNodes(d); if (s){(1);}}", "n_tokens": 59, "n_pass": [353, 62, 27]}
{"time": "2021-02-20 01:04:41.392001", "score": "0.8738", "loss": "0.5033", "code": "void printSubNodes(t h){er.printSubNodes(d); if (s){(1);}}", "n_tokens": 58, "n_pass": [378, 67, 28]}
{"time": "2021-02-20 01:04:42.707675", "score": "0.8945", "loss": "0.4587", "code": "void printSubNodes(t h){r.printSubNodes(d); if (s){(1);}}", "n_tokens": 57, "n_pass": [380, 68, 29]}
{"time": "2021-02-20 01:05:03.894390", "score": "0.8945", "loss": "0.4587", "code": "void printSubNodes(t h){r.printSubNodes(d);if (s){(1);}}", "n_tokens": 56, "n_pass": [400, 84, 30]}
{"time": "2021-02-20 01:05:05.201728", "score": "0.8945", "loss": "0.4587", "code": "void printSubNodes(t h){r.printSubNodes(d);if(s){(1);}}", "n_tokens": 55, "n_pass": [403, 85, 31]}

Minimal simplified code:
void printSubNodes(t h){r.printSubNodes(d);if(s){(1);}}

