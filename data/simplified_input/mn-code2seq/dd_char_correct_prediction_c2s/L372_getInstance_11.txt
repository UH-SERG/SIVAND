
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/DERUniversalString_getInstance.java
method_name = getInstance
method_body = public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }
predict, score, loss = getInstance, 0.984981894493103, 0.04611861705780029

Trace of simplified code(s):
{"time": "2021-02-20 08:23:54.513125", "score": "0.985", "loss": "0.0461", "code": "public static DERUniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 274, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 08:23:56.240347", "score": "0.9723", "loss": "0.0909", "code": "UniversalString getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 257, "n_pass": [44, 2, 2]}
{"time": "2021-02-20 08:23:57.585074", "score": "0.9564", "loss": "0.1256", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 240, "n_pass": [46, 3, 3]}
{"time": "2021-02-20 08:23:58.934961", "score": "0.9476", "loss": "0.1585", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else { return new DERUniversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 223, "n_pass": [51, 4, 4]}
{"time": "2021-02-20 08:24:00.265297", "score": "0.9475", "loss": "0.2088", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((ASN1OctetString) o).getOctets()); } }", "n_tokens": 206, "n_pass": [55, 5, 5]}
{"time": "2021-02-20 08:24:03.317627", "score": "0.945", "loss": "0.2388", "code": "UniversalString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 197, "n_pass": [94, 7, 6]}
{"time": "2021-02-20 08:24:04.673578", "score": "0.938", "loss": "0.2956", "code": "lString getInstance(ASN1Taoolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 189, "n_pass": [97, 8, 7]}
{"time": "2021-02-20 08:24:06.741443", "score": "0.9314", "loss": "0.2793", "code": "lString getInstance(ASN1 explicit) { ASN1Primitive o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 181, "n_pass": [101, 9, 8]}
{"time": "2021-02-20 08:24:08.112467", "score": "0.8965", "loss": "0.565", "code": "lString getInstance(ASN1 explicit) { ASNve o = obj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 173, "n_pass": [104, 10, 9]}
{"time": "2021-02-20 08:24:09.497629", "score": "0.7726", "loss": "0.9147", "code": "lString getInstance(ASN1 explicit) { ASNbj.getObject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 165, "n_pass": [105, 11, 10]}
{"time": "2021-02-20 08:24:10.810956", "score": "0.8335", "loss": "0.8217", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (explicit |RUniversalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 157, "n_pass": [106, 12, 11]}
{"time": "2021-02-20 08:24:12.123953", "score": "0.8052", "loss": "1.0465", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (explicersalString) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 148, "n_pass": [109, 13, 12]}
{"time": "2021-02-20 08:24:13.435055", "score": "0.8205", "loss": "0.9746", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (explicng) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 139, "n_pass": [110, 14, 13]}
{"time": "2021-02-20 08:24:18.141244", "score": "0.8174", "loss": "0.9048", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (expl) { return getInstance(o); } else {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 135, "n_pass": [159, 17, 14]}
{"time": "2021-02-20 08:24:23.384403", "score": "0.864", "loss": "0.6647", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (expl) { return getInstance(o); } {iversalString(((Atring) o).getOctets()); } }", "n_tokens": 130, "n_pass": [167, 21, 15]}
{"time": "2021-02-20 08:24:24.716087", "score": "0.8367", "loss": "0.6606", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (expl) { return getInstance(o); } {iverring(((Atring) o).getOctets()); } }", "n_tokens": 125, "n_pass": [169, 22, 16]}
{"time": "2021-02-20 08:24:26.038096", "score": "0.714", "loss": "1.2352", "code": "lString getInstance(ASN1 explicit) { ASNject(); if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 120, "n_pass": [174, 23, 17]}
{"time": "2021-02-20 08:24:27.363917", "score": "0.8014", "loss": "0.8129", "code": "ing getInstance(ASN1 explicit) { ASNject(); if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 116, "n_pass": [177, 24, 18]}
{"time": "2021-02-20 08:24:29.790662", "score": "0.7047", "loss": "1.2382", "code": "ing getInstance(ASN1 expt) { ASNject(); if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 112, "n_pass": [184, 25, 19]}
{"time": "2021-02-20 08:24:31.102998", "score": "0.7201", "loss": "1.1726", "code": "ing getInstance(ASN1 expt) {ject(); if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 108, "n_pass": [186, 26, 20]}
{"time": "2021-02-20 08:24:37.784000", "score": "0.7814", "loss": "0.9342", "code": "ing getInstance(ASN1 expt) {ct(); if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 106, "n_pass": [262, 30, 21]}
{"time": "2021-02-20 08:24:39.117054", "score": "0.7468", "loss": "1.0262", "code": "ing getInstance(ASN1 expt) {ct; if (expl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 104, "n_pass": [263, 31, 22]}
{"time": "2021-02-20 08:24:40.419620", "score": "0.815", "loss": "0.7759", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return getInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 102, "n_pass": [267, 32, 23]}
{"time": "2021-02-20 08:24:43.080645", "score": "0.5129", "loss": "2.3365", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {iverring(((Atring) o).gets()); } }", "n_tokens": 100, "n_pass": [275, 34, 24]}
{"time": "2021-02-20 08:24:49.695321", "score": "0.5129", "loss": "2.3365", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {erring(((Atring) o).gets()); } }", "n_tokens": 98, "n_pass": [284, 39, 25]}
{"time": "2021-02-20 08:24:52.328401", "score": "0.5129", "loss": "2.3365", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {erng(((Atring) o).gets()); } }", "n_tokens": 96, "n_pass": [286, 41, 26]}
{"time": "2021-02-20 08:24:53.632752", "score": "0.647", "loss": "1.4564", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {er(((Atring) o).gets()); } }", "n_tokens": 94, "n_pass": [287, 42, 27]}
{"time": "2021-02-20 08:24:55.007711", "score": "0.6806", "loss": "1.2932", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {er(((Atg) o).gets()); } }", "n_tokens": 91, "n_pass": [290, 43, 28]}
{"time": "2021-02-20 08:24:57.640165", "score": "0.7762", "loss": "0.7846", "code": "ing getInstance(ASN1 expt) {ct; if (pl) { return gInstance(o); } {er(((Atg) o).get); } }", "n_tokens": 88, "n_pass": [294, 45, 29]}
{"time": "2021-02-20 08:25:06.402416", "score": "0.7335", "loss": "0.9971", "code": "ing getInstance(ASN1 expt) {; if (pl) { return gInstance(o); } {er(((Atg) o).get); } }", "n_tokens": 86, "n_pass": [311, 50, 30]}
{"time": "2021-02-20 08:25:07.710818", "score": "0.7335", "loss": "0.9971", "code": "ing getInstance(ASN1 expt) {if (pl) { return gInstance(o); } {er(((Atg) o).get); } }", "n_tokens": 84, "n_pass": [312, 51, 31]}
{"time": "2021-02-20 08:25:09.024763", "score": "0.7095", "loss": "1.1476", "code": "ing getInstance(ASN1 expt) {if (pl) { returnInstance(o); } {er(((Atg) o).get); } }", "n_tokens": 82, "n_pass": [321, 52, 32]}
{"time": "2021-02-20 08:25:15.569074", "score": "0.7143", "loss": "1.0958", "code": "ing getInstance(ASN1 expt) {if (pl) { returnInstance(o); } {(((Atg) o).get); } }", "n_tokens": 80, "n_pass": [330, 57, 33]}
{"time": "2021-02-20 08:25:22.991519", "score": "0.733", "loss": "0.968", "code": "ing getInstance(ASN1 et) {if (pl) { returnInstance(o); } {(((Atg) o).get); } }", "n_tokens": 78, "n_pass": [349, 61, 34]}
{"time": "2021-02-20 08:25:24.331163", "score": "0.7573", "loss": "1.147", "code": "ing getInstance(ASN1 et) {if (pl) { turnInstance(o); } {(((Atg) o).get); } }", "n_tokens": 76, "n_pass": [357, 62, 35]}
{"time": "2021-02-20 08:25:25.655015", "score": "0.7531", "loss": "1.0064", "code": "ing getInstance(ASN1 et) {if (pl) { rnInstance(o); } {(((Atg) o).get); } }", "n_tokens": 74, "n_pass": [358, 63, 36]}
{"time": "2021-02-20 08:25:44.290416", "score": "0.7078", "loss": "1.1143", "code": "ing getInstance(ASN1 et) {if (pl) { rInstance(o); } {(((Atg) o).get); } }", "n_tokens": 73, "n_pass": [462, 73, 37]}
{"time": "2021-02-20 08:25:48.222060", "score": "0.6992", "loss": "1.2229", "code": "ing getInstance(ASN1 et) {if (pl) { rIntance(o); } {(((Atg) o).get); } }", "n_tokens": 72, "n_pass": [465, 76, 38]}
{"time": "2021-02-20 08:25:49.523418", "score": "0.5796", "loss": "2.2731", "code": "ing getInstance(ASN1 et) {if (pl) { rInance(o); } {(((Atg) o).get); } }", "n_tokens": 71, "n_pass": [466, 77, 39]}
{"time": "2021-02-20 08:25:50.849408", "score": "0.5796", "loss": "2.2731", "code": "ing getInstance(ASN1 et) {if (pl) { rInnce(o); } {(((Atg) o).get); } }", "n_tokens": 70, "n_pass": [467, 78, 40]}
{"time": "2021-02-20 08:25:54.793078", "score": "0.5796", "loss": "2.2731", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc(o); } {(((Atg) o).get); } }", "n_tokens": 69, "n_pass": [470, 81, 41]}
{"time": "2021-02-20 08:25:56.099569", "score": "0.6815", "loss": "1.6472", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc(); } {(((Atg) o).get); } }", "n_tokens": 68, "n_pass": [472, 82, 42]}
{"time": "2021-02-20 08:25:57.399459", "score": "0.6815", "loss": "1.6472", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();} {(((Atg) o).get); } }", "n_tokens": 67, "n_pass": [475, 83, 43]}
{"time": "2021-02-20 08:25:58.733099", "score": "0.6815", "loss": "1.6472", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();}{(((Atg) o).get); } }", "n_tokens": 66, "n_pass": [477, 84, 44]}
{"time": "2021-02-20 08:26:00.062399", "score": "0.6725", "loss": "1.7744", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();}{(((tg) o).get); } }", "n_tokens": 65, "n_pass": [482, 85, 45]}
{"time": "2021-02-20 08:26:01.377785", "score": "0.6884", "loss": "1.5689", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();}{(((g) o).get); } }", "n_tokens": 64, "n_pass": [483, 86, 46]}
{"time": "2021-02-20 08:26:02.694008", "score": "0.6884", "loss": "1.5689", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();}{(((g)o).get); } }", "n_tokens": 63, "n_pass": [486, 87, 47]}
{"time": "2021-02-20 08:26:04.012723", "score": "0.7255", "loss": "1.2986", "code": "ing getInstance(ASN1 et) {if (pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 61, "n_pass": [489, 88, 48]}
{"time": "2021-02-20 08:26:06.648132", "score": "0.6602", "loss": "1.6814", "code": "ig getInstance(ASN1 et) {if (pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 60, "n_pass": [494, 90, 49]}
{"time": "2021-02-20 08:26:17.507030", "score": "0.6602", "loss": "1.6814", "code": "ig getInstance(ASN et) {if (pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 59, "n_pass": [512, 95, 50]}
{"time": "2021-02-20 08:26:20.160496", "score": "0.6731", "loss": "1.4925", "code": "ig getInstance(ASN e) {if (pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 58, "n_pass": [515, 97, 51]}
{"time": "2021-02-20 08:26:21.497220", "score": "0.6731", "loss": "1.4925", "code": "ig getInstance(ASN e){if (pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 57, "n_pass": [517, 98, 52]}
{"time": "2021-02-20 08:26:22.823499", "score": "0.6731", "loss": "1.4925", "code": "ig getInstance(ASN e){if(pl) { rInnc();}{(((g)o).g); } }", "n_tokens": 56, "n_pass": [521, 99, 53]}
{"time": "2021-02-20 08:26:26.784205", "score": "0.6731", "loss": "1.4925", "code": "ig getInstance(ASN e){if(pl){ rInnc();}{(((g)o).g); } }", "n_tokens": 55, "n_pass": [526, 102, 54]}
{"time": "2021-02-20 08:26:28.112217", "score": "0.6731", "loss": "1.4925", "code": "ig getInstance(ASN e){if(pl){rInnc();}{(((g)o).g); } }", "n_tokens": 54, "n_pass": [528, 103, 55]}
{"time": "2021-02-20 08:26:29.432483", "score": "0.6525", "loss": "1.4844", "code": "ig getInstance(ASN e){if(pl){Innc();}{(((g)o).g); } }", "n_tokens": 53, "n_pass": [529, 104, 56]}
{"time": "2021-02-20 08:26:36.042057", "score": "0.7644", "loss": "1.0492", "code": "ig getInstance(ASN e){if(pl){Innc();}{(((g)o)); } }", "n_tokens": 51, "n_pass": [545, 109, 57]}
{"time": "2021-02-20 08:26:50.854759", "score": "0.7499", "loss": "1.0466", "code": "ig getInstance(ASN e){if(pl){nnc();}{(((g)o)); } }", "n_tokens": 50, "n_pass": [578, 117, 58]}
{"time": "2021-02-20 08:26:52.185647", "score": "0.7665", "loss": "1.1208", "code": "ig getInstance(ASN e){if(pl){nc();}{(((g)o)); } }", "n_tokens": 49, "n_pass": [579, 118, 59]}
{"time": "2021-02-20 08:26:53.488400", "score": "0.758", "loss": "1.0243", "code": "ig getInstance(ASN e){if(pl){c();}{(((g)o)); } }", "n_tokens": 48, "n_pass": [580, 119, 60]}
{"time": "2021-02-20 08:27:09.340632", "score": "0.7173", "loss": "1.3853", "code": "ig getInstance(ASN e){if(pl){c();}{(((g))); } }", "n_tokens": 47, "n_pass": [633, 127, 61]}
{"time": "2021-02-20 08:27:10.644621", "score": "0.7173", "loss": "1.3853", "code": "ig getInstance(ASN e){if(pl){c();}{(((g)));} }", "n_tokens": 46, "n_pass": [636, 128, 62]}
{"time": "2021-02-20 08:27:11.991028", "score": "0.7173", "loss": "1.3853", "code": "ig getInstance(ASN e){if(pl){c();}{(((g)));}}", "n_tokens": 45, "n_pass": [638, 129, 63]}

Minimal simplified code:
ig getInstance(ASN e){if(pl){c();}{(((g)));}}

