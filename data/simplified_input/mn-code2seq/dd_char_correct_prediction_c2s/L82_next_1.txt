
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/pipe/iterator/ArrayIterator_next.java
method_name = next
method_body = public Instance next() { URI uri = null; try { uri = new URI("array:" + index++); } catch (Exception e) { e.printStackTrace(); throw new IllegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }
predict, score, loss = next, 0.7524668574333191, 0.41976451873779297

Trace of simplified code(s):
{"time": "2021-02-19 13:35:42.709435", "score": "0.7525", "loss": "0.4198", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printStackTrace(); throw new IllegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 225, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 13:35:44.061958", "score": "0.7171", "loss": "0.4847", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.prinegalStateException(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 197, "n_pass": [24, 2, 2]}
{"time": "2021-02-19 13:35:45.443205", "score": "0.6501", "loss": "0.5998", "code": "public Instance next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 183, "n_pass": [45, 3, 3]}
{"time": "2021-02-19 13:35:48.139385", "score": "0.8924", "loss": "0.2288", "code": "e next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } return new Instance(subIterator.next(), target, uri, null); }", "n_tokens": 169, "n_pass": [50, 5, 4]}
{"time": "2021-02-19 13:35:49.492836", "score": "0.3518", "loss": "2.0201", "code": "e next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), target, uri, null); }", "n_tokens": 155, "n_pass": [59, 6, 5]}
{"time": "2021-02-19 13:35:53.547044", "score": "0.29", "loss": "2.0577", "code": "e next() { URI uri = null; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), targetnull); }", "n_tokens": 148, "n_pass": [97, 9, 6]}
{"time": "2021-02-19 13:35:54.879355", "score": "0.3715", "loss": "1.7681", "code": "e next() { URInull; try { uri = new URI(\"array:\" + index++); } catch (Exception e) { e.printion(); } retue(subIterator.next(), targetnull); }", "n_tokens": 141, "n_pass": [100, 10, 7]}
{"time": "2021-02-19 13:35:57.523757", "score": "0.4103", "loss": "1.6818", "code": "e next() { URInull; try { uri = new URI(\"array:\" + index++); } catch (on e) { e.printion(); } retue(subIterator.next(), targetnull); }", "n_tokens": 134, "n_pass": [109, 12, 8]}
{"time": "2021-02-19 13:36:02.809665", "score": "0.3647", "loss": "1.9523", "code": "e next() { URInull; try { uri = new URI(\"array:\" + index++); } catch (on e) { e.printion(); } retue(subIterator.next(),null); }", "n_tokens": 127, "n_pass": [117, 16, 9]}
{"time": "2021-02-19 13:36:04.138593", "score": "0.2662", "loss": "2.3731", "code": "e next() { URInull; try { uri = new URI(\"array:\" ++); } catch (on e) { e.printion(); } retue(subIterator.next(),null); }", "n_tokens": 120, "n_pass": [126, 17, 10]}
{"time": "2021-02-19 13:36:08.121658", "score": "0.2538", "loss": "2.3845", "code": "e next() { URInull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.printion(); } retue(subIterator.next(),null); }", "n_tokens": 117, "n_pass": [178, 20, 11]}
{"time": "2021-02-19 13:36:10.854992", "score": "0.2898", "loss": "2.238", "code": "e next() { URInull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.prin(); } retue(subIterator.next(),null); }", "n_tokens": 113, "n_pass": [187, 22, 12]}
{"time": "2021-02-19 13:36:12.195202", "score": "0.5275", "loss": "1.4216", "code": "e next() { URInull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.prin(); } r(subIterator.next(),null); }", "n_tokens": 109, "n_pass": [190, 23, 13]}
{"time": "2021-02-19 13:36:13.535111", "score": "0.2883", "loss": "2.1482", "code": "e next() { URInull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.prin(); } r(subator.next(),null); }", "n_tokens": 105, "n_pass": [192, 24, 14]}
{"time": "2021-02-19 13:36:14.855446", "score": "0.4534", "loss": "1.5618", "code": "e next() { URInull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.prin(); } r(sub.next(),null); }", "n_tokens": 101, "n_pass": [193, 25, 15]}
{"time": "2021-02-19 13:36:19.562164", "score": "0.2917", "loss": "2.0843", "code": "e next() { Uull; try { uri = new URI(\"ay:\" ++); } catch (on e) { e.prin(); } r(sub.next(),null); }", "n_tokens": 98, "n_pass": [202, 28, 16]}
{"time": "2021-02-19 13:36:22.227080", "score": "0.2919", "loss": "2.1004", "code": "e next() { Uull; try { u= new URI(\"ay:\" ++); } catch (on e) { e.prin(); } r(sub.next(),null); }", "n_tokens": 95, "n_pass": [207, 30, 17]}
{"time": "2021-02-19 13:36:24.872382", "score": "0.307", "loss": "2.2703", "code": "e next() { Uull; try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 91, "n_pass": [219, 32, 18]}
{"time": "2021-02-19 13:36:29.597939", "score": "0.2845", "loss": "2.3596", "code": "e next() { U; try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 88, "n_pass": [231, 35, 19]}
{"time": "2021-02-19 13:36:37.382593", "score": "0.2845", "loss": "2.3596", "code": "e next(){ U; try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 87, "n_pass": [307, 39, 20]}
{"time": "2021-02-19 13:36:38.704060", "score": "0.2845", "loss": "2.3596", "code": "e next(){U; try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 86, "n_pass": [309, 40, 21]}
{"time": "2021-02-19 13:36:40.028721", "score": "0.3599", "loss": "1.9876", "code": "e next(){; try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 85, "n_pass": [310, 41, 22]}
{"time": "2021-02-19 13:36:41.373868", "score": "0.3599", "loss": "1.9876", "code": "e next(){try { u= new URI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 83, "n_pass": [311, 42, 23]}
{"time": "2021-02-19 13:36:44.058146", "score": "0.5823", "loss": "1.1877", "code": "e next(){try { u= newRI(\"ay:\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 81, "n_pass": [318, 44, 24]}
{"time": "2021-02-19 13:36:45.383411", "score": "0.6162", "loss": "1.1364", "code": "e next(){try { u= newRI(\":\" ++); } catch (on e) { en(); } r(sub.next(),null); }", "n_tokens": 79, "n_pass": [321, 45, 25]}
{"time": "2021-02-19 13:36:48.051851", "score": "0.4868", "loss": "1.3797", "code": "e next(){try { u= newRI(\":\" ++); } catch (on e) { en(); } r(s.next(),null); }", "n_tokens": 77, "n_pass": [340, 47, 26]}
{"time": "2021-02-19 13:36:52.053455", "score": "0.367", "loss": "1.8814", "code": "e next(){try { u= newRI(\":\" ++); } catch (on e) { en(); } r(s.next(),ll); }", "n_tokens": 75, "n_pass": [345, 50, 27]}
{"time": "2021-02-19 13:36:55.602255", "score": "0.3219", "loss": "1.9744", "code": "e next(){try {  newRI(\":\" ++); } catch (on e) { en(); } r(s.next(),ll); }", "n_tokens": 73, "n_pass": [361, 51, 28]}
{"time": "2021-02-19 13:36:56.941891", "score": "0.5668", "loss": "1.293", "code": "e next(){try { ewRI(\":\" ++); } catch (on e) { en(); } r(s.next(),ll); }", "n_tokens": 71, "n_pass": [362, 52, 29]}
{"time": "2021-02-19 13:36:58.295743", "score": "0.4132", "loss": "1.7087", "code": "e next(){try { RI(\":\" ++); } catch (on e) { en(); } r(s.next(),ll); }", "n_tokens": 69, "n_pass": [363, 53, 30]}
{"time": "2021-02-19 13:36:59.609651", "score": "0.5416", "loss": "1.263", "code": "e next(){try { (\":\" ++); } catch (on e) { en(); } r(s.next(),ll); }", "n_tokens": 67, "n_pass": [364, 54, 31]}
{"time": "2021-02-19 13:37:00.931558", "score": "0.2673", "loss": "1.9371", "code": "e next(){try { (\":\" ++); } catch (on e) {n(); } r(s.next(),ll); }", "n_tokens": 65, "n_pass": [378, 55, 32]}
{"time": "2021-02-19 13:37:11.855664", "score": "0.2673", "loss": "1.9371", "code": "e next(){try { (\":\" ++); } catch (on e) {n();} r(s.next(),ll); }", "n_tokens": 64, "n_pass": [474, 58, 33]}
{"time": "2021-02-19 13:37:13.165839", "score": "0.2673", "loss": "1.9371", "code": "e next(){try { (\":\" ++); } catch (on e) {n();}r(s.next(),ll); }", "n_tokens": 63, "n_pass": [475, 59, 34]}
{"time": "2021-02-19 13:37:23.766713", "score": "0.2673", "loss": "1.9371", "code": "e next(){try { (\":\" ++); } catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 62, "n_pass": [491, 67, 35]}
{"time": "2021-02-19 13:37:27.299284", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{ (\":\" ++); } catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 61, "n_pass": [505, 68, 36]}
{"time": "2021-02-19 13:37:28.612342", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{(\":\" ++); } catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 60, "n_pass": [507, 69, 37]}
{"time": "2021-02-19 13:37:31.233568", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{(\":\"++); } catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 59, "n_pass": [512, 71, 38]}
{"time": "2021-02-19 13:37:32.547501", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{(\":\"++);} catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 58, "n_pass": [517, 72, 39]}
{"time": "2021-02-19 13:37:33.875348", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{(\":\"++);}catch (on e) {n();}r(s.next(),ll);}", "n_tokens": 57, "n_pass": [519, 73, 40]}
{"time": "2021-02-19 13:37:35.190370", "score": "0.2673", "loss": "1.9371", "code": "e next(){try{(\":\"++);}catch(on e) {n();}r(s.next(),ll);}", "n_tokens": 56, "n_pass": [525, 74, 41]}
{"time": "2021-02-19 13:37:37.839804", "score": "0.471", "loss": "1.3792", "code": "e next(){try{(\":\"++);}catch(o e) {n();}r(s.next(),ll);}", "n_tokens": 55, "n_pass": [528, 76, 42]}
{"time": "2021-02-19 13:37:39.170486", "score": "0.471", "loss": "1.3792", "code": "e next(){try{(\":\"++);}catch(o e){n();}r(s.next(),ll);}", "n_tokens": 54, "n_pass": [532, 77, 43]}
{"time": "2021-02-19 13:37:51.958911", "score": "0.3788", "loss": "1.5673", "code": "e next(){try{(\"\"++);}catch(o e){n();}r(s.next(),ll);}", "n_tokens": 53, "n_pass": [570, 85, 44]}

Minimal simplified code:
e next(){try{(""++);}catch(o e){n();}r(s.next(),ll);}

