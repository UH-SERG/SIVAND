
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/core-utilities/src/main/java/edu/illinois/cs/cogcomp/core/datastructures/vectors/OVector_toString.java
method_name = toString
method_body = public String toString() { StringBuffer result = new StringBuffer(); result.append("["); for (int i = 0; i < size; ++i) { result.append(vector[i]); if (i + 1 < size) result.append(", "); } result.append("]"); return result.toString(); }
predict, score, loss = toString, 0.9793866276741028, 0.06454169005155563

Trace of simplified code(s):
{"time": "2021-02-19 11:24:01.024812", "score": "0.9778", "loss": "0.0676", "code": "public String toString() { StringBuffer result = new StringBuffer(); result.append(\"[\"); for (int i = 0; i < size; ++i) { result.append(vector[i]); if (i + 1 < size) result.append(\", \"); } result.append(\"]\"); return result.toString(); }", "n_tokens": 236, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 11:24:02.380992", "score": "0.975", "loss": "0.0773", "code": "public String toString() { StgBuffer(); result.append(\"[\"); for (int i = 0; i < size; ++i) { result.append(vector[i]); if (i + 1 < size) result.append(\", \"); } result.append(\"]\"); return result.toString(); }", "n_tokens": 207, "n_pass": [21, 2, 2]}
{"time": "2021-02-19 11:24:03.722553", "score": "0.9674", "loss": "0.1083", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.append(vector[i]); if (i + 1 < size) result.append(\", \"); } result.append(\"]\"); return result.toString(); }", "n_tokens": 178, "n_pass": [22, 3, 3]}
{"time": "2021-02-19 11:24:05.086470", "score": "0.9509", "loss": "0.1538", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1 < size) result.append(\", \"); } result.append(\"]\"); return result.toString(); }", "n_tokens": 163, "n_pass": [44, 4, 4]}
{"time": "2021-02-19 11:24:06.832825", "score": "0.9542", "loss": "0.1641", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); } result.append(\"]\"); return result.toString(); }", "n_tokens": 156, "n_pass": [79, 5, 5]}
{"time": "2021-02-19 11:24:08.203888", "score": "0.9718", "loss": "0.1184", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); return result.toString(); }", "n_tokens": 148, "n_pass": [83, 6, 6]}
{"time": "2021-02-19 11:24:09.543439", "score": "0.9662", "loss": "0.1487", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); retlt.toString(); }", "n_tokens": 140, "n_pass": [86, 7, 7]}
{"time": "2021-02-19 11:24:10.881297", "score": "0.8582", "loss": "0.7274", "code": "public String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 132, "n_pass": [87, 8, 8]}
{"time": "2021-02-19 11:24:12.247233", "score": "0.8582", "loss": "0.7274", "code": "String toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 125, "n_pass": [89, 9, 9]}
{"time": "2021-02-19 11:24:15.727429", "score": "0.8398", "loss": "0.8172", "code": "Str toString() { St; for (int i = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 122, "n_pass": [142, 11, 10]}
{"time": "2021-02-19 11:24:18.185298", "score": "0.8226", "loss": "0.927", "code": "Str toString() { St; for (ii = 0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 119, "n_pass": [151, 12, 11]}
{"time": "2021-02-19 11:24:19.544961", "score": "0.8877", "loss": "0.5787", "code": "Str toString() { St; for (i0; i < size; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 115, "n_pass": [152, 13, 12]}
{"time": "2021-02-19 11:24:20.902648", "score": "0.8474", "loss": "0.7735", "code": "Str toString() { St; for (i0; iize; ++i) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 111, "n_pass": [154, 14, 13]}
{"time": "2021-02-19 11:24:22.226166", "score": "0.8451", "loss": "0.7981", "code": "Str toString() { St; for (i0; iize;) { result.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 107, "n_pass": [156, 15, 14]}
{"time": "2021-02-19 11:24:23.554619", "score": "0.8391", "loss": "0.7549", "code": "Str toString() { St; for (i0; iize;) { lt.ap; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 103, "n_pass": [158, 16, 15]}
{"time": "2021-02-19 11:24:24.880414", "score": "0.8356", "loss": "0.7312", "code": "Str toString() { St; for (i0; iize;) { p; if (i + 1) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 99, "n_pass": [159, 17, 16]}
{"time": "2021-02-19 11:24:26.199429", "score": "0.8676", "loss": "0.575", "code": "Str toString() { St; for (i0; iize;) { p; if (i) result.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 95, "n_pass": [162, 18, 17]}
{"time": "2021-02-19 11:24:27.548248", "score": "0.8487", "loss": "0.6759", "code": "Str toString() { St; for (i0; iize;) { p; if (i) re.append(\", \"); }append(\"]\"); reting(); }", "n_tokens": 91, "n_pass": [164, 19, 18]}
{"time": "2021-02-19 11:24:28.884069", "score": "0.5155", "loss": "2.5119", "code": "Str toString() { St; for (i0; iize;) { p; if (i) reend(\", \"); }append(\"]\"); reting(); }", "n_tokens": 87, "n_pass": [165, 20, 19]}
{"time": "2021-02-19 11:24:30.209780", "score": "0.6148", "loss": "1.9461", "code": "Str toString() { St; for (i0; iize;) { p; if (i) reend(); }append(\"]\"); reting(); }", "n_tokens": 83, "n_pass": [167, 21, 20]}
{"time": "2021-02-19 11:24:32.879156", "score": "0.7609", "loss": "1.1449", "code": "Str toString() { St; for (i0; iize;) { p; if (i) reend(); }append(\"]\");ing(); }", "n_tokens": 79, "n_pass": [172, 23, 21]}
{"time": "2021-02-19 11:24:35.693199", "score": "0.5983", "loss": "2.0098", "code": "Str toString() { St; for (i0; iize;) { p; if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 75, "n_pass": [192, 24, 22]}
{"time": "2021-02-19 11:24:48.431891", "score": "0.5841", "loss": "2.2458", "code": "Str toString() { ; for (i0; iize;) { p; if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 73, "n_pass": [277, 30, 23]}
{"time": "2021-02-19 11:24:49.744534", "score": "0.5841", "loss": "2.2458", "code": "Str toString() { for (i0; iize;) { p; if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 71, "n_pass": [278, 31, 24]}
{"time": "2021-02-19 11:24:51.070492", "score": "0.7196", "loss": "1.7509", "code": "Str toString() { for (i0;ize;) { p; if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 69, "n_pass": [283, 32, 25]}
{"time": "2021-02-19 11:24:52.394634", "score": "0.6784", "loss": "2.0123", "code": "Str toString() { for (i0;e;) { p; if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 67, "n_pass": [284, 33, 26]}
{"time": "2021-02-19 11:24:53.734758", "score": "0.5506", "loss": "3.4285", "code": "Str toString() { for (i0;e;) {  if (i) reend(); }nd(\"]\");ing(); }", "n_tokens": 65, "n_pass": [288, 34, 27]}
{"time": "2021-02-19 11:24:55.056616", "score": "0.634", "loss": "3.1635", "code": "Str toString() { for (i0;e;) {  if (i) end(); }nd(\"]\");ing(); }", "n_tokens": 63, "n_pass": [293, 35, 28]}
{"time": "2021-02-19 11:24:57.705739", "score": "0.5742", "loss": "2.67", "code": "Str toString() { for (i0;e;) {  if (i) end(); }(\"]\");ing(); }", "n_tokens": 61, "n_pass": [298, 37, 29]}
{"time": "2021-02-19 11:25:06.913070", "score": "0.6547", "loss": "2.2334", "code": "Str toString() { for (i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 59, "n_pass": [330, 42, 30]}
{"time": "2021-02-19 11:25:10.907102", "score": "0.5568", "loss": "3.2854", "code": "Sr toString() { for (i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 58, "n_pass": [342, 45, 31]}
{"time": "2021-02-19 11:25:12.221156", "score": "0.5569", "loss": "3.4693", "code": "S toString() { for (i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 57, "n_pass": [343, 46, 32]}
{"time": "2021-02-19 11:25:23.979890", "score": "0.5569", "loss": "3.4693", "code": "S toString(){ for (i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 56, "n_pass": [431, 48, 33]}
{"time": "2021-02-19 11:25:25.307834", "score": "0.5569", "loss": "3.4693", "code": "S toString(){for (i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 55, "n_pass": [433, 49, 34]}
{"time": "2021-02-19 11:25:26.627947", "score": "0.5569", "loss": "3.4693", "code": "S toString(){for(i0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 54, "n_pass": [437, 50, 35]}
{"time": "2021-02-19 11:25:28.034290", "score": "0.5307", "loss": "3.4516", "code": "S toString(){for(0;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 53, "n_pass": [439, 51, 36]}
{"time": "2021-02-19 11:25:29.349774", "score": "0.5935", "loss": "3.35", "code": "S toString(){for(;e;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 52, "n_pass": [440, 52, 37]}
{"time": "2021-02-19 11:25:30.664048", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;) {  if (i) d(); }(\"]\");ing(); }", "n_tokens": 51, "n_pass": [442, 53, 38]}
{"time": "2021-02-19 11:25:31.975456", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){  if (i) d(); }(\"]\");ing(); }", "n_tokens": 50, "n_pass": [445, 54, 39]}
{"time": "2021-02-19 11:25:33.284777", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){ if (i) d(); }(\"]\");ing(); }", "n_tokens": 49, "n_pass": [447, 55, 40]}
{"time": "2021-02-19 11:25:34.600803", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){if (i) d(); }(\"]\");ing(); }", "n_tokens": 48, "n_pass": [448, 56, 41]}
{"time": "2021-02-19 11:25:35.910523", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){if(i) d(); }(\"]\");ing(); }", "n_tokens": 47, "n_pass": [451, 57, 42]}
{"time": "2021-02-19 11:25:37.223421", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){if(i)d(); }(\"]\");ing(); }", "n_tokens": 46, "n_pass": [455, 58, 43]}
{"time": "2021-02-19 11:25:38.554687", "score": "0.6817", "loss": "2.3546", "code": "S toString(){for(;;){if(i)d();}(\"]\");ing(); }", "n_tokens": 45, "n_pass": [460, 59, 44]}
{"time": "2021-02-19 11:25:39.864575", "score": "0.4787", "loss": "4.1572", "code": "S toString(){for(;;){if(i)d();}(\"\");ing(); }", "n_tokens": 44, "n_pass": [464, 60, 45]}
{"time": "2021-02-19 11:25:41.164888", "score": "0.4896", "loss": "3.9945", "code": "S toString(){for(;;){if(i)d();}(\"\");ng(); }", "n_tokens": 43, "n_pass": [468, 61, 46]}
{"time": "2021-02-19 11:25:45.095086", "score": "0.4896", "loss": "3.9945", "code": "S toString(){for(;;){if(i)d();}(\"\");ng();}", "n_tokens": 42, "n_pass": [474, 64, 47]}

Minimal simplified code:
S toString(){for(;;){if(i)d();}("");ng();}

