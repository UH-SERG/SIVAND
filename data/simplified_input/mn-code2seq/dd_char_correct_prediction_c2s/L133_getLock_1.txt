
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/service/spi/src/main/java/org/kaazing/gateway/service/collections/MemoryCollectionsFactory_getLock.java
method_name = getLock
method_body = @Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { ILockImpl newLock = new ILockImpl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }
predict, score, loss = getLock, 0.7746074795722961, 0.6959367394447327

Trace of simplified code(s):
{"time": "2021-02-19 16:40:58.670309", "score": "0.7746", "loss": "0.6959", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { ILockImpl newLock = new ILockImpl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 243, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 16:41:00.082902", "score": "0.7558", "loss": "0.7244", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { Ipl(name); locks.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 213, "n_pass": [24, 2, 2]}
{"time": "2021-02-19 16:41:01.436287", "score": "0.8368", "loss": "0.4975", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(name, newLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 198, "n_pass": [46, 3, 3]}
{"time": "2021-02-19 16:41:03.168596", "score": "0.8458", "loss": "0.4606", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lock = newLock; } assert (lock != null); return lock; } }", "n_tokens": 190, "n_pass": [87, 4, 4]}
{"time": "2021-02-19 16:41:04.510616", "score": "0.8749", "loss": "0.3728", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; } assert (lock != null); return lock; } }", "n_tokens": 182, "n_pass": [89, 5, 5]}
{"time": "2021-02-19 16:41:05.867675", "score": "0.862", "loss": "0.4243", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); return lock; } }", "n_tokens": 174, "n_pass": [91, 6, 6]}
{"time": "2021-02-19 16:41:07.211576", "score": "0.6508", "loss": "1.2063", "code": "@Override public ILock getLock(String name) { synchronized (locks) { ILock lock = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 166, "n_pass": [94, 7, 7]}
{"time": "2021-02-19 16:41:11.625243", "score": "0.6669", "loss": "1.0004", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Ik = locks.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 158, "n_pass": [106, 10, 8]}
{"time": "2021-02-19 16:41:12.966141", "score": "0.5792", "loss": "1.3944", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock == null) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 150, "n_pass": [107, 11, 9]}
{"time": "2021-02-19 16:41:18.726784", "score": "0.5682", "loss": "1.4615", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) { I.put(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 146, "n_pass": [174, 15, 10]}
{"time": "2021-02-19 16:41:20.068927", "score": "0.5798", "loss": "1.4612", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) {ut(nLock); lwLock; }(lock != null); ock; } }", "n_tokens": 142, "n_pass": [175, 16, 11]}
{"time": "2021-02-19 16:41:21.410556", "score": "0.6444", "loss": "1.2473", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) {ut(n); lwLock; }(lock != null); ock; } }", "n_tokens": 138, "n_pass": [177, 17, 12]}
{"time": "2021-02-19 16:41:22.757356", "score": "0.7021", "loss": "1.077", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) {ut(n); lk; }(lock != null); ock; } }", "n_tokens": 134, "n_pass": [179, 18, 13]}
{"time": "2021-02-19 16:41:24.098959", "score": "0.6905", "loss": "1.0785", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) {ut(n); lk; }(lock !=l); ock; } }", "n_tokens": 130, "n_pass": [183, 19, 14]}
{"time": "2021-02-19 16:41:25.476703", "score": "0.6407", "loss": "1.3569", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (lock ==l) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 126, "n_pass": [185, 20, 15]}
{"time": "2021-02-19 16:41:36.000315", "score": "0.7484", "loss": "1.0067", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(lock !=l);  } }", "n_tokens": 122, "n_pass": [212, 27, 16]}
{"time": "2021-02-19 16:41:37.341794", "score": "0.8559", "loss": "0.7011", "code": "@Override public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 118, "n_pass": [218, 28, 17]}
{"time": "2021-02-19 16:41:38.701656", "score": "0.7675", "loss": "1.0948", "code": "@Ovide public ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 115, "n_pass": [222, 29, 18]}
{"time": "2021-02-19 16:41:41.417551", "score": "0.7675", "loss": "1.0948", "code": "@Ovideblic ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 112, "n_pass": [224, 31, 19]}
{"time": "2021-02-19 16:41:42.857787", "score": "0.7675", "loss": "1.0948", "code": "@Ovidec ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 109, "n_pass": [225, 32, 20]}
{"time": "2021-02-19 16:41:48.332343", "score": "0.7223", "loss": "1.2805", "code": "@Ovc ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 106, "n_pass": [254, 35, 21]}
{"time": "2021-02-19 16:41:54.531540", "score": "0.7145", "loss": "1.2664", "code": "@Oc ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 105, "n_pass": [339, 38, 22]}
{"time": "2021-02-19 16:41:55.856010", "score": "0.7445", "loss": "1.1695", "code": "@O ILock getLock(String name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 104, "n_pass": [340, 39, 23]}
{"time": "2021-02-19 16:42:03.079604", "score": "0.7011", "loss": "1.4386", "code": "@O ILock getLock(Sing name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 102, "n_pass": [350, 43, 24]}
{"time": "2021-02-19 16:42:04.409735", "score": "0.7545", "loss": "1.0948", "code": "@O ILock getLock(Sg name) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 100, "n_pass": [351, 44, 25]}
{"time": "2021-02-19 16:42:05.763515", "score": "0.7595", "loss": "1.1379", "code": "@O ILock getLock(Sg me) { synchronized (locks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 98, "n_pass": [353, 45, 26]}
{"time": "2021-02-19 16:42:07.098193", "score": "0.7643", "loss": "1.1572", "code": "@O ILock getLock(Sg me) { synchronized (cks) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 96, "n_pass": [364, 46, 27]}
{"time": "2021-02-19 16:42:08.423418", "score": "0.7818", "loss": "1.1314", "code": "@O ILock getLock(Sg me) { synchronized (s) { Is.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 94, "n_pass": [365, 47, 28]}
{"time": "2021-02-19 16:42:09.767440", "score": "0.7943", "loss": "1.0568", "code": "@O ILock getLock(Sg me) { synchronized (s) {s.get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 92, "n_pass": [368, 48, 29]}
{"time": "2021-02-19 16:42:11.112016", "score": "0.7863", "loss": "1.1359", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(name); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 90, "n_pass": [369, 49, 30]}
{"time": "2021-02-19 16:42:13.754669", "score": "0.6995", "loss": "1.5572", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(me); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 88, "n_pass": [372, 51, 31]}
{"time": "2021-02-19 16:42:15.095804", "score": "0.7135", "loss": "1.5308", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(); if (locl) {ut(n); lk; }(locl);  } }", "n_tokens": 86, "n_pass": [373, 52, 32]}
{"time": "2021-02-19 16:42:17.753465", "score": "0.8033", "loss": "1.2151", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(); if (locl) {(n); lk; }(locl);  } }", "n_tokens": 84, "n_pass": [381, 54, 33]}
{"time": "2021-02-19 16:42:19.088706", "score": "0.801", "loss": "1.2959", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(); if (locl) {(n);k; }(locl);  } }", "n_tokens": 82, "n_pass": [384, 55, 34]}
{"time": "2021-02-19 16:42:20.414377", "score": "0.8565", "loss": "1.0205", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(); if (locl) {(n); }(locl);  } }", "n_tokens": 80, "n_pass": [385, 56, 35]}
{"time": "2021-02-19 16:42:21.736828", "score": "0.6989", "loss": "1.8459", "code": "@O ILock getLock(Sg me) { synchronized (s) {get(); if (locl) {(n); }(ll);  } }", "n_tokens": 78, "n_pass": [388, 57, 36]}
{"time": "2021-02-19 16:42:23.813417", "score": "0.6459", "loss": "1.7952", "code": "@O Lock getLock(Sg me) { synchronized (s) {get(); if (locl) {(n); }(ll);  } }", "n_tokens": 77, "n_pass": [396, 58, 37]}
{"time": "2021-02-19 16:42:29.292060", "score": "0.4945", "loss": "2.7045", "code": "@O Lock getLock(Sg me) { synchronized (s) {t(); if (locl) {(n); }(ll);  } }", "n_tokens": 75, "n_pass": [417, 61, 38]}
{"time": "2021-02-19 16:42:42.287753", "score": "0.4945", "loss": "2.7045", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if (locl) {(n); }(ll);  } }", "n_tokens": 74, "n_pass": [532, 65, 39]}
{"time": "2021-02-19 16:42:43.632161", "score": "0.4945", "loss": "2.7045", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl) {(n); }(ll);  } }", "n_tokens": 73, "n_pass": [534, 66, 40]}
{"time": "2021-02-19 16:42:50.280293", "score": "0.4945", "loss": "2.7045", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n); }(ll);  } }", "n_tokens": 72, "n_pass": [541, 71, 41]}
{"time": "2021-02-19 16:42:51.632745", "score": "0.4945", "loss": "2.7045", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n);}(ll);  } }", "n_tokens": 71, "n_pass": [547, 72, 42]}
{"time": "2021-02-19 16:42:52.974644", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n);}(l);  } }", "n_tokens": 70, "n_pass": [550, 73, 43]}
{"time": "2021-02-19 16:42:54.317267", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n);}(l); } }", "n_tokens": 69, "n_pass": [554, 74, 44]}
{"time": "2021-02-19 16:42:55.655193", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n);}(l);} }", "n_tokens": 68, "n_pass": [555, 75, 45]}
{"time": "2021-02-19 16:42:56.977779", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me) { synchronized (s) {t();if(locl){(n);}(l);}}", "n_tokens": 67, "n_pass": [557, 76, 46]}
{"time": "2021-02-19 16:43:12.637324", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me){ synchronized (s) {t();if(locl){(n);}(l);}}", "n_tokens": 66, "n_pass": [581, 85, 47]}
{"time": "2021-02-19 16:43:13.976627", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me){synchronized (s) {t();if(locl){(n);}(l);}}", "n_tokens": 65, "n_pass": [583, 86, 48]}
{"time": "2021-02-19 16:43:15.323236", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me){synchronized(s) {t();if(locl){(n);}(l);}}", "n_tokens": 64, "n_pass": [596, 87, 49]}
{"time": "2021-02-19 16:43:16.658388", "score": "0.4963", "loss": "2.5224", "code": "@O Lock getLock(Sg me){synchronized(s){t();if(locl){(n);}(l);}}", "n_tokens": 63, "n_pass": [600, 88, 50]}

Minimal simplified code:
@O Lock getLock(Sg me){synchronized(s){t();if(locl){(n);}(l);}}

