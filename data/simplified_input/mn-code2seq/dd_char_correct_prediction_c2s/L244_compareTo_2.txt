
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/gui/core/SortableAndSearchableWrapperTableModel_compareTo.java
method_name = compareTo
method_body = public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }
predict, score, loss = compareTo, 0.9883477687835693, 0.031827330589294434

Trace of simplified code(s):
{"time": "2021-02-20 00:02:32.791043", "score": "0.9873", "loss": "0.0343", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 353, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 00:02:34.168309", "score": "0.9836", "loss": "0.0445", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.comparing().compareTo(o.getValue().toString()); } }", "n_tokens": 309, "n_pass": [26, 2, 2]}
{"time": "2021-02-20 00:02:35.655793", "score": "0.914", "loss": "0.2127", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.comparing().compareTo(o.getValue().toString()); } }", "n_tokens": 287, "n_pass": [56, 3, 3]}
{"time": "2021-02-20 00:02:37.177319", "score": "0.9558", "loss": "0.1242", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))ing().compareTo(o.getValue().toString()); } }", "n_tokens": 265, "n_pass": [60, 4, 4]}
{"time": "2021-02-20 00:02:38.540824", "score": "0.8526", "loss": "0.4987", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))reTo(o.getValue().toString()); } }", "n_tokens": 254, "n_pass": [97, 5, 5]}
{"time": "2021-02-20 00:02:39.912066", "score": "0.8432", "loss": "0.5659", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))reTo(o.getVring()); } }", "n_tokens": 243, "n_pass": [98, 6, 6]}
{"time": "2021-02-20 00:02:41.643194", "score": "0.8335", "loss": "0.5559", "code": "public int compareTo(Sr o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))reTo(o.getVring()); } }", "n_tokens": 232, "n_pass": [102, 7, 7]}
{"time": "2021-02-20 00:02:43.031533", "score": "0.8773", "loss": "0.4708", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))reTo(o.getVring()); } }", "n_tokens": 221, "n_pass": [105, 8, 8]}
{"time": "2021-02-20 00:02:44.462698", "score": "0.8536", "loss": "0.5936", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.getClass().equals(o.getValue().getClass()))reTo(o.getVring()); } }", "n_tokens": 210, "n_pass": [109, 9, 9]}
{"time": "2021-02-20 00:02:45.831034", "score": "0.9063", "loss": "0.3523", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(o.getValue().getClass()))reTo(o.getVring()); } }", "n_tokens": 199, "n_pass": [116, 10, 10]}
{"time": "2021-02-20 00:02:47.176892", "score": "0.9176", "loss": "0.3428", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(o.getClass()))reTo(o.getVring()); } }", "n_tokens": 188, "n_pass": [118, 11, 11]}
{"time": "2021-02-20 00:02:48.959258", "score": "0.909", "loss": "0.3741", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(o.getVring()); } }", "n_tokens": 182, "n_pass": [170, 12, 12]}
{"time": "2021-02-20 00:02:50.330106", "score": "0.8976", "loss": "0.4028", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(ring()); } }", "n_tokens": 176, "n_pass": [173, 13, 13]}
{"time": "2021-02-20 00:02:51.666016", "score": "0.926", "loss": "0.265", "code": "public int compareTo(Sr o) { if ((m_Value ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 170, "n_pass": [174, 14, 14]}
{"time": "2021-02-20 00:02:55.105512", "score": "0.8913", "loss": "0.4045", "code": "public int compareTo(Sr o) { if ((me ==o.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 165, "n_pass": [183, 16, 15]}
{"time": "2021-02-20 00:02:56.437515", "score": "0.9043", "loss": "0.3051", "code": "public int compareTo(Sr o) { if ((m.getValue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 160, "n_pass": [184, 17, 16]}
{"time": "2021-02-20 00:02:57.781430", "score": "0.8845", "loss": "0.4329", "code": "public int compareTo(Sr o) { if ((malue() == null)) { if (m_VatValue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 155, "n_pass": [185, 18, 17]}
{"time": "2021-02-20 00:02:59.152265", "score": "0.8408", "loss": "0.6535", "code": "public int compareTo(Sr o) { if ((malue() == null)) { if (m_lue()) return 0; if (m_Value == null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 150, "n_pass": [191, 19, 18]}
{"time": "2021-02-20 00:03:00.513578", "score": "0.6825", "loss": "1.3992", "code": "public int compareTo(Sr o) { if ((malue() == null)) { if (m_lue()) return 0; if (m_V= null) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 144, "n_pass": [196, 20, 19]}
{"time": "2021-02-20 00:03:01.858161", "score": "0.7892", "loss": "0.9764", "code": "public int compareTo(Sr o) { if ((malue() == null)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass()))reTo(); } }", "n_tokens": 138, "n_pass": [197, 21, 20]}
{"time": "2021-02-20 00:03:04.536977", "score": "0.7979", "loss": "0.8172", "code": "public int compareTo(Sr o) { if ((malue() == null)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 132, "n_pass": [205, 23, 21]}
{"time": "2021-02-20 00:03:14.152403", "score": "0.8073", "loss": "0.7882", "code": "public int compareTo(Sr o) { if ((ma() == null)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 129, "n_pass": [296, 28, 22]}
{"time": "2021-02-20 00:03:15.506221", "score": "0.7928", "loss": "0.824", "code": "public int compareTo(Sr o) { if ((ma== null)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 126, "n_pass": [297, 29, 23]}
{"time": "2021-02-20 00:03:17.171718", "score": "0.8339", "loss": "0.6663", "code": "public int compareTo(Sr o) { if ((manull)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 123, "n_pass": [298, 30, 24]}
{"time": "2021-02-20 00:03:18.702731", "score": "0.8937", "loss": "0.4277", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_lue()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 120, "n_pass": [299, 31, 25]}
{"time": "2021-02-20 00:03:20.139074", "score": "0.9021", "loss": "0.3854", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()) return 0; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 117, "n_pass": [304, 32, 26]}
{"time": "2021-02-20 00:03:21.481617", "score": "0.7008", "loss": "1.1577", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()) retur; if (m_V) ret; } else { if (m_Value.equals(oass())); } }", "n_tokens": 114, "n_pass": [308, 33, 27]}
{"time": "2021-02-20 00:03:25.497140", "score": "0.6046", "loss": "1.5088", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()) retur; if (m_V) ret; } else { if (m_Va.equals(oass())); } }", "n_tokens": 111, "n_pass": [320, 36, 28]}
{"time": "2021-02-20 00:03:29.556639", "score": "0.6566", "loss": "1.2247", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()) retur; if (m_V) ret; } else { if (m_Va.equals(o())); } }", "n_tokens": 108, "n_pass": [324, 39, 29]}
{"time": "2021-02-20 00:03:35.432006", "score": "0.7334", "loss": "0.9193", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_())tur; if (m_V) ret; } else { if (m_Va.equals(o())); } }", "n_tokens": 105, "n_pass": [349, 42, 30]}
{"time": "2021-02-20 00:03:36.800375", "score": "0.7585", "loss": "0.8396", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()); if (m_V) ret; } else { if (m_Va.equals(o())); } }", "n_tokens": 102, "n_pass": [350, 43, 31]}
{"time": "2021-02-20 00:03:38.250017", "score": "0.719", "loss": "1.0665", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()); if (m_V) ret; } else { (m_Va.equals(o())); } }", "n_tokens": 99, "n_pass": [359, 44, 32]}
{"time": "2021-02-20 00:03:39.571061", "score": "0.5882", "loss": "1.5163", "code": "public int compareTo(Sr o) { if ((mal)) { if (m_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 96, "n_pass": [361, 45, 33]}
{"time": "2021-02-20 00:03:48.083073", "score": "0.6493", "loss": "1.2821", "code": "public int compareTo(Sr o) { if ((mal)) { (m_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 93, "n_pass": [386, 50, 34]}
{"time": "2021-02-20 00:03:59.484003", "score": "0.6032", "loss": "1.6627", "code": "public int compareTo(Sr o) { if ((ma)) { (m_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 92, "n_pass": [492, 55, 35]}
{"time": "2021-02-20 00:04:00.838053", "score": "0.6032", "loss": "1.6627", "code": "public int compareTo(Sr o) { if ((ma)){ (m_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 91, "n_pass": [495, 56, 36]}
{"time": "2021-02-20 00:04:02.151284", "score": "0.6032", "loss": "1.6627", "code": "public int compareTo(Sr o) { if ((ma)){(m_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 90, "n_pass": [497, 57, 37]}
{"time": "2021-02-20 00:04:03.500846", "score": "0.5044", "loss": "2.279", "code": "public int compareTo(Sr o) { if ((ma)){(_()); if (m_V) ret; } else { (m.equals(o())); } }", "n_tokens": 89, "n_pass": [499, 58, 38]}
{"time": "2021-02-20 00:04:06.206067", "score": "0.5801", "loss": "1.8144", "code": "public int compareTo(Sr o) { if ((ma)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 87, "n_pass": [509, 60, 39]}
{"time": "2021-02-20 00:04:20.576248", "score": "0.6442", "loss": "1.4788", "code": "public int compareTo(r o) { if ((ma)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 86, "n_pass": [547, 68, 40]}
{"time": "2021-02-20 00:04:21.891764", "score": "0.6442", "loss": "1.4788", "code": "public int compareTo(r o){ if ((ma)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 85, "n_pass": [552, 69, 41]}
{"time": "2021-02-20 00:04:23.229622", "score": "0.6442", "loss": "1.4788", "code": "public int compareTo(r o){if ((ma)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 84, "n_pass": [554, 70, 42]}
{"time": "2021-02-20 00:04:24.685875", "score": "0.6442", "loss": "1.4788", "code": "public int compareTo(r o){if((ma)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 83, "n_pass": [557, 71, 43]}
{"time": "2021-02-20 00:04:27.342274", "score": "0.6955", "loss": "1.0936", "code": "public int compareTo(r o){if((m)){(_()); if (m_V) t; } else { (m.equals(o())); } }", "n_tokens": 82, "n_pass": [561, 73, 44]}
{"time": "2021-02-20 00:04:28.699648", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_()); if (m) t; } else { (m.equals(o())); } }", "n_tokens": 80, "n_pass": [573, 74, 45]}
{"time": "2021-02-20 00:04:47.104410", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_()); if (m) t; } else{ (m.equals(o())); } }", "n_tokens": 79, "n_pass": [676, 82, 46]}
{"time": "2021-02-20 00:04:48.437934", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_()); if (m) t; } else{(m.equals(o())); } }", "n_tokens": 78, "n_pass": [678, 83, 47]}
{"time": "2021-02-20 00:04:59.097657", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_()); if (m) t; } else{(m.equals(o()));} }", "n_tokens": 77, "n_pass": [695, 91, 48]}
{"time": "2021-02-20 00:05:00.479610", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_()); if (m) t; } else{(m.equals(o()));}}", "n_tokens": 76, "n_pass": [697, 92, 49]}
{"time": "2021-02-20 00:05:10.810031", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_());if (m) t; } else{(m.equals(o()));}}", "n_tokens": 75, "n_pass": [739, 97, 50]}
{"time": "2021-02-20 00:05:12.125987", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_());if(m) t; } else{(m.equals(o()));}}", "n_tokens": 74, "n_pass": [742, 98, 51]}
{"time": "2021-02-20 00:05:13.575925", "score": "0.6124", "loss": "1.471", "code": "public int compareTo(r o){if((m)){(_());if(m)t; } else{(m.equals(o()));}}", "n_tokens": 73, "n_pass": [746, 99, 52]}
{"time": "2021-02-20 00:05:14.887433", "score": "0.6828", "loss": "1.0874", "code": "public int compareTo(r o){if((m)){(_());if(m); } else{(m.equals(o()));}}", "n_tokens": 72, "n_pass": [747, 100, 53]}
{"time": "2021-02-20 00:05:16.221876", "score": "0.6828", "loss": "1.0874", "code": "public int compareTo(r o){if((m)){(_());if(m);} else{(m.equals(o()));}}", "n_tokens": 71, "n_pass": [749, 101, 54]}
{"time": "2021-02-20 00:05:17.636579", "score": "0.6828", "loss": "1.0874", "code": "public int compareTo(r o){if((m)){(_());if(m);}else{(m.equals(o()));}}", "n_tokens": 70, "n_pass": [751, 102, 55]}

Minimal simplified code:
public int compareTo(r o){if((m)){(_());if(m);}else{(m.equals(o()));}}

