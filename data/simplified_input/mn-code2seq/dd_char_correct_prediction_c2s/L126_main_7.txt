
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/classifiers/multilabel/neurofuzzy/SparseVector_main.java
method_name = main
method_body = public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector b = new SparseVector(10); a.put(3, 0.50); a.put(9, 0.75); a.put(6, 0.11); a.put(6, 0.00); b.put(3, 0.60); b.put(4, 0.90); System.out.println("a = " + a); System.out.println("b = " + b); System.out.println("a dot b = " + a.dot(b)); System.out.println("a + b = " + a.plus(b)); }
predict, score, loss = main, 0.9999352693557739, 0.0001811899128369987

Trace of simplified code(s):
{"time": "2021-02-19 16:23:07.053809", "score": "0.9993", "loss": "0.0013", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector b = new SparseVector(10); a.put(3, 0.50); a.put(9, 0.75); a.put(6, 0.11); a.put(6, 0.00); b.put(3, 0.60); b.put(4, 0.90); System.out.println(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 369, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 16:23:08.454788", "score": "0.9929", "loss": "0.0123", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVector.put(3, 0.60); b.put(4, 0.90); System.out.println(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 277, "n_pass": [9, 2, 2]}
{"time": "2021-02-19 16:23:09.837859", "score": "0.9999", "loss": "0.0002", "code": "public static void main(String[] args) { SparseVector a = new SparseVector(10); SparseVectortln(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 231, "n_pass": [18, 3, 3]}
{"time": "2021-02-19 16:23:11.191958", "score": "0.9998", "loss": "0.0005", "code": "public static void main(String[] args) { Sparstln(\"a = \" + a); System.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 185, "n_pass": [22, 4, 4]}
{"time": "2021-02-19 16:23:12.545377", "score": "0.9996", "loss": "0.0008", "code": "public static void main(String[] args) { Spars.out.println(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 162, "n_pass": [35, 5, 5]}
{"time": "2021-02-19 16:23:13.897155", "score": "0.9997", "loss": "0.0008", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System.out.println(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 151, "n_pass": [56, 6, 6]}
{"time": "2021-02-19 16:23:15.257770", "score": "0.9997", "loss": "0.0007", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a dot b = \" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 139, "n_pass": [59, 7, 7]}
{"time": "2021-02-19 16:23:16.997643", "score": "0.9998", "loss": "0.0004", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); System.out.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 133, "n_pass": [97, 8, 8]}
{"time": "2021-02-19 16:23:18.340894", "score": "0.9999", "loss": "0.0005", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Syst.println(\"a + b = \" + a.plus(b)); }", "n_tokens": 127, "n_pass": [101, 9, 9]}
{"time": "2021-02-19 16:23:19.709791", "score": "0.9997", "loss": "0.0008", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a + b = \" + a.plus(b)); }", "n_tokens": 121, "n_pass": [102, 10, 10]}
{"time": "2021-02-19 16:23:21.078510", "score": "0.9996", "loss": "0.001", "code": "public static void main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 115, "n_pass": [104, 11, 11]}
{"time": "2021-02-19 16:23:22.444015", "score": "0.9987", "loss": "0.0026", "code": "public staoid main(String[] args) { Spatln(\"b = \" + b); System(\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 110, "n_pass": [110, 12, 12]}
{"time": "2021-02-19 16:23:24.151793", "score": "0.9949", "loss": "0.0091", "code": "public staoid main(String[] args) { Spatln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 104, "n_pass": [119, 13, 13]}
{"time": "2021-02-19 16:23:25.488314", "score": "0.9949", "loss": "0.0091", "code": "publioid main(String[] args) { Spatln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 99, "n_pass": [129, 14, 14]}
{"time": "2021-02-19 16:23:27.191985", "score": "0.9936", "loss": "0.0114", "code": "oid main(String[] args) { Spatln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 94, "n_pass": [146, 15, 15]}
{"time": "2021-02-19 16:23:28.924356", "score": "0.9958", "loss": "0.0074", "code": "d main(String[] args) { Spatln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 92, "n_pass": [195, 16, 16]}
{"time": "2021-02-19 16:23:31.017258", "score": "0.9919", "loss": "0.0111", "code": "d main(Sng[] args) { Spatln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 89, "n_pass": [199, 17, 17]}
{"time": "2021-02-19 16:23:33.693848", "score": "0.9919", "loss": "0.0111", "code": "d main(Sng[] args) {atln(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 86, "n_pass": [204, 19, 18]}
{"time": "2021-02-19 16:23:35.030713", "score": "0.9918", "loss": "0.0104", "code": "d main(Sng[] args) {n(\"b = \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 83, "n_pass": [205, 20, 19]}
{"time": "2021-02-19 16:23:36.361473", "score": "0.991", "loss": "0.0119", "code": "d main(Sng[] args) {n(\" \" + b); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 80, "n_pass": [207, 21, 20]}
{"time": "2021-02-19 16:23:37.724796", "score": "0.9816", "loss": "0.0257", "code": "d main(Sng[] args) {n(\" \" ); (\"a do\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 77, "n_pass": [209, 22, 21]}
{"time": "2021-02-19 16:23:39.070780", "score": "0.984", "loss": "0.0245", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" + a.dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 74, "n_pass": [212, 23, 22]}
{"time": "2021-02-19 16:23:40.429640", "score": "0.9843", "loss": "0.0255", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +dot(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 71, "n_pass": [214, 24, 23]}
{"time": "2021-02-19 16:23:41.739851", "score": "0.943", "loss": "0.0938", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +(b)); Systln(\"a \" + a.plus(b)); }", "n_tokens": 68, "n_pass": [215, 25, 24]}
{"time": "2021-02-19 16:23:43.088852", "score": "0.9297", "loss": "0.114", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +(b)); tln(\"a \" + a.plus(b)); }", "n_tokens": 65, "n_pass": [218, 26, 25]}
{"time": "2021-02-19 16:23:44.407609", "score": "0.7584", "loss": "0.4827", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +(b)); (\"a \" + a.plus(b)); }", "n_tokens": 62, "n_pass": [219, 27, 26]}
{"time": "2021-02-19 16:23:45.730182", "score": "0.5824", "loss": "0.9383", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +(b)); (\"a \" .plus(b)); }", "n_tokens": 59, "n_pass": [222, 28, 27]}
{"time": "2021-02-19 16:23:50.806193", "score": "0.3923", "loss": "1.4772", "code": "d main(Sng[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 57, "n_pass": [283, 30, 28]}
{"time": "2021-02-19 16:23:57.018068", "score": "0.4722", "loss": "1.4199", "code": "d main(Sg[] args) {n(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 56, "n_pass": [299, 33, 29]}
{"time": "2021-02-19 16:23:59.664596", "score": "0.4722", "loss": "1.4199", "code": "d main(Sg[]args) {n(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 55, "n_pass": [303, 35, 30]}
{"time": "2021-02-19 16:24:06.276916", "score": "0.4722", "loss": "1.4199", "code": "d main(Sg[]args){n(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 54, "n_pass": [309, 40, 31]}
{"time": "2021-02-19 16:24:07.634791", "score": "0.4485", "loss": "1.7072", "code": "d main(Sg[]args){(\" \" ); (\"a\" +(b)); (\"\" .plus(b)); }", "n_tokens": 53, "n_pass": [311, 41, 32]}
{"time": "2021-02-19 16:24:08.964213", "score": "0.3646", "loss": "1.8533", "code": "d main(Sg[]args){(\" \" ); (\"a\" +(b)); (\"\" .ps(b)); }", "n_tokens": 51, "n_pass": [325, 42, 33]}
{"time": "2021-02-19 16:24:23.838654", "score": "0.4485", "loss": "1.7041", "code": "d main(Sg[]args){(\" \" ); (\"a\" +(b)); (\"\" .ps()); }", "n_tokens": 50, "n_pass": [394, 49, 34]}
{"time": "2021-02-19 16:24:25.153158", "score": "0.4485", "loss": "1.7041", "code": "d main(Sg[]args){(\" \" ); (\"a\" +(b)); (\"\" .ps());}", "n_tokens": 49, "n_pass": [397, 50, 35]}
{"time": "2021-02-19 16:24:36.655196", "score": "0.5596", "loss": "1.3464", "code": "d main(Sg[]args){(\"\" ); (\"a\" +(b)); (\"\" .ps());}", "n_tokens": 48, "n_pass": [418, 57, 36]}
{"time": "2021-02-19 16:24:37.968655", "score": "0.5596", "loss": "1.3464", "code": "d main(Sg[]args){(\"\"); (\"a\" +(b)); (\"\" .ps());}", "n_tokens": 47, "n_pass": [420, 58, 37]}
{"time": "2021-02-19 16:24:39.284868", "score": "0.5596", "loss": "1.3464", "code": "d main(Sg[]args){(\"\");(\"a\" +(b)); (\"\" .ps());}", "n_tokens": 46, "n_pass": [423, 59, 38]}
{"time": "2021-02-19 16:24:40.597704", "score": "0.4111", "loss": "2.0034", "code": "d main(Sg[]args){(\"\");(\"\" +(b)); (\"\" .ps());}", "n_tokens": 45, "n_pass": [426, 60, 39]}
{"time": "2021-02-19 16:24:41.919084", "score": "0.4111", "loss": "2.0034", "code": "d main(Sg[]args){(\"\");(\"\"+(b)); (\"\" .ps());}", "n_tokens": 44, "n_pass": [428, 61, 40]}
{"time": "2021-02-19 16:24:43.254555", "score": "0.4111", "loss": "2.0034", "code": "d main(Sg[]args){(\"\");(\"\"+(b));(\"\" .ps());}", "n_tokens": 43, "n_pass": [435, 62, 41]}
{"time": "2021-02-19 16:24:44.566358", "score": "0.4111", "loss": "2.0034", "code": "d main(Sg[]args){(\"\");(\"\"+(b));(\"\".ps());}", "n_tokens": 42, "n_pass": [439, 63, 42]}
{"time": "2021-02-19 16:24:45.875975", "score": "0.4174", "loss": "1.901", "code": "d main(Sg[]args){(\"\");(\"\"+(b));(\"\".s());}", "n_tokens": 41, "n_pass": [441, 64, 43]}
{"time": "2021-02-19 16:24:49.404193", "score": "0.3199", "loss": "1.9833", "code": "d main(g[]args){(\"\");(\"\"+(b));(\"\".s());}", "n_tokens": 40, "n_pass": [455, 65, 44]}

Minimal simplified code:
d main(g[]args){("");(""+(b));("".s());}

