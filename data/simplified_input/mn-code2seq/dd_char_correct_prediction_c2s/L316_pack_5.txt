
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_hil_rc_inputs_raw_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(chan4_raw); packet.payload.putUnsignedShort(chan5_raw); packet.payload.putUnsignedShort(chan6_raw); packet.payload.putUnsignedShort(chan7_raw); packet.payload.putUnsignedShort(chan8_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }
predict, score, loss = pack, 0.8952251672744751, 0.11626693606376648

Trace of simplified code(s):
{"time": "2021-02-20 04:40:36.436803", "score": "0.9083", "loss": "0.101", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(chan4_raw); packet.payload.putUnsignedShort(chan5_raw); packet.payload.putUnsignedShort(chan6_raw); packet.payload.putUnsignedShort(chan7_raw); packet.payload.putUnsignedShort(chan8_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 810, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 04:40:37.808202", "score": "0.9286", "loss": "0.0815", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnket.payload.putUnsignedShort(chan5_raw); packet.payload.putUnsignedShort(chan6_raw); packet.payload.putUnsignedShort(chan7_raw); packet.payload.putUnsignedShort(chan8_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 608, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 04:40:39.233872", "score": "0.9536", "loss": "0.0535", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnt(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 405, "n_pass": [10, 3, 3]}
{"time": "2021-02-20 04:40:40.597305", "score": "0.9094", "loss": "0.0979", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.syt(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 304, "n_pass": [18, 4, 4]}
{"time": "2021-02-20 04:40:41.927056", "score": "0.9098", "loss": "0.0992", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.syt(chan9_raw); packet.payload.putUnsignedShort(chan); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 253, "n_pass": [28, 5, 5]}
{"time": "2021-02-20 04:40:43.254827", "score": "0.9183", "loss": "0.0943", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.syt(chan9_raw); packet.payload.putUnsignedShort(chan); packet.payload.putUnscket.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 227, "n_pass": [45, 6, 6]}
{"time": "2021-02-20 04:40:44.598440", "score": "0.8864", "loss": "0.1462", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.syt(chan9_raw); packet.payload.putUnsignedShort(chan); packet.payload.putUnste(rssi); return packet; }", "n_tokens": 201, "n_pass": [46, 7, 7]}
{"time": "2021-02-20 04:40:45.995274", "score": "0.9034", "loss": "0.1337", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sload.putUnsignedShort(chan); packet.payload.putUnste(rssi); return packet; }", "n_tokens": 176, "n_pass": [52, 8, 8]}
{"time": "2021-02-20 04:40:47.340966", "score": "0.7932", "loss": "0.4346", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packetignedShort(chan); packet.payload.putUnste(rssi); return packet; }", "n_tokens": 163, "n_pass": [74, 9, 9]}
{"time": "2021-02-20 04:40:48.705573", "score": "0.6228", "loss": "0.817", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packetignedShort(chan); packet.pte(rssi); return packet; }", "n_tokens": 150, "n_pass": [77, 10, 10]}
{"time": "2021-02-20 04:40:53.059092", "score": "0.748", "loss": "0.3827", "code": "public MAVLinkPacket pack() { MAVLinet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packetignedShort(chan); packet.pte(rssi); return packet; }", "n_tokens": 138, "n_pass": [83, 13, 11]}
{"time": "2021-02-20 04:40:54.390091", "score": "0.7372", "loss": "0.3737", "code": "public MAVLinkPacket pack() { MAVLinLinkPacket(MAVLINK_MSG_LENGTH); packetignedShort(chan); packet.pte(rssi); return packet; }", "n_tokens": 126, "n_pass": [84, 14, 12]}
{"time": "2021-02-20 04:40:55.698554", "score": "0.6534", "loss": "0.5734", "code": "public MAVLinkPacket pack() { MAVLinLinkPacket(MNGTH); packetignedShort(chan); packet.pte(rssi); return packet; }", "n_tokens": 113, "n_pass": [86, 15, 13]}
{"time": "2021-02-20 04:40:59.955373", "score": "0.6534", "loss": "0.5734", "code": "public MAVLinkPacket pack() { MAVLinLinkPacket(MNGTH);tignedShort(chan); packet.pte(rssi); return packet; }", "n_tokens": 107, "n_pass": [115, 18, 14]}
{"time": "2021-02-20 04:41:01.257582", "score": "0.716", "loss": "0.4064", "code": "public MAVLinkPacket pack() { MAVLinLinkPacket(MNGTH);Short(chan); packet.pte(rssi); return packet; }", "n_tokens": 101, "n_pass": [116, 19, 15]}
{"time": "2021-02-20 04:41:02.597337", "score": "0.7801", "loss": "0.2965", "code": "public MAVLinkPacket pack() { MAVLinLinkPacket(MNGTH);Short(chan); packet.pte(rssi); recket; }", "n_tokens": 94, "n_pass": [122, 20, 16]}
{"time": "2021-02-20 04:41:03.888433", "score": "0.7801", "loss": "0.2965", "code": " MAVLinkPacket pack() { MAVLinLinkPacket(MNGTH);Short(chan); packet.pte(rssi); recket; }", "n_tokens": 88, "n_pass": [124, 21, 17]}
{"time": "2021-02-20 04:41:05.195189", "score": "0.4766", "loss": "1.2754", "code": "nkPacket pack() { MAVLinLinkPacket(MNGTH);Short(chan); packet.pte(rssi); recket; }", "n_tokens": 82, "n_pass": [125, 22, 18]}
{"time": "2021-02-20 04:41:20.618215", "score": "0.6945", "loss": "0.7123", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(chan); packet.pte(rssi); recket; }", "n_tokens": 79, "n_pass": [177, 33, 19]}
{"time": "2021-02-20 04:41:23.211365", "score": "0.8478", "loss": "0.4148", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n); packet.pte(rssi); recket; }", "n_tokens": 76, "n_pass": [180, 35, 20]}
{"time": "2021-02-20 04:41:24.511844", "score": "0.8436", "loss": "0.4878", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n);cket.pte(rssi); recket; }", "n_tokens": 73, "n_pass": [182, 36, 21]}
{"time": "2021-02-20 04:41:25.813442", "score": "0.9098", "loss": "0.2653", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n);t.pte(rssi); recket; }", "n_tokens": 70, "n_pass": [183, 37, 22]}
{"time": "2021-02-20 04:41:27.100104", "score": "0.8796", "loss": "0.4029", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n);te(rssi); recket; }", "n_tokens": 67, "n_pass": [184, 38, 23]}
{"time": "2021-02-20 04:41:28.385618", "score": "0.9186", "loss": "0.4799", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n);te(); recket; }", "n_tokens": 63, "n_pass": [186, 39, 24]}
{"time": "2021-02-20 04:41:29.672310", "score": "0.9093", "loss": "0.3773", "code": "nkPacket pack() { MAVLinLinkPacket(MH);Short(n);te(); rt; }", "n_tokens": 59, "n_pass": [188, 40, 25]}
{"time": "2021-02-20 04:41:30.956572", "score": "0.7954", "loss": "0.8351", "code": "acket pack() { MAVLinLinkPacket(MH);Short(n);te(); rt; }", "n_tokens": 56, "n_pass": [190, 41, 26]}
{"time": "2021-02-20 04:41:32.232792", "score": "0.9098", "loss": "0.5224", "code": "et pack() { MAVLinLinkPacket(MH);Short(n);te(); rt; }", "n_tokens": 53, "n_pass": [191, 42, 27]}
{"time": "2021-02-20 04:41:40.684050", "score": "0.8701", "loss": "1.1025", "code": "et pack() { MAVLinLinkPacket(MH);rt(n);te(); rt; }", "n_tokens": 50, "n_pass": [203, 48, 28]}
{"time": "2021-02-20 04:41:50.246414", "score": "0.7637", "loss": "1.2027", "code": "et pack() { MAVLinLinkPacket(MH);rt(n);te();t; }", "n_tokens": 48, "n_pass": [259, 54, 29]}
{"time": "2021-02-20 04:41:52.849267", "score": "0.7055", "loss": "1.4441", "code": "t pack() { MAVLinLinkPacket(MH);rt(n);te();t; }", "n_tokens": 47, "n_pass": [262, 56, 30]}
{"time": "2021-02-20 04:41:56.240199", "score": "0.7055", "loss": "1.4441", "code": "t pack(){ MAVLinLinkPacket(MH);rt(n);te();t; }", "n_tokens": 46, "n_pass": [271, 57, 31]}
{"time": "2021-02-20 04:41:57.527659", "score": "0.7055", "loss": "1.4441", "code": "t pack(){MAVLinLinkPacket(MH);rt(n);te();t; }", "n_tokens": 45, "n_pass": [273, 58, 32]}
{"time": "2021-02-20 04:42:05.365698", "score": "0.5067", "loss": "2.1401", "code": "t pack(){MAVLinLiPacket(MH);rt(n);te();t; }", "n_tokens": 43, "n_pass": [279, 64, 33]}
{"time": "2021-02-20 04:42:23.331062", "score": "0.6666", "loss": "1.2815", "code": "t pack(){MAVLinLiPacket(H);rt(n);te();t; }", "n_tokens": 42, "n_pass": [341, 75, 34]}
{"time": "2021-02-20 04:42:24.616297", "score": "0.621", "loss": "1.4925", "code": "t pack(){MAVLinLiPacket();rt(n);te();t; }", "n_tokens": 41, "n_pass": [342, 76, 35]}
{"time": "2021-02-20 04:42:25.901221", "score": "0.7612", "loss": "1.7108", "code": "t pack(){MAVLinLiPacket();t(n);te();t; }", "n_tokens": 40, "n_pass": [345, 77, 36]}
{"time": "2021-02-20 04:42:28.528969", "score": "0.77", "loss": "1.3008", "code": "t pack(){MAVLinLiPacket();t();te();t; }", "n_tokens": 39, "n_pass": [348, 79, 37]}
{"time": "2021-02-20 04:42:29.812740", "score": "0.8552", "loss": "1.0408", "code": "t pack(){MAVLinLiPacket();t();e();t; }", "n_tokens": 38, "n_pass": [351, 80, 38]}
{"time": "2021-02-20 04:42:32.401207", "score": "0.8552", "loss": "1.0408", "code": "t pack(){MAVLinLiPacket();t();e();t;}", "n_tokens": 37, "n_pass": [358, 82, 39]}
{"time": "2021-02-20 04:42:41.008289", "score": "0.3631", "loss": "1.7217", "code": "t pack(){MAVLnLiPacket();t();e();t;}", "n_tokens": 36, "n_pass": [373, 87, 40]}

Minimal simplified code:
t pack(){MAVLnLiPacket();t();e();t;}

