
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/baiyuliang__QRobot/app/src/main/java/com/byl/qrobot/view/ProgressWebView_onScrollChanged.java
method_name = onScrollChanged
method_body = @SuppressWarnings("deprecation") @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }
predict, score, loss = onScrollChanged, 0.9972042441368103, 0.009382164105772972

Trace of simplified code(s):
{"time": "2021-02-19 17:47:23.972846", "score": "0.9972", "loss": "0.0094", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { onScrollChangedListener.onScrollChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 240, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 17:47:25.711394", "score": "0.9983", "loss": "0.0058", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(int l, int t, int oldl, int oldt) { if (onScrollChangedListener != null) { olChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 210, "n_pass": [25, 2, 2]}
{"time": "2021-02-19 17:47:27.435197", "score": "0.9871", "loss": "0.0457", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(it oldl, int oldt) { if (onScrollChangedListener != null) { olChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 195, "n_pass": [55, 3, 3]}
{"time": "2021-02-19 17:47:28.775698", "score": "0.9853", "loss": "0.0543", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(it oldl, int oldt) { if (onScroer != null) { olChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 180, "n_pass": [58, 4, 4]}
{"time": "2021-02-19 17:47:30.518309", "score": "0.9915", "loss": "0.0304", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, t, oldl, oldt); }", "n_tokens": 172, "n_pass": [95, 5, 5]}
{"time": "2021-02-19 17:47:34.543391", "score": "0.9866", "loss": "0.0472", "code": "@SuppressWarnings(\"deprecation\") @Override protected void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 164, "n_pass": [103, 8, 6]}
{"time": "2021-02-19 17:47:35.884661", "score": "0.9809", "loss": "0.0689", "code": "@Supprengs(\"deprecation\") @Override protected void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 157, "n_pass": [106, 9, 7]}
{"time": "2021-02-19 17:47:37.225030", "score": "0.9815", "loss": "0.0672", "code": "@Supprengs(\"deon\") @Override protected void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 150, "n_pass": [108, 10, 8]}
{"time": "2021-02-19 17:47:38.599126", "score": "0.9625", "loss": "0.1439", "code": "@Supprengs(\"deon\") @O protected void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 143, "n_pass": [110, 11, 9]}
{"time": "2021-02-19 17:47:39.966134", "score": "0.9617", "loss": "0.147", "code": "@Supprengs(\"deon\") @Oted void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 136, "n_pass": [111, 12, 10]}
{"time": "2021-02-19 17:47:45.156670", "score": "0.9625", "loss": "0.1439", "code": "@Supprengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (o!= null) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 133, "n_pass": [167, 15, 11]}
{"time": "2021-02-19 17:47:47.997597", "score": "0.9623", "loss": "0.1512", "code": "@Supprengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { olChanged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 129, "n_pass": [179, 16, 12]}
{"time": "2021-02-19 17:47:49.349529", "score": "0.9751", "loss": "0.0919", "code": "@Supprengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { onged(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 125, "n_pass": [182, 17, 13]}
{"time": "2021-02-19 17:47:50.668945", "score": "0.9677", "loss": "0.1187", "code": "@Supprengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(l, toldt); }", "n_tokens": 121, "n_pass": [183, 18, 14]}
{"time": "2021-02-19 17:47:57.301078", "score": "0.9949", "loss": "0.0166", "code": "@Supprengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 117, "n_pass": [192, 23, 15]}
{"time": "2021-02-19 17:47:59.982628", "score": "0.9949", "loss": "0.0166", "code": "@Suengs(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 114, "n_pass": [196, 25, 16]}
{"time": "2021-02-19 17:48:01.302643", "score": "0.9936", "loss": "0.0208", "code": "@Sus(\"deon\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 111, "n_pass": [197, 26, 17]}
{"time": "2021-02-19 17:48:02.620372", "score": "0.9932", "loss": "0.0221", "code": "@Sus(\"n\") @O void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 108, "n_pass": [199, 27, 18]}
{"time": "2021-02-19 17:48:03.945070", "score": "0.8707", "loss": "0.4866", "code": "@Sus(\"n\") void onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 105, "n_pass": [201, 28, 19]}
{"time": "2021-02-19 17:48:05.264097", "score": "0.9135", "loss": "0.3073", "code": "@Sus(\"n\")d onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } super.onScrollChanged(oldt); }", "n_tokens": 101, "n_pass": [202, 29, 20]}
{"time": "2021-02-19 17:48:08.112870", "score": "0.7914", "loss": "1.2714", "code": "@Sus(\"n\")d onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } suonScrollChanged(oldt); }", "n_tokens": 97, "n_pass": [219, 30, 21]}
{"time": "2021-02-19 17:48:13.402051", "score": "0.7708", "loss": "1.5167", "code": "@Sus(\"n\")d onScrollChanged(it oldl, int oldt) { if (oull) { o(l, t); } suonScrollChanged(); }", "n_tokens": 93, "n_pass": [224, 34, 22]}
{"time": "2021-02-19 17:48:26.188765", "score": "0.5903", "loss": "2.7544", "code": "@Sus(\"n\")d onScrollChanged(it ol, int oldt) { if (oull) { o(l, t); } suonScrollChanged(); }", "n_tokens": 91, "n_pass": [316, 40, 23]}
{"time": "2021-02-19 17:48:27.532234", "score": "0.5044", "loss": "3.434", "code": "@Sus(\"n\")d onScrollChanged(it ol,nt oldt) { if (oull) { o(l, t); } suonScrollChanged(); }", "n_tokens": 89, "n_pass": [318, 41, 24]}
{"time": "2021-02-19 17:48:30.198651", "score": "0.5243", "loss": "3.2124", "code": "@Sus(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(l, t); } suonScrollChanged(); }", "n_tokens": 87, "n_pass": [327, 43, 25]}
{"time": "2021-02-19 17:48:31.551904", "score": "0.5635", "loss": "3.0771", "code": "@Sus(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(lt); } suonScrollChanged(); }", "n_tokens": 85, "n_pass": [332, 44, 26]}
{"time": "2021-02-19 17:48:32.875095", "score": "0.7913", "loss": "1.3794", "code": "@Sus(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(lt); } onScrollChanged(); }", "n_tokens": 83, "n_pass": [336, 45, 27]}
{"time": "2021-02-19 17:48:34.194607", "score": "0.6437", "loss": "2.4745", "code": "@Sus(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(lt); } ScrollChanged(); }", "n_tokens": 81, "n_pass": [337, 46, 28]}
{"time": "2021-02-19 17:48:43.520232", "score": "0.6538", "loss": "2.3845", "code": "@us(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(lt); } ScrollChanged(); }", "n_tokens": 80, "n_pass": [348, 53, 29]}
{"time": "2021-02-19 17:48:44.839980", "score": "0.6077", "loss": "2.6023", "code": "@s(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) { o(lt); } ScrollChanged(); }", "n_tokens": 79, "n_pass": [349, 54, 30]}
{"time": "2021-02-19 17:48:50.511170", "score": "0.6739", "loss": "2.1607", "code": "@s(\"n\")d onScrollChanged(it ol,nt oldt) { if (ol) {(lt); } ScrollChanged(); }", "n_tokens": 77, "n_pass": [375, 56, 31]}
{"time": "2021-02-19 17:49:02.868358", "score": "0.427", "loss": "4.5799", "code": "@s(\"n\")d onScrollChanged(it ol,nt ot) { if (ol) {(lt); } ScrollChanged(); }", "n_tokens": 75, "n_pass": [407, 63, 32]}
{"time": "2021-02-19 17:49:19.218699", "score": "0.5421", "loss": "3.4361", "code": "@s(\"n\")d onScrollChanged(it ol,nt o) { if (ol) {(lt); } ScrollChanged(); }", "n_tokens": 74, "n_pass": [520, 70, 33]}
{"time": "2021-02-19 17:49:20.535290", "score": "0.5421", "loss": "3.4361", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){ if (ol) {(lt); } ScrollChanged(); }", "n_tokens": 73, "n_pass": [521, 71, 34]}
{"time": "2021-02-19 17:49:21.851858", "score": "0.5421", "loss": "3.4361", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if (ol) {(lt); } ScrollChanged(); }", "n_tokens": 72, "n_pass": [523, 72, 35]}
{"time": "2021-02-19 17:49:23.176695", "score": "0.5421", "loss": "3.4361", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(ol) {(lt); } ScrollChanged(); }", "n_tokens": 71, "n_pass": [526, 73, 36]}
{"time": "2021-02-19 17:49:24.520372", "score": "0.5181", "loss": "3.7433", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l) {(lt); } ScrollChanged(); }", "n_tokens": 70, "n_pass": [528, 74, 37]}
{"time": "2021-02-19 17:49:25.838017", "score": "0.5181", "loss": "3.7433", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l){(lt); } ScrollChanged(); }", "n_tokens": 69, "n_pass": [531, 75, 38]}
{"time": "2021-02-19 17:49:27.156365", "score": "0.4432", "loss": "4.2403", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l){(t); } ScrollChanged(); }", "n_tokens": 68, "n_pass": [534, 76, 39]}
{"time": "2021-02-19 17:49:28.475626", "score": "0.4432", "loss": "4.2403", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l){(t);} ScrollChanged(); }", "n_tokens": 67, "n_pass": [538, 77, 40]}
{"time": "2021-02-19 17:49:29.794437", "score": "0.4432", "loss": "4.2403", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l){(t);}ScrollChanged(); }", "n_tokens": 66, "n_pass": [540, 78, 41]}
{"time": "2021-02-19 17:49:48.326390", "score": "0.4432", "loss": "4.2403", "code": "@s(\"n\")d onScrollChanged(it ol,nt o){if(l){(t);}ScrollChanged();}", "n_tokens": 65, "n_pass": [557, 92, 42]}
{"time": "2021-02-19 17:49:49.648655", "score": "0.4552", "loss": "4.1373", "code": "@s(\"\")d onScrollChanged(it ol,nt o){if(l){(t);}ScrollChanged();}", "n_tokens": 64, "n_pass": [563, 93, 43]}
{"time": "2021-02-19 17:49:57.326745", "score": "0.3588", "loss": "4.9284", "code": "@s(\"\")d onScrollChanged(t ol,nt o){if(l){(t);}ScrollChanged();}", "n_tokens": 63, "n_pass": [584, 94, 44]}
{"time": "2021-02-19 17:50:01.302774", "score": "0.3839", "loss": "4.6468", "code": "@s(\"\")d onScrollChanged(t ol,t o){if(l){(t);}ScrollChanged();}", "n_tokens": 62, "n_pass": [590, 97, 45]}

Minimal simplified code:
@s("")d onScrollChanged(t ol,t o){if(l){(t);}ScrollChanged();}

