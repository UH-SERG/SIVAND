
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qqchenjian318__VideoEditor-For-Android/app/src/main/java/com/example/cj/videoeditor/gpufilter/filter/MagicHefeFilter_onInit.java
method_name = onInit
method_body = protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture" + (2 + i)); mGLStrengthLocation = GLES20.glGetUniformLocation(mGLProgId, "strength"); }
predict, score, loss = onInit, 0.9255782961845398, 0.16111208498477936

Trace of simplified code(s):
{"time": "2021-02-19 16:52:48.134353", "score": "0.9256", "loss": "0.1611", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), \"inputImageTexture\" + (2 + i)); mGLStrengthLocation = GLES20.glGetUniformLocation(mGLProgId, \"strength\"); }", "n_tokens": 287, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 16:52:49.503537", "score": "0.9029", "loss": "0.2156", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES2StrengthLocation = GLES20.glGetUniformLocation(mGLProgId, \"strength\"); }", "n_tokens": 215, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 16:52:50.870708", "score": "0.972", "loss": "0.0577", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inputTextureUniformLocations[i] = GLES2rmLocation(mGLProgId, \"strength\"); }", "n_tokens": 179, "n_pass": [19, 3, 3]}
{"time": "2021-02-19 16:52:52.213241", "score": "0.9849", "loss": "0.031", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTextureUniformLocations.length; i++) inprmLocation(mGLProgId, \"strength\"); }", "n_tokens": 143, "n_pass": [23, 4, 4]}
{"time": "2021-02-19 16:52:53.925735", "score": "0.984", "loss": "0.0329", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTexts.length; i++) inprmLocation(mGLProgId, \"strength\"); }", "n_tokens": 125, "n_pass": [42, 5, 5]}
{"time": "2021-02-19 16:52:55.660831", "score": "0.973", "loss": "0.0559", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < inputTexts.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 116, "n_pass": [65, 6, 6]}
{"time": "2021-02-19 16:52:58.692125", "score": "0.969", "loss": "0.0642", "code": "protected void onInit() { super.onInit(); for (int i = 0; i < s.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 107, "n_pass": [75, 8, 7]}
{"time": "2021-02-19 16:53:01.728916", "score": "0.9407", "loss": "0.1265", "code": "protected void onInit() { super.onInit(); for (int i = 0;s.length; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 102, "n_pass": [112, 10, 8]}
{"time": "2021-02-19 16:53:03.045432", "score": "0.9664", "loss": "0.0699", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn(mGLProgId, \"strength\"); }", "n_tokens": 97, "n_pass": [113, 11, 9]}
{"time": "2021-02-19 16:53:04.381356", "score": "0.9785", "loss": "0.0443", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn(ogId, \"strength\"); }", "n_tokens": 92, "n_pass": [117, 12, 10]}
{"time": "2021-02-19 16:53:05.708662", "score": "0.9407", "loss": "0.1271", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"strength\"); }", "n_tokens": 87, "n_pass": [118, 13, 11]}
{"time": "2021-02-19 16:53:07.034879", "score": "0.9083", "loss": "0.2034", "code": "protected void onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 82, "n_pass": [120, 14, 12]}
{"time": "2021-02-19 16:53:08.374581", "score": "0.9575", "loss": "0.0895", "code": "protecteid onInit() { super.onInit(); for (int i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 78, "n_pass": [124, 15, 13]}
{"time": "2021-02-19 16:53:14.425073", "score": "0.9396", "loss": "0.129", "code": "protecteid onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 74, "n_pass": [134, 19, 14]}
{"time": "2021-02-19 16:53:15.736945", "score": "0.9396", "loss": "0.129", "code": "ecteid onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 70, "n_pass": [141, 20, 15]}
{"time": "2021-02-19 16:53:17.076468", "score": "0.9508", "loss": "0.1039", "code": "id onInit() { super.onInit(); for (i = 0;gth; i++) inpn( \"str\"); }", "n_tokens": 66, "n_pass": [142, 21, 16]}
{"time": "2021-02-19 16:53:34.449586", "score": "0.9493", "loss": "0.107", "code": "id onInit() { super.onInit(); for (i = 0;g; i++) inpn( \"str\"); }", "n_tokens": 64, "n_pass": [209, 32, 17]}
{"time": "2021-02-19 16:53:35.760505", "score": "0.9457", "loss": "0.1151", "code": "id onInit() { super.onInit(); for (i = 0;g; i++) n( \"str\"); }", "n_tokens": 61, "n_pass": [213, 33, 18]}
{"time": "2021-02-19 16:53:51.885020", "score": "0.9457", "loss": "0.1151", "code": "id onInit() { super.onInit(); for (i = 0;g; i++)n( \"str\"); }", "n_tokens": 60, "n_pass": [298, 41, 19]}
{"time": "2021-02-19 16:53:53.208208", "score": "0.978", "loss": "0.0455", "code": "id onInit() { super.onInit(); for (i = 0;g; i++)( \"str\"); }", "n_tokens": 59, "n_pass": [299, 42, 20]}
{"time": "2021-02-19 16:53:54.520997", "score": "0.9808", "loss": "0.0397", "code": "id onInit() { super.onInit(); for (i = 0;g; i++)( \"r\"); }", "n_tokens": 57, "n_pass": [302, 43, 21]}
{"time": "2021-02-19 16:53:55.835456", "score": "0.9821", "loss": "0.037", "code": "d onInit() { super.onInit(); for (i = 0;g; i++)( \"r\"); }", "n_tokens": 56, "n_pass": [306, 44, 22]}
{"time": "2021-02-19 16:54:00.102132", "score": "0.9821", "loss": "0.037", "code": "d onInit(){ super.onInit(); for (i = 0;g; i++)( \"r\"); }", "n_tokens": 55, "n_pass": [317, 45, 23]}
{"time": "2021-02-19 16:54:01.424441", "score": "0.9821", "loss": "0.037", "code": "d onInit(){super.onInit(); for (i = 0;g; i++)( \"r\"); }", "n_tokens": 54, "n_pass": [319, 46, 24]}
{"time": "2021-02-19 16:54:18.571120", "score": "0.9821", "loss": "0.037", "code": "d onInit(){super.onInit();for (i = 0;g; i++)( \"r\"); }", "n_tokens": 53, "n_pass": [335, 59, 25]}
{"time": "2021-02-19 16:54:19.896428", "score": "0.9821", "loss": "0.037", "code": "d onInit(){super.onInit();for(i = 0;g; i++)( \"r\"); }", "n_tokens": 52, "n_pass": [339, 60, 26]}
{"time": "2021-02-19 16:54:21.216203", "score": "0.9821", "loss": "0.037", "code": "d onInit(){super.onInit();for(i= 0;g; i++)( \"r\"); }", "n_tokens": 51, "n_pass": [342, 61, 27]}
{"time": "2021-02-19 16:54:22.530671", "score": "0.9821", "loss": "0.037", "code": "d onInit(){super.onInit();for(i=0;g; i++)( \"r\"); }", "n_tokens": 50, "n_pass": [344, 62, 28]}
{"time": "2021-02-19 16:54:23.840764", "score": "0.9862", "loss": "0.0286", "code": "d onInit(){super.onInit();for(i=0;; i++)( \"r\"); }", "n_tokens": 49, "n_pass": [347, 63, 29]}
{"time": "2021-02-19 16:54:25.152250", "score": "0.9862", "loss": "0.0286", "code": "d onInit(){super.onInit();for(i=0;;i++)( \"r\"); }", "n_tokens": 48, "n_pass": [349, 64, 30]}
{"time": "2021-02-19 16:54:45.247329", "score": "0.993", "loss": "0.0151", "code": "d onInit(){super.onInit();for(i0;;i++)( \"r\"); }", "n_tokens": 47, "n_pass": [390, 77, 31]}
{"time": "2021-02-19 16:54:46.551467", "score": "0.993", "loss": "0.0151", "code": "d onInit(){super.onInit();for(i;;i++)( \"r\"); }", "n_tokens": 46, "n_pass": [391, 78, 32]}
{"time": "2021-02-19 16:55:06.649541", "score": "0.9933", "loss": "0.0147", "code": "d onInit(){super.onInit();for(;;i++)( \"r\"); }", "n_tokens": 45, "n_pass": [433, 91, 33]}
{"time": "2021-02-19 16:55:27.638984", "score": "0.9933", "loss": "0.0147", "code": "d onInit(){super.onInit();for(;;i++)(\"r\"); }", "n_tokens": 44, "n_pass": [483, 104, 34]}
{"time": "2021-02-19 16:55:28.943720", "score": "0.9902", "loss": "0.0211", "code": "d onInit(){super.onInit();for(;;i++)(\"\"); }", "n_tokens": 43, "n_pass": [484, 105, 35]}
{"time": "2021-02-19 16:55:30.245929", "score": "0.9902", "loss": "0.0211", "code": "d onInit(){super.onInit();for(;;i++)(\"\");}", "n_tokens": 42, "n_pass": [488, 106, 36]}

Minimal simplified code:
d onInit(){super.onInit();for(;;i++)("");}

