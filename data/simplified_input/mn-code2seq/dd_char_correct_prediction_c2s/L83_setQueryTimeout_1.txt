
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestValidationQueryTimeout_setQueryTimeout.java
method_name = setQueryTimeout
method_body = @Override public void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }
predict, score, loss = setQueryTimeout, 0.9990246295928955, 0.003462683642283082

Trace of simplified code(s):
{"time": "2021-02-19 13:42:37.208713", "score": "0.999", "loss": "0.0035", "code": "@Override public void setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }", "n_tokens": 166, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 13:42:39.855595", "score": "0.9975", "loss": "0.0104", "code": "d setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEquals(TIMEOUT, seconds); isTimeoutSet = true; }", "n_tokens": 146, "n_pass": [20, 3, 2]}
{"time": "2021-02-19 13:42:42.511517", "score": "0.996", "loss": "0.0224", "code": "d setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEqualssTimeoutSet = true; }", "n_tokens": 125, "n_pass": [26, 5, 3]}
{"time": "2021-02-19 13:42:45.196198", "score": "0.9938", "loss": "0.0274", "code": "d setQueryTimeout(int seconds) throws SQLException { super.setQueryTimeout(seconds); Assert.assertEqualt = true; }", "n_tokens": 114, "n_pass": [45, 7, 4]}
{"time": "2021-02-19 13:42:46.905527", "score": "0.9919", "loss": "0.0336", "code": "d setQueryTimeout(int seconds) throws SQ { super.setQueryTimeout(seconds); Assert.assertEqualt = true; }", "n_tokens": 104, "n_pass": [51, 8, 5]}
{"time": "2021-02-19 13:42:49.540992", "score": "0.9952", "loss": "0.0186", "code": "d setQueryTimeout(int seconds) throws SQ { super.setQueryTimeout(seconds); Assert.t = true; }", "n_tokens": 93, "n_pass": [56, 10, 6]}
{"time": "2021-02-19 13:42:51.248708", "score": "0.997", "loss": "0.0116", "code": "d setQueryTimeout(int seconds) { super.setQueryTimeout(seconds); Assert.t = true; }", "n_tokens": 83, "n_pass": [61, 11, 7]}
{"time": "2021-02-19 13:42:58.287730", "score": "0.9962", "loss": "0.0138", "code": "d setQueryTimeout(int seconds) { super.setQueryTimeout(ds); Assert.t = true; }", "n_tokens": 78, "n_pass": [91, 16, 8]}
{"time": "2021-02-19 13:42:59.587694", "score": "0.9615", "loss": "0.1333", "code": "d setQueryTimeout(int seconds) { super.setQueryTimeout(ds); Assertrue; }", "n_tokens": 72, "n_pass": [94, 17, 9]}
{"time": "2021-02-19 13:43:05.931178", "score": "0.9771", "loss": "0.0772", "code": "d setQueryTimeout(int seconds) { super.setQueryTimeout(ds); rue; }", "n_tokens": 66, "n_pass": [108, 21, 10]}
{"time": "2021-02-19 13:43:12.365142", "score": "0.99", "loss": "0.0495", "code": "d setQueryTimeout(int seconds) { super.setQueryTimeout(ds); ; }", "n_tokens": 63, "n_pass": [148, 25, 11]}
{"time": "2021-02-19 13:43:16.654971", "score": "0.9845", "loss": "0.0682", "code": "d setQueryTimeout(t seconds) { super.setQueryTimeout(ds); ; }", "n_tokens": 61, "n_pass": [158, 26, 12]}
{"time": "2021-02-19 13:43:17.994174", "score": "0.9776", "loss": "0.1064", "code": "d setQueryTimeout(t conds) { super.setQueryTimeout(ds); ; }", "n_tokens": 59, "n_pass": [160, 27, 13]}
{"time": "2021-02-19 13:43:19.304932", "score": "0.9868", "loss": "0.0617", "code": "d setQueryTimeout(t ds) { super.setQueryTimeout(ds); ; }", "n_tokens": 56, "n_pass": [161, 28, 14]}
{"time": "2021-02-19 13:43:20.614882", "score": "0.9204", "loss": "0.4158", "code": "d setQueryTimeout(t ds) { er.setQueryTimeout(ds); ; }", "n_tokens": 53, "n_pass": [164, 29, 15]}
{"time": "2021-02-19 13:43:21.920161", "score": "0.7447", "loss": "1.6327", "code": "d setQueryTimeout(t ds) { setQueryTimeout(ds); ; }", "n_tokens": 50, "n_pass": [165, 30, 16]}
{"time": "2021-02-19 13:43:34.542132", "score": "0.7447", "loss": "1.6327", "code": "d setQueryTimeout(t ds) {setQueryTimeout(ds); ; }", "n_tokens": 49, "n_pass": [227, 36, 17]}
{"time": "2021-02-19 13:43:41.109668", "score": "0.653", "loss": "2.2745", "code": "d setQueryTimeout(t ds) {setQryTimeout(ds); ; }", "n_tokens": 47, "n_pass": [232, 41, 18]}
{"time": "2021-02-19 13:43:47.687384", "score": "0.6095", "loss": "3.06", "code": "d setQueryTimeout(t ds) {setQryTimeout(); ; }", "n_tokens": 45, "n_pass": [238, 46, 19]}
{"time": "2021-02-19 13:43:49.001332", "score": "0.6095", "loss": "3.06", "code": "d setQueryTimeout(t ds) {setQryTimeout(); }", "n_tokens": 43, "n_pass": [240, 47, 20]}
{"time": "2021-02-19 13:43:57.888428", "score": "0.633", "loss": "2.5816", "code": "d setQueryTimeout(t d) {setQryTimeout(); }", "n_tokens": 42, "n_pass": [263, 49, 21]}
{"time": "2021-02-19 13:43:59.206379", "score": "0.633", "loss": "2.5816", "code": "d setQueryTimeout(t d){setQryTimeout(); }", "n_tokens": 41, "n_pass": [265, 50, 22]}
{"time": "2021-02-19 13:44:29.720949", "score": "0.633", "loss": "2.5816", "code": "d setQueryTimeout(t d){setQryTimeout();}", "n_tokens": 40, "n_pass": [326, 68, 23]}

Minimal simplified code:
d setQueryTimeout(t d){setQryTimeout();}

