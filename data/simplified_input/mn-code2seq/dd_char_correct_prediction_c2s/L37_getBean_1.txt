
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/integration/springframework/TestWebApplicationContext_getBean.java
method_name = getBean
method_body = @Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }
predict, score, loss = getBean, 0.9228212833404541, 0.41789373755455017

Trace of simplified code(s):
{"time": "2021-02-19 10:36:41.499371", "score": "0.9228", "loss": "0.4179", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter(); T bean = BeanLookup.getBean(beanExporter, requiredType); return bean; }", "n_tokens": 192, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 10:36:42.841172", "score": "0.7538", "loss": "1.1123", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExporter, requiredType); return bean; }", "n_tokens": 168, "n_pass": [25, 2, 2]}
{"time": "2021-02-19 10:36:44.195066", "score": "0.8629", "loss": "0.6596", "code": "@Override @Nonnull public <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 156, "n_pass": [47, 3, 3]}
{"time": "2021-02-19 10:36:45.549357", "score": "0.8746", "loss": "0.6736", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExporter beanExporter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 144, "n_pass": [51, 4, 4]}
{"time": "2021-02-19 10:36:46.892876", "score": "0.8209", "loss": "0.9419", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter = getBeanExporter();Bean(beanExpredType); return bean; }", "n_tokens": 132, "n_pass": [57, 5, 5]}
{"time": "2021-02-19 10:36:48.239980", "score": "0.7723", "loss": "1.2913", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportnExporter();Bean(beanExpredType); return bean; }", "n_tokens": 120, "n_pass": [58, 6, 6]}
{"time": "2021-02-19 10:36:50.921379", "score": "0.7734", "loss": "1.3368", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter();Bean(beanExpredType); return bean; }", "n_tokens": 114, "n_pass": [89, 8, 7]}
{"time": "2021-02-19 10:36:52.253619", "score": "0.517", "loss": "2.5877", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter();Bean(bredType); return bean; }", "n_tokens": 108, "n_pass": [91, 9, 8]}
{"time": "2021-02-19 10:36:53.588923", "score": "0.655", "loss": "1.8358", "code": "@Override @Nc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter();Bean(be); return bean; }", "n_tokens": 102, "n_pass": [92, 10, 9]}
{"time": "2021-02-19 10:36:56.250927", "score": "0.4953", "loss": "2.886", "code": "@Overrc <T> T getBean(@Nonnull Class<T> requiredType) { BeanExportter();Bean(be); return bean; }", "n_tokens": 96, "n_pass": [97, 12, 10]}
{"time": "2021-02-19 10:36:58.298905", "score": "0.5225", "loss": "2.7428", "code": "@Overrc <T> T getBean(@N Class<T> requiredType) { BeanExportter();Bean(be); return bean; }", "n_tokens": 90, "n_pass": [101, 13, 11]}
{"time": "2021-02-19 10:36:59.616719", "score": "0.4451", "loss": "3.3919", "code": "@Overrc <T> T getBean(@N Class<T> reType) { BeanExportter();Bean(be); return bean; }", "n_tokens": 84, "n_pass": [104, 14, 12]}
{"time": "2021-02-19 10:37:05.632520", "score": "0.4209", "loss": "3.1368", "code": "@Overrc <T> T getBean(@N Class<T> ree) { BeanExportter();Bean(be); return bean; }", "n_tokens": 81, "n_pass": [147, 18, 13]}
{"time": "2021-02-19 10:37:09.599454", "score": "0.4209", "loss": "3.1368", "code": "@Overrc <T> T getBean(@N Class<T> ree) { BeanExpter();Bean(be); return bean; }", "n_tokens": 78, "n_pass": [151, 21, 14]}
{"time": "2021-02-19 10:37:10.931947", "score": "0.4181", "loss": "3.3253", "code": "@Overrc <T> T getBean(@N Class<T> ree) { BeanExp();Bean(be); return bean; }", "n_tokens": 75, "n_pass": [152, 22, 15]}
{"time": "2021-02-19 10:37:12.245787", "score": "0.5114", "loss": "3.1406", "code": "@Overrc <T> T getBean(@N Class<T> ree) { BeanExpBean(be); return bean; }", "n_tokens": 72, "n_pass": [153, 23, 16]}
{"time": "2021-02-19 10:37:20.230516", "score": "0.4897", "loss": "3.2299", "code": "@Ovc <T> T getBean(@N Class<T> ree) { BeanExpBean(be); return bean; }", "n_tokens": 69, "n_pass": [163, 29, 17]}
{"time": "2021-02-19 10:37:22.643919", "score": "0.4897", "loss": "3.2299", "code": "@Ovc <T> T getBean(@N Cl<T> ree) { BeanExpBean(be); return bean; }", "n_tokens": 66, "n_pass": [171, 30, 18]}
{"time": "2021-02-19 10:37:23.969139", "score": "0.6912", "loss": "2.2144", "code": "@Ovc <T> T getBean(@N Cl ree) { BeanExpBean(be); return bean; }", "n_tokens": 63, "n_pass": [172, 31, 19]}
{"time": "2021-02-19 10:37:25.279416", "score": "0.4269", "loss": "3.5031", "code": "@Ovc <T> T getBean(@N Cl ree) { BExpBean(be); return bean; }", "n_tokens": 60, "n_pass": [176, 32, 20]}
{"time": "2021-02-19 10:37:26.591121", "score": "0.5157", "loss": "2.5766", "code": "@Ovc <T> T getBean(@N Cl ree) { BBean(be); return bean; }", "n_tokens": 57, "n_pass": [177, 33, 21]}
{"time": "2021-02-19 10:37:37.037269", "score": "0.3958", "loss": "3.2246", "code": "@Ovc <T> T getBean(@N Cl e) { BBean(be); return bean; }", "n_tokens": 55, "n_pass": [235, 39, 22]}
{"time": "2021-02-19 10:37:38.369194", "score": "0.4366", "loss": "2.8613", "code": "@Ovc <T> T getBean(@N Cl e) {Bean(be); return bean; }", "n_tokens": 53, "n_pass": [238, 40, 23]}
{"time": "2021-02-19 10:37:48.926205", "score": "0.4581", "loss": "2.7277", "code": "@vc <T> T getBean(@N Cl e) {Bean(be); return bean; }", "n_tokens": 52, "n_pass": [252, 48, 24]}
{"time": "2021-02-19 10:37:50.267812", "score": "0.4564", "loss": "2.6519", "code": "@c <T> T getBean(@N Cl e) {Bean(be); return bean; }", "n_tokens": 51, "n_pass": [253, 49, 25]}
{"time": "2021-02-19 10:37:51.584434", "score": "0.4564", "loss": "2.6519", "code": "@c<T> T getBean(@N Cl e) {Bean(be); return bean; }", "n_tokens": 50, "n_pass": [255, 50, 26]}
{"time": "2021-02-19 10:37:52.921394", "score": "0.4564", "loss": "2.6519", "code": "@c<T>T getBean(@N Cl e) {Bean(be); return bean; }", "n_tokens": 49, "n_pass": [259, 51, 27]}
{"time": "2021-02-19 10:37:57.585440", "score": "0.4831", "loss": "2.5239", "code": "@c<T>T getBean( Cl e) {Bean(be); return bean; }", "n_tokens": 47, "n_pass": [270, 52, 28]}
{"time": "2021-02-19 10:38:20.750759", "score": "0.4905", "loss": "2.3563", "code": "@c<T>T getBean( Cl e) {Bean(e); return bean; }", "n_tokens": 46, "n_pass": [340, 65, 29]}
{"time": "2021-02-19 10:38:22.071473", "score": "0.7208", "loss": "1.3595", "code": "@c<T>T getBean( Cl e) {Bean(); return bean; }", "n_tokens": 45, "n_pass": [341, 66, 30]}
{"time": "2021-02-19 10:38:23.405200", "score": "0.7208", "loss": "1.3595", "code": "@c<T>T getBean( Cl e) {Bean();return bean; }", "n_tokens": 44, "n_pass": [344, 67, 31]}
{"time": "2021-02-19 10:38:37.996778", "score": "0.6171", "loss": "1.6388", "code": "@c<T>T getBean( Cl e) {Bean();return bea; }", "n_tokens": 43, "n_pass": [355, 78, 32]}
{"time": "2021-02-19 10:38:39.322579", "score": "0.6171", "loss": "1.6388", "code": "@c<T>T getBean( Cl e) {Bean();return bea;}", "n_tokens": 42, "n_pass": [357, 79, 33]}
{"time": "2021-02-19 10:38:43.987037", "score": "0.6171", "loss": "1.6388", "code": "@c<T>T getBean(Cl e) {Bean();return bea;}", "n_tokens": 41, "n_pass": [374, 80, 34]}
{"time": "2021-02-19 10:38:47.982018", "score": "0.6171", "loss": "1.6388", "code": "@c<T>T getBean(Cl e){Bean();return bea;}", "n_tokens": 40, "n_pass": [380, 83, 35]}
{"time": "2021-02-19 10:38:54.563529", "score": "0.4327", "loss": "3.0087", "code": "@c<T>T getBean(Cl e){Bean();eturn bea;}", "n_tokens": 39, "n_pass": [389, 88, 36]}
{"time": "2021-02-19 10:38:57.200335", "score": "0.4327", "loss": "3.0087", "code": "@c<T>T getBean(Cl e){Bean();eurn bea;}", "n_tokens": 38, "n_pass": [391, 90, 37]}
{"time": "2021-02-19 10:38:58.509921", "score": "0.482", "loss": "2.5203", "code": "@c<T>T getBean(Cl e){Bean();ern bea;}", "n_tokens": 37, "n_pass": [392, 91, 38]}
{"time": "2021-02-19 10:38:59.860388", "score": "0.5478", "loss": "2.3712", "code": "@c<T>T getBean(Cl e){Bean();en bea;}", "n_tokens": 36, "n_pass": [393, 92, 39]}
{"time": "2021-02-19 10:39:01.188117", "score": "0.4477", "loss": "2.8386", "code": "@c<T>T getBean(Cl e){Bean();e bea;}", "n_tokens": 35, "n_pass": [394, 93, 40]}
{"time": "2021-02-19 10:39:03.833131", "score": "0.4457", "loss": "2.8151", "code": "@c<T>T getBean(Cl e){Bean();e ea;}", "n_tokens": 34, "n_pass": [396, 95, 41]}

Minimal simplified code:
@c<T>T getBean(Cl e){Bean();e ea;}

