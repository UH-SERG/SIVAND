
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/collection/set/HashSetObjT_main.java
method_name = main
method_body = @SuppressWarnings({ "rawtypes", "unchecked" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); objs.add(new C()); objs.add(new A()); objs.add(new B()); objs.add(new C()); System.out.println("HashSet Elements:"); System.out.print("\t" + objs + "\n"); }
predict, score, loss = main, 0.995297372341156, 0.00702423183247447

Trace of simplified code(s):
{"time": "2021-02-19 10:47:52.964188", "score": "0.9998", "loss": "0.0002", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); objs.add(new C()); objs.add(new A()); objs.add(new B()); objs.add(new C()); System.out.println(\"HashSet Elements:\"); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 312, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 10:47:54.320998", "score": "0.9983", "loss": "0.0026", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); stem.out.println(\"HashSet Elements:\"); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 234, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 10:47:55.682752", "score": "0.9981", "loss": "0.0028", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet(); objs.add(new A()); objs.add(new B()); System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 195, "n_pass": [19, 3, 3]}
{"time": "2021-02-19 10:47:57.025091", "score": "0.9928", "loss": "0.0108", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet objs = new HashSet();System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 156, "n_pass": [23, 4, 4]}
{"time": "2021-02-19 10:47:58.368001", "score": "0.9292", "loss": "0.1332", "code": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 136, "n_pass": [43, 5, 5]}
{"time": "2021-02-19 10:47:59.709735", "score": "0.8797", "loss": "0.2544", "code": "@SuppressWarnings({ \"rawtyphecked\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 127, "n_pass": [72, 6, 6]}
{"time": "2021-02-19 10:48:01.414203", "score": "0.8797", "loss": "0.2544", "code": "@SuppressWarnings({ \"rawtypd\" }) public static void main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 122, "n_pass": [112, 7, 7]}
{"time": "2021-02-19 10:48:02.761812", "score": "0.317", "loss": "2.0956", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(String[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 117, "n_pass": [115, 8, 8]}
{"time": "2021-02-19 10:48:04.448618", "score": "0.3449", "loss": "1.9733", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { HashSet ;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 112, "n_pass": [118, 9, 9]}
{"time": "2021-02-19 10:48:05.775604", "score": "0.5269", "loss": "1.1864", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Has;System.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 107, "n_pass": [122, 10, 10]}
{"time": "2021-02-19 10:48:07.101915", "score": "0.5087", "loss": "1.2519", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasem.out.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 102, "n_pass": [123, 11, 11]}
{"time": "2021-02-19 10:48:08.441823", "score": "0.3759", "loss": "1.8107", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hast.print(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 97, "n_pass": [124, 12, 12]}
{"time": "2021-02-19 10:48:09.756078", "score": "0.2679", "loss": "2.2916", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + objs + \"\\n\"); }", "n_tokens": 92, "n_pass": [125, 13, 13]}
{"time": "2021-02-19 10:48:11.094887", "score": "0.6162", "loss": "1.041", "code": "@SuppressWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 87, "n_pass": [128, 14, 14]}
{"time": "2021-02-19 10:48:12.410618", "score": "0.7773", "loss": "0.6272", "code": "@SupsWarnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 83, "n_pass": [132, 15, 15]}
{"time": "2021-02-19 10:48:13.741471", "score": "0.7959", "loss": "0.6028", "code": "@Supnings({ \"rawtypd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 79, "n_pass": [133, 16, 16]}
{"time": "2021-02-19 10:48:15.086146", "score": "0.7782", "loss": "0.6306", "code": "@Sup({ \"rawtypd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 74, "n_pass": [134, 17, 17]}
{"time": "2021-02-19 10:48:16.397340", "score": "0.7061", "loss": "0.8318", "code": "@Sup({ \"rd\" }) public stvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 69, "n_pass": [136, 18, 18]}
{"time": "2021-02-19 10:48:17.701160", "score": "0.7061", "loss": "0.8318", "code": "@Sup({ \"rd\" }) publvoid main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 64, "n_pass": [139, 19, 19]}
{"time": "2021-02-19 10:48:19.416181", "score": "0.9915", "loss": "0.0161", "code": "@Sup({ \"rd\" })void main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 59, "n_pass": [152, 20, 20]}
{"time": "2021-02-19 10:48:21.092424", "score": "0.6604", "loss": "0.9278", "code": "@Sup({ \"rd\" })id main(g[] args) { Hasnt(\"\\t\" + + \"\\n\"); }", "n_tokens": 57, "n_pass": [190, 21, 21]}
{"time": "2021-02-19 10:48:24.802834", "score": "0.4377", "loss": "1.5498", "code": "@Sup({ \"rd\" })id main(g[] args) {snt(\"\\t\" + + \"\\n\"); }", "n_tokens": 54, "n_pass": [199, 23, 22]}
{"time": "2021-02-19 10:48:26.110502", "score": "0.2186", "loss": "2.6392", "code": "@Sup({ \"rd\" })id main(g[] args) {(\"\\t\" + + \"\\n\"); }", "n_tokens": 51, "n_pass": [200, 24, 23]}
{"time": "2021-02-19 10:48:27.419751", "score": "0.2064", "loss": "2.7556", "code": "@S({ \"rd\" })id main(g[] args) {(\"\\t\" + + \"\\n\"); }", "n_tokens": 49, "n_pass": [208, 25, 24]}
{"time": "2021-02-19 10:48:28.736848", "score": "0.2248", "loss": "2.6472", "code": "@S({ \"\" })id main(g[] args) {(\"\\t\" + + \"\\n\"); }", "n_tokens": 47, "n_pass": [211, 26, 25]}
{"time": "2021-02-19 10:48:34.164715", "score": "0.2248", "loss": "2.6472", "code": "@S({ \"\"})id main(g[] args) {(\"\\t\" + + \"\\n\"); }", "n_tokens": 46, "n_pass": [270, 28, 26]}
{"time": "2021-02-19 10:48:39.918394", "score": "0.2248", "loss": "2.6472", "code": "@S({ \"\"})id main(g[]args) {(\"\\t\" + + \"\\n\"); }", "n_tokens": 45, "n_pass": [284, 31, 27]}
{"time": "2021-02-19 10:48:46.515057", "score": "0.2248", "loss": "2.6472", "code": "@S({ \"\"})id main(g[]args){(\"\\t\" + + \"\\n\"); }", "n_tokens": 44, "n_pass": [290, 36, 28]}
{"time": "2021-02-19 10:48:47.819567", "score": "0.4168", "loss": "1.945", "code": "@S({ \"\"})id main(g[]args){(\"\" + + \"\\n\"); }", "n_tokens": 42, "n_pass": [293, 37, 29]}
{"time": "2021-02-19 10:48:49.120880", "score": "0.3724", "loss": "1.9498", "code": "@S({ \"\"})id main(g[]args){(\"\" + \"\\n\"); }", "n_tokens": 40, "n_pass": [295, 38, 30]}
{"time": "2021-02-19 10:48:50.447862", "score": "0.3724", "loss": "1.9498", "code": "@S({\"\"})id main(g[]args){(\"\" + \"\\n\"); }", "n_tokens": 39, "n_pass": [305, 39, 31]}
{"time": "2021-02-19 10:48:51.757521", "score": "0.6595", "loss": "0.9448", "code": "@S({\"\"})d main(g[]args){(\"\" + \"\\n\"); }", "n_tokens": 38, "n_pass": [310, 40, 32]}
{"time": "2021-02-19 10:49:01.834554", "score": "0.6595", "loss": "0.9448", "code": "@S({\"\"})d main(g[]args){(\"\"+ \"\\n\"); }", "n_tokens": 37, "n_pass": [359, 45, 33]}
{"time": "2021-02-19 10:49:03.164535", "score": "0.6595", "loss": "0.9448", "code": "@S({\"\"})d main(g[]args){(\"\"+\"\\n\"); }", "n_tokens": 36, "n_pass": [361, 46, 34]}
{"time": "2021-02-19 10:49:04.483956", "score": "0.5855", "loss": "1.1728", "code": "@S({\"\"})d main(g[]args){(\"\"+\"n\"); }", "n_tokens": 35, "n_pass": [363, 47, 35]}
{"time": "2021-02-19 10:49:05.786735", "score": "0.6595", "loss": "0.9448", "code": "@S({\"\"})d main(g[]args){(\"\"+\"\"); }", "n_tokens": 34, "n_pass": [364, 48, 36]}
{"time": "2021-02-19 10:49:07.116574", "score": "0.6595", "loss": "0.9448", "code": "@S({\"\"})d main(g[]args){(\"\"+\"\");}", "n_tokens": 33, "n_pass": [368, 49, 37]}

Minimal simplified code:
@S({""})d main(g[]args){(""+"");}

