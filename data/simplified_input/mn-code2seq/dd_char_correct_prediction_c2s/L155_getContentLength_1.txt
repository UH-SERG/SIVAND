
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/est/ESTResponse_getContentLength.java
method_name = getContentLength
method_body = public Long getContentLength() { String v = headers.getFirstValue("Content-Length"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException("Content Length: '" + v + "' invalid. " + nfe.getMessage()); } }
predict, score, loss = getContentLength, 0.9750373363494873, 0.5167906880378723

Trace of simplified code(s):
{"time": "2021-02-19 18:29:20.123316", "score": "0.975", "loss": "0.5168", "code": "public Long getContentLength() { String v = headers.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 273, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 18:29:21.985671", "score": "0.9799", "loss": "0.3089", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throw new RuntimeException(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 256, "n_pass": [46, 2, 2]}
{"time": "2021-02-19 18:29:23.372320", "score": "0.9811", "loss": "0.3157", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Length: '\" + v + \"' invalid. \" + nfe.getMessage()); } }", "n_tokens": 239, "n_pass": [54, 3, 3]}
{"time": "2021-02-19 18:29:24.722312", "score": "0.9833", "loss": "0.3812", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Leninvalid. \" + nfe.getMessage()); } }", "n_tokens": 222, "n_pass": [56, 4, 4]}
{"time": "2021-02-19 18:29:26.446817", "score": "0.9807", "loss": "0.4474", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.getMessage()); } }", "n_tokens": 213, "n_pass": [96, 5, 5]}
{"time": "2021-02-19 18:29:27.788432", "score": "0.9772", "loss": "0.4714", "code": "public Long getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 204, "n_pass": [98, 6, 6]}
{"time": "2021-02-19 18:29:29.142685", "score": "0.9622", "loss": "0.2223", "code": "ong getContentLength() { S.getFirstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 196, "n_pass": [100, 7, 7]}
{"time": "2021-02-19 18:29:31.211920", "score": "0.9383", "loss": "0.3472", "code": "ong getContentLength() {rstValue(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 188, "n_pass": [104, 8, 8]}
{"time": "2021-02-19 18:29:32.543015", "score": "0.9516", "loss": "0.349", "code": "ong getContentLength() {(\"Content-Length\"); if (v == null) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 180, "n_pass": [105, 9, 9]}
{"time": "2021-02-19 18:29:35.213975", "score": "0.9337", "loss": "0.4671", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { return null; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 172, "n_pass": [109, 11, 10]}
{"time": "2021-02-19 18:29:36.533411", "score": "0.9273", "loss": "0.4897", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try { return Long.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 164, "n_pass": [111, 12, 11]}
{"time": "2021-02-19 18:29:37.854478", "score": "0.8923", "loss": "0.8128", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {ong.parseLong(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 155, "n_pass": [113, 13, 12]}
{"time": "2021-02-19 18:29:39.190326", "score": "0.7786", "loss": "1.6327", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {Long(v); } catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 146, "n_pass": [114, 14, 13]}
{"time": "2021-02-19 18:29:40.505681", "score": "0.9554", "loss": "0.4143", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {} catch (RuntimeException nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 137, "n_pass": [115, 15, 14]}
{"time": "2021-02-19 18:29:41.823901", "score": "0.9124", "loss": "0.8232", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"Content Le \" + nfe.e()); } }", "n_tokens": 128, "n_pass": [117, 16, 15]}
{"time": "2021-02-19 18:29:43.143602", "score": "0.8328", "loss": "1.5948", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(\"C \" + nfe.e()); } }", "n_tokens": 119, "n_pass": [121, 17, 16]}
{"time": "2021-02-19 18:29:46.547284", "score": "0.9244", "loss": "0.7422", "code": "ong getContentLength() {(\"Content-Length\"); if (l) { ret; } try {} catch (ception nfe) { throwtion(+ nfe.e()); } }", "n_tokens": 114, "n_pass": [164, 19, 17]}
{"time": "2021-02-19 18:29:53.720518", "score": "0.8722", "loss": "1.2574", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (ception nfe) { throwtion(+ nfe.e()); } }", "n_tokens": 110, "n_pass": [181, 23, 18]}
{"time": "2021-02-19 18:29:55.057907", "score": "0.9377", "loss": "0.7555", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) { throwtion(+ nfe.e()); } }", "n_tokens": 106, "n_pass": [187, 24, 19]}
{"time": "2021-02-19 18:29:56.397152", "score": "0.9353", "loss": "0.5203", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) { tion(+ nfe.e()); } }", "n_tokens": 101, "n_pass": [190, 25, 20]}
{"time": "2021-02-19 18:30:04.585237", "score": "0.9199", "loss": "0.7928", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) {ion(+ nfe.e()); } }", "n_tokens": 99, "n_pass": [263, 29, 21]}
{"time": "2021-02-19 18:30:05.901128", "score": "0.9097", "loss": "0.9105", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) {n(+ nfe.e()); } }", "n_tokens": 97, "n_pass": [264, 30, 22]}
{"time": "2021-02-19 18:30:08.549006", "score": "0.8377", "loss": "1.8713", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) {n(+ ne()); } }", "n_tokens": 94, "n_pass": [267, 32, 23]}
{"time": "2021-02-19 18:30:09.867031", "score": "0.7119", "loss": "2.2999", "code": "ong getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) {n(+ n); } }", "n_tokens": 91, "n_pass": [268, 33, 24]}
{"time": "2021-02-19 18:30:11.180225", "score": "0.5871", "loss": "2.8696", "code": "g getContentLength() {(\"Content-Length\"); if (l) {; } try {} catch (cen nfe) {n(+ n); } }", "n_tokens": 89, "n_pass": [271, 34, 25]}
{"time": "2021-02-19 18:30:25.158655", "score": "0.5871", "loss": "2.8696", "code": "g getContentLength() {(\"Content-Length\"); if (l) {} try {} catch (cen nfe) {n(+ n); } }", "n_tokens": 87, "n_pass": [297, 42, 26]}
{"time": "2021-02-19 18:30:26.493632", "score": "0.5391", "loss": "3.4148", "code": "g getContentLength() {(\"Content-Length\"); if (l) {} try {} catch (n nfe) {n(+ n); } }", "n_tokens": 85, "n_pass": [306, 43, 27]}
{"time": "2021-02-19 18:30:50.191381", "score": "0.6163", "loss": "2.819", "code": "g getContentLength() {(\"Content-Length\"); if (l) {} try {} catch (n nf) {n(+ n); } }", "n_tokens": 84, "n_pass": [434, 55, 28]}
{"time": "2021-02-19 18:30:51.525458", "score": "0.6163", "loss": "2.819", "code": "g getContentLength() {(\"Content-Length\"); if (l) {} try {} catch (n nf){n(+ n); } }", "n_tokens": 83, "n_pass": [435, 56, 29]}
{"time": "2021-02-19 18:30:55.501853", "score": "0.6163", "loss": "2.819", "code": "g getContentLength() {(\"Content-Length\"); if (l) {} try {} catch (n nf){n(+n); } }", "n_tokens": 82, "n_pass": [440, 59, 30]}
{"time": "2021-02-19 18:31:03.543683", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\"); if (l) {} try {} catch (n nf){n(+n); } }", "n_tokens": 81, "n_pass": [465, 60, 31]}
{"time": "2021-02-19 18:31:23.437677", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if (l) {} try {} catch (n nf){n(+n); } }", "n_tokens": 80, "n_pass": [486, 75, 32]}
{"time": "2021-02-19 18:31:24.761216", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l) {} try {} catch (n nf){n(+n); } }", "n_tokens": 79, "n_pass": [489, 76, 33]}
{"time": "2021-02-19 18:31:26.125475", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){} try {} catch (n nf){n(+n); } }", "n_tokens": 78, "n_pass": [493, 77, 34]}
{"time": "2021-02-19 18:31:27.449596", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try {} catch (n nf){n(+n); } }", "n_tokens": 77, "n_pass": [496, 78, 35]}
{"time": "2021-02-19 18:31:28.773659", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try{} catch (n nf){n(+n); } }", "n_tokens": 76, "n_pass": [500, 79, 36]}
{"time": "2021-02-19 18:31:30.112006", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try{}catch (n nf){n(+n); } }", "n_tokens": 75, "n_pass": [503, 80, 37]}
{"time": "2021-02-19 18:31:31.434521", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try{}catch(n nf){n(+n); } }", "n_tokens": 74, "n_pass": [509, 81, 38]}
{"time": "2021-02-19 18:32:04.383169", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try{}catch(n nf){n(+n);} }", "n_tokens": 73, "n_pass": [589, 100, 39]}
{"time": "2021-02-19 18:32:05.706301", "score": "0.6163", "loss": "2.819", "code": "g getContentLength(){(\"Content-Length\");if(l){}try{}catch(n nf){n(+n);}}", "n_tokens": 72, "n_pass": [590, 101, 40]}

Minimal simplified code:
g getContentLength(){("Content-Length");if(l){}try{}catch(n nf){n(+n);}}

