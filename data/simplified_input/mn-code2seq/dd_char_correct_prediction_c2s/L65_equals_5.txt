
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/org/forgerock/openam/sm/config/CacheKey_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source, cacheKey.source) && Objects.equals(realm, cacheKey.realm); }
predict, score, loss = equals, 0.9943554401397705, 0.006943483371287584

Trace of simplified code(s):
{"time": "2021-02-19 12:26:49.882863", "score": "0.9944", "loss": "0.0069", "code": "@Override public boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source, cacheKey.source) && Objects.equals(realm, cacheKey.realm); }", "n_tokens": 264, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 12:26:51.276548", "score": "0.9894", "loss": "0.0144", "code": " boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source, cacheKey.source) && Objects.equals(realm, cacheKey.realm); }", "n_tokens": 248, "n_pass": [44, 2, 2]}
{"time": "2021-02-19 12:26:52.632420", "score": "0.9924", "loss": "0.0103", "code": " boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objects.equals(realm, cacheKey.realm); }", "n_tokens": 231, "n_pass": [56, 3, 3]}
{"time": "2021-02-19 12:26:53.999455", "score": "0.9878", "loss": "0.0168", "code": " boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, cacheKey.realm); }", "n_tokens": 222, "n_pass": [101, 4, 4]}
{"time": "2021-02-19 12:26:55.345390", "score": "0.9886", "loss": "0.0158", "code": " boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 213, "n_pass": [103, 5, 5]}
{"time": "2021-02-19 12:26:57.080415", "score": "0.9594", "loss": "0.0596", "code": " boolean equals(Object other) { if (thisr) { return true; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 205, "n_pass": [110, 6, 6]}
{"time": "2021-02-19 12:26:58.415913", "score": "0.9382", "loss": "0.0961", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { return false; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 197, "n_pass": [112, 7, 7]}
{"time": "2021-02-19 12:26:59.759095", "score": "0.8287", "loss": "0.2994", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } CacheKey cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 189, "n_pass": [118, 8, 8]}
{"time": "2021-02-19 12:27:01.117399", "score": "0.5756", "loss": "0.8617", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; }  cacheKey = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 181, "n_pass": [120, 9, 9]}
{"time": "2021-02-19 12:27:02.494764", "score": "0.5465", "loss": "0.9508", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (CacheKey) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 173, "n_pass": [121, 10, 10]}
{"time": "2021-02-19 12:27:06.294126", "score": "0.4079", "loss": "1.3003", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) other; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 169, "n_pass": [187, 12, 11]}
{"time": "2021-02-19 12:27:07.627133", "score": "0.4369", "loss": "1.2086", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Objects.equals(source) && Objes(realm, realm); }", "n_tokens": 165, "n_pass": [188, 13, 12]}
{"time": "2021-02-19 12:27:09.331871", "score": "0.496", "loss": "1.0175", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Obj.equals(source) && Objes(realm, realm); }", "n_tokens": 161, "n_pass": [192, 14, 13]}
{"time": "2021-02-19 12:27:12.006327", "score": "0.4213", "loss": "1.1937", "code": " boolean equals(Object other) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 157, "n_pass": [195, 16, 14]}
{"time": "2021-02-19 12:27:19.072959", "score": "0.5164", "loss": "1.0019", "code": " boolean equals(Object o) { if (thisr) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 153, "n_pass": [208, 21, 15]}
{"time": "2021-02-19 12:27:20.409067", "score": "0.5333", "loss": "1.0143", "code": " boolean equals(Object o) { if (r) { ret; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 149, "n_pass": [211, 22, 16]}
{"time": "2021-02-19 12:27:21.743641", "score": "0.6073", "loss": "0.8289", "code": " boolean equals(Object o) { if (r) {; } if (!(other instanceof CacheKey)) { alse; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 145, "n_pass": [213, 23, 17]}
{"time": "2021-02-19 12:27:23.098856", "score": "0.5637", "loss": "0.9151", "code": " boolean equals(Object o) { if (r) {; } if (!(other instanceof CKey)) { alse; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 141, "n_pass": [221, 24, 18]}
{"time": "2021-02-19 12:27:24.430667", "score": "0.6456", "loss": "0.7213", "code": " boolean equals(Object o) { if (r) {; } if (!(other instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm, realm); }", "n_tokens": 137, "n_pass": [224, 25, 19]}
{"time": "2021-02-19 12:27:27.504146", "score": "0.5278", "loss": "0.9639", "code": " boolean equals(Object o) { if (r) {; } if (!(other instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(realm,m); }", "n_tokens": 132, "n_pass": [238, 27, 20]}
{"time": "2021-02-19 12:27:34.938319", "score": "0.4127", "loss": "1.2723", "code": " boolean equals(Object o) { if (r) {; } if (!(other instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 127, "n_pass": [270, 32, 21]}
{"time": "2021-02-19 12:27:49.841066", "score": "0.3455", "loss": "1.5475", "code": " boolean equals(ject o) { if (r) {; } if (!(other instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 125, "n_pass": [374, 41, 22]}
{"time": "2021-02-19 12:27:52.552847", "score": "0.3455", "loss": "1.5475", "code": " boolean equals(ject o) { if (r) {} if (!(other instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 123, "n_pass": [383, 43, 23]}
{"time": "2021-02-19 12:27:53.889021", "score": "0.3312", "loss": "1.6067", "code": " boolean equals(ject o) { if (r) {} if (!(her instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 121, "n_pass": [388, 44, 24]}
{"time": "2021-02-19 12:27:55.224179", "score": "0.3106", "loss": "1.6666", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof CKey)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 119, "n_pass": [389, 45, 25]}
{"time": "2021-02-19 12:27:56.584468", "score": "0.313", "loss": "1.6587", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { ; } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 117, "n_pass": [397, 46, 26]}
{"time": "2021-02-19 12:27:57.925376", "score": "0.313", "loss": "1.6587", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cacy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 115, "n_pass": [401, 47, 27]}
{"time": "2021-02-19 12:27:59.268648", "score": "0.3606", "loss": "1.4791", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return Obj.equals(ce) && Objes(rm); }", "n_tokens": 113, "n_pass": [406, 48, 28]}
{"time": "2021-02-19 12:28:02.317881", "score": "0.304", "loss": "1.6551", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) && Objes(rm); }", "n_tokens": 111, "n_pass": [414, 50, 29]}
{"time": "2021-02-19 12:28:08.935749", "score": "0.304", "loss": "1.6551", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&bjes(rm); }", "n_tokens": 109, "n_pass": [422, 55, 30]}
{"time": "2021-02-19 12:28:10.254506", "score": "0.5747", "loss": "0.9919", "code": " boolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&es(rm); }", "n_tokens": 107, "n_pass": [423, 56, 31]}
{"time": "2021-02-19 12:28:11.575973", "score": "0.3144", "loss": "2.02", "code": "oolean equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&es(rm); }", "n_tokens": 105, "n_pass": [427, 57, 32]}
{"time": "2021-02-19 12:28:14.223120", "score": "0.3144", "loss": "2.02", "code": "ooan equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&es(rm); }", "n_tokens": 103, "n_pass": [429, 59, 33]}
{"time": "2021-02-19 12:28:15.566910", "score": "0.445", "loss": "1.545", "code": "oo equals(ject o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&es(rm); }", "n_tokens": 101, "n_pass": [430, 60, 34]}
{"time": "2021-02-19 12:28:18.003743", "score": "0.402", "loss": "1.7422", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy) o; return O.equals(ce) &&es(rm); }", "n_tokens": 99, "n_pass": [435, 61, 35]}
{"time": "2021-02-19 12:28:19.367288", "score": "0.3375", "loss": "2.1547", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } y = (Cy); return O.equals(ce) &&es(rm); }", "n_tokens": 97, "n_pass": [463, 62, 36]}
{"time": "2021-02-19 12:28:27.558150", "score": "0.4205", "loss": "2.0565", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } y (Cy); return O.equals(ce) &&es(rm); }", "n_tokens": 95, "n_pass": [508, 67, 37]}
{"time": "2021-02-19 12:28:35.704687", "score": "0.284", "loss": "2.5486", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (Cy); return O.equals(ce) &&es(rm); }", "n_tokens": 93, "n_pass": [554, 72, 38]}
{"time": "2021-02-19 12:28:49.762290", "score": "0.3665", "loss": "2.1904", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y); return O.equals(ce) &&es(rm); }", "n_tokens": 92, "n_pass": [691, 77, 39]}
{"time": "2021-02-19 12:28:51.110793", "score": "0.3665", "loss": "2.1904", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equals(ce) &&es(rm); }", "n_tokens": 91, "n_pass": [695, 78, 40]}
{"time": "2021-02-19 12:29:00.822613", "score": "0.2409", "loss": "2.7146", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(ce) &&es(rm); }", "n_tokens": 90, "n_pass": [710, 85, 41]}
{"time": "2021-02-19 12:29:02.166112", "score": "0.2703", "loss": "2.6229", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e) &&es(rm); }", "n_tokens": 89, "n_pass": [712, 86, 42]}
{"time": "2021-02-19 12:29:04.846342", "score": "0.2703", "loss": "2.6229", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&es(rm); }", "n_tokens": 88, "n_pass": [715, 88, 43]}
{"time": "2021-02-19 12:29:08.855494", "score": "0.2433", "loss": "2.5159", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&s(rm); }", "n_tokens": 87, "n_pass": [718, 91, 44]}
{"time": "2021-02-19 12:29:10.200144", "score": "0.2688", "loss": "2.1241", "code": "oo equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 86, "n_pass": [719, 92, 45]}
{"time": "2021-02-19 12:29:11.527489", "score": "0.3012", "loss": "2.0569", "code": "o equals(ct o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 85, "n_pass": [724, 93, 46]}
{"time": "2021-02-19 12:29:15.834263", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o) { if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 84, "n_pass": [734, 94, 47]}
{"time": "2021-02-19 12:29:17.163487", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){ if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 83, "n_pass": [739, 95, 48]}
{"time": "2021-02-19 12:29:18.512028", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if (r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 82, "n_pass": [741, 96, 49]}
{"time": "2021-02-19 12:29:19.839193", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r) {} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 81, "n_pass": [744, 97, 50]}
{"time": "2021-02-19 12:29:21.167978", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){} if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 80, "n_pass": [748, 98, 51]}
{"time": "2021-02-19 12:29:22.493799", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){}if (!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 79, "n_pass": [751, 99, 52]}
{"time": "2021-02-19 12:29:23.837721", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)) { } (y);return O.equal(e)&&(rm); }", "n_tokens": 78, "n_pass": [754, 100, 53]}
{"time": "2021-02-19 12:29:29.154972", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){ } (y);return O.equal(e)&&(rm); }", "n_tokens": 77, "n_pass": [775, 104, 54]}
{"time": "2021-02-19 12:29:30.478711", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){} (y);return O.equal(e)&&(rm); }", "n_tokens": 76, "n_pass": [777, 105, 55]}
{"time": "2021-02-19 12:29:31.832148", "score": "0.2565", "loss": "2.1053", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){}(y);return O.equal(e)&&(rm); }", "n_tokens": 75, "n_pass": [779, 106, 56]}
{"time": "2021-02-19 12:29:41.543746", "score": "0.2272", "loss": "2.4973", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){}(y);return O.equal()&&(rm); }", "n_tokens": 74, "n_pass": [799, 113, 57]}
{"time": "2021-02-19 12:30:01.514736", "score": "0.3033", "loss": "1.9988", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){}(y);return O.equal()&&(m); }", "n_tokens": 73, "n_pass": [877, 125, 58]}
{"time": "2021-02-19 12:30:02.862786", "score": "0.3033", "loss": "1.9988", "code": "o equals(t o){if(r){}if(!(r instanceof Cy)){}(y);return O.equal()&&(m);}", "n_tokens": 72, "n_pass": [880, 126, 59]}
{"time": "2021-02-19 12:30:07.182975", "score": "0.2571", "loss": "2.2833", "code": "o equals(t o){if(r){}if((r instanceof Cy)){}(y);return O.equal()&&(m);}", "n_tokens": 71, "n_pass": [906, 127, 60]}
{"time": "2021-02-19 12:30:08.515596", "score": "0.2869", "loss": "1.8542", "code": "o equals(t o){if(r){}if((r instanceof y)){}(y);return O.equal()&&(m);}", "n_tokens": 70, "n_pass": [921, 128, 61]}

Minimal simplified code:
o equals(t o){if(r){}if((r instanceof y)){}(y);return O.equal()&&(m);}

