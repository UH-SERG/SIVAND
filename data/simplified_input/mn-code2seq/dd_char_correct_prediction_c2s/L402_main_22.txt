
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/pipeline-client/src/main/java/edu/illinois/cs/cogcomp/pipeline/server/ServerClientAnnotator_main.java
method_name = main
method_body = public static void main(String[] args) { ServerClientAnnotator annotator = new ServerClientAnnotator(); String sentA = "This is the best sentence ever."; annotator.setUrl("http://austen.cs.illinois.edu", "8080"); annotator.setViews(ViewNames.POS, ViewNames.LEMMA); annotator.useCaching(); try { TextAnnotation ta = annotator.annotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }
predict, score, loss = main, 0.9934240579605103, 0.008412353694438934

Trace of simplified code(s):
{"time": "2021-02-20 10:57:27.153208", "score": "0.9986", "loss": "0.0017", "code": "public static void main(String[] args) { ServerClientAnnotator annotator = new ServerClientAnnotator(); String sentA = \"This is the best sentence ever.\"; annotator.setUrl(\"http://austen.cs.illinois.edu\", \"8080\"); annotator.setViews(ViewNames.POS, ViewNames.LEMMA); annotator.useCaching(); try { TextAnnotation ta = annotator.annotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 438, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 10:57:28.519164", "score": "0.9964", "loss": "0.0044", "code": "public static void main(String[] args) { ServerClientAnnotator annotator = new ServerClientAnnotator(); Strinator.setViews(ViewNames.POS, ViewNames.LEMMA); annotator.useCaching(); try { TextAnnotation ta = annotator.annotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 329, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 10:57:29.859161", "score": "0.9994", "loss": "0.0008", "code": "public static void main(String[] args) { ServerClientAnnotator annotator = new ServerClientAnnotator(); Strinr.useCaching(); try { TextAnnotation ta = annotator.annotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 274, "n_pass": [19, 3, 3]}
{"time": "2021-02-20 10:57:31.215325", "score": "0.9669", "loss": "0.05", "code": "public static void main(String[] args) { ServerClientAr.useCaching(); try { TextAnnotation ta = annotator.annotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 219, "n_pass": [23, 4, 4]}
{"time": "2021-02-20 10:57:32.574053", "score": "0.9609", "loss": "0.0785", "code": "public static void main(String[] args) { ServerClientAr.useCaching(); try { TextAnotate(sentA); logger.info(ta.getAvailableViews().toString()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 192, "n_pass": [37, 5, 5]}
{"time": "2021-02-20 10:57:33.926759", "score": "0.9807", "loss": "0.0449", "code": "public static void main(String[] args) { ServerClientAr.useCaching(); try { TextAnotate(sentA); logger.info(ing()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 164, "n_pass": [39, 6, 6]}
{"time": "2021-02-20 10:57:35.257418", "score": "0.9807", "loss": "0.0449", "code": " void main(String[] args) { ServerClientAr.useCaching(); try { TextAnotate(sentA); logger.info(ing()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 151, "n_pass": [62, 7, 7]}
{"time": "2021-02-20 10:57:36.599243", "score": "0.9814", "loss": "0.0433", "code": " void main(String[] args) { ServerClien(); try { TextAnotate(sentA); logger.info(ing()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 137, "n_pass": [66, 8, 8]}
{"time": "2021-02-20 10:57:37.912058", "score": "0.9927", "loss": "0.0158", "code": " void main(String[] args) { ServerClien(); try { Text; logger.info(ing()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 123, "n_pass": [68, 9, 9]}
{"time": "2021-02-20 10:57:39.281415", "score": "0.9826", "loss": "0.0382", "code": " void main(String[] args) { ServerClien(); try { Textr.info(ing()); } catch (Exception e) { e.printStackTrace(); } }", "n_tokens": 116, "n_pass": [96, 10, 10]}
{"time": "2021-02-20 10:57:40.611310", "score": "0.9846", "loss": "0.0335", "code": " void main(String[] args) { ServerClien(); try { Textr.info(ing()); } catch (Exception e) { e.pckTrace(); } }", "n_tokens": 109, "n_pass": [102, 11, 11]}
{"time": "2021-02-20 10:57:41.922878", "score": "0.9706", "loss": "0.0601", "code": " void main(String[] args) { ServerClien(); try { Textr.info(ing()); } catch (Exception e) { e.p(); } }", "n_tokens": 102, "n_pass": [103, 12, 12]}
{"time": "2021-02-20 10:57:43.595078", "score": "0.9405", "loss": "0.1094", "code": " void main(String[] args) { Serv(); try { Textr.info(ing()); } catch (Exception e) { e.p(); } }", "n_tokens": 95, "n_pass": [110, 13, 13]}
{"time": "2021-02-20 10:57:45.283506", "score": "0.859", "loss": "0.2445", "code": " void main(String[] args) { Serv(); try { tr.info(ing()); } catch (Exception e) { e.p(); } }", "n_tokens": 92, "n_pass": [157, 14, 14]}
{"time": "2021-02-20 10:57:46.595378", "score": "0.9094", "loss": "0.1759", "code": " void main(String[] args) { Serv(); try { info(ing()); } catch (Exception e) { e.p(); } }", "n_tokens": 89, "n_pass": [158, 15, 15]}
{"time": "2021-02-20 10:57:47.905155", "score": "0.8188", "loss": "0.3762", "code": " void main(String[] args) { Serv(); try { o(ing()); } catch (Exception e) { e.p(); } }", "n_tokens": 86, "n_pass": [159, 16, 16]}
{"time": "2021-02-20 10:57:49.226824", "score": "0.9076", "loss": "0.1893", "code": " void main(String[] args) { Serv(); try { o(ing()); } catch (Etion e) { e.p(); } }", "n_tokens": 82, "n_pass": [165, 17, 17]}
{"time": "2021-02-20 10:57:50.536857", "score": "0.6332", "loss": "0.7452", "code": " void main(String[] args) { Serv(); try { o(ing()); } catch (E e) { e.p(); } }", "n_tokens": 78, "n_pass": [166, 18, 18]}
{"time": "2021-02-20 10:57:53.885700", "score": "0.4953", "loss": "1.0433", "code": " void main(Sng[] args) { Serv(); try { o(ing()); } catch (E e) { e.p(); } }", "n_tokens": 75, "n_pass": [175, 20, 19]}
{"time": "2021-02-20 10:57:56.507154", "score": "0.5165", "loss": "1.0724", "code": " void main(Sng[] args) {rv(); try { o(ing()); } catch (E e) { e.p(); } }", "n_tokens": 72, "n_pass": [180, 22, 20]}
{"time": "2021-02-20 10:58:02.520781", "score": "0.6183", "loss": "0.785", "code": " void main(Sng[] args) {rv; try { o(ing()); } catch (E e) { e.p(); } }", "n_tokens": 70, "n_pass": [247, 25, 21]}
{"time": "2021-02-20 10:58:03.834554", "score": "0.5105", "loss": "1.0657", "code": " void main(Sng[] args) {rv; try { o(g()); } catch (E e) { e.p(); } }", "n_tokens": 68, "n_pass": [253, 26, 22]}
{"time": "2021-02-20 10:58:05.151438", "score": "0.5635", "loss": "0.8461", "code": " void main(Sng[] args) {rv; try { o(g()); } catch (E e) { p(); } }", "n_tokens": 66, "n_pass": [265, 27, 23]}
{"time": "2021-02-20 10:58:06.463539", "score": "0.5635", "loss": "0.8461", "code": "void main(Sng[] args) {rv; try { o(g()); } catch (E e) { p(); } }", "n_tokens": 65, "n_pass": [270, 28, 24]}
{"time": "2021-02-20 10:58:14.821651", "score": "0.5452", "loss": "1.0688", "code": "void main(ng[] args) {rv; try { o(g()); } catch (E e) { p(); } }", "n_tokens": 64, "n_pass": [281, 33, 25]}
{"time": "2021-02-20 10:58:20.132968", "score": "0.6255", "loss": "0.8557", "code": "void main(ng[] args) {; try { o(g()); } catch (E e) { p(); } }", "n_tokens": 62, "n_pass": [288, 37, 26]}
{"time": "2021-02-20 10:58:21.471714", "score": "0.6255", "loss": "0.8557", "code": "void main(ng[] args) {try { o(g()); } catch (E e) { p(); } }", "n_tokens": 60, "n_pass": [289, 38, 27]}
{"time": "2021-02-20 10:58:38.432854", "score": "0.6255", "loss": "0.8557", "code": "void main(ng[] args) {try {o(g()); } catch (E e) { p(); } }", "n_tokens": 59, "n_pass": [375, 46, 28]}
{"time": "2021-02-20 10:58:39.738793", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g()); } catch (E e) { p(); } }", "n_tokens": 58, "n_pass": [376, 47, 29]}
{"time": "2021-02-20 10:58:41.060260", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());} catch (E e) { p(); } }", "n_tokens": 57, "n_pass": [383, 48, 30]}
{"time": "2021-02-20 10:58:42.364691", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch (E e) { p(); } }", "n_tokens": 56, "n_pass": [385, 49, 31]}
{"time": "2021-02-20 10:58:43.680402", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch(E e) { p(); } }", "n_tokens": 55, "n_pass": [391, 50, 32]}
{"time": "2021-02-20 10:58:45.032062", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch(E e){ p(); } }", "n_tokens": 54, "n_pass": [397, 51, 33]}
{"time": "2021-02-20 10:58:46.368935", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch(E e){p(); } }", "n_tokens": 53, "n_pass": [399, 52, 34]}
{"time": "2021-02-20 10:58:47.679047", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch(E e){p();} }", "n_tokens": 52, "n_pass": [404, 53, 35]}
{"time": "2021-02-20 10:58:48.986852", "score": "0.9843", "loss": "0.0277", "code": "void main(ng[] args) {try {(g());}catch(E e){p();}}", "n_tokens": 51, "n_pass": [406, 54, 36]}
{"time": "2021-02-20 10:58:50.282857", "score": "0.1781", "loss": "2.5459", "code": "oid main(ng[] args) {try {(g());}catch(E e){p();}}", "n_tokens": 50, "n_pass": [408, 55, 37]}
{"time": "2021-02-20 10:58:51.596622", "score": "0.2739", "loss": "2.1169", "code": "id main(ng[] args) {try {(g());}catch(E e){p();}}", "n_tokens": 49, "n_pass": [409, 56, 38]}
{"time": "2021-02-20 10:58:52.881619", "score": "0.4649", "loss": "1.3792", "code": "d main(ng[] args) {try {(g());}catch(E e){p();}}", "n_tokens": 48, "n_pass": [410, 57, 39]}
{"time": "2021-02-20 10:58:56.336900", "score": "0.8398", "loss": "0.387", "code": "d main(g[] args) {try {(g());}catch(E e){p();}}", "n_tokens": 47, "n_pass": [418, 58, 40]}
{"time": "2021-02-20 10:58:57.635767", "score": "0.8398", "loss": "0.387", "code": "d main(g[]args) {try {(g());}catch(E e){p();}}", "n_tokens": 46, "n_pass": [422, 59, 41]}
{"time": "2021-02-20 10:59:04.173400", "score": "0.8398", "loss": "0.387", "code": "d main(g[]args){try {(g());}catch(E e){p();}}", "n_tokens": 45, "n_pass": [428, 64, 42]}
{"time": "2021-02-20 10:59:05.471505", "score": "0.8398", "loss": "0.387", "code": "d main(g[]args){try{(g());}catch(E e){p();}}", "n_tokens": 44, "n_pass": [433, 65, 43]}

Minimal simplified code:
d main(g[]args){try{(g());}catch(E e){p();}}

