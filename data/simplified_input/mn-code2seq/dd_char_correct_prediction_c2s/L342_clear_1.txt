
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/util/ParameterMap_clear.java
method_name = clear
method_body = @Override public void clear() { if (locked) throw new IllegalStateException(sm.getString("parameterMap.locked")); super.clear(); }
predict, score, loss = clear, 0.9917827844619751, 0.010238176211714745

Trace of simplified code(s):
{"time": "2021-02-20 06:35:41.627021", "score": "0.9918", "loss": "0.0102", "code": "@Override public void clear() { if (locked) throw new IllegalStateException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 130, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 06:35:42.918940", "score": "0.9838", "loss": "0.0308", "code": "@Override public void clear() { teException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 98, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 06:35:44.196235", "score": "0.9382", "loss": "0.189", "code": " void clear() { teException(sm.getString(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 82, "n_pass": [23, 3, 3]}
{"time": "2021-02-20 06:35:47.163416", "score": "0.9046", "loss": "0.2692", "code": " void clear() { teException(sm.g(\"parameterMap.locked\")); super.clear(); }", "n_tokens": 74, "n_pass": [42, 5, 4]}
{"time": "2021-02-20 06:35:48.444611", "score": "0.8527", "loss": "0.4374", "code": " void clear() { teException(sm.g(\"parameocked\")); super.clear(); }", "n_tokens": 66, "n_pass": [43, 6, 5]}
{"time": "2021-02-20 06:35:50.090294", "score": "0.974", "loss": "0.0451", "code": " void clear() { ion(sm.g(\"parameocked\")); super.clear(); }", "n_tokens": 58, "n_pass": [49, 7, 6]}
{"time": "2021-02-20 06:35:51.736640", "score": "0.9813", "loss": "0.0289", "code": " void clear() { ion((\"parameocked\")); super.clear(); }", "n_tokens": 54, "n_pass": [72, 8, 7]}
{"time": "2021-02-20 06:35:53.006426", "score": "0.9813", "loss": "0.0289", "code": " void clear() { ion((\"paocked\")); super.clear(); }", "n_tokens": 50, "n_pass": [74, 9, 8]}
{"time": "2021-02-20 06:35:54.332525", "score": "0.988", "loss": "0.0165", "code": " void clear() { ion((\"pad\")); super.clear(); }", "n_tokens": 46, "n_pass": [75, 10, 9]}
{"time": "2021-02-20 06:35:56.894903", "score": "0.9951", "loss": "0.0061", "code": "d clear() { ion((\"pad\")); super.clear(); }", "n_tokens": 42, "n_pass": [81, 12, 10]}
{"time": "2021-02-20 06:36:01.242403", "score": "0.9923", "loss": "0.0115", "code": "d clear() { n((\"pad\")); super.clear(); }", "n_tokens": 40, "n_pass": [118, 14, 11]}
{"time": "2021-02-20 06:36:02.528270", "score": "0.9932", "loss": "0.0101", "code": "d clear() { n((\"d\")); super.clear(); }", "n_tokens": 38, "n_pass": [120, 15, 12]}
{"time": "2021-02-20 06:36:14.288661", "score": "0.9884", "loss": "0.0182", "code": "d clear() { n((\"\")); super.clear(); }", "n_tokens": 37, "n_pass": [175, 22, 13]}
{"time": "2021-02-20 06:36:15.579044", "score": "0.9884", "loss": "0.0182", "code": "d clear() { n((\"\"));super.clear(); }", "n_tokens": 36, "n_pass": [179, 23, 14]}
{"time": "2021-02-20 06:36:18.187818", "score": "0.3114", "loss": "1.8438", "code": "d clear() { n((\"\"));sper.clear(); }", "n_tokens": 35, "n_pass": [181, 25, 15]}
{"time": "2021-02-20 06:36:19.508559", "score": "0.4302", "loss": "1.5962", "code": "d clear() { n((\"\"));ser.clear(); }", "n_tokens": 34, "n_pass": [182, 26, 16]}
{"time": "2021-02-20 06:36:20.806382", "score": "0.3315", "loss": "1.6953", "code": "d clear() { n((\"\"));sr.clear(); }", "n_tokens": 33, "n_pass": [183, 27, 17]}
{"time": "2021-02-20 06:36:22.086970", "score": "0.4045", "loss": "1.4937", "code": "d clear() { n((\"\"));s.clear(); }", "n_tokens": 32, "n_pass": [184, 28, 18]}
{"time": "2021-02-20 06:36:33.690080", "score": "0.4045", "loss": "1.4937", "code": "d clear(){ n((\"\"));s.clear(); }", "n_tokens": 31, "n_pass": [203, 35, 19]}
{"time": "2021-02-20 06:36:34.980825", "score": "0.4045", "loss": "1.4937", "code": "d clear(){n((\"\"));s.clear(); }", "n_tokens": 30, "n_pass": [205, 36, 20]}
{"time": "2021-02-20 06:36:36.296334", "score": "0.5766", "loss": "0.8436", "code": "d clear(){((\"\"));s.clear(); }", "n_tokens": 29, "n_pass": [206, 37, 21]}
{"time": "2021-02-20 06:36:48.495267", "score": "0.5766", "loss": "0.8436", "code": "d clear(){((\"\"));s.clear();}", "n_tokens": 28, "n_pass": [240, 44, 22]}

Minimal simplified code:
d clear(){((""));s.clear();}

