
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/jce/src/main/java/javax/crypto/spec/PBEKeySpec_getPassword.java
method_name = getPassword
method_body = public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException("Password has been cleared"); } return password; }
predict, score, loss = getPassword, 0.9848573803901672, 0.07209953665733337

Trace of simplified code(s):
{"time": "2021-02-19 15:40:36.870404", "score": "0.9849", "loss": "0.0721", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException(\"Password has been cleared\"); } return password; }", "n_tokens": 143, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 15:40:38.227473", "score": "0.9808", "loss": "0.1247", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new ion(\"Password has been cleared\"); } return password; }", "n_tokens": 125, "n_pass": [24, 2, 2]}
{"time": "2021-02-19 15:40:39.574630", "score": "0.978", "loss": "0.1469", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new ion(\"Passbeen cleared\"); } return password; }", "n_tokens": 116, "n_pass": [46, 3, 3]}
{"time": "2021-02-19 15:40:40.886310", "score": "0.9721", "loss": "0.1619", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new ion(\"Passred\"); } return password; }", "n_tokens": 107, "n_pass": [47, 4, 4]}
{"time": "2021-02-19 15:40:43.527761", "score": "0.9715", "loss": "0.1926", "code": "public f[] getPassword() { if (isPasswordCleared) { throw new ion(\"Passred\"); } return password; }", "n_tokens": 98, "n_pass": [52, 6, 5]}
{"time": "2021-02-19 15:40:45.219947", "score": "0.9462", "loss": "0.4022", "code": "public f[] getPassword() { if (isPaared) { throw new ion(\"Passred\"); } return password; }", "n_tokens": 89, "n_pass": [56, 7, 6]}
{"time": "2021-02-19 15:40:46.545388", "score": "0.9555", "loss": "0.1918", "code": "public f[] getPassword() { if (isPaared) { tion(\"Passred\"); } return password; }", "n_tokens": 80, "n_pass": [58, 8, 7]}
{"time": "2021-02-19 15:40:49.556298", "score": "0.9809", "loss": "0.0852", "code": "public f[] getPassword() { if (isPaared) { tion(\"Pd\"); } return password; }", "n_tokens": 75, "n_pass": [88, 10, 8]}
{"time": "2021-02-19 15:40:53.521349", "score": "0.9842", "loss": "0.0744", "code": "publ[] getPassword() { if (isPaared) { tion(\"Pd\"); } return password; }", "n_tokens": 71, "n_pass": [95, 13, 9]}
{"time": "2021-02-19 15:40:55.961673", "score": "0.9811", "loss": "0.0936", "code": "publ[] getPassword() { if (ired) { tion(\"Pd\"); } return password; }", "n_tokens": 67, "n_pass": [102, 14, 10]}
{"time": "2021-02-19 15:41:01.042114", "score": "0.9813", "loss": "0.0808", "code": "publ[] getPassword() { if (id) { tion(\"Pd\"); } return password; }", "n_tokens": 65, "n_pass": [148, 17, 11]}
{"time": "2021-02-19 15:41:02.362882", "score": "0.9864", "loss": "0.0795", "code": "publ[] getPassword() { if (id) {ion(\"Pd\"); } return password; }", "n_tokens": 63, "n_pass": [150, 18, 12]}
{"time": "2021-02-19 15:41:03.697338", "score": "0.9833", "loss": "0.0662", "code": "publ[] getPassword() { if (id) {n(\"Pd\"); } return password; }", "n_tokens": 61, "n_pass": [151, 19, 13]}
{"time": "2021-02-19 15:41:11.581876", "score": "0.9774", "loss": "0.0785", "code": "bl[] getPassword() { if (id) {n(\"Pd\"); } return password; }", "n_tokens": 59, "n_pass": [163, 25, 14]}
{"time": "2021-02-19 15:41:12.881114", "score": "0.9769", "loss": "0.0881", "code": "bl getPassword() { if (id) {n(\"Pd\"); } return password; }", "n_tokens": 57, "n_pass": [165, 26, 15]}
{"time": "2021-02-19 15:41:30.507159", "score": "0.9769", "loss": "0.0881", "code": "bl getPassword(){ if (id) {n(\"Pd\"); } return password; }", "n_tokens": 56, "n_pass": [255, 32, 16]}
{"time": "2021-02-19 15:41:31.818512", "score": "0.9769", "loss": "0.0881", "code": "bl getPassword(){if (id) {n(\"Pd\"); } return password; }", "n_tokens": 55, "n_pass": [256, 33, 17]}
{"time": "2021-02-19 15:41:33.134852", "score": "0.9769", "loss": "0.0881", "code": "bl getPassword(){if(id) {n(\"Pd\"); } return password; }", "n_tokens": 54, "n_pass": [259, 34, 18]}
{"time": "2021-02-19 15:41:34.443460", "score": "0.9829", "loss": "0.0709", "code": "bl getPassword(){if(d) {n(\"Pd\"); } return password; }", "n_tokens": 53, "n_pass": [261, 35, 19]}
{"time": "2021-02-19 15:41:35.754512", "score": "0.9829", "loss": "0.0709", "code": "bl getPassword(){if(d){n(\"Pd\"); } return password; }", "n_tokens": 52, "n_pass": [264, 36, 20]}
{"time": "2021-02-19 15:41:37.084606", "score": "0.9847", "loss": "0.0534", "code": "bl getPassword(){if(d){(\"Pd\"); } return password; }", "n_tokens": 51, "n_pass": [266, 37, 21]}
{"time": "2021-02-19 15:41:38.427395", "score": "0.984", "loss": "0.0613", "code": "bl getPassword(){if(d){(\"d\"); } return password; }", "n_tokens": 50, "n_pass": [269, 38, 22]}
{"time": "2021-02-19 15:41:39.733074", "score": "0.9843", "loss": "0.0601", "code": "bl getPassword(){if(d){(\"\"); } return password; }", "n_tokens": 49, "n_pass": [270, 39, 23]}
{"time": "2021-02-19 15:41:41.052215", "score": "0.9843", "loss": "0.0601", "code": "bl getPassword(){if(d){(\"\");} return password; }", "n_tokens": 48, "n_pass": [274, 40, 24]}
{"time": "2021-02-19 15:41:42.376260", "score": "0.9843", "loss": "0.0601", "code": "bl getPassword(){if(d){(\"\");}return password; }", "n_tokens": 47, "n_pass": [276, 41, 25]}
{"time": "2021-02-19 15:41:55.555030", "score": "0.9849", "loss": "0.0576", "code": "l getPassword(){if(d){(\"\");}return password; }", "n_tokens": 46, "n_pass": [288, 51, 26]}
{"time": "2021-02-19 15:42:29.076952", "score": "0.9849", "loss": "0.0576", "code": "l getPassword(){if(d){(\"\");}return password;}", "n_tokens": 45, "n_pass": [354, 72, 27]}

Minimal simplified code:
l getPassword(){if(d){("");}return password;}

