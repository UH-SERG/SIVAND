
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/conditions/environment/SimpleTimeCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }
predict, score, loss = hashCode, 0.9998102188110352, 0.00046020682202652097

Trace of simplified code(s):
{"time": "2021-02-20 05:51:01.593875", "score": "0.9999", "loss": "0.0002", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 439, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 05:51:02.979411", "score": "0.9985", "loss": "0.0039", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 384, "n_pass": [21, 2, 2]}
{"time": "2021-02-20 05:51:04.328985", "score": "0.9987", "loss": "0.0031", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 329, "n_pass": [23, 3, 3]}
{"time": "2021-02-20 05:51:06.052718", "score": "0.999", "loss": "0.0024", "code": "@Override public int hashCode() { int hc = super.hashCnute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 301, "n_pass": [48, 4, 4]}
{"time": "2021-02-20 05:51:07.790354", "score": "0.9989", "loss": "0.0028", "code": "@Override public int hashCode() { int hc = super.hashCr; hc = 31 * hc + endMinute;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 274, "n_pass": [52, 5, 5]}
{"time": "2021-02-20 05:51:09.134537", "score": "0.9988", "loss": "0.0032", "code": "@Override public int hashCode() { int hc = super.hashC;if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 247, "n_pass": [53, 6, 6]}
{"time": "2021-02-20 05:51:10.868889", "score": "0.9986", "loss": "0.004", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 233, "n_pass": [82, 7, 7]}
{"time": "2021-02-20 05:51:12.191097", "score": "0.999", "loss": "0.0028", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 219, "n_pass": [84, 8, 8]}
{"time": "2021-02-20 05:51:13.524455", "score": "0.9988", "loss": "0.0039", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {Z.hashCode(); } return hc; }", "n_tokens": 205, "n_pass": [89, 9, 9]}
{"time": "2021-02-20 05:51:14.854985", "score": "0.9981", "loss": "0.0058", "code": "@Override public int hashCode() { int hc = super.hashC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 191, "n_pass": [93, 10, 10]}
{"time": "2021-02-20 05:51:16.551623", "score": "0.9885", "loss": "0.0348", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * Cal.hashCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 178, "n_pass": [98, 11, 11]}
{"time": "2021-02-20 05:51:18.258844", "score": "0.9626", "loss": "0.1168", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = 31 * hchashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 171, "n_pass": [142, 12, 12]}
{"time": "2021-02-20 05:51:19.599641", "score": "0.9973", "loss": "0.0094", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = hashCode(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 164, "n_pass": [148, 13, 13]}
{"time": "2021-02-20 05:51:20.938404", "score": "0.9506", "loss": "0.1513", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enforcementTZ != null) {} return hc; }", "n_tokens": 157, "n_pass": [149, 14, 14]}
{"time": "2021-02-20 05:51:22.265398", "score": "0.9356", "loss": "0.1964", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enftTZ != null) {} return hc; }", "n_tokens": 150, "n_pass": [152, 15, 15]}
{"time": "2021-02-20 05:51:23.583616", "score": "0.9545", "loss": "0.154", "code": "@Override public int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 143, "n_pass": [153, 16, 16]}
{"time": "2021-02-20 05:51:24.904529", "score": "0.9391", "loss": "0.2363", "code": "@Overrblic int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 137, "n_pass": [158, 17, 17]}
{"time": "2021-02-20 05:51:27.318675", "score": "0.9391", "loss": "0.2363", "code": "@Overrc int hashCode() { int hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 134, "n_pass": [219, 18, 18]}
{"time": "2021-02-20 05:51:29.744333", "score": "0.918", "loss": "0.3174", "code": "@Overrc int hashCode() {t hhC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 131, "n_pass": [225, 19, 19]}
{"time": "2021-02-20 05:51:31.054527", "score": "0.91", "loss": "0.3233", "code": "@Overrc int hashCode() {hC;if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 128, "n_pass": [226, 20, 20]}
{"time": "2021-02-20 05:51:32.368639", "score": "0.8927", "loss": "0.3422", "code": "@Overrc int hashCode() {if (startD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 125, "n_pass": [227, 21, 21]}
{"time": "2021-02-20 05:51:33.681905", "score": "0.9019", "loss": "0.3228", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * hCode(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 122, "n_pass": [230, 22, 22]}
{"time": "2021-02-20 05:51:35.018064", "score": "0.8279", "loss": "0.5525", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (endDateCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 119, "n_pass": [236, 23, 23]}
{"time": "2021-02-20 05:51:36.406424", "score": "0.9376", "loss": "0.2528", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (eneCal != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 115, "n_pass": [241, 24, 24]}
{"time": "2021-02-20 05:51:37.718396", "score": "0.9113", "loss": "0.324", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en != null) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 111, "n_pass": [242, 25, 25]}
{"time": "2021-02-20 05:51:39.100768", "score": "0.8183", "loss": "0.7587", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (ennull) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 107, "n_pass": [243, 26, 26]}
{"time": "2021-02-20 05:51:40.407304", "score": "0.8867", "loss": "0.4391", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { hc = e(); } if (enfnull) {} return hc; }", "n_tokens": 103, "n_pass": [244, 27, 27]}
{"time": "2021-02-20 05:51:41.741118", "score": "0.8174", "loss": "0.6861", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) {  e(); } if (enfnull) {} return hc; }", "n_tokens": 99, "n_pass": [246, 28, 28]}
{"time": "2021-02-20 05:51:43.041394", "score": "0.8745", "loss": "0.4936", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (enfnull) {} return hc; }", "n_tokens": 95, "n_pass": [247, 29, 29]}
{"time": "2021-02-20 05:51:44.339825", "score": "0.9233", "loss": "0.3331", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull) {} return hc; }", "n_tokens": 91, "n_pass": [250, 30, 30]}
{"time": "2021-02-20 05:51:45.660200", "score": "0.8798", "loss": "0.491", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)return hc; }", "n_tokens": 87, "n_pass": [252, 31, 31]}
{"time": "2021-02-20 05:51:46.980182", "score": "0.6251", "loss": "1.8807", "code": "@Overrc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)retuc; }", "n_tokens": 83, "n_pass": [254, 32, 32]}
{"time": "2021-02-20 05:51:48.287003", "score": "0.6712", "loss": "1.6527", "code": "@Ovc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)retuc; }", "n_tokens": 80, "n_pass": [257, 33, 33]}
{"time": "2021-02-20 05:51:51.020073", "score": "0.7716", "loss": "1.11", "code": "@Ovc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 76, "n_pass": [279, 34, 34]}
{"time": "2021-02-20 05:51:55.076047", "score": "0.5531", "loss": "1.8352", "code": "@vc int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 75, "n_pass": [352, 35, 35]}
{"time": "2021-02-20 05:51:56.372885", "score": "0.7819", "loss": "1.1045", "code": "@c int hashCode() {if (stD) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 74, "n_pass": [353, 36, 36]}
{"time": "2021-02-20 05:52:04.809250", "score": "0.8219", "loss": "0.8656", "code": "@c int hashCode() {if (s) { hc = 31 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 72, "n_pass": [372, 40, 37]}
{"time": "2021-02-20 05:52:06.110502", "score": "0.7896", "loss": "1.0453", "code": "@c int hashCode() {if (s) { hc =1 * de(); } if (en) { ; } if (ull)c; }", "n_tokens": 70, "n_pass": [377, 41, 38]}
{"time": "2021-02-20 05:52:07.409009", "score": "0.8712", "loss": "0.5339", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { ; } if (ull)c; }", "n_tokens": 68, "n_pass": [381, 42, 39]}
{"time": "2021-02-20 05:52:08.745435", "score": "0.8712", "loss": "0.5339", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (ull)c; }", "n_tokens": 66, "n_pass": [389, 43, 40]}
{"time": "2021-02-20 05:52:10.405186", "score": "0.8727", "loss": "0.4951", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l)c; }", "n_tokens": 64, "n_pass": [393, 44, 41]}
{"time": "2021-02-20 05:52:25.206366", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l); }", "n_tokens": 63, "n_pass": [484, 48, 42]}
{"time": "2021-02-20 05:52:26.511541", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode() {if (s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 62, "n_pass": [485, 49, 43]}
{"time": "2021-02-20 05:52:35.345495", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode(){if (s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 61, "n_pass": [504, 53, 44]}
{"time": "2021-02-20 05:52:36.650585", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode(){if(s) { hc =1 * de; } if (en) { } if (l);}", "n_tokens": 60, "n_pass": [508, 54, 45]}
{"time": "2021-02-20 05:52:37.974953", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode(){if(s){ hc =1 * de; } if (en) { } if (l);}", "n_tokens": 59, "n_pass": [512, 55, 46]}
{"time": "2021-02-20 05:52:39.301603", "score": "0.9076", "loss": "0.3963", "code": "@c int hashCode(){if(s){hc =1 * de; } if (en) { } if (l);}", "n_tokens": 58, "n_pass": [514, 56, 47]}
{"time": "2021-02-20 05:52:40.583651", "score": "0.7537", "loss": "1.1114", "code": "@c int hashCode(){if(s){c =1 * de; } if (en) { } if (l);}", "n_tokens": 57, "n_pass": [515, 57, 48]}
{"time": "2021-02-20 05:52:41.912654", "score": "0.7537", "loss": "1.1114", "code": "@c int hashCode(){if(s){c=1 * de; } if (en) { } if (l);}", "n_tokens": 56, "n_pass": [517, 58, 49]}
{"time": "2021-02-20 05:52:43.578980", "score": "0.7537", "loss": "1.1114", "code": "@c int hashCode(){if(s){c=1* de; } if (en) { } if (l);}", "n_tokens": 55, "n_pass": [520, 59, 50]}
{"time": "2021-02-20 05:52:44.911888", "score": "0.7537", "loss": "1.1114", "code": "@c int hashCode(){if(s){c=1*de; } if (en) { } if (l);}", "n_tokens": 54, "n_pass": [522, 60, 51]}
{"time": "2021-02-20 05:52:46.219821", "score": "0.7427", "loss": "1.2365", "code": "@c int hashCode(){if(s){c=1*e; } if (en) { } if (l);}", "n_tokens": 53, "n_pass": [523, 61, 52]}
{"time": "2021-02-20 05:52:47.543230", "score": "0.7427", "loss": "1.2365", "code": "@c int hashCode(){if(s){c=1*e;} if (en) { } if (l);}", "n_tokens": 52, "n_pass": [526, 62, 53]}
{"time": "2021-02-20 05:52:48.871154", "score": "0.7427", "loss": "1.2365", "code": "@c int hashCode(){if(s){c=1*e;}if (en) { } if (l);}", "n_tokens": 51, "n_pass": [528, 63, 54]}
{"time": "2021-02-20 05:52:50.198077", "score": "0.7427", "loss": "1.2365", "code": "@c int hashCode(){if(s){c=1*e;}if(en) { } if (l);}", "n_tokens": 50, "n_pass": [531, 64, 55]}
{"time": "2021-02-20 05:52:51.501842", "score": "0.7016", "loss": "1.4218", "code": "@c int hashCode(){if(s){c=1*e;}if(n) { } if (l);}", "n_tokens": 49, "n_pass": [533, 65, 56]}
{"time": "2021-02-20 05:52:52.799176", "score": "0.7016", "loss": "1.4218", "code": "@c int hashCode(){if(s){c=1*e;}if(n){ } if (l);}", "n_tokens": 48, "n_pass": [536, 66, 57]}
{"time": "2021-02-20 05:52:54.122759", "score": "0.7016", "loss": "1.4218", "code": "@c int hashCode(){if(s){c=1*e;}if(n){} if (l);}", "n_tokens": 47, "n_pass": [538, 67, 58]}
{"time": "2021-02-20 05:52:55.429864", "score": "0.7016", "loss": "1.4218", "code": "@c int hashCode(){if(s){c=1*e;}if(n){}if (l);}", "n_tokens": 46, "n_pass": [540, 68, 59]}
{"time": "2021-02-20 05:52:59.350753", "score": "0.7016", "loss": "1.4218", "code": "@c int hashCode(){if(s){c=1*e;}if(n){}if(l);}", "n_tokens": 45, "n_pass": [543, 71, 60]}

Minimal simplified code:
@c int hashCode(){if(s){c=1*e;}if(n){}if(l);}

