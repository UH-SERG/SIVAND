
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wotomas__VoiceRipple/ripplelibrary/src/main/java/info/kimjihyok/ripplelibrary/renderer/TimerCircleRippleRenderer_setStrokeWidth.java
method_name = setStrokeWidth
method_body = public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException("Stroke Width should be an even number!"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }
predict, score, loss = setStrokeWidth, 0.9884253740310669, 0.06704097986221313

Trace of simplified code(s):
{"time": "2021-02-20 11:52:34.239296", "score": "0.9884", "loss": "0.067", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"Stroke Width should be an even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 227, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 11:52:35.577901", "score": "0.9894", "loss": "0.0626", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"St number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 199, "n_pass": [24, 2, 2]}
{"time": "2021-02-20 11:52:38.274168", "score": "0.9657", "loss": "0.2416", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"St number!\"); } th = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 185, "n_pass": [47, 4, 3]}
{"time": "2021-02-20 11:52:39.595125", "score": "0.9689", "loss": "0.2217", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"St number!\"); } th; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 171, "n_pass": [48, 5, 4]}
{"time": "2021-02-20 11:52:40.923060", "score": "0.9834", "loss": "0.084", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"St number!\"); } setStrokeWidth(strokeWidth); }", "n_tokens": 156, "n_pass": [49, 6, 5]}
{"time": "2021-02-20 11:52:42.605196", "score": "0.9859", "loss": "0.065", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new IllegalArgumentException(\"St number!\"); } setStrokeWidth(strokeWidth); }", "n_tokens": 142, "n_pass": [56, 7, 6]}
{"time": "2021-02-20 11:52:43.941056", "score": "0.9819", "loss": "0.0837", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new tException(\"St number!\"); } setStrokeWidth(strokeWidth); }", "n_tokens": 128, "n_pass": [58, 8, 7]}
{"time": "2021-02-20 11:52:45.608045", "score": "0.9796", "loss": "0.094", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new ion(\"St number!\"); } setStrokeWidth(strokeWidth); }", "n_tokens": 121, "n_pass": [86, 9, 8]}
{"time": "2021-02-20 11:52:46.912265", "score": "0.9833", "loss": "0.0766", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new ion(\"St!\"); } setStrokeWidth(strokeWidth); }", "n_tokens": 114, "n_pass": [87, 10, 9]}
{"time": "2021-02-20 11:52:48.216503", "score": "0.7598", "loss": "1.2617", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new ion(\"St!\"); } keWidth(strokeWidth); }", "n_tokens": 107, "n_pass": [89, 11, 10]}
{"time": "2021-02-20 11:52:49.514592", "score": "0.9575", "loss": "0.2917", "code": "public void setStrokeWidth(int strokeWidth) { if (stroke) { throw new ion(\"St!\"); } (strokeWidth); }", "n_tokens": 100, "n_pass": [90, 12, 11]}
{"time": "2021-02-20 11:52:50.823900", "score": "0.9575", "loss": "0.2917", "code": "void setStrokeWidth(int strokeWidth) { if (stroke) { throw new ion(\"St!\"); } (strokeWidth); }", "n_tokens": 93, "n_pass": [93, 13, 12]}
{"time": "2021-02-20 11:52:54.131236", "score": "0.9213", "loss": "0.3569", "code": "void setStrokeWidth(int strokeWidth) { if (stroke) { thrion(\"St!\"); } (strokeWidth); }", "n_tokens": 86, "n_pass": [102, 15, 13]}
{"time": "2021-02-20 11:52:57.484701", "score": "0.8933", "loss": "0.4842", "code": "void setStrokeWidth(int strokeWidth) { if (stroke) { tn(\"St!\"); } (strokeWidth); }", "n_tokens": 82, "n_pass": [139, 17, 14]}
{"time": "2021-02-20 11:52:58.779887", "score": "0.8228", "loss": "1.14", "code": "void setStrokeWidth(int strokeWidth) { if (stroke) { tn(\"St!\"); } (stridth); }", "n_tokens": 78, "n_pass": [144, 18, 15]}
{"time": "2021-02-20 11:53:00.073851", "score": "0.7495", "loss": "1.5582", "code": "void setStrokeWidth(int strokeWidth) { if (stroke) { tn(\"St!\"); } (str); }", "n_tokens": 74, "n_pass": [145, 19, 16]}
{"time": "2021-02-20 11:53:25.774861", "score": "0.72", "loss": "1.8412", "code": "void setStrokeWidth(int strokeWidth) { if (soke) { tn(\"St!\"); } (str); }", "n_tokens": 72, "n_pass": [238, 34, 17]}
{"time": "2021-02-20 11:53:27.092581", "score": "0.6638", "loss": "2.1521", "code": "void setStrokeWidth(int strokeWidth) { if (se) { tn(\"St!\"); } (str); }", "n_tokens": 70, "n_pass": [239, 35, 18]}
{"time": "2021-02-20 11:53:28.403457", "score": "0.7449", "loss": "1.6328", "code": "void setStrokeWidth(int strokeWidth) { if (se) {n(\"St!\"); } (str); }", "n_tokens": 68, "n_pass": [242, 36, 19]}
{"time": "2021-02-20 11:53:29.712236", "score": "0.8387", "loss": "1.1408", "code": "void setStrokeWidth(int strokeWidth) { if (se) {n(\"S\"); } (str); }", "n_tokens": 66, "n_pass": [245, 37, 20]}
{"time": "2021-02-20 11:53:31.021582", "score": "0.7781", "loss": "1.4599", "code": "void setStrokeWidth(int strokeWidth) { if (se) {n(\"S\"); } (s); }", "n_tokens": 64, "n_pass": [250, 38, 21]}
{"time": "2021-02-20 11:53:52.170020", "score": "0.7781", "loss": "1.4599", "code": "void setStrokeWidth(int strokeWidth) { if (se) {n(\"S\"); } (s);}", "n_tokens": 63, "n_pass": [344, 49, 22]}
{"time": "2021-02-20 11:54:04.156886", "score": "0.6234", "loss": "2.7532", "code": "void setStrokeWidth(nt strokeWidth) { if (se) {n(\"S\"); } (s);}", "n_tokens": 62, "n_pass": [365, 54, 23]}
{"time": "2021-02-20 11:54:06.777668", "score": "0.6702", "loss": "2.3443", "code": "void setStrokeWidth(n strokeWidth) { if (se) {n(\"S\"); } (s);}", "n_tokens": 61, "n_pass": [367, 56, 24]}
{"time": "2021-02-20 11:54:22.392975", "score": "0.6702", "loss": "2.3443", "code": "void setStrokeWidth(n strokeWidth){ if (se) {n(\"S\"); } (s);}", "n_tokens": 60, "n_pass": [381, 68, 25]}
{"time": "2021-02-20 11:54:23.693396", "score": "0.6702", "loss": "2.3443", "code": "void setStrokeWidth(n strokeWidth){if (se) {n(\"S\"); } (s);}", "n_tokens": 59, "n_pass": [383, 69, 26]}
{"time": "2021-02-20 11:54:24.995331", "score": "0.6702", "loss": "2.3443", "code": "void setStrokeWidth(n strokeWidth){if(se) {n(\"S\"); } (s);}", "n_tokens": 58, "n_pass": [386, 70, 27]}
{"time": "2021-02-20 11:54:26.295309", "score": "0.6291", "loss": "2.5279", "code": "void setStrokeWidth(n strokeWidth){if(e) {n(\"S\"); } (s);}", "n_tokens": 57, "n_pass": [388, 71, 28]}
{"time": "2021-02-20 11:54:27.596471", "score": "0.6291", "loss": "2.5279", "code": "void setStrokeWidth(n strokeWidth){if(e){n(\"S\"); } (s);}", "n_tokens": 56, "n_pass": [391, 72, 29]}
{"time": "2021-02-20 11:54:28.907082", "score": "0.7028", "loss": "2.4409", "code": "void setStrokeWidth(n strokeWidth){if(e){(\"S\"); } (s);}", "n_tokens": 55, "n_pass": [393, 73, 30]}
{"time": "2021-02-20 11:54:30.206229", "score": "0.6233", "loss": "3.0492", "code": "void setStrokeWidth(n strokeWidth){if(e){(\"\"); } (s);}", "n_tokens": 54, "n_pass": [396, 74, 31]}
{"time": "2021-02-20 11:54:31.494552", "score": "0.6233", "loss": "3.0492", "code": "void setStrokeWidth(n strokeWidth){if(e){(\"\");} (s);}", "n_tokens": 53, "n_pass": [400, 75, 32]}
{"time": "2021-02-20 11:54:32.805314", "score": "0.6233", "loss": "3.0492", "code": "void setStrokeWidth(n strokeWidth){if(e){(\"\");}(s);}", "n_tokens": 52, "n_pass": [402, 76, 33]}

Minimal simplified code:
void setStrokeWidth(n strokeWidth){if(e){("");}(s);}

