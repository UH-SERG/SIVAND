
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/companion/solo/tlv/SoloZiplineOptions_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { super.writeToParcel(dest, flags); dest.writeByte(is3D ? (byte) 1 : (byte) 0); dest.writeByte(cameraLock ? (byte) 1 : (byte) 0); }
predict, score, loss = writeToParcel, 0.9999714493751526, 0.00018226474639959633

Trace of simplified code(s):
{"time": "2021-02-19 01:31:31.774477", "score": "1.0", "loss": "0.0002", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.writeToParcel(dest, flags); dest.writeByte(is3D ? (byte) 1 : (byte) 0); dest.writeByte(cameraLock ? (byte) 1 : (byte) 0); }", "n_tokens": 191, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 01:31:33.145940", "score": "1.0", "loss": "0.0002", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.writeToParcel(dest, flags);t.writeByte(cameraLock ? (byte) 1 : (byte) 0); }", "n_tokens": 143, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 01:31:34.866640", "score": "0.9986", "loss": "0.0058", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.writ.writeByte(cameraLock ? (byte) 1 : (byte) 0); }", "n_tokens": 119, "n_pass": [24, 3, 3]}
{"time": "2021-02-19 01:31:37.357204", "score": "0.9913", "loss": "0.0415", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.wrieByte(cameraLock ? (byte) 1 : (byte) 0); }", "n_tokens": 113, "n_pass": [69, 4, 4]}
{"time": "2021-02-19 01:31:38.684372", "score": "0.9894", "loss": "0.0568", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.wrieByte(Lock ? (byte) 1 : (byte) 0); }", "n_tokens": 107, "n_pass": [70, 5, 5]}
{"time": "2021-02-19 01:31:40.028267", "score": "0.9901", "loss": "0.0533", "code": "@Override public void writeToParcel(Parcel dest, int flags) { super.wrieByte(Lock ? (byte) 1 :  0); }", "n_tokens": 101, "n_pass": [74, 6, 6]}
{"time": "2021-02-19 01:31:41.373608", "score": "0.9792", "loss": "0.1297", "code": "@Overublic void writeToParcel(Parcel dest, int flags) { super.wrieByte(Lock ? (byte) 1 :  0); }", "n_tokens": 95, "n_pass": [77, 7, 7]}
{"time": "2021-02-19 01:31:45.592237", "score": "0.9971", "loss": "0.0119", "code": "@Overublic void writeToParcel(Parcel dest, int flags) { supeByte(Lock ? (byte) 1 :  0); }", "n_tokens": 89, "n_pass": [87, 9, 8]}
{"time": "2021-02-19 01:31:49.733818", "score": "0.9952", "loss": "0.0216", "code": "@Overublic void writeToParcel(Parcel dest, int flags) { supte(Lock ? (byte) 1 :  0); }", "n_tokens": 86, "n_pass": [133, 11, 9]}
{"time": "2021-02-19 01:31:51.063415", "score": "0.9954", "loss": "0.0208", "code": "@Overublic void writeToParcel(Parcel dest, int flags) { supte(k ? (byte) 1 :  0); }", "n_tokens": 83, "n_pass": [134, 12, 10]}
{"time": "2021-02-19 01:31:52.386607", "score": "0.9941", "loss": "0.0249", "code": "@Overublic void writeToParcel(Parcel dest, int flags) { supte(k ? (b) 1 :  0); }", "n_tokens": 80, "n_pass": [137, 13, 11]}
{"time": "2021-02-19 01:31:53.750241", "score": "0.9941", "loss": "0.0249", "code": "@Oublic void writeToParcel(Parcel dest, int flags) { supte(k ? (b) 1 :  0); }", "n_tokens": 77, "n_pass": [143, 14, 12]}
{"time": "2021-02-19 01:31:55.098698", "score": "0.9921", "loss": "0.0351", "code": "@Oic void writeToParcel(Parcel dest, int flags) { supte(k ? (b) 1 :  0); }", "n_tokens": 74, "n_pass": [144, 15, 13]}
{"time": "2021-02-19 01:31:56.824726", "score": "0.9629", "loss": "0.1552", "code": "@Oic d writeToParcel(Parcel dest, int flags) { supte(k ? (b) 1 :  0); }", "n_tokens": 71, "n_pass": [146, 16, 14]}
{"time": "2021-02-19 01:32:01.375402", "score": "0.9157", "loss": "0.3882", "code": "@Oic d writeToParcel(Parcel d, int flags) { supte(k ? (b) 1 :  0); }", "n_tokens": 68, "n_pass": [155, 18, 15]}
{"time": "2021-02-19 01:32:02.709841", "score": "0.7638", "loss": "1.7747", "code": "@Oic d writeToParcel(Parcel d, int gs) { supte(k ? (b) 1 :  0); }", "n_tokens": 65, "n_pass": [158, 19, 16]}
{"time": "2021-02-19 01:32:04.062394", "score": "0.8666", "loss": "0.8523", "code": "@Oic d writeToParcel(Parcel d, int gs) { te(k ? (b) 1 :  0); }", "n_tokens": 62, "n_pass": [161, 20, 17]}
{"time": "2021-02-19 01:32:09.729812", "score": "0.873", "loss": "0.8794", "code": "@Oic d writeToParcel(Parcel d, int gs) {e(k ? (b) 1 :  0); }", "n_tokens": 60, "n_pass": [228, 22, 18]}
{"time": "2021-02-19 01:32:12.426404", "score": "0.9089", "loss": "0.6229", "code": "@ic d writeToParcel(Parcel d, int gs) {e(k ? (b) 1 :  0); }", "n_tokens": 59, "n_pass": [240, 24, 19]}
{"time": "2021-02-19 01:32:13.741940", "score": "0.9228", "loss": "0.5164", "code": "@c d writeToParcel(Parcel d, int gs) {e(k ? (b) 1 :  0); }", "n_tokens": 58, "n_pass": [241, 25, 20]}
{"time": "2021-02-19 01:32:25.392252", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k ? (b) 1 :  0); }", "n_tokens": 56, "n_pass": [265, 29, 21]}
{"time": "2021-02-19 01:32:43.546007", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k? (b) 1 :  0); }", "n_tokens": 55, "n_pass": [344, 35, 22]}
{"time": "2021-02-19 01:32:44.870346", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b) 1 :  0); }", "n_tokens": 54, "n_pass": [346, 36, 23]}
{"time": "2021-02-19 01:32:46.228061", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b)1 :  0); }", "n_tokens": 53, "n_pass": [350, 37, 24]}
{"time": "2021-02-19 01:32:48.930700", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b)1:  0); }", "n_tokens": 52, "n_pass": [352, 39, 25]}
{"time": "2021-02-19 01:32:50.256903", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b)1: 0); }", "n_tokens": 51, "n_pass": [354, 40, 26]}
{"time": "2021-02-19 01:32:51.599745", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b)1:0); }", "n_tokens": 50, "n_pass": [355, 41, 27]}
{"time": "2021-02-19 01:32:52.936092", "score": "0.7818", "loss": "1.1981", "code": "@c d writeToParcel(Parcel d,nt gs) {e(k?(b)1:0);}", "n_tokens": 49, "n_pass": [359, 42, 28]}
{"time": "2021-02-19 01:33:08.661249", "score": "0.7915", "loss": "1.3627", "code": "@c d writeToParcel(Parcel d,t gs) {e(k?(b)1:0);}", "n_tokens": 48, "n_pass": [389, 49, 29]}
{"time": "2021-02-19 01:33:12.649366", "score": "0.7915", "loss": "1.3627", "code": "@c d writeToParcel(Parcel d,t gs){e(k?(b)1:0);}", "n_tokens": 47, "n_pass": [395, 52, 30]}

Minimal simplified code:
@c d writeToParcel(Parcel d,t gs){e(k?(b)1:0);}

