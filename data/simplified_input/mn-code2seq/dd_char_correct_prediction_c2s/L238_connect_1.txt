
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/bio/src/main/java/org/kaazing/gateway/transport/bio/AbstractBioConnector_connect.java
method_name = connect
method_body = @Override public ConnectFuture connect(ResourceAddress address, IoHandler handler, IoSessionInitializer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }
predict, score, loss = connect, 0.9944595098495483, 0.07202627509832382

Trace of simplified code(s):
{"time": "2021-02-19 23:45:20.653290", "score": "0.9945", "loss": "0.072", "code": "@Override public ConnectFuture connect(ResourceAddress address, IoHandler handler, IoSessionInitializer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 302, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 23:45:22.403403", "score": "0.9913", "loss": "0.1494", "code": "onnectFuture connect(ResourceAddress address, IoHandler handler, IoSessionInitializer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 284, "n_pass": [44, 2, 2]}
{"time": "2021-02-19 23:45:24.124203", "score": "0.9904", "loss": "0.142", "code": "onnectFuture connect(ResourceAddress handler, IoSessionInitializer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 265, "n_pass": [47, 3, 3]}
{"time": "2021-02-19 23:45:27.249677", "score": "0.9904", "loss": "0.142", "code": "onnectFuture connect(ResourceAddress handler,nInitializer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 256, "n_pass": [91, 5, 4]}
{"time": "2021-02-19 23:45:28.612757", "score": "0.9904", "loss": "0.142", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends ConnectFuture> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 247, "n_pass": [92, 6, 5]}
{"time": "2021-02-19 23:45:29.968105", "score": "0.988", "loss": "0.1228", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) { init(); started.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 238, "n_pass": [95, 7, 6]}
{"time": "2021-02-19 23:45:31.308211", "score": "0.9877", "loss": "0.1137", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {tarted.set(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 228, "n_pass": [105, 8, 7]}
{"time": "2021-02-19 23:45:32.662679", "score": "0.9885", "loss": "0.1154", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(address, handler, initializer); }", "n_tokens": 218, "n_pass": [106, 9, 8]}
{"time": "2021-02-19 23:45:35.344288", "score": "0.9874", "loss": "0.1022", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addler, initializer); }", "n_tokens": 208, "n_pass": [111, 11, 9]}
{"time": "2021-02-19 23:45:36.701999", "score": "0.9893", "loss": "0.08", "code": "onnectFuture connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 198, "n_pass": [112, 12, 10]}
{"time": "2021-02-19 23:45:38.031470", "score": "0.9867", "loss": "0.0843", "code": "ure connect(ResourceAddress handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 189, "n_pass": [114, 13, 11]}
{"time": "2021-02-19 23:45:39.738066", "score": "0.9886", "loss": "0.0946", "code": "ure connect(Resour handler,zer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 180, "n_pass": [117, 14, 12]}
{"time": "2021-02-19 23:45:41.082239", "score": "0.9866", "loss": "0.1225", "code": "ure connect(Resourzer<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 171, "n_pass": [118, 15, 13]}
{"time": "2021-02-19 23:45:44.130948", "score": "0.9866", "loss": "0.1225", "code": "ure connect(Resor<? extends Conn> initializer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 167, "n_pass": [173, 17, 14]}
{"time": "2021-02-19 23:45:45.572400", "score": "0.9912", "loss": "0.1118", "code": "ure connect(Resor<? extends Conn> inizer) { if (!started.get()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 162, "n_pass": [179, 18, 15]}
{"time": "2021-02-19 23:45:46.934618", "score": "0.9921", "loss": "0.1001", "code": "ure connect(Resor<? extends Conn> inizer) { if (!staget()) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 157, "n_pass": [183, 19, 16]}
{"time": "2021-02-19 23:45:48.269392", "score": "0.9888", "loss": "0.0871", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (started) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 152, "n_pass": [184, 20, 17]}
{"time": "2021-02-19 23:45:49.620576", "score": "0.9769", "loss": "0.153", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!started.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 147, "n_pass": [189, 21, 18]}
{"time": "2021-02-19 23:45:50.980992", "score": "0.9709", "loss": "0.1705", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!sd.get()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 142, "n_pass": [192, 22, 19]}
{"time": "2021-02-19 23:45:52.351036", "score": "0.9665", "loss": "0.1932", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInternal(addalizer); }", "n_tokens": 137, "n_pass": [193, 23, 20]}
{"time": "2021-02-19 23:45:56.359682", "score": "0.4281", "loss": "1.9473", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addalizer); }", "n_tokens": 132, "n_pass": [201, 26, 21]}
{"time": "2021-02-19 23:45:57.714850", "score": "0.78", "loss": "0.9157", "code": "ure connect(Resor<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 127, "n_pass": [203, 27, 22]}
{"time": "2021-02-19 23:45:59.856215", "score": "0.78", "loss": "0.9157", "code": "ure connect(r<? extends Conn> inizer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 123, "n_pass": [208, 28, 23]}
{"time": "2021-02-19 23:46:04.661896", "score": "0.8335", "loss": "0.6669", "code": "ure connect(r<? extends nn> inizer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 121, "n_pass": [293, 31, 24]}
{"time": "2021-02-19 23:46:06.022637", "score": "0.7429", "loss": "0.9602", "code": "ure connect(r<? extends nn> izer) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 119, "n_pass": [295, 32, 25]}
{"time": "2021-02-19 23:46:07.376848", "score": "0.5109", "loss": "1.435", "code": "ure connect(r<? extends nn> er) { if (!sta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 117, "n_pass": [296, 33, 26]}
{"time": "2021-02-19 23:46:08.692945", "score": "0.7891", "loss": "0.747", "code": "ure connect(r<? extends nn> er) { if (ta) { synchronized (st) { if (!s()) {(true); } } } return connectInl(addr); }", "n_tokens": 115, "n_pass": [302, 34, 27]}
{"time": "2021-02-19 23:46:10.035182", "score": "0.5853", "loss": "1.2401", "code": "ure connect(r<? extends nn> er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connectInl(addr); }", "n_tokens": 112, "n_pass": [319, 35, 28]}
{"time": "2021-02-19 23:46:15.588838", "score": "0.9087", "loss": "0.2801", "code": "ure connect(r<? extends nn> er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 109, "n_pass": [328, 39, 29]}
{"time": "2021-02-19 23:46:16.976206", "score": "0.9496", "loss": "0.1794", "code": "e connect(r<? extends nn> er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 107, "n_pass": [332, 40, 30]}
{"time": "2021-02-19 23:46:31.854397", "score": "0.9496", "loss": "0.1794", "code": "e connect(r<?extends nn> er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 106, "n_pass": [481, 44, 31]}
{"time": "2021-02-19 23:46:33.206925", "score": "0.9264", "loss": "0.2615", "code": "e connect(r<?extends n> er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 105, "n_pass": [490, 45, 32]}
{"time": "2021-02-19 23:46:34.533132", "score": "0.9264", "loss": "0.2615", "code": "e connect(r<?extends n>er) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 104, "n_pass": [493, 46, 33]}
{"time": "2021-02-19 23:46:35.878291", "score": "0.9754", "loss": "0.1384", "code": "e connect(r<?extends n>r) { if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 103, "n_pass": [494, 47, 34]}
{"time": "2021-02-19 23:46:37.240236", "score": "0.9754", "loss": "0.1384", "code": "e connect(r<?extends n>r){ if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 102, "n_pass": [497, 48, 35]}
{"time": "2021-02-19 23:46:38.570504", "score": "0.9754", "loss": "0.1384", "code": "e connect(r<?extends n>r){if (ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 101, "n_pass": [499, 49, 36]}
{"time": "2021-02-19 23:46:39.926603", "score": "0.9754", "loss": "0.1384", "code": "e connect(r<?extends n>r){if(ta) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 100, "n_pass": [502, 50, 37]}
{"time": "2021-02-19 23:46:41.279955", "score": "0.7464", "loss": "0.997", "code": "e connect(r<?extends n>r){if(a) { synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 99, "n_pass": [504, 51, 38]}
{"time": "2021-02-19 23:46:42.632073", "score": "0.7464", "loss": "0.997", "code": "e connect(r<?extends n>r){if(a){ synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 98, "n_pass": [507, 52, 39]}
{"time": "2021-02-19 23:46:43.954353", "score": "0.7464", "loss": "0.997", "code": "e connect(r<?extends n>r){if(a){synchronized (st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 97, "n_pass": [509, 53, 40]}
{"time": "2021-02-19 23:46:45.291680", "score": "0.7464", "loss": "0.997", "code": "e connect(r<?extends n>r){if(a){synchronized(st) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 96, "n_pass": [522, 54, 41]}
{"time": "2021-02-19 23:46:46.617295", "score": "0.8929", "loss": "0.4987", "code": "e connect(r<?extends n>r){if(a){synchronized(t) { if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 95, "n_pass": [524, 55, 42]}
{"time": "2021-02-19 23:46:47.971098", "score": "0.8929", "loss": "0.4987", "code": "e connect(r<?extends n>r){if(a){synchronized(t){ if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 94, "n_pass": [527, 56, 43]}
{"time": "2021-02-19 23:46:49.349669", "score": "0.8929", "loss": "0.4987", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if (!s()) {(e); } } } return connect(addr); }", "n_tokens": 93, "n_pass": [529, 57, 44]}
{"time": "2021-02-19 23:46:50.707089", "score": "0.8929", "loss": "0.4987", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(!s()) {(e); } } } return connect(addr); }", "n_tokens": 92, "n_pass": [532, 58, 45]}
{"time": "2021-02-19 23:46:52.058327", "score": "0.8877", "loss": "0.495", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()) {(e); } } } return connect(addr); }", "n_tokens": 91, "n_pass": [534, 59, 46]}
{"time": "2021-02-19 23:46:53.410929", "score": "0.8877", "loss": "0.495", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e); } } } return connect(addr); }", "n_tokens": 90, "n_pass": [539, 60, 47]}
{"time": "2021-02-19 23:47:00.093552", "score": "0.3893", "loss": "2.0131", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e); } } } return connect(dr); }", "n_tokens": 88, "n_pass": [554, 65, 48]}
{"time": "2021-02-19 23:47:01.448232", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e); } } } return connect(); }", "n_tokens": 86, "n_pass": [555, 66, 49]}
{"time": "2021-02-19 23:47:14.265301", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e); } } } return connect();}", "n_tokens": 85, "n_pass": [658, 71, 50]}
{"time": "2021-02-19 23:47:18.922180", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e);} } } return connect();}", "n_tokens": 84, "n_pass": [719, 72, 51]}
{"time": "2021-02-19 23:47:20.273004", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e);}} } return connect();}", "n_tokens": 83, "n_pass": [721, 73, 52]}
{"time": "2021-02-19 23:47:21.589055", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e);}}} return connect();}", "n_tokens": 82, "n_pass": [723, 74, 53]}
{"time": "2021-02-19 23:47:22.927199", "score": "0.4473", "loss": "2.2736", "code": "e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e);}}}return connect();}", "n_tokens": 81, "n_pass": [725, 75, 54]}

Minimal simplified code:
e connect(r<?extends n>r){if(a){synchronized(t){if(s()){(e);}}}return connect();}

