
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/pos/src/main/java/edu/illinois/cs/cogcomp/pos/lbjava/L2bL1b_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'L2bL1b(Token)' defined on line 131 of POSKnown.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9999603033065796, 0.012770513072609901

Trace of simplified code(s):
{"time": "2021-02-19 19:15:41.785526", "score": "1.0", "loss": "0.0128", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'L2bL1b(Token)' defined on line 131 of POSKnown.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 371, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 19:15:43.150223", "score": "1.0", "loss": "0.012", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Ct.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 278, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 19:15:44.529003", "score": "1.0", "loss": "0.0112", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClass().getName(); System.err.println(\"Ct.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 232, "n_pass": [23, 3, 3]}
{"time": "2021-02-19 19:15:45.888383", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClass().getName(); System.err.println(\"Ct.\"); new Exception().em.exit(1); } return super.classify(examples); }", "n_tokens": 209, "n_pass": [42, 4, 4]}
{"time": "2021-02-19 19:15:47.595917", "score": "1.0", "loss": "0.0111", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClass().getName(); System.err.println(\"Ct.\"); new Exception().em.exit(1); } return super.classify(examples); }", "n_tokens": 198, "n_pass": [74, 5, 5]}
{"time": "2021-02-19 19:15:49.329107", "score": "1.0", "loss": "0.0095", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getCle(); System.err.println(\"Ct.\"); new Exception().em.exit(1); } return super.classify(examples); }", "n_tokens": 186, "n_pass": [83, 6, 6]}
{"time": "2021-02-19 19:15:50.693778", "score": "1.0", "loss": "0.0106", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new Exception().em.exit(1); } return super.classify(examples); }", "n_tokens": 174, "n_pass": [84, 7, 7]}
{"time": "2021-02-19 19:15:52.062589", "score": "1.0", "loss": "0.0144", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new em.exit(1); } return super.classify(examples); }", "n_tokens": 162, "n_pass": [87, 8, 8]}
{"time": "2021-02-19 19:15:53.803971", "score": "1.0", "loss": "0.0119", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } return super.classify(examples); }", "n_tokens": 156, "n_pass": [130, 9, 9]}
{"time": "2021-02-19 19:15:55.144368", "score": "0.4923", "loss": "1.3586", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } retuer.classify(examples); }", "n_tokens": 150, "n_pass": [132, 10, 10]}
{"time": "2021-02-19 19:15:57.819644", "score": "0.7179", "loss": "0.8901", "code": "ureVector[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 144, "n_pass": [135, 12, 11]}
{"time": "2021-02-19 19:15:59.183311", "score": "0.5014", "loss": "1.4052", "code": "ctor[] classify(Object[] examples) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 139, "n_pass": [137, 13, 12]}
{"time": "2021-02-19 19:16:00.924272", "score": "0.5836", "loss": "1.2932", "code": "ctor[] classify(Object[] es) { if (!(examples instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 133, "n_pass": [143, 14, 13]}
{"time": "2021-02-19 19:16:02.262385", "score": "0.4927", "loss": "1.6122", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Sles.getClerr.println(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 127, "n_pass": [146, 15, 14]}
{"time": "2021-02-19 19:16:03.591769", "score": "0.5622", "loss": "1.5911", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Sleserr.println(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 121, "n_pass": [152, 16, 15]}
{"time": "2021-02-19 19:16:04.929203", "score": "0.7195", "loss": "1.0847", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Slesintln(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 115, "n_pass": [153, 17, 16]}
{"time": "2021-02-19 19:16:07.982049", "score": "0.7195", "loss": "1.0847", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); new t(1); } retuer.classify(es); }", "n_tokens": 112, "n_pass": [214, 19, 17]}
{"time": "2021-02-19 19:16:09.316544", "score": "0.8853", "loss": "0.7805", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); nt(1); } retuer.classify(es); }", "n_tokens": 109, "n_pass": [218, 20, 18]}
{"time": "2021-02-19 19:16:10.676390", "score": "0.9721", "loss": "0.4207", "code": "ctor[] classify(Object[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 106, "n_pass": [222, 21, 19]}
{"time": "2021-02-19 19:16:16.032400", "score": "0.9725", "loss": "0.2933", "code": "or[] classify(Object[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 104, "n_pass": [229, 25, 20]}
{"time": "2021-02-19 19:16:17.389372", "score": "0.7713", "loss": "1.0191", "code": "or classify(Object[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 102, "n_pass": [231, 26, 21]}
{"time": "2021-02-19 19:16:19.864625", "score": "0.3764", "loss": "2.1741", "code": "or classify(ect[] es) { if (!(es instanceof Token[])) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 99, "n_pass": [236, 27, 22]}
{"time": "2021-02-19 19:16:21.201930", "score": "0.3547", "loss": "2.2563", "code": "or classify(ect[] es) { if (!(es instanceof Tn[])) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 96, "n_pass": [248, 28, 23]}
{"time": "2021-02-19 19:16:22.523080", "score": "0.4803", "loss": "1.9221", "code": "or classify(ect[] es) { if (!(es instanceof T)) { Slesln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 93, "n_pass": [249, 29, 24]}
{"time": "2021-02-19 19:16:23.857402", "score": "0.7683", "loss": "1.077", "code": "or classify(ect[] es) { if (!(es instanceof T)) { Sln(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 90, "n_pass": [252, 30, 25]}
{"time": "2021-02-19 19:16:33.109194", "score": "0.6897", "loss": "1.3775", "code": "or classify(ect[] es) { if (!(es instanceof T)) { n(\"Ct.\"); nt(1); } rer.classify(es); }", "n_tokens": 88, "n_pass": [352, 34, 26]}
{"time": "2021-02-19 19:16:34.465091", "score": "0.7846", "loss": "1.1671", "code": "or classify(ect[] es) { if (!(es instanceof T)) { n(\"C\"); nt(1); } rer.classify(es); }", "n_tokens": 86, "n_pass": [355, 35, 27]}
{"time": "2021-02-19 19:16:35.789776", "score": "0.9348", "loss": "0.5956", "code": "or classify(ect[] es) { if (!(es instanceof T)) { n(\"C\"); (1); } rer.classify(es); }", "n_tokens": 84, "n_pass": [358, 36, 28]}
{"time": "2021-02-19 19:16:37.114437", "score": "0.9418", "loss": "0.6681", "code": "or classify(ect[] es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(es); }", "n_tokens": 82, "n_pass": [362, 37, 29]}
{"time": "2021-02-19 19:16:43.773224", "score": "0.7405", "loss": "1.4432", "code": "or classify(ect[] es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 80, "n_pass": [369, 42, 30]}
{"time": "2021-02-19 19:16:45.113331", "score": "0.8595", "loss": "0.8854", "code": "r classify(ect[] es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 79, "n_pass": [372, 43, 31]}
{"time": "2021-02-19 19:16:50.175626", "score": "0.9262", "loss": "0.6153", "code": "r classify(ct[] es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 78, "n_pass": [384, 44, 32]}
{"time": "2021-02-19 19:16:51.504083", "score": "0.9219", "loss": "0.6166", "code": "r classify(t[] es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 77, "n_pass": [385, 45, 33]}
{"time": "2021-02-19 19:16:52.829352", "score": "0.9219", "loss": "0.6166", "code": "r classify(t[]es) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 76, "n_pass": [389, 46, 34]}
{"time": "2021-02-19 19:16:54.158824", "score": "0.7506", "loss": "1.0857", "code": "r classify(t[]s) { if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 75, "n_pass": [390, 47, 35]}
{"time": "2021-02-19 19:16:55.491627", "score": "0.7506", "loss": "1.0857", "code": "r classify(t[]s){ if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 74, "n_pass": [393, 48, 36]}
{"time": "2021-02-19 19:16:56.826405", "score": "0.7506", "loss": "1.0857", "code": "r classify(t[]s){if (!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 73, "n_pass": [395, 49, 37]}
{"time": "2021-02-19 19:16:58.172680", "score": "0.7506", "loss": "1.0857", "code": "r classify(t[]s){if(!(es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 72, "n_pass": [398, 50, 38]}
{"time": "2021-02-19 19:16:59.524622", "score": "0.8412", "loss": "0.7349", "code": "r classify(t[]s){if((es instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 71, "n_pass": [400, 51, 39]}
{"time": "2021-02-19 19:17:00.845354", "score": "0.597", "loss": "1.4918", "code": "r classify(t[]s){if((s instanceof T)) { n(\"C\"); (1); }er.classify(); }", "n_tokens": 70, "n_pass": [402, 52, 40]}
{"time": "2021-02-19 19:17:14.282641", "score": "0.597", "loss": "1.4918", "code": "r classify(t[]s){if((s instanceof T)){ n(\"C\"); (1); }er.classify(); }", "n_tokens": 69, "n_pass": [502, 57, 41]}
{"time": "2021-02-19 19:17:15.598887", "score": "0.597", "loss": "1.4918", "code": "r classify(t[]s){if((s instanceof T)){n(\"C\"); (1); }er.classify(); }", "n_tokens": 68, "n_pass": [504, 58, 42]}
{"time": "2021-02-19 19:17:16.946372", "score": "0.8049", "loss": "0.8741", "code": "r classify(t[]s){if((s instanceof T)){(\"C\"); (1); }er.classify(); }", "n_tokens": 67, "n_pass": [505, 59, 43]}
{"time": "2021-02-19 19:17:18.274565", "score": "0.6665", "loss": "1.2773", "code": "r classify(t[]s){if((s instanceof T)){(\"\"); (1); }er.classify(); }", "n_tokens": 66, "n_pass": [508, 60, 44]}
{"time": "2021-02-19 19:17:19.630323", "score": "0.6665", "loss": "1.2773", "code": "r classify(t[]s){if((s instanceof T)){(\"\");(1); }er.classify(); }", "n_tokens": 65, "n_pass": [512, 61, 45]}
{"time": "2021-02-19 19:17:20.953203", "score": "0.6665", "loss": "1.2773", "code": "r classify(t[]s){if((s instanceof T)){(\"\");(1);}er.classify(); }", "n_tokens": 64, "n_pass": [517, 62, 46]}
{"time": "2021-02-19 19:17:22.277422", "score": "0.7458", "loss": "1.1301", "code": "r classify(t[]s){if((s instanceof T)){(\"\");(1);}r.classify(); }", "n_tokens": 63, "n_pass": [519, 63, 47]}
{"time": "2021-02-19 19:17:35.550018", "score": "0.7458", "loss": "1.1301", "code": "r classify(t[]s){if((s instanceof T)){(\"\");(1);}r.classify();}", "n_tokens": 62, "n_pass": [533, 73, 48]}

Minimal simplified code:
r classify(t[]s){if((s instanceof T)){("");(1);}r.classify();}

