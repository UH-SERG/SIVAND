
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/ner/src/main/java/edu/illinois/cs/cogcomp/ner/IO/InFile_close.java
method_name = close
method_body = public void close() { try { this.in.close(); } catch (Exception ignored) { } }
predict, score, loss = close, 0.8269981741905212, 0.41430383920669556

Trace of simplified code(s):
{"time": "2021-02-20 02:28:14.080645", "score": "0.827", "loss": "0.4143", "code": "public void close() { try { this.in.close(); } catch (Exception ignored) { } }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:28:18.425867", "score": "0.4356", "loss": "1.6163", "code": "publoid close() { try { this.in.close(); } catch (Exception ignored) { } }", "n_tokens": 74, "n_pass": [45, 4, 2]}
{"time": "2021-02-20 02:28:20.119134", "score": "0.4404", "loss": "1.5997", "code": "publoid close() { try { in.close(); } catch (Exception ignored) { } }", "n_tokens": 69, "n_pass": [50, 5, 3]}
{"time": "2021-02-20 02:28:32.266669", "score": "0.569", "loss": "1.1457", "code": "publoid close() { try { in.close(); } catch (Except ignored) { } }", "n_tokens": 66, "n_pass": [105, 14, 4]}
{"time": "2021-02-20 02:28:34.905643", "score": "0.569", "loss": "1.1457", "code": "bloid close() { try { in.close(); } catch (Except ignored) { } }", "n_tokens": 64, "n_pass": [111, 16, 5]}
{"time": "2021-02-20 02:28:37.538485", "score": "0.3024", "loss": "1.9286", "code": "bld close() { try { in.close(); } catch (Except ignored) { } }", "n_tokens": 62, "n_pass": [113, 18, 6]}
{"time": "2021-02-20 02:28:46.563141", "score": "0.6129", "loss": "1.0729", "code": "d close() { try { in.close(); } catch (Except ignored) { } }", "n_tokens": 60, "n_pass": [138, 24, 7]}
{"time": "2021-02-20 02:28:54.154849", "score": "0.374", "loss": "1.792", "code": "d close() { try { in.close(); } catch (Except iged) { } }", "n_tokens": 57, "n_pass": [159, 29, 8]}
{"time": "2021-02-20 02:29:04.420383", "score": "0.4733", "loss": "1.485", "code": "d close() { try { in.close(); } catch (Except id) { } }", "n_tokens": 55, "n_pass": [230, 34, 9]}
{"time": "2021-02-20 02:29:08.196057", "score": "0.4733", "loss": "1.485", "code": "d close(){ try { in.close(); } catch (Except id) { } }", "n_tokens": 54, "n_pass": [244, 35, 10]}
{"time": "2021-02-20 02:29:09.519396", "score": "0.4733", "loss": "1.485", "code": "d close(){try { in.close(); } catch (Except id) { } }", "n_tokens": 53, "n_pass": [246, 36, 11]}
{"time": "2021-02-20 02:29:10.822796", "score": "0.4733", "loss": "1.485", "code": "d close(){try{ in.close(); } catch (Except id) { } }", "n_tokens": 52, "n_pass": [250, 37, 12]}
{"time": "2021-02-20 02:29:12.150734", "score": "0.4733", "loss": "1.485", "code": "d close(){try{in.close(); } catch (Except id) { } }", "n_tokens": 51, "n_pass": [252, 38, 13]}
{"time": "2021-02-20 02:29:13.459194", "score": "0.4004", "loss": "1.6743", "code": "d close(){try{n.close(); } catch (Except id) { } }", "n_tokens": 50, "n_pass": [253, 39, 14]}
{"time": "2021-02-20 02:29:22.651487", "score": "0.4004", "loss": "1.6743", "code": "d close(){try{n.close();} catch (Except id) { } }", "n_tokens": 49, "n_pass": [264, 46, 15]}
{"time": "2021-02-20 02:29:23.950598", "score": "0.4004", "loss": "1.6743", "code": "d close(){try{n.close();}catch (Except id) { } }", "n_tokens": 48, "n_pass": [266, 47, 16]}
{"time": "2021-02-20 02:29:27.893435", "score": "0.3543", "loss": "2.09", "code": "d close(){try{n.close();}catch (Exce id) { } }", "n_tokens": 46, "n_pass": [274, 50, 17]}
{"time": "2021-02-20 02:29:39.663599", "score": "0.5481", "loss": "1.2634", "code": "d close(){try{n.close();}catch (ce id) { } }", "n_tokens": 44, "n_pass": [310, 57, 18]}
{"time": "2021-02-20 02:29:53.099661", "score": "0.4377", "loss": "1.4943", "code": "d close(){try{n.close();}catch (ce i) { } }", "n_tokens": 43, "n_pass": [363, 64, 19]}
{"time": "2021-02-20 02:29:54.400872", "score": "0.4377", "loss": "1.4943", "code": "d close(){try{n.close();}catch (ce i){ } }", "n_tokens": 42, "n_pass": [364, 65, 20]}
{"time": "2021-02-20 02:29:55.699796", "score": "0.4377", "loss": "1.4943", "code": "d close(){try{n.close();}catch (ce i){} }", "n_tokens": 41, "n_pass": [366, 66, 21]}
{"time": "2021-02-20 02:29:56.997404", "score": "0.4377", "loss": "1.4943", "code": "d close(){try{n.close();}catch (ce i){}}", "n_tokens": 40, "n_pass": [368, 67, 22]}
{"time": "2021-02-20 02:30:08.742627", "score": "0.4377", "loss": "1.4943", "code": "d close(){try{n.close();}catch(ce i){}}", "n_tokens": 39, "n_pass": [400, 74, 23]}

Minimal simplified code:
d close(){try{n.close();}catch(ce i){}}

