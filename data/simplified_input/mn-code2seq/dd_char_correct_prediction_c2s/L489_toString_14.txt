
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SINTEF-9012__JArduino/jarduino.core/src/main/java/org/sintef/jarduino/msg/AnalogWriteMsg_toString.java
method_name = toString
method_body = @Override public String toString() { String myString = "analogWrite:"; myString += " [pin: " + pin + "]"; myString += " [value: " + value + "]"; return myString; }
predict, score, loss = toString, 0.9953998923301697, 0.010432909242808819

Trace of simplified code(s):
{"time": "2021-02-20 17:07:45.135375", "score": "0.9954", "loss": "0.0104", "code": "@Override public String toString() { String myString = \"analogWrite:\"; myString += \" [pin: \" + pin + \"]\"; myString += \" [value: \" + value + \"]\"; return myString; }", "n_tokens": 163, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 17:07:46.468081", "score": "0.9954", "loss": "0.0119", "code": "@Override public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [value: \" + value + \"]\"; return myString; }", "n_tokens": 122, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 17:07:47.789385", "score": "0.9553", "loss": "0.1069", "code": "@Override public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 101, "n_pass": [20, 3, 3]}
{"time": "2021-02-20 17:07:50.435577", "score": "0.8613", "loss": "0.3794", "code": "public String toString() { Str= \" [pin: \" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 91, "n_pass": [38, 5, 4]}
{"time": "2021-02-20 17:07:54.480604", "score": "0.8445", "loss": "0.4373", "code": "public String toString() { Str= \" [\" + pin + \"]\"; myString += \" [\"; return myString; }", "n_tokens": 86, "n_pass": [72, 7, 5]}
{"time": "2021-02-20 17:07:56.152531", "score": "0.7662", "loss": "0.6885", "code": "public String toString() { Str= \" [\" + pin + \"]\"; ing += \" [\"; return myString; }", "n_tokens": 81, "n_pass": [76, 8, 6]}
{"time": "2021-02-20 17:07:57.471559", "score": "0.766", "loss": "0.6878", "code": "public String toString() { Str= \" [\" + pin + \"]\"; ing += \" [\"; remyString; }", "n_tokens": 76, "n_pass": [80, 9, 7]}
{"time": "2021-02-20 17:08:02.440628", "score": "0.79", "loss": "0.6217", "code": "public String toString() { Str= \" [\" + pin + \"]\"; ing += \" [\"; rString; }", "n_tokens": 73, "n_pass": [126, 12, 8]}
{"time": "2021-02-20 17:08:03.735260", "score": "0.7813", "loss": "0.6306", "code": "public String toString() { Str= \" [\" + pin + \"]\"; ing += \" [\"; ring; }", "n_tokens": 70, "n_pass": [127, 13, 9]}
{"time": "2021-02-20 17:08:05.034189", "score": "0.7573", "loss": "0.74", "code": "public String toString() { Str= \" [\" + pin + \"]\"; ing += \" [\"; r; }", "n_tokens": 67, "n_pass": [128, 14, 10]}
{"time": "2021-02-20 17:08:13.323266", "score": "0.8668", "loss": "0.3585", "code": "public String toString() { Str= \" [\" + p+ \"]\"; ing += \" [\"; r; }", "n_tokens": 64, "n_pass": [148, 19, 11]}
{"time": "2021-02-20 17:08:14.650679", "score": "0.7758", "loss": "0.6674", "code": "public String toString() { Str= \" [\" + p+ \"]\";g += \" [\"; r; }", "n_tokens": 61, "n_pass": [151, 20, 12]}
{"time": "2021-02-20 17:08:15.988098", "score": "0.9193", "loss": "0.2064", "code": "public String toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 58, "n_pass": [155, 21, 13]}
{"time": "2021-02-20 17:08:17.270663", "score": "0.6932", "loss": "0.983", "code": "publictring toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 56, "n_pass": [160, 22, 14]}
{"time": "2021-02-20 17:08:18.548897", "score": "0.6932", "loss": "0.983", "code": "publicing toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 54, "n_pass": [161, 23, 15]}
{"time": "2021-02-20 17:08:19.829898", "score": "0.6932", "loss": "0.983", "code": "publicg toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 52, "n_pass": [162, 24, 16]}
{"time": "2021-02-20 17:08:25.435917", "score": "0.6932", "loss": "0.983", "code": "blicg toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 50, "n_pass": [181, 27, 17]}
{"time": "2021-02-20 17:08:26.739152", "score": "0.7286", "loss": "0.8588", "code": "icg toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 48, "n_pass": [182, 28, 18]}
{"time": "2021-02-20 17:08:28.034362", "score": "0.7247", "loss": "0.8995", "code": "g toString() { Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 46, "n_pass": [183, 29, 19]}
{"time": "2021-02-20 17:08:39.070031", "score": "0.7247", "loss": "0.8995", "code": "g toString(){ Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 45, "n_pass": [250, 32, 20]}
{"time": "2021-02-20 17:08:40.349491", "score": "0.7247", "loss": "0.8995", "code": "g toString(){Str= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 44, "n_pass": [251, 33, 21]}
{"time": "2021-02-20 17:08:42.904593", "score": "0.6941", "loss": "0.9972", "code": "g toString(){Sr= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 43, "n_pass": [253, 35, 22]}
{"time": "2021-02-20 17:08:44.184372", "score": "0.6919", "loss": "1.0242", "code": "g toString(){S= \" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 42, "n_pass": [254, 36, 23]}
{"time": "2021-02-20 17:08:45.460649", "score": "0.6919", "loss": "1.0242", "code": "g toString(){S=\" [\" + p+ \"]\";g += \" [\"; }", "n_tokens": 41, "n_pass": [256, 37, 24]}
{"time": "2021-02-20 17:08:46.736027", "score": "0.6919", "loss": "1.0242", "code": "g toString(){S=\"[\" + p+ \"]\";g += \" [\"; }", "n_tokens": 40, "n_pass": [258, 38, 25]}
{"time": "2021-02-20 17:08:48.020499", "score": "0.7497", "loss": "0.7994", "code": "g toString(){S=\"\" + p+ \"]\";g += \" [\"; }", "n_tokens": 39, "n_pass": [259, 39, 26]}
{"time": "2021-02-20 17:08:49.299676", "score": "0.7497", "loss": "0.7994", "code": "g toString(){S=\"\"+ p+ \"]\";g += \" [\"; }", "n_tokens": 38, "n_pass": [261, 40, 27]}
{"time": "2021-02-20 17:08:50.581157", "score": "0.7661", "loss": "0.7781", "code": "g toString(){S=\"\"+ p+ \"]\";g += \"\"; }", "n_tokens": 36, "n_pass": [270, 41, 28]}
{"time": "2021-02-20 17:08:57.666375", "score": "0.7661", "loss": "0.7781", "code": "g toString(){S=\"\"+ p+ \"]\";g += \"\";}", "n_tokens": 35, "n_pass": [317, 42, 29]}
{"time": "2021-02-20 17:09:02.429692", "score": "0.7661", "loss": "0.7781", "code": "g toString(){S=\"\"+p+ \"]\";g += \"\";}", "n_tokens": 34, "n_pass": [336, 43, 30]}
{"time": "2021-02-20 17:09:03.709862", "score": "0.7661", "loss": "0.7781", "code": "g toString(){S=\"\"+p+\"]\";g += \"\";}", "n_tokens": 33, "n_pass": [339, 44, 31]}
{"time": "2021-02-20 17:09:06.314297", "score": "0.7661", "loss": "0.7781", "code": "g toString(){S=\"\"+p+\"]\";g+= \"\";}", "n_tokens": 32, "n_pass": [345, 46, 32]}
{"time": "2021-02-20 17:09:07.626981", "score": "0.6485", "loss": "1.5196", "code": "g toString(){S=\"\"+p+\"]\";g= \"\";}", "n_tokens": 31, "n_pass": [346, 47, 33]}
{"time": "2021-02-20 17:09:08.934938", "score": "0.6485", "loss": "1.5196", "code": "g toString(){S=\"\"+p+\"]\";g=\"\";}", "n_tokens": 30, "n_pass": [348, 48, 34]}

Minimal simplified code:
g toString(){S=""+p+"]";g="";}

