
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/ant/JKStatusUpdateTask_execute.java
method_name = execute
method_body = @Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }
predict, score, loss = execute, 0.9935383200645447, 0.009382841177284718

Trace of simplified code(s):
{"time": "2021-02-19 22:17:37.415418", "score": "0.9935", "loss": "0.0094", "code": "@Override public void execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 22:17:39.179456", "score": "0.9631", "loss": "0.0535", "code": "d execute() throws BuildException { super.execute(); checkParameter(); StringBuilder sb = createLink(); execute(sb.toString(), null, null, -1); }", "n_tokens": 145, "n_pass": [20, 2, 2]}
{"time": "2021-02-19 22:17:41.932227", "score": "0.9901", "loss": "0.0196", "code": "d execute() throws BuildException { super.execute(); checkParer sb = createLink(); execute(sb.toString(), null, null, -1); }", "n_tokens": 124, "n_pass": [24, 4, 3]}
{"time": "2021-02-19 22:17:44.715328", "score": "0.9972", "loss": "0.006", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(); execute(sb.toString(), null, null, -1); }", "n_tokens": 114, "n_pass": [43, 6, 4]}
{"time": "2021-02-19 22:17:46.079460", "score": "0.9932", "loss": "0.0109", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(sb.toString(), null, null, -1); }", "n_tokens": 103, "n_pass": [45, 7, 5]}
{"time": "2021-02-19 22:17:47.478207", "score": "0.9788", "loss": "0.0338", "code": "d execute() throws BuildException { super.execute(); checkPareateLink(sb.toStringull, -1); }", "n_tokens": 92, "n_pass": [47, 8, 6]}
{"time": "2021-02-19 22:17:48.831789", "score": "0.947", "loss": "0.0772", "code": "d execute() throws Bion { super.execute(); checkPareateLink(sb.toStringull, -1); }", "n_tokens": 82, "n_pass": [51, 9, 7]}
{"time": "2021-02-19 22:17:50.195799", "score": "0.9276", "loss": "0.0981", "code": "d execute() throws Bion { super.execute(); checkPareateLink(ull, -1); }", "n_tokens": 71, "n_pass": [56, 10, 8]}
{"time": "2021-02-19 22:17:51.576525", "score": "0.8369", "loss": "0.2479", "code": "d execute() throws Bion { super.execute(); checkPareateLink(-1); }", "n_tokens": 66, "n_pass": [78, 11, 9]}
{"time": "2021-02-19 22:17:56.106882", "score": "0.7364", "loss": "0.4781", "code": "d execute() throws Bion { super.execute(); chreateLink(-1); }", "n_tokens": 61, "n_pass": [88, 14, 10]}
{"time": "2021-02-19 22:17:57.502942", "score": "0.8186", "loss": "0.338", "code": "d execute() throws Bion { super.execute(); chLink(-1); }", "n_tokens": 56, "n_pass": [89, 15, 11]}
{"time": "2021-02-19 22:17:59.248580", "score": "0.1981", "loss": "2.4331", "code": "d execute() throws Bion {r.execute(); chLink(-1); }", "n_tokens": 51, "n_pass": [97, 16, 12]}
{"time": "2021-02-19 22:18:13.318888", "score": "0.3262", "loss": "1.8295", "code": "d execute() throws Bin {r.execute(); chLink(-1); }", "n_tokens": 50, "n_pass": [189, 24, 13]}
{"time": "2021-02-19 22:18:15.974987", "score": "0.3262", "loss": "1.8295", "code": "d execute() throws Bin{r.execute(); chLink(-1); }", "n_tokens": 49, "n_pass": [191, 26, 14]}
{"time": "2021-02-19 22:18:25.421441", "score": "0.2418", "loss": "2.1722", "code": "d execute() throws Bin{r.execute(); cink(-1); }", "n_tokens": 47, "n_pass": [202, 33, 15]}
{"time": "2021-02-19 22:18:26.758867", "score": "0.464", "loss": "1.3058", "code": "d execute() throws Bin{r.execute(); ck(-1); }", "n_tokens": 45, "n_pass": [203, 34, 16]}
{"time": "2021-02-19 22:18:28.141654", "score": "0.7945", "loss": "0.3856", "code": "d execute() throws Bin{r.execute(); ck(); }", "n_tokens": 43, "n_pass": [205, 35, 17]}
{"time": "2021-02-19 22:18:32.826345", "score": "0.7945", "loss": "0.3856", "code": "d execute()throws Bin{r.execute(); ck(); }", "n_tokens": 42, "n_pass": [219, 36, 18]}
{"time": "2021-02-19 22:18:34.181074", "score": "0.7287", "loss": "0.4114", "code": "d execute()throws in{r.execute(); ck(); }", "n_tokens": 41, "n_pass": [227, 37, 19]}
{"time": "2021-02-19 22:18:35.524218", "score": "0.7084", "loss": "0.4752", "code": "d execute()throws n{r.execute(); ck(); }", "n_tokens": 40, "n_pass": [228, 38, 20]}
{"time": "2021-02-19 22:18:43.713984", "score": "0.5274", "loss": "0.7766", "code": "d execute()throws n{r.execute();k(); }", "n_tokens": 38, "n_pass": [239, 44, 21]}
{"time": "2021-02-19 22:18:56.274643", "score": "0.5274", "loss": "0.7766", "code": "d execute()throws n{r.execute();k();}", "n_tokens": 37, "n_pass": [287, 50, 22]}

Minimal simplified code:
d execute()throws n{r.execute();k();}

