
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/RevokeNode_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(","); sb.append(it.next()); } return super.toString() + privileges.toString() + "TO: \n" + sb.toString() + "\n"; }
predict, score, loss = toString, 0.9988659620285034, 0.00445590540766716

Trace of simplified code(s):
{"time": "2021-02-20 02:03:15.869508", "score": "0.9987", "loss": "0.0051", "code": "public String toString() { StringBuffer sb = new StringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 276, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 02:03:17.640981", "score": "0.9992", "loss": "0.0031", "code": "public String toString() { StringBringBuffer(); for (Iterator<String> it = grantees.iterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 259, "n_pass": [46, 2, 2]}
{"time": "2021-02-20 02:03:19.030210", "score": "0.9988", "loss": "0.0044", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) sb.append(\",\"); sb.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 242, "n_pass": [48, 3, 3]}
{"time": "2021-02-20 02:03:20.393065", "score": "0.999", "loss": "0.0032", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return super.toString() + privileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 225, "n_pass": [52, 4, 4]}
{"time": "2021-02-20 02:03:21.731645", "score": "0.9873", "loss": "0.0549", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superileges.toString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 207, "n_pass": [55, 5, 5]}
{"time": "2021-02-20 02:03:23.588316", "score": "0.9895", "loss": "0.0481", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.toString() + \"\\n\"; }", "n_tokens": 198, "n_pass": [92, 6, 6]}
{"time": "2021-02-20 02:03:25.006895", "score": "0.9807", "loss": "0.0963", "code": "public String toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 189, "n_pass": [95, 7, 7]}
{"time": "2021-02-20 02:03:26.349141", "score": "0.942", "loss": "0.2956", "code": "tring toString() { StringBringBuffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 181, "n_pass": [97, 8, 8]}
{"time": "2021-02-20 02:03:28.068704", "score": "0.915", "loss": "0.4318", "code": "tring toString() { Strinffer(); for (Iterator<Stringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 173, "n_pass": [101, 9, 9]}
{"time": "2021-02-20 02:03:29.388010", "score": "0.9078", "loss": "0.4518", "code": "tring toString() { Strinffer(); for (Iteringterator(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 165, "n_pass": [104, 10, 10]}
{"time": "2021-02-20 02:03:30.707700", "score": "0.9078", "loss": "0.4518", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length() > 0) s.append(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 157, "n_pass": [105, 11, 11]}
{"time": "2021-02-20 02:03:32.027544", "score": "0.8553", "loss": "0.6487", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length() > 0)(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 148, "n_pass": [111, 12, 12]}
{"time": "2021-02-20 02:03:34.073603", "score": "0.8543", "loss": "0.6168", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length())(it.next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 144, "n_pass": [163, 13, 13]}
{"time": "2021-02-20 02:03:35.400744", "score": "0.821", "loss": "0.7743", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return superString() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 140, "n_pass": [164, 14, 14]}
{"time": "2021-02-20 02:03:37.105971", "score": "0.7321", "loss": "1.0998", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return string() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 135, "n_pass": [169, 15, 15]}
{"time": "2021-02-20 02:03:38.521043", "score": "0.6723", "loss": "1.3344", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" + sb.to+ \"\\n\"; }", "n_tokens": 130, "n_pass": [170, 16, 16]}
{"time": "2021-02-20 02:03:39.854548", "score": "0.7316", "loss": "1.246", "code": "tring toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 125, "n_pass": [174, 17, 17]}
{"time": "2021-02-20 02:03:41.152558", "score": "0.8063", "loss": "1.0428", "code": "g toString() { Strinffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 121, "n_pass": [177, 18, 18]}
{"time": "2021-02-20 02:03:43.171670", "score": "0.8063", "loss": "1.0428", "code": "g toString() { Sffer(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 117, "n_pass": [182, 19, 19]}
{"time": "2021-02-20 02:03:44.567740", "score": "0.859", "loss": "0.758", "code": "g toString() { S(); for (Itetor(); it.hasNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 113, "n_pass": [183, 20, 20]}
{"time": "2021-02-20 02:03:46.097904", "score": "0.7368", "loss": "1.2306", "code": "g toString() { S(); for (Itetor(); isNext(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 109, "n_pass": [189, 21, 21]}
{"time": "2021-02-20 02:03:47.398944", "score": "0.8768", "loss": "0.6854", "code": "g toString() { S(); for (Itetor(); it(); ) { if (sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 105, "n_pass": [190, 22, 22]}
{"time": "2021-02-20 02:03:48.739626", "score": "0.8802", "loss": "0.5728", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.length().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 101, "n_pass": [193, 23, 23]}
{"time": "2021-02-20 02:03:50.047309", "score": "0.8108", "loss": "0.8549", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.th().next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 97, "n_pass": [195, 24, 24]}
{"time": "2021-02-20 02:03:53.191176", "score": "0.8227", "loss": "0.7198", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.th.next()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 95, "n_pass": [263, 25, 25]}
{"time": "2021-02-20 02:03:54.505757", "score": "0.8184", "loss": "0.8656", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.thext()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 93, "n_pass": [264, 26, 26]}
{"time": "2021-02-20 02:03:55.870148", "score": "0.9037", "loss": "0.5397", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"TO: \\n\" +o+ \"\\n\"; }", "n_tokens": 91, "n_pass": [265, 27, 27]}
{"time": "2021-02-20 02:03:57.213289", "score": "0.787", "loss": "1.1563", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\" +o+ \"\\n\"; }", "n_tokens": 88, "n_pass": [276, 28, 28]}
{"time": "2021-02-20 02:03:58.520646", "score": "0.6033", "loss": "2.3064", "code": "g toString() { S(); for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 85, "n_pass": [278, 29, 29]}
{"time": "2021-02-20 02:04:01.645442", "score": "0.6307", "loss": "2.0776", "code": "g toString() { S; for (Itetor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 83, "n_pass": [290, 30, 30]}
{"time": "2021-02-20 02:04:02.973042", "score": "0.7013", "loss": "1.6188", "code": "g toString() { S; for (Itor(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 81, "n_pass": [295, 31, 31]}
{"time": "2021-02-20 02:04:04.271243", "score": "0.8158", "loss": "1.0779", "code": "g toString() { S; for (Ir(); it(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 79, "n_pass": [296, 32, 32]}
{"time": "2021-02-20 02:04:05.610481", "score": "0.7559", "loss": "1.3816", "code": "g toString() { S; for (Ir();t(); ) {(sb.tht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 77, "n_pass": [299, 33, 33]}
{"time": "2021-02-20 02:04:07.006764", "score": "0.612", "loss": "2.0971", "code": "g toString() { S; for (Ir();t(); ) {(stht()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 75, "n_pass": [305, 34, 34]}
{"time": "2021-02-20 02:04:08.339778", "score": "0.6277", "loss": "1.8463", "code": "g toString() { S; for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 73, "n_pass": [306, 35, 35]}
{"time": "2021-02-20 02:04:11.443946", "score": "0.6123", "loss": "2.0833", "code": "g toString() {; for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 71, "n_pass": [328, 36, 36]}
{"time": "2021-02-20 02:04:12.763683", "score": "0.6123", "loss": "2.0833", "code": "g toString() {for (Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 69, "n_pass": [329, 37, 37]}
{"time": "2021-02-20 02:04:20.303024", "score": "0.6123", "loss": "2.0833", "code": "g toString() {for(Ir();t(); ) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 68, "n_pass": [426, 38, 38]}
{"time": "2021-02-20 02:04:24.258357", "score": "0.6123", "loss": "2.0833", "code": "g toString() {for(Ir();t();) {(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 67, "n_pass": [437, 41, 39]}
{"time": "2021-02-20 02:04:25.557755", "score": "0.6123", "loss": "2.0833", "code": "g toString() {for(Ir();t();){(st()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 66, "n_pass": [439, 42, 40]}
{"time": "2021-02-20 02:04:26.890413", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t()); } return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 65, "n_pass": [442, 43, 41]}
{"time": "2021-02-20 02:04:28.238595", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());} return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 64, "n_pass": [448, 44, 42]}
{"time": "2021-02-20 02:04:29.583465", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());}return s() + \"T\\n\"+ \"\\n\"; }", "n_tokens": 63, "n_pass": [450, 45, 43]}
{"time": "2021-02-20 02:04:31.234890", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());}return s()+ \"T\\n\"+ \"\\n\"; }", "n_tokens": 62, "n_pass": [461, 46, 44]}
{"time": "2021-02-20 02:04:32.558200", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());}return s()+\"T\\n\"+ \"\\n\"; }", "n_tokens": 61, "n_pass": [463, 47, 45]}
{"time": "2021-02-20 02:04:33.868405", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());}return s()+\"T\"+ \"\\n\"; }", "n_tokens": 59, "n_pass": [465, 48, 46]}
{"time": "2021-02-20 02:04:35.165617", "score": "0.6199", "loss": "1.9295", "code": "g toString() {for(Ir();t();){(t());}return s()+\"T\"+ \"\"; }", "n_tokens": 57, "n_pass": [468, 49, 47]}
{"time": "2021-02-20 02:04:40.034250", "score": "0.6199", "loss": "1.9295", "code": "g toString(){for(Ir();t();){(t());}return s()+\"T\"+ \"\"; }", "n_tokens": 56, "n_pass": [483, 50, 48]}
{"time": "2021-02-20 02:04:49.209732", "score": "0.6549", "loss": "1.7365", "code": "g toString(){for(Ir();t();){(t());}return s()+\"\"+ \"\"; }", "n_tokens": 55, "n_pass": [546, 53, 49]}
{"time": "2021-02-20 02:04:50.508979", "score": "0.6549", "loss": "1.7365", "code": "g toString(){for(Ir();t();){(t());}return s()+\"\"+\"\"; }", "n_tokens": 54, "n_pass": [549, 54, 50]}
{"time": "2021-02-20 02:04:51.840914", "score": "0.6549", "loss": "1.7365", "code": "g toString(){for(Ir();t();){(t());}return s()+\"\"+\"\";}", "n_tokens": 53, "n_pass": [553, 55, 51]}
{"time": "2021-02-20 02:04:56.865249", "score": "0.5652", "loss": "2.4404", "code": "g toString(){for(r();t();){(t());}return s()+\"\"+\"\";}", "n_tokens": 52, "n_pass": [572, 56, 52]}

Minimal simplified code:
g toString(){for(r();t();){(t());}return s()+""+"";}

