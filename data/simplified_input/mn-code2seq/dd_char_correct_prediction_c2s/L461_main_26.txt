
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/test/java/org/jupiter/common/concurrent/collection/NonBlockingMapTest_main.java
method_name = main
method_body = public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, "--" + i); } String val = map.get(3); System.out.println(val); }
predict, score, loss = main, 0.9993304014205933, 0.0008501159027218819

Trace of simplified code(s):
{"time": "2021-02-20 15:26:26.306335", "score": "0.9969", "loss": "0.0039", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 218, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 15:26:27.763425", "score": "0.9981", "loss": "0.0028", "code": "public static void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 191, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 15:26:29.121398", "score": "0.9984", "loss": "0.0027", "code": "public static void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 177, "n_pass": [50, 3, 3]}
{"time": "2021-02-20 15:26:30.489416", "score": "0.9984", "loss": "0.0027", "code": " void main(String[] args) { NonBlockingHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 164, "n_pass": [53, 4, 4]}
{"time": "2021-02-20 15:26:32.227104", "score": "0.9982", "loss": "0.0028", "code": " void main(String[] args) { NongHa= new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 157, "n_pass": [95, 5, 5]}
{"time": "2021-02-20 15:26:33.598260", "score": "0.998", "loss": "0.0035", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 150, "n_pass": [98, 6, 6]}
{"time": "2021-02-20 15:26:34.942617", "score": "0.9976", "loss": "0.0043", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } String va; System.out.println(val); }", "n_tokens": 143, "n_pass": [103, 7, 7]}
{"time": "2021-02-20 15:26:36.281612", "score": "0.9916", "loss": "0.0153", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } St; System.out.println(val); }", "n_tokens": 136, "n_pass": [109, 8, 8]}
{"time": "2021-02-20 15:26:37.648991", "score": "0.9808", "loss": "0.0327", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } Stm.out.println(val); }", "n_tokens": 129, "n_pass": [110, 9, 9]}
{"time": "2021-02-20 15:26:39.000514", "score": "0.4647", "loss": "0.9448", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } Strintln(val); }", "n_tokens": 122, "n_pass": [111, 10, 10]}
{"time": "2021-02-20 15:26:40.738283", "score": "0.4647", "loss": "0.9448", "code": " void main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 118, "n_pass": [166, 11, 11]}
{"time": "2021-02-20 15:26:43.400512", "score": "0.5242", "loss": "0.8469", "code": "id main(String[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 115, "n_pass": [170, 13, 12]}
{"time": "2021-02-20 15:26:45.467868", "score": "0.3986", "loss": "1.1211", "code": "id main(Sng[] args) { NongHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 112, "n_pass": [174, 14, 13]}
{"time": "2021-02-20 15:26:48.182243", "score": "0.4363", "loss": "1.108", "code": "id main(Sng[] args) {ngHa= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 109, "n_pass": [179, 16, 14]}
{"time": "2021-02-20 15:26:49.514041", "score": "0.871", "loss": "0.2149", "code": "id main(Sng[] args) {a= new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 106, "n_pass": [180, 17, 15]}
{"time": "2021-02-20 15:26:50.861675", "score": "0.8024", "loss": "0.3896", "code": "id main(Sng[] args) {new NonBlashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 103, "n_pass": [181, 18, 16]}
{"time": "2021-02-20 15:26:52.209944", "score": "0.8922", "loss": "0.1922", "code": "id main(Sng[] args) {new NoashMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 100, "n_pass": [184, 19, 17]}
{"time": "2021-02-20 15:26:53.538501", "score": "0.8741", "loss": "0.2187", "code": "id main(Sng[] args) {new NoMap<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 97, "n_pass": [185, 20, 18]}
{"time": "2021-02-20 15:26:54.863093", "score": "0.9065", "loss": "0.1554", "code": "id main(Sng[] args) {new No<>(); for (int i = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 94, "n_pass": [186, 21, 19]}
{"time": "2021-02-20 15:26:56.206095", "score": "0.8544", "loss": "0.2497", "code": "id main(Sng[] args) {new No<>(); for (ii = 0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 91, "n_pass": [191, 22, 20]}
{"time": "2021-02-20 15:26:57.527924", "score": "0.7754", "loss": "0.3919", "code": "id main(Sng[] args) {new No<>(); for (i0; ; i++) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 87, "n_pass": [192, 23, 21]}
{"time": "2021-02-20 15:26:58.837939", "score": "0.667", "loss": "0.598", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { map.put(i, \"--\" + i); } ntln(val); }", "n_tokens": 83, "n_pass": [194, 24, 22]}
{"time": "2021-02-20 15:27:00.160519", "score": "0.4789", "loss": "0.9673", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put(i, \"--\" + i); } ntln(val); }", "n_tokens": 79, "n_pass": [196, 25, 23]}
{"time": "2021-02-20 15:27:07.453778", "score": "0.6824", "loss": "0.5346", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put( \"--\" + i); } ntln(val); }", "n_tokens": 77, "n_pass": [268, 29, 24]}
{"time": "2021-02-20 15:27:08.770618", "score": "0.7467", "loss": "0.4101", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } ntln(val); }", "n_tokens": 75, "n_pass": [269, 30, 25]}
{"time": "2021-02-20 15:27:10.095214", "score": "0.9356", "loss": "0.1342", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } ln(val); }", "n_tokens": 73, "n_pass": [275, 31, 26]}
{"time": "2021-02-20 15:27:11.420034", "score": "0.2733", "loss": "1.9087", "code": "id main(Sng[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } (val); }", "n_tokens": 71, "n_pass": [276, 32, 27]}
{"time": "2021-02-20 15:27:14.079601", "score": "0.3261", "loss": "1.7207", "code": "d main(Sng[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } (val); }", "n_tokens": 70, "n_pass": [281, 34, 28]}
{"time": "2021-02-20 15:27:18.871461", "score": "0.3651", "loss": "1.6442", "code": "d main(Sg[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } (val); }", "n_tokens": 69, "n_pass": [290, 36, 29]}
{"time": "2021-02-20 15:27:20.180209", "score": "0.258", "loss": "2.1872", "code": "d main(S[] args) {new No<>(); for (i0; ;) { put( \"\" + i); } (val); }", "n_tokens": 68, "n_pass": [291, 37, 30]}
{"time": "2021-02-20 15:27:24.116484", "score": "0.258", "loss": "2.1872", "code": "d main(S[] args) {new No(); for (i0; ;) { put( \"\" + i); } (val); }", "n_tokens": 66, "n_pass": [301, 40, 31]}
{"time": "2021-02-20 15:27:25.426733", "score": "0.3501", "loss": "1.7589", "code": "d main(S[] args) {new No(); for (i0; ;) { t( \"\" + i); } (val); }", "n_tokens": 64, "n_pass": [311, 41, 32]}
{"time": "2021-02-20 15:27:26.759728", "score": "0.2959", "loss": "1.9077", "code": "d main(S[] args) {new No(); for (i0; ;) { t( \"\" + i); } (v); }", "n_tokens": 62, "n_pass": [320, 42, 33]}
{"time": "2021-02-20 15:27:40.416471", "score": "0.2959", "loss": "1.9077", "code": "d main(S[] args) {new No(); for (i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 61, "n_pass": [411, 46, 34]}
{"time": "2021-02-20 15:27:43.919946", "score": "0.2959", "loss": "1.9077", "code": "d main(S[]args) {new No(); for (i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 60, "n_pass": [422, 47, 35]}
{"time": "2021-02-20 15:27:50.462563", "score": "0.2959", "loss": "1.9077", "code": "d main(S[]args){new No(); for (i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 59, "n_pass": [428, 52, 36]}
{"time": "2021-02-20 15:27:53.069794", "score": "0.2245", "loss": "2.2347", "code": "d main(S[]args){new o(); for (i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 58, "n_pass": [434, 54, 37]}
{"time": "2021-02-20 15:27:54.375826", "score": "0.2245", "loss": "2.2347", "code": "d main(S[]args){new o();for (i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 57, "n_pass": [439, 55, 38]}
{"time": "2021-02-20 15:27:55.683557", "score": "0.2245", "loss": "2.2347", "code": "d main(S[]args){new o();for(i0; ;) { t( \"\" + i); } (v);}", "n_tokens": 56, "n_pass": [443, 56, 39]}
{"time": "2021-02-20 15:27:56.991723", "score": "0.5667", "loss": "1.0256", "code": "d main(S[]args){new o();for(0; ;) { t( \"\" + i); } (v);}", "n_tokens": 55, "n_pass": [445, 57, 40]}
{"time": "2021-02-20 15:27:58.307269", "score": "0.2959", "loss": "1.8698", "code": "d main(S[]args){new o();for(; ;) { t( \"\" + i); } (v);}", "n_tokens": 54, "n_pass": [446, 58, 41]}
{"time": "2021-02-20 15:27:59.612620", "score": "0.2959", "loss": "1.8698", "code": "d main(S[]args){new o();for(;;) { t( \"\" + i); } (v);}", "n_tokens": 53, "n_pass": [448, 59, 42]}
{"time": "2021-02-20 15:28:00.916379", "score": "0.2959", "loss": "1.8698", "code": "d main(S[]args){new o();for(;;){ t( \"\" + i); } (v);}", "n_tokens": 52, "n_pass": [451, 60, 43]}
{"time": "2021-02-20 15:28:02.219194", "score": "0.2959", "loss": "1.8698", "code": "d main(S[]args){new o();for(;;){t( \"\" + i); } (v);}", "n_tokens": 51, "n_pass": [453, 61, 44]}
{"time": "2021-02-20 15:28:03.510071", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){( \"\" + i); } (v);}", "n_tokens": 50, "n_pass": [454, 62, 45]}
{"time": "2021-02-20 15:28:04.828933", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){(\"\" + i); } (v);}", "n_tokens": 49, "n_pass": [456, 63, 46]}
{"time": "2021-02-20 15:28:06.131192", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){(\"\"+ i); } (v);}", "n_tokens": 48, "n_pass": [459, 64, 47]}
{"time": "2021-02-20 15:28:07.430327", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){(\"\"+i); } (v);}", "n_tokens": 47, "n_pass": [461, 65, 48]}
{"time": "2021-02-20 15:28:08.748536", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){(\"\"+i);} (v);}", "n_tokens": 46, "n_pass": [465, 66, 49]}
{"time": "2021-02-20 15:28:10.066090", "score": "0.2872", "loss": "2.1413", "code": "d main(S[]args){new o();for(;;){(\"\"+i);}(v);}", "n_tokens": 45, "n_pass": [467, 67, 50]}

Minimal simplified code:
d main(S[]args){new o();for(;;){(""+i);}(v);}

