
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S04.03-Exercise-AddMapAndSharing/app/src/main/java/com/example/android/sunshine/ForecastAdapter_onClick.java
method_name = onClick
method_body = @Override public void onClick(View v) { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }
predict, score, loss = onClick, 0.9996901750564575, 0.0008963982108980417

Trace of simplified code(s):
{"time": "2021-02-20 13:18:23.581755", "score": "0.9997", "loss": "0.0009", "code": "@Override public void onClick(View v) { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 13:18:25.255762", "score": "0.9995", "loss": "0.0013", "code": "@Override public void onClick(View v) { int adapterPosition = getAdapterPosition(); StriatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 155, "n_pass": [24, 2, 2]}
{"time": "2021-02-20 13:18:26.953870", "score": "0.9996", "loss": "0.0012", "code": "@Override public void onClick(View v) { int adapterPosition = getAatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 133, "n_pass": [30, 3, 3]}
{"time": "2021-02-20 13:18:28.661260", "score": "0.9994", "loss": "0.0015", "code": "@Override public void onClick(View v) { int adapterPosition = getAatherData[aion]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 122, "n_pass": [50, 4, 4]}
{"time": "2021-02-20 13:18:30.000940", "score": "0.9987", "loss": "0.0038", "code": "@Override public void onClick(View v) { int adapterPosition = getAatherData[aion]; mClicClick(weatherForDay); }", "n_tokens": 111, "n_pass": [52, 5, 5]}
{"time": "2021-02-20 13:18:31.672762", "score": "0.996", "loss": "0.0103", "code": "@Override public void onClick(View v) { int tion = getAatherData[aion]; mClicClick(weatherForDay); }", "n_tokens": 100, "n_pass": [59, 6, 6]}
{"time": "2021-02-20 13:18:33.349432", "score": "0.999", "loss": "0.0029", "code": "@Override public void onClick(View v) { on = getAatherData[aion]; mClicClick(weatherForDay); }", "n_tokens": 94, "n_pass": [87, 7, 7]}
{"time": "2021-02-20 13:18:34.654343", "score": "0.996", "loss": "0.0113", "code": "@Override public void onClick(View v) { etAatherData[aion]; mClicClick(weatherForDay); }", "n_tokens": 88, "n_pass": [88, 8, 8]}
{"time": "2021-02-20 13:18:35.958455", "score": "0.9957", "loss": "0.0103", "code": "@Override public void onClick(View v) { erData[aion]; mClicClick(weatherForDay); }", "n_tokens": 82, "n_pass": [89, 9, 9]}
{"time": "2021-02-20 13:18:37.261140", "score": "0.9978", "loss": "0.0071", "code": "@Override public void onClick(View v) { erData; mClicClick(weatherForDay); }", "n_tokens": 76, "n_pass": [91, 10, 10]}
{"time": "2021-02-20 13:18:38.610632", "score": "0.9985", "loss": "0.0049", "code": "@Override public void onClick(View v) { erDatacClick(weatherForDay); }", "n_tokens": 70, "n_pass": [92, 11, 11]}
{"time": "2021-02-20 13:18:39.912562", "score": "0.9959", "loss": "0.0124", "code": "@Override public void onClick(View v) { erData(weatherForDay); }", "n_tokens": 64, "n_pass": [93, 12, 12]}
{"time": "2021-02-20 13:18:41.241329", "score": "0.9816", "loss": "0.0666", "code": "@Override public void onClick(View v) { erData(weathay); }", "n_tokens": 58, "n_pass": [95, 13, 13]}
{"time": "2021-02-20 13:18:42.539174", "score": "0.8582", "loss": "0.6615", "code": "@Overpublic void onClick(View v) { erData(weathay); }", "n_tokens": 53, "n_pass": [98, 14, 14]}
{"time": "2021-02-20 13:18:43.830370", "score": "0.8582", "loss": "0.6615", "code": "@Overc void onClick(View v) { erData(weathay); }", "n_tokens": 48, "n_pass": [99, 15, 15]}
{"time": "2021-02-20 13:18:45.830202", "score": "0.9765", "loss": "0.1451", "code": "@Overc void onClick(View v) { (weathay); }", "n_tokens": 42, "n_pass": [105, 16, 16]}
{"time": "2021-02-20 13:18:47.851920", "score": "0.9765", "loss": "0.1451", "code": "@Overc void onClick(View v) { (weay); }", "n_tokens": 39, "n_pass": [131, 17, 17]}
{"time": "2021-02-20 13:18:49.145049", "score": "0.9693", "loss": "0.2043", "code": "@Orc void onClick(View v) { (weay); }", "n_tokens": 37, "n_pass": [135, 18, 18]}
{"time": "2021-02-20 13:18:50.452553", "score": "0.979", "loss": "0.1278", "code": "@O void onClick(View v) { (weay); }", "n_tokens": 35, "n_pass": [136, 19, 19]}
{"time": "2021-02-20 13:18:55.774127", "score": "0.9195", "loss": "0.5097", "code": " void onClick(View v) { (weay); }", "n_tokens": 33, "n_pass": [149, 22, 20]}
{"time": "2021-02-20 13:19:02.682915", "score": "0.9195", "loss": "0.5097", "code": "void onClick(View v) { (weay); }", "n_tokens": 32, "n_pass": [186, 26, 21]}
{"time": "2021-02-20 13:19:10.728299", "score": "0.7313", "loss": "1.2386", "code": "void onClick(iew v) { (weay); }", "n_tokens": 31, "n_pass": [199, 30, 22]}
{"time": "2021-02-20 13:19:13.365745", "score": "0.579", "loss": "2.2723", "code": "void onClick(iew v) { (ay); }", "n_tokens": 29, "n_pass": [205, 32, 23]}
{"time": "2021-02-20 13:19:26.974261", "score": "0.579", "loss": "2.2723", "code": "void onClick(iew v) { (ay);}", "n_tokens": 28, "n_pass": [246, 39, 24]}
{"time": "2021-02-20 13:19:40.252839", "score": "0.579", "loss": "2.2723", "code": "void onClick(iew v){ (ay);}", "n_tokens": 27, "n_pass": [266, 47, 25]}
{"time": "2021-02-20 13:19:41.561741", "score": "0.579", "loss": "2.2723", "code": "void onClick(iew v){(ay);}", "n_tokens": 26, "n_pass": [268, 48, 26]}
{"time": "2021-02-20 13:19:42.866958", "score": "0.7886", "loss": "1.1796", "code": "void onClick(iew v){(y);}", "n_tokens": 25, "n_pass": [270, 49, 27]}

Minimal simplified code:
void onClick(iew v){(y);}

