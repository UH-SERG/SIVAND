
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/henryyan__activiti-in-action-codes/chapter13-query/src/main/java/me/kafeitu/activiti/web/chapter5/deployment/DeploymentController_deploy.java
method_name = deploy
method_body = @RequestMapping(value = "/deploy") public String deploy(@RequestParam(value = "file", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { InputStream fileInputStream = file.getInputStream(); String extension = FilenameUtils.getExtension(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals("zip") || extension.equals("bar")) { ZipInputStream zip = new ZipInputStream(fileInputStream); deployment.addZipInputStream(zip); } else { deployment.addInputStream(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error("error on deploy process, because of file input stream"); } return "redirect:process-list"; }
predict, score, loss = deploy, 0.9735591411590576, 0.27492034435272217

Trace of simplified code(s):
{"time": "2021-02-19 14:29:08.435606", "score": "0.9418", "loss": "0.276", "code": "@RequestMapping(value = \"/deploy\") public String deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { InputStream fileInputStream = file.getInputStream(); String extension = FilenameUtils.getExtension(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStream(fileInputStream); deployment.addZipInputStream(zip); } else { deployment.addInputStream(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\"error on deploy process, because of file input stream\"); } return \"redirect:process-list\"; }", "n_tokens": 723, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 14:29:09.832807", "score": "0.9888", "loss": "0.2326", "code": "@RequestMapping(value = \"/deploy\") public String deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { Inpnsion(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStream(fileInputStream); deployment.addZipInputStream(zip); } else { deployment.addInputStream(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\"error on deploy process, because of file input stream\"); } return \"redirect:process-list\"; }", "n_tokens": 633, "n_pass": [22, 2, 2]}
{"time": "2021-02-19 14:29:11.245679", "score": "0.9481", "loss": "0.3381", "code": "@RequestMapping(value = \"/deploy\") public String deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { Inpnsion(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\"error on deploy process, because of file input stream\"); } return \"redirect:process-list\"; }", "n_tokens": 542, "n_pass": [25, 3, 3]}
{"time": "2021-02-19 14:29:12.646803", "score": "0.9733", "loss": "0.1541", "code": "@RequestMapping(value = \"/deploy\") public String deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { Inpnsion(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 496, "n_pass": [46, 4, 4]}
{"time": "2021-02-19 14:29:14.033684", "score": "0.8189", "loss": "0.7189", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { Inpnsion(fileName); DeploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 451, "n_pass": [48, 5, 5]}
{"time": "2021-02-19 14:29:16.779215", "score": "0.7286", "loss": "0.9217", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { ploymentBuilder deployment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 429, "n_pass": [85, 7, 6]}
{"time": "2021-02-19 14:29:18.139330", "score": "0.4683", "loss": "1.2719", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { ment = repositoryService.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 407, "n_pass": [86, 8, 7]}
{"time": "2021-02-19 14:29:19.495377", "score": "0.4253", "loss": "1.5081", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { ce.createDeployment(); if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 385, "n_pass": [87, 9, 8]}
{"time": "2021-02-19 14:29:20.876096", "score": "0.5901", "loss": "1.3578", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStream zip = new ZipInputStr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 362, "n_pass": [88, 10, 9]}
{"time": "2021-02-19 14:29:22.261077", "score": "0.6459", "loss": "1.2193", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileName, fileInputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 339, "n_pass": [92, 11, 10]}
{"time": "2021-02-19 14:29:23.635343", "score": "0.6665", "loss": "1.1176", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) { logger.error(\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 328, "n_pass": [139, 12, 11]}
{"time": "2021-02-19 14:29:25.013504", "score": "0.6284", "loss": "1.245", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) { (\" stream\"); } return \"redirect:process-list\"; }", "n_tokens": 316, "n_pass": [145, 13, 12]}
{"time": "2021-02-19 14:29:26.359071", "score": "0.6332", "loss": "1.2413", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"redirect:process-list\"; }", "n_tokens": 304, "n_pass": [146, 14, 13]}
{"time": "2021-02-19 14:29:27.731022", "score": "0.6332", "loss": "1.2413", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = file.getOriginalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 292, "n_pass": [148, 15, 14]}
{"time": "2021-02-19 14:29:29.189633", "score": "0.6358", "loss": "1.2535", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = finalFilename(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 281, "n_pass": [159, 16, 15]}
{"time": "2021-02-19 14:29:30.543324", "score": "0.6451", "loss": "1.1846", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") || extension.equals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 270, "n_pass": [160, 17, 16]}
{"time": "2021-02-19 14:29:31.913399", "score": "0.6509", "loss": "1.1976", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") || exals(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 259, "n_pass": [165, 18, 17]}
{"time": "2021-02-19 14:29:33.317977", "score": "0.691", "loss": "1.0707", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { ZipInputStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 253, "n_pass": [235, 19, 18]}
{"time": "2021-02-19 14:29:34.692189", "score": "0.7233", "loss": "0.8752", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { utStrtr(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 247, "n_pass": [238, 20, 19]}
{"time": "2021-02-19 14:29:36.052036", "score": "0.6313", "loss": "1.0782", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileNputStream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 241, "n_pass": [239, 21, 20]}
{"time": "2021-02-19 14:29:37.398632", "score": "0.6525", "loss": "1.0584", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exception e) {  } return \"ress-list\"; }", "n_tokens": 235, "n_pass": [241, 22, 21]}
{"time": "2021-02-19 14:29:41.457701", "score": "0.7963", "loss": "0.7049", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"ress-list\"; }", "n_tokens": 229, "n_pass": [249, 25, 22]}
{"time": "2021-02-19 14:29:42.825664", "score": "0.543", "loss": "1.5054", "code": "ing deploy(@RequestParam(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 223, "n_pass": [253, 26, 23]}
{"time": "2021-02-19 14:29:44.926011", "score": "0.5791", "loss": "1.4143", "code": "ing deploy(@Reqaram(value = \"file\", required = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 218, "n_pass": [258, 27, 24]}
{"time": "2021-02-19 14:29:46.270989", "score": "0.5791", "loss": "1.4143", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) MultipartFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 213, "n_pass": [263, 28, 25]}
{"time": "2021-02-19 14:29:47.628105", "score": "0.5229", "loss": "1.5815", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) MurtFile file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 208, "n_pass": [267, 29, 26]}
{"time": "2021-02-19 14:29:48.980000", "score": "0.4498", "loss": "1.7471", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) { String fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 203, "n_pass": [268, 30, 27]}
{"time": "2021-02-19 14:29:50.334935", "score": "0.4125", "loss": "1.8729", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) { g fileName = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 198, "n_pass": [271, 31, 28]}
{"time": "2021-02-19 14:29:51.666051", "score": "0.4468", "loss": "1.6148", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) { Name = fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 192, "n_pass": [272, 32, 29]}
{"time": "2021-02-19 14:29:52.994319", "score": "0.5281", "loss": "1.4388", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  fe(); try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 186, "n_pass": [273, 33, 30]}
{"time": "2021-02-19 14:29:54.347148", "score": "0.6365", "loss": "1.1674", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (extension.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 180, "n_pass": [274, 34, 31]}
{"time": "2021-02-19 14:29:55.700488", "score": "0.5154", "loss": "1.4826", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (eon.equals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 174, "n_pass": [277, 35, 32]}
{"time": "2021-02-19 14:29:57.038413", "score": "0.5544", "loss": "1.3882", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (eals(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 168, "n_pass": [278, 36, 33]}
{"time": "2021-02-19 14:30:01.833303", "score": "0.4483", "loss": "1.7104", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"bar\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 165, "n_pass": [369, 39, 34]}
{"time": "2021-02-19 14:30:03.175104", "score": "0.6041", "loss": "1.3079", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fileream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 162, "n_pass": [373, 40, 35]}
{"time": "2021-02-19 14:30:04.514972", "score": "0.6041", "loss": "1.3079", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fream); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 159, "n_pass": [377, 41, 36]}
{"time": "2021-02-19 14:30:05.854257", "score": "0.5036", "loss": "1.5669", "code": "ing deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 156, "n_pass": [378, 42, 37]}
{"time": "2021-02-19 14:30:13.957392", "score": "0.4467", "loss": "1.8342", "code": "g deploy(@Reqaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 154, "n_pass": [400, 48, 38]}
{"time": "2021-02-19 14:30:16.802103", "score": "0.4467", "loss": "1.8342", "code": "g deploy(@qaram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 152, "n_pass": [406, 49, 39]}
{"time": "2021-02-19 14:30:18.145141", "score": "0.3819", "loss": "2.0952", "code": "g deploy(@ram(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 150, "n_pass": [407, 50, 40]}
{"time": "2021-02-19 14:30:19.482729", "score": "0.3002", "loss": "2.324", "code": "g deploy(@m(value = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 148, "n_pass": [408, 51, 41]}
{"time": "2021-02-19 14:30:20.819654", "score": "0.3002", "loss": "2.324", "code": "g deploy(@m(lue = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 146, "n_pass": [410, 52, 42]}
{"time": "2021-02-19 14:30:22.197710", "score": "0.3002", "loss": "2.324", "code": "g deploy(@m(e = \"file\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 144, "n_pass": [411, 53, 43]}
{"time": "2021-02-19 14:30:23.552523", "score": "0.4198", "loss": "1.8802", "code": "g deploy(@m(e = \"f\",ired = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 141, "n_pass": [414, 54, 44]}
{"time": "2021-02-19 14:30:24.889893", "score": "0.4198", "loss": "1.8802", "code": "g deploy(@m(e = \"f\",i = true) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 138, "n_pass": [416, 55, 45]}
{"time": "2021-02-19 14:30:26.226765", "score": "0.3921", "loss": "2.0098", "code": "g deploy(@m(e = \"f\",i = e) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 135, "n_pass": [418, 56, 46]}
{"time": "2021-02-19 14:30:40.588683", "score": "0.3921", "loss": "2.0098", "code": "g deploy(@m(e = \"f\",i= e) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 134, "n_pass": [561, 62, 47]}
{"time": "2021-02-19 14:30:41.953612", "score": "0.3921", "loss": "2.0098", "code": "g deploy(@m(e = \"f\",i=e) Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 133, "n_pass": [563, 63, 48]}
{"time": "2021-02-19 14:30:43.291831", "score": "0.3921", "loss": "2.0098", "code": "g deploy(@m(e = \"f\",i=e)Mue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 132, "n_pass": [566, 64, 49]}
{"time": "2021-02-19 14:30:44.648628", "score": "0.5648", "loss": "1.4668", "code": "g deploy(@m(e = \"f\",i=e)ue file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 131, "n_pass": [567, 65, 50]}
{"time": "2021-02-19 14:30:45.986901", "score": "0.3474", "loss": "2.2267", "code": "g deploy(@m(e = \"f\",i=e)e file) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 130, "n_pass": [568, 66, 51]}
{"time": "2021-02-19 14:30:47.349353", "score": "0.3242", "loss": "2.2685", "code": "g deploy(@m(e = \"f\",i=e)e ile) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 129, "n_pass": [571, 67, 52]}
{"time": "2021-02-19 14:30:48.678985", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le) {  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 128, "n_pass": [572, 68, 53]}
{"time": "2021-02-19 14:30:52.726632", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){  try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 127, "n_pass": [576, 71, 54]}
{"time": "2021-02-19 14:30:54.080302", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){ try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 126, "n_pass": [578, 72, 55]}
{"time": "2021-02-19 14:30:55.415697", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){try { if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 125, "n_pass": [579, 73, 56]}
{"time": "2021-02-19 14:30:56.784671", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){try{ if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 124, "n_pass": [583, 74, 57]}
{"time": "2021-02-19 14:30:58.123228", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if (e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 123, "n_pass": [585, 75, 58]}
{"time": "2021-02-19 14:30:59.486857", "score": "0.283", "loss": "2.4565", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if(e(\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 122, "n_pass": [588, 76, 59]}
{"time": "2021-02-19 14:31:00.824635", "score": "0.2358", "loss": "2.7348", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(fm); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 121, "n_pass": [590, 77, 60]}
{"time": "2021-02-19 14:31:03.534284", "score": "0.4116", "loss": "1.8762", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy(); } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 119, "n_pass": [602, 79, 61]}
{"time": "2021-02-19 14:31:17.060505", "score": "0.2615", "loss": "2.4981", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (Exc e) {  } return \"rst\"; }", "n_tokens": 117, "n_pass": [614, 89, 62]}
{"time": "2021-02-19 14:31:18.402689", "score": "0.2429", "loss": "2.5501", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"rst\"; }", "n_tokens": 115, "n_pass": [621, 90, 63]}
{"time": "2021-02-19 14:31:19.761187", "score": "0.2778", "loss": "2.1924", "code": "g deploy(@m(e = \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 113, "n_pass": [631, 91, 64]}
{"time": "2021-02-19 14:31:24.148174", "score": "0.2778", "loss": "2.1924", "code": "g deploy(@m(e= \"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 112, "n_pass": [647, 92, 65]}
{"time": "2021-02-19 14:31:25.521918", "score": "0.2778", "loss": "2.1924", "code": "g deploy(@m(e=\"f\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 111, "n_pass": [649, 93, 66]}
{"time": "2021-02-19 14:31:26.860647", "score": "0.4023", "loss": "1.7457", "code": "g deploy(@m(e=\"\",i=e)e le){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 110, "n_pass": [651, 94, 67]}
{"time": "2021-02-19 14:31:28.256755", "score": "0.4627", "loss": "1.5816", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"zip\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 109, "n_pass": [660, 95, 68]}
{"time": "2021-02-19 14:31:29.605778", "score": "0.5549", "loss": "1.2883", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); } deployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 107, "n_pass": [673, 96, 69]}
{"time": "2021-02-19 14:31:30.959317", "score": "0.2953", "loss": "2.141", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }eployment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 105, "n_pass": [684, 97, 70]}
{"time": "2021-02-19 14:31:32.296105", "score": "0.2953", "loss": "2.141", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }loyment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 103, "n_pass": [685, 98, 71]}
{"time": "2021-02-19 14:31:33.632426", "score": "0.2953", "loss": "2.141", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }yment.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 101, "n_pass": [686, 99, 72]}
{"time": "2021-02-19 14:31:34.986907", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy; } catch (E e) {  } return \"r\"; }", "n_tokens": 99, "n_pass": [687, 100, 73]}
{"time": "2021-02-19 14:31:51.987748", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;} catch (E e) {  } return \"r\"; }", "n_tokens": 98, "n_pass": [819, 106, 74]}
{"time": "2021-02-19 14:31:53.325786", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch (E e) {  } return \"r\"; }", "n_tokens": 97, "n_pass": [821, 107, 75]}
{"time": "2021-02-19 14:31:54.666932", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e) {  } return \"r\"; }", "n_tokens": 96, "n_pass": [827, 108, 76]}
{"time": "2021-02-19 14:31:56.036506", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){  } return \"r\"; }", "n_tokens": 95, "n_pass": [833, 109, 77]}
{"time": "2021-02-19 14:31:57.384733", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){ } return \"r\"; }", "n_tokens": 94, "n_pass": [835, 110, 78]}
{"time": "2021-02-19 14:31:58.719619", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){} return \"r\"; }", "n_tokens": 93, "n_pass": [836, 111, 79]}
{"time": "2021-02-19 14:32:00.055125", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){}return \"r\"; }", "n_tokens": 92, "n_pass": [838, 112, 80]}
{"time": "2021-02-19 14:32:01.400016", "score": "0.2594", "loss": "2.2398", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){}return\"r\"; }", "n_tokens": 91, "n_pass": [845, 113, 81]}
{"time": "2021-02-19 14:32:02.735005", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){}return\"\"; }", "n_tokens": 90, "n_pass": [847, 114, 82]}
{"time": "2021-02-19 14:32:04.091443", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\") |s(\"\")) { r(); }ent.deploy;}catch(E e){}return\"\";}", "n_tokens": 89, "n_pass": [850, 115, 83]}
{"time": "2021-02-19 14:32:09.818470", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\")|s(\"\")) { r(); }ent.deploy;}catch(E e){}return\"\";}", "n_tokens": 88, "n_pass": [890, 117, 84]}
{"time": "2021-02-19 14:32:12.482804", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\")|s(\"\")){ r(); }ent.deploy;}catch(E e){}return\"\";}", "n_tokens": 87, "n_pass": [898, 119, 85]}
{"time": "2021-02-19 14:32:13.848044", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\")|s(\"\")){r(); }ent.deploy;}catch(E e){}return\"\";}", "n_tokens": 86, "n_pass": [900, 120, 86]}
{"time": "2021-02-19 14:32:15.190548", "score": "0.3078", "loss": "2.1671", "code": "g deploy(@m(e=\"\",i=e)e e){try{if((\"p\")|s(\"\")){r();}ent.deploy;}catch(E e){}return\"\";}", "n_tokens": 85, "n_pass": [905, 121, 87]}

Minimal simplified code:
g deploy(@m(e="",i=e)e e){try{if(("p")|s("")){r();}ent.deploy;}catch(E e){}return"";}

