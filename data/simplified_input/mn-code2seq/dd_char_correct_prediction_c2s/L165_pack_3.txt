
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_wind_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }
predict, score, loss = pack, 0.9884598255157471, 0.01849314570426941

Trace of simplified code(s):
{"time": "2021-02-19 19:02:23.425963", "score": "0.9874", "loss": "0.0213", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_WIND; packet.payload.putFloat(direction); packet.payload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 287, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 19:02:24.809568", "score": "0.9774", "loss": "0.039", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgload.putFloat(speed); packet.payload.putFloat(speed_z); return packet; }", "n_tokens": 215, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 19:02:26.152586", "score": "0.9592", "loss": "0.0708", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msg.putFloat(speed_z); return packet; }", "n_tokens": 179, "n_pass": [19, 3, 3]}
{"time": "2021-02-19 19:02:27.508734", "score": "0.8224", "loss": "0.3439", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msg; return packet; }", "n_tokens": 161, "n_pass": [34, 4, 4]}
{"time": "2021-02-19 19:02:30.232664", "score": "0.7396", "loss": "0.5318", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packet.sysid = 255; packet.compid = 190; packet.msg; return packet; }", "n_tokens": 143, "n_pass": [39, 6, 5]}
{"time": "2021-02-19 19:02:31.578015", "score": "0.4859", "loss": "1.1505", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(); packet.sysid = 255; packet.compid; return packet; }", "n_tokens": 125, "n_pass": [42, 7, 6]}
{"time": "2021-02-19 19:02:38.237396", "score": "0.868", "loss": "0.3129", "code": "public MAVLinkPacket pack() { MAVLipacket = new MAVLinkPacket(); packet.sysid = 255; packet.compid; return packet; }", "n_tokens": 116, "n_pass": [70, 12, 7]}
{"time": "2021-02-19 19:02:39.559067", "score": "0.9316", "loss": "0.1467", "code": "public MAVLinkPacket pack() { MAVLipacket = nkPacket(); packet.sysid = 255; packet.compid; return packet; }", "n_tokens": 107, "n_pass": [71, 13, 8]}
{"time": "2021-02-19 19:02:40.877074", "score": "0.903", "loss": "0.1879", "code": "public MAVLinkPacket pack() { MAVLipacket = nkPacket(); packet255; packet.compid; return packet; }", "n_tokens": 98, "n_pass": [74, 14, 9]}
{"time": "2021-02-19 19:02:42.186891", "score": "0.7832", "loss": "0.5009", "code": "public MAVLinkPacket pack() { MAVLipacket = nkPacket(); packetet.compid; return packet; }", "n_tokens": 89, "n_pass": [75, 15, 10]}
{"time": "2021-02-19 19:02:43.493691", "score": "0.6542", "loss": "0.9756", "code": "public MAVLinkPacket pack() { MAVLipacket = nkPacket(); packet; return packet; }", "n_tokens": 80, "n_pass": [76, 16, 11]}
{"time": "2021-02-19 19:02:52.760455", "score": "0.5258", "loss": "1.0212", "code": "public MAVLinkPacket pack() { MAVLipacket = nkPacket(); packet; returnet; }", "n_tokens": 75, "n_pass": [106, 23, 12]}
{"time": "2021-02-19 19:02:56.694092", "score": "0.263", "loss": "2.011", "code": "public MAVLicket pack() { MAVLipacket = nkPacket(); packet; returnet; }", "n_tokens": 71, "n_pass": [111, 26, 13]}
{"time": "2021-02-19 19:02:58.001302", "score": "0.5907", "loss": "0.9789", "code": "public MAVLi pack() { MAVLipacket = nkPacket(); packet; returnet; }", "n_tokens": 67, "n_pass": [112, 27, 14]}
{"time": "2021-02-19 19:02:59.667199", "score": "0.2734", "loss": "2.061", "code": "public MAVLi pack() { MAacket = nkPacket(); packet; returnet; }", "n_tokens": 63, "n_pass": [116, 28, 15]}
{"time": "2021-02-19 19:03:00.978058", "score": "0.3544", "loss": "1.62", "code": "public MAVLi pack() { MAt = nkPacket(); packet; returnet; }", "n_tokens": 59, "n_pass": [117, 29, 16]}
{"time": "2021-02-19 19:03:11.887304", "score": "0.4661", "loss": "1.0074", "code": "public MAVLi pack() { MA= nkPacket(); packet; returnet; }", "n_tokens": 57, "n_pass": [157, 37, 17]}
{"time": "2021-02-19 19:03:13.216110", "score": "0.6171", "loss": "0.7775", "code": "public MAVLi pack() { MAnkPacket(); packet; returnet; }", "n_tokens": 55, "n_pass": [158, 38, 18]}
{"time": "2021-02-19 19:03:14.527165", "score": "0.5574", "loss": "0.9611", "code": "public MAVLi pack() { MAPacket(); packet; returnet; }", "n_tokens": 53, "n_pass": [159, 39, 19]}
{"time": "2021-02-19 19:03:15.847874", "score": "0.3542", "loss": "1.6787", "code": "public MAVLi pack() { MAcket(); packet; returnet; }", "n_tokens": 51, "n_pass": [160, 40, 20]}
{"time": "2021-02-19 19:03:17.183429", "score": "0.3847", "loss": "1.8308", "code": "public MAVLi pack() { MAet(); packet; returnet; }", "n_tokens": 49, "n_pass": [161, 41, 21]}
{"time": "2021-02-19 19:03:18.495664", "score": "0.5266", "loss": "1.0098", "code": "public MAVLi pack() { MA(); packet; returnet; }", "n_tokens": 47, "n_pass": [162, 42, 22]}
{"time": "2021-02-19 19:03:23.718265", "score": "0.5266", "loss": "1.0098", "code": "public MAVLi pack() { MA(); packet;turnet; }", "n_tokens": 44, "n_pass": [167, 46, 23]}
{"time": "2021-02-19 19:03:25.026017", "score": "0.6633", "loss": "0.7833", "code": "public MAVLi pack() { MA(); packet;net; }", "n_tokens": 41, "n_pass": [168, 47, 24]}
{"time": "2021-02-19 19:03:26.355212", "score": "0.7696", "loss": "0.3271", "code": "public MAVLi pack() { MA(); packet;; }", "n_tokens": 38, "n_pass": [169, 48, 25]}
{"time": "2021-02-19 19:03:30.276164", "score": "0.7108", "loss": "0.4167", "code": "public MAV pack() { MA(); packet;; }", "n_tokens": 36, "n_pass": [176, 51, 26]}
{"time": "2021-02-19 19:03:32.328495", "score": "0.4232", "loss": "1.4274", "code": "public MAV pack() { MA; packet;; }", "n_tokens": 34, "n_pass": [183, 52, 27]}
{"time": "2021-02-19 19:03:34.936743", "score": "0.3606", "loss": "1.5041", "code": "public MAV pack() { MA; pet;; }", "n_tokens": 31, "n_pass": [185, 54, 28]}
{"time": "2021-02-19 19:03:36.260339", "score": "0.3908", "loss": "1.3018", "code": "public MAV pack() { MA; p; }", "n_tokens": 28, "n_pass": [186, 55, 29]}
{"time": "2021-02-19 19:03:40.870487", "score": "0.4904", "loss": "1.1151", "code": "public MAV pack() { ; p; }", "n_tokens": 26, "n_pass": [198, 58, 30]}
{"time": "2021-02-19 19:03:48.855511", "score": "0.4904", "loss": "1.1151", "code": "public MAV pack() {  p; }", "n_tokens": 25, "n_pass": [235, 62, 31]}
{"time": "2021-02-19 19:03:50.157310", "score": "0.4904", "loss": "1.1151", "code": "public MAV pack() { p; }", "n_tokens": 24, "n_pass": [236, 63, 32]}
{"time": "2021-02-19 19:03:52.759626", "score": "0.359", "loss": "1.7172", "code": "publicMAV pack() { p; }", "n_tokens": 23, "n_pass": [245, 65, 33]}
{"time": "2021-02-19 19:03:59.698805", "score": "0.359", "loss": "1.7172", "code": "publicMAV pack(){ p; }", "n_tokens": 22, "n_pass": [256, 69, 34]}
{"time": "2021-02-19 19:04:00.982758", "score": "0.359", "loss": "1.7172", "code": "publicMAV pack(){p; }", "n_tokens": 21, "n_pass": [258, 70, 35]}
{"time": "2021-02-19 19:04:09.976995", "score": "0.6734", "loss": "0.6542", "code": "publiMAV pack(){p; }", "n_tokens": 20, "n_pass": [266, 77, 36]}
{"time": "2021-02-19 19:04:16.998127", "score": "0.3385", "loss": "1.4121", "code": "publiMAV pack(){ }", "n_tokens": 18, "n_pass": [278, 81, 37]}
{"time": "2021-02-19 19:04:30.714382", "score": "0.3385", "loss": "1.4121", "code": "publiMAV pack(){}", "n_tokens": 17, "n_pass": [298, 90, 38]}

Minimal simplified code:
publiMAV pack(){}

