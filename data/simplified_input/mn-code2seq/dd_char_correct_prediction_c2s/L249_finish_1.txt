
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpython/src/main/java/org/qpython/qpy/console/GenericTermSession_finish.java
method_name = finish
method_body = @Override public void finish() { try { mTermFd.close(); } catch (IOException e) { } super.finish(); }
predict, score, loss = finish, 0.9951841235160828, 0.007259185425937176

Trace of simplified code(s):
{"time": "2021-02-20 00:27:28.023111", "score": "0.9952", "loss": "0.0073", "code": "@Override public void finish() { try { mTermFd.close(); } catch (IOException e) { } super.finish(); }", "n_tokens": 101, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 00:27:30.157615", "score": "0.9915", "loss": "0.0134", "code": "@Overrblic void finish() { try { mTermFd.close(); } catch (IOException e) { } super.finish(); }", "n_tokens": 95, "n_pass": [45, 2, 2]}
{"time": "2021-02-20 00:27:32.185143", "score": "0.9956", "loss": "0.0097", "code": "@Overrblic void finish() { try { mTelose(); } catch (IOException e) { } super.finish(); }", "n_tokens": 89, "n_pass": [51, 3, 3]}
{"time": "2021-02-20 00:27:33.520207", "score": "0.9965", "loss": "0.0075", "code": "@Overrblic void finish() { try { mTe; } catch (IOException e) { } super.finish(); }", "n_tokens": 83, "n_pass": [52, 4, 4]}
{"time": "2021-02-20 00:27:34.855982", "score": "0.9958", "loss": "0.0096", "code": "@Overrblic void finish() { try { mTe; } catch (Iion e) { } super.finish(); }", "n_tokens": 76, "n_pass": [55, 5, 5]}
{"time": "2021-02-20 00:27:38.211543", "score": "0.9964", "loss": "0.0075", "code": "@Overrblic void finish() { try { mTe; } catch (I e) { } super.finish(); }", "n_tokens": 73, "n_pass": [92, 7, 6]}
{"time": "2021-02-20 00:27:42.200774", "score": "0.9964", "loss": "0.0075", "code": "@Ovblic void finish() { try { mTe; } catch (I e) { } super.finish(); }", "n_tokens": 70, "n_pass": [101, 10, 7]}
{"time": "2021-02-20 00:27:43.522926", "score": "0.9964", "loss": "0.0075", "code": "@Ovc void finish() { try { mTe; } catch (I e) { } super.finish(); }", "n_tokens": 67, "n_pass": [102, 11, 8]}
{"time": "2021-02-20 00:27:45.210001", "score": "0.9938", "loss": "0.0092", "code": "@Ovc v finish() { try { mTe; } catch (I e) { } super.finish(); }", "n_tokens": 64, "n_pass": [104, 12, 9]}
{"time": "2021-02-20 00:27:47.252175", "score": "0.9896", "loss": "0.0153", "code": "@Ovc v finish() { try { ; } catch (I e) { } super.finish(); }", "n_tokens": 61, "n_pass": [111, 13, 10]}
{"time": "2021-02-20 00:27:53.295930", "score": "0.9896", "loss": "0.0153", "code": "@Ovc v finish() { try { } catch (I e) { } super.finish(); }", "n_tokens": 59, "n_pass": [172, 16, 11]}
{"time": "2021-02-20 00:28:02.583675", "score": "0.9636", "loss": "0.0638", "code": "@vc v finish() { try { } catch (I e) { } super.finish(); }", "n_tokens": 58, "n_pass": [192, 23, 12]}
{"time": "2021-02-20 00:28:03.926738", "score": "0.9875", "loss": "0.0185", "code": "@c v finish() { try { } catch (I e) { } super.finish(); }", "n_tokens": 57, "n_pass": [193, 24, 13]}
{"time": "2021-02-20 00:28:20.828790", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){ try { } catch (I e) { } super.finish(); }", "n_tokens": 56, "n_pass": [273, 31, 14]}
{"time": "2021-02-20 00:28:22.142095", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try { } catch (I e) { } super.finish(); }", "n_tokens": 55, "n_pass": [274, 32, 15]}
{"time": "2021-02-20 00:28:23.444692", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{ } catch (I e) { } super.finish(); }", "n_tokens": 54, "n_pass": [278, 33, 16]}
{"time": "2021-02-20 00:28:24.785801", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{} catch (I e) { } super.finish(); }", "n_tokens": 53, "n_pass": [280, 34, 17]}
{"time": "2021-02-20 00:28:26.135230", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch (I e) { } super.finish(); }", "n_tokens": 52, "n_pass": [282, 35, 18]}
{"time": "2021-02-20 00:28:27.526404", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch(I e) { } super.finish(); }", "n_tokens": 51, "n_pass": [288, 36, 19]}
{"time": "2021-02-20 00:28:28.856630", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch(I e){ } super.finish(); }", "n_tokens": 50, "n_pass": [294, 37, 20]}
{"time": "2021-02-20 00:28:30.193448", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch(I e){} super.finish(); }", "n_tokens": 49, "n_pass": [296, 38, 21]}
{"time": "2021-02-20 00:28:31.557241", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch(I e){}super.finish(); }", "n_tokens": 48, "n_pass": [298, 39, 22]}
{"time": "2021-02-20 00:28:48.789023", "score": "0.9875", "loss": "0.0185", "code": "@c v finish(){try{}catch(I e){}super.finish();}", "n_tokens": 47, "n_pass": [314, 52, 23]}

Minimal simplified code:
@c v finish(){try{}catch(I e){}super.finish();}

