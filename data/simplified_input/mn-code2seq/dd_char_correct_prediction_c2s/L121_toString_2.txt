
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/http/src/main/java/org/kaazing/gateway/transport/http/HttpBindings_toString.java
method_name = toString
method_body = @Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); StringBuilder sb = new StringBuilder(); sb.append("(\n"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(" ").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append("\n #").append(referenceCount()).append(")").toString(); sb.append(';').append('\n'); } }
predict, score, loss = toString, 0.9998973608016968, 0.00039539000135846436

Trace of simplified code(s):
{"time": "2021-02-19 16:01:43.670721", "score": "0.9952", "loss": "0.0127", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); StringBuilder sb = new StringBuilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 504, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 16:01:45.498448", "score": "0.9885", "loss": "0.0304", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.getKey(); Binding value = e.getValue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 473, "n_pass": [49, 2, 2]}
{"time": "2021-02-19 16:01:46.894145", "score": "0.9933", "loss": "0.0178", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.geue(); sb.append(\" \").append(key); sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 441, "n_pass": [53, 3, 3]}
{"time": "2021-02-19 16:01:48.278645", "score": "0.9975", "loss": "0.0066", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append('='); sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 409, "n_pass": [54, 4, 4]}
{"time": "2021-02-19 16:01:50.053760", "score": "0.9997", "loss": "0.0011", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.append(\"\\n #\").append(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 393, "n_pass": [94, 5, 5]}
{"time": "2021-02-19 16:01:51.436915", "score": "0.9996", "loss": "0.0015", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); sb.append(';').append('\\n'); } }", "n_tokens": 377, "n_pass": [97, 6, 6]}
{"time": "2021-02-19 16:01:52.822087", "score": "0.9996", "loss": "0.0012", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bindingsByPath.entrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 361, "n_pass": [101, 7, 7]}
{"time": "2021-02-19 16:01:54.919117", "score": "0.9348", "loss": "0.195", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = bntrySet().iterator(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 346, "n_pass": [108, 8, 8]}
{"time": "2021-02-19 16:01:56.302386", "score": "0.9995", "loss": "0.0017", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return super.toString(); ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 331, "n_pass": [109, 9, 9]}
{"time": "2021-02-19 16:01:57.668240", "score": "0.929", "loss": "0.2375", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return ; ilder(); sb.append(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 315, "n_pass": [112, 10, 10]}
{"time": "2021-02-19 16:01:59.038156", "score": "0.8908", "loss": "0.4154", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); String key = e.ge; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 299, "n_pass": [113, 11, 11]}
{"time": "2021-02-19 16:02:00.774527", "score": "0.8974", "loss": "0.3487", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); S; sb.append(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 283, "n_pass": [118, 12, 12]}
{"time": "2021-02-19 16:02:03.353596", "score": "0.7551", "loss": "1.1782", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (!i.hasNext()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 275, "n_pass": [173, 13, 13]}
{"time": "2021-02-19 16:02:04.722453", "score": "0.7393", "loss": "1.3266", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) return sb.ppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 267, "n_pass": [175, 14, 14]}
{"time": "2021-02-19 16:02:06.096330", "score": "0.7141", "loss": "1.5963", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(referenceCount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 259, "n_pass": [177, 15, 15]}
{"time": "2021-02-19 16:02:07.486991", "score": "0.7027", "loss": "1.6772", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toString(); ppend('\\n'); } }", "n_tokens": 251, "n_pass": [179, 16, 16]}
{"time": "2021-02-19 16:02:08.838660", "score": "0.6719", "loss": "1.8894", "code": "@Override public String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 243, "n_pass": [183, 17, 17]}
{"time": "2021-02-19 16:02:10.184461", "score": "0.6488", "loss": "2.1799", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext()) return pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 236, "n_pass": [187, 18, 18]}
{"time": "2021-02-19 16:02:12.287124", "score": "0.6169", "loss": "2.4905", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<String, Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 228, "n_pass": [199, 19, 19]}
{"time": "2021-02-19 16:02:13.632993", "score": "0.5931", "loss": "2.7562", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.next(); Send(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 220, "n_pass": [204, 20, 20]}
{"time": "2021-02-19 16:02:15.725698", "score": "0.6481", "loss": "2.0931", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(value); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 212, "n_pass": [207, 21, 21]}
{"time": "2021-02-19 16:02:18.643043", "score": "0.6379", "loss": "2.1367", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) reppend(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 208, "n_pass": [290, 22, 22]}
{"time": "2021-02-19 16:02:20.034979", "score": "0.6738", "loss": "1.8976", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(reount()).append(\")\").toStppend('\\n'); } }", "n_tokens": 204, "n_pass": [295, 23, 23]}
{"time": "2021-02-19 16:02:21.385353", "score": "0.708", "loss": "1.7135", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).append(\")\").toStppend('\\n'); } }", "n_tokens": 200, "n_pass": [297, 24, 24]}
{"time": "2021-02-19 16:02:22.729675", "score": "0.6908", "loss": "1.8251", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").toStppend('\\n'); } }", "n_tokens": 196, "n_pass": [299, 25, 25]}
{"time": "2021-02-19 16:02:24.072583", "score": "0.6955", "loss": "1.859", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").ppend('\\n'); } }", "n_tokens": 192, "n_pass": [302, 26, 26]}
{"time": "2021-02-19 16:02:25.413417", "score": "0.6974", "loss": "1.8381", "code": "@Overriic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 188, "n_pass": [303, 27, 27]}
{"time": "2021-02-19 16:02:26.767090", "score": "0.6974", "loss": "1.8381", "code": "@Oviic String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 185, "n_pass": [308, 28, 28]}
{"time": "2021-02-19 16:02:28.112357", "score": "0.723", "loss": "1.6579", "code": "@Ov String toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 182, "n_pass": [309, 29, 29]}
{"time": "2021-02-19 16:02:29.825892", "score": "0.5141", "loss": "3.4413", "code": "@Ov St toString() { Iterator<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 178, "n_pass": [311, 30, 30]}
{"time": "2021-02-19 16:02:31.953677", "score": "0.5141", "loss": "3.4413", "code": "@Ov St toString() { Itor<Entry<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 174, "n_pass": [316, 31, 31]}
{"time": "2021-02-19 16:02:33.292481", "score": "0.5141", "loss": "3.4413", "code": "@Ov St toString() { Itor<E<String, Binding>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 170, "n_pass": [318, 32, 32]}
{"time": "2021-02-19 16:02:35.978085", "score": "0.5297", "loss": "3.3199", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!i.hasNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 166, "n_pass": [322, 34, 33]}
{"time": "2021-02-19 16:02:37.346947", "score": "0.5409", "loss": "3.2203", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!sNext())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 162, "n_pass": [328, 35, 34]}
{"time": "2021-02-19 16:02:38.719201", "score": "0.5008", "loss": "3.5169", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())pend(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 158, "n_pass": [329, 36, 35]}
{"time": "2021-02-19 16:02:40.081184", "score": "0.3648", "loss": "3.7916", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<Binding> e = i.nend(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 154, "n_pass": [331, 37, 36]}
{"time": "2021-02-19 16:02:43.542088", "score": "0.4505", "loss": "3.525", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<Binding> e =end(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 150, "n_pass": [342, 39, 37]}
{"time": "2021-02-19 16:02:47.757644", "score": "0.4526", "loss": "3.2225", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<ing> e =end(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 146, "n_pass": [378, 41, 38]}
{"time": "2021-02-19 16:02:53.749916", "score": "0.4649", "loss": "3.1812", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt()) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 144, "n_pass": [490, 43, 39]}
{"time": "2021-02-19 16:02:56.782439", "score": "0.5398", "loss": "2.4846", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) red(re()).nd(\")\").d('\\n'); } }", "n_tokens": 142, "n_pass": [500, 45, 40]}
{"time": "2021-02-19 16:02:58.121599", "score": "0.53", "loss": "2.5277", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re()).nd(\")\").d('\\n'); } }", "n_tokens": 140, "n_pass": [502, 46, 41]}
{"time": "2021-02-19 16:02:59.451249", "score": "0.4893", "loss": "2.6789", "code": "@Ov St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 138, "n_pass": [505, 47, 42]}
{"time": "2021-02-19 16:03:00.794037", "score": "0.5722", "loss": "2.4953", "code": "@v St toString() { Itor<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 137, "n_pass": [518, 48, 43]}
{"time": "2021-02-19 16:03:04.388877", "score": "0.5722", "loss": "2.4953", "code": "@v St toString() { or<E<String, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 135, "n_pass": [528, 49, 44]}
{"time": "2021-02-19 16:03:07.098957", "score": "0.5074", "loss": "3.081", "code": "@v St toString() { or<E<Strg, Bin>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 133, "n_pass": [533, 51, 45]}
{"time": "2021-02-19 16:03:08.463845", "score": "0.5159", "loss": "2.9977", "code": "@v St toString() { or<E<Strg,in>> i = btor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 131, "n_pass": [535, 52, 46]}
{"time": "2021-02-19 16:03:09.796177", "score": "0.5264", "loss": "2.6119", "code": "@v St toString() { or<E<Strg,in>> i =tor(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 129, "n_pass": [540, 53, 47]}
{"time": "2021-02-19 16:03:11.125767", "score": "0.5502", "loss": "2.6691", "code": "@v St toString() { or<E<Strg,in>> i =r(); if (!t())(\"(\\n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 127, "n_pass": [541, 54, 48]}
{"time": "2021-02-19 16:03:12.462785", "score": "0.5416", "loss": "2.744", "code": "@v St toString() { or<E<Strg,in>> i =r(); if (!t())(\"n\"); for (; ; ) { Entry<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 125, "n_pass": [550, 55, 49]}
{"time": "2021-02-19 16:03:13.798765", "score": "0.5416", "loss": "2.744", "code": "@v St toString() { or<E<Strg,in>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =end(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 123, "n_pass": [561, 56, 50]}
{"time": "2021-02-19 16:03:16.241119", "score": "0.5137", "loss": "2.973", "code": "@v St toString() { or<E<Strg,in>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 121, "n_pass": [566, 57, 51]}
{"time": "2021-02-19 16:03:21.560924", "score": "0.5413", "loss": "2.7189", "code": "@v St toString() { or<E<Sg,in>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 119, "n_pass": [600, 59, 52]}
{"time": "2021-02-19 16:03:22.914646", "score": "0.5411", "loss": "2.7811", "code": "@v St toString() { or<E<Sin>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 117, "n_pass": [601, 60, 53]}
{"time": "2021-02-19 16:03:24.264739", "score": "0.5365", "loss": "2.7131", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { Eny<g> e =d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 115, "n_pass": [602, 61, 54]}
{"time": "2021-02-19 16:03:25.998537", "score": "0.5365", "loss": "2.7131", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d(re).nd(\")\").d('\\n'); } }", "n_tokens": 113, "n_pass": [623, 62, 55]}
{"time": "2021-02-19 16:03:28.866709", "score": "0.5353", "loss": "2.703", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().nd(\")\").d('\\n'); } }", "n_tokens": 111, "n_pass": [636, 63, 56]}
{"time": "2021-02-19 16:03:44.274516", "score": "0.5286", "loss": "2.7093", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n'); } }", "n_tokens": 110, "n_pass": [805, 64, 57]}
{"time": "2021-02-19 16:03:48.289614", "score": "0.5286", "loss": "2.7093", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');} }", "n_tokens": 109, "n_pass": [820, 67, 58]}
{"time": "2021-02-19 16:03:49.629961", "score": "0.5286", "loss": "2.7093", "code": "@v St toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 108, "n_pass": [822, 68, 59]}
{"time": "2021-02-19 16:03:53.105041", "score": "0.6327", "loss": "1.9153", "code": "@v S toString() { or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 107, "n_pass": [828, 70, 60]}
{"time": "2021-02-19 16:03:57.951822", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){ or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 106, "n_pass": [840, 71, 61]}
{"time": "2021-02-19 16:03:59.286533", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){or<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 105, "n_pass": [842, 72, 62]}
{"time": "2021-02-19 16:04:00.622477", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){r<E<S>> i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 104, "n_pass": [843, 73, 63]}
{"time": "2021-02-19 16:04:03.785142", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){r<E<S>>i =r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 103, "n_pass": [851, 74, 64]}
{"time": "2021-02-19 16:04:05.115764", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){r<E<S>>i=r(); if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 102, "n_pass": [853, 75, 65]}
{"time": "2021-02-19 16:04:06.817515", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){r<E<S>>i=r();if (!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 101, "n_pass": [859, 76, 66]}
{"time": "2021-02-19 16:04:08.160447", "score": "0.6327", "loss": "1.9153", "code": "@v S toString(){r<E<S>>i=r();if(!t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 100, "n_pass": [862, 77, 67]}
{"time": "2021-02-19 16:04:09.504395", "score": "0.6447", "loss": "1.8405", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"n\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 99, "n_pass": [864, 78, 68]}
{"time": "2021-02-19 16:04:10.860039", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\"); for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 98, "n_pass": [871, 79, 69]}
{"time": "2021-02-19 16:04:12.198848", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for (; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 97, "n_pass": [875, 80, 70]}
{"time": "2021-02-19 16:04:13.535713", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(; ; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 96, "n_pass": [879, 81, 71]}
{"time": "2021-02-19 16:04:14.901699", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;; ) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 95, "n_pass": [882, 82, 72]}
{"time": "2021-02-19 16:04:16.239545", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;) { y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 94, "n_pass": [884, 83, 73]}
{"time": "2021-02-19 16:04:17.595329", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){ y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 93, "n_pass": [886, 84, 74]}
{"time": "2021-02-19 16:04:18.932135", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g> e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 92, "n_pass": [888, 85, 75]}
{"time": "2021-02-19 16:04:20.643332", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e =d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 91, "n_pass": [893, 86, 76]}
{"time": "2021-02-19 16:04:22.002289", "score": "0.6399", "loss": "1.8504", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=d(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 90, "n_pass": [895, 87, 77]}
{"time": "2021-02-19 16:04:23.727862", "score": "0.7545", "loss": "1.1537", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e); if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 89, "n_pass": [897, 88, 78]}
{"time": "2021-02-19 16:04:25.084853", "score": "0.7545", "loss": "1.1537", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if (xt) d().d(\")\").d('\\n');}}", "n_tokens": 88, "n_pass": [902, 89, 79]}
{"time": "2021-02-19 16:04:26.428617", "score": "0.7545", "loss": "1.1537", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if(xt) d().d(\")\").d('\\n');}}", "n_tokens": 87, "n_pass": [905, 90, 80]}
{"time": "2021-02-19 16:04:27.766486", "score": "0.7904", "loss": "1.0481", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if(t) d().d(\")\").d('\\n');}}", "n_tokens": 86, "n_pass": [907, 91, 81]}
{"time": "2021-02-19 16:04:29.119073", "score": "0.7904", "loss": "1.0481", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if(t)d().d(\")\").d('\\n');}}", "n_tokens": 85, "n_pass": [910, 92, 82]}
{"time": "2021-02-19 16:04:30.463487", "score": "0.7715", "loss": "1.0924", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if(t)d().d(\"\").d('\\n');}}", "n_tokens": 84, "n_pass": [918, 93, 83]}
{"time": "2021-02-19 16:04:31.820727", "score": "0.7328", "loss": "1.286", "code": "@v S toString(){r<E<S>>i=r();if(t())(\"\");for(;;){y<g>e=(e);if(t)d().d(\"\").d('n');}}", "n_tokens": 83, "n_pass": [925, 94, 84]}

Minimal simplified code:
@v S toString(){r<E<S>>i=r();if(t())("");for(;;){y<g>e=(e);if(t)d().d("").d('n');}}

