
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/pnikosis__materialish-progress/library/src/main/java/com/pnikosis/materialishprogress/ProgressWheel_setLinearProgress.java
method_name = setLinearProgress
method_body = public void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }
predict, score, loss = setLinearProgress, 0.9856864213943481, 0.049088019877672195

Trace of simplified code(s):
{"time": "2021-02-20 07:44:09.364682", "score": "0.9857", "loss": "0.0491", "code": "public void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 113, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 07:44:13.047374", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 106, "n_pass": [44, 3, 2]}
{"time": "2021-02-20 07:44:19.002655", "score": "0.9762", "loss": "0.0829", "code": "void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isg) { invalidate(); } }", "n_tokens": 99, "n_pass": [55, 7, 3]}
{"time": "2021-02-20 07:44:20.318161", "score": "0.9591", "loss": "0.1554", "code": "void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isg) { ine(); } }", "n_tokens": 92, "n_pass": [57, 8, 4]}
{"time": "2021-02-20 07:44:26.623783", "score": "0.8741", "loss": "0.535", "code": "d setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isg) { ine(); } }", "n_tokens": 89, "n_pass": [99, 12, 5]}
{"time": "2021-02-20 07:44:30.062461", "score": "0.8153", "loss": "0.7951", "code": "d setLinearProgress(bean isLinear) { linearProgress = isLinear; if (!isg) { ine(); } }", "n_tokens": 86, "n_pass": [107, 13, 6]}
{"time": "2021-02-20 07:44:31.352694", "score": "0.8015", "loss": "0.875", "code": "d setLinearProgress(b isLinear) { linearProgress = isLinear; if (!isg) { ine(); } }", "n_tokens": 83, "n_pass": [108, 14, 7]}
{"time": "2021-02-20 07:44:32.646695", "score": "0.8933", "loss": "0.4932", "code": "d setLinearProgress(b isear) { linearProgress = isLinear; if (!isg) { ine(); } }", "n_tokens": 80, "n_pass": [110, 15, 8]}
{"time": "2021-02-20 07:44:39.159158", "score": "0.9134", "loss": "0.3769", "code": "d setLinearProgress(b isear) { linearProgress = near; if (!isg) { ine(); } }", "n_tokens": 76, "n_pass": [117, 20, 9]}
{"time": "2021-02-20 07:44:48.482599", "score": "0.864", "loss": "0.5836", "code": "d setLinearProgress(b isear) { linearProgress = ar; if (!isg) { ine(); } }", "n_tokens": 74, "n_pass": [181, 25, 10]}
{"time": "2021-02-20 07:44:49.779788", "score": "0.9009", "loss": "0.4292", "code": "d setLinearProgress(b isear) { linearProgress = ar; if (sg) { ine(); } }", "n_tokens": 72, "n_pass": [185, 26, 11]}
{"time": "2021-02-20 07:44:51.074431", "score": "0.9086", "loss": "0.3942", "code": "d setLinearProgress(b isear) { linearProgress = ar; if (sg) { e(); } }", "n_tokens": 70, "n_pass": [189, 27, 12]}
{"time": "2021-02-20 07:44:57.030192", "score": "0.9262", "loss": "0.3446", "code": "d setLinearProgress(b ear) { linearProgress = ar; if (sg) { e(); } }", "n_tokens": 68, "n_pass": [209, 28, 13]}
{"time": "2021-02-20 07:44:58.334598", "score": "0.8624", "loss": "0.5745", "code": "d setLinearProgress(b r) { linearProgress = ar; if (sg) { e(); } }", "n_tokens": 66, "n_pass": [210, 29, 14]}
{"time": "2021-02-20 07:45:20.337028", "score": "0.8624", "loss": "0.5745", "code": "d setLinearProgress(b r) {linearProgress = ar; if (sg) { e(); } }", "n_tokens": 65, "n_pass": [306, 39, 15]}
{"time": "2021-02-20 07:45:38.580040", "score": "0.8624", "loss": "0.5745", "code": "d setLinearProgress(b r) {linearProgress= ar; if (sg) { e(); } }", "n_tokens": 64, "n_pass": [320, 53, 16]}
{"time": "2021-02-20 07:45:41.219837", "score": "0.8624", "loss": "0.5745", "code": "d setLinearProgress(b r) {linearProgress=ar; if (sg) { e(); } }", "n_tokens": 63, "n_pass": [322, 55, 17]}
{"time": "2021-02-20 07:45:42.512085", "score": "0.8687", "loss": "0.5714", "code": "d setLinearProgress(b r) {linearProgress=r; if (sg) { e(); } }", "n_tokens": 62, "n_pass": [323, 56, 18]}
{"time": "2021-02-20 07:45:43.806958", "score": "0.8687", "loss": "0.5714", "code": "d setLinearProgress(b r) {linearProgress=r;if (sg) { e(); } }", "n_tokens": 61, "n_pass": [326, 57, 19]}
{"time": "2021-02-20 07:45:45.105947", "score": "0.8687", "loss": "0.5714", "code": "d setLinearProgress(b r) {linearProgress=r;if(sg) { e(); } }", "n_tokens": 60, "n_pass": [329, 58, 20]}
{"time": "2021-02-20 07:45:46.395135", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r) {linearProgress=r;if(g) { e(); } }", "n_tokens": 59, "n_pass": [331, 59, 21]}
{"time": "2021-02-20 07:45:47.708179", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r) {linearProgress=r;if(g){ e(); } }", "n_tokens": 58, "n_pass": [334, 60, 22]}
{"time": "2021-02-20 07:45:48.995947", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r) {linearProgress=r;if(g){e(); } }", "n_tokens": 57, "n_pass": [336, 61, 23]}
{"time": "2021-02-20 07:45:50.288667", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r) {linearProgress=r;if(g){e();} }", "n_tokens": 56, "n_pass": [341, 62, 24]}
{"time": "2021-02-20 07:45:51.580799", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r) {linearProgress=r;if(g){e();}}", "n_tokens": 55, "n_pass": [343, 63, 25]}
{"time": "2021-02-20 07:45:59.712458", "score": "0.9003", "loss": "0.3773", "code": "d setLinearProgress(b r){linearProgress=r;if(g){e();}}", "n_tokens": 54, "n_pass": [369, 64, 26]}

Minimal simplified code:
d setLinearProgress(b r){linearProgress=r;if(g){e();}}

