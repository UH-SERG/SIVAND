
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SINTEF-9012__JArduino/jarduino.core/src/main/java/org/sintef/jarduino/msg/AnalogReadMsg_toString.java
method_name = toString
method_body = @Override public String toString() { String myString = "analogRead:"; myString += " [pin: " + pin + "]"; return myString; }
predict, score, loss = toString, 0.9807133674621582, 0.043996769934892654

Trace of simplified code(s):
{"time": "2021-02-20 12:44:38.368164", "score": "0.9807", "loss": "0.044", "code": "@Override public String toString() { String myString = \"analogRead:\"; myString += \" [pin: \" + pin + \"]\"; return myString; }", "n_tokens": 123, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 12:44:40.747022", "score": "0.9707", "loss": "0.0758", "code": "@Overriic String toString() { String myString = \"analogRead:\"; myString += \" [pin: \" + pin + \"]\"; return myString; }", "n_tokens": 116, "n_pass": [45, 2, 2]}
{"time": "2021-02-20 12:44:42.784666", "score": "0.9261", "loss": "0.202", "code": "@Overriic String toString() { Stringg = \"analogRead:\"; myString += \" [pin: \" + pin + \"]\"; return myString; }", "n_tokens": 108, "n_pass": [50, 3, 3]}
{"time": "2021-02-20 12:44:44.097976", "score": "0.9428", "loss": "0.157", "code": "@Overriic String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin + \"]\"; return myString; }", "n_tokens": 100, "n_pass": [52, 4, 4]}
{"time": "2021-02-20 12:44:45.396066", "score": "0.9076", "loss": "0.2442", "code": "@Overriic String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin + \"]\"; retring; }", "n_tokens": 92, "n_pass": [58, 5, 5]}
{"time": "2021-02-20 12:44:47.418978", "score": "0.941", "loss": "0.1599", "code": "@Overriic String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin +tring; }", "n_tokens": 84, "n_pass": [70, 6, 6]}
{"time": "2021-02-20 12:44:49.431368", "score": "0.9484", "loss": "0.1481", "code": "@Overriic String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin +g; }", "n_tokens": 80, "n_pass": [104, 7, 7]}
{"time": "2021-02-20 12:44:50.722114", "score": "0.9484", "loss": "0.1481", "code": "@Oviic String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin +g; }", "n_tokens": 77, "n_pass": [106, 8, 8]}
{"time": "2021-02-20 12:44:52.013798", "score": "0.97", "loss": "0.0893", "code": "@Ov String toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin +g; }", "n_tokens": 74, "n_pass": [107, 9, 9]}
{"time": "2021-02-20 12:44:53.652788", "score": "0.7485", "loss": "0.9065", "code": "@Ov St toString() { Stringg = \"ana\"; myString += \" [pin: \" + pin +g; }", "n_tokens": 70, "n_pass": [109, 10, 10]}
{"time": "2021-02-20 12:44:55.653445", "score": "0.7595", "loss": "0.8767", "code": "@Ov St toString() { Stg = \"ana\"; myString += \" [pin: \" + pin +g; }", "n_tokens": 66, "n_pass": [114, 11, 11]}
{"time": "2021-02-20 12:44:58.245935", "score": "0.7302", "loss": "0.9906", "code": "@Ov St toString() { Stg = \"ana\"; myStr+= \" [pin: \" + pin +g; }", "n_tokens": 62, "n_pass": [119, 13, 12]}
{"time": "2021-02-20 12:44:59.558994", "score": "0.7445", "loss": "0.9378", "code": "@Ov St toString() { Stg = \"ana\"; myStr+= \"n: \" + pin +g; }", "n_tokens": 58, "n_pass": [121, 14, 13]}
{"time": "2021-02-20 12:45:00.848531", "score": "0.6202", "loss": "1.3913", "code": "@Ov St toString() { Stg = \"ana\"; myStr+= \"n: \" + pg; }", "n_tokens": 54, "n_pass": [124, 15, 14]}
{"time": "2021-02-20 12:45:04.445114", "score": "0.5293", "loss": "1.8401", "code": "@Ov St toString() { Stg = \"ana\"; m+= \"n: \" + pg; }", "n_tokens": 50, "n_pass": [135, 17, 15]}
{"time": "2021-02-20 12:45:08.092795", "score": "0.5279", "loss": "1.783", "code": "@Ov St toString() { Stg = \"ana\"; m+= \" \" + pg; }", "n_tokens": 48, "n_pass": [177, 19, 16]}
{"time": "2021-02-20 12:45:10.691053", "score": "0.6088", "loss": "1.4736", "code": "@v St toString() { Stg = \"ana\"; m+= \" \" + pg; }", "n_tokens": 47, "n_pass": [183, 21, 17]}
{"time": "2021-02-20 12:45:14.190581", "score": "0.7249", "loss": "0.9346", "code": "@v St toString() { g = \"ana\"; m+= \" \" + pg; }", "n_tokens": 45, "n_pass": [193, 22, 18]}
{"time": "2021-02-20 12:45:15.481796", "score": "0.7161", "loss": "1.0353", "code": "@v St toString() { g = \"a\"; m+= \" \" + pg; }", "n_tokens": 43, "n_pass": [197, 23, 19]}
{"time": "2021-02-20 12:45:24.776122", "score": "0.7161", "loss": "1.0353", "code": "@v St toString() { g = \"a\";m+= \" \" + pg; }", "n_tokens": 42, "n_pass": [264, 25, 20]}
{"time": "2021-02-20 12:45:26.118411", "score": "0.5937", "loss": "1.6228", "code": "@v St toString() { g = \"a\";m= \" \" + pg; }", "n_tokens": 41, "n_pass": [265, 26, 21]}
{"time": "2021-02-20 12:45:27.405999", "score": "0.5937", "loss": "1.6228", "code": "@v St toString() { g = \"a\";m=\" \" + pg; }", "n_tokens": 40, "n_pass": [267, 27, 22]}
{"time": "2021-02-20 12:45:28.696565", "score": "0.57", "loss": "1.7297", "code": "@v St toString() { g = \"a\";m=\"\" + pg; }", "n_tokens": 39, "n_pass": [269, 28, 23]}
{"time": "2021-02-20 12:45:29.986439", "score": "0.57", "loss": "1.7297", "code": "@v St toString() { g = \"a\";m=\"\"+ pg; }", "n_tokens": 38, "n_pass": [271, 29, 24]}
{"time": "2021-02-20 12:45:31.298350", "score": "0.57", "loss": "1.7297", "code": "@v St toString() { g = \"a\";m=\"\"+pg; }", "n_tokens": 37, "n_pass": [273, 30, 25]}
{"time": "2021-02-20 12:45:33.906524", "score": "0.5864", "loss": "1.6717", "code": "@v St toString() { g = \"a\";m=\"\"+p; }", "n_tokens": 36, "n_pass": [275, 32, 26]}
{"time": "2021-02-20 12:45:35.216415", "score": "0.5864", "loss": "1.6717", "code": "@v St toString() { g = \"a\";m=\"\"+p;}", "n_tokens": 35, "n_pass": [277, 33, 27]}
{"time": "2021-02-20 12:45:38.517153", "score": "0.6976", "loss": "1.0663", "code": "@v S toString() { g = \"a\";m=\"\"+p;}", "n_tokens": 34, "n_pass": [283, 35, 28]}
{"time": "2021-02-20 12:45:43.039072", "score": "0.6976", "loss": "1.0663", "code": "@v S toString(){ g = \"a\";m=\"\"+p;}", "n_tokens": 33, "n_pass": [295, 36, 29]}
{"time": "2021-02-20 12:45:44.326392", "score": "0.6976", "loss": "1.0663", "code": "@v S toString(){g = \"a\";m=\"\"+p;}", "n_tokens": 32, "n_pass": [297, 37, 30]}
{"time": "2021-02-20 12:45:45.633980", "score": "0.6976", "loss": "1.0663", "code": "@v S toString(){g= \"a\";m=\"\"+p;}", "n_tokens": 31, "n_pass": [299, 38, 31]}
{"time": "2021-02-20 12:45:46.920623", "score": "0.6976", "loss": "1.0663", "code": "@v S toString(){g=\"a\";m=\"\"+p;}", "n_tokens": 30, "n_pass": [301, 39, 32]}
{"time": "2021-02-20 12:45:48.209407", "score": "0.7707", "loss": "0.799", "code": "@v S toString(){g=\"\";m=\"\"+p;}", "n_tokens": 29, "n_pass": [303, 40, 33]}

Minimal simplified code:
@v S toString(){g="";m=""+p;}

