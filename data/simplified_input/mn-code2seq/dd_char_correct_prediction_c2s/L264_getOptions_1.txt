
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/experiment/statisticsexporters/AbstractMeasurementEvaluationStatisticsExporter_getOptions.java
method_name = getOptions
method_body = @Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, super.getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }
predict, score, loss = getOptions, 0.9948204159736633, 0.011101875454187393

Trace of simplified code(s):
{"time": "2021-02-20 01:29:22.657848", "score": "0.9948", "loss": "0.0111", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, super.getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 212, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 01:29:24.001126", "score": "0.5404", "loss": "2.6091", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, Measurement()); return OptionUtils.toArray(result); }", "n_tokens": 159, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 01:29:26.119100", "score": "0.5517", "loss": "2.0946", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result()); return OptionUtils.toArray(result); }", "n_tokens": 146, "n_pass": [37, 3, 3]}
{"time": "2021-02-20 01:29:30.561595", "score": "0.5483", "loss": "2.9785", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result()); retionUtils.toArray(result); }", "n_tokens": 139, "n_pass": [72, 6, 4]}
{"time": "2021-02-20 01:29:33.245689", "score": "0.5329", "loss": "3.7088", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result()); retionUtiray(result); }", "n_tokens": 132, "n_pass": [74, 8, 5]}
{"time": "2021-02-20 01:29:38.403001", "score": "0.5061", "loss": "3.9151", "code": "@Override public String[] getOptions() { List<String> result = new Ar<>(); OptionUtils.add(result()); retionUtiray(result); }", "n_tokens": 125, "n_pass": [88, 11, 6]}
{"time": "2021-02-20 01:29:43.792242", "score": "0.5634", "loss": "3.2274", "code": "@Override public String[] getOptions() { List<String> result = new Ar<>(); OptionUtils.add(result()); reray(result); }", "n_tokens": 118, "n_pass": [94, 15, 7]}
{"time": "2021-02-20 01:29:46.557868", "score": "0.4811", "loss": "3.7382", "code": "@Override putring[] getOptions() { List<String> result = new Ar<>(); OptionUtils.add(result()); reray(result); }", "n_tokens": 112, "n_pass": [99, 17, 8]}
{"time": "2021-02-20 01:29:53.106635", "score": "0.4811", "loss": "3.7382", "code": "@Override pung[] getOptions() { List<String> result = new Ar<>(); OptionUtils.add(result()); reray(result); }", "n_tokens": 109, "n_pass": [151, 21, 9]}
{"time": "2021-02-20 01:29:55.588907", "score": "0.4811", "loss": "3.7382", "code": "@Override pung[] getOptions() { L<String> result = new Ar<>(); OptionUtils.add(result()); reray(result); }", "n_tokens": 106, "n_pass": [158, 22, 10]}
{"time": "2021-02-20 01:30:00.325480", "score": "0.4743", "loss": "3.6929", "code": "@Override pung[] getOptions() { L<String> res = new Ar<>(); OptionUtils.add(result()); reray(result); }", "n_tokens": 103, "n_pass": [163, 25, 11]}
{"time": "2021-02-20 01:30:04.366004", "score": "0.3898", "loss": "4.0859", "code": "@Override pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); reray(result); }", "n_tokens": 99, "n_pass": [171, 28, 12]}
{"time": "2021-02-20 01:30:07.015885", "score": "0.4783", "loss": "3.0528", "code": "@Override pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(result); }", "n_tokens": 95, "n_pass": [176, 30, 13]}
{"time": "2021-02-20 01:30:08.448222", "score": "0.3665", "loss": "4.1159", "code": "@Override pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 91, "n_pass": [178, 31, 14]}
{"time": "2021-02-20 01:30:09.766941", "score": "0.2703", "loss": "5.3972", "code": "@Ovide pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 88, "n_pass": [181, 32, 15]}
{"time": "2021-02-20 01:30:20.806254", "score": "0.2703", "loss": "5.3972", "code": "@Oide pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 87, "n_pass": [263, 38, 16]}
{"time": "2021-02-20 01:30:22.162867", "score": "0.2582", "loss": "5.5194", "code": "@Ode pung[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 86, "n_pass": [264, 39, 17]}
{"time": "2021-02-20 01:30:28.901484", "score": "0.3325", "loss": "4.558", "code": "@Ode pug[] getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 85, "n_pass": [270, 44, 18]}
{"time": "2021-02-20 01:30:31.566675", "score": "0.3325", "loss": "4.558", "code": "@Ode pug[]getOptions() { L<String> res = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 84, "n_pass": [274, 46, 19]}
{"time": "2021-02-20 01:30:40.267288", "score": "0.3171", "loss": "4.9116", "code": "@Ode pug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(result()); y(re); }", "n_tokens": 82, "n_pass": [291, 50, 20]}
{"time": "2021-02-20 01:30:51.199150", "score": "0.281", "loss": "5.3199", "code": "@Ode pug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(re); }", "n_tokens": 80, "n_pass": [307, 58, 21]}
{"time": "2021-02-20 01:30:52.546019", "score": "0.4189", "loss": "4.1742", "code": "@Ode pug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 78, "n_pass": [312, 59, 22]}
{"time": "2021-02-20 01:30:53.894059", "score": "0.3567", "loss": "4.4998", "code": "@de pug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 77, "n_pass": [316, 60, 23]}
{"time": "2021-02-20 01:30:55.217196", "score": "0.4438", "loss": "3.8245", "code": "@e pug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 76, "n_pass": [317, 61, 24]}
{"time": "2021-02-20 01:30:56.540841", "score": "0.3098", "loss": "4.8088", "code": "@e ug[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 75, "n_pass": [320, 62, 25]}
{"time": "2021-02-20 01:30:57.899103", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions() { L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 74, "n_pass": [321, 63, 26]}
{"time": "2021-02-20 01:31:20.253802", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions(){ L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 73, "n_pass": [433, 73, 27]}
{"time": "2021-02-20 01:31:21.599108", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions(){L<String> r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 72, "n_pass": [434, 74, 28]}
{"time": "2021-02-20 01:31:31.289796", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions(){L<String>r = new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 71, "n_pass": [444, 81, 29]}
{"time": "2021-02-20 01:31:32.626828", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions(){L<String>r= new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 70, "n_pass": [446, 82, 30]}
{"time": "2021-02-20 01:31:34.045662", "score": "0.2979", "loss": "4.9504", "code": "@e g[]getOptions(){L<String>r=new Ar<>(); OptionU.add(rest()); y(); }", "n_tokens": 69, "n_pass": [448, 83, 31]}
{"time": "2021-02-20 01:31:35.372558", "score": "0.413", "loss": "4.175", "code": "@e g[]getOptions(){L<String>r=new r<>(); OptionU.add(rest()); y(); }", "n_tokens": 68, "n_pass": [453, 84, 32]}
{"time": "2021-02-20 01:31:36.714464", "score": "0.413", "loss": "4.175", "code": "@e g[]getOptions(){L<String>r=new r<>();OptionU.add(rest()); y(); }", "n_tokens": 67, "n_pass": [460, 85, 33]}
{"time": "2021-02-20 01:31:46.282269", "score": "0.5467", "loss": "2.9423", "code": "@e g[]getOptions(){L<String>r=new r<>();Option.add(rest()); y(); }", "n_tokens": 66, "n_pass": [467, 92, 34]}
{"time": "2021-02-20 01:31:48.957226", "score": "0.3358", "loss": "5.061", "code": "@e g[]getOptions(){L<String>r=new r<>();Option.dd(rest()); y(); }", "n_tokens": 65, "n_pass": [469, 94, 35]}
{"time": "2021-02-20 01:31:55.666612", "score": "0.2792", "loss": "5.1221", "code": "@e g[]getOptions(){L<String>r=new r<>();Option.dd(ret()); y(); }", "n_tokens": 64, "n_pass": [475, 99, 36]}
{"time": "2021-02-20 01:31:58.376958", "score": "0.2792", "loss": "5.1221", "code": "@e g[]getOptions(){L<String>r=new r<>();Option.dd(ret());y(); }", "n_tokens": 63, "n_pass": [481, 101, 37]}
{"time": "2021-02-20 01:31:59.753622", "score": "0.2792", "loss": "5.1221", "code": "@e g[]getOptions(){L<String>r=new r<>();Option.dd(ret());y();}", "n_tokens": 62, "n_pass": [486, 102, 38]}

Minimal simplified code:
@e g[]getOptions(){L<String>r=new r<>();Option.dd(ret());y();}

