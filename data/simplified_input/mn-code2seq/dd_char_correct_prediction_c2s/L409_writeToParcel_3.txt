
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/googlesamples__androidtv-Leanback/app/src/main/java/com/example/android/tvleanback/model/Video_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { dest.writeLong(id); dest.writeString(category); dest.writeString(title); dest.writeString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }
predict, score, loss = writeToParcel, 0.998799741268158, 0.005107575561851263

Trace of simplified code(s):
{"time": "2021-02-20 11:22:17.241459", "score": "0.9993", "loss": "0.0027", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeLong(id); dest.writeString(category); dest.writeString(title); dest.writeString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 283, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 11:22:18.591650", "score": "0.9991", "loss": "0.0037", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wririteString(description); dest.writeString(bgImageUrl); dest.writeString(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 212, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 11:22:19.927966", "score": "0.9994", "loss": "0.003", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wri(cardImageUrl); dest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 141, "n_pass": [10, 3, 3]}
{"time": "2021-02-20 11:22:21.241710", "score": "0.9992", "loss": "0.004", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.wrest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 123, "n_pass": [27, 4, 4]}
{"time": "2021-02-20 11:22:22.540727", "score": "0.994", "loss": "0.0735", "code": "void writeToParcel(Parcel dest, int flags) { dest.wrest.writeString(videoUrl); dest.writeString(studio); }", "n_tokens": 106, "n_pass": [31, 5, 5]}
{"time": "2021-02-20 11:22:26.228292", "score": "0.9906", "loss": "0.0833", "code": "void writeToParcel(Parcel dest, int flags) { dest.wrString(videoUrl); dest.writeString(studio); }", "n_tokens": 97, "n_pass": [56, 7, 6]}
{"time": "2021-02-20 11:22:27.545967", "score": "0.7635", "loss": "1.6564", "code": "void writeToParcel(Parcel dest, int flags) { dest.wrString(videoUrl); eString(studio); }", "n_tokens": 88, "n_pass": [58, 8, 7]}
{"time": "2021-02-20 11:22:30.856146", "score": "0.7263", "loss": "1.7038", "code": "void writeToParcel(Parcel dest, int flags) { dest.wrString(videoUrl); eString(o); }", "n_tokens": 83, "n_pass": [91, 10, 8]}
{"time": "2021-02-20 11:22:34.882744", "score": "0.7242", "loss": "1.9464", "code": "void writeToParcel(Parcel dest, int s) { dest.wrString(videoUrl); eString(o); }", "n_tokens": 79, "n_pass": [102, 12, 9]}
{"time": "2021-02-20 11:22:38.828029", "score": "0.7152", "loss": "2.1465", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(videoUrl); eString(o); }", "n_tokens": 74, "n_pass": [106, 15, 10]}
{"time": "2021-02-20 11:22:45.500268", "score": "0.7733", "loss": "1.6233", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(deoUrl); eString(o); }", "n_tokens": 72, "n_pass": [159, 19, 11]}
{"time": "2021-02-20 11:22:46.802357", "score": "0.7064", "loss": "1.8339", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(oUrl); eString(o); }", "n_tokens": 70, "n_pass": [160, 20, 12]}
{"time": "2021-02-20 11:22:48.105968", "score": "0.6914", "loss": "1.8556", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(rl); eString(o); }", "n_tokens": 68, "n_pass": [161, 21, 13]}
{"time": "2021-02-20 11:22:50.764622", "score": "0.6703", "loss": "1.9415", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(rl); eStr(o); }", "n_tokens": 65, "n_pass": [165, 23, 14]}
{"time": "2021-02-20 11:22:52.077621", "score": "0.9346", "loss": "0.372", "code": "void writeToParcel(Parcel dest, int s) { dest.wrS(rl); eStr; }", "n_tokens": 62, "n_pass": [166, 24, 15]}
{"time": "2021-02-20 11:22:53.366982", "score": "0.7019", "loss": "1.6847", "code": "id writeToParcel(Parcel dest, int s) { dest.wrS(rl); eStr; }", "n_tokens": 60, "n_pass": [168, 25, 16]}
{"time": "2021-02-20 11:23:06.588068", "score": "0.6714", "loss": "2.1293", "code": "id writeToParcel(Parcel dest, int s) { deswrS(rl); eStr; }", "n_tokens": 58, "n_pass": [190, 33, 17]}
{"time": "2021-02-20 11:23:19.886653", "score": "0.6714", "loss": "2.1293", "code": "id writeToParcel(Parcel dest, int s) {eswrS(rl); eStr; }", "n_tokens": 56, "n_pass": [216, 41, 18]}
{"time": "2021-02-20 11:23:21.219481", "score": "0.7184", "loss": "1.6732", "code": "id writeToParcel(Parcel dest, int s) {wrS(rl); eStr; }", "n_tokens": 54, "n_pass": [217, 42, 19]}
{"time": "2021-02-20 11:23:22.496948", "score": "0.6376", "loss": "2.1248", "code": "id writeToParcel(Parcel dest, int s) {S(rl); eStr; }", "n_tokens": 52, "n_pass": [218, 43, 20]}
{"time": "2021-02-20 11:23:37.718270", "score": "0.7654", "loss": "1.4951", "code": "id writeToParcel(Parcel dest, int s) {S(l); eStr; }", "n_tokens": 51, "n_pass": [293, 51, 21]}
{"time": "2021-02-20 11:23:39.008142", "score": "0.8207", "loss": "0.9539", "code": "id writeToParcel(Parcel dest, int s) {S(); eStr; }", "n_tokens": 50, "n_pass": [294, 52, 22]}
{"time": "2021-02-20 11:23:40.298234", "score": "0.7648", "loss": "1.2983", "code": "id writeToParcel(Parcel dest, int s) {S();Str; }", "n_tokens": 48, "n_pass": [296, 53, 23]}
{"time": "2021-02-20 11:23:41.584629", "score": "0.7428", "loss": "1.527", "code": "id writeToParcel(Parcel dest, int s) {S();r; }", "n_tokens": 46, "n_pass": [297, 54, 24]}
{"time": "2021-02-20 11:23:42.892622", "score": "0.8257", "loss": "0.9325", "code": "id writeToParcel(Parcel dest, int s) {S(); }", "n_tokens": 44, "n_pass": [298, 55, 25]}
{"time": "2021-02-20 11:23:44.200597", "score": "0.7952", "loss": "1.1261", "code": "d writeToParcel(Parcel dest, int s) {S(); }", "n_tokens": 43, "n_pass": [300, 56, 26]}
{"time": "2021-02-20 11:23:58.684460", "score": "0.5891", "loss": "3.1947", "code": "d writeToParcel(Parcel est, int s) {S(); }", "n_tokens": 42, "n_pass": [324, 63, 27]}
{"time": "2021-02-20 11:24:02.615238", "score": "0.6176", "loss": "2.5473", "code": "d writeToParcel(Parcel es, int s) {S(); }", "n_tokens": 41, "n_pass": [327, 66, 28]}
{"time": "2021-02-20 11:24:03.900688", "score": "0.6176", "loss": "2.5473", "code": "d writeToParcel(Parcel es,int s) {S(); }", "n_tokens": 40, "n_pass": [329, 67, 29]}
{"time": "2021-02-20 11:24:09.109581", "score": "0.6176", "loss": "2.5473", "code": "d writeToParcel(Parcel es,int s){S(); }", "n_tokens": 39, "n_pass": [336, 71, 30]}
{"time": "2021-02-20 11:24:30.326801", "score": "0.6176", "loss": "2.5473", "code": "d writeToParcel(Parcel es,int s){S();}", "n_tokens": 38, "n_pass": [377, 83, 31]}

Minimal simplified code:
d writeToParcel(Parcel es,int s){S();}

