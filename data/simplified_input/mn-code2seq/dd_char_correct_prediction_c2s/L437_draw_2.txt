
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bladecoder__bladecoder-adventure-engine/blade-engine/src/com/bladecoder/engine/model/SceneLayer_draw.java
method_name = draw
method_body = public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }
predict, score, loss = draw, 0.9103047847747803, 0.27720752358436584

Trace of simplified code(s):
{"time": "2021-02-20 13:19:57.516258", "score": "0.9103", "loss": "0.2772", "code": "public void draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 13:19:59.224444", "score": "0.9079", "loss": "0.2269", "code": "d draw(SpriteBatch spriteBatch) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 155, "n_pass": [44, 2, 2]}
{"time": "2021-02-20 13:20:00.554530", "score": "0.9041", "loss": "0.2758", "code": "d draw(SpriteBatch s) { if (!visible) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 145, "n_pass": [46, 3, 3]}
{"time": "2021-02-20 13:20:02.002399", "score": "0.917", "loss": "0.2391", "code": "d draw(SpriteBatch s) { if (!ve) return; for (BaseActor a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 140, "n_pass": [91, 4, 4]}
{"time": "2021-02-20 13:20:03.304925", "score": "0.9168", "loss": "0.2586", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : actors) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 135, "n_pass": [95, 5, 5]}
{"time": "2021-02-20 13:20:04.614934", "score": "0.9288", "loss": "0.2012", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof SpriteActor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 130, "n_pass": [97, 6, 6]}
{"time": "2021-02-20 13:20:05.971624", "score": "0.8585", "loss": "0.5415", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((SpriteActor) a).draw(spriteBatch); } }", "n_tokens": 125, "n_pass": [103, 7, 7]}
{"time": "2021-02-20 13:20:07.327086", "score": "0.8013", "loss": "0.8873", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(spriteBatch); } }", "n_tokens": 120, "n_pass": [106, 8, 8]}
{"time": "2021-02-20 13:20:08.635983", "score": "0.8437", "loss": "0.4855", "code": "d draw(SpriteBatch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 114, "n_pass": [110, 9, 9]}
{"time": "2021-02-20 13:20:10.300270", "score": "0.7197", "loss": "1.6537", "code": "d draw(Sprtch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 109, "n_pass": [114, 10, 10]}
{"time": "2021-02-20 13:20:12.029660", "score": "0.7197", "loss": "1.6537", "code": "d draw(Stch s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 107, "n_pass": [178, 11, 11]}
{"time": "2021-02-20 13:20:13.336815", "score": "0.7403", "loss": "1.0687", "code": "d draw(Sh s) { if (!ve) return; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 105, "n_pass": [179, 12, 12]}
{"time": "2021-02-20 13:20:14.656688", "score": "0.5298", "loss": "1.5585", "code": "d draw(Sh s) { if (!ve) turn; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 103, "n_pass": [188, 13, 13]}
{"time": "2021-02-20 13:20:15.977210", "score": "0.5013", "loss": "2.0148", "code": "d draw(Sh s) { if (!ve) rn; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 101, "n_pass": [189, 14, 14]}
{"time": "2021-02-20 13:20:17.294862", "score": "0.7403", "loss": "1.0687", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sprtor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 99, "n_pass": [190, 15, 15]}
{"time": "2021-02-20 13:20:18.624858", "score": "0.7703", "loss": "0.685", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((Sprtor) a).draw(sprit); } }", "n_tokens": 96, "n_pass": [204, 16, 16]}
{"time": "2021-02-20 13:20:19.944751", "score": "0.7923", "loss": "0.5913", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sprit); } }", "n_tokens": 93, "n_pass": [207, 17, 17]}
{"time": "2021-02-20 13:20:22.581262", "score": "0.8771", "loss": "0.2713", "code": "d draw(Sh s) { if (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 90, "n_pass": [213, 19, 18]}
{"time": "2021-02-20 13:20:25.004180", "score": "0.8892", "loss": "0.2101", "code": "d draw(Sh s) {f (!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 88, "n_pass": [223, 20, 19]}
{"time": "2021-02-20 13:20:26.320157", "score": "0.8348", "loss": "0.4153", "code": "d draw(Sh s) {(!ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 86, "n_pass": [224, 21, 20]}
{"time": "2021-02-20 13:20:34.064740", "score": "0.8076", "loss": "0.5355", "code": "d draw(Sh s) {(ve) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 85, "n_pass": [322, 23, 21]}
{"time": "2021-02-20 13:20:35.394590", "score": "0.7997", "loss": "0.5319", "code": "d draw(Sh s) {(e) ; for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 84, "n_pass": [323, 24, 22]}
{"time": "2021-02-20 13:20:36.738692", "score": "0.7997", "loss": "0.5319", "code": "d draw(Sh s) {(e); for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 83, "n_pass": [326, 25, 23]}
{"time": "2021-02-20 13:20:38.064044", "score": "0.7997", "loss": "0.5319", "code": "d draw(Sh s) {(e);for (Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 82, "n_pass": [328, 26, 24]}
{"time": "2021-02-20 13:20:39.390206", "score": "0.7997", "loss": "0.5319", "code": "d draw(Sh s) {(e);for(Base a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 81, "n_pass": [332, 27, 25]}
{"time": "2021-02-20 13:20:40.716802", "score": "0.7481", "loss": "0.7974", "code": "d draw(Sh s) {(e);for(ase a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 80, "n_pass": [334, 28, 26]}
{"time": "2021-02-20 13:20:42.040254", "score": "0.7889", "loss": "0.6395", "code": "d draw(Sh s) {(e);for(se a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 79, "n_pass": [335, 29, 27]}
{"time": "2021-02-20 13:20:43.366811", "score": "0.7668", "loss": "0.7093", "code": "d draw(Sh s) {(e);for(e a : s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 78, "n_pass": [336, 30, 28]}
{"time": "2021-02-20 13:20:44.690353", "score": "0.7668", "loss": "0.7093", "code": "d draw(Sh s) {(e);for(e a: s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 77, "n_pass": [340, 31, 29]}
{"time": "2021-02-20 13:20:46.014785", "score": "0.7668", "loss": "0.7093", "code": "d draw(Sh s) {(e);for(e a:s) { if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 76, "n_pass": [342, 32, 30]}
{"time": "2021-02-20 13:20:47.330396", "score": "0.7668", "loss": "0.7093", "code": "d draw(Sh s) {(e);for(e a:s){ if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 75, "n_pass": [345, 33, 31]}
{"time": "2021-02-20 13:20:48.676020", "score": "0.7668", "loss": "0.7093", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof Sor) ((tor) a).draw(sp); } }", "n_tokens": 74, "n_pass": [347, 34, 32]}
{"time": "2021-02-20 13:20:50.006542", "score": "0.7835", "loss": "0.7303", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((tor) a).draw(sp); } }", "n_tokens": 72, "n_pass": [357, 35, 33]}
{"time": "2021-02-20 13:20:51.339052", "score": "0.7443", "loss": "0.8915", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(sp); } }", "n_tokens": 70, "n_pass": [361, 36, 34]}
{"time": "2021-02-20 13:20:54.018121", "score": "0.705", "loss": "0.8986", "code": "d draw(Sh s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 68, "n_pass": [367, 38, 35]}
{"time": "2021-02-20 13:20:57.560727", "score": "0.6725", "loss": "1.1447", "code": "d draw(h s) {(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 67, "n_pass": [378, 39, 36]}
{"time": "2021-02-20 13:20:58.883138", "score": "0.6725", "loss": "1.1447", "code": "d draw(h s){(e);for(e a:s){if (a instanceof r) ((t) a).draw(); } }", "n_tokens": 66, "n_pass": [383, 40, 37]}
{"time": "2021-02-20 13:21:06.403705", "score": "0.6725", "loss": "1.1447", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r) ((t) a).draw(); } }", "n_tokens": 65, "n_pass": [470, 42, 38]}
{"time": "2021-02-20 13:21:07.757308", "score": "0.6725", "loss": "1.1447", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t) a).draw(); } }", "n_tokens": 64, "n_pass": [487, 43, 39]}
{"time": "2021-02-20 13:21:09.107086", "score": "0.6725", "loss": "1.1447", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)a).draw(); } }", "n_tokens": 63, "n_pass": [492, 44, 40]}
{"time": "2021-02-20 13:21:10.422788", "score": "0.6175", "loss": "1.3471", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw(); } }", "n_tokens": 62, "n_pass": [493, 45, 41]}
{"time": "2021-02-20 13:21:17.075563", "score": "0.6175", "loss": "1.3471", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();} }", "n_tokens": 61, "n_pass": [503, 50, 42]}
{"time": "2021-02-20 13:21:18.395507", "score": "0.6175", "loss": "1.3471", "code": "d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();}}", "n_tokens": 60, "n_pass": [505, 51, 43]}

Minimal simplified code:
d draw(h s){(e);for(e a:s){if(a instanceof r)((t)).draw();}}

