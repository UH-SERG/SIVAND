
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.core/core/src/test/java/org/apache/mina/util/IoFilterImpl_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (o == null) { return false; } if (!(o instanceof IoFilterImpl)) { return false; } return this.c == ((IoFilterImpl) o).c; }
predict, score, loss = equals, 0.9988871216773987, 0.0014815621543675661

Trace of simplified code(s):
{"time": "2021-02-20 03:35:52.960065", "score": "0.9989", "loss": "0.0015", "code": "@Override public boolean equals(Object o) { if (o == null) { return false; } if (!(o instanceof IoFilterImpl)) { return false; } return this.c == ((IoFilterImpl) o).c; }", "n_tokens": 169, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 03:35:54.574245", "score": "0.9956", "loss": "0.0087", "code": "ean equals(Object o) { if (o == null) { return false; } if (!(o instanceof IoFilterImpl)) { return false; } return this.c == ((IoFilterImpl) o).c; }", "n_tokens": 148, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 03:35:55.828341", "score": "0.986", "loss": "0.0273", "code": "ean equals(Object o) { if (o == null) { return false; } if (!(ompl)) { return false; } return this.c == ((IoFilterImpl) o).c; }", "n_tokens": 127, "n_pass": [23, 3, 3]}
{"time": "2021-02-20 03:35:57.412801", "score": "0.9599", "loss": "0.1013", "code": "ean equals(Object o) { if (o == null) { return false; } if (!(ompl)) { r; } return this.c == ((IoFilterImpl) o).c; }", "n_tokens": 116, "n_pass": [43, 4, 4]}
{"time": "2021-02-20 03:35:58.687729", "score": "0.4985", "loss": "1.4077", "code": "ean equals(Object o) { if (o == null) { se; } if (!(ompl)) { r; } return this.c == ((IoFilterImpl) o).c; }", "n_tokens": 106, "n_pass": [52, 5, 5]}
{"time": "2021-02-20 03:36:01.593262", "score": "0.5069", "loss": "1.3525", "code": "ean equals(Object o) { if (o == null) { se; } if (!(ompl)) { r; } return this.c == ((IoFmpl) o).c; }", "n_tokens": 100, "n_pass": [92, 7, 6]}
{"time": "2021-02-20 03:36:03.582353", "score": "0.4123", "loss": "1.5444", "code": "ean equals(Object o) { if (o =l) { se; } if (!(ompl)) { r; } return this.c == ((IoFmpl) o).c; }", "n_tokens": 95, "n_pass": [101, 8, 7]}
{"time": "2021-02-20 03:36:07.213057", "score": "0.6395", "loss": "0.8278", "code": "ean equals(Object o) { if (o =l) {  } if (!(ompl)) { r; } return this.c == ((IoFmpl) o).c; }", "n_tokens": 92, "n_pass": [160, 10, 8]}
{"time": "2021-02-20 03:36:08.451599", "score": "0.6724", "loss": "0.7091", "code": "ean equals(Object o) { if (o =l) {  } if (!(l)) { r; } return this.c == ((IoFmpl) o).c; }", "n_tokens": 89, "n_pass": [164, 11, 9]}
{"time": "2021-02-20 03:36:09.715531", "score": "0.8123", "loss": "0.366", "code": "ean equals(Object o) { if (o =l) {  } if (!(l)) { } return this.c == ((IoFmpl) o).c; }", "n_tokens": 86, "n_pass": [167, 12, 10]}
{"time": "2021-02-20 03:36:11.326219", "score": "0.5203", "loss": "0.8756", "code": "ean equals(Object o) { if (o =l) {  } if (!(l)) { } return s.c == ((IoFmpl) o).c; }", "n_tokens": 83, "n_pass": [171, 13, 11]}
{"time": "2021-02-20 03:36:15.082519", "score": "0.4973", "loss": "0.8962", "code": "ean equals(Object o) { if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 80, "n_pass": [176, 16, 12]}
{"time": "2021-02-20 03:36:16.328475", "score": "0.6632", "loss": "0.5826", "code": "n equals(Object o) { if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 78, "n_pass": [180, 17, 13]}
{"time": "2021-02-20 03:36:32.995888", "score": "0.5823", "loss": "0.8241", "code": "n equals(Objct o) { if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 77, "n_pass": [283, 24, 14]}
{"time": "2021-02-20 03:36:34.254854", "score": "0.4812", "loss": "1.0043", "code": "n equals(Objc o) { if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 76, "n_pass": [284, 25, 15]}
{"time": "2021-02-20 03:36:35.499308", "score": "0.4812", "loss": "1.0043", "code": "n equals(Objc o){ if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 75, "n_pass": [288, 26, 16]}
{"time": "2021-02-20 03:36:36.758603", "score": "0.4812", "loss": "1.0043", "code": "n equals(Objc o){if (o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 74, "n_pass": [290, 27, 17]}
{"time": "2021-02-20 03:36:38.027689", "score": "0.4812", "loss": "1.0043", "code": "n equals(Objc o){if(o =l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 73, "n_pass": [293, 28, 18]}
{"time": "2021-02-20 03:36:39.272462", "score": "0.4812", "loss": "1.0043", "code": "n equals(Objc o){if(o=l) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 72, "n_pass": [296, 29, 19]}
{"time": "2021-02-20 03:36:40.542103", "score": "0.4852", "loss": "1.1546", "code": "n equals(Objc o){if(ol) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 71, "n_pass": [297, 30, 20]}
{"time": "2021-02-20 03:36:41.784053", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o) {  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 70, "n_pass": [298, 31, 21]}
{"time": "2021-02-20 03:36:43.046001", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o){  } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 69, "n_pass": [300, 32, 22]}
{"time": "2021-02-20 03:36:44.284567", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o){ } if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 68, "n_pass": [302, 33, 23]}
{"time": "2021-02-20 03:36:45.522585", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o){} if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 67, "n_pass": [303, 34, 24]}
{"time": "2021-02-20 03:36:46.785729", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o){}if (!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 66, "n_pass": [305, 35, 25]}
{"time": "2021-02-20 03:36:48.053018", "score": "0.6223", "loss": "0.7044", "code": "n equals(Objc o){if(o){}if(!(l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 65, "n_pass": [308, 36, 26]}
{"time": "2021-02-20 03:36:49.306517", "score": "0.643", "loss": "0.684", "code": "n equals(Objc o){if(o){}if((l)) { } return s.c == ((IoF) o).c; }", "n_tokens": 64, "n_pass": [310, 37, 27]}
{"time": "2021-02-20 03:36:50.540735", "score": "0.6344", "loss": "0.737", "code": "n equals(Objc o){if(o){}if((l)) { } return s == ((IoF) o).c; }", "n_tokens": 62, "n_pass": [320, 38, 28]}
{"time": "2021-02-20 03:36:54.259123", "score": "0.6297", "loss": "0.705", "code": "n equals(Objc o){if(o){}if((l)) { } return s == ((F) o).c; }", "n_tokens": 60, "n_pass": [324, 41, 29]}
{"time": "2021-02-20 03:36:55.498184", "score": "0.2807", "loss": "1.841", "code": "n equals(Objc o){if(o){}if((l)) { } return s == ((F)).c; }", "n_tokens": 58, "n_pass": [326, 42, 30]}
{"time": "2021-02-20 03:37:03.292327", "score": "0.2383", "loss": "1.931", "code": "n equals(Obj o){if(o){}if((l)) { } return s == ((F)).c; }", "n_tokens": 57, "n_pass": [342, 46, 31]}
{"time": "2021-02-20 03:37:12.269760", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)) { } return s == ((F)).c; }", "n_tokens": 56, "n_pass": [384, 51, 32]}
{"time": "2021-02-20 03:37:23.738090", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){ } return s == ((F)).c; }", "n_tokens": 55, "n_pass": [459, 56, 33]}
{"time": "2021-02-20 03:37:24.964249", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){} return s == ((F)).c; }", "n_tokens": 54, "n_pass": [461, 57, 34]}
{"time": "2021-02-20 03:37:26.201086", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){}return s == ((F)).c; }", "n_tokens": 53, "n_pass": [463, 58, 35]}
{"time": "2021-02-20 03:37:27.773132", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){}return s== ((F)).c; }", "n_tokens": 52, "n_pass": [472, 59, 36]}
{"time": "2021-02-20 03:37:31.457859", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){}return s==((F)).c; }", "n_tokens": 51, "n_pass": [475, 62, 37]}
{"time": "2021-02-20 03:37:32.686377", "score": "0.2081", "loss": "2.2549", "code": "n equals(Ob o){if(o){}if((l)){}return s==((F)).c;}", "n_tokens": 50, "n_pass": [484, 63, 38]}

Minimal simplified code:
n equals(Ob o){if(o){}if((l)){}return s==((F)).c;}

