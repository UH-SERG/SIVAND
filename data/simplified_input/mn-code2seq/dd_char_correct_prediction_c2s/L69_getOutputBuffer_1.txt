
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qqchenjian318__VideoEditor-For-Android/app/src/main/java/com/example/cj/videoeditor/record/video/VideoEncoderCore_getOutputBuffer.java
method_name = getOutputBuffer
method_body = private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { return codec.getOutputBuffer(index); } else { return codec.getOutputBuffers()[index]; } }
predict, score, loss = getOutputBuffer, 0.9616789221763611, 0.21408838033676147

Trace of simplified code(s):
{"time": "2021-02-19 12:40:46.380681", "score": "0.9617", "loss": "0.2141", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { return codec.getOutputBuffer(index); } else { return codec.getOutputBuffers()[index]; } }", "n_tokens": 216, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 12:40:48.113225", "score": "0.9434", "loss": "0.2887", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERSI_CODES.LOLLIPOP) { return codec.getOutputBuffer(index); } else { return codec.getOutputBuffers()[index]; } }", "n_tokens": 189, "n_pass": [23, 2, 2]}
{"time": "2021-02-19 12:40:49.445202", "score": "0.8421", "loss": "0.8018", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERSI_CODES.LOLLIPOP) { return c; } else { return codec.getOutputBuffers()[index]; } }", "n_tokens": 162, "n_pass": [25, 3, 3]}
{"time": "2021-02-19 12:40:50.786668", "score": "0.7843", "loss": "1.3235", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERSI_CODES.LOLLIPOP) { return cOutputBuffers()[index]; } }", "n_tokens": 135, "n_pass": [26, 4, 4]}
{"time": "2021-02-19 12:40:54.169194", "score": "0.7112", "loss": "1.8083", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERPOP) { return cOutputBuffers()[index]; } }", "n_tokens": 121, "n_pass": [50, 6, 5]}
{"time": "2021-02-19 12:40:57.183021", "score": "0.4255", "loss": "4.2974", "code": "private ByteBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERPOP) { cOutputBuffers()[index]; } }", "n_tokens": 114, "n_pass": [79, 8, 6]}
{"time": "2021-02-19 12:41:01.224724", "score": "0.4044", "loss": "4.4644", "code": "privatBuffer getOutputBuffer(MediaCodec codec, int index) { if (Build.VERPOP) { cOutputBuffers()[index]; } }", "n_tokens": 108, "n_pass": [85, 11, 7]}
{"time": "2021-02-19 12:41:04.587437", "score": "0.5223", "loss": "3.7275", "code": "privatBuffer getOutputBuffer(Mec codec, int index) { if (Build.VERPOP) { cOutputBuffers()[index]; } }", "n_tokens": 101, "n_pass": [90, 13, 8]}
{"time": "2021-02-19 12:41:05.904686", "score": "0.6191", "loss": "2.9853", "code": "privatBuffer getOutputBuffer(Mec codecndex) { if (Build.VERPOP) { cOutputBuffers()[index]; } }", "n_tokens": 94, "n_pass": [92, 14, 9]}
{"time": "2021-02-19 12:41:07.219538", "score": "0.6563", "loss": "3.0681", "code": "privatBuffer getOutputBuffer(Mec codecndex) { if (BuPOP) { cOutputBuffers()[index]; } }", "n_tokens": 87, "n_pass": [95, 15, 10]}
{"time": "2021-02-19 12:41:11.150222", "score": "0.703", "loss": "2.7245", "code": "Buffer getOutputBuffer(Mec codecndex) { if (BuPOP) { cOutputBuffers()[index]; } }", "n_tokens": 81, "n_pass": [101, 18, 11]}
{"time": "2021-02-19 12:41:20.664193", "score": "0.703", "loss": "2.7245", "code": "Buffer getOutputBuffer(Mec ecndex) { if (BuPOP) { cOutputBuffers()[index]; } }", "n_tokens": 78, "n_pass": [147, 23, 12]}
{"time": "2021-02-19 12:41:21.975534", "score": "0.6947", "loss": "2.8009", "code": "Buffer getOutputBuffer(Mec dex) { if (BuPOP) { cOutputBuffers()[index]; } }", "n_tokens": 75, "n_pass": [148, 24, 13]}
{"time": "2021-02-19 12:41:23.318768", "score": "0.6792", "loss": "2.3883", "code": "Buffer getOutputBuffer(Mec dex) { if (B) { cOutputBuffers()[index]; } }", "n_tokens": 71, "n_pass": [153, 25, 14]}
{"time": "2021-02-19 12:41:43.957041", "score": "0.8351", "loss": "1.107", "code": "Buffer getOutputBuffer(Mec dex) { if (B) { cOutputBuffers[index]; } }", "n_tokens": 69, "n_pass": [226, 39, 15]}
{"time": "2021-02-19 12:41:45.274904", "score": "0.8624", "loss": "0.92", "code": "Buffer getOutputBuffer(Mec dex) { if (B) { cOutputBuffers[iex]; } }", "n_tokens": 67, "n_pass": [228, 40, 16]}
{"time": "2021-02-19 12:41:46.623561", "score": "0.8547", "loss": "0.9378", "code": "Buffer getOutputBuffer(Mec dex) { if (B) { cOutputBuffers[i]; } }", "n_tokens": 65, "n_pass": [229, 41, 17]}
{"time": "2021-02-19 12:41:59.925601", "score": "0.8378", "loss": "0.9684", "code": "Buffer getOutputBuffer(c dex) { if (B) { cOutputBuffers[i]; } }", "n_tokens": 63, "n_pass": [251, 48, 18]}
{"time": "2021-02-19 12:42:01.237593", "score": "0.7994", "loss": "1.2241", "code": "Buffer getOutputBuffer(c x) { if (B) { cOutputBuffers[i]; } }", "n_tokens": 61, "n_pass": [253, 49, 19]}
{"time": "2021-02-19 12:42:26.710861", "score": "0.7994", "loss": "1.2241", "code": "Buffer getOutputBuffer(c x) { if(B) { cOutputBuffers[i]; } }", "n_tokens": 60, "n_pass": [340, 63, 20]}
{"time": "2021-02-19 12:42:28.021815", "score": "0.7994", "loss": "1.2241", "code": "Buffer getOutputBuffer(c x) { if(B){ cOutputBuffers[i]; } }", "n_tokens": 59, "n_pass": [344, 64, 21]}
{"time": "2021-02-19 12:42:29.362562", "score": "0.7994", "loss": "1.2241", "code": "Buffer getOutputBuffer(c x) { if(B){cOutputBuffers[i]; } }", "n_tokens": 58, "n_pass": [346, 65, 22]}
{"time": "2021-02-19 12:42:30.676925", "score": "0.8023", "loss": "1.1695", "code": "Buffer getOutputBuffer(c x) { if(B){OutputBuffers[i]; } }", "n_tokens": 57, "n_pass": [347, 66, 23]}
{"time": "2021-02-19 12:42:47.810136", "score": "0.5848", "loss": "2.5044", "code": "Buffer getOutputBuffer(c x) { if(B){OutputBuffer[i]; } }", "n_tokens": 56, "n_pass": [360, 79, 24]}
{"time": "2021-02-19 12:42:49.115968", "score": "0.5848", "loss": "2.5044", "code": "Buffer getOutputBuffer(c x) { if(B){OutputBuffer[i];} }", "n_tokens": 55, "n_pass": [365, 80, 25]}
{"time": "2021-02-19 12:42:50.444845", "score": "0.5848", "loss": "2.5044", "code": "Buffer getOutputBuffer(c x) { if(B){OutputBuffer[i];}}", "n_tokens": 54, "n_pass": [367, 81, 26]}
{"time": "2021-02-19 12:43:05.509784", "score": "0.5848", "loss": "2.5044", "code": "Buffer getOutputBuffer(c x){ if(B){OutputBuffer[i];}}", "n_tokens": 53, "n_pass": [396, 88, 27]}
{"time": "2021-02-19 12:43:06.838184", "score": "0.5848", "loss": "2.5044", "code": "Buffer getOutputBuffer(c x){if(B){OutputBuffer[i];}}", "n_tokens": 52, "n_pass": [398, 89, 28]}

Minimal simplified code:
Buffer getOutputBuffer(c x){if(B){OutputBuffer[i];}}

