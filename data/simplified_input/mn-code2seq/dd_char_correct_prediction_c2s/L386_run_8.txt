
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/daemon/WriterTask_run.java
method_name = run
method_body = @Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format("The thread %s has generated an event", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }
predict, score, loss = run, 0.9712985157966614, 0.05293270945549011

Trace of simplified code(s):
{"time": "2021-02-20 09:46:23.272900", "score": "0.9712", "loss": "0.0563", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Event(); event.setDate(new Date()); event.setEvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 336, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 09:46:24.652241", "score": "0.9737", "loss": "0.0525", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Evenvent(String.format(\"The thread %s has generated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 294, "n_pass": [22, 2, 2]}
{"time": "2021-02-20 09:46:26.025736", "score": "0.9714", "loss": "0.0559", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Evenvent(String.format(\"Trated an event\", Thread.currentThread().getId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 273, "n_pass": [44, 3, 3]}
{"time": "2021-02-20 09:46:27.381597", "score": "0.9652", "loss": "0.0674", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Evenvent(String.format(\"Trated an event\", ThretId())); deque.addFirst(event); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 252, "n_pass": [46, 4, 4]}
{"time": "2021-02-20 09:46:28.722752", "score": "0.9701", "loss": "0.0586", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event event = new Evenvent(String.format(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 231, "n_pass": [49, 5, 5]}
{"time": "2021-02-20 09:46:30.423573", "score": "0.9797", "loss": "0.037", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event(String.format(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 210, "n_pass": [56, 6, 6]}
{"time": "2021-02-20 09:46:32.162772", "score": "0.9787", "loss": "0.0367", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event(Stt(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (InterruptedException e) { e.printStackTrace(); } } }", "n_tokens": 200, "n_pass": [88, 7, 7]}
{"time": "2021-02-20 09:46:33.506987", "score": "0.9518", "loss": "0.0894", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event(Stt(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.printStackTrace(); } } }", "n_tokens": 189, "n_pass": [97, 8, 8]}
{"time": "2021-02-20 09:46:34.869212", "score": "0.9476", "loss": "0.098", "code": "@Override public void run() { for (int i = 1; i < 100; i++) { Event(Stt(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 178, "n_pass": [99, 9, 9]}
{"time": "2021-02-20 09:46:36.204291", "score": "0.4339", "loss": "1.2961", "code": "public void run() { for (int i = 1; i < 100; i++) { Event(Stt(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 168, "n_pass": [101, 10, 10]}
{"time": "2021-02-20 09:46:40.602197", "score": "0.5417", "loss": "0.9929", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trated an event\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 163, "n_pass": [157, 13, 11]}
{"time": "2021-02-20 09:46:41.961707", "score": "0.5332", "loss": "1.0012", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Tran event\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 158, "n_pass": [163, 14, 12]}
{"time": "2021-02-20 09:46:43.311437", "score": "0.6545", "loss": "0.691", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\", ThretId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 153, "n_pass": [164, 15, 13]}
{"time": "2021-02-20 09:46:44.642708", "score": "0.7273", "loss": "0.5361", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); deque.addFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 148, "n_pass": [166, 16, 14]}
{"time": "2021-02-20 09:46:45.994242", "score": "0.4432", "loss": "1.2253", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); daddFirst(event); try { Time; } catch (Interrupn e) { e.prce(); } } }", "n_tokens": 143, "n_pass": [169, 17, 15]}
{"time": "2021-02-20 09:46:48.669374", "score": "0.6697", "loss": "0.784", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); daddFirst(event); try { Time; } catch (upn e) { e.prce(); } } }", "n_tokens": 137, "n_pass": [177, 19, 16]}
{"time": "2021-02-20 09:46:51.711184", "score": "0.423", "loss": "1.1941", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); drst(event); try { Time; } catch (upn e) { e.prce(); } } }", "n_tokens": 132, "n_pass": [197, 21, 17]}
{"time": "2021-02-20 09:46:54.766964", "score": "0.6357", "loss": "0.7263", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); d(event); try { Time; } catch (upn e) { e.prce(); } } }", "n_tokens": 129, "n_pass": [274, 23, 18]}
{"time": "2021-02-20 09:46:56.115519", "score": "0.6211", "loss": "0.771", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); d(ev); try { Time; } catch (upn e) { e.prce(); } } }", "n_tokens": 126, "n_pass": [276, 24, 19]}
{"time": "2021-02-20 09:46:57.478901", "score": "0.5329", "loss": "0.9741", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); d(ev); try { e; } catch (upn e) { e.prce(); } } }", "n_tokens": 123, "n_pass": [280, 25, 20]}
{"time": "2021-02-20 09:46:58.804489", "score": "0.4942", "loss": "1.0233", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); d(ev); try { } catch (upn e) { e.prce(); } } }", "n_tokens": 120, "n_pass": [281, 26, 21]}
{"time": "2021-02-20 09:47:00.162795", "score": "0.4355", "loss": "1.1235", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Trent\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 117, "n_pass": [288, 27, 22]}
{"time": "2021-02-20 09:47:07.548015", "score": "0.5691", "loss": "0.8651", "code": "public void run() { for (int i = 1;100; i++) { Event(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 114, "n_pass": [319, 32, 23]}
{"time": "2021-02-20 09:47:12.301627", "score": "0.4821", "loss": "1.0758", "code": "public void run() { for (i i = 1;100; i++) { Event(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 112, "n_pass": [351, 35, 24]}
{"time": "2021-02-20 09:47:13.626300", "score": "0.7661", "loss": "0.4548", "code": "public void run() { for (i = 1;100; i++) { Event(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 110, "n_pass": [352, 36, 25]}
{"time": "2021-02-20 09:47:14.986681", "score": "0.5951", "loss": "0.8209", "code": "public void run() { for (i = 1;100; i++) { Et(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 107, "n_pass": [360, 37, 26]}
{"time": "2021-02-20 09:47:24.078576", "score": "0.5951", "loss": "0.8209", "code": "public void run() { for (i = 1;100; i++){ Et(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 106, "n_pass": [484, 40, 27]}
{"time": "2021-02-20 09:47:25.423386", "score": "0.5951", "loss": "0.8209", "code": "public void run() { for (i = 1;100; i++){Et(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 105, "n_pass": [486, 41, 28]}
{"time": "2021-02-20 09:47:26.780358", "score": "0.6219", "loss": "0.7273", "code": "public void run() { for (i = 1;100; i++){t(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 104, "n_pass": [487, 42, 29]}
{"time": "2021-02-20 09:47:28.099950", "score": "0.6616", "loss": "0.6013", "code": "public void run() { for (i = 1;100; i++){(Stt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 103, "n_pass": [488, 43, 30]}
{"time": "2021-02-20 09:47:29.420152", "score": "0.5575", "loss": "0.8466", "code": "public void run() { for (i = 1;100; i++){(tt(\"Tr\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 102, "n_pass": [490, 44, 31]}
{"time": "2021-02-20 09:47:33.386074", "score": "0.4997", "loss": "0.928", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",tId())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 101, "n_pass": [495, 47, 32]}
{"time": "2021-02-20 09:47:36.025637", "score": "0.6003", "loss": "0.7309", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",Id())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 100, "n_pass": [499, 49, 33]}
{"time": "2021-02-20 09:47:37.342889", "score": "0.6035", "loss": "0.7272", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",d())); d(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 99, "n_pass": [500, 50, 34]}
{"time": "2021-02-20 09:47:38.671950", "score": "0.6633", "loss": "0.6274", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (upn e) { rce(); } } }", "n_tokens": 97, "n_pass": [504, 51, 35]}
{"time": "2021-02-20 09:47:40.003545", "score": "0.4352", "loss": "1.1128", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { rce(); } } }", "n_tokens": 95, "n_pass": [516, 52, 36]}
{"time": "2021-02-20 09:47:41.321157", "score": "0.4351", "loss": "1.1161", "code": "public void run() { for (i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 93, "n_pass": [520, 53, 37]}
{"time": "2021-02-20 09:47:50.753591", "score": "0.4351", "loss": "1.1161", "code": "public void run(){ for (i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 92, "n_pass": [543, 59, 38]}
{"time": "2021-02-20 09:47:52.067735", "score": "0.4351", "loss": "1.1161", "code": "public void run(){for (i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 91, "n_pass": [545, 60, 39]}
{"time": "2021-02-20 09:47:53.402802", "score": "0.4351", "loss": "1.1161", "code": "public void run(){for(i = 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 90, "n_pass": [549, 61, 40]}
{"time": "2021-02-20 09:47:54.719284", "score": "0.4351", "loss": "1.1161", "code": "public void run(){for(i= 1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 89, "n_pass": [552, 62, 41]}
{"time": "2021-02-20 09:47:56.032613", "score": "0.4351", "loss": "1.1161", "code": "public void run(){for(i=1;100; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 88, "n_pass": [554, 63, 42]}
{"time": "2021-02-20 09:47:57.347254", "score": "0.4351", "loss": "1.1161", "code": "public void run(){for(i=1;00; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 87, "n_pass": [557, 64, 43]}
{"time": "2021-02-20 09:47:58.684187", "score": "0.4129", "loss": "1.1726", "code": "public void run(){for(i=1;0; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 86, "n_pass": [558, 65, 44]}
{"time": "2021-02-20 09:48:00.026139", "score": "0.5173", "loss": "0.9207", "code": "public void run(){for(i=1;; i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 85, "n_pass": [559, 66, 45]}
{"time": "2021-02-20 09:48:01.343142", "score": "0.5173", "loss": "0.9207", "code": "public void run(){for(i=1;;i++){(tt(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 84, "n_pass": [561, 67, 46]}
{"time": "2021-02-20 09:48:02.662192", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev); try { } catch (u e) { e(); } } }", "n_tokens": 83, "n_pass": [568, 68, 47]}
{"time": "2021-02-20 09:48:22.027964", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try { } catch (u e) { e(); } } }", "n_tokens": 82, "n_pass": [680, 78, 48]}
{"time": "2021-02-20 09:48:23.336850", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{ } catch (u e) { e(); } } }", "n_tokens": 81, "n_pass": [684, 79, 49]}
{"time": "2021-02-20 09:48:24.664677", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{} catch (u e) { e(); } } }", "n_tokens": 80, "n_pass": [686, 80, 50]}
{"time": "2021-02-20 09:48:25.978027", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch (u e) { e(); } } }", "n_tokens": 79, "n_pass": [688, 81, 51]}
{"time": "2021-02-20 09:48:27.293713", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e) { e(); } } }", "n_tokens": 78, "n_pass": [694, 82, 52]}
{"time": "2021-02-20 09:48:28.640142", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e){ e(); } } }", "n_tokens": 77, "n_pass": [700, 83, 53]}
{"time": "2021-02-20 09:48:29.953771", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e){e(); } } }", "n_tokens": 76, "n_pass": [702, 84, 54]}
{"time": "2021-02-20 09:48:31.293428", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e){e();} } }", "n_tokens": 75, "n_pass": [707, 85, 55]}
{"time": "2021-02-20 09:48:32.617050", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e){e();}} }", "n_tokens": 74, "n_pass": [709, 86, 56]}
{"time": "2021-02-20 09:48:33.950580", "score": "0.3766", "loss": "1.2092", "code": "public void run(){for(i=1;;i++){(t(\"r\",d()));(ev);try{}catch(u e){e();}}}", "n_tokens": 73, "n_pass": [711, 87, 57]}

Minimal simplified code:
public void run(){for(i=1;;i++){(t("r",d()));(ev);try{}catch(u e){e();}}}

