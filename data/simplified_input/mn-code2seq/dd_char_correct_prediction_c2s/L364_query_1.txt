
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S11.03-Exercise-DetailLayoutAndDataBinding/app/src/main/java/com/example/android/sunshine/data/WeatherProvider_query.java
method_name = query
method_body = @Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + " = ? ", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException("Unknown uri: " + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }
predict, score, loss = query, 0.6911525130271912, 0.7356939911842346

Trace of simplified code(s):
{"time": "2021-02-20 07:59:18.555989", "score": "0.7011", "loss": "0.788", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + \" = ? \", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 888, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 07:59:19.944905", "score": "0.8823", "loss": "0.2598", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, Wion, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 666, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 07:59:21.371306", "score": "0.681", "loss": "0.7769", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 638, "n_pass": [73, 3, 3]}
{"time": "2021-02-20 07:59:22.764562", "score": "0.6473", "loss": "0.8343", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 610, "n_pass": [75, 4, 4]}
{"time": "2021-02-20 07:59:24.239289", "score": "0.6318", "loss": "0.7322", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 582, "n_pass": [78, 5, 5]}
{"time": "2021-02-20 07:59:25.982974", "score": "0.5546", "loss": "1.1354", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,rgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 555, "n_pass": [83, 6, 6]}
{"time": "2021-02-20 07:59:28.816580", "score": "0.6418", "loss": "0.7275", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherErgs, null, null, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 527, "n_pass": [95, 8, 7]}
{"time": "2021-02-20 07:59:32.034738", "score": "0.8874", "loss": "0.2186", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } default: throw newon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 513, "n_pass": [153, 10, 8]}
{"time": "2021-02-20 07:59:33.432370", "score": "0.8027", "loss": "0.3615", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); } cursor.setNotificationUri(ger(), uri); return cursor; }", "n_tokens": 499, "n_pass": [155, 11, 9]}
{"time": "2021-02-20 07:59:34.818411", "score": "0.8029", "loss": "0.3479", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 485, "n_pass": [158, 12, 10]}
{"time": "2021-02-20 07:59:36.589947", "score": "0.5855", "loss": "0.8373", "code": "@Override public Cursor query(@NonNull ng[] projection, String selecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 472, "n_pass": [165, 13, 11]}
{"time": "2021-02-20 07:59:37.956349", "score": "0.6426", "loss": "0.709", "code": "@Override public Cursor query(@NonNull ng[] projectiecs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 458, "n_pass": [167, 14, 12]}
{"time": "2021-02-20 07:59:39.319958", "score": "0.3359", "loss": "1.6918", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 444, "n_pass": [168, 15, 13]}
{"time": "2021-02-20 07:59:40.746589", "score": "0.5868", "loss": "0.8813", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 430, "n_pass": [174, 16, 14]}
{"time": "2021-02-20 07:59:46.215028", "score": "0.5826", "loss": "0.9169", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { noeString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 416, "n_pass": [183, 20, 15]}
{"time": "2021-02-20 07:59:47.626578", "score": "0.5421", "loss": "1.0651", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { noeString }; curper.getReadableDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 402, "n_pass": [185, 21, 16]}
{"time": "2021-02-20 07:59:48.984757", "score": "0.3689", "loss": "1.4982", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { noeString }; cureDatabase().query(WeatherContract.WeatherEl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 388, "n_pass": [186, 22, 17]}
{"time": "2021-02-20 07:59:51.778609", "score": "0.4037", "loss": "1.4242", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 374, "n_pass": [189, 24, 18]}
{"time": "2021-02-20 07:59:53.522632", "score": "0.3776", "loss": "1.4374", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 360, "n_pass": [207, 25, 19]}
{"time": "2021-02-20 07:59:54.894982", "score": "0.5901", "loss": "0.9799", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); String[] selectionArguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 346, "n_pass": [209, 26, 20]}
{"time": "2021-02-20 07:59:56.284439", "score": "0.3628", "loss": "1.5726", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urigment(); Strinrguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 332, "n_pass": [211, 27, 21]}
{"time": "2021-02-20 07:59:59.382506", "score": "0.5019", "loss": "1.1873", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nteString = urirguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 318, "n_pass": [235, 29, 22]}
{"time": "2021-02-20 08:00:02.552862", "score": "0.4461", "loss": "1.3407", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String nrguments = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 304, "n_pass": [258, 31, 23]}
{"time": "2021-02-20 08:00:05.675156", "score": "0.5361", "loss": "1.0996", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; cureDatabase().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 297, "n_pass": [325, 33, 24]}
{"time": "2021-02-20 08:00:08.444285", "score": "0.5043", "loss": "1.1894", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeatherConl, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 290, "n_pass": [330, 35, 25]}
{"time": "2021-02-20 08:00:11.154766", "score": "0.365", "loss": "1.6271", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(Weal, sortOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 283, "n_pass": [333, 37, 26]}
{"time": "2021-02-20 08:00:12.551954", "score": "0.3108", "loss": "1.9029", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); break; } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 276, "n_pass": [334, 38, 27]}
{"time": "2021-02-20 08:00:13.898491", "score": "0.3108", "loss": "1.9029", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unknown uri: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 269, "n_pass": [336, 39, 28]}
{"time": "2021-02-20 08:00:15.245269", "score": "0.3237", "loss": "1.9018", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }ificationUri(ger(), uri); return cursor; }", "n_tokens": 262, "n_pass": [339, 40, 29]}
{"time": "2021-02-20 08:00:16.589752", "score": "0.2774", "loss": "1.9454", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(ger(), uri); return cursor; }", "n_tokens": 255, "n_pass": [342, 41, 30]}
{"time": "2021-02-20 08:00:18.001554", "score": "0.3445", "loss": "1.7876", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); return cursor; }", "n_tokens": 248, "n_pass": [344, 42, 31]}
{"time": "2021-02-20 08:00:19.348567", "score": "0.2148", "loss": "2.3281", "code": "@Override public Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 241, "n_pass": [346, 43, 32]}
{"time": "2021-02-20 08:00:20.691379", "score": "0.302", "loss": "2.2111", "code": "@Overrblic Cursor query(@NonNull ng[] projectirtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 235, "n_pass": [349, 44, 33]}
{"time": "2021-02-20 08:00:22.766454", "score": "0.2614", "loss": "2.4923", "code": "@Overrblic Cursor query(@NonNull ng[] prtOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 228, "n_pass": [355, 45, 34]}
{"time": "2021-02-20 08:00:24.123111", "score": "0.1923", "loss": "2.6746", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 221, "n_pass": [356, 46, 35]}
{"time": "2021-02-20 08:00:25.463532", "score": "0.2686", "loss": "2.2684", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUriMatcher.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 214, "n_pass": [358, 47, 36]}
{"time": "2021-02-20 08:00:26.836074", "score": "0.2912", "loss": "2.2024", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUer.match(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 207, "n_pass": [361, 48, 37]}
{"time": "2021-02-20 08:00:28.244389", "score": "0.3434", "loss": "2.0427", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { String ns = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 200, "n_pass": [362, 49, 38]}
{"time": "2021-02-20 08:00:29.583587", "score": "0.335", "loss": "2.0828", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new String[] { noeString }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 193, "n_pass": [367, 50, 39]}
{"time": "2021-02-20 08:00:30.935849", "score": "0.3378", "loss": "2.1343", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new String[] { no }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 186, "n_pass": [371, 51, 40]}
{"time": "2021-02-20 08:00:34.371783", "score": "0.3353", "loss": "2.195", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] { no }; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 182, "n_pass": [453, 53, 41]}
{"time": "2021-02-20 08:00:35.737097", "score": "0.3253", "loss": "2.1947", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; curse().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 178, "n_pass": [455, 54, 42]}
{"time": "2021-02-20 08:00:37.082814", "score": "0.3238", "loss": "2.1721", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(WeaOrder); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 174, "n_pass": [457, 55, 43]}
{"time": "2021-02-20 08:00:41.159106", "score": "0.262", "loss": "2.3509", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } defaon(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 170, "n_pass": [461, 58, 44]}
{"time": "2021-02-20 08:00:42.495768", "score": "0.3454", "loss": "1.8759", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Unki: \" + uri); }onUri(gri); rersor; }", "n_tokens": 166, "n_pass": [464, 59, 45]}
{"time": "2021-02-20 08:00:43.841863", "score": "0.3672", "loss": "1.777", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }onUri(gri); rersor; }", "n_tokens": 162, "n_pass": [466, 60, 46]}
{"time": "2021-02-20 08:00:45.198146", "score": "0.3935", "loss": "1.8865", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rersor; }", "n_tokens": 158, "n_pass": [470, 61, 47]}
{"time": "2021-02-20 08:00:46.534109", "score": "0.4661", "loss": "1.6778", "code": "@Overrblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 154, "n_pass": [473, 62, 48]}
{"time": "2021-02-20 08:00:47.889348", "score": "0.4661", "loss": "1.6778", "code": "@Ovblic Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 151, "n_pass": [476, 63, 49]}
{"time": "2021-02-20 08:00:49.228019", "score": "0.4663", "loss": "1.6701", "code": "@Ovc Cursor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 148, "n_pass": [477, 64, 50]}
{"time": "2021-02-20 08:00:50.929304", "score": "0.3422", "loss": "2.1222", "code": "@Ovc Cor query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 145, "n_pass": [479, 65, 51]}
{"time": "2021-02-20 08:01:06.092555", "score": "0.3373", "loss": "2.1883", "code": "@Ovc Cr query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 144, "n_pass": [611, 74, 52]}
{"time": "2021-02-20 08:01:07.428935", "score": "0.366", "loss": "2.0518", "code": "@Ovc C query(@NonNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 143, "n_pass": [612, 75, 53]}
{"time": "2021-02-20 08:01:10.633782", "score": "0.396", "loss": "1.9305", "code": "@Ovc C query(@onNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 142, "n_pass": [620, 76, 54]}
{"time": "2021-02-20 08:01:11.994246", "score": "0.3491", "loss": "2.1291", "code": "@Ovc C query(@nNull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 141, "n_pass": [621, 77, 55]}
{"time": "2021-02-20 08:01:13.329170", "score": "0.3838", "loss": "1.98", "code": "@Ovc C query(@Null ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 140, "n_pass": [622, 78, 56]}
{"time": "2021-02-20 08:01:14.683034", "score": "0.4054", "loss": "1.8918", "code": "@Ovc C query(@ull ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 139, "n_pass": [623, 79, 57]}
{"time": "2021-02-20 08:01:16.019232", "score": "0.3569", "loss": "2.0268", "code": "@Ovc C query(@ll ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 138, "n_pass": [624, 80, 58]}
{"time": "2021-02-20 08:01:17.384999", "score": "0.3819", "loss": "2.0033", "code": "@Ovc C query(@l ng[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 137, "n_pass": [625, 81, 59]}
{"time": "2021-02-20 08:01:18.719965", "score": "0.3523", "loss": "2.2472", "code": "@Ovc C query(@l g[] p) { Cursor; switch(sUh(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 136, "n_pass": [628, 82, 60]}
{"time": "2021-02-20 08:01:24.138355", "score": "0.398", "loss": "2.1411", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CODE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 134, "n_pass": [642, 86, 61]}
{"time": "2021-02-20 08:01:26.817911", "score": "0.3751", "loss": "2.1364", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE_WTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 132, "n_pass": [651, 88, 62]}
{"time": "2021-02-20 08:01:28.154532", "score": "0.4566", "loss": "1.7421", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CWTE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 130, "n_pass": [652, 89, 63]}
{"time": "2021-02-20 08:01:29.492467", "score": "0.4316", "loss": "1.8909", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: { Ss = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 128, "n_pass": [653, 90, 64]}
{"time": "2021-02-20 08:01:30.851869", "score": "0.4257", "loss": "1.931", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c().query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 126, "n_pass": [656, 91, 65]}
{"time": "2021-02-20 08:01:32.214425", "score": "0.4027", "loss": "2.0197", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wear); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 124, "n_pass": [666, 92, 66]}
{"time": "2021-02-20 08:01:37.535613", "score": "0.4714", "loss": "1.956", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } de(\"Un\" + uri); }o(gri); rr; }", "n_tokens": 122, "n_pass": [671, 96, 67]}
{"time": "2021-02-20 08:01:38.873792", "score": "0.3474", "loss": "2.4765", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"Un\" + uri); }o(gri); rr; }", "n_tokens": 120, "n_pass": [675, 97, 68]}
{"time": "2021-02-20 08:01:40.210801", "score": "0.3347", "loss": "2.4975", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + uri); }o(gri); rr; }", "n_tokens": 118, "n_pass": [677, 98, 69]}
{"time": "2021-02-20 08:01:41.546233", "score": "0.3679", "loss": "2.3622", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(gri); rr; }", "n_tokens": 116, "n_pass": [680, 99, 70]}
{"time": "2021-02-20 08:01:42.884245", "score": "0.501", "loss": "1.7862", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); rr; }", "n_tokens": 114, "n_pass": [685, 100, 71]}
{"time": "2021-02-20 08:01:44.220040", "score": "0.5697", "loss": "1.6106", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g);r; }", "n_tokens": 112, "n_pass": [687, 101, 72]}
{"time": "2021-02-20 08:01:45.579297", "score": "0.6215", "loss": "1.4649", "code": "@Ovc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 110, "n_pass": [688, 102, 73]}
{"time": "2021-02-20 08:01:46.915522", "score": "0.291", "loss": "2.5481", "code": "@vc C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 109, "n_pass": [691, 103, 74]}
{"time": "2021-02-20 08:01:48.248982", "score": "0.6368", "loss": "1.4118", "code": "@c C query(@l g[] p) { Cursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 108, "n_pass": [692, 104, 75]}
{"time": "2021-02-20 08:01:52.922050", "score": "0.3258", "loss": "2.5059", "code": "@c C query(@l g[] p) {ursor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 106, "n_pass": [711, 105, 76]}
{"time": "2021-02-20 08:01:54.261458", "score": "0.514", "loss": "1.8522", "code": "@c C query(@l g[] p) {sor; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 104, "n_pass": [712, 106, 77]}
{"time": "2021-02-20 08:01:55.592966", "score": "0.4426", "loss": "2.1278", "code": "@c C query(@l g[] p) {r; switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 102, "n_pass": [713, 107, 78]}
{"time": "2021-02-20 08:01:56.933117", "score": "0.4204", "loss": "2.1714", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.query(Wr); } (\"\" + i); }o(g); }", "n_tokens": 100, "n_pass": [714, 108, 79]}
{"time": "2021-02-20 08:02:00.979029", "score": "0.3066", "loss": "2.7569", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(Wr); } (\"\" + i); }o(g); }", "n_tokens": 98, "n_pass": [739, 111, 80]}
{"time": "2021-02-20 08:02:16.897471", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r); } (\"\" + i); }o(g); }", "n_tokens": 97, "n_pass": [879, 115, 81]}
{"time": "2021-02-20 08:02:19.552774", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);} (\"\" + i); }o(g); }", "n_tokens": 96, "n_pass": [883, 117, 82]}
{"time": "2021-02-20 08:02:20.885928", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\" + i); }o(g); }", "n_tokens": 95, "n_pass": [885, 118, 83]}
{"time": "2021-02-20 08:02:22.223738", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+ i); }o(g); }", "n_tokens": 94, "n_pass": [889, 119, 84]}
{"time": "2021-02-20 08:02:23.554543", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i); }o(g); }", "n_tokens": 93, "n_pass": [891, 120, 85]}
{"time": "2021-02-20 08:02:24.894886", "score": "0.389", "loss": "2.4284", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}o(g); }", "n_tokens": 92, "n_pass": [895, 121, 86]}
{"time": "2021-02-20 08:02:26.228368", "score": "0.337", "loss": "2.7583", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g); }", "n_tokens": 91, "n_pass": [897, 122, 87]}
{"time": "2021-02-20 08:02:27.586057", "score": "0.337", "loss": "2.7583", "code": "@c C query(@l g[] p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 90, "n_pass": [902, 123, 88]}
{"time": "2021-02-20 08:02:32.236568", "score": "0.337", "loss": "2.7583", "code": "@c C query(@l g[]p) { switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 89, "n_pass": [921, 124, 89]}
{"time": "2021-02-20 08:02:33.589428", "score": "0.337", "loss": "2.7583", "code": "@c C query(@l g[]p){ switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 88, "n_pass": [924, 125, 90]}
{"time": "2021-02-20 08:02:34.921112", "score": "0.337", "loss": "2.7583", "code": "@c C query(@l g[]p){switch(h(uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 87, "n_pass": [926, 126, 91]}
{"time": "2021-02-20 08:02:36.251356", "score": "0.2484", "loss": "2.8531", "code": "@c C query(@l g[]p){switch((uri)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 86, "n_pass": [934, 127, 92]}
{"time": "2021-02-20 08:02:40.274791", "score": "0.3257", "loss": "2.5539", "code": "@c C query(@l g[]p){switch((ur)) { case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 85, "n_pass": [938, 130, 93]}
{"time": "2021-02-20 08:02:41.616087", "score": "0.3257", "loss": "2.5539", "code": "@c C query(@l g[]p){switch((ur)){ case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 84, "n_pass": [941, 131, 94]}
{"time": "2021-02-20 08:02:42.944182", "score": "0.3257", "loss": "2.5539", "code": "@c C query(@l g[]p){switch((ur)){case CE: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 83, "n_pass": [943, 132, 95]}
{"time": "2021-02-20 08:02:44.296614", "score": "0.4848", "loss": "1.9495", "code": "@c C query(@l g[]p){switch((ur)){case E: {s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 82, "n_pass": [949, 133, 96]}
{"time": "2021-02-20 08:02:45.741181", "score": "0.4848", "loss": "1.9495", "code": "@c C query(@l g[]p){switch((ur)){case E:{s = new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 81, "n_pass": [952, 134, 97]}
{"time": "2021-02-20 08:02:47.085944", "score": "0.4848", "loss": "1.9495", "code": "@c C query(@l g[]p){switch((ur)){case E:{s= new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 80, "n_pass": [955, 135, 98]}
{"time": "2021-02-20 08:02:48.415717", "score": "0.4848", "loss": "1.9495", "code": "@c C query(@l g[]p){switch((ur)){case E:{s=new St[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 79, "n_pass": [957, 136, 99]}
{"time": "2021-02-20 08:02:49.749627", "score": "0.5231", "loss": "1.7393", "code": "@c C query(@l g[]p){switch((ur)){case E:{s=new t[] {}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 78, "n_pass": [962, 137, 100]}
{"time": "2021-02-20 08:02:51.097029", "score": "0.5231", "loss": "1.7393", "code": "@c C query(@l g[]p){switch((ur)){case E:{s=new t[]{}; c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 77, "n_pass": [966, 138, 101]}
{"time": "2021-02-20 08:02:52.427729", "score": "0.5231", "loss": "1.7393", "code": "@c C query(@l g[]p){switch((ur)){case E:{s=new t[]{};c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 76, "n_pass": [970, 139, 102]}
{"time": "2021-02-20 08:03:03.825379", "score": "0.2546", "loss": "2.8143", "code": "@c C query(@l g[]p){switch((r)){case E:{s=new t[]{};c.qry(r);}(\"\"+i);}(g);}", "n_tokens": 75, "n_pass": [1022, 145, 103]}

Minimal simplified code:
@c C query(@l g[]p){switch((r)){case E:{s=new t[]{};c.qry(r);}(""+i);}(g);}

