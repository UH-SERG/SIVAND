
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/StaticClassFieldReferenceNode_copyFrom.java
method_name = copyFrom
method_body = public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StaticClassFieldReferenceNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldName; this.javaClassName = other.javaClassName; this.classNameDelimitedIdentifier = other.classNameDelimitedIdentifier; }
predict, score, loss = copyFrom, 0.9997361898422241, 0.0013632189948111773

Trace of simplified code(s):
{"time": "2021-02-20 01:38:26.190877", "score": "0.9997", "loss": "0.0014", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StaticClassFieldReferenceNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldName; this.javaClassName = other.javaClassName; this.classNameDelimitedIdentifier = other.classNameDelimitedIdentifier; }", "n_tokens": 315, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 01:38:27.558456", "score": "0.9997", "loss": "0.0016", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StaticClassFieldReferenceNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldNsName; this.classNameDelimitedIdentifier = other.classNameDelimitedIdentifier; }", "n_tokens": 275, "n_pass": [25, 2, 2]}
{"time": "2021-02-20 01:38:28.890169", "score": "0.9995", "loss": "0.0019", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StaticClassFieldReferenceNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldN = other.classNameDelimitedIdentifier; }", "n_tokens": 235, "n_pass": [26, 3, 3]}
{"time": "2021-02-20 01:38:30.250660", "score": "0.9993", "loss": "0.0023", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StaticClassFieldReferenceNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldNlimitedIdentifier; }", "n_tokens": 215, "n_pass": [45, 4, 4]}
{"time": "2021-02-20 01:38:31.936556", "score": "0.9993", "loss": "0.0023", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StatiNode other = (StaticClassFieldReferenceNode) node; this.fieldName = other.fieldNlimitedIdentifier; }", "n_tokens": 195, "n_pass": [51, 5, 5]}
{"time": "2021-02-20 01:38:33.257966", "score": "0.9995", "loss": "0.0019", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StatiNode other = (Staticode) node; this.fieldName = other.fieldNlimitedIdentifier; }", "n_tokens": 175, "n_pass": [53, 6, 6]}
{"time": "2021-02-20 01:38:34.573797", "score": "0.9994", "loss": "0.0022", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StatiNode other = (Staticode) node; this.fiellimitedIdentifier; }", "n_tokens": 155, "n_pass": [55, 7, 7]}
{"time": "2021-02-20 01:38:36.256207", "score": "0.9993", "loss": "0.0027", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StatiNode other = (Staticode) node; this.fielntifier; }", "n_tokens": 145, "n_pass": [80, 8, 8]}
{"time": "2021-02-20 01:38:37.601410", "score": "0.9979", "loss": "0.0053", "code": "id copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); StatiNode other = (Staticode) node; this.fielntifier; }", "n_tokens": 136, "n_pass": [81, 9, 9]}
{"time": "2021-02-20 01:38:39.280585", "score": "0.9984", "loss": "0.0038", "code": "id copyFrom(QueryTreeNode node) throws Standar { super.copyFrom(node); StatiNode other = (Staticode) node; this.fielntifier; }", "n_tokens": 126, "n_pass": [87, 10, 10]}
{"time": "2021-02-20 01:38:40.580605", "score": "0.9978", "loss": "0.0049", "code": "id copyFrom(QueryTreeNode node) throws Standar { super.copyFrom(node); Stati = (Staticode) node; this.fielntifier; }", "n_tokens": 116, "n_pass": [91, 11, 11]}
{"time": "2021-02-20 01:38:41.890555", "score": "0.9974", "loss": "0.0059", "code": "id copyFrom(QueryTreeNode node) throws Standar { super.copyFrom(node); Stati = (Staticode) node;ntifier; }", "n_tokens": 106, "n_pass": [94, 12, 12]}
{"time": "2021-02-20 01:38:43.589778", "score": "0.9983", "loss": "0.0038", "code": "id copyFrom(QueryTreeNode node) throws Standar { super.copyFrom(node); Stati = (Staticode) node;er; }", "n_tokens": 101, "n_pass": [128, 13, 13]}
{"time": "2021-02-20 01:38:45.638455", "score": "0.999", "loss": "0.0023", "code": "id copyFrom(yTreeNode node) throws Standar { super.copyFrom(node); Stati = (Staticode) node;er; }", "n_tokens": 97, "n_pass": [132, 14, 14]}
{"time": "2021-02-20 01:38:46.978115", "score": "0.9992", "loss": "0.0018", "code": "id copyFrom(Node node) throws Standar { super.copyFrom(node); Stati = (Staticode) node;er; }", "n_tokens": 92, "n_pass": [133, 15, 15]}
{"time": "2021-02-20 01:38:48.317000", "score": "0.9987", "loss": "0.0029", "code": "id copyFrom(Node node) throws St { super.copyFrom(node); Stati = (Staticode) node;er; }", "n_tokens": 87, "n_pass": [138, 16, 16]}
{"time": "2021-02-20 01:38:52.238779", "score": "0.9987", "loss": "0.0029", "code": "id copyFrom(Node node) throws St { super.copyFrom(node); Stati = (Sode) node;er; }", "n_tokens": 82, "n_pass": [146, 19, 17]}
{"time": "2021-02-20 01:38:53.601225", "score": "0.9987", "loss": "0.0031", "code": "id copyFrom(Node node) throws St { super.copyFrom(node); Stati = (Sode) er; }", "n_tokens": 77, "n_pass": [148, 20, 18]}
{"time": "2021-02-20 01:38:58.310416", "score": "0.9981", "loss": "0.0057", "code": "id copyFrom(Node node) throws St { super.copyFrom(node); Stati = (Sode); }", "n_tokens": 74, "n_pass": [197, 23, 19]}
{"time": "2021-02-20 01:39:01.384616", "score": "0.9987", "loss": "0.0045", "code": "id copyFrom(de node) throws St { super.copyFrom(node); Stati = (Sode); }", "n_tokens": 72, "n_pass": [205, 24, 20]}
{"time": "2021-02-20 01:39:02.689157", "score": "0.999", "loss": "0.0036", "code": "id copyFrom(de ne) throws St { super.copyFrom(node); Stati = (Sode); }", "n_tokens": 70, "n_pass": [208, 25, 21]}
{"time": "2021-02-20 01:39:10.618386", "score": "0.9986", "loss": "0.004", "code": "id copyFrom(de ne) throws St { super.copyFrom(e); Stati = (Sode); }", "n_tokens": 67, "n_pass": [222, 31, 22]}
{"time": "2021-02-20 01:39:11.918393", "score": "0.9977", "loss": "0.0072", "code": "id copyFrom(de ne) throws St { super.copyFrom(e);ati = (Sode); }", "n_tokens": 64, "n_pass": [224, 32, 23]}
{"time": "2021-02-20 01:39:13.218190", "score": "0.9981", "loss": "0.0051", "code": "id copyFrom(de ne) throws St { super.copyFrom(e);ati(Sode); }", "n_tokens": 61, "n_pass": [226, 33, 24]}
{"time": "2021-02-20 01:39:22.915800", "score": "0.9971", "loss": "0.0073", "code": "id copyFrom(de ne) throws St { super.copyFrom(e);(Sode); }", "n_tokens": 58, "n_pass": [252, 39, 25]}
{"time": "2021-02-20 01:39:34.621405", "score": "0.9985", "loss": "0.0038", "code": "id copyFrom(de ne) throws St { super.copyFrom(e);(de); }", "n_tokens": 56, "n_pass": [330, 45, 26]}
{"time": "2021-02-20 01:39:35.939358", "score": "0.9989", "loss": "0.0029", "code": "d copyFrom(de ne) throws St { super.copyFrom(e);(de); }", "n_tokens": 55, "n_pass": [334, 46, 27]}
{"time": "2021-02-20 01:39:40.857683", "score": "0.9986", "loss": "0.0035", "code": "d copyFrom(e ne) throws St { super.copyFrom(e);(de); }", "n_tokens": 54, "n_pass": [346, 47, 28]}
{"time": "2021-02-20 01:39:42.184515", "score": "0.9985", "loss": "0.0038", "code": "d copyFrom(e e) throws St { super.copyFrom(e);(de); }", "n_tokens": 53, "n_pass": [349, 48, 29]}
{"time": "2021-02-20 01:39:43.502191", "score": "0.9985", "loss": "0.0038", "code": "d copyFrom(e e)throws St { super.copyFrom(e);(de); }", "n_tokens": 52, "n_pass": [352, 49, 30]}
{"time": "2021-02-20 01:39:44.797507", "score": "0.9984", "loss": "0.0039", "code": "d copyFrom(e e)throws t { super.copyFrom(e);(de); }", "n_tokens": 51, "n_pass": [360, 50, 31]}
{"time": "2021-02-20 01:39:46.114258", "score": "0.9984", "loss": "0.0039", "code": "d copyFrom(e e)throws t{ super.copyFrom(e);(de); }", "n_tokens": 50, "n_pass": [362, 51, 32]}
{"time": "2021-02-20 01:39:47.438846", "score": "0.9984", "loss": "0.0039", "code": "d copyFrom(e e)throws t{super.copyFrom(e);(de); }", "n_tokens": 49, "n_pass": [364, 52, 33]}
{"time": "2021-02-20 01:40:13.056262", "score": "0.7069", "loss": "0.9962", "code": "d copyFrom(e e)throws t{super.copyFrom();(de); }", "n_tokens": 48, "n_pass": [425, 68, 34]}
{"time": "2021-02-20 01:40:14.378078", "score": "0.6691", "loss": "1.3122", "code": "d copyFrom(e e)throws t{super.copyFrom();(e); }", "n_tokens": 47, "n_pass": [428, 69, 35]}
{"time": "2021-02-20 01:40:15.697788", "score": "0.6691", "loss": "1.3122", "code": "d copyFrom(e e)throws t{super.copyFrom();(e);}", "n_tokens": 46, "n_pass": [432, 70, 36]}

Minimal simplified code:
d copyFrom(e e)throws t{super.copyFrom();(e);}

