
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-projects__spring-ws/spring-ws-core/src/main/java/org/springframework/ws/server/endpoint/AbstractStaxStreamPayloadEndpoint_flush.java
method_name = flush
method_body = @Override public void flush() throws XMLStreamException { if (streamWriter != null) { streamWriter.flush(); } }
predict, score, loss = flush, 0.9770119786262512, 0.049356259405612946

Trace of simplified code(s):
{"time": "2021-02-20 12:59:21.382390", "score": "0.977", "loss": "0.0494", "code": "@Override public void flush() throws XMLStreamException { if (streamWriter != null) { streamWriter.flush(); } }", "n_tokens": 111, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 12:59:23.440511", "score": "0.9137", "loss": "0.149", "code": "@Override public void flush() throws XMLS { if (streamWriter != null) { streamWriter.flush(); } }", "n_tokens": 97, "n_pass": [23, 2, 2]}
{"time": "2021-02-20 12:59:25.180502", "score": "0.8394", "loss": "0.2679", "code": "@Override public void flush() throws XMLS { if (riter != null) { streamWriter.flush(); } }", "n_tokens": 90, "n_pass": [45, 3, 3]}
{"time": "2021-02-20 12:59:26.488945", "score": "0.6359", "loss": "0.6849", "code": "@Override public void flush() throws XMLS { if (riter != null) { strer.flush(); } }", "n_tokens": 83, "n_pass": [49, 4, 4]}
{"time": "2021-02-20 12:59:29.129141", "score": "0.6932", "loss": "0.7471", "code": "@Overrlic void flush() throws XMLS { if (riter != null) { strer.flush(); } }", "n_tokens": 76, "n_pass": [53, 6, 5]}
{"time": "2021-02-20 12:59:32.464231", "score": "0.4786", "loss": "1.2573", "code": "@Overr void flush() throws XMLS { if (riter != null) { strer.flush(); } }", "n_tokens": 73, "n_pass": [87, 8, 6]}
{"time": "2021-02-20 12:59:34.827100", "score": "0.3935", "loss": "1.4199", "code": "@Overr void flush() throws S { if (riter != null) { strer.flush(); } }", "n_tokens": 70, "n_pass": [95, 9, 7]}
{"time": "2021-02-20 12:59:40.103056", "score": "0.3925", "loss": "1.5021", "code": "@Ov void flush() throws S { if (riter != null) { strer.flush(); } }", "n_tokens": 67, "n_pass": [108, 13, 8]}
{"time": "2021-02-20 12:59:46.489864", "score": "0.7537", "loss": "0.5797", "code": " void flush() throws S { if (riter != null) { strer.flush(); } }", "n_tokens": 64, "n_pass": [127, 17, 9]}
{"time": "2021-02-20 12:59:49.792525", "score": "0.5199", "loss": "1.2322", "code": " void flush() throws S { if (rit= null) { strer.flush(); } }", "n_tokens": 60, "n_pass": [138, 19, 10]}
{"time": "2021-02-20 12:59:51.079642", "score": "0.8441", "loss": "0.4664", "code": " void flush() throws S { if (ritll) { strer.flush(); } }", "n_tokens": 56, "n_pass": [139, 20, 11]}
{"time": "2021-02-20 12:59:57.645488", "score": "0.841", "loss": "0.466", "code": " void flush() throws S { if (rit) { strer.flush(); } }", "n_tokens": 54, "n_pass": [188, 24, 12]}
{"time": "2021-02-20 12:59:58.947122", "score": "0.8413", "loss": "0.3346", "code": " void flush() throws S { if (rit) { rer.flush(); } }", "n_tokens": 52, "n_pass": [190, 25, 13]}
{"time": "2021-02-20 13:00:00.232881", "score": "0.9199", "loss": "0.2359", "code": " void flush() throws S { if (rit) { r.flush(); } }", "n_tokens": 50, "n_pass": [191, 26, 14]}
{"time": "2021-02-20 13:00:01.515923", "score": "0.5707", "loss": "1.1306", "code": " void flush() throws S { if (rit) { flush(); } }", "n_tokens": 48, "n_pass": [192, 27, 15]}
{"time": "2021-02-20 13:00:05.449195", "score": "0.5707", "loss": "1.1306", "code": "void flush() throws S { if (rit) { flush(); } }", "n_tokens": 47, "n_pass": [199, 30, 16]}
{"time": "2021-02-20 13:00:13.383681", "score": "0.5036", "loss": "1.2673", "code": "void flush() throws S { if (r) { flush(); } }", "n_tokens": 45, "n_pass": [218, 35, 17]}
{"time": "2021-02-20 13:00:27.143055", "score": "0.5036", "loss": "1.2673", "code": "void flush() throws S { if (r) {flush(); } }", "n_tokens": 44, "n_pass": [284, 42, 18]}
{"time": "2021-02-20 13:00:34.904462", "score": "0.5036", "loss": "1.2673", "code": "void flush() throws S { if (r) {flush();} }", "n_tokens": 43, "n_pass": [293, 48, 19]}
{"time": "2021-02-20 13:00:36.187778", "score": "0.5036", "loss": "1.2673", "code": "void flush() throws S { if (r) {flush();}}", "n_tokens": 42, "n_pass": [295, 49, 20]}
{"time": "2021-02-20 13:00:44.827046", "score": "0.5036", "loss": "1.2673", "code": "void flush()throws S { if (r) {flush();}}", "n_tokens": 41, "n_pass": [309, 54, 21]}
{"time": "2021-02-20 13:00:46.135295", "score": "0.5036", "loss": "1.2673", "code": "void flush()throws S{ if (r) {flush();}}", "n_tokens": 40, "n_pass": [318, 55, 22]}
{"time": "2021-02-20 13:00:47.415989", "score": "0.5036", "loss": "1.2673", "code": "void flush()throws S{if (r) {flush();}}", "n_tokens": 39, "n_pass": [320, 56, 23]}
{"time": "2021-02-20 13:00:48.721140", "score": "0.5036", "loss": "1.2673", "code": "void flush()throws S{if(r) {flush();}}", "n_tokens": 38, "n_pass": [323, 57, 24]}
{"time": "2021-02-20 13:00:50.035512", "score": "0.5036", "loss": "1.2673", "code": "void flush()throws S{if(r){flush();}}", "n_tokens": 37, "n_pass": [327, 58, 25]}

Minimal simplified code:
void flush()throws S{if(r){flush();}}

