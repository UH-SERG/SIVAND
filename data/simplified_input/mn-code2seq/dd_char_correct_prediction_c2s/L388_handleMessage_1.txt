
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Othershe__DUtil/dutil/src/main/java/com/othershe/dutil/upload/UploadProgressHandler_handleMessage.java
method_name = handleMessage
method_body = @Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }
predict, score, loss = handleMessage, 0.9985741376876831, 0.0029266185592859983

Trace of simplified code(s):
{"time": "2021-02-20 09:53:40.605605", "score": "0.9985", "loss": "0.003", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinish(msg.obj.toString()); break; case ERROR: uploadCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 382, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 09:53:41.970903", "score": "0.9993", "loss": "0.0015", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; case PROGRESS: uploadCallback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 334, "n_pass": [26, 2, 2]}
{"time": "2021-02-20 09:53:43.729308", "score": "0.9986", "loss": "0.0028", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; cback.onProgress(msg.arg1, msg.arg2, Utils.getPercentage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 310, "n_pass": [55, 3, 3]}
{"time": "2021-02-20 09:53:45.084853", "score": "0.9991", "loss": "0.0018", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onStart(); break; cback.onProgress(msg.arg1centage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 286, "n_pass": [56, 4, 4]}
{"time": "2021-02-20 09:53:46.788816", "score": "0.9991", "loss": "0.0018", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCallback.onProgress(msg.arg1centage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 262, "n_pass": [67, 5, 5]}
{"time": "2021-02-20 09:53:48.506762", "score": "0.9992", "loss": "0.0016", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCalless(msg.arg1centage(msg.arg1, msg.arg2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 250, "n_pass": [101, 6, 6]}
{"time": "2021-02-20 09:53:49.858731", "score": "0.9992", "loss": "0.0017", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCalless(msg.arg1centage(msg.g2)); break; case FINISH: uploadCallback.onFinisCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 238, "n_pass": [103, 7, 7]}
{"time": "2021-02-20 09:53:51.186038", "score": "0.9993", "loss": "0.0015", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCalless(msg.arg1centage(msg.g2)); break; case FINISH: uploadCallCallback.onError(msg.obj.toString()); break; } }", "n_tokens": 226, "n_pass": [107, 8, 8]}
{"time": "2021-02-20 09:53:52.513752", "score": "0.9994", "loss": "0.0014", "code": "@Override public void handleMessage(Message msg) { super.handleMessage(msg); switch(msg.what) { case START: uploadCalless(msg.arg1centage(msg.g2)); break; case FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 214, "n_pass": [108, 9, 9]}
{"time": "2021-02-20 09:53:54.564744", "score": "0.8639", "loss": "0.396", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(msg.arg1centage(msg.g2)); break; case FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 202, "n_pass": [117, 10, 10]}
{"time": "2021-02-20 09:53:58.006623", "score": "0.8635", "loss": "0.3962", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mscentage(msg.g2)); break; case FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 196, "n_pass": [178, 12, 11]}
{"time": "2021-02-20 09:53:59.370400", "score": "0.8457", "loss": "0.453", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2)); break; case FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 190, "n_pass": [179, 13, 12]}
{"time": "2021-02-20 09:54:00.706831", "score": "0.8457", "loss": "0.453", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2));  case FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 184, "n_pass": [182, 14, 13]}
{"time": "2021-02-20 09:54:02.059020", "score": "0.7406", "loss": "0.7992", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2)); FINISH: uploadCallrror(msg.obj.toString()); break; } }", "n_tokens": 178, "n_pass": [183, 15, 14]}
{"time": "2021-02-20 09:54:06.056574", "score": "0.7269", "loss": "0.8381", "code": "@Override public void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2)); FINISH: uploadCallrror(m.toString()); break; } }", "n_tokens": 172, "n_pass": [188, 18, 15]}
{"time": "2021-02-20 09:54:10.071766", "score": "0.7269", "loss": "0.8381", "code": "@Override  void handleMessage(Message msg) { super.h(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2)); FINISH: uploadCallrror(m.toString()); break; } }", "n_tokens": 166, "n_pass": [195, 21, 16]}
{"time": "2021-02-20 09:54:12.481426", "score": "0.9892", "loss": "0.0262", "code": "@Override  void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploadCalless(mse(msg.g2)); FINISH: uploadCallrror(m.toString()); break; } }", "n_tokens": 160, "n_pass": [202, 22, 17]}
{"time": "2021-02-20 09:54:13.805186", "score": "0.9831", "loss": "0.047", "code": "@Override  void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); FINISH: uploadCallrror(m.toString()); break; } }", "n_tokens": 154, "n_pass": [210, 23, 18]}
{"time": "2021-02-20 09:54:15.145670", "score": "0.9639", "loss": "0.1095", "code": "@Override  void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); FINISHadCallrror(m.toString()); break; } }", "n_tokens": 148, "n_pass": [215, 24, 19]}
{"time": "2021-02-20 09:54:16.463633", "score": "0.967", "loss": "0.1001", "code": "@Override  void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); FINISHrror(m.toString()); break; } }", "n_tokens": 142, "n_pass": [216, 25, 20]}
{"time": "2021-02-20 09:54:17.794908", "score": "0.9576", "loss": "0.141", "code": "@Override  void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); FINISHrror(ming()); break; } }", "n_tokens": 136, "n_pass": [218, 26, 21]}
{"time": "2021-02-20 09:54:19.121386", "score": "0.9109", "loss": "0.333", "code": "@Over void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); FINISHrror(ming()); break; } }", "n_tokens": 131, "n_pass": [223, 27, 22]}
{"time": "2021-02-20 09:54:21.176590", "score": "0.8526", "loss": "0.6751", "code": "@Over void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); rror(ming()); break; } }", "n_tokens": 125, "n_pass": [240, 28, 23]}
{"time": "2021-02-20 09:54:24.579066", "score": "0.8888", "loss": "0.4714", "code": "@Over void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(ming()); break; } }", "n_tokens": 122, "n_pass": [304, 30, 24]}
{"time": "2021-02-20 09:54:25.924098", "score": "0.8716", "loss": "0.558", "code": "@Over void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(m()); break; } }", "n_tokens": 119, "n_pass": [305, 31, 25]}
{"time": "2021-02-20 09:54:27.242869", "score": "0.9612", "loss": "0.1065", "code": "@Over void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 116, "n_pass": [308, 32, 26]}
{"time": "2021-02-20 09:54:28.576996", "score": "0.9632", "loss": "0.0994", "code": "@O void handleMessage(Message msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 113, "n_pass": [312, 33, 27]}
{"time": "2021-02-20 09:54:32.073186", "score": "0.6777", "loss": "1.124", "code": "@O void handleMessage(Mage msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 110, "n_pass": [320, 34, 28]}
{"time": "2021-02-20 09:54:33.390589", "score": "0.9075", "loss": "0.2468", "code": "@O void handleMessage(M msg) { s(msg); switch(msg.what) { case START: uploess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 107, "n_pass": [321, 35, 29]}
{"time": "2021-02-20 09:54:37.356430", "score": "0.8929", "loss": "0.2866", "code": "@O void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: uploess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 104, "n_pass": [336, 38, 30]}
{"time": "2021-02-20 09:54:38.683120", "score": "0.8666", "loss": "0.3639", "code": "@O void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: uess(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 101, "n_pass": [338, 39, 31]}
{"time": "2021-02-20 09:54:40.025895", "score": "0.9039", "loss": "0.26", "code": "@O void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: u(mse(msg.g2)); r(m()); bk; } }", "n_tokens": 98, "n_pass": [339, 40, 32]}
{"time": "2021-02-20 09:54:41.336654", "score": "0.8848", "loss": "0.3193", "code": "@O void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 95, "n_pass": [342, 41, 33]}
{"time": "2021-02-20 09:54:42.675079", "score": "0.5175", "loss": "1.9525", "code": " void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 93, "n_pass": [350, 42, 34]}
{"time": "2021-02-20 09:54:51.799114", "score": "0.5175", "loss": "1.9525", "code": "void handleMessage(M msg) { s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 92, "n_pass": [444, 46, 35]}
{"time": "2021-02-20 09:54:55.767198", "score": "0.3916", "loss": "2.6936", "code": "vod handleMessage(M msg) { s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 91, "n_pass": [447, 49, 36]}
{"time": "2021-02-20 09:55:07.566953", "score": "0.3916", "loss": "2.6936", "code": "vod handleMessage(M msg){ s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 90, "n_pass": [470, 54, 37]}
{"time": "2021-02-20 09:55:08.884266", "score": "0.3916", "loss": "2.6936", "code": "vod handleMessage(M msg){s(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 89, "n_pass": [472, 55, 38]}
{"time": "2021-02-20 09:55:10.196232", "score": "0.6669", "loss": "1.1998", "code": "vod handleMessage(M msg){(msg); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 88, "n_pass": [473, 56, 39]}
{"time": "2021-02-20 09:55:11.511373", "score": "0.5337", "loss": "1.9095", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(mse(mg2)); r(m()); bk; } }", "n_tokens": 86, "n_pass": [475, 57, 40]}
{"time": "2021-02-20 09:55:16.833847", "score": "0.6428", "loss": "1.4601", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(mg2)); r(m()); bk; } }", "n_tokens": 84, "n_pass": [493, 61, 41]}
{"time": "2021-02-20 09:55:18.151013", "score": "0.8147", "loss": "0.5924", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2)); r(m()); bk; } }", "n_tokens": 82, "n_pass": [495, 62, 42]}
{"time": "2021-02-20 09:55:19.465616", "score": "0.8143", "loss": "0.6022", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2));(m()); bk; } }", "n_tokens": 80, "n_pass": [498, 63, 43]}
{"time": "2021-02-20 09:55:20.804629", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2));(m); bk; } }", "n_tokens": 78, "n_pass": [500, 64, 44]}
{"time": "2021-02-20 09:55:44.303908", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2));(m);bk; } }", "n_tokens": 77, "n_pass": [605, 75, 45]}
{"time": "2021-02-20 09:55:46.924223", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2));(m);bk;} }", "n_tokens": 76, "n_pass": [608, 77, 46]}
{"time": "2021-02-20 09:55:48.237779", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g); switch(msg.what) { case ST: u(e(2));(m);bk;}}", "n_tokens": 75, "n_pass": [610, 78, 47]}
{"time": "2021-02-20 09:56:02.549728", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g);switch(msg.what) { case ST: u(e(2));(m);bk;}}", "n_tokens": 74, "n_pass": [641, 85, 48]}
{"time": "2021-02-20 09:56:14.469912", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g);switch(msg.what){ case ST: u(e(2));(m);bk;}}", "n_tokens": 73, "n_pass": [658, 94, 49]}
{"time": "2021-02-20 09:56:15.779746", "score": "0.485", "loss": "2.3014", "code": "vod handleMessage(M msg){(g);switch(msg.what){case ST: u(e(2));(m);bk;}}", "n_tokens": 72, "n_pass": [660, 95, 50]}
{"time": "2021-02-20 09:56:17.083997", "score": "0.5172", "loss": "2.0732", "code": "vod handleMessage(M msg){(g);switch(msg.what){case T: u(e(2));(m);bk;}}", "n_tokens": 71, "n_pass": [666, 96, 51]}
{"time": "2021-02-20 09:56:18.401663", "score": "0.5172", "loss": "2.0732", "code": "vod handleMessage(M msg){(g);switch(msg.what){case T:u(e(2));(m);bk;}}", "n_tokens": 70, "n_pass": [669, 97, 52]}
{"time": "2021-02-20 09:56:21.031767", "score": "0.476", "loss": "2.2104", "code": "vod handleMessage(M msg){(g);switch(msg.what){case T:u((2));(m);bk;}}", "n_tokens": 69, "n_pass": [672, 99, 53]}
{"time": "2021-02-20 09:56:28.016632", "score": "0.4079", "loss": "2.684", "code": "vo handleMessage(M msg){(g);switch(msg.what){case T:u((2));(m);bk;}}", "n_tokens": 68, "n_pass": [689, 104, 54]}

Minimal simplified code:
vo handleMessage(M msg){(g);switch(msg.what){case T:u((2));(m);bk;}}

