
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/authenticator/SavedRequest_addHeader.java
method_name = addHeader
method_body = public void addHeader(String name, String value) { ArrayList<String> values = headers.get(name); if (values == null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }
predict, score, loss = addHeader, 0.8890413045883179, 0.30381307005882263

Trace of simplified code(s):
{"time": "2021-02-20 06:39:32.542655", "score": "0.889", "loss": "0.3038", "code": "public void addHeader(String name, String value) { ArrayList<String> values = headers.get(name); if (values == null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 196, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 06:39:34.658688", "score": "0.8823", "loss": "0.3411", "code": "public void addHeader(Sttring value) { ArrayList<String> values = headers.get(name); if (values == null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 184, "n_pass": [46, 2, 2]}
{"time": "2021-02-20 06:39:36.012416", "score": "0.7583", "loss": "0.7331", "code": "public void addHeader(Sttring value) { ArrayListues = headers.get(name); if (values == null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 172, "n_pass": [48, 3, 3]}
{"time": "2021-02-20 06:39:37.335200", "score": "0.7383", "loss": "0.7314", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (values == null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 160, "n_pass": [49, 4, 4]}
{"time": "2021-02-20 06:39:39.030815", "score": "0.7615", "loss": "0.6573", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (v== null) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 154, "n_pass": [92, 5, 5]}
{"time": "2021-02-20 06:39:40.398719", "score": "0.5714", "loss": "1.3996", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (vl) { values = new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 148, "n_pass": [93, 6, 6]}
{"time": "2021-02-20 06:39:41.717988", "score": "0.5989", "loss": "1.2918", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (vl) { v= new ArrayList<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 142, "n_pass": [95, 7, 7]}
{"time": "2021-02-20 06:39:43.038811", "score": "0.6128", "loss": "1.225", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (vl) { v= new ist<>(); headers.put(name, values); } values.add(value); }", "n_tokens": 136, "n_pass": [97, 8, 8]}
{"time": "2021-02-20 06:39:45.678098", "score": "0.5653", "loss": "1.543", "code": "public void addHeader(Sttring value) { ArrayLists.get(name); if (vl) { v= new ist<>(); headers.put(namues); } values.add(value); }", "n_tokens": 130, "n_pass": [102, 10, 9]}
{"time": "2021-02-20 06:39:47.003739", "score": "0.5653", "loss": "1.543", "code": " void addHeader(Sttring value) { ArrayLists.get(name); if (vl) { v= new ist<>(); headers.put(namues); } values.add(value); }", "n_tokens": 124, "n_pass": [107, 11, 10]}
{"time": "2021-02-20 06:39:49.091366", "score": "0.5177", "loss": "1.7633", "code": " void addHeader(Sttring value) { Arrs.get(name); if (vl) { v= new ist<>(); headers.put(namues); } values.add(value); }", "n_tokens": 118, "n_pass": [114, 12, 11]}
{"time": "2021-02-20 06:39:52.453667", "score": "0.4898", "loss": "1.9275", "code": " void addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(namues); } values.add(value); }", "n_tokens": 115, "n_pass": [172, 14, 12]}
{"time": "2021-02-20 06:39:59.068832", "score": "0.5248", "loss": "1.7214", "code": " void addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(ues); } values.add(value); }", "n_tokens": 112, "n_pass": [188, 19, 13]}
{"time": "2021-02-20 06:40:00.405806", "score": "0.5917", "loss": "1.436", "code": " void addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } values.add(value); }", "n_tokens": 109, "n_pass": [189, 20, 14]}
{"time": "2021-02-20 06:40:01.710316", "score": "0.6414", "loss": "1.3138", "code": " void addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(value); }", "n_tokens": 106, "n_pass": [192, 21, 15]}
{"time": "2021-02-20 06:40:04.323483", "score": "0.6929", "loss": "1.1657", "code": " void addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 102, "n_pass": [195, 23, 16]}
{"time": "2021-02-20 06:40:05.626505", "score": "0.6362", "loss": "1.5148", "code": "id addHeader(Sttring value) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 99, "n_pass": [197, 24, 17]}
{"time": "2021-02-20 06:40:08.387835", "score": "0.6362", "loss": "1.5148", "code": "id addHeader(Stng value) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 96, "n_pass": [203, 25, 18]}
{"time": "2021-02-20 06:40:09.715114", "score": "0.6341", "loss": "1.5797", "code": "id addHeader(Stng ue) { Arret(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 93, "n_pass": [205, 26, 19]}
{"time": "2021-02-20 06:40:11.041670", "score": "0.6485", "loss": "1.5571", "code": "id addHeader(Stng ue) { et(name); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 90, "n_pass": [208, 27, 20]}
{"time": "2021-02-20 06:40:12.370928", "score": "0.5778", "loss": "1.8845", "code": "id addHeader(Stng ue) { et(e); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 87, "n_pass": [210, 28, 21]}
{"time": "2021-02-20 06:40:23.687452", "score": "0.5842", "loss": "1.7884", "code": "id addHeader(Stng u) { et(e); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 86, "n_pass": [296, 34, 22]}
{"time": "2021-02-20 06:40:25.016251", "score": "0.5842", "loss": "1.7884", "code": "id addHeader(Stng u){ et(e); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 85, "n_pass": [298, 35, 23]}
{"time": "2021-02-20 06:40:26.353113", "score": "0.5842", "loss": "1.7884", "code": "id addHeader(Stng u){et(e); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 84, "n_pass": [300, 36, 24]}
{"time": "2021-02-20 06:40:27.667368", "score": "0.6126", "loss": "1.5668", "code": "id addHeader(Stng u){t(e); if (vl) { v= new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 83, "n_pass": [301, 37, 25]}
{"time": "2021-02-20 06:40:28.983623", "score": "0.5965", "loss": "1.6385", "code": "id addHeader(Stng u){t(e); if (vl) {  new ist<>(); headers.put(); } ves.add(v); }", "n_tokens": 81, "n_pass": [310, 38, 26]}
{"time": "2021-02-20 06:40:31.624371", "score": "0.5965", "loss": "1.6385", "code": "id addHeader(Stng u){t(e); if (vl) {  new ist(); headers.put(); } ves.add(v); }", "n_tokens": 79, "n_pass": [315, 40, 27]}
{"time": "2021-02-20 06:40:38.207331", "score": "0.5256", "loss": "2.0255", "code": "id addHeader(Stng u){t(e); if (vl) {  new ist(); headers.t(); } ves.add(v); }", "n_tokens": 77, "n_pass": [322, 45, 28]}
{"time": "2021-02-20 06:40:39.549700", "score": "0.4885", "loss": "2.1766", "code": "id addHeader(Stng u){t(e); if (vl) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 75, "n_pass": [326, 46, 29]}
{"time": "2021-02-20 06:40:43.498147", "score": "0.4805", "loss": "2.2044", "code": "d addHeader(Stng u){t(e); if (vl) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 74, "n_pass": [333, 49, 30]}
{"time": "2021-02-20 06:41:08.801092", "score": "0.6045", "loss": "1.6496", "code": "d addHeader(Stng u){(e); if (vl) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 73, "n_pass": [435, 62, 31]}
{"time": "2021-02-20 06:41:10.128570", "score": "0.6045", "loss": "1.6496", "code": "d addHeader(Stng u){(e);if (vl) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 72, "n_pass": [439, 63, 32]}
{"time": "2021-02-20 06:41:11.470603", "score": "0.6045", "loss": "1.6496", "code": "d addHeader(Stng u){(e);if(vl) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 71, "n_pass": [442, 64, 33]}
{"time": "2021-02-20 06:41:12.782955", "score": "0.7047", "loss": "1.1481", "code": "d addHeader(Stng u){(e);if(l) {  new ist(); headers.t(); }es.add(v); }", "n_tokens": 70, "n_pass": [444, 65, 34]}
{"time": "2021-02-20 06:41:14.090914", "score": "0.7047", "loss": "1.1481", "code": "d addHeader(Stng u){(e);if(l){  new ist(); headers.t(); }es.add(v); }", "n_tokens": 69, "n_pass": [447, 66, 35]}
{"time": "2021-02-20 06:41:15.394005", "score": "0.7047", "loss": "1.1481", "code": "d addHeader(Stng u){(e);if(l){ new ist(); headers.t(); }es.add(v); }", "n_tokens": 68, "n_pass": [449, 67, 36]}
{"time": "2021-02-20 06:41:16.699933", "score": "0.7047", "loss": "1.1481", "code": "d addHeader(Stng u){(e);if(l){new ist(); headers.t(); }es.add(v); }", "n_tokens": 67, "n_pass": [450, 68, 37]}
{"time": "2021-02-20 06:41:18.015372", "score": "0.6321", "loss": "1.3744", "code": "d addHeader(Stng u){(e);if(l){newist(); headers.t(); }es.add(v); }", "n_tokens": 66, "n_pass": [454, 69, 38]}
{"time": "2021-02-20 06:41:19.322892", "score": "0.6321", "loss": "1.3744", "code": "d addHeader(Stng u){(e);if(l){newst(); headers.t(); }es.add(v); }", "n_tokens": 65, "n_pass": [455, 70, 39]}
{"time": "2021-02-20 06:41:20.677156", "score": "0.6509", "loss": "1.2643", "code": "d addHeader(Stng u){(e);if(l){newt(); headers.t(); }es.add(v); }", "n_tokens": 64, "n_pass": [456, 71, 40]}
{"time": "2021-02-20 06:41:22.009019", "score": "0.6509", "loss": "1.2643", "code": "d addHeader(Stng u){(e);if(l){newt();headers.t(); }es.add(v); }", "n_tokens": 63, "n_pass": [461, 72, 41]}
{"time": "2021-02-20 06:41:33.838703", "score": "0.6509", "loss": "1.2643", "code": "d addHeader(Stng u){(e);if(l){newt();headers.t();}es.add(v); }", "n_tokens": 62, "n_pass": [474, 81, 42]}
{"time": "2021-02-20 06:41:35.145961", "score": "0.6652", "loss": "1.2875", "code": "d addHeader(Stng u){(e);if(l){newt();headers.t();}s.add(v); }", "n_tokens": 61, "n_pass": [476, 82, 43]}
{"time": "2021-02-20 06:41:43.004569", "score": "0.6652", "loss": "1.2875", "code": "d addHeader(Stng u){(e);if(l){newt();headers.t();}s.add(v);}", "n_tokens": 60, "n_pass": [486, 88, 44]}
{"time": "2021-02-20 06:41:48.294641", "score": "0.6532", "loss": "1.2767", "code": "d addHeader(tng u){(e);if(l){newt();headers.t();}s.add(v);}", "n_tokens": 59, "n_pass": [500, 89, 45]}
{"time": "2021-02-20 06:41:50.911145", "score": "0.6108", "loss": "1.5378", "code": "d addHeader(tg u){(e);if(l){newt();headers.t();}s.add(v);}", "n_tokens": 58, "n_pass": [502, 91, 46]}
{"time": "2021-02-20 06:41:52.233802", "score": "0.6266", "loss": "1.4632", "code": "d addHeader(t u){(e);if(l){newt();headers.t();}s.add(v);}", "n_tokens": 57, "n_pass": [503, 92, 47]}
{"time": "2021-02-20 06:41:53.624113", "score": "0.725", "loss": "1.0222", "code": "d addHeader(t u){(e);if(l){ewt();headers.t();}s.add(v);}", "n_tokens": 56, "n_pass": [518, 93, 48]}
{"time": "2021-02-20 06:41:54.931312", "score": "0.7418", "loss": "0.8811", "code": "d addHeader(t u){(e);if(l){wt();headers.t();}s.add(v);}", "n_tokens": 55, "n_pass": [519, 94, 49]}
{"time": "2021-02-20 06:41:56.265410", "score": "0.6705", "loss": "1.1717", "code": "d addHeader(t u){(e);if(l){t();headers.t();}s.add(v);}", "n_tokens": 54, "n_pass": [520, 95, 50]}

Minimal simplified code:
d addHeader(t u){(e);if(l){t();headers.t();}s.add(v);}

