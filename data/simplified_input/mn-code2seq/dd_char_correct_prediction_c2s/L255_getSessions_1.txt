
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/event/cover/UsageSessionService_getSessions.java
method_name = getSessions
method_body = public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }
predict, score, loss = getSessions, 0.9892382621765137, 0.0272984579205513

Trace of simplified code(s):
{"time": "2021-02-20 00:53:05.034137", "score": "0.9892", "loss": "0.0273", "code": "public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 209, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 00:53:06.506836", "score": "0.9586", "loss": "0.104", "code": "st getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 183, "n_pass": [20, 2, 2]}
{"time": "2021-02-20 00:53:07.838364", "score": "0.9343", "loss": "0.1695", "code": "st getSessions(java.util.List param0) { org.sakaipronService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 157, "n_pass": [22, 3, 3]}
{"time": "2021-02-20 00:53:09.233888", "score": "0.9354", "loss": "0.181", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 131, "n_pass": [23, 4, 4]}
{"time": "2021-02-20 00:53:10.527246", "score": "0.8757", "loss": "0.3709", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (sl) return null; return service.getSessions(param0); }", "n_tokens": 118, "n_pass": [40, 5, 5]}
{"time": "2021-02-20 00:53:11.873409", "score": "0.8662", "loss": "0.4441", "code": "st getSessions(java.util.List param0) { org.sakaiproance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 105, "n_pass": [42, 6, 6]}
{"time": "2021-02-20 00:53:14.868375", "score": "0.8284", "loss": "0.5595", "code": "st getSessions(java.util.List param0) {ance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 92, "n_pass": [48, 8, 7]}
{"time": "2021-02-20 00:53:22.721417", "score": "0.7658", "loss": "0.9295", "code": "st getSessions(jav.List param0) {ance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 86, "n_pass": [81, 13, 8]}
{"time": "2021-02-20 00:53:30.032386", "score": "0.8452", "loss": "0.5748", "code": "st getSessions(jav.List am0) {ance(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 83, "n_pass": [123, 18, 9]}
{"time": "2021-02-20 00:53:31.335657", "score": "0.8148", "loss": "0.7108", "code": "st getSessions(jav.List am0) {e(); if (sl) return nulvice.getSessions(param0); }", "n_tokens": 80, "n_pass": [125, 19, 10]}
{"time": "2021-02-20 00:53:32.670558", "score": "0.8244", "loss": "0.6637", "code": "st getSessions(jav.List am0) {; if (sl) return nulvice.getSessions(param0); }", "n_tokens": 77, "n_pass": [126, 20, 11]}
{"time": "2021-02-20 00:53:33.973007", "score": "0.814", "loss": "0.6729", "code": "st getSessions(jav.List am0) {; if (sl) returlvice.getSessions(param0); }", "n_tokens": 73, "n_pass": [132, 21, 12]}
{"time": "2021-02-20 00:53:35.272242", "score": "0.814", "loss": "0.6729", "code": "st getSessions(jav.List am0) {; if (sl) reture.getSessions(param0); }", "n_tokens": 69, "n_pass": [133, 22, 13]}
{"time": "2021-02-20 00:53:40.572261", "score": "0.7402", "loss": "1.1109", "code": "st getSessions(jav.List am0) {; if (sl) reture.getSessions(pa); }", "n_tokens": 65, "n_pass": [138, 26, 14]}
{"time": "2021-02-20 00:53:43.395766", "score": "0.7885", "loss": "0.7921", "code": "st getSessions(javst am0) {; if (sl) reture.getSessions(pa); }", "n_tokens": 62, "n_pass": [146, 27, 15]}
{"time": "2021-02-20 00:53:44.704204", "score": "0.8531", "loss": "0.5024", "code": "st getSessions(javst am0) {; if (sl)ture.getSessions(pa); }", "n_tokens": 59, "n_pass": [153, 28, 16]}
{"time": "2021-02-20 00:53:46.024787", "score": "0.8156", "loss": "0.6308", "code": "st getSessions(javst am0) {; if (sl)e.getSessions(pa); }", "n_tokens": 56, "n_pass": [154, 29, 17]}
{"time": "2021-02-20 00:53:52.693654", "score": "0.7388", "loss": "0.9422", "code": "st getSessions(st am0) {; if (sl)e.getSessions(pa); }", "n_tokens": 53, "n_pass": [165, 33, 18]}
{"time": "2021-02-20 00:54:11.031247", "score": "0.7805", "loss": "0.7211", "code": "t getSessions(st am0) {; if (sl)e.getSessions(pa); }", "n_tokens": 52, "n_pass": [236, 45, 19]}
{"time": "2021-02-20 00:54:30.235733", "score": "0.7671", "loss": "0.767", "code": "t getSessions(t am0) {; if (sl)e.getSessions(pa); }", "n_tokens": 51, "n_pass": [314, 54, 20]}
{"time": "2021-02-20 00:54:31.601140", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m0) {; if (sl)e.getSessions(pa); }", "n_tokens": 50, "n_pass": [316, 55, 21]}
{"time": "2021-02-20 00:54:32.894356", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m) {; if (sl)e.getSessions(pa); }", "n_tokens": 49, "n_pass": [318, 56, 22]}
{"time": "2021-02-20 00:54:34.234629", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m){; if (sl)e.getSessions(pa); }", "n_tokens": 48, "n_pass": [320, 57, 23]}
{"time": "2021-02-20 00:54:35.555712", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m){ if (sl)e.getSessions(pa); }", "n_tokens": 47, "n_pass": [322, 58, 24]}
{"time": "2021-02-20 00:54:36.857797", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m){if (sl)e.getSessions(pa); }", "n_tokens": 46, "n_pass": [323, 59, 25]}
{"time": "2021-02-20 00:54:38.233355", "score": "0.7883", "loss": "0.6843", "code": "t getSessions(t m){if(sl)e.getSessions(pa); }", "n_tokens": 45, "n_pass": [326, 60, 26]}
{"time": "2021-02-20 00:54:39.529007", "score": "0.6874", "loss": "1.1816", "code": "t getSessions(t m){if(l)e.getSessions(pa); }", "n_tokens": 44, "n_pass": [328, 61, 27]}
{"time": "2021-02-20 00:54:58.051320", "score": "0.7819", "loss": "0.6547", "code": "t getSessions(t m){if(l)e.getSessions(p); }", "n_tokens": 43, "n_pass": [346, 75, 28]}
{"time": "2021-02-20 00:54:59.372322", "score": "0.7819", "loss": "0.6547", "code": "t getSessions(t m){if(l)e.getSessions(p);}", "n_tokens": 42, "n_pass": [349, 76, 29]}

Minimal simplified code:
t getSessions(t m){if(l)e.getSessions(p);}

