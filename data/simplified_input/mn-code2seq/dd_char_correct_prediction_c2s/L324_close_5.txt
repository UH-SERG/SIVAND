
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/net/SecureSocketChannel_close.java
method_name = close
method_body = @Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }
predict, score, loss = close, 0.9053065180778503, 0.20523452758789062

Trace of simplified code(s):
{"time": "2021-02-20 05:16:45.740844", "score": "0.9053", "loss": "0.2052", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteBuffers.release(inBuf); ByteBuffers.release(outBuf); ByteBuffers.release(swapBuf); if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 319, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 05:16:47.078719", "score": "0.9809", "loss": "0.0494", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { engine.closeInbound(); } catch (SSLException ignored) { } } }", "n_tokens": 239, "n_pass": [9, 2, 2]}
{"time": "2021-02-20 05:16:48.454568", "score": "0.9728", "loss": "0.0661", "code": "@Override public void close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 219, "n_pass": [41, 3, 3]}
{"time": "2021-02-20 05:16:49.764566", "score": "0.8329", "loss": "0.8026", "code": "id close() throws IOException { socketChannel.close(); ByteB; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 200, "n_pass": [44, 4, 4]}
{"time": "2021-02-20 05:16:51.093155", "score": "0.6389", "loss": "1.5315", "code": "id close() throws IOException { socketCh; if (engine.isOutboundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 180, "n_pass": [47, 5, 5]}
{"time": "2021-02-20 05:16:52.502559", "score": "0.5706", "loss": "1.5209", "code": "id close() throws IOException { socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engine.isInboundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 170, "n_pass": [76, 6, 6]}
{"time": "2021-02-20 05:16:55.155907", "score": "0.7344", "loss": "1.2266", "code": "id close() throws IOException { socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 160, "n_pass": [82, 8, 7]}
{"time": "2021-02-20 05:16:56.475465", "score": "0.6883", "loss": "1.2839", "code": "id close() throws IO{ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 150, "n_pass": [91, 9, 8]}
{"time": "2021-02-20 05:16:59.092631", "score": "0.4861", "loss": "1.9043", "code": "id close(){ socketCh; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 140, "n_pass": [106, 11, 9]}
{"time": "2021-02-20 05:17:02.117185", "score": "0.4744", "loss": "1.8982", "code": "id close(){ soc; if (engiundDone()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 135, "n_pass": [150, 13, 10]}
{"time": "2021-02-20 05:17:03.420750", "score": "0.3311", "loss": "2.2855", "code": "id close(){ soc; if (engine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLException ignored) { } } }", "n_tokens": 130, "n_pass": [153, 14, 11]}
{"time": "2021-02-20 05:17:11.315101", "score": "0.2787", "loss": "2.6186", "code": "id close(){ soc; if (engine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion ignored) { } } }", "n_tokens": 125, "n_pass": [170, 20, 12]}
{"time": "2021-02-20 05:17:12.632801", "score": "0.2543", "loss": "2.7238", "code": "id close(){ soc; if (engine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 120, "n_pass": [172, 21, 13]}
{"time": "2021-02-20 05:17:22.316331", "score": "0.3892", "loss": "2.2433", "code": "id close(){ c; if (engine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 118, "n_pass": [255, 27, 14]}
{"time": "2021-02-20 05:17:23.627510", "score": "0.3901", "loss": "2.296", "code": "id close(){  if (engine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 116, "n_pass": [256, 28, 15]}
{"time": "2021-02-20 05:17:24.929940", "score": "0.455", "loss": "2.1523", "code": "id close(){  if (eine()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 114, "n_pass": [260, 29, 16]}
{"time": "2021-02-20 05:17:26.230951", "score": "0.5648", "loss": "1.8612", "code": "id close(){  if (ee()) { engine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 112, "n_pass": [261, 30, 17]}
{"time": "2021-02-20 05:17:27.545086", "score": "0.4873", "loss": "2.3144", "code": "id close(){  if (ee()) {ngine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 110, "n_pass": [265, 31, 18]}
{"time": "2021-02-20 05:17:28.854838", "score": "0.5883", "loss": "1.9415", "code": "id close(){  if (ee()) {ine.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 108, "n_pass": [266, 32, 19]}
{"time": "2021-02-20 05:17:30.153338", "score": "0.489", "loss": "2.2081", "code": "id close(){  if (ee()) {e.closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 106, "n_pass": [267, 33, 20]}
{"time": "2021-02-20 05:17:31.477171", "score": "0.4672", "loss": "2.5292", "code": "id close(){  if (ee()) {closeOutbound(); } while (!engundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 104, "n_pass": [268, 34, 21]}
{"time": "2021-02-20 05:17:39.369060", "score": "0.5437", "loss": "2.1048", "code": "id close(){  if (ee()) {closeOutbound(); } while (gundDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 101, "n_pass": [279, 40, 22]}
{"time": "2021-02-20 05:17:40.678557", "score": "0.4751", "loss": "2.1543", "code": "id close(){  if (ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (SSLEion id) { } } }", "n_tokens": 98, "n_pass": [280, 41, 23]}
{"time": "2021-02-20 05:17:43.359539", "score": "0.3565", "loss": "2.0792", "code": "id close(){  if (ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (Sion id) { } } }", "n_tokens": 95, "n_pass": [291, 43, 24]}
{"time": "2021-02-20 05:17:58.281755", "score": "0.3446", "loss": "2.2248", "code": "id close(){  if (ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 93, "n_pass": [405, 51, 25]}
{"time": "2021-02-20 05:18:04.397317", "score": "0.3446", "loss": "2.2248", "code": "id close(){ if (ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 92, "n_pass": [424, 54, 26]}
{"time": "2021-02-20 05:18:05.706251", "score": "0.3446", "loss": "2.2248", "code": "id close(){if (ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 91, "n_pass": [425, 55, 27]}
{"time": "2021-02-20 05:18:07.022655", "score": "0.3446", "loss": "2.2248", "code": "id close(){if(ee()) {closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 90, "n_pass": [428, 56, 28]}
{"time": "2021-02-20 05:18:08.330456", "score": "0.3174", "loss": "2.3018", "code": "id close(){if(e()) {closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 89, "n_pass": [430, 57, 29]}
{"time": "2021-02-20 05:18:09.639109", "score": "0.3174", "loss": "2.3018", "code": "id close(){if(e()){closeOutbound(); } while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 88, "n_pass": [435, 58, 30]}
{"time": "2021-02-20 05:18:28.216064", "score": "0.3174", "loss": "2.3018", "code": "id close(){if(e()){closeOutbound();} while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 87, "n_pass": [453, 72, 31]}
{"time": "2021-02-20 05:18:29.529623", "score": "0.3174", "loss": "2.3018", "code": "id close(){if(e()){closeOutbound();}while (dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 86, "n_pass": [455, 73, 32]}
{"time": "2021-02-20 05:18:30.839697", "score": "0.3174", "loss": "2.3018", "code": "id close(){if(e()){closeOutbound();}while(dDone()) { try { e; } catch (on id) { } } }", "n_tokens": 85, "n_pass": [461, 74, 33]}
{"time": "2021-02-20 05:18:32.148557", "score": "0.4249", "loss": "1.8746", "code": "id close(){if(e()){closeOutbound();}while(Done()) { try { e; } catch (on id) { } } }", "n_tokens": 84, "n_pass": [463, 75, 34]}
{"time": "2021-02-20 05:18:37.432438", "score": "0.5159", "loss": "1.2741", "code": "id close(){if(e()){closeOutbound();}while(Done) { try { e; } catch (on id) { } } }", "n_tokens": 82, "n_pass": [467, 79, 35]}
{"time": "2021-02-20 05:18:38.760918", "score": "0.8004", "loss": "0.7339", "code": "id close(){if(e()){closeOutbound();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 80, "n_pass": [473, 80, 36]}
{"time": "2021-02-20 05:18:40.075385", "score": "0.6927", "loss": "1.0355", "code": "d close(){if(e()){closeOutbound();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 79, "n_pass": [486, 81, 37]}
{"time": "2021-02-20 05:18:51.771293", "score": "0.254", "loss": "2.5223", "code": "d close(){if(e()){closeOtbound();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 78, "n_pass": [511, 88, 38]}
{"time": "2021-02-20 05:18:53.077822", "score": "0.254", "loss": "2.5223", "code": "d close(){if(e()){closeObound();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 77, "n_pass": [512, 89, 39]}
{"time": "2021-02-20 05:18:54.417850", "score": "0.254", "loss": "2.5223", "code": "d close(){if(e()){closeOound();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 76, "n_pass": [513, 90, 40]}
{"time": "2021-02-20 05:18:55.721733", "score": "0.254", "loss": "2.5223", "code": "d close(){if(e()){closeOund();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 75, "n_pass": [514, 91, 41]}
{"time": "2021-02-20 05:18:58.327890", "score": "0.254", "loss": "2.5223", "code": "d close(){if(e()){closeOud();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 74, "n_pass": [516, 93, 42]}
{"time": "2021-02-20 05:19:15.249905", "score": "0.2163", "loss": "2.8431", "code": "d close(){if(e()){closeOd();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 73, "n_pass": [572, 104, 43]}
{"time": "2021-02-20 05:19:16.554939", "score": "0.2783", "loss": "2.2485", "code": "d close(){if(e()){closeO();}while(Done) { try {  } catch (on id) { } } }", "n_tokens": 72, "n_pass": [573, 105, 44]}
{"time": "2021-02-20 05:19:17.885559", "score": "0.2233", "loss": "2.6351", "code": "d close(){if(e()){closeO();}while(one) { try {  } catch (on id) { } } }", "n_tokens": 71, "n_pass": [584, 106, 45]}
{"time": "2021-02-20 05:19:36.184709", "score": "0.2233", "loss": "2.6351", "code": "d close(){if(e()){closeO();}while(one) { try { } catch (on id) { } } }", "n_tokens": 70, "n_pass": [675, 115, 46]}
{"time": "2021-02-20 05:19:37.518907", "score": "0.2233", "loss": "2.6351", "code": "d close(){if(e()){closeO();}while(one) { try {} catch (on id) { } } }", "n_tokens": 69, "n_pass": [676, 116, 47]}
{"time": "2021-02-20 05:19:38.824220", "score": "0.2233", "loss": "2.6351", "code": "d close(){if(e()){closeO();}while(one) { try {}catch (on id) { } } }", "n_tokens": 68, "n_pass": [678, 117, 48]}
{"time": "2021-02-20 05:19:40.137748", "score": "0.2233", "loss": "2.6351", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on id) { } } }", "n_tokens": 67, "n_pass": [684, 118, 49]}
{"time": "2021-02-20 05:19:44.107414", "score": "0.2603", "loss": "2.5084", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on d) { } } }", "n_tokens": 66, "n_pass": [689, 121, 50]}
{"time": "2021-02-20 05:19:45.411267", "score": "0.2603", "loss": "2.5084", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on d){ } } }", "n_tokens": 65, "n_pass": [692, 122, 51]}
{"time": "2021-02-20 05:19:46.729563", "score": "0.2603", "loss": "2.5084", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on d){} } }", "n_tokens": 64, "n_pass": [694, 123, 52]}
{"time": "2021-02-20 05:19:48.044780", "score": "0.2603", "loss": "2.5084", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on d){}} }", "n_tokens": 63, "n_pass": [696, 124, 53]}
{"time": "2021-02-20 05:19:49.351389", "score": "0.2603", "loss": "2.5084", "code": "d close(){if(e()){closeO();}while(one) { try {}catch(on d){}}}", "n_tokens": 62, "n_pass": [698, 125, 54]}
{"time": "2021-02-20 05:20:03.660476", "score": "0.3224", "loss": "2.1189", "code": "d close(){if(e()){closeO();}while(on) { try {}catch(on d){}}}", "n_tokens": 61, "n_pass": [736, 134, 55]}
{"time": "2021-02-20 05:20:04.993752", "score": "0.3224", "loss": "2.1189", "code": "d close(){if(e()){closeO();}while(on){ try {}catch(on d){}}}", "n_tokens": 60, "n_pass": [738, 135, 56]}
{"time": "2021-02-20 05:20:06.302252", "score": "0.3224", "loss": "2.1189", "code": "d close(){if(e()){closeO();}while(on){try {}catch(on d){}}}", "n_tokens": 59, "n_pass": [740, 136, 57]}
{"time": "2021-02-20 05:20:07.616393", "score": "0.3224", "loss": "2.1189", "code": "d close(){if(e()){closeO();}while(on){try{}catch(on d){}}}", "n_tokens": 58, "n_pass": [744, 137, 58]}

Minimal simplified code:
d close(){if(e()){closeO();}while(on){try{}catch(on d){}}}

