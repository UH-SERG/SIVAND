
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/saml2/assertion/impl/ActionImpl_setNamespace.java
method_name = setNamespace
method_body = public void setNamespace(java.lang.String value) throws SAML2Exception { if (!mutable) { throw new SAML2Exception(SAML2SDKUtils.bundle.getString("objectImmutable")); } namespace = value; }
predict, score, loss = setNamespace, 0.9987492561340332, 0.005434767808765173

Trace of simplified code(s):
{"time": "2021-02-19 01:07:25.809477", "score": "0.9987", "loss": "0.0054", "code": "public void setNamespace(java.lang.String value) throws SAML2Exception { if (!mutable) { throw new SAML2Exception(SAML2SDKUtils.bundle.getString(\"objectImmutable\")); } namespace = value; }", "n_tokens": 188, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 01:07:27.552723", "score": "0.9971", "loss": "0.0306", "code": "public void setNamespace(java.lang.String value) throws SAML2Exception { if (!mutable) { throw new SAML2Exception(SAring(\"objectImmutable\")); } namespace = value; }", "n_tokens": 164, "n_pass": [25, 2, 2]}
{"time": "2021-02-19 01:07:30.050707", "score": "0.9969", "loss": "0.025", "code": "public void setNamespace(java.lang.String value) throws on { if (!mutable) { throw new SAML2Exception(SAring(\"objectImmutable\")); } namespace = value; }", "n_tokens": 152, "n_pass": [56, 3, 3]}
{"time": "2021-02-19 01:07:31.372345", "score": "0.9987", "loss": "0.0043", "code": "public void setNamespace(java.lang.String value) throws on { if (!mutable) { thrException(SAring(\"objectImmutable\")); } namespace = value; }", "n_tokens": 140, "n_pass": [59, 4, 4]}
{"time": "2021-02-19 01:07:33.507583", "score": "0.9959", "loss": "0.0169", "code": "public void setNamespace(java.lang.String value) throws on { if (!mutable) { thrion(SAring(\"objectImmutable\")); } namespace = value; }", "n_tokens": 134, "n_pass": [96, 5, 5]}
{"time": "2021-02-19 01:07:34.854366", "score": "0.9946", "loss": "0.0174", "code": "public void setNamespace(java.lang.String value) throws on { if (!mutable) { thrion(SAring(\"Immutable\")); } namespace = value; }", "n_tokens": 128, "n_pass": [98, 6, 6]}
{"time": "2021-02-19 01:07:36.253774", "score": "0.9942", "loss": "0.0234", "code": "public void setNamespace(java.lang.String value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 122, "n_pass": [99, 7, 7]}
{"time": "2021-02-19 01:07:40.296161", "score": "0.9817", "loss": "0.0697", "code": "publid setNamespace(java.lang.String value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 117, "n_pass": [106, 10, 8]}
{"time": "2021-02-19 01:07:42.374827", "score": "0.9414", "loss": "0.2706", "code": "publid setNamespace(jng.String value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 111, "n_pass": [110, 11, 9]}
{"time": "2021-02-19 01:07:44.359163", "score": "0.9533", "loss": "0.3251", "code": "publid setNamespace(jing value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 105, "n_pass": [111, 12, 10]}
{"time": "2021-02-19 01:07:48.287391", "score": "0.9521", "loss": "0.3229", "code": "d setNamespace(jing value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 100, "n_pass": [126, 15, 11]}
{"time": "2021-02-19 01:07:54.869542", "score": "0.9551", "loss": "0.1874", "code": "d setNamespace(j value) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 97, "n_pass": [184, 18, 12]}
{"time": "2021-02-19 01:07:56.179536", "score": "0.9475", "loss": "0.2101", "code": "d setNamespace(j va) throws on { if (!mutable) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 94, "n_pass": [185, 19, 13]}
{"time": "2021-02-19 01:07:57.484296", "score": "0.9359", "loss": "0.3061", "code": "d setNamespace(j va) throws on { if (table) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 91, "n_pass": [192, 20, 14]}
{"time": "2021-02-19 01:07:58.792174", "score": "0.9044", "loss": "0.488", "code": "d setNamespace(j va) throws on { if (le) { thrion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 88, "n_pass": [193, 21, 15]}
{"time": "2021-02-19 01:08:00.118784", "score": "0.9095", "loss": "0.4207", "code": "d setNamespace(j va) throws on { if (le) { ion(SAring(\"ble\")); } namespace = value; }", "n_tokens": 85, "n_pass": [196, 22, 16]}
{"time": "2021-02-19 01:08:01.515684", "score": "0.905", "loss": "0.5322", "code": "d setNamespace(j va) throws on { if (le) { (SAring(\"ble\")); } namespace = value; }", "n_tokens": 82, "n_pass": [197, 23, 17]}
{"time": "2021-02-19 01:08:02.827367", "score": "0.9246", "loss": "0.4321", "code": "d setNamespace(j va) throws on { if (le) { (SAg(\"ble\")); } namespace = value; }", "n_tokens": 79, "n_pass": [199, 24, 18]}
{"time": "2021-02-19 01:08:04.157497", "score": "0.9525", "loss": "0.2127", "code": "d setNamespace(j va) throws on { if (le) { (SAg(\"\")); } namespace = value; }", "n_tokens": 76, "n_pass": [201, 25, 19]}
{"time": "2021-02-19 01:08:10.839423", "score": "0.9547", "loss": "0.1954", "code": "d setNamespace(j va) throws on { if (le) { (SAg(\"\")); } namespace =lue; }", "n_tokens": 73, "n_pass": [208, 30, 20]}
{"time": "2021-02-19 01:08:21.652209", "score": "0.9455", "loss": "0.2371", "code": "d setNamespace(j va) throws on { if (le) { (SAg(\"\")); } namespace =e; }", "n_tokens": 71, "n_pass": [285, 36, 21]}
{"time": "2021-02-19 01:08:28.111006", "score": "0.9024", "loss": "0.5085", "code": "d setNamespace(j a) throws on { if (le) { (SAg(\"\")); } namespace =e; }", "n_tokens": 70, "n_pass": [305, 37, 22]}
{"time": "2021-02-19 01:08:29.416092", "score": "0.9024", "loss": "0.5085", "code": "d setNamespace(j a)throws on { if (le) { (SAg(\"\")); } namespace =e; }", "n_tokens": 69, "n_pass": [308, 38, 23]}
{"time": "2021-02-19 01:08:30.733344", "score": "0.8468", "loss": "0.6789", "code": "d setNamespace(j a)throws o{ if (le) { (SAg(\"\")); } namespace =e; }", "n_tokens": 67, "n_pass": [316, 39, 24]}
{"time": "2021-02-19 01:08:32.075909", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{ if (le) { (S(\"\")); } namespace =e; }", "n_tokens": 65, "n_pass": [324, 40, 25]}
{"time": "2021-02-19 01:08:50.243611", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{ if (le) { (S(\"\"));} namespace =e; }", "n_tokens": 64, "n_pass": [410, 47, 26]}
{"time": "2021-02-19 01:08:51.561874", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{ if (le) { (S(\"\"));}namespace =e; }", "n_tokens": 63, "n_pass": [411, 48, 27]}
{"time": "2021-02-19 01:09:04.716650", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{ if (le) { (S(\"\"));}namespace=e; }", "n_tokens": 62, "n_pass": [421, 58, 28]}
{"time": "2021-02-19 01:09:07.511444", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{ if (le) { (S(\"\"));}namespace=e;}", "n_tokens": 61, "n_pass": [425, 60, 29]}
{"time": "2021-02-19 01:09:14.020807", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{if (le) { (S(\"\"));}namespace=e;}", "n_tokens": 60, "n_pass": [455, 61, 30]}
{"time": "2021-02-19 01:09:15.368499", "score": "0.7893", "loss": "0.9064", "code": "d setNamespace(j a)throws o{if(le) { (S(\"\"));}namespace=e;}", "n_tokens": 59, "n_pass": [458, 62, 31]}
{"time": "2021-02-19 01:09:16.699261", "score": "0.8274", "loss": "0.6225", "code": "d setNamespace(j a)throws o{if(e) { (S(\"\"));}namespace=e;}", "n_tokens": 58, "n_pass": [460, 63, 32]}
{"time": "2021-02-19 01:09:18.053100", "score": "0.8274", "loss": "0.6225", "code": "d setNamespace(j a)throws o{if(e){ (S(\"\"));}namespace=e;}", "n_tokens": 57, "n_pass": [463, 64, 33]}
{"time": "2021-02-19 01:09:19.354974", "score": "0.8274", "loss": "0.6225", "code": "d setNamespace(j a)throws o{if(e){(S(\"\"));}namespace=e;}", "n_tokens": 56, "n_pass": [465, 65, 34]}
{"time": "2021-02-19 01:09:20.669113", "score": "0.8562", "loss": "0.598", "code": "d setNamespace(j a)throws o{if(e){((\"\"));}namespace=e;}", "n_tokens": 55, "n_pass": [467, 66, 35]}

Minimal simplified code:
d setNamespace(j a)throws o{if(e){((""));}namespace=e;}

