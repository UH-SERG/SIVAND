
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-ui/src/test/ttes_encrypt.java
method_name = encrypt
method_body = public static String encrypt(String plainText, String encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, encryptionKey); byte[] encryptedBytes = cipher.doFinal(plainText.getBytes()); return DatatypeConverter.printBase64Binary(encryptedBytes); }
predict, score, loss = encrypt, 0.9346522688865662, 0.5705467462539673

Trace of simplified code(s):
{"time": "2021-02-20 06:31:01.471472", "score": "0.9347", "loss": "0.5705", "code": "public static String encrypt(String plainText, String encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, encryptionKey); byte[] encryptedBytes = cipher.doFinal(plainText.getBytes()); return DatatypeConverter.printBase64Binary(encryptedBytes); }", "n_tokens": 274, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 06:31:02.784384", "score": "0.924", "loss": "0.63", "code": "public static String encrypt(String plainText, String encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, etes()); return DatatypeConverter.printBase64Binary(encryptedBytes); }", "n_tokens": 205, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 06:31:04.129362", "score": "0.898", "loss": "0.7515", "code": "public static String encrypt(String plainText, String encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 188, "n_pass": [39, 3, 3]}
{"time": "2021-02-20 06:31:05.437340", "score": "0.8686", "loss": "0.7014", "code": "ing encrypt(String plainText, String encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 171, "n_pass": [42, 4, 4]}
{"time": "2021-02-20 06:31:06.765087", "score": "0.7948", "loss": "1.0934", "code": "ing encrypt(Strinng encryptionKey) throws Exception { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 154, "n_pass": [44, 5, 5]}
{"time": "2021-02-20 06:31:08.090922", "score": "0.5995", "loss": "1.7768", "code": "ing encrypt(Strinng encryptionKey) { Cipher cipher = getCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 137, "n_pass": [46, 6, 6]}
{"time": "2021-02-20 06:31:10.751652", "score": "0.7611", "loss": "1.2636", "code": "ing encrypt(Strinng encryptionKey) { Ciper = getCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 129, "n_pass": [72, 8, 7]}
{"time": "2021-02-20 06:31:12.067051", "score": "0.8529", "loss": "1.3933", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(Cipher.ENCRYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 121, "n_pass": [73, 9, 8]}
{"time": "2021-02-20 06:31:13.412168", "score": "0.2674", "loss": "3.9693", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(CiYPT_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 112, "n_pass": [75, 10, 9]}
{"time": "2021-02-20 06:31:20.239183", "score": "0.3247", "loss": "3.1075", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(C_MODE, etes()); return DarintBase64Binary(encryptedBytes); }", "n_tokens": 108, "n_pass": [115, 15, 10]}
{"time": "2021-02-20 06:31:24.201910", "score": "0.2727", "loss": "2.3719", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(C_MODE, etes()); returintBase64Binary(encryptedBytes); }", "n_tokens": 103, "n_pass": [121, 18, 11]}
{"time": "2021-02-20 06:31:25.509219", "score": "0.306", "loss": "2.2271", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(C_MODE, etes()); retuase64Binary(encryptedBytes); }", "n_tokens": 98, "n_pass": [122, 19, 12]}
{"time": "2021-02-20 06:31:26.810036", "score": "0.3705", "loss": "1.5809", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(C_MODE, etes()); retuBinary(encryptedBytes); }", "n_tokens": 93, "n_pass": [123, 20, 13]}
{"time": "2021-02-20 06:31:29.422913", "score": "0.3081", "loss": "2.1284", "code": "ing encrypt(Strinng encryptionKey) { CipCipher(C_MODE, etes()); retuBinary(encdBytes); }", "n_tokens": 88, "n_pass": [126, 22, 14]}
{"time": "2021-02-20 06:31:32.781771", "score": "0.2622", "loss": "2.1942", "code": "ing encrypt(nng encryptionKey) { CipCipher(C_MODE, etes()); retuBinary(encdBytes); }", "n_tokens": 84, "n_pass": [132, 24, 15]}
{"time": "2021-02-20 06:31:40.594794", "score": "0.2491", "loss": "2.1892", "code": "ing encrypt(nng encryptionKey) { CipCipher(CE, etes()); retuBinary(encdBytes); }", "n_tokens": 80, "n_pass": [141, 30, 16]}
{"time": "2021-02-20 06:31:41.938634", "score": "0.2531", "loss": "2.2021", "code": "ing encrypt(nng encryptionKey) { CipCipher(Ctes()); retuBinary(encdBytes); }", "n_tokens": 76, "n_pass": [142, 31, 17]}
{"time": "2021-02-20 06:31:43.233525", "score": "0.2987", "loss": "2.0836", "code": "ing encrypt(nng encryptionKey) { CipCipher(Ctes()); Binary(encdBytes); }", "n_tokens": 72, "n_pass": [145, 32, 18]}
{"time": "2021-02-20 06:31:47.870530", "score": "0.2663", "loss": "2.3166", "code": "ing encrypt(nng yptionKey) { CipCipher(Ctes()); Binary(encdBytes); }", "n_tokens": 68, "n_pass": [154, 35, 19]}
{"time": "2021-02-20 06:31:49.172351", "score": "0.3011", "loss": "2.0792", "code": "ing encrypt(nng onKey) { CipCipher(Ctes()); Binary(encdBytes); }", "n_tokens": 64, "n_pass": [155, 36, 20]}
{"time": "2021-02-20 06:31:58.027360", "score": "0.2531", "loss": "2.2872", "code": "ing encrypt(nng Key) { CipCipher(Ctes()); Binary(encdBytes); }", "n_tokens": 62, "n_pass": [201, 42, 21]}
{"time": "2021-02-20 06:32:05.868113", "score": "0.2446", "loss": "2.1582", "code": "ing encrypt(nng Key) { CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 60, "n_pass": [210, 48, 22]}
{"time": "2021-02-20 06:32:16.422343", "score": "0.3596", "loss": "1.6022", "code": "ing encrypt(g Key) { CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 58, "n_pass": [228, 55, 23]}
{"time": "2021-02-20 06:32:32.027172", "score": "0.3143", "loss": "1.9143", "code": "g encrypt(g Key) { CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 56, "n_pass": [250, 67, 24]}
{"time": "2021-02-20 06:32:34.729865", "score": "0.2653", "loss": "2.143", "code": "g encrypt(g y) { CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 54, "n_pass": [257, 68, 25]}
{"time": "2021-02-20 06:32:52.399303", "score": "0.2653", "loss": "2.143", "code": "g encrypt(g y){ CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 53, "n_pass": [335, 79, 26]}
{"time": "2021-02-20 06:32:53.723511", "score": "0.2653", "loss": "2.143", "code": "g encrypt(g y){CipCipher(Cs()); Binary(encdBytes); }", "n_tokens": 52, "n_pass": [336, 80, 27]}
{"time": "2021-02-20 06:33:06.809899", "score": "0.3171", "loss": "2.0918", "code": "g encrypt(g y){CipCipher(s()); Binary(encdBytes); }", "n_tokens": 51, "n_pass": [347, 90, 28]}
{"time": "2021-02-20 06:33:08.103470", "score": "0.3171", "loss": "2.0918", "code": "g encrypt(g y){CipCipher(s());Binary(encdBytes); }", "n_tokens": 50, "n_pass": [353, 91, 29]}
{"time": "2021-02-20 06:33:17.305329", "score": "0.3037", "loss": "2.0993", "code": "g encrypt(g y){CipCipher(s());Binary(ncdBytes); }", "n_tokens": 49, "n_pass": [361, 98, 30]}
{"time": "2021-02-20 06:33:18.649640", "score": "0.2985", "loss": "2.1444", "code": "g encrypt(g y){CipCipher(s());Binary(cdBytes); }", "n_tokens": 48, "n_pass": [362, 99, 31]}
{"time": "2021-02-20 06:33:19.967757", "score": "0.3088", "loss": "1.8692", "code": "g encrypt(g y){CipCipher(s());Binary(dBytes); }", "n_tokens": 47, "n_pass": [363, 100, 32]}
{"time": "2021-02-20 06:33:21.261705", "score": "0.3516", "loss": "1.8138", "code": "g encrypt(g y){CipCipher(s());Binary(Bytes); }", "n_tokens": 46, "n_pass": [364, 101, 33]}
{"time": "2021-02-20 06:33:25.213237", "score": "0.3161", "loss": "1.7614", "code": "g encrypt(g y){CipCipher(s());Binary(Byt); }", "n_tokens": 44, "n_pass": [367, 104, 34]}
{"time": "2021-02-20 06:33:50.476577", "score": "0.3174", "loss": "1.7544", "code": "g encrypt(g y){CipCipher(s());Binary(B); }", "n_tokens": 42, "n_pass": [408, 121, 35]}
{"time": "2021-02-20 06:34:16.353027", "score": "0.3174", "loss": "1.7544", "code": "g encrypt(g y){CipCipher(s());Binary(B);}", "n_tokens": 41, "n_pass": [454, 138, 36]}

Minimal simplified code:
g encrypt(g y){CipCipher(s());Binary(B);}

