
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/jasper/compiler/SmapUtil_visit.java
method_name = visit
method_body = @Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }
predict, score, loss = visit, 0.8128259181976318, 0.4271171987056732

Trace of simplified code(s):
{"time": "2021-02-19 13:17:05.432227", "score": "0.9258", "loss": "0.168", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqualify(fileName), fileName); int iInputStartLine = mark.getLineNumber(); int iOutputStartLine = n.getBeginJavaLine(); int iOutputLineIncrement = breakAtLF ? 1 : 0; smap.addLineData(iInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 726, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 13:17:06.821998", "score": "0.9456", "loss": "0.1137", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unquInputStartLine, fileName, 1, iOutputStartLine, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 545, "n_pass": [9, 2, 2]}
{"time": "2021-02-19 13:17:08.251204", "score": "0.8884", "loss": "0.2434", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLine + extraSmap.get(i).intValue(), fileName, 1, iOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 500, "n_pass": [37, 3, 3]}
{"time": "2021-02-19 13:17:09.634391", "score": "0.9464", "loss": "0.1143", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLiniOutputStartLine, iOutputLineIncrement); } } }", "n_tokens": 454, "n_pass": [43, 4, 4]}
{"time": "2021-02-19 13:17:11.028087", "score": "0.8844", "loss": "0.2445", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } String fileName = mark.getFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 431, "n_pass": [74, 5, 5]}
{"time": "2021-02-19 13:17:12.782681", "score": "0.967", "loss": "0.0784", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unqe, iOutputLineIncrement); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 408, "n_pass": [81, 6, 6]}
{"time": "2021-02-19 13:17:14.147886", "score": "0.9709", "loss": "0.0634", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayList<Integer> extraSmap = n.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 385, "n_pass": [83, 7, 7]}
{"time": "2021-02-19 13:17:15.538838", "score": "0.9248", "loss": "0.1659", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutputStartLine += iOutputLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 362, "n_pass": [85, 8, 8]}
{"time": "2021-02-19 13:17:16.927781", "score": "0.9354", "loss": "0.1412", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineIncrement; smap.addLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 339, "n_pass": [90, 9, 9]}
{"time": "2021-02-19 13:17:18.308913", "score": "0.948", "loss": "0.1079", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iInputStartLinutLineIncrement); } } }", "n_tokens": 316, "n_pass": [91, 10, 10]}
{"time": "2021-02-19 13:17:20.072455", "score": "0.9632", "loss": "0.0782", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(inutLineIncrement); } } }", "n_tokens": 304, "n_pass": [135, 11, 11]}
{"time": "2021-02-19 13:17:21.430953", "score": "0.9581", "loss": "0.0881", "code": "@Override public void visit(Node.TemplateText n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 292, "n_pass": [136, 12, 12]}
{"time": "2021-02-19 13:17:23.172514", "score": "0.9581", "loss": "0.0881", "code": "@Override public void visit(Node.t n) throws JasperException { Mark mark = n.getStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 281, "n_pass": [141, 13, 13]}
{"time": "2021-02-19 13:17:24.530033", "score": "0.8969", "loss": "0.2003", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } SttFile(); smap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 270, "n_pass": [145, 14, 14]}
{"time": "2021-02-19 13:17:25.892910", "score": "0.869", "loss": "0.2817", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.util.ArrayLisn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 259, "n_pass": [150, 15, 15]}
{"time": "2021-02-19 13:17:27.273688", "score": "0.8482", "loss": "0.3202", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.isn.getExtraSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 248, "n_pass": [153, 16, 16]}
{"time": "2021-02-19 13:17:28.623945", "score": "0.8308", "loss": "0.3465", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); java.aSmap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 237, "n_pass": [154, 17, 17]}
{"time": "2021-02-19 13:17:30.420592", "score": "0.7484", "loss": "0.5646", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (extraSmap != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 231, "n_pass": [218, 18, 18]}
{"time": "2021-02-19 13:17:31.788819", "score": "0.617", "loss": "0.9944", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exp != null) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 225, "n_pass": [221, 19, 19]}
{"time": "2021-02-19 13:17:33.139404", "score": "0.5894", "loss": "0.9926", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i < extraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 219, "n_pass": [222, 20, 20]}
{"time": "2021-02-19 13:17:34.514319", "score": "0.6128", "loss": "0.9766", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; iraSmap.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 213, "n_pass": [227, 21, 21]}
{"time": "2021-02-19 13:17:35.878995", "score": "0.4246", "loss": "1.5785", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOutLineData(iment); } } }", "n_tokens": 207, "n_pass": [228, 22, 22]}
{"time": "2021-02-19 13:17:37.231049", "score": "0.7816", "loss": "0.5513", "code": "@Override public void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 201, "n_pass": [232, 23, 23]}
{"time": "2021-02-19 13:17:38.581260", "score": "0.5618", "loss": "1.1557", "code": "@Overpublic void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 196, "n_pass": [237, 24, 24]}
{"time": "2021-02-19 13:17:39.927187", "score": "0.5618", "loss": "1.1557", "code": "@Overc void visit(Node.t n) throws JasperException { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 191, "n_pass": [238, 25, 25]}
{"time": "2021-02-19 13:17:44.800671", "score": "0.4629", "loss": "1.543", "code": "@Overc void visit(Node.t n) throws JasperExce { MargetStart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 186, "n_pass": [247, 28, 26]}
{"time": "2021-02-19 13:17:46.147802", "score": "0.5028", "loss": "1.4067", "code": "@Overc void visit(Node.t n) throws JasperExce { Matart(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 181, "n_pass": [249, 29, 27]}
{"time": "2021-02-19 13:17:52.349725", "score": "0.4966", "loss": "1.5671", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mark == null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 178, "n_pass": [346, 33, 28]}
{"time": "2021-02-19 13:17:53.727487", "score": "0.4434", "loss": "1.7283", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (ma== null) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 175, "n_pass": [351, 34, 29]}
{"time": "2021-02-19 13:17:55.072440", "score": "0.454", "loss": "1.5862", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (manull) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 172, "n_pass": [352, 35, 30]}
{"time": "2021-02-19 13:17:56.454035", "score": "0.5564", "loss": "1.3034", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { return; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 169, "n_pass": [353, 36, 31]}
{"time": "2021-02-19 13:17:57.801095", "score": "0.4705", "loss": "1.6682", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } Stap.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 166, "n_pass": [356, 37, 32]}
{"time": "2021-02-19 13:17:59.149077", "score": "0.2697", "loss": "2.0515", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt); jaap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 163, "n_pass": [359, 38, 33]}
{"time": "2021-02-19 13:18:04.535396", "score": "0.4206", "loss": "1.5834", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (exull) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 160, "n_pass": [365, 42, 34]}
{"time": "2021-02-19 13:18:05.888734", "score": "0.5808", "loss": "1.1655", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for (int i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 157, "n_pass": [370, 43, 35]}
{"time": "2021-02-19 13:18:07.257474", "score": "0.3804", "loss": "1.8851", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i = 0; i.size(); i++) { iOData(iment); } } }", "n_tokens": 154, "n_pass": [374, 44, 36]}
{"time": "2021-02-19 13:18:08.611786", "score": "0.6193", "loss": "1.2508", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); i++) { iOData(iment); } } }", "n_tokens": 151, "n_pass": [376, 45, 37]}
{"time": "2021-02-19 13:18:11.319817", "score": "0.7493", "loss": "0.8841", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) { iOData(iment); } } }", "n_tokens": 148, "n_pass": [381, 47, 38]}
{"time": "2021-02-19 13:18:12.697414", "score": "0.8322", "loss": "0.6089", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {Data(iment); } } }", "n_tokens": 145, "n_pass": [383, 48, 39]}
{"time": "2021-02-19 13:18:14.032347", "score": "0.852", "loss": "0.6024", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(iment); } } }", "n_tokens": 142, "n_pass": [384, 49, 40]}
{"time": "2021-02-19 13:18:15.368803", "score": "0.839", "loss": "0.6861", "code": "@Overc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 139, "n_pass": [386, 50, 41]}
{"time": "2021-02-19 13:18:16.708318", "score": "0.7669", "loss": "0.7969", "code": "@Orc void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 137, "n_pass": [391, 51, 42]}
{"time": "2021-02-19 13:18:18.060741", "score": "0.8752", "loss": "0.6021", "code": "@O void visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 135, "n_pass": [392, 52, 43]}
{"time": "2021-02-19 13:18:19.768151", "score": "0.3971", "loss": "1.4643", "code": "@O vd visit(Node.t n) throws JasperExce { Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 133, "n_pass": [394, 53, 44]}
{"time": "2021-02-19 13:18:27.555072", "score": "0.4154", "loss": "1.5204", "code": "@O vd visit(Node.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addFile(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 130, "n_pass": [408, 58, 45]}
{"time": "2021-02-19 13:18:31.610964", "score": "0.4068", "loss": "1.6265", "code": "@O vd visit(Node.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for ( i ; i.size(); ) {a(it); } } }", "n_tokens": 127, "n_pass": [420, 61, 46]}
{"time": "2021-02-19 13:18:32.978500", "score": "0.3976", "loss": "1.5869", "code": "@O vd visit(Node.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 124, "n_pass": [430, 62, 47]}
{"time": "2021-02-19 13:18:35.647102", "score": "0.2826", "loss": "2.2339", "code": " vd visit(Node.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 122, "n_pass": [440, 64, 48]}
{"time": "2021-02-19 13:18:36.976501", "score": "0.3705", "loss": "2.1927", "code": "d visit(Node.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 120, "n_pass": [441, 65, 49]}
{"time": "2021-02-19 13:18:56.209793", "score": "0.314", "loss": "2.4409", "code": "d visit(Nde.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 119, "n_pass": [577, 74, 50]}
{"time": "2021-02-19 13:18:57.544168", "score": "0.3094", "loss": "2.2311", "code": "d visit(Ne.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 118, "n_pass": [578, 75, 51]}
{"time": "2021-02-19 13:18:58.884597", "score": "0.3123", "loss": "2.1933", "code": "d visit(N.t n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 117, "n_pass": [579, 76, 52]}
{"time": "2021-02-19 13:19:00.231870", "score": "0.6732", "loss": "0.9961", "code": "d visit(Nt n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 116, "n_pass": [580, 77, 53]}
{"time": "2021-02-19 13:19:01.563264", "score": "0.5251", "loss": "1.4162", "code": "d visit(N n) throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 115, "n_pass": [581, 78, 54]}
{"time": "2021-02-19 13:19:02.915729", "score": "0.5251", "loss": "1.4162", "code": "d visit(N n)throws JasperEx{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 114, "n_pass": [585, 79, 55]}
{"time": "2021-02-19 13:19:13.569998", "score": "0.569", "loss": "1.2908", "code": "d visit(N n)throws JasperE{ Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 113, "n_pass": [600, 87, 56]}
{"time": "2021-02-19 13:19:14.901782", "score": "0.569", "loss": "1.2908", "code": "d visit(N n)throws JasperE{Mrt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 112, "n_pass": [602, 88, 57]}
{"time": "2021-02-19 13:19:16.261321", "score": "0.7807", "loss": "0.7459", "code": "d visit(N n)throws JasperE{rt(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 111, "n_pass": [603, 89, 58]}
{"time": "2021-02-19 13:19:17.592320", "score": "0.7345", "loss": "0.825", "code": "d visit(N n)throws JasperE{t(); if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 110, "n_pass": [604, 90, 59]}
{"time": "2021-02-19 13:19:18.925255", "score": "0.7345", "loss": "0.825", "code": "d visit(N n)throws JasperE{t();if (mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 109, "n_pass": [609, 91, 60]}
{"time": "2021-02-19 13:19:20.303649", "score": "0.7345", "loss": "0.825", "code": "d visit(N n)throws JasperE{t();if(mal) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 108, "n_pass": [612, 92, 61]}
{"time": "2021-02-19 13:19:21.635128", "score": "0.6986", "loss": "0.9426", "code": "d visit(N n)throws JasperE{t();if(al) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 107, "n_pass": [614, 93, 62]}
{"time": "2021-02-19 13:19:22.981600", "score": "0.6698", "loss": "1.1453", "code": "d visit(N n)throws JasperE{t();if(l) { rrn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 106, "n_pass": [615, 94, 63]}
{"time": "2021-02-19 13:19:24.313503", "score": "0.8111", "loss": "0.6883", "code": "d visit(N n)throws JasperE{t();if(l) {rn; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 104, "n_pass": [618, 95, 64]}
{"time": "2021-02-19 13:19:25.663593", "score": "0.8294", "loss": "0.5544", "code": "d visit(N n)throws JasperE{t();if(l) {; } p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 102, "n_pass": [619, 96, 65]}
{"time": "2021-02-19 13:19:27.007161", "score": "0.8294", "loss": "0.5544", "code": "d visit(N n)throws JasperE{t();if(l) {} p.addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 100, "n_pass": [620, 97, 66]}
{"time": "2021-02-19 13:19:28.360407", "score": "0.631", "loss": "0.9922", "code": "d visit(N n)throws JasperE{t();if(l) {} addF(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 98, "n_pass": [622, 98, 67]}
{"time": "2021-02-19 13:19:31.030578", "score": "0.3199", "loss": "1.7583", "code": "d visit(N n)throws JasperE{t();if(l) {} ad(unt);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 96, "n_pass": [624, 100, 68]}
{"time": "2021-02-19 13:19:32.359805", "score": "0.2105", "loss": "2.4223", "code": "d visit(N n)throws JasperE{t();if(l) {} ad(u);ap(); if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 94, "n_pass": [626, 101, 69]}
{"time": "2021-02-19 13:19:33.690387", "score": "0.2024", "loss": "2.3706", "code": "d visit(N n)throws JasperE{t();if(l) {} ad(u);ap; if (ex) { for (; i.size(); ) {a(it); } } }", "n_tokens": 92, "n_pass": [629, 102, 70]}
{"time": "2021-02-19 13:19:37.695155", "score": "0.3003", "loss": "1.9437", "code": "d visit(N n)throws JasperE{t();if(l) {} ad(u);ap; if (ex) { for (; i.size(); ) {a(); } } }", "n_tokens": 90, "n_pass": [647, 105, 71]}
{"time": "2021-02-19 13:19:49.643494", "score": "0.3552", "loss": "1.5985", "code": "d visit(N n)throws Jasper{t();if(l) {} ad(u);ap; if (ex) { for (; i.size(); ) {a(); } } }", "n_tokens": 89, "n_pass": [677, 112, 72]}
{"time": "2021-02-19 13:19:50.977324", "score": "0.299", "loss": "1.6736", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);ap; if (ex) { for (; i.size(); ) {a(); } } }", "n_tokens": 87, "n_pass": [689, 113, 73]}
{"time": "2021-02-19 13:19:52.330181", "score": "0.6876", "loss": "0.8214", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);; if (ex) { for (; i.size(); ) {a(); } } }", "n_tokens": 85, "n_pass": [692, 114, 74]}
{"time": "2021-02-19 13:19:53.651003", "score": "0.7254", "loss": "0.7696", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (; i.size(); ) {a(); } } }", "n_tokens": 83, "n_pass": [693, 115, 75]}
{"time": "2021-02-19 13:19:54.982482", "score": "0.33", "loss": "1.6865", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (; iize(); ) {a(); } } }", "n_tokens": 81, "n_pass": [703, 116, 76]}
{"time": "2021-02-19 13:19:56.304804", "score": "0.4323", "loss": "1.4018", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (; ie(); ) {a(); } } }", "n_tokens": 79, "n_pass": [704, 117, 77]}
{"time": "2021-02-19 13:20:08.272696", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (;e(); ) {a(); } } }", "n_tokens": 77, "n_pass": [760, 124, 78]}
{"time": "2021-02-19 13:20:25.289914", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (;e(); ){a(); } } }", "n_tokens": 76, "n_pass": [861, 131, 79]}
{"time": "2021-02-19 13:20:26.632374", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (;e(); ){a();} } }", "n_tokens": 75, "n_pass": [866, 132, 80]}
{"time": "2021-02-19 13:20:27.970099", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (;e(); ){a();}} }", "n_tokens": 74, "n_pass": [868, 133, 81]}
{"time": "2021-02-19 13:20:29.324009", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l) {} (u);if (ex) { for (;e(); ){a();}}}", "n_tokens": 73, "n_pass": [870, 134, 82]}
{"time": "2021-02-19 13:20:41.140741", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l){} (u);if (ex) { for (;e(); ){a();}}}", "n_tokens": 72, "n_pass": [907, 141, 83]}
{"time": "2021-02-19 13:20:42.465927", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if (ex) { for (;e(); ){a();}}}", "n_tokens": 71, "n_pass": [910, 142, 84]}
{"time": "2021-02-19 13:20:43.796940", "score": "0.4256", "loss": "1.4664", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(ex) { for (;e(); ){a();}}}", "n_tokens": 70, "n_pass": [917, 143, 85]}
{"time": "2021-02-19 13:20:45.122657", "score": "0.3205", "loss": "1.8036", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(x) { for (;e(); ){a();}}}", "n_tokens": 69, "n_pass": [919, 144, 86]}
{"time": "2021-02-19 13:20:46.476678", "score": "0.3205", "loss": "1.8036", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(x){ for (;e(); ){a();}}}", "n_tokens": 68, "n_pass": [922, 145, 87]}
{"time": "2021-02-19 13:20:47.797763", "score": "0.3205", "loss": "1.8036", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(x){for (;e(); ){a();}}}", "n_tokens": 67, "n_pass": [924, 146, 88]}
{"time": "2021-02-19 13:20:49.124775", "score": "0.3205", "loss": "1.8036", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(x){for(;e(); ){a();}}}", "n_tokens": 66, "n_pass": [928, 147, 89]}
{"time": "2021-02-19 13:20:50.449141", "score": "0.3205", "loss": "1.8036", "code": "d visit(N n)throws Jasper{t();if(l){}(u);if(x){for(;e();){a();}}}", "n_tokens": 65, "n_pass": [935, 148, 90]}

Minimal simplified code:
d visit(N n)throws Jasper{t();if(l){}(u);if(x){for(;e();){a();}}}

