
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/commasrl/src/main/java/edu/illinois/cs/cogcomp/comma/lbj/ParseTreeFeature_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9999626874923706, 0.011322000063955784

Trace of simplified code(s):
{"time": "2021-02-19 23:52:49.097423", "score": "1.0", "loss": "0.0113", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 387, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 23:52:50.512963", "score": "1.0", "loss": "0.012", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 290, "n_pass": [10, 2, 2]}
{"time": "2021-02-19 23:52:51.920190", "score": "1.0", "loss": "0.0111", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { StrintClass().getName(); System.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 242, "n_pass": [23, 3, 3]}
{"time": "2021-02-19 23:52:53.326573", "score": "1.0", "loss": "0.0108", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 218, "n_pass": [39, 4, 4]}
{"time": "2021-02-19 23:52:54.723933", "score": "0.9999", "loss": "0.0161", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 194, "n_pass": [41, 5, 5]}
{"time": "2021-02-19 23:52:57.864119", "score": "0.9999", "loss": "0.0195", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinem.err.println(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 182, "n_pass": [70, 7, 6]}
{"time": "2021-02-19 23:52:59.252049", "score": "1.0", "loss": "0.0197", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); new Exceptionstem.exit(1); } return super.classify(examples); }", "n_tokens": 170, "n_pass": [77, 8, 7]}
{"time": "2021-02-19 23:53:00.608811", "score": "1.0", "loss": "0.0178", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); nstem.exit(1); } return super.classify(examples); }", "n_tokens": 158, "n_pass": [80, 9, 8]}
{"time": "2021-02-19 23:53:01.986412", "score": "0.9999", "loss": "0.0178", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } return super.classify(examples); }", "n_tokens": 146, "n_pass": [81, 10, 9]}
{"time": "2021-02-19 23:53:05.118701", "score": "0.9196", "loss": "0.5232", "code": "reVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 140, "n_pass": [119, 12, 10]}
{"time": "2021-02-19 23:53:09.185149", "score": "0.807", "loss": "0.7375", "code": "or[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 134, "n_pass": [124, 15, 11]}
{"time": "2021-02-19 23:53:11.278400", "score": "0.844", "loss": "0.6701", "code": "or[] classify(Object[] es) { if (!(examples instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 128, "n_pass": [129, 16, 12]}
{"time": "2021-02-19 23:53:12.612507", "score": "0.8476", "loss": "0.6917", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) { Strinln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 122, "n_pass": [132, 17, 13]}
{"time": "2021-02-19 23:53:13.963739", "score": "0.9199", "loss": "0.4761", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Classifieinput.\"); n; } reuper.classify(examples); }", "n_tokens": 116, "n_pass": [137, 18, 14]}
{"time": "2021-02-19 23:53:15.296581", "score": "0.9199", "loss": "0.4761", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cleinput.\"); n; } reuper.classify(examples); }", "n_tokens": 110, "n_pass": [139, 19, 15]}
{"time": "2021-02-19 23:53:16.651026", "score": "0.962", "loss": "0.3172", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); n; } reuper.classify(examples); }", "n_tokens": 104, "n_pass": [140, 20, 16]}
{"time": "2021-02-19 23:53:21.593209", "score": "0.989", "loss": "0.2098", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); } reuper.classify(examples); }", "n_tokens": 101, "n_pass": [193, 23, 17]}
{"time": "2021-02-19 23:53:22.925812", "score": "0.9925", "loss": "0.1821", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }uper.classify(examples); }", "n_tokens": 98, "n_pass": [195, 24, 18]}
{"time": "2021-02-19 23:53:24.265384", "score": "0.9942", "loss": "0.1561", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(examples); }", "n_tokens": 95, "n_pass": [196, 25, 19]}
{"time": "2021-02-19 23:53:29.758452", "score": "0.9946", "loss": "0.1368", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(eples); }", "n_tokens": 92, "n_pass": [201, 29, 20]}
{"time": "2021-02-19 23:53:31.111140", "score": "0.9982", "loss": "0.0697", "code": "or[] classify(Object[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 88, "n_pass": [202, 30, 21]}
{"time": "2021-02-19 23:53:33.207742", "score": "0.9929", "loss": "0.0648", "code": "or[] classify(Oct[] es) { if (!(es instanceof Comma[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 85, "n_pass": [209, 31, 22]}
{"time": "2021-02-19 23:53:34.590687", "score": "0.9929", "loss": "0.0539", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co[])) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 82, "n_pass": [221, 32, 23]}
{"time": "2021-02-19 23:53:42.169824", "score": "0.9981", "loss": "0.0356", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {ln(\"Cl.\"); }r.classify(e); }", "n_tokens": 80, "n_pass": [308, 36, 24]}
{"time": "2021-02-19 23:53:43.536774", "score": "0.9978", "loss": "0.0472", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {(\"Cl.\"); }r.classify(e); }", "n_tokens": 78, "n_pass": [311, 37, 25]}
{"time": "2021-02-19 23:53:44.894762", "score": "0.997", "loss": "0.052", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }r.classify(e); }", "n_tokens": 76, "n_pass": [313, 38, 26]}
{"time": "2021-02-19 23:53:46.255081", "score": "0.9816", "loss": "0.1314", "code": "or[] classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 74, "n_pass": [317, 39, 27]}
{"time": "2021-02-19 23:53:53.088269", "score": "0.9755", "loss": "0.1425", "code": "r[] classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 73, "n_pass": [325, 44, 28]}
{"time": "2021-02-19 23:53:54.475459", "score": "0.9755", "loss": "0.1425", "code": "r[]classify(Oct[] es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 72, "n_pass": [329, 45, 29]}
{"time": "2021-02-19 23:53:58.810535", "score": "0.9466", "loss": "0.2838", "code": "r[]classify(ct[] es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 71, "n_pass": [339, 46, 30]}
{"time": "2021-02-19 23:54:00.180128", "score": "0.9555", "loss": "0.2566", "code": "r[]classify(t[] es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 70, "n_pass": [340, 47, 31]}
{"time": "2021-02-19 23:54:01.554697", "score": "0.9555", "loss": "0.2566", "code": "r[]classify(t[]es) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 69, "n_pass": [344, 48, 32]}
{"time": "2021-02-19 23:54:02.906995", "score": "0.9129", "loss": "0.3435", "code": "r[]classify(t[]s) { if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 68, "n_pass": [345, 49, 33]}
{"time": "2021-02-19 23:54:04.241520", "score": "0.9129", "loss": "0.3435", "code": "r[]classify(t[]s){ if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 67, "n_pass": [348, 50, 34]}
{"time": "2021-02-19 23:54:05.558808", "score": "0.9129", "loss": "0.3435", "code": "r[]classify(t[]s){if (!(es instanceof Co)) {(\".\"); }classify(e); }", "n_tokens": 66, "n_pass": [350, 51, 35]}
{"time": "2021-02-19 23:54:18.153527", "score": "0.9503", "loss": "0.2085", "code": "r[]classify(t[]s){if (!(es instanceof o)) {(\".\"); }classify(e); }", "n_tokens": 65, "n_pass": [451, 56, 36]}
{"time": "2021-02-19 23:54:19.525673", "score": "0.9503", "loss": "0.2085", "code": "r[]classify(t[]s){if (!(es instanceof o)){(\".\"); }classify(e); }", "n_tokens": 64, "n_pass": [454, 57, 37]}
{"time": "2021-02-19 23:54:20.906320", "score": "0.9611", "loss": "0.1615", "code": "r[]classify(t[]s){if (!(es instanceof o)){(\"\"); }classify(e); }", "n_tokens": 63, "n_pass": [458, 58, 38]}
{"time": "2021-02-19 23:54:22.250923", "score": "0.9611", "loss": "0.1615", "code": "r[]classify(t[]s){if (!(es instanceof o)){(\"\");}classify(e); }", "n_tokens": 62, "n_pass": [462, 59, 39]}
{"time": "2021-02-19 23:54:34.419535", "score": "0.1524", "loss": "3.1879", "code": "r[]classify(t[]s){if (!(es instanceof o)){(\"\");}classify(); }", "n_tokens": 61, "n_pass": [473, 68, 40]}
{"time": "2021-02-19 23:54:35.775841", "score": "0.1524", "loss": "3.1879", "code": "r[]classify(t[]s){if (!(es instanceof o)){(\"\");}classify();}", "n_tokens": 60, "n_pass": [476, 69, 41]}
{"time": "2021-02-19 23:54:40.159888", "score": "0.1524", "loss": "3.1879", "code": "r[]classify(t[]s){if(!(es instanceof o)){(\"\");}classify();}", "n_tokens": 59, "n_pass": [498, 70, 42]}
{"time": "2021-02-19 23:54:41.519559", "score": "0.2646", "loss": "2.5486", "code": "r[]classify(t[]s){if((es instanceof o)){(\"\");}classify();}", "n_tokens": 58, "n_pass": [500, 71, 43]}

Minimal simplified code:
r[]classify(t[]s){if((es instanceof o)){("");}classify();}

