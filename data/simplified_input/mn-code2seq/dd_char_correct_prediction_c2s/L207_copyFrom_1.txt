
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CreateRoleNode_copyFrom.java
method_name = copyFrom
method_body = public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }
predict, score, loss = copyFrom, 0.9993758201599121, 0.0018148791277781129

Trace of simplified code(s):
{"time": "2021-02-19 21:54:23.313182", "score": "0.9994", "loss": "0.0018", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 21:54:24.671838", "score": "0.9989", "loss": "0.0027", "code": "d copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 151, "n_pass": [44, 2, 2]}
{"time": "2021-02-19 21:54:26.007934", "score": "0.9986", "loss": "0.0032", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 141, "n_pass": [48, 3, 3]}
{"time": "2021-02-19 21:54:28.695045", "score": "0.999", "loss": "0.0025", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 131, "n_pass": [52, 5, 4]}
{"time": "2021-02-19 21:54:30.040424", "score": "0.9993", "loss": "0.0022", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) .name = other.name; }", "n_tokens": 121, "n_pass": [56, 6, 5]}
{"time": "2021-02-19 21:54:31.375954", "score": "0.9984", "loss": "0.004", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) her.name; }", "n_tokens": 111, "n_pass": [57, 7, 6]}
{"time": "2021-02-19 21:54:34.071815", "score": "0.9988", "loss": "0.0031", "code": "d copyFrom(QueryTreeNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 106, "n_pass": [91, 9, 7]}
{"time": "2021-02-19 21:54:36.158400", "score": "0.9995", "loss": "0.0017", "code": "d copyFrom(QuerNode node) throws Stption { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 101, "n_pass": [95, 10, 8]}
{"time": "2021-02-19 21:54:37.516574", "score": "0.9995", "loss": "0.0015", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); Node other = (CreateRoleNode) ame; }", "n_tokens": 96, "n_pass": [100, 11, 9]}
{"time": "2021-02-19 21:54:41.490960", "score": "0.9992", "loss": "0.0021", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (CreateRoleNode) ame; }", "n_tokens": 91, "n_pass": [106, 14, 10]}
{"time": "2021-02-19 21:54:42.816035", "score": "0.9992", "loss": "0.002", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (CRoleNode) ame; }", "n_tokens": 86, "n_pass": [109, 15, 11]}
{"time": "2021-02-19 21:54:44.158752", "score": "0.9994", "loss": "0.0015", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (Code) ame; }", "n_tokens": 81, "n_pass": [110, 16, 12]}
{"time": "2021-02-19 21:54:48.910146", "score": "0.9995", "loss": "0.0013", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (e) ame; }", "n_tokens": 78, "n_pass": [159, 19, 13]}
{"time": "2021-02-19 21:54:50.232752", "score": "0.9992", "loss": "0.0027", "code": "d copyFrom(QuerNode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 75, "n_pass": [161, 20, 14]}
{"time": "2021-02-19 21:54:53.430524", "score": "0.9994", "loss": "0.003", "code": "d copyFrom(QrNode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 73, "n_pass": [169, 21, 15]}
{"time": "2021-02-19 21:54:54.753356", "score": "0.9991", "loss": "0.0043", "code": "d copyFrom(Qode node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 71, "n_pass": [170, 22, 16]}
{"time": "2021-02-19 21:54:56.064323", "score": "0.9994", "loss": "0.0029", "code": "d copyFrom(Qe node) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 69, "n_pass": [171, 23, 17]}
{"time": "2021-02-19 21:54:57.397886", "score": "0.9996", "loss": "0.0026", "code": "d copyFrom(Qe de) throws St { super.copyFrom(node); other = (e) ; }", "n_tokens": 67, "n_pass": [173, 24, 18]}
{"time": "2021-02-19 21:54:58.719568", "score": "0.8379", "loss": "0.4998", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(node); other = (e) ; }", "n_tokens": 64, "n_pass": [181, 25, 19]}
{"time": "2021-02-19 21:55:06.667028", "score": "0.677", "loss": "1.1077", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(node); oth= (e) ; }", "n_tokens": 61, "n_pass": [189, 31, 20]}
{"time": "2021-02-19 21:55:17.892363", "score": "0.7765", "loss": "0.6921", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(node); h= (e) ; }", "n_tokens": 59, "n_pass": [262, 36, 21]}
{"time": "2021-02-19 21:55:19.233263", "score": "0.7826", "loss": "0.6131", "code": "d copyFrom(Qe de) throws St { sr.copyFrom(node);  (e) ; }", "n_tokens": 57, "n_pass": [263, 37, 22]}
{"time": "2021-02-19 21:55:24.261398", "score": "0.9178", "loss": "0.2088", "code": "d copyFrom(e de) throws St { sr.copyFrom(node);  (e) ; }", "n_tokens": 56, "n_pass": [279, 38, 23]}
{"time": "2021-02-19 21:55:25.577334", "score": "0.8163", "loss": "0.561", "code": "d copyFrom(e e) throws St { sr.copyFrom(node);  (e) ; }", "n_tokens": 55, "n_pass": [282, 39, 24]}
{"time": "2021-02-19 21:55:26.898197", "score": "0.8163", "loss": "0.561", "code": "d copyFrom(e e)throws St { sr.copyFrom(node);  (e) ; }", "n_tokens": 54, "n_pass": [285, 40, 25]}
{"time": "2021-02-19 21:55:29.568134", "score": "0.7421", "loss": "0.7927", "code": "d copyFrom(e e)throws S { sr.copyFrom(node);  (e) ; }", "n_tokens": 53, "n_pass": [294, 42, 26]}
{"time": "2021-02-19 21:55:30.883618", "score": "0.7421", "loss": "0.7927", "code": "d copyFrom(e e)throws S{ sr.copyFrom(node);  (e) ; }", "n_tokens": 52, "n_pass": [295, 43, 27]}
{"time": "2021-02-19 21:55:32.197895", "score": "0.7421", "loss": "0.7927", "code": "d copyFrom(e e)throws S{sr.copyFrom(node);  (e) ; }", "n_tokens": 51, "n_pass": [297, 44, 28]}
{"time": "2021-02-19 21:55:33.531540", "score": "0.7112", "loss": "0.9732", "code": "d copyFrom(e e)throws S{r.copyFrom(node);  (e) ; }", "n_tokens": 50, "n_pass": [298, 45, 29]}
{"time": "2021-02-19 21:55:42.831413", "score": "0.8158", "loss": "0.6436", "code": "d copyFrom(e e)throws S{r.copyFrom(ne);  (e) ; }", "n_tokens": 48, "n_pass": [307, 52, 30]}
{"time": "2021-02-19 21:55:57.831639", "score": "0.8158", "loss": "0.6436", "code": "d copyFrom(e e)throws S{r.copyFrom(ne); (e) ; }", "n_tokens": 47, "n_pass": [366, 59, 31]}
{"time": "2021-02-19 21:55:59.148462", "score": "0.8158", "loss": "0.6436", "code": "d copyFrom(e e)throws S{r.copyFrom(ne); (e); }", "n_tokens": 46, "n_pass": [369, 60, 32]}
{"time": "2021-02-19 21:56:00.485126", "score": "0.8158", "loss": "0.6436", "code": "d copyFrom(e e)throws S{r.copyFrom(ne); (e);}", "n_tokens": 45, "n_pass": [371, 61, 33]}
{"time": "2021-02-19 21:56:17.403214", "score": "0.5502", "loss": "1.7931", "code": "d copyFrom(e e)throws S{r.copyFrom(e); (e);}", "n_tokens": 44, "n_pass": [408, 71, 34]}
{"time": "2021-02-19 21:56:20.078223", "score": "0.5502", "loss": "1.7931", "code": "d copyFrom(e e)throws S{r.copyFrom(e);(e);}", "n_tokens": 43, "n_pass": [412, 73, 35]}

Minimal simplified code:
d copyFrom(e e)throws S{r.copyFrom(e);(e);}

