
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioSelectorPool_open.java
method_name = open
method_body = public void open() throws IOException { enabled = true; getSharedSelector(); if (SHARED) { blockingSelector = new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }
predict, score, loss = open, 0.713512122631073, 0.5648782849311829

Trace of simplified code(s):
{"time": "2021-02-20 17:18:51.750899", "score": "0.7135", "loss": "0.5649", "code": "public void open() throws IOException { enabled = true; getSharedSelector(); if (SHARED) { blockingSelector = new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }", "n_tokens": 184, "n_pass": [1, 1, 1]}
{"time": "2021-02-20 17:18:53.090939", "score": "0.7937", "loss": "0.4408", "code": "public void open() throws IOException { enabled = true; getSharedSelector(); if (SHARED) { blockingSelector.open(getSharedSelector()); } }", "n_tokens": 138, "n_pass": [10, 2, 2]}
{"time": "2021-02-20 17:18:54.422960", "score": "0.9129", "loss": "0.2618", "code": "public void open() throws IOException { enablector(); if (SHARED) { blockingSelector.open(getSharedSelector()); } }", "n_tokens": 115, "n_pass": [23, 3, 3]}
{"time": "2021-02-20 17:18:55.721389", "score": "0.839", "loss": "0.631", "code": "public void open() throws IOException { enablector(); if (SHARED) {ector.open(getSharedSelector()); } }", "n_tokens": 103, "n_pass": [40, 4, 4]}
{"time": "2021-02-20 17:18:58.694495", "score": "0.9583", "loss": "0.1626", "code": "public void open() throws IOException { enablector(); if (SHARED) {open(getSharedSelector()); } }", "n_tokens": 97, "n_pass": [68, 6, 5]}
{"time": "2021-02-20 17:18:59.987875", "score": "0.896", "loss": "0.3773", "code": "public void open() throws IOException { enablector(); if (SHARED) {open(gedSelector()); } }", "n_tokens": 91, "n_pass": [69, 7, 6]}
{"time": "2021-02-20 17:19:01.282470", "score": "0.7023", "loss": "1.2848", "code": "public void open() throws IOException { enablector(); if (SHARED) {open(gctor()); } }", "n_tokens": 85, "n_pass": [70, 8, 7]}
{"time": "2021-02-20 17:19:02.574574", "score": "0.6954", "loss": "1.0531", "code": "public void open() throws IOException { enablector(); if (SHARED) {open(g); } }", "n_tokens": 79, "n_pass": [71, 9, 8]}
{"time": "2021-02-20 17:19:03.878870", "score": "0.565", "loss": "1.644", "code": "publid open() throws IOException { enablector(); if (SHARED) {open(g); } }", "n_tokens": 74, "n_pass": [74, 10, 9]}
{"time": "2021-02-20 17:19:05.547595", "score": "0.4085", "loss": "2.5533", "code": "publid open() throws IOExc { enablector(); if (SHARED) {open(g); } }", "n_tokens": 68, "n_pass": [79, 11, 10]}
{"time": "2021-02-20 17:19:06.870193", "score": "0.4085", "loss": "2.5533", "code": "publid open() throws IOExc { enar(); if (SHARED) {open(g); } }", "n_tokens": 62, "n_pass": [81, 12, 11]}
{"time": "2021-02-20 17:19:08.173292", "score": "0.229", "loss": "3.487", "code": "d open() throws IOExc { enar(); if (SHARED) {open(g); } }", "n_tokens": 57, "n_pass": [87, 13, 12]}
{"time": "2021-02-20 17:19:10.901110", "score": "0.4378", "loss": "1.9507", "code": "d open() throws IO { enar(); if (SHARED) {open(g); } }", "n_tokens": 54, "n_pass": [125, 14, 13]}
{"time": "2021-02-20 17:19:12.218221", "score": "0.3058", "loss": "2.2235", "code": "d open() throws IO { r(); if (SHARED) {open(g); } }", "n_tokens": 51, "n_pass": [127, 15, 14]}
{"time": "2021-02-20 17:19:13.526167", "score": "0.5955", "loss": "1.055", "code": "d open() throws IO { ; if (SHARED) {open(g); } }", "n_tokens": 48, "n_pass": [128, 16, 15]}
{"time": "2021-02-20 17:19:14.829833", "score": "0.2137", "loss": "2.4019", "code": "d open() throws IO { ; if (RED) {open(g); } }", "n_tokens": 45, "n_pass": [131, 17, 16]}
{"time": "2021-02-20 17:19:20.157780", "score": "0.2137", "loss": "2.4019", "code": "d open() throws IO { if (RED) {open(g); } }", "n_tokens": 43, "n_pass": [180, 19, 17]}
{"time": "2021-02-20 17:19:21.469069", "score": "0.3553", "loss": "1.8059", "code": "d open() throws IO { if (D) {open(g); } }", "n_tokens": 41, "n_pass": [183, 20, 18]}
{"time": "2021-02-20 17:19:27.511700", "score": "0.3553", "loss": "1.8059", "code": "d open()throws IO { if (D) {open(g); } }", "n_tokens": 40, "n_pass": [200, 23, 19]}
{"time": "2021-02-20 17:19:31.412287", "score": "0.3553", "loss": "1.8059", "code": "d open()throws IO{ if (D) {open(g); } }", "n_tokens": 39, "n_pass": [210, 26, 20]}
{"time": "2021-02-20 17:19:42.040707", "score": "0.3553", "loss": "1.8059", "code": "d open()throws IO{ if (D){open(g); } }", "n_tokens": 38, "n_pass": [263, 31, 21]}
{"time": "2021-02-20 17:19:48.558503", "score": "0.2743", "loss": "2.6351", "code": "d open()throws IO{ if (D){open(); } }", "n_tokens": 37, "n_pass": [269, 36, 22]}
{"time": "2021-02-20 17:19:49.868763", "score": "0.2743", "loss": "2.6351", "code": "d open()throws IO{ if (D){open();} }", "n_tokens": 36, "n_pass": [272, 37, 23]}
{"time": "2021-02-20 17:19:51.190190", "score": "0.2743", "loss": "2.6351", "code": "d open()throws IO{ if (D){open();}}", "n_tokens": 35, "n_pass": [274, 38, 24]}
{"time": "2021-02-20 17:19:57.212778", "score": "0.2743", "loss": "2.6351", "code": "d open()throws IO{if (D){open();}}", "n_tokens": 34, "n_pass": [294, 41, 25]}
{"time": "2021-02-20 17:19:58.533633", "score": "0.2743", "loss": "2.6351", "code": "d open()throws IO{if(D){open();}}", "n_tokens": 33, "n_pass": [297, 42, 26]}

Minimal simplified code:
d open()throws IO{if(D){open();}}

