
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Glitchfiend__BiomesOPlenty/src/main/java/biomesoplenty/common/world/generator/GeneratorOreCluster_generate.java
method_name = generate
method_body = @Override public boolean generate(World world, Random random, BlockPos pos) { if (this.replace.matches(world, pos)) { return this.generator.generate(world, random, pos); } return false; }
predict, score, loss = generate, 0.8768014907836914, 0.3155207633972168

Trace of simplified code(s):
{"time": "2021-02-19 14:56:09.903881", "score": "0.8768", "loss": "0.3155", "code": "@Override public boolean generate(World world, Random random, BlockPos pos) { if (this.replace.matches(world, pos)) { return this.generator.generate(world, random, pos); } return false; }", "n_tokens": 187, "n_pass": [1, 1, 1]}
{"time": "2021-02-19 14:56:11.243380", "score": "0.9087", "loss": "0.4333", "code": "n generate(World world, Random random, BlockPos pos) { if (this.replace.matches(world, pos)) { return this.generator.generate(world, random, pos); } return false; }", "n_tokens": 164, "n_pass": [20, 2, 2]}
{"time": "2021-02-19 14:56:12.572129", "score": "0.8868", "loss": "0.412", "code": "n generate(World world,s pos) { if (this.replace.matches(world, pos)) { return this.generator.generate(world, random, pos); } return false; }", "n_tokens": 141, "n_pass": [21, 3, 3]}
{"time": "2021-02-19 14:56:13.909326", "score": "0.8414", "loss": "0.6556", "code": "n generate(World world,s pos) { if (this.replace.matches(world, pos)) { return th.generate(world, random, pos); } return false; }", "n_tokens": 129, "n_pass": [45, 4, 4]}
{"time": "2021-02-19 14:56:16.604299", "score": "0.7094", "loss": "1.0782", "code": "n generate(World world,s pos) { if (this.replace.matches(world, pos)) { return th.generate(woandom, pos); } return false; }", "n_tokens": 123, "n_pass": [80, 6, 5]}
{"time": "2021-02-19 14:56:17.934162", "score": "0.5931", "loss": "1.3049", "code": "n generate(World world,s pos) { if (this.replace.matches(world, pos)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 117, "n_pass": [83, 7, 6]}
{"time": "2021-02-19 14:56:19.998439", "score": "0.5357", "loss": "1.4178", "code": "n generate(World worls) { if (this.replace.matches(world, pos)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 111, "n_pass": [89, 8, 7]}
{"time": "2021-02-19 14:56:21.317117", "score": "0.5657", "loss": "1.3334", "code": "n generate(World worls) { if (thiace.matches(world, pos)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 105, "n_pass": [92, 9, 8]}
{"time": "2021-02-19 14:56:22.634352", "score": "0.406", "loss": "1.9946", "code": "n generate(World worls) { if (thitches(world, pos)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 99, "n_pass": [93, 10, 9]}
{"time": "2021-02-19 14:56:23.956478", "score": "0.3443", "loss": "2.5156", "code": "n generate(World worls) { if (thitches( pos)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 93, "n_pass": [95, 11, 10]}
{"time": "2021-02-19 14:56:28.646888", "score": "0.5126", "loss": "1.7523", "code": "n generate(World worls) { if (thitches(s)) { return th.generate(woandom, pos); } retlse; }", "n_tokens": 90, "n_pass": [144, 14, 11]}
{"time": "2021-02-19 14:56:33.908903", "score": "0.5126", "loss": "1.7523", "code": "n generate(World worls) { if (thitches(s)) { return th.generate(woom, pos); } retlse; }", "n_tokens": 87, "n_pass": [153, 18, 12]}
{"time": "2021-02-19 14:56:35.227361", "score": "0.6406", "loss": "1.3426", "code": "n generate(World worls) { if (thitches(s)) { return th.generate(woom,s); } retlse; }", "n_tokens": 84, "n_pass": [155, 19, 13]}
{"time": "2021-02-19 14:56:37.866264", "score": "0.7441", "loss": "0.8629", "code": "n generate(World worls) { if (thitches(s)) { return th.generate(woom,s); } ret; }", "n_tokens": 81, "n_pass": [159, 21, 14]}
{"time": "2021-02-19 14:56:40.685129", "score": "0.6448", "loss": "1.0211", "code": "n generate(Wd worls) { if (thitches(s)) { return th.generate(woom,s); } ret; }", "n_tokens": 78, "n_pass": [166, 22, 15]}
{"time": "2021-02-19 14:56:42.001997", "score": "0.7428", "loss": "0.6737", "code": "n generate(Wd ws) { if (thitches(s)) { return th.generate(woom,s); } ret; }", "n_tokens": 75, "n_pass": [168, 23, 16]}
{"time": "2021-02-19 14:56:43.327710", "score": "0.7428", "loss": "0.6737", "code": "n generate(Wd ws) { if (tches(s)) { return th.generate(woom,s); } ret; }", "n_tokens": 72, "n_pass": [172, 24, 17]}
{"time": "2021-02-19 14:56:44.651882", "score": "0.9104", "loss": "0.234", "code": "n generate(Wd ws) { if (es(s)) { return th.generate(woom,s); } ret; }", "n_tokens": 69, "n_pass": [173, 25, 18]}
{"time": "2021-02-19 14:56:49.943477", "score": "0.8213", "loss": "0.3793", "code": "n generate(Wd ws) { if (es(s)) { return th.generate(wos); } ret; }", "n_tokens": 66, "n_pass": [184, 29, 19]}
{"time": "2021-02-19 14:56:51.290617", "score": "0.8287", "loss": "0.4948", "code": "n generate(Wd ws) { if (es(s)) { return th.generate(wos); } ; }", "n_tokens": 63, "n_pass": [187, 30, 20]}
{"time": "2021-02-19 14:57:00.057006", "score": "0.8287", "loss": "0.4948", "code": "n generate(Wd ws) { if (es(s)) { return th.generate(wos); } }", "n_tokens": 61, "n_pass": [254, 34, 21]}
{"time": "2021-02-19 14:57:05.050612", "score": "0.8821", "loss": "0.3788", "code": "n generate(d ws) { if (es(s)) { return th.generate(wos); } }", "n_tokens": 60, "n_pass": [267, 35, 22]}
{"time": "2021-02-19 14:57:06.394018", "score": "0.7899", "loss": "0.6895", "code": "n generate(d s) { if (es(s)) { return th.generate(wos); } }", "n_tokens": 59, "n_pass": [270, 36, 23]}
{"time": "2021-02-19 14:57:07.708393", "score": "0.7899", "loss": "0.6895", "code": "n generate(d s){ if (es(s)) { return th.generate(wos); } }", "n_tokens": 58, "n_pass": [273, 37, 24]}
{"time": "2021-02-19 14:57:09.049040", "score": "0.7899", "loss": "0.6895", "code": "n generate(d s){if (es(s)) { return th.generate(wos); } }", "n_tokens": 57, "n_pass": [275, 38, 25]}
{"time": "2021-02-19 14:57:10.365023", "score": "0.7899", "loss": "0.6895", "code": "n generate(d s){if(es(s)) { return th.generate(wos); } }", "n_tokens": 56, "n_pass": [278, 39, 26]}
{"time": "2021-02-19 14:57:11.681206", "score": "0.6281", "loss": "1.1186", "code": "n generate(d s){if(s(s)) { return th.generate(wos); } }", "n_tokens": 55, "n_pass": [280, 40, 27]}
{"time": "2021-02-19 14:57:20.888250", "score": "0.7095", "loss": "0.9082", "code": "n generate(d s){if(s(s)) { return th.generate(w); } }", "n_tokens": 53, "n_pass": [295, 47, 28]}
{"time": "2021-02-19 14:57:35.882488", "score": "0.7095", "loss": "0.9082", "code": "n generate(d s){if(s(s)) { return th.generate(w);} }", "n_tokens": 52, "n_pass": [367, 54, 29]}
{"time": "2021-02-19 14:57:37.196348", "score": "0.7095", "loss": "0.9082", "code": "n generate(d s){if(s(s)) { return th.generate(w);}}", "n_tokens": 51, "n_pass": [368, 55, 30]}
{"time": "2021-02-19 14:57:42.229684", "score": "0.5113", "loss": "1.6631", "code": "n generate(d s){if((s)) { return th.generate(w);}}", "n_tokens": 50, "n_pass": [389, 56, 31]}
{"time": "2021-02-19 14:57:43.569036", "score": "0.5113", "loss": "1.6631", "code": "n generate(d s){if((s)){ return th.generate(w);}}", "n_tokens": 49, "n_pass": [394, 57, 32]}
{"time": "2021-02-19 14:57:44.876741", "score": "0.5113", "loss": "1.6631", "code": "n generate(d s){if((s)){return th.generate(w);}}", "n_tokens": 48, "n_pass": [396, 58, 33]}
{"time": "2021-02-19 14:57:47.527689", "score": "0.5415", "loss": "1.7304", "code": "n generate(d s){if((s)){return h.generate(w);}}", "n_tokens": 47, "n_pass": [404, 60, 34]}
{"time": "2021-02-19 14:58:00.679192", "score": "0.5896", "loss": "1.5368", "code": "n generate(d s){if((s)){return h.generate();}}", "n_tokens": 46, "n_pass": [416, 70, 35]}
{"time": "2021-02-19 14:58:05.709079", "score": "0.2932", "loss": "2.0934", "code": "n generate(d s){if((s)){returnh.generate();}}", "n_tokens": 45, "n_pass": [451, 71, 36]}
{"time": "2021-02-19 14:58:22.559316", "score": "0.2932", "loss": "2.0934", "code": "n generate(d s){if((s)){eturnh.generate();}}", "n_tokens": 44, "n_pass": [491, 81, 37]}
{"time": "2021-02-19 14:58:23.869427", "score": "0.2932", "loss": "2.0934", "code": "n generate(d s){if((s)){turnh.generate();}}", "n_tokens": 43, "n_pass": [492, 82, 38]}
{"time": "2021-02-19 14:58:25.182305", "score": "0.2932", "loss": "2.0934", "code": "n generate(d s){if((s)){urnh.generate();}}", "n_tokens": 42, "n_pass": [493, 83, 39]}
{"time": "2021-02-19 14:58:26.491373", "score": "0.2932", "loss": "2.0934", "code": "n generate(d s){if((s)){rnh.generate();}}", "n_tokens": 41, "n_pass": [494, 84, 40]}
{"time": "2021-02-19 14:58:27.808949", "score": "0.2", "loss": "2.2727", "code": "n generate(d s){if((s)){nh.generate();}}", "n_tokens": 40, "n_pass": [495, 85, 41]}
{"time": "2021-02-19 14:58:29.150480", "score": "0.2996", "loss": "2.1318", "code": "n generate(d s){if((s)){h.generate();}}", "n_tokens": 39, "n_pass": [496, 86, 42]}

Minimal simplified code:
n generate(d s){if((s)){h.generate();}}

