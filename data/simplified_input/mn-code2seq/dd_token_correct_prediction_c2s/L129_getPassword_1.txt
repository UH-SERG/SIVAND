
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/jce/src/main/java/javax/crypto/spec/PBEKeySpec_getPassword.java
method_name = getPassword
method_body = public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException("Password has been cleared"); } return password; }
predict, score, loss = getPassword, 0.9848573803901672, 0.07209953665733337

Trace of simplified code(s):
{"time": "2021-02-13 05:57:05.516112", "score": "0.9849", "loss": "0.0721", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException(\"Password has been cleared\"); } return password; }", "n_tokens": 48, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 05:57:07.179737", "score": "0.9866", "loss": "0.0618", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException(\"Password\"); } return password; }", "n_tokens": 42, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 05:57:08.495561", "score": "0.9453", "loss": "0.6066", "code": "public final char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException(\"Password\"); } ; }", "n_tokens": 39, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 05:57:09.789355", "score": "0.9453", "loss": "0.6066", "code": " char[] getPassword() { if (isPasswordCleared) { throw new IllegalStateException(\"Password\"); } ; }", "n_tokens": 36, "n_pass": [49, 4, 4]}
{"time": "2021-02-13 05:57:11.111466", "score": "0.9687", "loss": "0.3172", "code": " char[] getPassword() { if (isPasswordCleared) {new IllegalStateException(\"Password\"); } ; }", "n_tokens": 33, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 05:57:12.397211", "score": "0.9868", "loss": "0.1777", "code": " char[] getPassword() { if (isPasswordCleared) {(\"Password\"); } ; }", "n_tokens": 30, "n_pass": [57, 6, 6]}
{"time": "2021-02-13 05:57:15.034778", "score": "0.9868", "loss": "0.1777", "code": " char[] getPassword() { if (isPasswordCleared) {(\"Password\"); } }", "n_tokens": 28, "n_pass": [94, 7, 7]}
{"time": "2021-02-13 05:57:16.314737", "score": "0.9868", "loss": "0.1777", "code": "char[] getPassword() { if (isPasswordCleared) {(\"Password\"); } }", "n_tokens": 27, "n_pass": [96, 8, 8]}
{"time": "2021-02-13 05:57:17.592069", "score": "0.9868", "loss": "0.1777", "code": "char[]getPassword() { if (isPasswordCleared) {(\"Password\"); } }", "n_tokens": 26, "n_pass": [100, 9, 9]}
{"time": "2021-02-13 05:57:18.876084", "score": "0.9868", "loss": "0.1777", "code": "char[]getPassword(){ if (isPasswordCleared) {(\"Password\"); } }", "n_tokens": 25, "n_pass": [104, 10, 10]}
{"time": "2021-02-13 05:57:22.172465", "score": "0.9868", "loss": "0.1777", "code": "char[]getPassword(){ if(isPasswordCleared) {(\"Password\"); } }", "n_tokens": 24, "n_pass": [139, 11, 11]}
{"time": "2021-02-13 05:57:23.462823", "score": "0.9868", "loss": "0.1777", "code": "char[]getPassword(){ if(isPasswordCleared){(\"Password\"); } }", "n_tokens": 23, "n_pass": [142, 12, 12]}
{"time": "2021-02-13 05:57:24.757526", "score": "0.935", "loss": "0.9831", "code": "char[]getPassword(){ if(isPasswordCleared){(\"\"); } }", "n_tokens": 22, "n_pass": [146, 13, 13]}
{"time": "2021-02-13 05:57:26.035719", "score": "0.935", "loss": "0.9831", "code": "char[]getPassword(){ if(isPasswordCleared){(\"\");} }", "n_tokens": 21, "n_pass": [150, 14, 14]}
{"time": "2021-02-13 05:57:27.312850", "score": "0.935", "loss": "0.9831", "code": "char[]getPassword(){ if(isPasswordCleared){(\"\");}}", "n_tokens": 20, "n_pass": [152, 15, 15]}
{"time": "2021-02-13 05:57:28.594858", "score": "0.935", "loss": "0.9831", "code": "char[]getPassword(){if(isPasswordCleared){(\"\");}}", "n_tokens": 19, "n_pass": [161, 16, 16]}

Minimal simplified code:
char[]getPassword(){if(isPasswordCleared){("");}}

