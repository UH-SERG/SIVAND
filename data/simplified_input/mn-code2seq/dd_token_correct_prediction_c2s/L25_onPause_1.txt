
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ouya__ouya-sdk-examples/Android/AndroidExit/src/tv/ouya/examples/android/androidexit/ExitActivity_onPause.java
method_name = onPause
method_body = @Override protected void onPause() { if (isFinishing()) { Log.i(TAG, "onPause: Game is finishing..."); } else { Log.i(TAG, "onPause"); } super.onPause(); }
predict, score, loss = onPause, 0.9995105266571045, 0.0010324908653274179

Trace of simplified code(s):
{"time": "2021-02-13 04:05:09.312038", "score": "0.9995", "loss": "0.001", "code": "@Override protected void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game is finishing...\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 75, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:05:10.633364", "score": "0.9971", "loss": "0.0063", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game is finishing...\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 71, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 04:05:11.967231", "score": "0.9969", "loss": "0.0065", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause: Game..\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 66, "n_pass": [52, 3, 3]}
{"time": "2021-02-13 04:05:13.290684", "score": "0.9969", "loss": "0.0065", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPauseGame..\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 64, "n_pass": [95, 4, 4]}
{"time": "2021-02-13 04:05:14.600516", "score": "0.9975", "loss": "0.0053", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else { Log.i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 62, "n_pass": [96, 5, 5]}
{"time": "2021-02-13 04:05:15.923682", "score": "0.9975", "loss": "0.0055", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); } super.onPause(); }", "n_tokens": 59, "n_pass": [101, 6, 6]}
{"time": "2021-02-13 04:05:17.220955", "score": "0.9444", "loss": "0.1253", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }onPause(); }", "n_tokens": 56, "n_pass": [106, 7, 7]}
{"time": "2021-02-13 04:05:18.526582", "score": "0.9628", "loss": "0.0837", "code": " void onPause() { if (isFinishing()) { Log.i(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 53, "n_pass": [107, 8, 8]}
{"time": "2021-02-13 04:05:20.175820", "score": "0.9316", "loss": "0.1765", "code": " void onPause() { if (isFinishing()) { Log(TAG, \"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 51, "n_pass": [119, 9, 9]}
{"time": "2021-02-13 04:05:26.136564", "score": "0.9316", "loss": "0.1765", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"onPause.\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 50, "n_pass": [189, 10, 10]}
{"time": "2021-02-13 04:05:27.430234", "score": "0.9097", "loss": "0.2598", "code": " void onPause() { if (isFinishing()) { Log(TAG,\".\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 49, "n_pass": [191, 11, 11]}
{"time": "2021-02-13 04:05:28.746099", "score": "0.9115", "loss": "0.2858", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\"); } else {i(TAG, \"onPause\"); }; }", "n_tokens": 48, "n_pass": [192, 12, 12]}
{"time": "2021-02-13 04:05:30.059235", "score": "0.9115", "loss": "0.2858", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");} else {i(TAG, \"onPause\"); }; }", "n_tokens": 47, "n_pass": [196, 13, 13]}
{"time": "2021-02-13 04:05:31.369680", "score": "0.9115", "loss": "0.2858", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");}else {i(TAG, \"onPause\"); }; }", "n_tokens": 46, "n_pass": [198, 14, 14]}
{"time": "2021-02-13 04:05:32.673559", "score": "0.8866", "loss": "0.3544", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");} {i(TAG, \"onPause\"); }; }", "n_tokens": 45, "n_pass": [199, 15, 15]}
{"time": "2021-02-13 04:05:33.973884", "score": "0.8866", "loss": "0.3544", "code": " void onPause() { if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 44, "n_pass": [200, 16, 16]}
{"time": "2021-02-13 04:05:35.270591", "score": "0.8866", "loss": "0.3544", "code": "void onPause() { if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 43, "n_pass": [210, 17, 17]}
{"time": "2021-02-13 04:05:37.274694", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){ if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 42, "n_pass": [216, 18, 18]}
{"time": "2021-02-13 04:05:38.562340", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if (isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 41, "n_pass": [218, 19, 19]}
{"time": "2021-02-13 04:05:39.854988", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()) { Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 40, "n_pass": [220, 20, 20]}
{"time": "2021-02-13 04:05:41.156917", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){ Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 39, "n_pass": [226, 21, 21]}
{"time": "2021-02-13 04:05:42.455707", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG, \"onPause\"); }; }", "n_tokens": 38, "n_pass": [228, 22, 22]}
{"time": "2021-02-13 04:05:46.151091", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\"); }; }", "n_tokens": 37, "n_pass": [277, 23, 23]}
{"time": "2021-02-13 04:05:48.769532", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");}; }", "n_tokens": 36, "n_pass": [283, 25, 24]}
{"time": "2021-02-13 04:05:50.086922", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");} }", "n_tokens": 35, "n_pass": [285, 26, 25]}
{"time": "2021-02-13 04:05:51.419289", "score": "0.8866", "loss": "0.3544", "code": "void onPause(){if(isFinishing()){Log(TAG,\"\");}{i(TAG,\"onPause\");}}", "n_tokens": 34, "n_pass": [286, 27, 26]}

Minimal simplified code:
void onPause(){if(isFinishing()){Log(TAG,"");}{i(TAG,"onPause");}}

