
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/smali/smaliFlexLexer_zzUnpackCMap.java
method_name = zzUnpackCMap
method_body = private static char[] zzUnpackCMap(String packed) { char[] map = new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }
predict, score, loss = zzUnpackCMap, 0.9496028423309326, 0.2952917218208313

Trace of simplified code(s):
{"time": "2021-02-13 20:21:52.772172", "score": "0.9625", "loss": "0.2194", "code": "private static char[] zzUnpackCMap(String packed) { char[] map = new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 138, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:21:55.221545", "score": "0.9682", "loss": "0.175", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; int i = 0; int j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 130, "n_pass": [46, 2, 2]}
{"time": "2021-02-13 20:21:56.569423", "score": "0.9651", "loss": "0.1742", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (i < 210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 122, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 20:21:58.327390", "score": "0.9629", "loss": "0.1818", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count = packed.charAt(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 118, "n_pass": [95, 4, 4]}
{"time": "2021-02-13 20:21:59.670646", "score": "0.9228", "loss": "0.4159", "code": "private static char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 114, "n_pass": [99, 5, 5]}
{"time": "2021-02-13 20:22:02.389710", "score": "0.9228", "loss": "0.4159", "code": "char[] zzUnpackCMap(String packed) { new char[0x10000]; intint j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 110, "n_pass": [112, 7, 6]}
{"time": "2021-02-13 20:22:04.100705", "score": "0.9228", "loss": "0.4159", "code": "char[] zzUnpackCMap(String packed) { new char[0x1]; intint j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 106, "n_pass": [118, 8, 7]}
{"time": "2021-02-13 20:22:07.186971", "score": "0.932", "loss": "0.3638", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];int j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 104, "n_pass": [192, 10, 8]}
{"time": "2021-02-13 20:22:08.552382", "score": "0.9029", "loss": "0.5371", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (210) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 102, "n_pass": [193, 11, 9]}
{"time": "2021-02-13 20:22:09.896810", "score": "0.8829", "loss": "0.6842", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { int count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 100, "n_pass": [199, 12, 10]}
{"time": "2021-02-13 20:22:11.242306", "score": "0.8276", "loss": "1.0827", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count =(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 98, "n_pass": [202, 13, 11]}
{"time": "2021-02-13 20:22:12.598585", "score": "0.7842", "loss": "1.5039", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i++); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 96, "n_pass": [204, 14, 12]}
{"time": "2021-02-13 20:22:13.960336", "score": "0.7705", "loss": "1.732", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); char value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 94, "n_pass": [206, 15, 13]}
{"time": "2021-02-13 20:22:15.323859", "score": "0.7267", "loss": "2.3506", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); value = packed.charAt(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 92, "n_pass": [208, 16, 14]}
{"time": "2021-02-13 20:22:16.662426", "score": "0.8755", "loss": "0.6732", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); value = packed(i++); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 90, "n_pass": [212, 17, 15]}
{"time": "2021-02-13 20:22:18.016622", "score": "0.8503", "loss": "0.8302", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); value = packed(i); do map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 88, "n_pass": [214, 18, 16]}
{"time": "2021-02-13 20:22:19.352199", "score": "0.7879", "loss": "1.2383", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); value = packed(i); map[j++] = value; while (--count > 0); } return map; }", "n_tokens": 86, "n_pass": [216, 19, 17]}
{"time": "2021-02-13 20:22:20.692374", "score": "0.7316", "loss": "1.6805", "code": "char[] zzUnpackCMap(String packed) { new char[0x1];j = 0; while (0) { count(i); value = packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 83, "n_pass": [224, 20, 18]}
{"time": "2021-02-13 20:22:23.381521", "score": "0.7282", "loss": "1.7295", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) { count(i); value = packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 81, "n_pass": [238, 22, 19]}
{"time": "2021-02-13 20:22:24.724786", "score": "0.7703", "loss": "1.3754", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i); value = packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 79, "n_pass": [247, 23, 20]}
{"time": "2021-02-13 20:22:38.217187", "score": "0.7703", "loss": "1.3754", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value = packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 78, "n_pass": [357, 27, 21]}
{"time": "2021-02-13 20:22:39.574351", "score": "0.7703", "loss": "1.3754", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value= packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 77, "n_pass": [358, 28, 22]}
{"time": "2021-02-13 20:22:40.903292", "score": "0.7703", "loss": "1.3754", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed(i); map[j++] = value; while (--count0); } return map; }", "n_tokens": 76, "n_pass": [360, 29, 23]}
{"time": "2021-02-13 20:22:43.613848", "score": "0.6628", "loss": "2.5787", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed(); map[j++] = value; while (--count0); } return map; }", "n_tokens": 75, "n_pass": [363, 31, 24]}
{"time": "2021-02-13 20:22:44.977733", "score": "0.6628", "loss": "2.5787", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed();map[j++] = value; while (--count0); } return map; }", "n_tokens": 74, "n_pass": [366, 32, 25]}
{"time": "2021-02-13 20:22:46.344109", "score": "0.6628", "loss": "2.5787", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed();map[j++]= value; while (--count0); } return map; }", "n_tokens": 73, "n_pass": [373, 33, 26]}
{"time": "2021-02-13 20:22:47.678820", "score": "0.6628", "loss": "2.5787", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed();map[j++]=value; while (--count0); } return map; }", "n_tokens": 72, "n_pass": [375, 34, 27]}
{"time": "2021-02-13 20:22:49.021303", "score": "0.6628", "loss": "2.5787", "code": "char[] zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 71, "n_pass": [378, 35, 28]}
{"time": "2021-02-13 20:22:54.406379", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed) { new char[0];j = 0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 70, "n_pass": [391, 39, 29]}
{"time": "2021-02-13 20:22:55.744939", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){ new char[0];j = 0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 69, "n_pass": [398, 40, 30]}
{"time": "2021-02-13 20:22:57.091742", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j = 0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 68, "n_pass": [400, 41, 31]}
{"time": "2021-02-13 20:22:59.761054", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j= 0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 67, "n_pass": [409, 43, 32]}
{"time": "2021-02-13 20:23:01.109625", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0; while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 66, "n_pass": [411, 44, 33]}
{"time": "2021-02-13 20:23:02.439599", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while (0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 65, "n_pass": [414, 45, 34]}
{"time": "2021-02-13 20:23:03.770264", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0) {(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 64, "n_pass": [416, 46, 35]}
{"time": "2021-02-13 20:23:05.104052", "score": "0.6628", "loss": "2.5787", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=value;while (--count0); } return map; }", "n_tokens": 63, "n_pass": [420, 47, 36]}
{"time": "2021-02-13 20:23:08.139217", "score": "0.5559", "loss": "3.9873", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile (--count0); } return map; }", "n_tokens": 62, "n_pass": [440, 49, 37]}
{"time": "2021-02-13 20:23:20.163047", "score": "0.5559", "loss": "3.9873", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile (--count0);} return map; }", "n_tokens": 61, "n_pass": [514, 56, 38]}
{"time": "2021-02-13 20:23:21.493241", "score": "0.5559", "loss": "3.9873", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile (--count0);}return map; }", "n_tokens": 60, "n_pass": [516, 57, 39]}
{"time": "2021-02-13 20:23:26.813013", "score": "0.5559", "loss": "3.9873", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile (--count0);}return map;}", "n_tokens": 59, "n_pass": [521, 61, 40]}
{"time": "2021-02-13 20:23:33.880013", "score": "0.5559", "loss": "3.9873", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile(--count0);}return map;}", "n_tokens": 58, "n_pass": [568, 66, 41]}
{"time": "2021-02-13 20:23:37.920740", "score": "0.558", "loss": "3.9196", "code": "char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile(--0);}return map;}", "n_tokens": 57, "n_pass": [572, 69, 42]}

Minimal simplified code:
char[]zzUnpackCMap(String packed){new char[0];j=0;while(0){(i);value=packed();map[j++]=valuewhile(--0);}return map;}

