
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/mekaexamples/classifiers/CrossValidate_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException("Required arguments: <dataset>"); System.out.println("Loading data: " + args[0]); Instances data = DataSource.read(args[0]); MLUtils.prepareData(data); int numFolds = 10; System.out.println("Cross-validate BR classifier using " + numFolds + " folds"); BR classifier = new BR(); String top = "PCut1"; String vop = "3"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }
predict, score, loss = main, 0.9964738488197327, 0.0036519053392112255

Trace of simplified code(s):
{"time": "2021-02-13 16:42:57.873724", "score": "0.988", "loss": "0.0125", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System.out.println(\"Loading data: \" + args[0]); Instances data = DataSource.read(args[0]); MLUtils.prepareData(data); int numFolds = 10; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier = new BR(); String top = \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 216, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:42:59.242823", "score": "0.9997", "loss": "0.0004", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier = new BR(); String top = \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 162, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 16:43:00.616629", "score": "0.999", "loss": "0.0011", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\"; String vop = \"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 148, "n_pass": [39, 3, 3]}
{"time": "2021-02-13 16:43:01.987390", "score": "0.9987", "loss": "0.0014", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";\"3\"; Result result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 141, "n_pass": [74, 4, 4]}
{"time": "2021-02-13 16:43:03.339542", "score": "0.998", "loss": "0.0023", "code": "public static void main(String[] args) throws Exception { if (args.length != 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 134, "n_pass": [75, 5, 5]}
{"time": "2021-02-13 16:43:05.081178", "score": "0.9971", "loss": "0.0031", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\"Cross-validate BR classifier using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 128, "n_pass": [85, 6, 6]}
{"time": "2021-02-13 16:43:06.464654", "score": "0.9979", "loss": "0.0024", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifier= \"PCut1\";result = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 121, "n_pass": [91, 7, 7]}
{"time": "2021-02-13 16:43:07.801434", "score": "0.9955", "loss": "0.0047", "code": "public static void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 114, "n_pass": [95, 8, 8]}
{"time": "2021-02-13 16:43:09.634465", "score": "0.9943", "loss": "0.0061", "code": " void main(String[] args) throws Exception { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 111, "n_pass": [157, 9, 9]}
{"time": "2021-02-13 16:43:10.979066", "score": "0.9977", "loss": "0.0026", "code": " void main(String[] args)  { if ( 1) throw new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 108, "n_pass": [161, 10, 10]}
{"time": "2021-02-13 16:43:12.308406", "score": "0.9983", "loss": "0.0019", "code": " void main(String[] args)  { if ( 1)new IllegalArgumentException(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 105, "n_pass": [165, 11, 11]}
{"time": "2021-02-13 16:43:13.646009", "score": "0.9982", "loss": "0.0021", "code": " void main(String[] args)  { if ( 1)(\"Required arguments: <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 102, "n_pass": [166, 12, 12]}
{"time": "2021-02-13 16:43:14.985068", "score": "0.9987", "loss": "0.0014", "code": " void main(String[] args)  { if ( 1)(\"Required <dataset>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 99, "n_pass": [168, 13, 13]}
{"time": "2021-02-13 16:43:16.330042", "score": "0.9948", "loss": "0.0061", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System0; System.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 96, "n_pass": [169, 14, 14]}
{"time": "2021-02-13 16:43:17.666986", "score": "0.999", "loss": "0.0012", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); SystemSystem.out.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 93, "n_pass": [172, 15, 15]}
{"time": "2021-02-13 16:43:18.994591", "score": "0.9991", "loss": "0.001", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System.println(\" using \" + numFolds + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 90, "n_pass": [173, 16, 16]}
{"time": "2021-02-13 16:43:20.330703", "score": "0.9993", "loss": "0.0008", "code": " void main(String[] args)  { if ( 1)(\"Required>\"); System.println(\" using \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 87, "n_pass": [177, 17, 17]}
{"time": "2021-02-13 16:43:22.068545", "score": "0.9988", "loss": "0.0014", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" using \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 84, "n_pass": [199, 18, 18]}
{"time": "2021-02-13 16:43:25.467343", "score": "0.9987", "loss": "0.0015", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \" folds\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 82, "n_pass": [276, 19, 19]}
{"time": "2021-02-13 16:43:26.801050", "score": "0.9983", "loss": "0.002", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); BR classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 80, "n_pass": [280, 20, 20]}
{"time": "2021-02-13 16:43:28.154179", "score": "0.9961", "loss": "0.0056", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation.cvModel(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 78, "n_pass": [283, 21, 21]}
{"time": "2021-02-13 16:43:29.492110", "score": "0.9964", "loss": "0.0053", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifier, data, numFolds, top, vop); System.out.println(result); }", "n_tokens": 76, "n_pass": [287, 22, 22]}
{"time": "2021-02-13 16:43:30.819738", "score": "0.9966", "loss": "0.0057", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFolds, top, vop); System.out.println(result); }", "n_tokens": 74, "n_pass": [289, 23, 23]}
{"time": "2021-02-13 16:43:32.156308", "score": "0.9952", "loss": "0.0097", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System.out.println(result); }", "n_tokens": 72, "n_pass": [292, 24, 24]}
{"time": "2021-02-13 16:43:33.484137", "score": "0.9969", "loss": "0.0061", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System.println(result); }", "n_tokens": 70, "n_pass": [297, 25, 25]}
{"time": "2021-02-13 16:43:34.832118", "score": "0.9962", "loss": "0.0076", "code": " void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 68, "n_pass": [298, 26, 26]}
{"time": "2021-02-13 16:43:36.183238", "score": "0.9962", "loss": "0.0076", "code": "void main(String[] args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 67, "n_pass": [302, 27, 27]}
{"time": "2021-02-13 16:43:38.240352", "score": "0.9962", "loss": "0.0076", "code": "void main(String[]args)  { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 66, "n_pass": [310, 28, 28]}
{"time": "2021-02-13 16:43:39.605068", "score": "0.9962", "loss": "0.0076", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, numFoldstop, vop); System(result); }", "n_tokens": 65, "n_pass": [313, 29, 29]}
{"time": "2021-02-13 16:43:40.965100", "score": "0.9972", "loss": "0.0053", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata,top, vop); System(result); }", "n_tokens": 63, "n_pass": [334, 30, 30]}
{"time": "2021-02-13 16:43:42.298521", "score": "0.9968", "loss": "0.0067", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop); System(result); }", "n_tokens": 61, "n_pass": [335, 31, 31]}
{"time": "2021-02-13 16:43:43.626693", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result); }", "n_tokens": 59, "n_pass": [338, 32, 32]}
{"time": "2021-02-13 16:43:51.056247", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args) { if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 58, "n_pass": [427, 33, 33]}
{"time": "2021-02-13 16:43:53.138511", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args){ if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 57, "n_pass": [437, 34, 34]}
{"time": "2021-02-13 16:43:54.460161", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args){if ( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 56, "n_pass": [439, 35, 35]}
{"time": "2021-02-13 16:43:55.782443", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args){if( 1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 55, "n_pass": [441, 36, 36]}
{"time": "2021-02-13 16:43:57.105893", "score": "0.9837", "loss": "0.0327", "code": "void main(String[]args){if(1)(\"Required>\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 54, "n_pass": [443, 37, 37]}
{"time": "2021-02-13 16:43:58.429971", "score": "0.9794", "loss": "0.0429", "code": "void main(String[]args){if(1)(\">\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 53, "n_pass": [448, 38, 38]}
{"time": "2021-02-13 16:43:59.783225", "score": "0.983", "loss": "0.0357", "code": "void main(String[]args){if(1)(\"\").println(\" \"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 52, "n_pass": [449, 39, 39]}
{"time": "2021-02-13 16:44:01.100411", "score": "0.9832", "loss": "0.0367", "code": "void main(String[]args){if(1)(\"\").println(\"\"  + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 51, "n_pass": [456, 40, 40]}
{"time": "2021-02-13 16:44:02.422606", "score": "0.9832", "loss": "0.0367", "code": "void main(String[]args){if(1)(\"\").println(\"\" + \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 50, "n_pass": [458, 41, 41]}
{"time": "2021-02-13 16:44:03.777073", "score": "0.9832", "loss": "0.0367", "code": "void main(String[]args){if(1)(\"\").println(\"\"+ \"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 49, "n_pass": [459, 42, 42]}
{"time": "2021-02-13 16:44:05.098218", "score": "0.9832", "loss": "0.0367", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\"); classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 48, "n_pass": [461, 43, 43]}
{"time": "2021-02-13 16:44:06.417255", "score": "0.9832", "loss": "0.0367", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");classifierresult = Evaluation(classifierdata, vop);(result);}", "n_tokens": 47, "n_pass": [466, 44, 44]}
{"time": "2021-02-13 16:44:07.751103", "score": "0.969", "loss": "0.075", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result = Evaluation(classifierdata, vop);(result);}", "n_tokens": 46, "n_pass": [467, 45, 45]}
{"time": "2021-02-13 16:44:09.078183", "score": "0.969", "loss": "0.075", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result= Evaluation(classifierdata, vop);(result);}", "n_tokens": 45, "n_pass": [469, 46, 46]}
{"time": "2021-02-13 16:44:10.429696", "score": "0.969", "loss": "0.075", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(classifierdata, vop);(result);}", "n_tokens": 44, "n_pass": [471, 47, 47]}
{"time": "2021-02-13 16:44:11.751095", "score": "0.9631", "loss": "0.0904", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(data, vop);(result);}", "n_tokens": 43, "n_pass": [474, 48, 48]}
{"time": "2021-02-13 16:44:13.087877", "score": "0.9631", "loss": "0.0904", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result=Evaluation(data,vop);(result);}", "n_tokens": 42, "n_pass": [477, 49, 49]}
{"time": "2021-02-13 16:44:15.189586", "score": "0.7795", "loss": "0.5421", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");resultEvaluation(data,vop);(result);}", "n_tokens": 41, "n_pass": [515, 50, 50]}
{"time": "2021-02-13 16:44:16.510852", "score": "0.6002", "loss": "0.8502", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(data,vop);(result);}", "n_tokens": 40, "n_pass": [516, 51, 51]}
{"time": "2021-02-13 16:44:17.829987", "score": "0.9364", "loss": "0.1359", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(datavop);(result);}", "n_tokens": 39, "n_pass": [519, 52, 52]}
{"time": "2021-02-13 16:44:19.179555", "score": "0.8984", "loss": "0.2177", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");result(data);(result);}", "n_tokens": 38, "n_pass": [520, 53, 53]}
{"time": "2021-02-13 16:44:21.222062", "score": "0.9906", "loss": "0.0243", "code": "void main(String[]args){if(1)(\"\").println(\"\"+\"\");(data);(result);}", "n_tokens": 37, "n_pass": [556, 54, 54]}

Minimal simplified code:
void main(String[]args){if(1)("").println(""+"");(data);(result);}

