
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/pipe/tsf/TokenTextCharNGrams_writeObject.java
method_name = writeObject
method_body = private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(prefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i++) out.writeInt(gramSizes[i]); out.writeBoolean(distinguishBorders); }
predict, score, loss = writeObject, 0.9854118824005127, 0.033163294196128845

Trace of simplified code(s):
{"time": "2021-02-13 14:25:10.855126", "score": "0.9874", "loss": "0.0292", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(prefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i++) out.writeInt(gramSizes[i]); out.writeBoolean(distinguishBorders); }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:25:12.213450", "score": "0.9377", "loss": "0.1677", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i++) out.writeInt(gramSizes[i]); out.writeBoolean(distinguishBorders); }", "n_tokens": 82, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 14:25:13.547685", "score": "0.9237", "loss": "0.2261", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i); out.writeBoolean(distinguishBorders); }", "n_tokens": 70, "n_pass": [26, 3, 3]}
{"time": "2021-02-13 14:25:14.909499", "score": "0.8324", "loss": "0.6515", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i); (distinguishBorders); }", "n_tokens": 67, "n_pass": [82, 4, 4]}
{"time": "2021-02-13 14:25:16.223575", "score": "0.8809", "loss": "0.3707", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i); ; }", "n_tokens": 64, "n_pass": [83, 5, 5]}
{"time": "2021-02-13 14:25:17.549091", "score": "0.8809", "loss": "0.3707", "code": "void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i); ; }", "n_tokens": 62, "n_pass": [85, 6, 6]}
{"time": "2021-02-13 14:25:19.267372", "score": "0.6686", "loss": "1.6001", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i = 0; i < gramSizes.length; i); ; }", "n_tokens": 59, "n_pass": [91, 7, 7]}
{"time": "2021-02-13 14:25:21.926811", "score": "0.6366", "loss": "1.9236", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i < gramSizes.length; i); ; }", "n_tokens": 56, "n_pass": [100, 9, 8]}
{"time": "2021-02-13 14:25:23.263387", "score": "0.7075", "loss": "1.4002", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; igramSizes.length; i); ; }", "n_tokens": 53, "n_pass": [102, 10, 9]}
{"time": "2021-02-13 14:25:24.602965", "score": "0.8294", "loss": "0.6385", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i; i); ; }", "n_tokens": 50, "n_pass": [103, 11, 10]}
{"time": "2021-02-13 14:25:29.919148", "score": "0.8648", "loss": "0.5032", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i;); ; }", "n_tokens": 48, "n_pass": [157, 13, 11]}
{"time": "2021-02-13 14:25:31.227693", "score": "0.8648", "loss": "0.5032", "code": "void writeObject(ObjectOutputStream out) throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i;); }", "n_tokens": 46, "n_pass": [159, 14, 12]}
{"time": "2021-02-13 14:25:33.269563", "score": "0.8648", "loss": "0.5032", "code": "void writeObject(ObjectOutputStream out)throws IOException {writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i;); }", "n_tokens": 45, "n_pass": [169, 15, 13]}
{"time": "2021-02-13 14:25:34.574732", "score": "0.8648", "loss": "0.5032", "code": "void writeObject(ObjectOutputStream out)throws IOException{writeInt(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i;); }", "n_tokens": 44, "n_pass": [173, 16, 14]}
{"time": "2021-02-13 14:25:35.889562", "score": "0.8266", "loss": "0.6204", "code": "void writeObject(ObjectOutputStream out)throws IOException{(CURRENTprefix); out.writeInt(gramSizes.length); for (int i ; i;); }", "n_tokens": 43, "n_pass": [175, 17, 15]}
{"time": "2021-02-13 14:25:37.221247", "score": "0.8734", "loss": "0.4113", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix); out.writeInt(gramSizes.length); for (int i ; i;); }", "n_tokens": 42, "n_pass": [177, 18, 16]}
{"time": "2021-02-13 14:25:38.536030", "score": "0.4668", "loss": "2.4987", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix); out(gramSizes.length); for (int i ; i;); }", "n_tokens": 40, "n_pass": [181, 19, 17]}
{"time": "2021-02-13 14:25:39.860816", "score": "0.4746", "loss": "2.2811", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix); out(gramSizes); for (int i ; i;); }", "n_tokens": 38, "n_pass": [183, 20, 18]}
{"time": "2021-02-13 14:25:41.178715", "score": "0.6505", "loss": "1.414", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix); out(gramSizes); for (i ; i;); }", "n_tokens": 36, "n_pass": [187, 21, 19]}
{"time": "2021-02-13 14:25:42.506132", "score": "0.6029", "loss": "1.6194", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix); out(gramSizes); for (; i;); }", "n_tokens": 34, "n_pass": [188, 22, 20]}
{"time": "2021-02-13 14:25:44.528917", "score": "0.7289", "loss": "1.2716", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes); for (; i;); }", "n_tokens": 32, "n_pass": [208, 23, 21]}
{"time": "2021-02-13 14:25:49.547452", "score": "0.7289", "loss": "1.2716", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for (; i;); }", "n_tokens": 31, "n_pass": [250, 24, 22]}
{"time": "2021-02-13 14:25:50.847971", "score": "0.7289", "loss": "1.2716", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for(; i;); }", "n_tokens": 30, "n_pass": [251, 25, 23]}
{"time": "2021-02-13 14:25:52.148833", "score": "0.7289", "loss": "1.2716", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for(;i;); }", "n_tokens": 29, "n_pass": [254, 26, 24]}
{"time": "2021-02-13 14:25:53.448733", "score": "0.8464", "loss": "0.7116", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for(;;); }", "n_tokens": 28, "n_pass": [255, 27, 25]}
{"time": "2021-02-13 14:25:54.784224", "score": "0.8464", "loss": "0.7116", "code": "void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for(;;);}", "n_tokens": 27, "n_pass": [259, 28, 26]}

Minimal simplified code:
void writeObject(ObjectOutputStream out)throws IOException{(prefix);(gramSizes);for(;;);}

