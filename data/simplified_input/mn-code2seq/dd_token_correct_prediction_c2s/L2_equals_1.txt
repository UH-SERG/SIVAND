
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/mission/item/spatial/SplineWaypoint_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof SplineWaypoint)) return false; if (!super.equals(o)) return false; SplineWaypoint that = (SplineWaypoint) o; return Double.compare(that.delay, delay) == 0; }
predict, score, loss = equals, 0.9998133778572083, 0.0002249280223622918

Trace of simplified code(s):
{"time": "2021-02-13 03:40:23.604381", "score": "0.9998", "loss": "0.0002", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof SplineWaypoint)) return false; if (!super.equals(o)) return false; SplineWaypoint that = (SplineWaypoint) o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 101, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 03:40:24.975177", "score": "0.9998", "loss": "0.0002", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof SplineWaypoint)) return false; if (!super.equals(o)) return false; SplineWaypoint that = (SplineWaypoint) o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 89, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 03:40:26.321098", "score": "0.9988", "loss": "0.0014", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof SplineWaypoint)) return false;return false; SplineWaypoint that = (SplineWaypoint) o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 76, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 03:40:28.412071", "score": "0.9767", "loss": "0.0264", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof SplineWaypoint)) return falsefalse; SplineWaypoint that = (SplineWaypoint) o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 73, "n_pass": [79, 4, 4]}
{"time": "2021-02-13 03:40:29.778063", "score": "0.9624", "loss": "0.0438", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof SplineWaypoint)) return falsefalse; SplineWaypoint that =  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 70, "n_pass": [82, 5, 5]}
{"time": "2021-02-13 03:40:31.486246", "score": "0.923", "loss": "0.1007", "code": "public boolean equals(Object o) { if (this == (o instanceof SplineWaypoint)) return falsefalse; SplineWaypoint that =  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 67, "n_pass": [90, 6, 6]}
{"time": "2021-02-13 03:40:34.878125", "score": "0.903", "loss": "0.1315", "code": "public boolean equals(Object o) { if (this == (o )) return falsefalse; SplineWaypoint that =  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 64, "n_pass": [99, 8, 7]}
{"time": "2021-02-13 03:40:36.210230", "score": "0.9517", "loss": "0.0616", "code": "public boolean equals(Object o) { if (this == (o )) false; SplineWaypoint that =  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 61, "n_pass": [101, 9, 8]}
{"time": "2021-02-13 03:40:42.318224", "score": "0.9223", "loss": "0.1149", "code": "public boolean equals(Object o) { if (this == (o )) false; that =  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 59, "n_pass": [163, 11, 9]}
{"time": "2021-02-13 03:40:43.669871", "score": "0.9574", "loss": "0.0566", "code": "public boolean equals(Object o) { if (this == (o )) false; that  o; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 57, "n_pass": [165, 12, 10]}
{"time": "2021-02-13 03:40:44.988604", "score": "0.8667", "loss": "0.2069", "code": "public boolean equals(Object o) { if (this == (o )) false; thato; return Double.compare(that.delay, delay) == 0; }", "n_tokens": 55, "n_pass": [166, 13, 11]}
{"time": "2021-02-13 03:40:46.696190", "score": "0.8329", "loss": "0.3005", "code": "public boolean equals(Object o) { if (this == (o )) false; thato; return Double(that.delay, delay) == 0; }", "n_tokens": 53, "n_pass": [170, 14, 12]}
{"time": "2021-02-13 03:40:48.011116", "score": "0.7263", "loss": "0.4182", "code": "public boolean equals(Object o) { if (this == (o )) false; thato; return Double(that, delay) == 0; }", "n_tokens": 51, "n_pass": [172, 15, 13]}
{"time": "2021-02-13 03:40:49.334217", "score": "0.602", "loss": "0.6811", "code": "public boolean equals(Object o) { if (this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 49, "n_pass": [173, 16, 14]}
{"time": "2021-02-13 03:40:51.397210", "score": "0.602", "loss": "0.6811", "code": " boolean equals(Object o) { if (this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 48, "n_pass": [179, 17, 15]}
{"time": "2021-02-13 03:40:52.715062", "score": "0.602", "loss": "0.6811", "code": "boolean equals(Object o) { if (this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 47, "n_pass": [180, 18, 16]}
{"time": "2021-02-13 03:40:54.784099", "score": "0.602", "loss": "0.6811", "code": "boolean equals(Object o){ if (this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 46, "n_pass": [189, 19, 17]}
{"time": "2021-02-13 03:40:56.101824", "score": "0.602", "loss": "0.6811", "code": "boolean equals(Object o){if (this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 45, "n_pass": [191, 20, 18]}
{"time": "2021-02-13 03:40:57.425339", "score": "0.602", "loss": "0.6811", "code": "boolean equals(Object o){if(this == (o )) false; thato; return Double(thatdelay) == 0; }", "n_tokens": 44, "n_pass": [193, 21, 19]}
{"time": "2021-02-13 03:40:59.488553", "score": "0.539", "loss": "0.816", "code": "boolean equals(Object o){if(this == (o ))  thato; return Double(thatdelay) == 0; }", "n_tokens": 42, "n_pass": [200, 22, 20]}
{"time": "2021-02-13 03:41:00.804928", "score": "0.5566", "loss": "0.7383", "code": "boolean equals(Object o){if(this == (o )) o; return Double(thatdelay) == 0; }", "n_tokens": 40, "n_pass": [201, 23, 21]}
{"time": "2021-02-13 03:41:02.108107", "score": "0.8156", "loss": "0.2995", "code": "boolean equals(Object o){if(this == (o ))  return Double(thatdelay) == 0; }", "n_tokens": 38, "n_pass": [202, 24, 22]}
{"time": "2021-02-13 03:41:03.768318", "score": "0.8529", "loss": "0.2502", "code": "boolean equals(Object o){if(this == (o ))  return(thatdelay) == 0; }", "n_tokens": 36, "n_pass": [204, 25, 23]}
{"time": "2021-02-13 03:41:05.068280", "score": "0.5684", "loss": "0.7647", "code": "boolean equals(Object o){if(this == (o ))  return(thatdelay)= 0; }", "n_tokens": 34, "n_pass": [207, 26, 24]}
{"time": "2021-02-13 03:41:06.368105", "score": "0.529", "loss": "1.0957", "code": "boolean equals(Object o){if(this == (o ))  return(thatdelay)0; }", "n_tokens": 32, "n_pass": [208, 27, 25]}
{"time": "2021-02-13 03:41:11.827575", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this == (o ))  return(thatdelay); }", "n_tokens": 31, "n_pass": [252, 28, 26]}
{"time": "2021-02-13 03:41:13.155794", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this == (o ))  return(thatdelay);}", "n_tokens": 30, "n_pass": [253, 29, 27]}
{"time": "2021-02-13 03:41:15.183789", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this== (o ))  return(thatdelay);}", "n_tokens": 29, "n_pass": [267, 30, 28]}
{"time": "2021-02-13 03:41:17.199552", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this==(o ))  return(thatdelay);}", "n_tokens": 28, "n_pass": [270, 31, 29]}
{"time": "2021-02-13 03:41:18.495512", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this==(o))  return(thatdelay);}", "n_tokens": 27, "n_pass": [273, 32, 30]}
{"time": "2021-02-13 03:41:19.794496", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this==(o)) return(thatdelay);}", "n_tokens": 26, "n_pass": [276, 33, 31]}
{"time": "2021-02-13 03:41:21.093452", "score": "0.3343", "loss": "1.8846", "code": "boolean equals(Object o){if(this==(o))return(thatdelay);}", "n_tokens": 25, "n_pass": [277, 34, 32]}
{"time": "2021-02-13 03:41:22.391625", "score": "0.3743", "loss": "1.4298", "code": "boolean equals(Object o){if(this==(o))(thatdelay);}", "n_tokens": 24, "n_pass": [278, 35, 33]}
{"time": "2021-02-13 03:41:23.723787", "score": "0.6792", "loss": "0.656", "code": "boolean equals(Object o){if(this==(o))(delay);}", "n_tokens": 23, "n_pass": [280, 36, 34]}

Minimal simplified code:
boolean equals(Object o){if(this==(o))(delay);}

