
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/md/src/main/java/org/cogcomp/md/LbjGen/extentLabel_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'extentLabel(Relation)' defined on line 11 of extent.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.999957799911499, 0.01119946874678135

Trace of simplified code(s):
{"time": "2021-02-13 12:53:54.396484", "score": "1.0", "loss": "0.0112", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'extentLabel(Relation)' defined on line 11 of extent.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:53:55.775266", "score": "1.0", "loss": "0.0107", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 113, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 12:53:57.163237", "score": "1.0", "loss": "0.0119", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 104, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 12:53:58.612566", "score": "1.0", "loss": "0.0145", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace.exit(1); } return super.classify(examples); }", "n_tokens": 99, "n_pass": [87, 4, 4]}
{"time": "2021-02-13 12:53:59.953600", "score": "1.0", "loss": "0.0137", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Relation[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 94, "n_pass": [88, 5, 5]}
{"time": "2021-02-13 12:54:01.336633", "score": "1.0", "loss": "0.0122", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 89, "n_pass": [98, 6, 6]}
{"time": "2021-02-13 12:54:03.063934", "score": "1.0", "loss": "0.0121", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { String type =  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 84, "n_pass": [101, 7, 7]}
{"time": "2021-02-13 12:54:04.418848", "score": "1.0", "loss": "0.0106", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) {   examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 79, "n_pass": [119, 8, 8]}
{"time": "2021-02-13 12:54:06.435385", "score": "1.0", "loss": "0.0106", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 77, "n_pass": [171, 9, 9]}
{"time": "2021-02-13 12:54:07.792232", "score": "1.0", "loss": "0.01", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 75, "n_pass": [173, 10, 10]}
{"time": "2021-02-13 12:54:09.131430", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples.getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 73, "n_pass": [174, 11, 11]}
{"time": "2021-02-13 12:54:10.482834", "score": "1.0", "loss": "0.0077", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 71, "n_pass": [175, 12, 12]}
{"time": "2021-02-13 12:54:11.812714", "score": "1.0", "loss": "0.0087", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples; System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 69, "n_pass": [176, 13, 13]}
{"time": "2021-02-13 12:54:13.163692", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesSystem.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 67, "n_pass": [177, 14, 14]}
{"time": "2021-02-13 12:54:14.482518", "score": "1.0", "loss": "0.0127", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { exampleserr.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 65, "n_pass": [178, 15, 15]}
{"time": "2021-02-13 12:54:15.787104", "score": "1.0", "loss": "0.012", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 63, "n_pass": [179, 16, 16]}
{"time": "2021-02-13 12:54:17.102989", "score": "1.0", "loss": "0.0145", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 60, "n_pass": [181, 17, 17]}
{"time": "2021-02-13 12:54:18.424963", "score": "0.9999", "loss": "0.0392", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify(examples); }", "n_tokens": 57, "n_pass": [187, 18, 18]}
{"time": "2021-02-13 12:54:21.073572", "score": "0.4716", "loss": "1.1333", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 54, "n_pass": [189, 20, 19]}
{"time": "2021-02-13 12:54:22.385114", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 52, "n_pass": [191, 21, 20]}
{"time": "2021-02-13 12:54:29.693553", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 51, "n_pass": [261, 24, 21]}
{"time": "2021-02-13 12:54:31.006289", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 50, "n_pass": [267, 25, 22]}
{"time": "2021-02-13 12:54:32.307784", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){ if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 49, "n_pass": [270, 26, 23]}
{"time": "2021-02-13 12:54:33.643683", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 48, "n_pass": [272, 27, 24]}
{"time": "2021-02-13 12:54:34.953107", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 47, "n_pass": [274, 28, 25]}
{"time": "2021-02-13 12:54:37.582654", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 46, "n_pass": [279, 30, 26]}
{"time": "2021-02-13 12:54:38.892952", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){ examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 45, "n_pass": [282, 31, 27]}
{"time": "2021-02-13 12:54:40.200621", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 44, "n_pass": [284, 32, 28]}
{"time": "2021-02-13 12:54:42.816745", "score": "0.4478", "loss": "1.2265", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 43, "n_pass": [286, 34, 29]}
{"time": "2021-02-13 12:54:44.127246", "score": "0.4723", "loss": "1.1597", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 42, "n_pass": [289, 35, 30]}
{"time": "2021-02-13 12:54:45.443807", "score": "0.4723", "loss": "1.1597", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");new Exception().printStackTrace; }super.classify; }", "n_tokens": 41, "n_pass": [293, 36, 31]}
{"time": "2021-02-13 12:54:46.768133", "score": "0.611", "loss": "0.8854", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }super.classify; }", "n_tokens": 39, "n_pass": [294, 37, 32]}
{"time": "2021-02-13 12:54:48.090839", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }classify; }", "n_tokens": 37, "n_pass": [299, 38, 33]}
{"time": "2021-02-13 12:54:54.769260", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }classify;}", "n_tokens": 36, "n_pass": [344, 42, 34]}
{"time": "2021-02-13 12:54:58.736305", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace;}classify;}", "n_tokens": 35, "n_pass": [376, 45, 35]}

Minimal simplified code:
FeatureVector[]classify(Object[]examples){if(!(examples)){examples("");Exception().printStackTrace;}classify;}

