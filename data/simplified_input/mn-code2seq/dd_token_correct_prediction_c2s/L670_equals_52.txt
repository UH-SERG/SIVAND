
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-sts/openam-rest-sts/src/main/java/org/forgerock/openam/sts/rest/token/validator/RestTokenTransformValidatorResult_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } RestTokenTransformValidatorResult that = (RestTokenTransformValidatorResult) o; return Objects.equal(principal, that.principal) && amSessionId.equals(that.amSessionId) && additionalStateEqual(that); }
predict, score, loss = equals, 0.9971539974212646, 0.0031951768323779106

Trace of simplified code(s):
{"time": "2021-02-13 20:00:44.108642", "score": "0.9972", "loss": "0.0032", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } RestTokenTransformValidatorResult that = (RestTokenTransformValidatorResult) o; return Objects.equal(principal, that.principal) && amSessionId.equals(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 121, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:00:45.505429", "score": "0.9969", "loss": "0.0035", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } RestTokenTransformValidatorResult that = (RestTokenTransformValidatorResult) o; return Objects.equal(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 106, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 20:00:47.233160", "score": "0.9958", "loss": "0.0048", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClassgetClass()) { return false; } RestTokenTransformValidatorResult that = (RestTokenTransformValidatorResult) o; return Objects.equal(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 98, "n_pass": [56, 3, 3]}
{"time": "2021-02-13 20:00:48.577841", "score": "0.9893", "loss": "0.0123", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClassgetClass()) { return false; } RestTokenTransformValidatorResult o; return Objects.equal(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 90, "n_pass": [59, 4, 4]}
{"time": "2021-02-13 20:00:50.651701", "score": "0.9934", "loss": "0.0074", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return Objects.equal(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 82, "n_pass": [69, 5, 5]}
{"time": "2021-02-13 20:00:52.740975", "score": "0.99", "loss": "0.0115", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 78, "n_pass": [108, 6, 6]}
{"time": "2021-02-13 20:00:54.077133", "score": "0.9676", "loss": "0.0418", "code": "public boolean equals(Object o) { if (this == o) { return true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 75, "n_pass": [113, 7, 7]}
{"time": "2021-02-13 20:00:58.825420", "score": "0.9676", "loss": "0.0418", "code": " boolean equals(Object o) { if (this == o) { return true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 74, "n_pass": [174, 9, 8]}
{"time": "2021-02-13 20:01:00.155559", "score": "0.9676", "loss": "0.0418", "code": "boolean equals(Object o) { if (this == o) { return true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 73, "n_pass": [175, 10, 9]}
{"time": "2021-02-13 20:01:02.629942", "score": "0.9675", "loss": "0.0434", "code": "boolean equals(Object o) { if (this == o) { true; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 71, "n_pass": [188, 11, 10]}
{"time": "2021-02-13 20:01:03.964413", "score": "0.962", "loss": "0.051", "code": "boolean equals(Object o) { if (this == o) {; } if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 69, "n_pass": [189, 12, 11]}
{"time": "2021-02-13 20:01:05.308412", "score": "0.962", "loss": "0.051", "code": "boolean equals(Object o) { if (this == o) {} if (o =getClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 67, "n_pass": [190, 13, 12]}
{"time": "2021-02-13 20:01:06.653371", "score": "0.9351", "loss": "0.0916", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) { return false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 65, "n_pass": [194, 14, 13]}
{"time": "2021-02-13 20:01:07.980062", "score": "0.8895", "loss": "0.1586", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) { false; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 63, "n_pass": [198, 15, 14]}
{"time": "2021-02-13 20:01:09.290832", "score": "0.8322", "loss": "0.2508", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {; } RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 61, "n_pass": [199, 16, 15]}
{"time": "2021-02-13 20:01:10.602828", "score": "0.8322", "loss": "0.2508", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {} RestTokenTransformValidatorResult o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 59, "n_pass": [200, 17, 16]}
{"time": "2021-02-13 20:01:11.945938", "score": "0.7368", "loss": "0.5024", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {} o; return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 57, "n_pass": [202, 18, 17]}
{"time": "2021-02-13 20:01:13.284945", "score": "0.8718", "loss": "0.2047", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {}  return(that.amSessionId) && additionalStateEqual(that); }", "n_tokens": 55, "n_pass": [203, 19, 18]}
{"time": "2021-02-13 20:01:14.952098", "score": "0.8377", "loss": "0.2287", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {}  return(that) && additionalStateEqual(that); }", "n_tokens": 53, "n_pass": [206, 20, 19]}
{"time": "2021-02-13 20:01:16.283618", "score": "0.7823", "loss": "0.3226", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {}  return(that)  additionalStateEqual(that); }", "n_tokens": 51, "n_pass": [208, 21, 20]}
{"time": "2021-02-13 20:01:17.592105", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {}  return(that) (that); }", "n_tokens": 49, "n_pass": [209, 22, 21]}
{"time": "2021-02-13 20:01:25.767798", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o) { if (this == o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 48, "n_pass": [286, 23, 22]}
{"time": "2021-02-13 20:01:27.804034", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){ if (this == o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 47, "n_pass": [295, 24, 23]}
{"time": "2021-02-13 20:01:29.122045", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if (this == o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 46, "n_pass": [297, 25, 24]}
{"time": "2021-02-13 20:01:30.429649", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this == o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 45, "n_pass": [299, 26, 25]}
{"time": "2021-02-13 20:01:31.746560", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this== o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 44, "n_pass": [302, 27, 26]}
{"time": "2021-02-13 20:01:33.777476", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this==o) {} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 43, "n_pass": [305, 28, 27]}
{"time": "2021-02-13 20:01:35.097792", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this==o){} if (ogetClass()) {}  return(that) (that);}", "n_tokens": 42, "n_pass": [308, 29, 28]}
{"time": "2021-02-13 20:01:36.431093", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this==o){}if (ogetClass()) {}  return(that) (that);}", "n_tokens": 41, "n_pass": [311, 30, 29]}
{"time": "2021-02-13 20:01:37.766135", "score": "0.7989", "loss": "0.4134", "code": "boolean equals(Object o){if(this==o){}if(ogetClass()) {}  return(that) (that);}", "n_tokens": 40, "n_pass": [313, 31, 30]}
{"time": "2021-02-13 20:01:39.103282", "score": "0.8189", "loss": "0.437", "code": "boolean equals(Object o){if(this==o){}if(getClass()) {}  return(that) (that);}", "n_tokens": 39, "n_pass": [315, 32, 31]}
{"time": "2021-02-13 20:01:40.402355", "score": "0.8189", "loss": "0.437", "code": "boolean equals(Object o){if(this==o){}if(getClass()){}  return(that) (that);}", "n_tokens": 38, "n_pass": [320, 33, 32]}
{"time": "2021-02-13 20:01:41.740389", "score": "0.8189", "loss": "0.437", "code": "boolean equals(Object o){if(this==o){}if(getClass()){} return(that) (that);}", "n_tokens": 37, "n_pass": [323, 34, 33]}
{"time": "2021-02-13 20:01:43.046351", "score": "0.8189", "loss": "0.437", "code": "boolean equals(Object o){if(this==o){}if(getClass()){}return(that) (that);}", "n_tokens": 36, "n_pass": [324, 35, 34]}
{"time": "2021-02-13 20:01:44.719178", "score": "0.8189", "loss": "0.437", "code": "boolean equals(Object o){if(this==o){}if(getClass()){}return(that)(that);}", "n_tokens": 35, "n_pass": [329, 36, 35]}

Minimal simplified code:
boolean equals(Object o){if(this==o){}if(getClass()){}return(that)(that);}

