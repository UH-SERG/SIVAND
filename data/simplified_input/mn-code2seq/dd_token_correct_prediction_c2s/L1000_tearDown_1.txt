
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/test/org/apache/catalina/tribes/group/interceptors/TestNonBlockingCoordinator_tearDown.java
method_name = tearDown
method_body = @After public void tearDown() throws Exception { System.out.println("tearDown"); for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }
predict, score, loss = tearDown, 0.9754891395568848, 0.05663080886006355

Trace of simplified code(s):
{"time": "2021-02-14 03:29:26.399518", "score": "0.9755", "loss": "0.0566", "code": "@After public void tearDown() throws Exception { System.out.println(\"tearDown\"); for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 73, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 03:29:27.709468", "score": "0.8697", "loss": "0.3465", "code": "@After public void tearDown() throws Exception { System; for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 64, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 03:29:29.010759", "score": "0.8711", "loss": "0.3433", "code": "@After public void tearDown() throws Exception {for (int i = 0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 60, "n_pass": [43, 3, 3]}
{"time": "2021-02-14 03:29:30.317141", "score": "0.8879", "loss": "0.3009", "code": "@After public void tearDown() throws Exception {for (int0; i < CHANNEL_COUNT; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 55, "n_pass": [45, 4, 4]}
{"time": "2021-02-14 03:29:31.621209", "score": "0.9181", "loss": "0.2062", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels[i].stop(Channel.DEFAULT); } }", "n_tokens": 50, "n_pass": [47, 5, 5]}
{"time": "2021-02-14 03:29:34.199501", "score": "0.9285", "loss": "0.1893", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels[i].stop; } }", "n_tokens": 45, "n_pass": [51, 7, 6]}
{"time": "2021-02-14 03:29:36.761393", "score": "0.8694", "loss": "0.3542", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { channels; } }", "n_tokens": 40, "n_pass": [61, 9, 7]}
{"time": "2021-02-14 03:29:39.677239", "score": "0.8493", "loss": "0.4002", "code": "@After public void tearDown() throws Exception {for (int0; i ; i++) { } }", "n_tokens": 37, "n_pass": [89, 11, 8]}
{"time": "2021-02-14 03:29:42.220114", "score": "0.8493", "loss": "0.4002", "code": "@After void tearDown() throws Exception {for (int0; i ; i++) { } }", "n_tokens": 35, "n_pass": [92, 13, 9]}
{"time": "2021-02-14 03:29:43.867591", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown() throws Exception {for (int0; ; i++) { } }", "n_tokens": 33, "n_pass": [102, 14, 10]}
{"time": "2021-02-14 03:29:50.077380", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown() throws Exception {for (int0;; i++) { } }", "n_tokens": 32, "n_pass": [148, 16, 11]}
{"time": "2021-02-14 03:29:51.367021", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown() throws Exception {for (int0;;i++) { } }", "n_tokens": 31, "n_pass": [149, 17, 12]}
{"time": "2021-02-14 03:29:53.692518", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown()throws Exception {for (int0;;i++) { } }", "n_tokens": 30, "n_pass": [165, 18, 13]}
{"time": "2021-02-14 03:29:54.960791", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown()throws Exception{for (int0;;i++) { } }", "n_tokens": 29, "n_pass": [169, 19, 14]}
{"time": "2021-02-14 03:29:56.222846", "score": "0.8709", "loss": "0.3352", "code": "@After void tearDown()throws Exception{for(int0;;i++) { } }", "n_tokens": 28, "n_pass": [172, 20, 15]}
{"time": "2021-02-14 03:29:57.486617", "score": "0.8317", "loss": "0.4554", "code": "@After void tearDown()throws Exception{for(0;;i++) { } }", "n_tokens": 27, "n_pass": [174, 21, 16]}
{"time": "2021-02-14 03:29:58.769058", "score": "0.8114", "loss": "0.5134", "code": "@After void tearDown()throws Exception{for(;;i++) { } }", "n_tokens": 26, "n_pass": [175, 22, 17]}
{"time": "2021-02-14 03:30:02.088927", "score": "0.8114", "loss": "0.5134", "code": "@After void tearDown()throws Exception{for(;;i++){ } }", "n_tokens": 25, "n_pass": [205, 23, 18]}
{"time": "2021-02-14 03:30:03.353399", "score": "0.8114", "loss": "0.5134", "code": "@After void tearDown()throws Exception{for(;;i++){} }", "n_tokens": 24, "n_pass": [206, 24, 19]}
{"time": "2021-02-14 03:30:04.634004", "score": "0.8114", "loss": "0.5134", "code": "@After void tearDown()throws Exception{for(;;i++){}}", "n_tokens": 23, "n_pass": [208, 25, 20]}

Minimal simplified code:
@After void tearDown()throws Exception{for(;;i++){}}

