
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/happyfoxinc__helpstack-android/helpstack/src/com/tenmiles/helpstack/gears/HSHappyfoxGear_getBody.java
method_name = getBody
method_body = @Override public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream bos = new ByteArrayOutputStream(); try { entity.writeTo(bos); } catch (IOException e) { VolleyLog.e("IOException writing to ByteArrayOutputStream"); } return bos.toByteArray(); }
predict, score, loss = getBody, 0.9983025789260864, 0.006676104851067066

Trace of simplified code(s):
{"time": "2021-02-13 21:32:31.843531", "score": "0.9983", "loss": "0.0067", "code": "@Override public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream bos = new ByteArrayOutputStream(); try { entity.writeTo(bos); } catch (IOException e) { VolleyLog.e(\"IOException writing to ByteArrayOutputStream\"); } return bos.toByteArray(); }", "n_tokens": 108, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:32:33.220340", "score": "0.9978", "loss": "0.0076", "code": "@Override public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream bos = new ByteArrayOutputStream(); try { entity.writeTo(bos); } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 94, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 21:32:34.604734", "score": "0.9975", "loss": "0.0068", "code": "@Override public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try { entity.writeTo(bos); } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 87, "n_pass": [57, 3, 3]}
{"time": "2021-02-13 21:32:35.957461", "score": "0.9978", "loss": "0.0065", "code": "@Override public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 80, "n_pass": [59, 4, 4]}
{"time": "2021-02-13 21:32:37.341186", "score": "0.9974", "loss": "0.0089", "code": "public byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 77, "n_pass": [104, 5, 5]}
{"time": "2021-02-13 21:32:42.772532", "score": "0.9974", "loss": "0.0089", "code": " byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 76, "n_pass": [173, 7, 6]}
{"time": "2021-02-13 21:32:44.128131", "score": "0.9974", "loss": "0.0089", "code": "byte[] getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 75, "n_pass": [174, 8, 7]}
{"time": "2021-02-13 21:32:45.491827", "score": "0.9974", "loss": "0.0089", "code": "byte[]getBody() throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 74, "n_pass": [177, 9, 8]}
{"time": "2021-02-13 21:32:46.852721", "score": "0.9974", "loss": "0.0089", "code": "byte[]getBody()throws AuthFailureError { if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 73, "n_pass": [181, 10, 9]}
{"time": "2021-02-13 21:32:48.252597", "score": "0.9974", "loss": "0.0089", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { return super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 72, "n_pass": [185, 11, 10]}
{"time": "2021-02-13 21:32:49.617092", "score": "0.9969", "loss": "0.0141", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { super.getBody(); } ByteArrayOutputStream (); try {; } catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 70, "n_pass": [194, 12, 11]}
{"time": "2021-02-13 21:32:52.417425", "score": "0.9969", "loss": "0.0141", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { super.getBody(); } ByteArrayOutputStream (); try {} catch (IOException e) { ; } return bos.toByteArray(); }", "n_tokens": 68, "n_pass": [204, 14, 12]}
{"time": "2021-02-13 21:32:53.782873", "score": "0.9969", "loss": "0.0141", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { super.getBody(); } ByteArrayOutputStream (); try {} catch (IOException e) { } return bos.toByteArray(); }", "n_tokens": 66, "n_pass": [211, 15, 13]}
{"time": "2021-02-13 21:32:55.138518", "score": "0.9957", "loss": "0.0132", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { super.getBody(); } ByteArrayOutputStream (); try {} catch (IOException e) { } bos.toByteArray(); }", "n_tokens": 64, "n_pass": [213, 16, 14]}
{"time": "2021-02-13 21:32:56.498911", "score": "0.9927", "loss": "0.022", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { super.getBody(); } ByteArrayOutputStream (); try {} catch (IOException e) { } toByteArray(); }", "n_tokens": 62, "n_pass": [214, 17, 15]}
{"time": "2021-02-13 21:32:57.877450", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); } ByteArrayOutputStream (); try {} catch (IOException e) { } toByteArray(); }", "n_tokens": 60, "n_pass": [235, 18, 16]}
{"time": "2021-02-13 21:33:06.295470", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream (); try {} catch (IOException e) { } toByteArray(); }", "n_tokens": 59, "n_pass": [322, 19, 17]}
{"time": "2021-02-13 21:33:07.642492", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream(); try {} catch (IOException e) { } toByteArray(); }", "n_tokens": 58, "n_pass": [323, 20, 18]}
{"time": "2021-02-13 21:33:08.970386", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try {} catch (IOException e) { } toByteArray(); }", "n_tokens": 57, "n_pass": [327, 21, 19]}
{"time": "2021-02-13 21:33:10.344508", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{} catch (IOException e) { } toByteArray(); }", "n_tokens": 56, "n_pass": [329, 22, 20]}
{"time": "2021-02-13 21:33:11.703386", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch (IOException e) { } toByteArray(); }", "n_tokens": 55, "n_pass": [332, 23, 21]}
{"time": "2021-02-13 21:33:13.121470", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e) { } toByteArray(); }", "n_tokens": 54, "n_pass": [334, 24, 22]}
{"time": "2021-02-13 21:33:14.520381", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){ } toByteArray(); }", "n_tokens": 53, "n_pass": [340, 25, 23]}
{"time": "2021-02-13 21:33:15.985808", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){} toByteArray(); }", "n_tokens": 52, "n_pass": [342, 26, 24]}
{"time": "2021-02-13 21:33:17.355477", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray(); }", "n_tokens": 51, "n_pass": [344, 27, 25]}
{"time": "2021-02-13 21:33:18.685211", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{ if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 50, "n_pass": [349, 28, 26]}
{"time": "2021-02-13 21:33:20.059190", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if (entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 49, "n_pass": [361, 29, 27]}
{"time": "2021-02-13 21:33:21.416284", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity == null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 48, "n_pass": [363, 30, 28]}
{"time": "2021-02-13 21:33:22.765940", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity== null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 47, "n_pass": [366, 31, 29]}
{"time": "2021-02-13 21:33:26.827765", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity==null) { getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 46, "n_pass": [369, 34, 30]}
{"time": "2021-02-13 21:33:28.185073", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity==null){ getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 45, "n_pass": [372, 35, 31]}
{"time": "2021-02-13 21:33:29.533734", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity==null){getBody(); }ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 44, "n_pass": [374, 36, 32]}
{"time": "2021-02-13 21:33:31.024054", "score": "0.6456", "loss": "1.9522", "code": "byte[]getBody()throws AuthFailureError{if(entity==null){getBody();}ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}", "n_tokens": 43, "n_pass": [379, 37, 33]}

Minimal simplified code:
byte[]getBody()throws AuthFailureError{if(entity==null){getBody();}ByteArrayOutputStream();try{}catch(IOException e){}toByteArray();}

