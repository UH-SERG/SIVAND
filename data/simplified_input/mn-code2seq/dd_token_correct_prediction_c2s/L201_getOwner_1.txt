
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/lessonbuilder/hbm/src/java/org/sakaiproject/lessonbuildertool/SimplePageImpl_getOwner.java
method_name = getOwner
method_body = public String getOwner() { if (owner != null && owner.length() == 0) return null; return owner; }
predict, score, loss = getOwner, 0.9713403582572937, 0.3080365061759949

Trace of simplified code(s):
{"time": "2021-02-13 11:44:19.766496", "score": "0.9713", "loss": "0.308", "code": "public String getOwner() { if (owner != null && owner.length() == 0) return null; return owner; }", "n_tokens": 46, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 11:44:21.073628", "score": "0.9629", "loss": "0.2086", "code": "public String getOwner() { if (owner != null && owner.length() == 0)return owner; }", "n_tokens": 40, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 11:44:22.382877", "score": "0.7346", "loss": "2.8971", "code": "public String getOwner() { if (owner != null && owner.length() == 0); }", "n_tokens": 37, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 11:44:23.707609", "score": "0.7346", "loss": "2.8971", "code": "String getOwner() { if (owner != null && owner.length() == 0); }", "n_tokens": 35, "n_pass": [48, 4, 4]}
{"time": "2021-02-13 11:44:29.388811", "score": "0.7346", "loss": "2.8971", "code": "String getOwner(){ if (owner != null && owner.length() == 0); }", "n_tokens": 34, "n_pass": [90, 6, 5]}
{"time": "2021-02-13 11:44:30.680441", "score": "0.7346", "loss": "2.8971", "code": "String getOwner(){if (owner != null && owner.length() == 0); }", "n_tokens": 33, "n_pass": [92, 7, 6]}
{"time": "2021-02-13 11:44:31.993158", "score": "0.511", "loss": "3.7947", "code": "String getOwner(){ (owner != null && owner.length() == 0); }", "n_tokens": 32, "n_pass": [93, 8, 7]}
{"time": "2021-02-13 11:44:33.285412", "score": "0.511", "loss": "3.7947", "code": "String getOwner(){(owner != null && owner.length() == 0); }", "n_tokens": 31, "n_pass": [94, 9, 8]}
{"time": "2021-02-13 11:44:34.579810", "score": "0.511", "loss": "3.7947", "code": "String getOwner(){(owner!= null && owner.length() == 0); }", "n_tokens": 30, "n_pass": [97, 10, 9]}
{"time": "2021-02-13 11:44:35.869946", "score": "0.7419", "loss": "2.0457", "code": "String getOwner(){(owner!= null& owner.length() == 0); }", "n_tokens": 28, "n_pass": [100, 11, 10]}
{"time": "2021-02-13 11:44:44.133529", "score": "0.7419", "loss": "2.0457", "code": "String getOwner(){(owner!= null& owner.length()== 0); }", "n_tokens": 27, "n_pass": [143, 15, 11]}
{"time": "2021-02-13 11:44:46.154257", "score": "0.7419", "loss": "2.0457", "code": "String getOwner(){(owner!= null& owner.length()==0); }", "n_tokens": 26, "n_pass": [146, 16, 12]}
{"time": "2021-02-13 11:44:47.443180", "score": "0.7419", "loss": "2.0457", "code": "String getOwner(){(owner!= null& owner.length()==0);}", "n_tokens": 25, "n_pass": [150, 17, 13]}
{"time": "2021-02-13 11:44:49.800370", "score": "0.8704", "loss": "1.3565", "code": "String getOwner(){(owner= null& owner.length()==0);}", "n_tokens": 24, "n_pass": [160, 18, 14]}
{"time": "2021-02-13 11:44:51.098910", "score": "0.8704", "loss": "1.3565", "code": "String getOwner(){(owner=null& owner.length()==0);}", "n_tokens": 23, "n_pass": [162, 19, 15]}
{"time": "2021-02-13 11:44:52.392410", "score": "0.8704", "loss": "1.3565", "code": "String getOwner(){(owner=null&owner.length()==0);}", "n_tokens": 22, "n_pass": [165, 20, 16]}
{"time": "2021-02-13 11:44:53.692769", "score": "0.7419", "loss": "2.2921", "code": "String getOwner(){(owner=null&ownerlength()==0);}", "n_tokens": 21, "n_pass": [167, 21, 17]}
{"time": "2021-02-13 11:44:55.003080", "score": "0.8925", "loss": "1.1844", "code": "String getOwner(){(owner=null&owner()==0);}", "n_tokens": 20, "n_pass": [168, 22, 18]}
{"time": "2021-02-13 11:44:58.043509", "score": "0.3013", "loss": "5.1284", "code": "String getOwner(){(ownernull&owner()==0);}", "n_tokens": 19, "n_pass": [185, 23, 19]}
{"time": "2021-02-13 11:44:59.327916", "score": "0.7067", "loss": "1.8899", "code": "String getOwner(){(owner&owner()==0);}", "n_tokens": 18, "n_pass": [186, 24, 20]}

Minimal simplified code:
String getOwner(){(owner&owner()==0);}

