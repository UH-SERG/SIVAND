
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_attitude_quaternion_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }
predict, score, loss = pack, 0.976698100566864, 0.03596799820661545

Trace of simplified code(s):
{"time": "2021-02-13 19:03:59.114596", "score": "0.9741", "loss": "0.0541", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:04:00.483848", "score": "0.968", "loss": "0.0457", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2); packet.payload.putFloat(q3); packet.payload.putFloat(q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 141, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 19:04:01.869371", "score": "0.9594", "loss": "0.0533", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(rollspeed); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 121, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 19:04:03.238597", "score": "0.9733", "loss": "0.0332", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(pitchspeed); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 111, "n_pass": [44, 4, 4]}
{"time": "2021-02-13 19:04:04.601129", "score": "0.9759", "loss": "0.0324", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packetID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 101, "n_pass": [45, 5, 5]}
{"time": "2021-02-13 19:04:05.936954", "score": "0.9737", "loss": "0.0334", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms); packet.payload.putFloat(q1); packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 91, "n_pass": [50, 6, 6]}
{"time": "2021-02-13 19:04:07.267560", "score": "0.9569", "loss": "0.0569", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putUnsignedInt(time_boot_ms);; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 81, "n_pass": [53, 7, 7]}
{"time": "2021-02-13 19:04:08.596475", "score": "0.9349", "loss": "0.0916", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 71, "n_pass": [61, 8, 8]}
{"time": "2021-02-13 19:04:09.928067", "score": "0.9389", "loss": "0.0946", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); packet.payload.putFloat(yawspeed); return packet; }", "n_tokens": 66, "n_pass": [83, 9, 9]}
{"time": "2021-02-13 19:04:11.276416", "score": "0.9239", "loss": "0.1171", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); (yawspeed); return packet; }", "n_tokens": 61, "n_pass": [85, 10, 10]}
{"time": "2021-02-13 19:04:12.586651", "score": "0.8505", "loss": "0.2713", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 56, "n_pass": [86, 11, 11]}
{"time": "2021-02-13 19:04:13.926873", "score": "0.9136", "loss": "0.143", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 51, "n_pass": [90, 12, 12]}
{"time": "2021-02-13 19:04:15.237795", "score": "0.8067", "loss": "0.3989", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDE_QUATERNION; packet.payload.putFloat(q2q4); return packet; }", "n_tokens": 46, "n_pass": [92, 13, 13]}
{"time": "2021-02-13 19:04:16.561852", "score": "0.6857", "loss": "0.7256", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDE_QUATERNION.putFloat(q2q4); return packet; }", "n_tokens": 41, "n_pass": [95, 14, 14]}
{"time": "2021-02-13 19:04:17.901264", "score": "0.6235", "loss": "1.05", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q2q4); return packet; }", "n_tokens": 38, "n_pass": [120, 15, 15]}
{"time": "2021-02-13 19:04:19.208872", "score": "0.5688", "loss": "1.2239", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); return packet; }", "n_tokens": 35, "n_pass": [122, 16, 16]}
{"time": "2021-02-13 19:04:20.506871", "score": "0.5411", "loss": "1.282", "code": "public MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 32, "n_pass": [124, 17, 17]}
{"time": "2021-02-13 19:04:21.829690", "score": "0.5411", "loss": "1.282", "code": "MAVLinkPacket pack() {  new MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 30, "n_pass": [126, 18, 18]}
{"time": "2021-02-13 19:04:23.507519", "score": "0.8199", "loss": "0.2864", "code": "MAVLinkPacket pack() {  MAVLinkPacket(); packet.ID_ATTITUDEputFloat(q); ; }", "n_tokens": 28, "n_pass": [131, 19, 19]}
{"time": "2021-02-13 19:04:24.805317", "score": "0.8027", "loss": "0.5366", "code": "MAVLinkPacket pack() {  MAVLinkPacket();ID_ATTITUDEputFloat(q); ; }", "n_tokens": 25, "n_pass": [134, 20, 20]}
{"time": "2021-02-13 19:04:26.100794", "score": "0.9398", "loss": "0.0939", "code": "MAVLinkPacket pack() {  MAVLinkPacket();putFloat(q); ; }", "n_tokens": 22, "n_pass": [135, 21, 21]}
{"time": "2021-02-13 19:04:31.076500", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack() {  MAVLinkPacket();(q); ; }", "n_tokens": 21, "n_pass": [164, 23, 22]}
{"time": "2021-02-13 19:04:32.404947", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack() {  MAVLinkPacket();(q); }", "n_tokens": 19, "n_pass": [166, 24, 23]}
{"time": "2021-02-13 19:04:34.752936", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack(){  MAVLinkPacket();(q); }", "n_tokens": 18, "n_pass": [173, 25, 24]}
{"time": "2021-02-13 19:04:36.055012", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack(){ MAVLinkPacket();(q); }", "n_tokens": 17, "n_pass": [175, 26, 25]}
{"time": "2021-02-13 19:04:37.349269", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack(){MAVLinkPacket();(q); }", "n_tokens": 16, "n_pass": [176, 27, 26]}
{"time": "2021-02-13 19:04:40.370283", "score": "0.7318", "loss": "0.46", "code": "MAVLinkPacket pack(){MAVLinkPacket();(q);}", "n_tokens": 15, "n_pass": [200, 28, 27]}

Minimal simplified code:
MAVLinkPacket pack(){MAVLinkPacket();(q);}

