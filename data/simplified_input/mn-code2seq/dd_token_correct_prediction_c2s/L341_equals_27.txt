
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/identifier/OracleRowIdTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }
predict, score, loss = equals, 0.9979761242866516, 0.0023407344706356525

Trace of simplified code(s):
{"time": "2021-02-13 14:13:53.925371", "score": "0.998", "loss": "0.0023", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:13:55.268499", "score": "0.9963", "loss": "0.0045", "code": " boolean equals(Object o) { if (this == o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 75, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 14:13:56.586290", "score": "0.9916", "loss": "0.0103", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return false; return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 70, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 14:13:57.907130", "score": "0.9878", "loss": "0.0149", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id != null && id.equals(((PostComment) o).id); }", "n_tokens": 65, "n_pass": [52, 4, 4]}
{"time": "2021-02-13 14:13:59.212988", "score": "0.9883", "loss": "0.0142", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id && id.equals(((PostComment) o).id); }", "n_tokens": 60, "n_pass": [54, 5, 5]}
{"time": "2021-02-13 14:14:00.533201", "score": "0.9758", "loss": "0.0338", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id &&equals(((PostComment) o).id); }", "n_tokens": 57, "n_pass": [93, 6, 6]}
{"time": "2021-02-13 14:14:01.848112", "score": "0.9618", "loss": "0.0594", "code": " boolean equals(Object o) { if (o) return true; if (!(o instanceof PostComment)) return id &&equals(( o).id); }", "n_tokens": 54, "n_pass": [95, 7, 7]}
{"time": "2021-02-13 14:14:03.532935", "score": "0.9106", "loss": "0.1562", "code": " boolean equals(Object o) { if (o) true; if (!(o instanceof PostComment)) return id &&equals(( o).id); }", "n_tokens": 52, "n_pass": [108, 8, 8]}
{"time": "2021-02-13 14:14:04.843163", "score": "0.863", "loss": "0.257", "code": " boolean equals(Object o) { if (o)  if (!(o instanceof PostComment)) return id &&equals(( o).id); }", "n_tokens": 50, "n_pass": [109, 9, 9]}
{"time": "2021-02-13 14:14:06.141247", "score": "0.5003", "loss": "0.9936", "code": " boolean equals(Object o) { if (o)  if (!(o )) return id &&equals(( o).id); }", "n_tokens": 47, "n_pass": [113, 10, 10]}
{"time": "2021-02-13 14:14:12.765789", "score": "0.5003", "loss": "0.9936", "code": " boolean equals(Object o) { if (o)  if (!(o)) return id &&equals(( o).id); }", "n_tokens": 46, "n_pass": [172, 12, 11]}
{"time": "2021-02-13 14:14:14.071347", "score": "0.5003", "loss": "0.9936", "code": " boolean equals(Object o) { if (o)  if (!(o))return id &&equals(( o).id); }", "n_tokens": 45, "n_pass": [175, 13, 12]}
{"time": "2021-02-13 14:14:17.031913", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o) { if (o)  if (!(o))return id &&equals(( o).id); }", "n_tokens": 44, "n_pass": [185, 15, 13]}
{"time": "2021-02-13 14:14:19.051950", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){ if (o)  if (!(o))return id &&equals(( o).id); }", "n_tokens": 43, "n_pass": [194, 16, 14]}
{"time": "2021-02-13 14:14:20.352095", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){if (o)  if (!(o))return id &&equals(( o).id); }", "n_tokens": 42, "n_pass": [196, 17, 15]}
{"time": "2021-02-13 14:14:21.666174", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){if(o)  if (!(o))return id &&equals(( o).id); }", "n_tokens": 41, "n_pass": [198, 18, 16]}
{"time": "2021-02-13 14:14:22.990084", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){if(o) if (!(o))return id &&equals(( o).id); }", "n_tokens": 40, "n_pass": [202, 19, 17]}
{"time": "2021-02-13 14:14:24.316836", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){if(o)if (!(o))return id &&equals(( o).id); }", "n_tokens": 39, "n_pass": [203, 20, 18]}
{"time": "2021-02-13 14:14:25.614114", "score": "0.5003", "loss": "0.9936", "code": "boolean equals(Object o){if(o)if(!(o))return id &&equals(( o).id); }", "n_tokens": 38, "n_pass": [205, 21, 19]}
{"time": "2021-02-13 14:14:26.919375", "score": "0.4899", "loss": "1.0833", "code": "boolean equals(Object o){if(o)if((o))return id &&equals(( o).id); }", "n_tokens": 37, "n_pass": [207, 22, 20]}
{"time": "2021-02-13 14:14:33.012288", "score": "0.4899", "loss": "1.0833", "code": "boolean equals(Object o){if(o)if((o))return id&&equals(( o).id); }", "n_tokens": 36, "n_pass": [257, 24, 21]}
{"time": "2021-02-13 14:14:34.308708", "score": "0.4547", "loss": "1.0899", "code": "boolean equals(Object o){if(o)if((o))return id&equals(( o).id); }", "n_tokens": 35, "n_pass": [258, 25, 22]}
{"time": "2021-02-13 14:14:38.219400", "score": "0.4547", "loss": "1.0899", "code": "boolean equals(Object o){if(o)if((o))return id&equals((o).id); }", "n_tokens": 34, "n_pass": [263, 28, 23]}
{"time": "2021-02-13 14:14:39.518847", "score": "0.7591", "loss": "0.4255", "code": "boolean equals(Object o){if(o)if((o))return id&equals((o)id); }", "n_tokens": 33, "n_pass": [266, 29, 24]}
{"time": "2021-02-13 14:14:42.130586", "score": "0.7591", "loss": "0.4255", "code": "boolean equals(Object o){if(o)if((o))return id&equals((o)id);}", "n_tokens": 32, "n_pass": [270, 31, 25]}

Minimal simplified code:
boolean equals(Object o){if(o)if((o))return id&equals((o)id);}

