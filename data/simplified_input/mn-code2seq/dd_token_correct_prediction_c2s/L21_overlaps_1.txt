
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/kernel-impl/src/main/java/org/sakaiproject/time/impl/BasicTimeService_overlaps.java
method_name = overlaps
method_body = public boolean overlaps(TimeRange range) { boolean overlaps = false; if (range.contains(firstTime())) { overlaps = true; } else if (range.contains(lastTime())) { overlaps = true; } else if (contains(range)) { overlaps = true; } return overlaps; }
predict, score, loss = overlaps, 0.7351540923118591, 0.5751832723617554

Trace of simplified code(s):
{"time": "2021-02-13 04:01:47.010274", "score": "0.7352", "loss": "0.5752", "code": "public boolean overlaps(TimeRange range) { boolean overlaps = false; if (range.contains(firstTime())) { overlaps = true; } else if (range.contains(lastTime())) { overlaps = true; } else if (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:01:48.350915", "score": "0.6391", "loss": "0.736", "code": "public boolean overlaps(TimeRange range) { boolean overlaps = false; if (range.contains(firstTime())) { overlaps = true; } else if  (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 75, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 04:01:49.708841", "score": "0.4493", "loss": "1.1656", "code": "public boolean overlaps(TimeRange range) { false; if (range.contains(firstTime())) { overlaps = true; } else if  (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 69, "n_pass": [43, 3, 3]}
{"time": "2021-02-13 04:01:52.392857", "score": "0.5352", "loss": "0.9944", "code": "public boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps = true; } else if  (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 66, "n_pass": [76, 5, 4]}
{"time": "2021-02-13 04:01:53.729286", "score": "0.3862", "loss": "1.4392", "code": "public boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; } else if  (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 63, "n_pass": [82, 6, 5]}
{"time": "2021-02-13 04:01:55.040249", "score": "0.4443", "loss": "1.2418", "code": "public boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) { overlaps = true; } return overlaps; }", "n_tokens": 60, "n_pass": [84, 7, 6]}
{"time": "2021-02-13 04:01:56.351738", "score": "0.4016", "loss": "1.3072", "code": "public boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } return overlaps; }", "n_tokens": 57, "n_pass": [89, 8, 7]}
{"time": "2021-02-13 04:02:06.100285", "score": "0.6666", "loss": "0.6749", "code": "public boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 55, "n_pass": [147, 13, 8]}
{"time": "2021-02-13 04:02:08.765181", "score": "0.6666", "loss": "0.6749", "code": " boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 54, "n_pass": [150, 15, 9]}
{"time": "2021-02-13 04:02:10.060821", "score": "0.6666", "loss": "0.6749", "code": "boolean overlaps(TimeRange range) { if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 53, "n_pass": [151, 16, 10]}
{"time": "2021-02-13 04:02:12.102023", "score": "0.6666", "loss": "0.6749", "code": "boolean overlaps(TimeRange range){ if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 52, "n_pass": [160, 17, 11]}
{"time": "2021-02-13 04:02:13.403080", "score": "0.6666", "loss": "0.6749", "code": "boolean overlaps(TimeRange range){if (range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 51, "n_pass": [162, 18, 12]}
{"time": "2021-02-13 04:02:14.705107", "score": "0.6666", "loss": "0.6749", "code": "boolean overlaps(TimeRange range){if(range.contains(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 50, "n_pass": [164, 19, 13]}
{"time": "2021-02-13 04:02:16.046705", "score": "0.6963", "loss": "0.618", "code": "boolean overlaps(TimeRange range){if(range(firstTime())) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 48, "n_pass": [166, 20, 14]}
{"time": "2021-02-13 04:02:17.359104", "score": "0.8121", "loss": "0.4065", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { overlaps ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 46, "n_pass": [168, 21, 15]}
{"time": "2021-02-13 04:02:18.657501", "score": "0.8567", "loss": "0.3182", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { ; }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 44, "n_pass": [171, 22, 16]}
{"time": "2021-02-13 04:02:19.957618", "score": "0.8567", "loss": "0.3182", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { }if  (contains(range)) {  true; } overlaps; }", "n_tokens": 42, "n_pass": [172, 23, 17]}
{"time": "2021-02-13 04:02:21.268683", "score": "0.4957", "loss": "0.9027", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { }if  (contains(range)) { ; } overlaps; }", "n_tokens": 40, "n_pass": [180, 24, 18]}
{"time": "2021-02-13 04:02:22.566377", "score": "0.4957", "loss": "0.9027", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { }if  (contains(range)) { } overlaps; }", "n_tokens": 38, "n_pass": [181, 25, 19]}
{"time": "2021-02-13 04:02:28.879855", "score": "0.4957", "loss": "0.9027", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { }if  (contains(range)) { }overlaps; }", "n_tokens": 37, "n_pass": [234, 27, 20]}
{"time": "2021-02-13 04:02:31.492523", "score": "0.4957", "loss": "0.9027", "code": "boolean overlaps(TimeRange range){if(range(firstTime)) { }if  (contains(range)) { }overlaps;}", "n_tokens": 36, "n_pass": [237, 29, 21]}
{"time": "2021-02-13 04:02:33.503720", "score": "0.4849", "loss": "0.9168", "code": "boolean overlaps(TimeRange range){if((firstTime)) { }if  (contains(range)) { }overlaps;}", "n_tokens": 35, "n_pass": [250, 30, 22]}
{"time": "2021-02-13 04:02:34.796870", "score": "0.4849", "loss": "0.9168", "code": "boolean overlaps(TimeRange range){if((firstTime)){ }if  (contains(range)) { }overlaps;}", "n_tokens": 34, "n_pass": [255, 31, 23]}
{"time": "2021-02-13 04:02:36.124693", "score": "0.4849", "loss": "0.9168", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if  (contains(range)) { }overlaps;}", "n_tokens": 33, "n_pass": [257, 32, 24]}
{"time": "2021-02-13 04:02:37.418435", "score": "0.4849", "loss": "0.9168", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if (contains(range)) { }overlaps;}", "n_tokens": 32, "n_pass": [260, 33, 25]}
{"time": "2021-02-13 04:02:38.744601", "score": "0.4849", "loss": "0.9168", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if(contains(range)) { }overlaps;}", "n_tokens": 31, "n_pass": [261, 34, 26]}
{"time": "2021-02-13 04:02:40.059716", "score": "0.4777", "loss": "1.0349", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if((range)) { }overlaps;}", "n_tokens": 30, "n_pass": [263, 35, 27]}
{"time": "2021-02-13 04:02:41.365211", "score": "0.4777", "loss": "1.0349", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if((range)){ }overlaps;}", "n_tokens": 29, "n_pass": [268, 36, 28]}
{"time": "2021-02-13 04:02:42.660136", "score": "0.4777", "loss": "1.0349", "code": "boolean overlaps(TimeRange range){if((firstTime)){}if((range)){}overlaps;}", "n_tokens": 28, "n_pass": [270, 37, 29]}

Minimal simplified code:
boolean overlaps(TimeRange range){if((firstTime)){}if((range)){}overlaps;}

