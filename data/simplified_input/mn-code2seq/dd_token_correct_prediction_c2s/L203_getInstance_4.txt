
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/isismtt/ocsp/RequestedCertificate_getInstance.java
method_name = getInstance
method_body = public static RequestedCertificate getInstance(ASN1TaggedObject obj, boolean explicit) { if (!explicit) { throw new IllegalArgumentException("choice item must be explicitly tagged"); } return getInstance(obj.getObject()); }
predict, score, loss = getInstance, 0.9937931299209595, 0.01863017864525318

Trace of simplified code(s):
{"time": "2021-02-13 11:45:35.204367", "score": "0.9938", "loss": "0.0186", "code": "public static RequestedCertificate getInstance(ASN1TaggedObject obj, boolean explicit) { if (!explicit) { throw new IllegalArgumentException(\"choice item must be explicitly tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 68, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 11:45:36.530582", "score": "0.9938", "loss": "0.0186", "code": "RequestedCertificate getInstance(ASN1TaggedObject obj, boolean explicit) { if (!explicit) { throw new IllegalArgumentException(\"choice item must be explicitly tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 64, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 11:45:37.831377", "score": "0.9877", "loss": "0.0303", "code": "RequestedCertificate getInstance(ASN1TaggedObject  explicit) { if (!explicit) { throw new IllegalArgumentException(\"choice item must be explicitly tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 60, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 11:45:39.174532", "score": "0.9866", "loss": "0.0335", "code": "RequestedCertificate getInstance(ASN1TaggedObject  explicit) { if (!explicit) { throw(\"choice item must be explicitly tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 56, "n_pass": [51, 4, 4]}
{"time": "2021-02-13 11:45:40.473959", "score": "0.9902", "loss": "0.0245", "code": "RequestedCertificate getInstance(ASN1TaggedObject  explicit) { if (!explicit) { throw(\"choice be explicitly tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 52, "n_pass": [53, 5, 5]}
{"time": "2021-02-13 11:45:41.778460", "score": "0.9887", "loss": "0.0295", "code": "RequestedCertificate getInstance(ASN1TaggedObject  explicit) { if (!explicit) { throw(\"choice tagged\"); } return getInstance(obj.getObject()); }", "n_tokens": 48, "n_pass": [54, 6, 6]}
{"time": "2021-02-13 11:45:43.086141", "score": "0.9852", "loss": "0.0464", "code": "RequestedCertificate getInstance(ASN1TaggedObject  explicit) { if (!explicit) { throw(\"choice tagged\"); } getInstance(obj.getObject()); }", "n_tokens": 46, "n_pass": [91, 7, 7]}
{"time": "2021-02-13 11:45:44.774748", "score": "0.9118", "loss": "0.2508", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) { throw(\"choice tagged\"); } getInstance(obj.getObject()); }", "n_tokens": 44, "n_pass": [98, 8, 8]}
{"time": "2021-02-13 11:45:46.092272", "score": "0.7811", "loss": "0.7587", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"choice tagged\"); } getInstance(obj.getObject()); }", "n_tokens": 42, "n_pass": [107, 9, 9]}
{"time": "2021-02-13 11:45:47.388366", "score": "0.8792", "loss": "0.403", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"tagged\"); } getInstance(obj.getObject()); }", "n_tokens": 40, "n_pass": [109, 10, 10]}
{"time": "2021-02-13 11:45:52.382514", "score": "0.954", "loss": "0.1422", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"\"); } getInstance(obj.getObject()); }", "n_tokens": 39, "n_pass": [164, 11, 11]}
{"time": "2021-02-13 11:45:53.680721", "score": "0.954", "loss": "0.1422", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"\");} getInstance(obj.getObject()); }", "n_tokens": 38, "n_pass": [167, 12, 12]}
{"time": "2021-02-13 11:45:54.997504", "score": "0.954", "loss": "0.1422", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"\");}getInstance(obj.getObject()); }", "n_tokens": 37, "n_pass": [169, 13, 13]}
{"time": "2021-02-13 11:45:57.582316", "score": "0.8986", "loss": "0.34", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"\");}getInstance(obj()); }", "n_tokens": 35, "n_pass": [173, 15, 14]}
{"time": "2021-02-13 11:45:58.875039", "score": "0.8279", "loss": "0.5805", "code": "RequestedCertificate getInstance(TaggedObject  explicit) { if (!explicit) {(\"\");}getInstance(obj); }", "n_tokens": 33, "n_pass": [174, 16, 15]}
{"time": "2021-02-13 11:46:01.251532", "score": "0.8279", "loss": "0.5805", "code": "RequestedCertificate getInstance(TaggedObject explicit) { if (!explicit) {(\"\");}getInstance(obj); }", "n_tokens": 32, "n_pass": [182, 17, 16]}
{"time": "2021-02-13 11:46:02.545236", "score": "0.8279", "loss": "0.5805", "code": "RequestedCertificate getInstance(TaggedObject explicit){ if (!explicit) {(\"\");}getInstance(obj); }", "n_tokens": 31, "n_pass": [186, 18, 17]}
{"time": "2021-02-13 11:46:03.841244", "score": "0.8279", "loss": "0.5805", "code": "RequestedCertificate getInstance(TaggedObject explicit){if (!explicit) {(\"\");}getInstance(obj); }", "n_tokens": 30, "n_pass": [188, 19, 18]}
{"time": "2021-02-13 11:46:05.136511", "score": "0.8279", "loss": "0.5805", "code": "RequestedCertificate getInstance(TaggedObject explicit){if(!explicit) {(\"\");}getInstance(obj); }", "n_tokens": 29, "n_pass": [190, 20, 19]}
{"time": "2021-02-13 11:46:06.461010", "score": "0.8297", "loss": "0.5846", "code": "RequestedCertificate getInstance(TaggedObject explicit){if(explicit) {(\"\");}getInstance(obj); }", "n_tokens": 28, "n_pass": [192, 21, 20]}
{"time": "2021-02-13 11:46:07.770115", "score": "0.8297", "loss": "0.5846", "code": "RequestedCertificate getInstance(TaggedObject explicit){if(explicit){(\"\");}getInstance(obj); }", "n_tokens": 27, "n_pass": [195, 22, 21]}
{"time": "2021-02-13 11:46:10.416555", "score": "0.6856", "loss": "1.6105", "code": "RequestedCertificate getInstance(TaggedObject explicit){if(explicit){(\"\");}getInstance(); }", "n_tokens": 26, "n_pass": [205, 24, 22]}
{"time": "2021-02-13 11:46:13.506678", "score": "0.6856", "loss": "1.6105", "code": "RequestedCertificate getInstance(TaggedObject explicit){if(explicit){(\"\");}getInstance();}", "n_tokens": 25, "n_pass": [235, 25, 23]}

Minimal simplified code:
RequestedCertificate getInstance(TaggedObject explicit){if(explicit){("");}getInstance();}

