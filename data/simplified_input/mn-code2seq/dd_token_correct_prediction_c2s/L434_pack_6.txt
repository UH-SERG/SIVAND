
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/ardupilotmega/msg_ahrs2_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_AHRS2; packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }
predict, score, loss = pack, 0.9744857549667358, 0.032298214733600616

Trace of simplified code(s):
{"time": "2021-02-13 15:52:18.117400", "score": "0.9877", "loss": "0.0175", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_AHRS2; packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 132, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:52:19.475800", "score": "0.9779", "loss": "0.0264", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid =packet.payload.putFloat(roll); packet.payload.putFloat(pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 99, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 15:52:20.837339", "score": "0.9882", "loss": "0.0156", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid (pitch); packet.payload.putFloat(yaw); packet.payload.putFloat(altitude); packet.payload.putInt(lat); packet.payload.putInt(lng); return packet; }", "n_tokens": 83, "n_pass": [18, 3, 3]}
{"time": "2021-02-13 15:52:22.185654", "score": "0.9724", "loss": "0.0423", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid (pitch); packet.payload.putFloat(yaw); packet. packet.payload.putInt(lng); return packet; }", "n_tokens": 66, "n_pass": [20, 4, 4]}
{"time": "2021-02-13 15:52:23.535210", "score": "0.9311", "loss": "0.1026", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = (pitch); packet.payload.putFloat(yaw); packet. packet.payload.putInt(lng); return packet; }", "n_tokens": 50, "n_pass": [23, 5, 5]}
{"time": "2021-02-13 15:52:24.858949", "score": "0.2945", "loss": "2.047", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet.payload.putInt(lng); return packet; }", "n_tokens": 33, "n_pass": [24, 6, 6]}
{"time": "2021-02-13 15:52:29.560082", "score": "0.754", "loss": "0.5387", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet.payload.putInt(lng); packet; }", "n_tokens": 31, "n_pass": [70, 9, 7]}
{"time": "2021-02-13 15:52:30.910331", "score": "0.5233", "loss": "1.2308", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet =  packet.payload.putInt(lng);; }", "n_tokens": 29, "n_pass": [71, 10, 8]}
{"time": "2021-02-13 15:52:32.269738", "score": "0.5233", "loss": "1.2308", "code": "MAVLinkPacket pack() { MAVLinkPacket packet =  packet.payload.putInt(lng);; }", "n_tokens": 27, "n_pass": [73, 11, 9]}
{"time": "2021-02-13 15:52:33.911712", "score": "0.71", "loss": "0.4419", "code": "MAVLinkPacket pack() { packet =  packet.payload.putInt(lng);; }", "n_tokens": 25, "n_pass": [78, 12, 10]}
{"time": "2021-02-13 15:52:35.220452", "score": "0.6743", "loss": "0.7297", "code": "MAVLinkPacket pack() { packet =  packet.putInt(lng);; }", "n_tokens": 23, "n_pass": [82, 13, 11]}
{"time": "2021-02-13 15:52:36.504880", "score": "0.4487", "loss": "1.1979", "code": "MAVLinkPacket pack() { packet =  packet(lng);; }", "n_tokens": 21, "n_pass": [83, 14, 12]}
{"time": "2021-02-13 15:52:38.158413", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack() { packet = (lng);; }", "n_tokens": 19, "n_pass": [93, 15, 13]}
{"time": "2021-02-13 15:52:43.404816", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack() { packet = (lng); }", "n_tokens": 18, "n_pass": [124, 17, 14]}
{"time": "2021-02-13 15:52:45.740465", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack(){ packet = (lng); }", "n_tokens": 17, "n_pass": [132, 18, 15]}
{"time": "2021-02-13 15:52:47.012817", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack(){packet = (lng); }", "n_tokens": 16, "n_pass": [134, 19, 16]}
{"time": "2021-02-13 15:52:48.293527", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack(){packet= (lng); }", "n_tokens": 15, "n_pass": [136, 20, 17]}
{"time": "2021-02-13 15:52:50.906566", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack(){packet=(lng); }", "n_tokens": 14, "n_pass": [138, 22, 18]}
{"time": "2021-02-13 15:52:54.863861", "score": "0.6822", "loss": "0.6179", "code": "MAVLinkPacket pack(){packet=(lng);}", "n_tokens": 13, "n_pass": [154, 24, 19]}

Minimal simplified code:
MAVLinkPacket pack(){packet=(lng);}

