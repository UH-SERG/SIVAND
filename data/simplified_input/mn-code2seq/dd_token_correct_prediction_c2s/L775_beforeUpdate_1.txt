
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/glyptodon__guacamole-client/extensions/guacamole-auth-jdbc/modules/guacamole-auth-jdbc-base/src/main/java/org/apache/guacamole/auth/jdbc/connection/ConnectionService_beforeUpdate.java
method_name = beforeUpdate
method_body = @Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model.getName() == null || model.getName().trim().isEmpty()) throw new GuacamoleClientException("Connection names must not be blank."); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException("The connection \"" + model.getName() + "\" already exists."); } }
predict, score, loss = beforeUpdate, 0.8451963663101196, 0.37113702297210693

Trace of simplified code(s):
{"time": "2021-02-13 21:53:17.311415", "score": "0.8357", "loss": "0.399", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model.getName() == null || model.getName().trim().isEmpty()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 197, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:53:18.703764", "score": "0.7994", "loss": "0.5134", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); ConnectionModel existing = connectionMapper.selectOneByName(model.getParentIdentifier(), model.getName()); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 173, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 21:53:20.072027", "score": "0.8297", "loss": "0.417", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID().equals(model.getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 148, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 21:53:21.447813", "score": "0.8332", "loss": "0.4064", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(\"The connection \\\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 142, "n_pass": [83, 4, 4]}
{"time": "2021-02-13 21:53:22.791313", "score": "0.8292", "loss": "0.4187", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(\"\" + model.getName() + \"\\\" already exists.\"); } }", "n_tokens": 136, "n_pass": [86, 5, 5]}
{"time": "2021-02-13 21:53:24.132507", "score": "0.8257", "loss": "0.4293", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\\\" already exists.\"); } }", "n_tokens": 129, "n_pass": [87, 6, 6]}
{"time": "2021-02-13 21:53:25.471392", "score": "0.8421", "loss": "0.3802", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection names must not be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 122, "n_pass": [89, 7, 7]}
{"time": "2021-02-13 21:53:27.189061", "score": "0.8157", "loss": "0.4604", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connection be blank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 116, "n_pass": [101, 8, 8]}
{"time": "2021-02-13 21:53:28.931352", "score": "0.81", "loss": "0.4786", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID(getObjectID())) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 113, "n_pass": [159, 9, 9]}
{"time": "2021-02-13 21:53:30.278514", "score": "0.8255", "loss": "0.4297", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID()) throw new GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 110, "n_pass": [168, 10, 10]}
{"time": "2021-02-13 21:53:31.617219", "score": "0.8572", "loss": "0.3368", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(getName() + \"\"); } }", "n_tokens": 107, "n_pass": [170, 11, 11]}
{"time": "2021-02-13 21:53:32.961170", "score": "0.8652", "loss": "0.3147", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException( + \"\"); } }", "n_tokens": 104, "n_pass": [172, 12, 12]}
{"time": "2021-02-13 21:53:34.309093", "score": "0.8603", "loss": "0.3283", "code": "@Override protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 101, "n_pass": [173, 13, 13]}
{"time": "2021-02-13 21:53:35.641858", "score": "0.8149", "loss": "0.4632", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model) throws GuacamoleException { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 98, "n_pass": [176, 14, 14]}
{"time": "2021-02-13 21:53:37.343836", "score": "0.898", "loss": "0.2297", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, object, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 95, "n_pass": [184, 15, 15]}
{"time": "2021-02-13 21:53:38.678542", "score": "0.9127", "loss": "0.1944", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model()) throw new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 92, "n_pass": [188, 16, 16]}
{"time": "2021-02-13 21:53:40.014049", "score": "0.95", "loss": "0.108", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())new GuacamoleClientException(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 89, "n_pass": [193, 17, 17]}
{"time": "2021-02-13 21:53:41.342084", "score": "0.9576", "loss": "0.0916", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\"Connectionblank.\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 86, "n_pass": [194, 18, 18]}
{"time": "2021-02-13 21:53:46.727695", "score": "0.9629", "loss": "0.0797", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!existing.getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 84, "n_pass": [286, 19, 19]}
{"time": "2021-02-13 21:53:48.083844", "score": "0.9716", "loss": "0.061", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())  GuacamoleClientException(\"\"); } }", "n_tokens": 82, "n_pass": [298, 20, 20]}
{"time": "2021-02-13 21:53:49.414770", "score": "0.9716", "loss": "0.061", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(\"\"); } }", "n_tokens": 80, "n_pass": [301, 21, 21]}
{"time": "2021-02-13 21:53:50.744238", "score": "0.9737", "loss": "0.0567", "code": "protected void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 78, "n_pass": [303, 22, 22]}
{"time": "2021-02-13 21:53:52.109269", "score": "0.9737", "loss": "0.0567", "code": " void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 77, "n_pass": [307, 23, 23]}
{"time": "2021-02-13 21:53:53.458475", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user, ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 76, "n_pass": [308, 24, 24]}
{"time": "2021-02-13 21:53:55.521708", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object, ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 75, "n_pass": [317, 25, 25]}
{"time": "2021-02-13 21:53:56.869173", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model)  { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 74, "n_pass": [322, 26, 26]}
{"time": "2021-02-13 21:53:58.195769", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model) { super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 73, "n_pass": [327, 27, 27]}
{"time": "2021-02-13 21:53:59.538361", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){ super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 72, "n_pass": [328, 28, 28]}
{"time": "2021-02-13 21:54:00.866556", "score": "0.9737", "loss": "0.0567", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(user, model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 71, "n_pass": [330, 29, 29]}
{"time": "2021-02-13 21:54:03.531976", "score": "0.9805", "loss": "0.0419", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate( model); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 69, "n_pass": [334, 31, 30]}
{"time": "2021-02-13 21:54:04.842520", "score": "0.8857", "loss": "0.2834", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\".\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 67, "n_pass": [335, 32, 31]}
{"time": "2021-02-13 21:54:12.885676", "score": "0.8625", "loss": "0.3486", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\"); if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 66, "n_pass": [429, 34, 32]}
{"time": "2021-02-13 21:54:14.199776", "score": "0.8625", "loss": "0.3486", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if (existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 65, "n_pass": [432, 35, 33]}
{"time": "2021-02-13 21:54:15.514700", "score": "0.8625", "loss": "0.3486", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing != null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 64, "n_pass": [434, 36, 34]}
{"time": "2021-02-13 21:54:16.842401", "score": "0.8625", "loss": "0.3486", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing!= null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 63, "n_pass": [437, 37, 35]}
{"time": "2021-02-13 21:54:18.155055", "score": "0.8745", "loss": "0.3138", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing= null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 62, "n_pass": [438, 38, 36]}
{"time": "2021-02-13 21:54:19.481869", "score": "0.8745", "loss": "0.3138", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null) { if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 61, "n_pass": [440, 39, 37]}
{"time": "2021-02-13 21:54:20.786699", "score": "0.8745", "loss": "0.3138", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){ if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 60, "n_pass": [443, 40, 38]}
{"time": "2021-02-13 21:54:22.100216", "score": "0.8745", "loss": "0.3138", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if (!getObjectID())GuacamoleClientException(); } }", "n_tokens": 59, "n_pass": [445, 41, 39]}
{"time": "2021-02-13 21:54:23.405645", "score": "0.8745", "loss": "0.3138", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(!getObjectID())GuacamoleClientException(); } }", "n_tokens": 58, "n_pass": [447, 42, 40]}
{"time": "2021-02-13 21:54:24.755170", "score": "0.8609", "loss": "0.3474", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException(); } }", "n_tokens": 57, "n_pass": [449, 43, 41]}
{"time": "2021-02-13 21:54:26.110663", "score": "0.8609", "loss": "0.3474", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();} }", "n_tokens": 56, "n_pass": [458, 44, 42]}
{"time": "2021-02-13 21:54:27.431477", "score": "0.8609", "loss": "0.3474", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate(); if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 55, "n_pass": [460, 45, 43]}
{"time": "2021-02-13 21:54:30.944156", "score": "0.8609", "loss": "0.3474", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if (model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 54, "n_pass": [485, 47, 44]}
{"time": "2021-02-13 21:54:32.279658", "score": "0.8609", "loss": "0.3474", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existing=null){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 53, "n_pass": [487, 48, 45]}
{"time": "2021-02-13 21:54:33.635892", "score": "0.8559", "loss": "0.3633", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existingnull){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 52, "n_pass": [501, 49, 46]}
{"time": "2021-02-13 21:54:34.952925", "score": "0.8507", "loss": "0.3809", "code": "void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())(\"\");if(existing){if(getObjectID())GuacamoleClientException();}}", "n_tokens": 51, "n_pass": [502, 50, 47]}

Minimal simplified code:
void beforeUpdate(ModeledAuthenticatedUser user,ModeledConnection object,ConnectionModel model){super.beforeUpdate();if(model())("");if(existing){if(getObjectID())GuacamoleClientException();}}

