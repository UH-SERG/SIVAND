
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/demilich1__metastone/game/src/main/java/net/demilich/metastone/game/spells/desc/SpellDesc_toString.java
method_name = toString
method_body = @Override public String toString() { String result = "[SpellDesc arguments= {\n"; for (SpellArg spellArg : arguments.keySet()) { result += "\t" + spellArg + ": " + arguments.get(spellArg) + "\n"; } result += "}"; return result; }
predict, score, loss = toString, 0.9945778250694275, 0.01493482943624258

Trace of simplified code(s):
{"time": "2021-02-14 02:28:35.200370", "score": "0.9946", "loss": "0.0149", "code": "@Override public String toString() { String result = \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" + spellArg + \": \" + arguments.get(spellArg) + \"\\n\"; } result += \"}\"; return result; }", "n_tokens": 106, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:28:37.384807", "score": "0.9964", "loss": "0.0099", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" + spellArg + \": \" + arguments.get(spellArg) + \"\\n\"; } result += \"}\"; return result; }", "n_tokens": 100, "n_pass": [46, 2, 2]}
{"time": "2021-02-14 02:28:38.721462", "score": "0.9958", "loss": "0.0113", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" + spellArg + arguments.get(spellArg) + \"\\n\"; } result += \"}\"; return result; }", "n_tokens": 93, "n_pass": [54, 3, 3]}
{"time": "2021-02-14 02:28:40.481486", "score": "0.9945", "loss": "0.0147", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\"  + arguments.get(spellArg) + \"\\n\"; } result += \"}\"; return result; }", "n_tokens": 90, "n_pass": [97, 4, 4]}
{"time": "2021-02-14 02:28:41.856895", "score": "0.9912", "loss": "0.023", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result += \"}\"; return result; }", "n_tokens": 86, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 02:28:43.194512", "score": "0.9113", "loss": "0.2352", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; }  \"}\"; return result; }", "n_tokens": 82, "n_pass": [103, 6, 6]}
{"time": "2021-02-14 02:28:44.539168", "score": "0.7629", "loss": "0.6955", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } ; return result; }", "n_tokens": 78, "n_pass": [104, 7, 7]}
{"time": "2021-02-14 02:28:45.890023", "score": "0.8167", "loss": "0.5012", "code": "@Override public String toString() { \"[SpellDesc arguments= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 74, "n_pass": [105, 8, 8]}
{"time": "2021-02-14 02:28:48.936361", "score": "0.8155", "loss": "0.5388", "code": "@Override public String toString() { \"[= {\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 71, "n_pass": [112, 10, 9]}
{"time": "2021-02-14 02:28:50.296082", "score": "0.812", "loss": "0.5237", "code": "@Override public String toString() { \"[\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 68, "n_pass": [113, 11, 10]}
{"time": "2021-02-14 02:28:55.742643", "score": "0.812", "loss": "0.5237", "code": "@Override public String toString(){ \"[\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 67, "n_pass": [177, 13, 11]}
{"time": "2021-02-14 02:28:57.090520", "score": "0.812", "loss": "0.5237", "code": "@Override public String toString(){\"[\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 66, "n_pass": [179, 14, 12]}
{"time": "2021-02-14 02:28:58.438637", "score": "0.8181", "loss": "0.5146", "code": "@Override public String toString(){\"\\n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 65, "n_pass": [181, 15, 13]}
{"time": "2021-02-14 02:28:59.765667", "score": "0.8221", "loss": "0.5069", "code": "@Override public String toString(){\"n\"; for (SpellArg spellArg : arguments.keySet()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 64, "n_pass": [182, 16, 14]}
{"time": "2021-02-14 02:29:01.102576", "score": "0.8902", "loss": "0.2931", "code": "@Override public String toString(){\"n\"; for (SpellArg spellArg : arguments()) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 62, "n_pass": [190, 17, 15]}
{"time": "2021-02-14 02:29:02.426898", "score": "0.8858", "loss": "0.2845", "code": "@Override public String toString(){\"n\"; for (SpellArg spellArg : arguments) { result += \"\\t\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 60, "n_pass": [191, 18, 16]}
{"time": "2021-02-14 02:29:03.886238", "score": "0.8772", "loss": "0.3071", "code": "@Override public String toString(){\"n\"; for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; } result; }", "n_tokens": 58, "n_pass": [197, 19, 17]}
{"time": "2021-02-14 02:29:05.212921", "score": "0.8969", "loss": "0.2486", "code": "@Override public String toString(){\"n\"; for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 56, "n_pass": [207, 20, 18]}
{"time": "2021-02-14 02:29:06.573451", "score": "0.8657", "loss": "0.3788", "code": "@Overridepublic String toString(){\"n\"; for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 55, "n_pass": [211, 21, 19]}
{"time": "2021-02-14 02:29:07.917052", "score": "0.8969", "loss": "0.2486", "code": "@Override String toString(){\"n\"; for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 54, "n_pass": [212, 22, 20]}
{"time": "2021-02-14 02:29:17.006313", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\"; for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 53, "n_pass": [289, 23, 21]}
{"time": "2021-02-14 02:29:18.368193", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for (SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 52, "n_pass": [291, 24, 22]}
{"time": "2021-02-14 02:29:19.722844", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg : arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 51, "n_pass": [293, 25, 23]}
{"time": "2021-02-14 02:29:21.099768", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg: arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 50, "n_pass": [298, 26, 24]}
{"time": "2021-02-14 02:29:22.437097", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments) { result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 49, "n_pass": [300, 27, 25]}
{"time": "2021-02-14 02:29:23.778426", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){ result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 48, "n_pass": [303, 28, 26]}
{"time": "2021-02-14 02:29:25.116211", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result += \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 47, "n_pass": [305, 29, 27]}
{"time": "2021-02-14 02:29:26.484286", "score": "0.8949", "loss": "0.2511", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result+= \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 46, "n_pass": [307, 30, 28]}
{"time": "2021-02-14 02:29:27.847206", "score": "0.8652", "loss": "0.3455", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result= \"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 45, "n_pass": [308, 31, 29]}
{"time": "2021-02-14 02:29:29.192822", "score": "0.8652", "loss": "0.3455", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\" .get(spellArg) + \"\\n\"; }  }", "n_tokens": 44, "n_pass": [310, 32, 30]}
{"time": "2021-02-14 02:29:30.534533", "score": "0.8652", "loss": "0.3455", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get(spellArg) + \"\\n\"; }  }", "n_tokens": 43, "n_pass": [313, 33, 31]}
{"time": "2021-02-14 02:29:32.101194", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get() + \"\\n\"; }  }", "n_tokens": 42, "n_pass": [317, 34, 32]}
{"time": "2021-02-14 02:29:33.436092", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+ \"\\n\"; }  }", "n_tokens": 41, "n_pass": [319, 35, 33]}
{"time": "2021-02-14 02:29:34.774896", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"\\n\"; }  }", "n_tokens": 40, "n_pass": [321, 36, 34]}
{"time": "2021-02-14 02:29:36.106252", "score": "0.8188", "loss": "0.4873", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"n\"; }  }", "n_tokens": 39, "n_pass": [323, 37, 35]}
{"time": "2021-02-14 02:29:37.438575", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"\"; }  }", "n_tokens": 38, "n_pass": [324, 38, 36]}
{"time": "2021-02-14 02:29:38.879452", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"\";}  }", "n_tokens": 37, "n_pass": [327, 39, 37]}
{"time": "2021-02-14 02:29:40.242403", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"\";} }", "n_tokens": 36, "n_pass": [329, 40, 38]}
{"time": "2021-02-14 02:29:41.598110", "score": "0.846", "loss": "0.395", "code": "@Override String toString(){\"\";for(SpellArg spellArg:arguments){result=\"\".get()+\"\";}}", "n_tokens": 35, "n_pass": [330, 41, 39]}

Minimal simplified code:
@Override String toString(){"";for(SpellArg spellArg:arguments){result="".get()+"";}}

