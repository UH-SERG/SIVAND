
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/test/java/com/questdb/net/ha/AbstractJournalTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, "origin"); slave = getFactory().writer(Quote.class, "slave"); master = getFactory().writer(Quote.class, "master"); journalClientStateProducer = new JournalClientStateProducer(); journalClientStateConsumer = new JournalClientStateConsumer(); this.masterReader = getFactory().reader(Quote.class, "master"); journalDeltaProducer = new JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }
predict, score, loss = setUp, 0.8280256390571594, 0.4609455466270447

Trace of simplified code(s):
{"time": "2021-02-13 19:55:58.745522", "score": "0.7958", "loss": "0.5349", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave = getFactory().writer(Quote.class, \"slave\"); master = getFactory().writer(Quote.class, \"master\"); journalClientStateProducer = new JournalClientStateProducer(); journalClientStateConsumer = new JournalClientStateConsumer(); this.masterReader = getFactory().reader(Quote.class, \"master\"); journalDeltaProducer = new JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 161, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:56:00.086085", "score": "0.7318", "loss": "0.7759", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave journalClientStateProducer = new JournalClientStateProducer(); journalClientStateConsumer = new JournalClientStateConsumer(); this.masterReader = getFactory().reader(Quote.class, \"master\"); journalDeltaProducer = new JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 121, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 19:56:01.432888", "score": "0.8057", "loss": "0.4985", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave ; this.masterReader = getFactory().reader(Quote.class, \"master\"); journalDeltaProducer = new JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 101, "n_pass": [18, 3, 3]}
{"time": "2021-02-13 19:56:02.791092", "score": "0.8109", "loss": "0.4821", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\"); journalDeltaProducer = new JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 96, "n_pass": [63, 4, 4]}
{"time": "2021-02-13 19:56:04.127336", "score": "0.7523", "loss": "0.6975", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\");  JournalDeltaProducer(masterReader); journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 91, "n_pass": [67, 5, 5]}
{"time": "2021-02-13 19:56:05.476888", "score": "0.8168", "loss": "0.4625", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\"); ; journalDeltaConsumer = new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 86, "n_pass": [68, 6, 6]}
{"time": "2021-02-13 19:56:06.802341", "score": "0.838", "loss": "0.3995", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\");  new JournalDeltaConsumer(slave); channel = new MockByteChannel(); }", "n_tokens": 81, "n_pass": [69, 7, 7]}
{"time": "2021-02-13 19:56:08.134253", "score": "0.7868", "loss": "0.5763", "code": "@Before public void setUp() throws Exception { origin = getFactory().writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\");  new JournalDeltaConsumer(slave); channelMockByteChannel(); }", "n_tokens": 76, "n_pass": [72, 8, 8]}
{"time": "2021-02-13 19:56:12.099923", "score": "0.7668", "loss": "0.648", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class, \"origin\"); slave  = getFactory().reader(Quote.class, \"master\");  new JournalDeltaConsumer(slave); channelMockByteChannel(); }", "n_tokens": 71, "n_pass": [78, 11, 9]}
{"time": "2021-02-13 19:56:13.422593", "score": "0.7581", "loss": "0.6856", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  new JournalDeltaConsumer(slave); channelMockByteChannel(); }", "n_tokens": 66, "n_pass": [80, 12, 10]}
{"time": "2021-02-13 19:56:17.793813", "score": "0.8037", "loss": "0.5109", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  (slave); channelMockByteChannel(); }", "n_tokens": 63, "n_pass": [131, 15, 11]}
{"time": "2021-02-13 19:56:19.115673", "score": "0.7948", "loss": "0.5401", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  ; channelMockByteChannel(); }", "n_tokens": 60, "n_pass": [132, 16, 12]}
{"time": "2021-02-13 19:56:20.430519", "score": "0.7939", "loss": "0.5461", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  MockByteChannel(); }", "n_tokens": 57, "n_pass": [133, 17, 13]}
{"time": "2021-02-13 19:56:21.747194", "score": "0.8401", "loss": "0.3917", "code": "@Before public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  ; }", "n_tokens": 54, "n_pass": [134, 18, 14]}
{"time": "2021-02-13 19:56:23.080316", "score": "0.8191", "loss": "0.5538", "code": " public void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  ; }", "n_tokens": 52, "n_pass": [136, 19, 15]}
{"time": "2021-02-13 19:56:24.387421", "score": "0.8191", "loss": "0.5538", "code": " void setUp() throws Exception { origin =writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  ; }", "n_tokens": 50, "n_pass": [137, 20, 16]}
{"time": "2021-02-13 19:56:26.082843", "score": "0.7091", "loss": "1.1277", "code": " void setUp() throws Exception { originwriter(Quote.class); slave  = getFactory().reader(Quote.class, \"master\");  ; }", "n_tokens": 48, "n_pass": [145, 21, 17]}
{"time": "2021-02-13 19:56:27.422741", "score": "0.7091", "loss": "1.1277", "code": " void setUp() throws Exception { originwriter(Quote.class); slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 45, "n_pass": [156, 22, 18]}
{"time": "2021-02-13 19:56:29.089291", "score": "0.7485", "loss": "0.916", "code": " void setUp() throws Exception {writer(Quote.class); slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 43, "n_pass": [164, 23, 19]}
{"time": "2021-02-13 19:56:34.090345", "score": "0.7769", "loss": "0.7437", "code": " void setUp() throws Exception {(Quote.class); slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 42, "n_pass": [216, 24, 20]}
{"time": "2021-02-13 19:56:35.395306", "score": "0.7779", "loss": "0.7741", "code": " void setUp() throws Exception {(Quoteclass); slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 41, "n_pass": [218, 25, 21]}
{"time": "2021-02-13 19:56:36.730416", "score": "0.7945", "loss": "0.7345", "code": " void setUp() throws Exception {(Quote); slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 40, "n_pass": [219, 26, 22]}
{"time": "2021-02-13 19:56:38.393702", "score": "0.7945", "loss": "0.7345", "code": " void setUp() throws Exception {(Quote);slave  = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 39, "n_pass": [222, 27, 23]}
{"time": "2021-02-13 19:56:39.697017", "score": "0.7945", "loss": "0.7345", "code": " void setUp() throws Exception {(Quote);slave = getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 38, "n_pass": [224, 28, 24]}
{"time": "2021-02-13 19:56:41.003153", "score": "0.7945", "loss": "0.7345", "code": " void setUp() throws Exception {(Quote);slave= getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 37, "n_pass": [225, 29, 25]}
{"time": "2021-02-13 19:56:42.309867", "score": "0.7945", "loss": "0.7345", "code": " void setUp() throws Exception {(Quote);slave=getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 36, "n_pass": [227, 30, 26]}
{"time": "2021-02-13 19:56:43.631119", "score": "0.7945", "loss": "0.7345", "code": "void setUp() throws Exception {(Quote);slave=getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 35, "n_pass": [237, 31, 27]}
{"time": "2021-02-13 19:56:45.649530", "score": "0.7945", "loss": "0.7345", "code": "void setUp()throws Exception {(Quote);slave=getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 34, "n_pass": [243, 32, 28]}
{"time": "2021-02-13 19:56:46.952867", "score": "0.7945", "loss": "0.7345", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote.class, \"master\"); }", "n_tokens": 33, "n_pass": [247, 33, 29]}
{"time": "2021-02-13 19:56:51.676342", "score": "0.7003", "loss": "1.3158", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quoteclass, \"master\"); }", "n_tokens": 32, "n_pass": [297, 35, 30]}
{"time": "2021-02-13 19:56:52.971711", "score": "0.7037", "loss": "1.3156", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote, \"master\"); }", "n_tokens": 31, "n_pass": [298, 36, 31]}
{"time": "2021-02-13 19:56:54.283236", "score": "0.7037", "loss": "1.3156", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote,\"master\"); }", "n_tokens": 30, "n_pass": [300, 37, 32]}
{"time": "2021-02-13 19:56:55.587839", "score": "0.7466", "loss": "1.1835", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote,\"\"); }", "n_tokens": 29, "n_pass": [302, 38, 33]}
{"time": "2021-02-13 19:56:56.903555", "score": "0.7466", "loss": "1.1835", "code": "void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote,\"\");}", "n_tokens": 28, "n_pass": [306, 39, 34]}

Minimal simplified code:
void setUp()throws Exception{(Quote);slave=getFactory().reader(Quote,"");}

