
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-sts/openam-common-sts/src/main/java/org/forgerock/openam/sts/service/invocation/TokenGenerationServiceInvocationState_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }
predict, score, loss = equals, 0.9793389439582825, 0.02657097764313221

Trace of simplified code(s):
{"time": "2021-02-13 12:27:55.557083", "score": "0.9599", "loss": "0.0491", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals(oc.getSsoTokenString()) && tokenType.equals(oc.getTokenType()) && stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 177, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:27:56.943119", "score": "0.9767", "loss": "0.0275", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(oc.getStsType()) && Objects.equal(saml2TokenGenerationState, oc.getSaml2TokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 155, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 12:27:58.322022", "score": "0.9566", "loss": "0.0524", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equal(openIdConnectTokenGenerationState, oc.getOpenIdConnectTokenGenerationState()) && realm.equals(oc.getRealm()); } return false; }", "n_tokens": 133, "n_pass": [25, 3, 3]}
{"time": "2021-02-13 12:27:59.700871", "score": "0.9798", "loss": "0.0247", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equal&& realm.equals(oc.getRealm()); } return false; }", "n_tokens": 122, "n_pass": [45, 4, 4]}
{"time": "2021-02-13 12:28:01.057789", "score": "0.9805", "loss": "0.0245", "code": "@Override public boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 116, "n_pass": [78, 5, 5]}
{"time": "2021-02-13 12:28:02.402653", "score": "0.9707", "loss": "0.0434", "code": "boolean equals(Object other) { if (other == this) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 111, "n_pass": [82, 6, 6]}
{"time": "2021-02-13 12:28:03.748504", "score": "0.958", "loss": "0.0627", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return ssoTokenString.equals&& stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 106, "n_pass": [86, 7, 7]}
{"time": "2021-02-13 12:28:05.129277", "score": "0.9395", "loss": "0.0965", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals(ocTokenGenerationState()) && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 100, "n_pass": [94, 8, 8]}
{"time": "2021-02-13 12:28:06.475050", "score": "0.937", "loss": "0.0986", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equals && Objects.equals(oc.getRealm()); } return false; }", "n_tokens": 94, "n_pass": [98, 9, 9]}
{"time": "2021-02-13 12:28:07.831345", "score": "0.872", "loss": "0.1959", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } return false; }", "n_tokens": 88, "n_pass": [99, 10, 10]}
{"time": "2021-02-13 12:28:09.186537", "score": "0.8123", "loss": "0.3019", "code": "boolean equals(Object other) { if (other) { return true; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 85, "n_pass": [152, 11, 11]}
{"time": "2021-02-13 12:28:10.908289", "score": "0.7371", "loss": "0.442", "code": "boolean equals(Object other) { if (other) { ; } if (other instanceof TokenGenerationServiceInvocationState) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 82, "n_pass": [162, 12, 12]}
{"time": "2021-02-13 12:28:12.323247", "score": "0.6658", "loss": "0.6077", "code": "boolean equals(Object other) { if (other) { ; } if (other ) { TokenGenerationServiceInvocationState oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 79, "n_pass": [166, 13, 13]}
{"time": "2021-02-13 12:28:13.652113", "score": "0.62", "loss": "0.7271", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && stsType.equalsequals(oc.getRealm()); } ; }", "n_tokens": 76, "n_pass": [168, 14, 14]}
{"time": "2021-02-13 12:28:15.701056", "score": "0.8655", "loss": "0.204", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) && equals(oc.getRealm()); } ; }", "n_tokens": 73, "n_pass": [178, 15, 15]}
{"time": "2021-02-13 12:28:23.440660", "score": "0.7007", "loss": "0.503", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc.getRealm()); } ; }", "n_tokens": 71, "n_pass": [262, 16, 16]}
{"time": "2021-02-13 12:28:24.757047", "score": "0.7683", "loss": "0.3945", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc()); } ; }", "n_tokens": 69, "n_pass": [264, 17, 17]}
{"time": "2021-02-13 12:28:26.066534", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } ; }", "n_tokens": 67, "n_pass": [265, 18, 18]}
{"time": "2021-02-13 12:28:27.393982", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other) { if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 65, "n_pass": [268, 19, 19]}
{"time": "2021-02-13 12:28:29.433460", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){ if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 64, "n_pass": [278, 20, 20]}
{"time": "2021-02-13 12:28:30.742715", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if (other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 63, "n_pass": [280, 21, 21]}
{"time": "2021-02-13 12:28:32.055355", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other) { ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 62, "n_pass": [282, 22, 22]}
{"time": "2021-02-13 12:28:33.363281", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){ ; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 61, "n_pass": [286, 23, 23]}
{"time": "2021-02-13 12:28:34.701284", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){; } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 60, "n_pass": [288, 24, 24]}
{"time": "2021-02-13 12:28:36.010396", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){ } if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 59, "n_pass": [289, 25, 25]}
{"time": "2021-02-13 12:28:37.320265", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){} if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 58, "n_pass": [290, 26, 26]}
{"time": "2021-02-13 12:28:38.656646", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if (other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 57, "n_pass": [292, 27, 27]}
{"time": "2021-02-13 12:28:40.004842", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if(other ) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 56, "n_pass": [294, 28, 28]}
{"time": "2021-02-13 12:28:41.317732", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if(other) {oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 55, "n_pass": [297, 29, 29]}
{"time": "2021-02-13 12:28:42.625117", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if(other){oc = (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 54, "n_pass": [299, 30, 30]}
{"time": "2021-02-13 12:28:43.937791", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if(other){oc= (TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 53, "n_pass": [302, 31, 31]}
{"time": "2021-02-13 12:28:45.271712", "score": "0.6892", "loss": "0.5573", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc.getStsInstanceId()) &&(oc); } }", "n_tokens": 52, "n_pass": [304, 32, 32]}
{"time": "2021-02-13 12:28:48.251869", "score": "0.6667", "loss": "0.6029", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc()) &&(oc); } }", "n_tokens": 50, "n_pass": [312, 34, 33]}
{"time": "2021-02-13 12:28:49.551360", "score": "0.6199", "loss": "0.663", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc) &&(oc); } }", "n_tokens": 48, "n_pass": [313, 35, 34]}
{"time": "2021-02-13 12:28:55.973977", "score": "0.5437", "loss": "0.9231", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc) &(oc); } }", "n_tokens": 47, "n_pass": [375, 37, 35]}
{"time": "2021-02-13 12:28:57.302509", "score": "0.5437", "loss": "0.9231", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc) &(oc);} }", "n_tokens": 46, "n_pass": [380, 38, 36]}
{"time": "2021-02-13 12:28:58.611048", "score": "0.5437", "loss": "0.9231", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState) other; return stsInstanceId.equals(oc) &(oc);}}", "n_tokens": 45, "n_pass": [382, 39, 37]}
{"time": "2021-02-13 12:29:00.660121", "score": "0.5437", "loss": "0.9231", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other; return stsInstanceId.equals(oc) &(oc);}}", "n_tokens": 44, "n_pass": [409, 40, 38]}
{"time": "2021-02-13 12:29:03.310480", "score": "0.5437", "loss": "0.9231", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other;return stsInstanceId.equals(oc) &(oc);}}", "n_tokens": 43, "n_pass": [412, 42, 39]}
{"time": "2021-02-13 12:29:06.700165", "score": "0.4626", "loss": "1.1915", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other;return stsInstanceId.equals() &(oc);}}", "n_tokens": 42, "n_pass": [419, 44, 40]}
{"time": "2021-02-13 12:29:08.035737", "score": "0.4626", "loss": "1.1915", "code": "boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other;return stsInstanceId.equals()&(oc);}}", "n_tokens": 41, "n_pass": [421, 45, 41]}

Minimal simplified code:
boolean equals(Object other){if(other){}if(other){oc=(TokenGenerationServiceInvocationState)other;return stsInstanceId.equals()&(oc);}}

