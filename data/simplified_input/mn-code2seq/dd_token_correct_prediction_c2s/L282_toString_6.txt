
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/configurator/StateData_toString.java
method_name = toString
method_body = public String toString() { StringBuffer sb = new StringBuffer(); sb.append(" instanceName: "); sb.append(instanceName).append(LINE_SEP); sb.append(" isInstanceData: "); sb.append(isInstanceData).append(LINE_SEP); sb.append(" nameValueMap:").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(" "); sb.append((String) me.getKey()).append(" = "); sb.append(me.getValue().toString()).append("\n"); } return sb.toString(); }
predict, score, loss = toString, 0.953093409538269, 0.16305911540985107

Trace of simplified code(s):
{"time": "2021-02-13 13:10:02.398908", "score": "0.9472", "loss": "0.1916", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append(\" isInstanceData: \"); sb.append(isInstanceData).append(LINE_SEP); sb.append(\" nameValueMap:\").append(LINE_SEP); Iterator iter = nameValueMap.entrySet().iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 219, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:10:03.781447", "score": "0.9723", "loss": "0.0938", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(\" instanceName: \"); sb.append(instanceName).append(LINE_SEP); sb.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 164, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 13:10:05.260293", "score": "0.9789", "loss": "0.0814", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append(instanceName).append(LINE_SEP); sb.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 151, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 13:10:06.609920", "score": "0.9802", "loss": "0.0761", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.next(); sb.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 138, "n_pass": [47, 4, 4]}
{"time": "2021-02-13 13:10:07.969610", "score": "0.9892", "loss": "0.0439", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter.append(\" \"); sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 131, "n_pass": [83, 5, 5]}
{"time": "2021-02-13 13:10:09.323117", "score": "0.9888", "loss": "0.0447", "code": "public String toString() { StringBuffer sb = new StringBuffer(); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 124, "n_pass": [84, 6, 6]}
{"time": "2021-02-13 13:10:10.670495", "score": "0.9923", "loss": "0.0315", "code": "public String toString() { StringBuffer (); sb.append.append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 117, "n_pass": [96, 7, 7]}
{"time": "2021-02-13 13:10:12.002673", "score": "0.9872", "loss": "0.0485", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Map.Entry me = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 110, "n_pass": [97, 8, 8]}
{"time": "2021-02-13 13:10:13.378117", "score": "0.9773", "loss": "0.0869", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry) iter; sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 107, "n_pass": [153, 9, 9]}
{"time": "2021-02-13 13:10:14.716248", "score": "0.9443", "loss": "0.1887", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry) sb.append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 104, "n_pass": [157, 10, 10]}
{"time": "2021-02-13 13:10:16.048222", "score": "0.9377", "loss": "0.2038", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me.getKey()).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 101, "n_pass": [158, 11, 11]}
{"time": "2021-02-13 13:10:17.383125", "score": "0.9611", "loss": "0.1423", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue().toString()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 97, "n_pass": [161, 12, 12]}
{"time": "2021-02-13 13:10:18.724296", "score": "0.9194", "loss": "0.2744", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\\n\"); } return sb.toString(); }", "n_tokens": 93, "n_pass": [167, 13, 13]}
{"time": "2021-02-13 13:10:22.793208", "score": "0.9194", "loss": "0.2744", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } return sb.toString(); }", "n_tokens": 91, "n_pass": [252, 14, 14]}
{"time": "2021-02-13 13:10:24.130986", "score": "0.9709", "loss": "0.1079", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } sb.toString(); }", "n_tokens": 89, "n_pass": [256, 15, 15]}
{"time": "2021-02-13 13:10:25.458199", "score": "0.9504", "loss": "0.1966", "code": "public String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 87, "n_pass": [257, 16, 16]}
{"time": "2021-02-13 13:10:26.784671", "score": "0.9504", "loss": "0.1966", "code": " String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 86, "n_pass": [261, 17, 17]}
{"time": "2021-02-13 13:10:28.161146", "score": "0.9504", "loss": "0.1966", "code": "String toString() { StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 85, "n_pass": [262, 18, 18]}
{"time": "2021-02-13 13:10:30.593871", "score": "0.9504", "loss": "0.1966", "code": "String toString(){ StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 84, "n_pass": [268, 19, 19]}
{"time": "2021-02-13 13:10:31.928393", "score": "0.9504", "loss": "0.1966", "code": "String toString(){StringBuffer .append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 83, "n_pass": [270, 20, 20]}
{"time": "2021-02-13 13:10:33.265653", "score": "0.9504", "loss": "0.1966", "code": "String toString(){StringBuffer.append.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 82, "n_pass": [272, 21, 21]}
{"time": "2021-02-13 13:10:34.578634", "score": "0.9309", "loss": "0.2695", "code": "String toString(){StringBufferappend.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 81, "n_pass": [273, 22, 22]}
{"time": "2021-02-13 13:10:35.925560", "score": "0.9497", "loss": "0.2035", "code": "String toString(){StringBuffer.iterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 80, "n_pass": [274, 23, 23]}
{"time": "2021-02-13 13:10:37.243132", "score": "0.9006", "loss": "0.3895", "code": "String toString(){StringBufferiterator(); while (iter.hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 79, "n_pass": [275, 24, 24]}
{"time": "2021-02-13 13:10:38.557016", "score": "0.8769", "loss": "0.4771", "code": "String toString(){StringBufferiterator(); while (hasNext()) { Mapme = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 77, "n_pass": [280, 25, 25]}
{"time": "2021-02-13 13:10:39.880639", "score": "0.9492", "loss": "0.184", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map.Entry)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 75, "n_pass": [284, 26, 26]}
{"time": "2021-02-13 13:10:41.201900", "score": "0.9438", "loss": "0.204", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String) me).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 73, "n_pass": [288, 27, 27]}
{"time": "2021-02-13 13:10:42.540383", "score": "0.9427", "loss": "0.2067", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" = \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 71, "n_pass": [292, 28, 28]}
{"time": "2021-02-13 13:10:43.899133", "score": "0.9395", "loss": "0.2232", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); sb.append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 69, "n_pass": [296, 29, 29]}
{"time": "2021-02-13 13:10:45.218820", "score": "0.9272", "loss": "0.2766", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(me.getValue()).append(\"\"); } toString(); }", "n_tokens": 67, "n_pass": [299, 30, 30]}
{"time": "2021-02-13 13:10:46.525861", "score": "0.9428", "loss": "0.2285", "code": "String toString(){StringBufferiterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 65, "n_pass": [301, 31, 31]}
{"time": "2021-02-13 13:10:48.935593", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator(); while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 64, "n_pass": [318, 32, 32]}
{"time": "2021-02-13 13:10:56.009968", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator();while (hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 63, "n_pass": [412, 33, 33]}
{"time": "2021-02-13 13:10:57.315705", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator();while(hasNext()) {me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 62, "n_pass": [413, 34, 34]}
{"time": "2021-02-13 13:10:58.632965", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator();while(hasNext()){me = (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 61, "n_pass": [419, 35, 35]}
{"time": "2021-02-13 13:10:59.944079", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator();while(hasNext()){me= (Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 60, "n_pass": [422, 36, 36]}
{"time": "2021-02-13 13:11:01.251924", "score": "0.9796", "loss": "0.0828", "code": "String toString(){iterator();while(hasNext()){me=(Map)append((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 59, "n_pass": [424, 37, 37]}
{"time": "2021-02-13 13:11:02.560769", "score": "0.9776", "loss": "0.089", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\" \"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 58, "n_pass": [428, 38, 38]}
{"time": "2021-02-13 13:11:03.874031", "score": "0.9803", "loss": "0.0786", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\"); append(getValue()).append(\"\"); } toString(); }", "n_tokens": 57, "n_pass": [438, 39, 39]}
{"time": "2021-02-13 13:11:05.207219", "score": "0.9803", "loss": "0.0786", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");append(getValue()).append(\"\"); } toString(); }", "n_tokens": 56, "n_pass": [442, 40, 40]}
{"time": "2021-02-13 13:11:06.534867", "score": "0.9775", "loss": "0.0887", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\"); } toString(); }", "n_tokens": 55, "n_pass": [443, 41, 41]}
{"time": "2021-02-13 13:11:07.868106", "score": "0.9775", "loss": "0.0887", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");} toString(); }", "n_tokens": 54, "n_pass": [456, 42, 42]}
{"time": "2021-02-13 13:11:09.199822", "score": "0.9775", "loss": "0.0887", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");}toString(); }", "n_tokens": 53, "n_pass": [458, 43, 43]}
{"time": "2021-02-13 13:11:10.544564", "score": "0.9775", "loss": "0.0887", "code": "String toString(){iterator();while(hasNext()){me=(Map)((String)).append(\"\");(getValue()).append(\"\");}toString();}", "n_tokens": 52, "n_pass": [463, 44, 44]}

Minimal simplified code:
String toString(){iterator();while(hasNext()){me=(Map)((String)).append("");(getValue()).append("");}toString();}

