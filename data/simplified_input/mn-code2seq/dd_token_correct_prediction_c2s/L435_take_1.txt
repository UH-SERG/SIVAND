
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/test/java/com/android/volley/mock/WaitableQueue_take.java
method_name = take
method_body = @Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }
predict, score, loss = take, 0.9995989203453064, 0.0006149901892058551

Trace of simplified code(s):
{"time": "2021-02-13 15:52:59.832961", "score": "0.9996", "loss": "0.0006", "code": "@Override public Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:53:01.521681", "score": "0.9996", "loss": "0.0015", "code": " Request<?> take() throws InterruptedException { Request<?> item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 67, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 15:53:02.838392", "score": "0.9983", "loss": "0.0028", "code": " Request<?> take() throws InterruptedException {  item = super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 63, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 15:53:04.169510", "score": "0.9988", "loss": "0.0016", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); return take(); } return item; }", "n_tokens": 59, "n_pass": [49, 4, 4]}
{"time": "2021-02-13 15:53:05.492311", "score": "0.9987", "loss": "0.0017", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); ; } return item; }", "n_tokens": 54, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 15:53:07.478593", "score": "0.999", "loss": "0.0022", "code": " Request<?> take() throws InterruptedException {  super.take(); if (item == mStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 51, "n_pass": [95, 6, 6]}
{"time": "2021-02-13 15:53:09.133449", "score": "0.4913", "loss": "1.2002", "code": " Request<?> take() throws InterruptedException {  super.take; if (item == mStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 49, "n_pass": [107, 7, 7]}
{"time": "2021-02-13 15:53:10.454075", "score": "0.3817", "loss": "1.6033", "code": " Request<?> take() throws InterruptedException {  super.take; if (item= mStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 47, "n_pass": [111, 8, 8]}
{"time": "2021-02-13 15:53:11.801991", "score": "0.4544", "loss": "1.4916", "code": " Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) { mStopEvent.release(); ; } ; }", "n_tokens": 45, "n_pass": [112, 9, 9]}
{"time": "2021-02-13 15:53:13.106276", "score": "0.8205", "loss": "0.574", "code": " Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) {release(); ; } ; }", "n_tokens": 42, "n_pass": [115, 10, 10]}
{"time": "2021-02-13 15:53:20.368131", "score": "0.8205", "loss": "0.574", "code": " Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) {release() ; } ; }", "n_tokens": 41, "n_pass": [176, 12, 11]}
{"time": "2021-02-13 15:53:21.692171", "score": "0.8205", "loss": "0.574", "code": " Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 39, "n_pass": [178, 13, 12]}
{"time": "2021-02-13 15:53:22.995654", "score": "0.8205", "loss": "0.574", "code": "Request<?> take() throws InterruptedException {  super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 38, "n_pass": [180, 14, 13]}
{"time": "2021-02-13 15:53:24.330756", "score": "0.8205", "loss": "0.574", "code": "Request<?>take() throws InterruptedException {  super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 37, "n_pass": [185, 15, 14]}
{"time": "2021-02-13 15:53:25.635898", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException {  super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 36, "n_pass": [189, 16, 15]}
{"time": "2021-02-13 15:53:26.941264", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException{  super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 35, "n_pass": [193, 17, 16]}
{"time": "2021-02-13 15:53:28.250756", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException{ super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 34, "n_pass": [195, 18, 17]}
{"time": "2021-02-13 15:53:29.557609", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException{super.take; if (itemmStopRequest) {release() ; } }", "n_tokens": 33, "n_pass": [196, 19, 18]}
{"time": "2021-02-13 15:53:32.163263", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException{super.take;if (itemmStopRequest) {release() ; } }", "n_tokens": 32, "n_pass": [201, 21, 19]}
{"time": "2021-02-13 15:53:33.505623", "score": "0.8205", "loss": "0.574", "code": "Request<?>take()throws InterruptedException{super.take;if(itemmStopRequest) {release() ; } }", "n_tokens": 31, "n_pass": [203, 22, 20]}
{"time": "2021-02-13 15:53:34.816144", "score": "0.8844", "loss": "0.3608", "code": "Request<?>take()throws InterruptedException{super.take;if(mStopRequest) {release() ; } }", "n_tokens": 30, "n_pass": [205, 23, 21]}
{"time": "2021-02-13 15:53:36.121850", "score": "0.8844", "loss": "0.3608", "code": "Request<?>take()throws InterruptedException{super.take;if(mStopRequest){release() ; } }", "n_tokens": 29, "n_pass": [208, 24, 22]}
{"time": "2021-02-13 15:53:40.093684", "score": "0.8844", "loss": "0.3608", "code": "Request<?>take()throws InterruptedException{super.take;if(mStopRequest){release(); } }", "n_tokens": 28, "n_pass": [241, 26, 23]}
{"time": "2021-02-13 15:53:41.403617", "score": "0.8844", "loss": "0.3608", "code": "Request<?>take()throws InterruptedException{super.take;if(mStopRequest){release();} }", "n_tokens": 27, "n_pass": [242, 27, 24]}
{"time": "2021-02-13 15:53:42.704452", "score": "0.8844", "loss": "0.3608", "code": "Request<?>take()throws InterruptedException{super.take;if(mStopRequest){release();}}", "n_tokens": 26, "n_pass": [244, 28, 25]}

Minimal simplified code:
Request<?>take()throws InterruptedException{super.take;if(mStopRequest){release();}}

