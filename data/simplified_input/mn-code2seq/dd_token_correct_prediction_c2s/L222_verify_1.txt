
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject_verify.java
method_name = verify
method_body = public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else { sig = Signature.getInstance(getSigAlgName()); } doVerify(key, sig); }
predict, score, loss = verify, 0.8564810156822205, 0.22431349754333496

Trace of simplified code(s):
{"time": "2021-02-13 12:07:41.403852", "score": "0.8565", "loss": "0.2243", "code": "public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else { sig = Signature.getInstance(getSigAlgName()); } doVerify(key, sig); }", "n_tokens": 98, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:07:42.767296", "score": "0.8949", "loss": "0.1645", "code": "public void verify(PublicKey key, Provider sigProvider) throws CRLException, NoSuchAlgorithmException, InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 85, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 12:07:44.457085", "score": "0.875", "loss": "0.2056", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException { Signature sig; if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 79, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 12:07:45.773464", "score": "0.8324", "loss": "0.2484", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider); } else {  } doVerify(key, sig); }", "n_tokens": 73, "n_pass": [55, 4, 4]}
{"time": "2021-02-13 12:07:47.091107", "score": "0.8324", "loss": "0.2484", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key, sig); }", "n_tokens": 67, "n_pass": [61, 5, 5]}
{"time": "2021-02-13 12:07:48.420591", "score": "0.801", "loss": "0.3172", "code": "public void verify(PublicKey key, Provider sigProvider) throws InvalidKeyException, SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 64, "n_pass": [97, 6, 6]}
{"time": "2021-02-13 12:07:50.097958", "score": "0.7014", "loss": "0.744", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig = Signature.getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 61, "n_pass": [104, 7, 7]}
{"time": "2021-02-13 12:07:51.403706", "score": "0.7729", "loss": "0.6568", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance(getSigAlgName(), sigProvider);  } doVerify(key); }", "n_tokens": 58, "n_pass": [111, 8, 8]}
{"time": "2021-02-13 12:07:52.727969", "score": "0.7906", "loss": "0.4744", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance(getSigAlgName());  } doVerify(key); }", "n_tokens": 55, "n_pass": [114, 9, 9]}
{"time": "2021-02-13 12:07:54.415350", "score": "0.7556", "loss": "0.4386", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig .getInstance();  } doVerify(key); }", "n_tokens": 52, "n_pass": [132, 10, 10]}
{"time": "2021-02-13 12:07:58.423583", "score": "0.7821", "loss": "0.3966", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ();  } doVerify(key); }", "n_tokens": 50, "n_pass": [184, 11, 11]}
{"time": "2021-02-13 12:07:59.746252", "score": "0.8112", "loss": "0.4605", "code": "public void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 48, "n_pass": [185, 12, 12]}
{"time": "2021-02-13 12:08:02.347117", "score": "0.8112", "loss": "0.4605", "code": " void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 47, "n_pass": [192, 14, 13]}
{"time": "2021-02-13 12:08:03.645180", "score": "0.8112", "loss": "0.4605", "code": "void verify(PublicKey key, Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 46, "n_pass": [193, 15, 14]}
{"time": "2021-02-13 12:08:05.681879", "score": "0.8112", "loss": "0.4605", "code": "void verify(PublicKey key,Provider sigProvider) throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 45, "n_pass": [202, 16, 15]}
{"time": "2021-02-13 12:08:07.012575", "score": "0.8112", "loss": "0.4605", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) { sig ;  } doVerify(key); }", "n_tokens": 44, "n_pass": [207, 17, 16]}
{"time": "2021-02-13 12:08:08.319723", "score": "0.84", "loss": "0.3093", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) { ;  } doVerify(key); }", "n_tokens": 42, "n_pass": [217, 18, 17]}
{"time": "2021-02-13 12:08:09.626482", "score": "0.84", "loss": "0.3093", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  } doVerify(key); }", "n_tokens": 40, "n_pass": [218, 19, 18]}
{"time": "2021-02-13 12:08:16.605620", "score": "0.84", "loss": "0.3093", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  }doVerify(key); }", "n_tokens": 39, "n_pass": [273, 21, 19]}
{"time": "2021-02-13 12:08:17.912367", "score": "0.7991", "loss": "0.2959", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  }doVerify(); }", "n_tokens": 38, "n_pass": [275, 22, 20]}
{"time": "2021-02-13 12:08:19.207553", "score": "0.7991", "loss": "0.2959", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException {if (sigProvider != null) {  }doVerify();}", "n_tokens": 37, "n_pass": [278, 23, 21]}
{"time": "2021-02-13 12:08:21.228673", "score": "0.7991", "loss": "0.2959", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if (sigProvider != null) {  }doVerify();}", "n_tokens": 36, "n_pass": [295, 24, 22]}
{"time": "2021-02-13 12:08:22.529948", "score": "0.7991", "loss": "0.2959", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider != null) {  }doVerify();}", "n_tokens": 35, "n_pass": [298, 25, 23]}
{"time": "2021-02-13 12:08:23.825380", "score": "0.7991", "loss": "0.2959", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider!= null) {  }doVerify();}", "n_tokens": 34, "n_pass": [301, 26, 24]}
{"time": "2021-02-13 12:08:25.121471", "score": "0.6108", "loss": "0.5511", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider= null) {  }doVerify();}", "n_tokens": 33, "n_pass": [302, 27, 25]}
{"time": "2021-02-13 12:08:26.417613", "score": "0.6108", "loss": "0.5511", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null) {  }doVerify();}", "n_tokens": 32, "n_pass": [304, 28, 26]}
{"time": "2021-02-13 12:08:27.717586", "score": "0.6108", "loss": "0.5511", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){  }doVerify();}", "n_tokens": 31, "n_pass": [307, 29, 27]}
{"time": "2021-02-13 12:08:29.008006", "score": "0.6108", "loss": "0.5511", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){ }doVerify();}", "n_tokens": 30, "n_pass": [309, 30, 28]}
{"time": "2021-02-13 12:08:30.320471", "score": "0.6108", "loss": "0.5511", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider=null){}doVerify();}", "n_tokens": 29, "n_pass": [310, 31, 29]}
{"time": "2021-02-13 12:08:32.351420", "score": "0.7777", "loss": "0.3237", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvidernull){}doVerify();}", "n_tokens": 28, "n_pass": [336, 32, 30]}
{"time": "2021-02-13 12:08:33.651281", "score": "0.7758", "loss": "0.319", "code": "void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider){}doVerify();}", "n_tokens": 27, "n_pass": [337, 33, 31]}

Minimal simplified code:
void verify(PublicKey key,Provider sigProvider)throws SignatureException{if(sigProvider){}doVerify();}

