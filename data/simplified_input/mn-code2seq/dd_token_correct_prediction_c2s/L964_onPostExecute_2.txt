
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/javiersantos__MLManager/app/src/main/java/com/javiersantos/mlmanager/async/DeleteDataInBackground_onPostExecute.java
method_name = onPostExecute
method_body = @Override protected void onPostExecute(Boolean status) { super.onPostExecute(status); dialog.dismiss(); if (status) { UtilsDialog.showSnackbar(activity, successDescription, null, null, 2).show(); } else { UtilsDialog.showTitleContent(context, context.getResources().getString(R.string.dialog_root_required), context.getResources().getString(R.string.dialog_root_required_description)); } }
predict, score, loss = onPostExecute, 0.9989328384399414, 0.003290480701252818

Trace of simplified code(s):
{"time": "2021-02-14 02:53:40.939992", "score": "0.9989", "loss": "0.0033", "code": "@Override protected void onPostExecute(Boolean status) { super.onPostExecute(status); dialog.dismiss(); if (status) { UtilsDialog.showSnackbar(activity, successDescription, null, null, 2).show(); } else { UtilsDialog.showTitleContent(context, context.getResources().getString(R.string.dialog_root_required), context.getResources().getString(R.string.dialog_root_required_description)); } }", "n_tokens": 122, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:53:43.643961", "score": "0.9978", "loss": "0.007", "code": "@Override protected void onPostExecute(Boolean status) { super.onPostExecute(status); dialog.dismiss(); if (status) { UtilsDialog.showSnackbar(activity, successDescription, null, null, 2).show( context.getResources().getString(R.string.dialog_root_required), context.getResources().getString(R.string.dialog_root_required_description)); } }", "n_tokens": 107, "n_pass": [24, 3, 2]}
{"time": "2021-02-14 02:53:45.056249", "score": "0.9985", "loss": "0.0047", "code": "@Override protected void onPostExecute(Boolean status) { super.onPostExecute(status); dialog.dismiss(); if (status) { UtilsDialog.showSnackbar(activity, successDescription, null, null, 2).show( context.getResources().getString(R.string.dialog_string.dialog_root_required_description)); } }", "n_tokens": 91, "n_pass": [26, 4, 3]}
{"time": "2021-02-14 02:53:46.410640", "score": "0.7575", "loss": "1.9017", "code": "@Override protected void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activity, successDescription, null, null, 2).show( context.getResources().getString(R.string.dialog_string.dialog_root_required_description)); } }", "n_tokens": 76, "n_pass": [29, 5, 4]}
{"time": "2021-02-14 02:53:47.768487", "score": "0.73", "loss": "2.0037", "code": "@Override protected void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activity, context.getResources().getString(R.string.dialog_string.dialog_root_required_description)); } }", "n_tokens": 61, "n_pass": [31, 6, 5]}
{"time": "2021-02-14 02:53:49.166239", "score": "0.7267", "loss": "2.0809", "code": "@Override protected void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activitygetString(R.string.dialog_string.dialog_root_required_description)); } }", "n_tokens": 53, "n_pass": [44, 7, 6]}
{"time": "2021-02-14 02:53:50.501034", "score": "0.7116", "loss": "2.1344", "code": "@Override protected void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activitygetString(R.string.dialog_description)); } }", "n_tokens": 45, "n_pass": [46, 8, 7]}
{"time": "2021-02-14 02:53:53.883615", "score": "0.671", "loss": "2.3815", "code": "@Override protected void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activitygetString(R.description)); } }", "n_tokens": 41, "n_pass": [76, 10, 8]}
{"time": "2021-02-14 02:53:58.632236", "score": "0.671", "loss": "2.3815", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog.showSnackbar(activitygetString(R.description)); } }", "n_tokens": 39, "n_pass": [116, 13, 9]}
{"time": "2021-02-14 02:54:00.346211", "score": "0.624", "loss": "2.9958", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog(activitygetString(R.description)); } }", "n_tokens": 37, "n_pass": [127, 14, 10]}
{"time": "2021-02-14 02:54:01.658313", "score": "0.5752", "loss": "3.4762", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog(activitygetString(description)); } }", "n_tokens": 35, "n_pass": [130, 15, 11]}
{"time": "2021-02-14 02:54:08.325573", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog(activitygetString()); } }", "n_tokens": 34, "n_pass": [182, 17, 12]}
{"time": "2021-02-14 02:54:09.626357", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog(activitygetString());} }", "n_tokens": 33, "n_pass": [185, 18, 13]}
{"time": "2021-02-14 02:54:10.968002", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status) { if (status) { UtilsDialog(activitygetString());}}", "n_tokens": 32, "n_pass": [187, 19, 14]}
{"time": "2021-02-14 02:54:13.383690", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status){ if (status) { UtilsDialog(activitygetString());}}", "n_tokens": 31, "n_pass": [200, 20, 15]}
{"time": "2021-02-14 02:54:14.726269", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status){if (status) { UtilsDialog(activitygetString());}}", "n_tokens": 30, "n_pass": [202, 21, 16]}
{"time": "2021-02-14 02:54:16.116931", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status){if(status) { UtilsDialog(activitygetString());}}", "n_tokens": 29, "n_pass": [204, 22, 17]}
{"time": "2021-02-14 02:54:17.441879", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status){if(status){ UtilsDialog(activitygetString());}}", "n_tokens": 28, "n_pass": [208, 23, 18]}
{"time": "2021-02-14 02:54:18.761449", "score": "0.6617", "loss": "2.6832", "code": "@Override void onPostExecute(Boolean status){if(status){UtilsDialog(activitygetString());}}", "n_tokens": 27, "n_pass": [210, 24, 19]}
{"time": "2021-02-14 02:54:22.807152", "score": "0.6587", "loss": "2.8102", "code": "@Override void onPostExecute(Boolean status){if(status){UtilsDialog(activity());}}", "n_tokens": 26, "n_pass": [214, 27, 20]}

Minimal simplified code:
@Override void onPostExecute(Boolean status){if(status){UtilsDialog(activity());}}

