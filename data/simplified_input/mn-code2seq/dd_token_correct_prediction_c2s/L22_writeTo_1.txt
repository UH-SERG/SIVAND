
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/mail/src/main/java/org/bouncycastle/mail/smime/util/FileBackedMimeBodyPart_writeTo.java
method_name = writeTo
method_body = public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { throw new IOException("file " + _file.getCanonicalPath() + " no longer exists."); } super.writeTo(out); }
predict, score, loss = writeTo, 0.9951878190040588, 0.015646426007151604

Trace of simplified code(s):
{"time": "2021-02-13 04:02:47.335968", "score": "0.9952", "loss": "0.0156", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { throw new IOException(\"file \" + _file.getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:02:49.024770", "score": "0.9964", "loss": "0.0116", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \" + _file.getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 74, "n_pass": [51, 2, 2]}
{"time": "2021-02-13 04:02:50.334597", "score": "0.9953", "loss": "0.0161", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \".getCanonicalPath() + \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 69, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 04:02:51.646604", "score": "0.9956", "loss": "0.0156", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no longer exists.\"); } super.writeTo(out); }", "n_tokens": 64, "n_pass": [54, 4, 4]}
{"time": "2021-02-13 04:02:52.955011", "score": "0.9939", "loss": "0.0193", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo(out); }", "n_tokens": 59, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 04:02:56.005033", "score": "0.9021", "loss": "0.5543", "code": "public void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 56, "n_pass": [97, 7, 6]}
{"time": "2021-02-13 04:02:57.328678", "score": "0.9021", "loss": "0.5543", "code": "void writeTo(OutputStream out) throws IOException, MessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 54, "n_pass": [99, 8, 7]}
{"time": "2021-02-13 04:02:59.024798", "score": "0.8963", "loss": "0.7003", "code": "void writeTo(OutputStream out) throws IOExceptionMessagingException { if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 52, "n_pass": [106, 9, 8]}
{"time": "2021-02-13 04:03:00.345847", "score": "0.9345", "loss": "0.4291", "code": "void writeTo(OutputStream out) throws IOException{ if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 50, "n_pass": [107, 10, 9]}
{"time": "2021-02-13 04:03:06.368804", "score": "0.9345", "loss": "0.4291", "code": "void writeTo(OutputStream out) throws IOException{if (!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 49, "n_pass": [169, 12, 10]}
{"time": "2021-02-13 04:03:07.687224", "score": "0.9345", "loss": "0.4291", "code": "void writeTo(OutputStream out) throws IOException{if(!_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 48, "n_pass": [171, 13, 11]}
{"time": "2021-02-13 04:03:08.991281", "score": "0.8814", "loss": "0.7084", "code": "void writeTo(OutputStream out) throws IOException{if(_file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 47, "n_pass": [173, 14, 12]}
{"time": "2021-02-13 04:03:10.323076", "score": "0.8814", "loss": "0.7084", "code": "void writeTo(OutputStream out) throws IOException{if(file.exists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 46, "n_pass": [174, 15, 13]}
{"time": "2021-02-13 04:03:11.659279", "score": "0.8869", "loss": "0.4874", "code": "void writeTo(OutputStream out) throws IOException{if(fileexists()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 45, "n_pass": [176, 16, 14]}
{"time": "2021-02-13 04:03:12.967734", "score": "0.9356", "loss": "0.3126", "code": "void writeTo(OutputStream out) throws IOException{if(file()) { (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 44, "n_pass": [177, 17, 15]}
{"time": "2021-02-13 04:03:14.278154", "score": "0.9356", "loss": "0.3126", "code": "void writeTo(OutputStream out) throws IOException{if(file()){ (\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 43, "n_pass": [181, 18, 16]}
{"time": "2021-02-13 04:03:15.586540", "score": "0.9356", "loss": "0.3126", "code": "void writeTo(OutputStream out) throws IOException{if(file()){(\"file \"+ \" no\"); } super.writeTo; }", "n_tokens": 42, "n_pass": [183, 19, 17]}
{"time": "2021-02-13 04:03:16.905223", "score": "0.9234", "loss": "0.3436", "code": "void writeTo(OutputStream out) throws IOException{if(file()){(\"\"+ \" no\"); } super.writeTo; }", "n_tokens": 40, "n_pass": [186, 20, 18]}
{"time": "2021-02-13 04:03:18.230925", "score": "0.9347", "loss": "0.2994", "code": "void writeTo(OutputStream out) throws IOException{if(file()){(\"\"+ \"\"); } super.writeTo; }", "n_tokens": 38, "n_pass": [189, 21, 19]}
{"time": "2021-02-13 04:03:19.549427", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out) throws IOException{if(file()){(\"\"+ \"\"); } writeTo; }", "n_tokens": 36, "n_pass": [193, 22, 20]}
{"time": "2021-02-13 04:03:22.866173", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out)throws IOException{if(file()){(\"\"+ \"\"); } writeTo; }", "n_tokens": 35, "n_pass": [204, 24, 21]}
{"time": "2021-02-13 04:03:28.164130", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out)throws IOException{if(file()){(\"\"+\"\"); } writeTo; }", "n_tokens": 34, "n_pass": [249, 26, 22]}
{"time": "2021-02-13 04:03:29.461398", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out)throws IOException{if(file()){(\"\"+\"\");} writeTo; }", "n_tokens": 33, "n_pass": [253, 27, 23]}
{"time": "2021-02-13 04:03:30.775119", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out)throws IOException{if(file()){(\"\"+\"\");}writeTo; }", "n_tokens": 32, "n_pass": [255, 28, 24]}
{"time": "2021-02-13 04:03:33.370629", "score": "0.8651", "loss": "0.8168", "code": "void writeTo(OutputStream out)throws IOException{if(file()){(\"\"+\"\");}writeTo;}", "n_tokens": 31, "n_pass": [258, 30, 25]}

Minimal simplified code:
void writeTo(OutputStream out)throws IOException{if(file()){(""+"");}writeTo;}

