
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Treeptik__cloudunit/cu-core/src/main/java/fr/treeptik/cloudunit/model/Image_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Image other = (Image) obj; if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }
predict, score, loss = equals, 0.9994756579399109, 0.0006817840621806681

Trace of simplified code(s):
{"time": "2021-02-13 20:15:46.710740", "score": "0.9995", "loss": "0.0006", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Image other = (Image) obj; if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }", "n_tokens": 143, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:15:48.072895", "score": "0.9992", "loss": "0.0011", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass()) return false; Image other = (Image) obj; if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }", "n_tokens": 134, "n_pass": [50, 2, 2]}
{"time": "2021-02-13 20:15:49.396211", "score": "0.9951", "loss": "0.0072", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass()) return false; Imageobj; if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }", "n_tokens": 125, "n_pass": [51, 3, 3]}
{"time": "2021-02-13 20:15:50.780976", "score": "0.9956", "loss": "0.0063", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass())  Imageobj; if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }", "n_tokens": 121, "n_pass": [94, 4, 4]}
{"time": "2021-02-13 20:15:52.120841", "score": "0.9957", "loss": "0.006", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return false; return true; }", "n_tokens": 116, "n_pass": [95, 5, 5]}
{"time": "2021-02-13 20:15:53.498016", "score": "0.995", "loss": "0.0069", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 111, "n_pass": [106, 6, 6]}
{"time": "2021-02-13 20:15:54.827012", "score": "0.9793", "loss": "0.0334", "code": " boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 107, "n_pass": [108, 7, 7]}
{"time": "2021-02-13 20:15:56.160244", "score": "0.9256", "loss": "0.1315", "code": " boolean equals(Object obj) { if (thisobj) return true; if (obj == null) return false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 103, "n_pass": [113, 8, 8]}
{"time": "2021-02-13 20:15:57.488387", "score": "0.8674", "loss": "0.2584", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull) return false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 99, "n_pass": [117, 9, 9]}
{"time": "2021-02-13 20:15:59.541181", "score": "0.8634", "loss": "0.2772", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull) false; if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 97, "n_pass": [185, 10, 10]}
{"time": "2021-02-13 20:16:00.882169", "score": "0.8177", "loss": "0.3697", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull); if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 95, "n_pass": [186, 11, 11]}
{"time": "2021-02-13 20:16:02.208219", "score": "0.8097", "loss": "0.3899", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass()) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 93, "n_pass": [187, 12, 12]}
{"time": "2021-02-13 20:16:03.560160", "score": "0.7949", "loss": "0.4279", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (name == null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 91, "n_pass": [190, 13, 13]}
{"time": "2021-02-13 20:16:04.896264", "score": "0.6746", "loss": "0.7937", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (name= null) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 89, "n_pass": [194, 14, 14]}
{"time": "2021-02-13 20:16:06.245852", "score": "0.6042", "loss": "0.9228", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (namenull) { if (other.name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 87, "n_pass": [195, 15, 15]}
{"time": "2021-02-13 20:16:07.570811", "score": "0.4801", "loss": "1.2633", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (namenull) { if (name != null) return false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 85, "n_pass": [200, 16, 16]}
{"time": "2021-02-13 20:16:08.882918", "score": "0.5569", "loss": "1.0422", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals(other.name)) return true; }", "n_tokens": 82, "n_pass": [204, 17, 17]}
{"time": "2021-02-13 20:16:10.197884", "score": "0.2845", "loss": "1.9237", "code": " boolean equals(Object obj) { if (thisobj) return true; if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) return true; }", "n_tokens": 79, "n_pass": [210, 18, 18]}
{"time": "2021-02-13 20:16:13.217877", "score": "0.3193", "loss": "1.7761", "code": " boolean equals(Object obj) { if (thisobj) true; if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) return true; }", "n_tokens": 77, "n_pass": [223, 20, 19]}
{"time": "2021-02-13 20:16:14.525784", "score": "0.3244", "loss": "1.7333", "code": " boolean equals(Object obj) { if (thisobj); if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) return true; }", "n_tokens": 75, "n_pass": [224, 21, 20]}
{"time": "2021-02-13 20:16:15.850803", "score": "0.3849", "loss": "1.5705", "code": " boolean equals(Object obj) { if (thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) return true; }", "n_tokens": 73, "n_pass": [225, 22, 21]}
{"time": "2021-02-13 20:16:17.222214", "score": "0.2339", "loss": "2.1919", "code": " boolean equals(Object obj) { if (thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 70, "n_pass": [247, 23, 22]}
{"time": "2021-02-13 20:16:26.605410", "score": "0.2339", "loss": "2.1919", "code": "boolean equals(Object obj) { if (thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 69, "n_pass": [343, 25, 23]}
{"time": "2021-02-13 20:16:28.289723", "score": "0.2339", "loss": "2.1919", "code": "boolean equals(Object obj){ if (thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 68, "n_pass": [351, 26, 24]}
{"time": "2021-02-13 20:16:29.608062", "score": "0.2339", "loss": "2.1919", "code": "boolean equals(Object obj){if (thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 67, "n_pass": [353, 27, 25]}
{"time": "2021-02-13 20:16:30.928553", "score": "0.2339", "loss": "2.1919", "code": "boolean equals(Object obj){if(thisobj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 66, "n_pass": [355, 28, 26]}
{"time": "2021-02-13 20:16:32.236931", "score": "0.1857", "loss": "2.4483", "code": "boolean equals(Object obj){if(obj)if (objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 65, "n_pass": [357, 29, 27]}
{"time": "2021-02-13 20:16:33.550922", "score": "0.1857", "loss": "2.4483", "code": "boolean equals(Object obj){if(obj)if(objnull)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 64, "n_pass": [361, 30, 28]}
{"time": "2021-02-13 20:16:34.865864", "score": "0.2893", "loss": "1.9622", "code": "boolean equals(Object obj){if(obj)if(null)if (getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 63, "n_pass": [363, 31, 29]}
{"time": "2021-02-13 20:16:36.187500", "score": "0.2893", "loss": "1.9622", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass) if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 62, "n_pass": [367, 32, 30]}
{"time": "2021-02-13 20:16:37.497821", "score": "0.2893", "loss": "1.9622", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if (namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 61, "n_pass": [371, 33, 31]}
{"time": "2021-02-13 20:16:38.802626", "score": "0.2893", "loss": "1.9622", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(namenull) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 60, "n_pass": [373, 34, 32]}
{"time": "2021-02-13 20:16:41.458034", "score": "0.2817", "loss": "1.9449", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name) { if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 59, "n_pass": [376, 36, 33]}
{"time": "2021-02-13 20:16:42.765102", "score": "0.2817", "loss": "1.9449", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){ if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 58, "n_pass": [378, 37, 34]}
{"time": "2021-02-13 20:16:44.075436", "score": "0.2817", "loss": "1.9449", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if (name != null)false; } else if (!name.equals()) ; }", "n_tokens": 57, "n_pass": [380, 38, 35]}
{"time": "2021-02-13 20:16:45.385162", "score": "0.2817", "loss": "1.9449", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name != null)false; } else if (!name.equals()) ; }", "n_tokens": 56, "n_pass": [382, 39, 36]}
{"time": "2021-02-13 20:16:46.709859", "score": "0.2817", "loss": "1.9449", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name!= null)false; } else if (!name.equals()) ; }", "n_tokens": 55, "n_pass": [385, 40, 37]}
{"time": "2021-02-13 20:16:48.060182", "score": "0.1859", "loss": "2.4983", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name= null)false; } else if (!name.equals()) ; }", "n_tokens": 54, "n_pass": [386, 41, 38]}
{"time": "2021-02-13 20:16:49.376942", "score": "0.1859", "loss": "2.4983", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false; } else if (!name.equals()) ; }", "n_tokens": 53, "n_pass": [388, 42, 39]}
{"time": "2021-02-13 20:16:52.032705", "score": "0.1859", "loss": "2.4983", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;} else if (!name.equals()) ; }", "n_tokens": 52, "n_pass": [393, 44, 40]}
{"time": "2021-02-13 20:16:53.352362", "score": "0.1859", "loss": "2.4983", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}else if (!name.equals()) ; }", "n_tokens": 51, "n_pass": [395, 45, 41]}
{"time": "2021-02-13 20:16:54.658943", "score": "0.1588", "loss": "2.6185", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}if (!name.equals()) ; }", "n_tokens": 49, "n_pass": [396, 46, 42]}
{"time": "2021-02-13 20:17:04.662793", "score": "0.1588", "loss": "2.6185", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}if (!name.equals()); }", "n_tokens": 48, "n_pass": [458, 52, 43]}
{"time": "2021-02-13 20:17:05.968266", "score": "0.1588", "loss": "2.6185", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}if (!name.equals());}", "n_tokens": 47, "n_pass": [459, 53, 44]}
{"time": "2021-02-13 20:17:12.008108", "score": "0.1588", "loss": "2.6185", "code": "boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}if(!name.equals());}", "n_tokens": 46, "n_pass": [497, 57, 45]}

Minimal simplified code:
boolean equals(Object obj){if(obj)if(null)if(getClass)if(name){if(name=null)false;}if(!name.equals());}

