
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wso2-attic__product-emm/modules/mobile-agents/android/app-catalog/volley/src/main/java/com/android/volley/toolbox/PoolingByteArrayOutputStream_expand.java
method_name = expand
method_body = private void expand(int i) { if (count + i <= buf.length) { return; } byte[] newbuf = mPool.getBuf((count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }
predict, score, loss = expand, 0.9741573333740234, 0.1660033017396927

Trace of simplified code(s):
{"time": "2021-02-13 16:09:59.727762", "score": "0.9405", "loss": "0.2454", "code": "private void expand(int i) { if (count + i <= buf.length) { return; } byte[] newbuf = mPool.getBuf((count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 99, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:10:01.062478", "score": "0.9289", "loss": "0.2397", "code": "private void expand(int i) { if (count + i <=(count + i) * 2); System.arraycopy(buf, 0, newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 74, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 16:10:02.410451", "score": "0.8458", "loss": "0.4036", "code": "private void expand(int i) { if (count + i <=(count + i) * 2); System.arraycopy(newbuf, 0, count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 68, "n_pass": [39, 3, 3]}
{"time": "2021-02-13 16:10:03.751123", "score": "0.1847", "loss": "2.2848", "code": "private void expand(int i) { if (count + i <=(count + i) * 2); System.arraycopy(count); mPool.returnBuf(buf); buf = newbuf; }", "n_tokens": 62, "n_pass": [40, 4, 4]}
{"time": "2021-02-13 16:10:06.440787", "score": "0.2395", "loss": "1.9406", "code": "private void expand(int i) { if (count + i <=(count + i) * 2); System.arraycopy(count);returnBuf(buf); buf = newbuf; }", "n_tokens": 59, "n_pass": [72, 6, 5]}
{"time": "2021-02-13 16:10:07.771540", "score": "0.5335", "loss": "1.192", "code": "private void expand(int i) { if (count + i <=(count + i) * 2); System.arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 55, "n_pass": [75, 7, 6]}
{"time": "2021-02-13 16:10:10.797634", "score": "0.5762", "loss": "1.1779", "code": "private void expand(int i) {(count + i <=(count + i) * 2); System.arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 52, "n_pass": [81, 9, 7]}
{"time": "2021-02-13 16:10:12.151016", "score": "0.7385", "loss": "0.8198", "code": "private void expand(int i) {(count  <=(count + i) * 2); System.arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 49, "n_pass": [83, 10, 8]}
{"time": "2021-02-13 16:10:13.458699", "score": "0.6739", "loss": "0.996", "code": "private void expand(int i) {(count (count + i) * 2); System.arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 46, "n_pass": [84, 11, 9]}
{"time": "2021-02-13 16:10:14.777780", "score": "0.707", "loss": "0.9543", "code": "private void expand(int i) {(count (count ) * 2); System.arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 43, "n_pass": [86, 12, 10]}
{"time": "2021-02-13 16:10:16.092762", "score": "0.9373", "loss": "0.4562", "code": "private void expand(int i) {(count (count ) * 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 40, "n_pass": [89, 13, 11]}
{"time": "2021-02-13 16:10:17.765395", "score": "0.786", "loss": "0.7635", "code": "private void expand() {(count (count ) * 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 37, "n_pass": [97, 14, 12]}
{"time": "2021-02-13 16:10:20.808140", "score": "0.786", "loss": "0.7635", "code": "private void expand(){(count (count ) * 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 36, "n_pass": [137, 15, 13]}
{"time": "2021-02-13 16:10:22.121647", "score": "0.8313", "loss": "0.629", "code": "private void expand(){( (count ) * 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 35, "n_pass": [140, 16, 14]}
{"time": "2021-02-13 16:10:23.441884", "score": "0.3546", "loss": "2.478", "code": "private void expand(){( (count ) 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 33, "n_pass": [144, 17, 15]}
{"time": "2021-02-13 16:10:26.051585", "score": "0.3546", "loss": "2.478", "code": " void expand(){( (count ) 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 32, "n_pass": [154, 19, 16]}
{"time": "2021-02-13 16:10:27.354169", "score": "0.3546", "loss": "2.478", "code": "void expand(){( (count ) 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 31, "n_pass": [155, 20, 17]}
{"time": "2021-02-13 16:10:33.359232", "score": "0.3546", "loss": "2.478", "code": "void expand(){((count ) 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 30, "n_pass": [199, 22, 18]}
{"time": "2021-02-13 16:10:34.662527", "score": "0.3546", "loss": "2.478", "code": "void expand(){((count) 2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 29, "n_pass": [201, 23, 19]}
{"time": "2021-02-13 16:10:35.972171", "score": "0.3546", "loss": "2.478", "code": "void expand(){((count)2).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 28, "n_pass": [203, 24, 20]}
{"time": "2021-02-13 16:10:37.251822", "score": "0.6574", "loss": "1.0618", "code": "void expand(){((count)).arraycopy(count);returnBuf(buf); newbuf; }", "n_tokens": 27, "n_pass": [204, 25, 21]}
{"time": "2021-02-13 16:10:38.542214", "score": "0.8272", "loss": "0.4387", "code": "void expand(){((count)).arraycopy();returnBuf(buf); newbuf; }", "n_tokens": 26, "n_pass": [209, 26, 22]}
{"time": "2021-02-13 16:10:39.882939", "score": "0.4494", "loss": "1.0352", "code": "void expand(){((count)).arraycopy();(buf); newbuf; }", "n_tokens": 25, "n_pass": [212, 27, 23]}
{"time": "2021-02-13 16:10:41.559695", "score": "0.4494", "loss": "1.0352", "code": "void expand(){((count)).arraycopy();(buf);newbuf; }", "n_tokens": 24, "n_pass": [217, 28, 24]}
{"time": "2021-02-13 16:10:44.150138", "score": "0.4494", "loss": "1.0352", "code": "void expand(){((count)).arraycopy();(buf);newbuf;}", "n_tokens": 23, "n_pass": [220, 30, 25]}

Minimal simplified code:
void expand(){((count)).arraycopy();(buf);newbuf;}

