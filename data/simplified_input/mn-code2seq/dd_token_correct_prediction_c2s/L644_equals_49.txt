
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject_equals.java
method_name = equals
method_body = public boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) { X509CRLObject crlObject = (X509CRLObject) other; if (isHashCodeSet) { boolean otherIsHashCodeSet = crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); } return super.equals(other); }
predict, score, loss = equals, 0.9988303780555725, 0.0014118897961452603

Trace of simplified code(s):
{"time": "2021-02-13 19:33:22.288264", "score": "0.9991", "loss": "0.0011", "code": "public boolean equals(Object other) { if (this == other) { return true; } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) { X509CRLObject crlObject = (X509CRLObject) other; if (isHashCodeSet) { boolean otherIsHashCodeSet = crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); } return super.equals(other); }", "n_tokens": 176, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:33:24.074731", "score": "0.999", "loss": "0.0012", "code": "public boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) { X509CRLObject crlObject = (X509CRLObject) other; if (isHashCodeSet) { boolean otherIsHashCodeSet = crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); } return super.equals(other); }", "n_tokens": 171, "n_pass": [97, 2, 2]}
{"time": "2021-02-13 19:33:25.441043", "score": "0.999", "loss": "0.0011", "code": "public boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { boolean otherIsHashCodeSet = crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); } return super.equals(other); }", "n_tokens": 166, "n_pass": [107, 3, 3]}
{"time": "2021-02-13 19:33:26.798777", "score": "0.9989", "loss": "0.0013", "code": "public boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); } return super.equals(other); }", "n_tokens": 160, "n_pass": [112, 4, 4]}
{"time": "2021-02-13 19:33:28.178988", "score": "0.9981", "loss": "0.0025", "code": "public boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }(other); }", "n_tokens": 154, "n_pass": [122, 5, 5]}
{"time": "2021-02-13 19:33:29.578979", "score": "0.9986", "loss": "0.0019", "code": "public boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 151, "n_pass": [207, 6, 6]}
{"time": "2021-02-13 19:33:30.944233", "score": "0.9986", "loss": "0.0019", "code": "boolean equals(Object other) { if (this == other) { } if (!(other instanceof X509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 149, "n_pass": [208, 7, 7]}
{"time": "2021-02-13 19:33:32.673524", "score": "0.9983", "loss": "0.0023", "code": "boolean equals(Object other) { if (this == other) { } if (!(otherX509CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 146, "n_pass": [224, 8, 8]}
{"time": "2021-02-13 19:33:34.007439", "score": "0.9983", "loss": "0.0024", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) { return false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 143, "n_pass": [225, 9, 9]}
{"time": "2021-02-13 19:33:35.360452", "score": "0.9959", "loss": "0.0053", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {false; } if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 140, "n_pass": [228, 10, 10]}
{"time": "2021-02-13 19:33:36.707914", "score": "0.9954", "loss": "0.0059", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other instanceof X509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 137, "n_pass": [229, 11, 11]}
{"time": "2021-02-13 19:33:38.041530", "score": "0.9951", "loss": "0.0064", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (otherX509CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 134, "n_pass": [232, 12, 12]}
{"time": "2021-02-13 19:33:39.404874", "score": "0.9947", "loss": "0.007", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { crlObject.isHashCodeSet; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 131, "n_pass": [233, 13, 13]}
{"time": "2021-02-13 19:33:40.763481", "score": "0.995", "loss": "0.0067", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) { return false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 128, "n_pass": [244, 14, 14]}
{"time": "2021-02-13 19:33:42.112173", "score": "0.995", "loss": "0.0066", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {false; } } } return this.c.equals(crlObject.c); }; }", "n_tokens": 125, "n_pass": [253, 15, 15]}
{"time": "2021-02-13 19:33:43.479136", "score": "0.9939", "loss": "0.008", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } return this.c.equals(crlObject.c); }; }", "n_tokens": 122, "n_pass": [254, 16, 16]}
{"time": "2021-02-13 19:33:44.819668", "score": "0.6105", "loss": "0.9349", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } return thisequals(crlObject.c); }; }", "n_tokens": 119, "n_pass": [258, 17, 17]}
{"time": "2021-02-13 19:33:46.587205", "score": "0.9665", "loss": "0.0436", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(crlObject.c); }; }", "n_tokens": 116, "n_pass": [302, 18, 18]}
{"time": "2021-02-13 19:33:55.672498", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other) { if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 114, "n_pass": [435, 19, 19]}
{"time": "2021-02-13 19:33:57.751306", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){ if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 113, "n_pass": [448, 20, 20]}
{"time": "2021-02-13 19:33:59.085175", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if (this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 112, "n_pass": [450, 21, 21]}
{"time": "2021-02-13 19:34:00.417836", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this == other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 111, "n_pass": [452, 22, 22]}
{"time": "2021-02-13 19:34:01.754897", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this== other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 110, "n_pass": [455, 23, 23]}
{"time": "2021-02-13 19:34:03.854413", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this==other) { } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 109, "n_pass": [458, 24, 24]}
{"time": "2021-02-13 19:34:05.191488", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this==other){ } if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 108, "n_pass": [461, 25, 25]}
{"time": "2021-02-13 19:34:06.511312", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this==other){} if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 107, "n_pass": [463, 26, 26]}
{"time": "2021-02-13 19:34:07.871614", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this==other){}if (!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 106, "n_pass": [465, 27, 27]}
{"time": "2021-02-13 19:34:09.224736", "score": "0.9539", "loss": "0.0618", "code": "boolean equals(Object other){if(this==other){}if(!(other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 105, "n_pass": [467, 28, 28]}
{"time": "2021-02-13 19:34:10.565771", "score": "0.9497", "loss": "0.0668", "code": "boolean equals(Object other){if(this==other){}if((other9CRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 104, "n_pass": [469, 29, 29]}
{"time": "2021-02-13 19:34:11.903024", "score": "0.9497", "loss": "0.0668", "code": "boolean equals(Object other){if(this==other){}if((otherCRL)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 103, "n_pass": [472, 30, 30]}
{"time": "2021-02-13 19:34:13.244714", "score": "0.9481", "loss": "0.0714", "code": "boolean equals(Object other){if(this==other){}if((other)) {} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 102, "n_pass": [473, 31, 31]}
{"time": "2021-02-13 19:34:14.576005", "score": "0.9481", "loss": "0.0714", "code": "boolean equals(Object other){if(this==other){}if((other)){} if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 101, "n_pass": [476, 32, 32]}
{"time": "2021-02-13 19:34:15.913825", "score": "0.9481", "loss": "0.0714", "code": "boolean equals(Object other){if(this==other){}if((other)){}if (other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 100, "n_pass": [479, 33, 33]}
{"time": "2021-02-13 19:34:17.287999", "score": "0.9481", "loss": "0.0714", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other9CRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 99, "n_pass": [481, 34, 34]}
{"time": "2021-02-13 19:34:18.623216", "score": "0.9481", "loss": "0.0714", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(otherCRLObject) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 98, "n_pass": [484, 35, 35]}
{"time": "2021-02-13 19:34:19.953364", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other) {  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 97, "n_pass": [485, 36, 36]}
{"time": "2021-02-13 19:34:21.286771", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){  crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 96, "n_pass": [487, 37, 37]}
{"time": "2021-02-13 19:34:22.622455", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){ crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 95, "n_pass": [489, 38, 38]}
{"time": "2021-02-13 19:34:23.955907", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject = (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 94, "n_pass": [490, 39, 39]}
{"time": "2021-02-13 19:34:25.311720", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject= (X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 93, "n_pass": [492, 40, 40]}
{"time": "2021-02-13 19:34:26.672883", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X509CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 92, "n_pass": [494, 41, 41]}
{"time": "2021-02-13 19:34:28.000657", "score": "0.9357", "loss": "0.0916", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject) other; if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 90, "n_pass": [497, 42, 42]}
{"time": "2021-02-13 19:34:29.383159", "score": "0.9279", "loss": "0.1057", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject); if (isHashCodeSet) { ; if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 88, "n_pass": [499, 43, 43]}
{"time": "2021-02-13 19:34:30.732121", "score": "0.9279", "loss": "0.1057", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObject.hashCodeValue != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 86, "n_pass": [505, 44, 44]}
{"time": "2021-02-13 19:34:32.067537", "score": "0.9145", "loss": "0.1313", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObject != hashCodeValue) {} } } equals(c); }; }", "n_tokens": 84, "n_pass": [512, 45, 45]}
{"time": "2021-02-13 19:34:33.393678", "score": "0.8818", "loss": "0.1887", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObject= hashCodeValue) {} } } equals(c); }; }", "n_tokens": 82, "n_pass": [513, 46, 46]}
{"time": "2021-02-13 19:34:34.751788", "score": "0.8929", "loss": "0.1724", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject=(X5CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 80, "n_pass": [514, 47, 47]}
{"time": "2021-02-13 19:34:37.600204", "score": "0.7166", "loss": "0.5933", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject(X5CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 79, "n_pass": [557, 48, 48]}
{"time": "2021-02-13 19:34:38.930322", "score": "0.7688", "loss": "0.4838", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){crlObject(CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 77, "n_pass": [559, 49, 49]}
{"time": "2021-02-13 19:34:41.846802", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) { if (otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 76, "n_pass": [613, 50, 50]}
{"time": "2021-02-13 19:34:50.307945", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if (otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 75, "n_pass": [712, 51, 51]}
{"time": "2021-02-13 19:34:51.628633", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet) { if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 74, "n_pass": [714, 52, 52]}
{"time": "2021-02-13 19:34:52.964854", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){ if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 73, "n_pass": [718, 53, 53]}
{"time": "2021-02-13 19:34:54.311396", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if (crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 72, "n_pass": [720, 54, 54]}
{"time": "2021-02-13 19:34:55.627844", "score": "0.8098", "loss": "0.2981", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(crlObjecthashCodeValue) {} } } equals(c); }; }", "n_tokens": 71, "n_pass": [722, 55, 55]}
{"time": "2021-02-13 19:34:56.952882", "score": "0.8038", "loss": "0.3091", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue) {} } } equals(c); }; }", "n_tokens": 70, "n_pass": [724, 56, 56]}
{"time": "2021-02-13 19:34:58.280366", "score": "0.8038", "loss": "0.3091", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){} } } equals(c); }; }", "n_tokens": 69, "n_pass": [727, 57, 57]}
{"time": "2021-02-13 19:34:59.609079", "score": "0.8038", "loss": "0.3091", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}} } equals(c); }; }", "n_tokens": 68, "n_pass": [730, 58, 58]}
{"time": "2021-02-13 19:35:00.933690", "score": "0.8038", "loss": "0.3091", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}} equals(c); }; }", "n_tokens": 67, "n_pass": [732, 59, 59]}
{"time": "2021-02-13 19:35:02.275260", "score": "0.8038", "loss": "0.3091", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}equals(c); }; }", "n_tokens": 66, "n_pass": [734, 60, 60]}
{"time": "2021-02-13 19:35:03.592299", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c); }; }", "n_tokens": 65, "n_pass": [735, 61, 61]}
{"time": "2021-02-13 19:35:04.928390", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}; }", "n_tokens": 64, "n_pass": [740, 62, 62]}
{"time": "2021-02-13 19:35:06.267142", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);} }", "n_tokens": 63, "n_pass": [742, 63, 63]}
{"time": "2021-02-13 19:35:07.598376", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject); if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}}", "n_tokens": 62, "n_pass": [743, 64, 64]}
{"time": "2021-02-13 19:35:10.373176", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject);if (isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}}", "n_tokens": 61, "n_pass": [780, 65, 65]}
{"time": "2021-02-13 19:35:11.683528", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject);if(isHashCodeSet) {if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}}", "n_tokens": 60, "n_pass": [782, 66, 66]}
{"time": "2021-02-13 19:35:13.021471", "score": "0.7315", "loss": "0.5027", "code": "boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject);if(isHashCodeSet){if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}}", "n_tokens": 59, "n_pass": [786, 67, 67]}

Minimal simplified code:
boolean equals(Object other){if(this==other){}if((other)){}if(other){(CRLObject);if(isHashCodeSet){if(otherIsHashCodeSet){if(hashCodeValue){}}}(c);}}

