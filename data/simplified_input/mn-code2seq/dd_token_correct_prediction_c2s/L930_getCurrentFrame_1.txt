
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/ABPlayer/src/com/vanco/abplayer/view/PlayerService_getCurrentFrame.java
method_name = getCurrentFrame
method_body = public Bitmap getCurrentFrame() { if (mInitialized) return mPlayer.getCurrentFrame(); return null; }
predict, score, loss = getCurrentFrame, 0.9544287919998169, 0.21981307864189148

Trace of simplified code(s):
{"time": "2021-02-14 02:21:00.726468", "score": "0.9544", "loss": "0.2198", "code": "public Bitmap getCurrentFrame() { if (mInitialized) return mPlayer.getCurrentFrame(); return null; }", "n_tokens": 31, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:21:05.785781", "score": "0.9544", "loss": "0.2198", "code": " Bitmap getCurrentFrame() { if (mInitialized) return mPlayer.getCurrentFrame(); return null; }", "n_tokens": 30, "n_pass": [44, 4, 2]}
{"time": "2021-02-14 02:21:07.475688", "score": "0.8876", "loss": "0.5985", "code": " Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame(); return null; }", "n_tokens": 28, "n_pass": [51, 5, 3]}
{"time": "2021-02-14 02:21:10.125432", "score": "0.9213", "loss": "0.4454", "code": " Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame; return null; }", "n_tokens": 26, "n_pass": [54, 7, 4]}
{"time": "2021-02-14 02:21:11.426260", "score": "0.9116", "loss": "0.5531", "code": " Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame; null; }", "n_tokens": 24, "n_pass": [56, 8, 5]}
{"time": "2021-02-14 02:21:12.725126", "score": "0.9091", "loss": "0.4915", "code": " Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame;  }", "n_tokens": 22, "n_pass": [57, 9, 6]}
{"time": "2021-02-14 02:21:19.539662", "score": "0.9091", "loss": "0.4915", "code": " Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame; }", "n_tokens": 21, "n_pass": [91, 11, 7]}
{"time": "2021-02-14 02:21:20.836590", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame() { if (mInitialized) mPlayer.getCurrentFrame; }", "n_tokens": 20, "n_pass": [92, 12, 8]}
{"time": "2021-02-14 02:21:23.200582", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame(){ if (mInitialized) mPlayer.getCurrentFrame; }", "n_tokens": 19, "n_pass": [98, 13, 9]}
{"time": "2021-02-14 02:21:24.528802", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame(){if (mInitialized) mPlayer.getCurrentFrame; }", "n_tokens": 18, "n_pass": [100, 14, 10]}
{"time": "2021-02-14 02:21:26.187043", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame(){if(mInitialized) mPlayer.getCurrentFrame; }", "n_tokens": 17, "n_pass": [102, 15, 11]}
{"time": "2021-02-14 02:21:27.499760", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame(){if(mInitialized)mPlayer.getCurrentFrame; }", "n_tokens": 16, "n_pass": [106, 16, 12]}
{"time": "2021-02-14 02:21:30.130966", "score": "0.9091", "loss": "0.4915", "code": "Bitmap getCurrentFrame(){if(mInitialized)mPlayer.getCurrentFrame;}", "n_tokens": 15, "n_pass": [111, 18, 13]}

Minimal simplified code:
Bitmap getCurrentFrame(){if(mInitialized)mPlayer.getCurrentFrame;}

