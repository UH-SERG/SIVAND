
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-shared/src/main/java/com/iplanet/security/util/BigInt_equals.java
method_name = equals
method_body = public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }
predict, score, loss = equals, 0.9421289563179016, 0.2939600944519043

Trace of simplified code(s):
{"time": "2021-02-13 12:50:30.491621", "score": "0.9307", "loss": "0.3039", "code": "public boolean equals(BigInt other) { if (this == other) return true; byte[] otherPlaces = other.toByteArray(); if (places.length != otherPlaces.length) return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 118, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:50:31.826350", "score": "0.9477", "loss": "0.1233", "code": "public boolean equals(BigInt other) { if (this == other) return true;  return false; for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 89, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 12:50:33.167970", "score": "0.9376", "loss": "0.1374", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i++) if (places[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 82, "n_pass": [37, 3, 3]}
{"time": "2021-02-13 12:50:34.505033", "score": "0.8713", "loss": "0.2687", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i] != otherPlaces[i]) return false; return true; }", "n_tokens": 74, "n_pass": [41, 4, 4]}
{"time": "2021-02-13 12:50:35.839193", "score": "0.8464", "loss": "0.2651", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i]) return false; return true; }", "n_tokens": 66, "n_pass": [42, 5, 5]}
{"time": "2021-02-13 12:50:37.200043", "score": "0.7736", "loss": "0.4239", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i]); return true; }", "n_tokens": 62, "n_pass": [71, 6, 6]}
{"time": "2021-02-13 12:50:38.549615", "score": "0.786", "loss": "0.5148", "code": "public boolean equals(BigInt other) { if (this == other) return true;for (int i = 0; i < places.length; i[i])true; }", "n_tokens": 58, "n_pass": [72, 7, 7]}
{"time": "2021-02-13 12:50:41.593857", "score": "0.5645", "loss": "1.3614", "code": "public boolean equals(BigInt other) { if (this ) return true;for (int i = 0; i < places.length; i[i])true; }", "n_tokens": 54, "n_pass": [80, 9, 8]}
{"time": "2021-02-13 12:50:42.930361", "score": "0.5308", "loss": "1.4322", "code": "public boolean equals(BigInt other) { if (this ) return true;for (int i; i < places.length; i[i])true; }", "n_tokens": 50, "n_pass": [84, 10, 9]}
{"time": "2021-02-13 12:50:46.962491", "score": "0.5378", "loss": "1.3437", "code": "public boolean equals(BigInt other) { if (this ) return true;for (int i; i < length; i[i])true; }", "n_tokens": 48, "n_pass": [130, 12, 10]}
{"time": "2021-02-13 12:50:48.270318", "score": "0.5378", "loss": "1.3437", "code": " boolean equals(BigInt other) { if (this ) return true;for (int i; i < length; i[i])true; }", "n_tokens": 47, "n_pass": [137, 13, 11]}
{"time": "2021-02-13 12:50:49.617149", "score": "0.5378", "loss": "1.3437", "code": "boolean equals(BigInt other) { if (this ) return true;for (int i; i < length; i[i])true; }", "n_tokens": 46, "n_pass": [138, 14, 12]}
{"time": "2021-02-13 12:50:51.672764", "score": "0.4199", "loss": "1.8468", "code": "boolean equals(BigInt other) { if (this ) true;for (int i; i < length; i[i])true; }", "n_tokens": 44, "n_pass": [150, 15, 13]}
{"time": "2021-02-13 12:50:52.985927", "score": "0.3025", "loss": "2.4344", "code": "boolean equals(BigInt other) { if (this ) for (int i; i < length; i[i])true; }", "n_tokens": 42, "n_pass": [151, 16, 14]}
{"time": "2021-02-13 12:51:00.356973", "score": "0.2736", "loss": "2.4499", "code": "boolean equals(BigInt other) { if (this ) for ( i; i < length; i[i])true; }", "n_tokens": 41, "n_pass": [214, 17, 15]}
{"time": "2021-02-13 12:51:01.667086", "score": "0.2736", "loss": "2.4499", "code": "boolean equals(BigInt other) { if (this ) for (i; i < length; i[i])true; }", "n_tokens": 40, "n_pass": [215, 18, 16]}
{"time": "2021-02-13 12:51:02.975357", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (; i < length; i[i])true; }", "n_tokens": 39, "n_pass": [216, 19, 17]}
{"time": "2021-02-13 12:51:04.278764", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (;i < length; i[i])true; }", "n_tokens": 38, "n_pass": [218, 20, 18]}
{"time": "2021-02-13 12:51:05.617000", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (;i< length; i[i])true; }", "n_tokens": 37, "n_pass": [220, 21, 19]}
{"time": "2021-02-13 12:51:06.925637", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (;i<length; i[i])true; }", "n_tokens": 36, "n_pass": [222, 22, 20]}
{"time": "2021-02-13 12:51:08.243387", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (;i<length;i[i])true; }", "n_tokens": 35, "n_pass": [225, 23, 21]}
{"time": "2021-02-13 12:51:10.853844", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other) { if (this ) for (;i<length;i[i])true;}", "n_tokens": 34, "n_pass": [233, 25, 22]}
{"time": "2021-02-13 12:51:12.890601", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){ if (this ) for (;i<length;i[i])true;}", "n_tokens": 33, "n_pass": [243, 26, 23]}
{"time": "2021-02-13 12:51:14.202802", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){if (this ) for (;i<length;i[i])true;}", "n_tokens": 32, "n_pass": [245, 27, 24]}
{"time": "2021-02-13 12:51:15.516191", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){if(this ) for (;i<length;i[i])true;}", "n_tokens": 31, "n_pass": [247, 28, 25]}
{"time": "2021-02-13 12:51:16.854561", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){if(this) for (;i<length;i[i])true;}", "n_tokens": 30, "n_pass": [250, 29, 26]}
{"time": "2021-02-13 12:51:18.163030", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){if(this)for (;i<length;i[i])true;}", "n_tokens": 29, "n_pass": [252, 30, 27]}
{"time": "2021-02-13 12:51:19.460458", "score": "0.2474", "loss": "2.6517", "code": "boolean equals(BigInt other){if(this)for(;i<length;i[i])true;}", "n_tokens": 28, "n_pass": [254, 31, 28]}
{"time": "2021-02-13 12:51:20.767530", "score": "0.3627", "loss": "1.9244", "code": "boolean equals(BigInt other){if(this)for(;ilength;i[i])true;}", "n_tokens": 27, "n_pass": [258, 32, 29]}
{"time": "2021-02-13 12:51:22.087876", "score": "0.3097", "loss": "2.1768", "code": "boolean equals(BigInt other){if(this)for(;i;i[i])true;}", "n_tokens": 26, "n_pass": [259, 33, 30]}
{"time": "2021-02-13 12:51:25.417282", "score": "0.3554", "loss": "2.0851", "code": "boolean equals(BigInt other){if(this)for(;;i[i])true;}", "n_tokens": 25, "n_pass": [285, 35, 31]}
{"time": "2021-02-13 12:51:26.733698", "score": "0.2437", "loss": "2.7893", "code": "boolean equals(BigInt other){if(this)for(;;i[i]);}", "n_tokens": 24, "n_pass": [292, 36, 32]}

Minimal simplified code:
boolean equals(BigInt other){if(this)for(;;i[i]);}

