
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/baiyuliang__QRobot/app/src/main/java/com/byl/qrobot/service/LocService_onReceiveLocation.java
method_name = onReceiveLocation
method_body = @Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude = location.getLongitude(); mlatitude = location.getLatitude(); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e("当前坐标：" + mlongitude + "," + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + "," + mlatitude); }
predict, score, loss = onReceiveLocation, 0.9254848957061768, 0.3342117667198181

Trace of simplified code(s):
{"time": "2021-02-13 16:08:49.616484", "score": "0.7558", "loss": "1.4045", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude = location.getLongitude(); mlatitude = location.getLatitude(); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + mlongitude + \",\" + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:08:50.977100", "score": "0.9446", "loss": "0.2574", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + mlongitude + \",\" + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 115, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 16:08:52.346451", "score": "0.9517", "loss": "0.2379", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Const.LOCTION, mlongitude + \",\" + mlatitude); }", "n_tokens": 107, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 16:08:53.738749", "score": "0.9532", "loss": "0.2228", "code": "@Override public void onReceiveLocation(BDLocation location) { if (location == null) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 103, "n_pass": [93, 4, 4]}
{"time": "2021-02-13 16:08:56.416586", "score": "0.962", "loss": "0.1835", "code": "@Override public void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption().location(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 99, "n_pass": [102, 6, 5]}
{"time": "2021-02-13 16:08:57.761279", "score": "0.9634", "loss": "0.1887", "code": "@Override public void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng(mlatitude, mlongitude))); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 95, "n_pass": [108, 7, 6]}
{"time": "2021-02-13 16:08:59.090989", "score": "0.9758", "loss": "0.117", "code": "@Override public void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng())); LogUtil.e(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 91, "n_pass": [110, 8, 7]}
{"time": "2021-02-13 16:09:00.428218", "score": "0.9718", "loss": "0.1335", "code": "@Override public void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.this, Constmlongitude + \",\" + mlatitude); }", "n_tokens": 87, "n_pass": [112, 9, 8]}
{"time": "2021-02-13 16:09:01.766131", "score": "0.9634", "loss": "0.2112", "code": "@Override public void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 83, "n_pass": [118, 10, 9]}
{"time": "2021-02-13 16:09:06.815586", "score": "0.9634", "loss": "0.2112", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull) return; mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 81, "n_pass": [186, 13, 10]}
{"time": "2021-02-13 16:09:08.517161", "score": "0.9634", "loss": "0.2112", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull); mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 79, "n_pass": [196, 14, 11]}
{"time": "2021-02-13 16:09:09.855141", "score": "0.964", "loss": "0.205", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude (); mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 77, "n_pass": [197, 15, 12]}
{"time": "2021-02-13 16:09:11.201463", "score": "0.9632", "loss": "0.2096", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; mSearch.reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 75, "n_pass": [199, 16, 13]}
{"time": "2021-02-13 16:09:12.551706", "score": "0.953", "loss": "0.2719", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(new ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 73, "n_pass": [201, 17, 14]}
{"time": "2021-02-13 16:09:13.894478", "score": "0.9498", "loss": "0.2728", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(new LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 71, "n_pass": [203, 18, 15]}
{"time": "2021-02-13 16:09:15.231819", "score": "0.947", "loss": "0.279", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\u5f53\u524d\u5750\u6807\uff1a\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 69, "n_pass": [205, 19, 16]}
{"time": "2021-02-13 16:09:16.551063", "score": "0.947", "loss": "0.279", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 67, "n_pass": [210, 20, 17]}
{"time": "2021-02-13 16:09:17.877013", "score": "0.9391", "loss": "0.3322", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); PreferencesUtils.putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 65, "n_pass": [212, 21, 18]}
{"time": "2021-02-13 16:09:19.220080", "score": "0.9206", "loss": "0.3988", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(LocService.mlongitude + \",\" + mlatitude); }", "n_tokens": 63, "n_pass": [216, 22, 19]}
{"time": "2021-02-13 16:09:20.541000", "score": "0.9247", "loss": "0.3652", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(mlongitude + \",\" + mlatitude); }", "n_tokens": 61, "n_pass": [218, 23, 20]}
{"time": "2021-02-13 16:09:21.880881", "score": "0.9254", "loss": "0.3656", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(+ \",\" + mlatitude); }", "n_tokens": 59, "n_pass": [219, 24, 21]}
{"time": "2021-02-13 16:09:23.209521", "score": "0.9268", "loss": "0.3514", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)mlongitude ; reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 57, "n_pass": [220, 25, 22]}
{"time": "2021-02-13 16:09:26.585805", "score": "0.9417", "loss": "0.2849", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull); reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 55, "n_pass": [235, 27, 23]}
{"time": "2021-02-13 16:09:27.929454", "score": "0.9458", "loss": "0.2738", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)reverseGeoCode(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 53, "n_pass": [236, 28, 24]}
{"time": "2021-02-13 16:09:35.303503", "score": "0.9551", "loss": "0.2177", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)(ReverseGeoCodeOption(LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 52, "n_pass": [312, 30, 25]}
{"time": "2021-02-13 16:09:36.645498", "score": "0.9664", "loss": "0.1698", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\" + mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 51, "n_pass": [313, 31, 26]}
{"time": "2021-02-13 16:09:37.982258", "score": "0.9664", "loss": "0.1698", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+ mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 50, "n_pass": [324, 32, 27]}
{"time": "2021-02-13 16:09:39.325185", "score": "0.9664", "loss": "0.1698", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude); putSharePre(\",\" + mlatitude); }", "n_tokens": 49, "n_pass": [326, 33, 28]}
{"time": "2021-02-13 16:09:40.643778", "score": "0.9664", "loss": "0.1698", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);putSharePre(\",\" + mlatitude); }", "n_tokens": 48, "n_pass": [330, 34, 29]}
{"time": "2021-02-13 16:09:41.943094", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\",\" + mlatitude); }", "n_tokens": 47, "n_pass": [331, 35, 30]}
{"time": "2021-02-13 16:09:43.247792", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\" + mlatitude); }", "n_tokens": 46, "n_pass": [334, 36, 31]}
{"time": "2021-02-13 16:09:44.558064", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location) { if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 45, "n_pass": [336, 37, 32]}
{"time": "2021-02-13 16:09:46.954377", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location){ if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 44, "n_pass": [352, 38, 33]}
{"time": "2021-02-13 16:09:48.255800", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location){if (locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 43, "n_pass": [354, 39, 34]}
{"time": "2021-02-13 16:09:49.918831", "score": "0.8302", "loss": "0.782", "code": "@Override void onReceiveLocation(BDLocation location){if(locationnull)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 42, "n_pass": [356, 40, 35]}
{"time": "2021-02-13 16:09:51.214340", "score": "0.8489", "loss": "0.7125", "code": "@Override void onReceiveLocation(BDLocation location){if(null)((LatLng()));(\"\"+mlatitude);(\"\"+ mlatitude); }", "n_tokens": 41, "n_pass": [358, 41, 36]}
{"time": "2021-02-13 16:09:54.611148", "score": "0.8489", "loss": "0.7125", "code": "@Override void onReceiveLocation(BDLocation location){if(null)((LatLng()));(\"\"+mlatitude);(\"\"+mlatitude); }", "n_tokens": 40, "n_pass": [403, 42, 37]}
{"time": "2021-02-13 16:09:55.912046", "score": "0.8489", "loss": "0.7125", "code": "@Override void onReceiveLocation(BDLocation location){if(null)((LatLng()));(\"\"+mlatitude);(\"\"+mlatitude);}", "n_tokens": 39, "n_pass": [406, 43, 38]}

Minimal simplified code:
@Override void onReceiveLocation(BDLocation location){if(null)((LatLng()));(""+mlatitude);(""+mlatitude);}

