
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/base/reference/BaseFieldReference_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hashCode = getDefiningClass().hashCode(); hashCode = hashCode * 31 + getName().hashCode(); return hashCode * 31 + getType().hashCode(); }
predict, score, loss = hashCode, 0.999889612197876, 0.0002689058892428875

Trace of simplified code(s):
{"time": "2021-02-13 18:06:26.729930", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { int hashCode = getDefiningClass().hashCode(); hashCode = hashCode * 31 + getName().hashCode(); return hashCode * 31 + getType().hashCode(); }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:06:28.156839", "score": "0.9998", "loss": "0.0006", "code": "@Override public int hashCode() { int hashCode ; hashCode = hashCode * 31 + getName().hashCode(); return hashCode * 31 + getType().hashCode(); }", "n_tokens": 62, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 18:06:29.483030", "score": "0.9994", "loss": "0.0015", "code": "@Override public int hashCode() { int hashCode ; hashCode = hashCode * 31 + getName() * 31 + getType().hashCode(); }", "n_tokens": 53, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 18:06:30.829524", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { int hashCode ; hashCode = hashCode * 31 + getName31 + getType().hashCode(); }", "n_tokens": 48, "n_pass": [43, 4, 4]}
{"time": "2021-02-13 18:06:32.143491", "score": "0.9993", "loss": "0.0017", "code": "@Override public int hashCode() { int hashCode ; hashCode = hashCode * 31 + getNamegetType().hashCode(); }", "n_tokens": 43, "n_pass": [44, 5, 5]}
{"time": "2021-02-13 18:06:33.463092", "score": "0.9995", "loss": "0.0013", "code": "@Override public int hashCode() { int hashCode ; hashCode = hashCode * 31 + getName(); }", "n_tokens": 38, "n_pass": [45, 6, 6]}
{"time": "2021-02-13 18:06:34.794273", "score": "0.9762", "loss": "0.0688", "code": " int hashCode() { int hashCode ; hashCode = hashCode * 31 + getName(); }", "n_tokens": 34, "n_pass": [47, 7, 7]}
{"time": "2021-02-13 18:06:36.118238", "score": "0.9923", "loss": "0.0258", "code": " int hashCode() { ; hashCode = hashCode * 31 + getName(); }", "n_tokens": 30, "n_pass": [50, 8, 8]}
{"time": "2021-02-13 18:06:37.767788", "score": "0.9971", "loss": "0.0103", "code": " int hashCode() { ; hashCode = hashCode1 + getName(); }", "n_tokens": 26, "n_pass": [53, 9, 9]}
{"time": "2021-02-13 18:06:39.035203", "score": "0.9817", "loss": "0.0568", "code": " int hashCode() { ; hashCode = hashCode(); }", "n_tokens": 21, "n_pass": [54, 10, 10]}
{"time": "2021-02-13 18:06:40.307782", "score": "0.8662", "loss": "0.4208", "code": " int hashCode() { ; hashCode(); }", "n_tokens": 17, "n_pass": [59, 11, 11]}
{"time": "2021-02-13 18:06:41.918688", "score": "0.8863", "loss": "0.2744", "code": " int hashCode() { ; hashCode; }", "n_tokens": 15, "n_pass": [72, 12, 12]}
{"time": "2021-02-13 18:06:43.530427", "score": "0.8863", "loss": "0.2744", "code": " int hashCode() { hashCode; }", "n_tokens": 13, "n_pass": [77, 13, 13]}
{"time": "2021-02-13 18:06:48.077848", "score": "0.8863", "loss": "0.2744", "code": " int hashCode() {hashCode; }", "n_tokens": 12, "n_pass": [96, 15, 14]}
{"time": "2021-02-13 18:06:49.375382", "score": "0.8863", "loss": "0.2744", "code": "int hashCode() {hashCode; }", "n_tokens": 11, "n_pass": [99, 16, 15]}
{"time": "2021-02-13 18:06:51.353971", "score": "0.8863", "loss": "0.2744", "code": "int hashCode(){hashCode; }", "n_tokens": 10, "n_pass": [105, 17, 16]}
{"time": "2021-02-13 18:06:54.898785", "score": "0.8863", "loss": "0.2744", "code": "int hashCode(){hashCode;}", "n_tokens": 9, "n_pass": [117, 19, 17]}

Minimal simplified code:
int hashCode(){hashCode;}

