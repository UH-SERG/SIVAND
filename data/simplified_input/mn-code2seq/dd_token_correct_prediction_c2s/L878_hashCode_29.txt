
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/collection/Event_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = apiKey != null ? apiKey.hashCode() : 0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }
predict, score, loss = hashCode, 0.9998427629470825, 0.0003625909157563001

Trace of simplified code(s):
{"time": "2021-02-13 23:37:23.287435", "score": "0.9998", "loss": "0.0004", "code": "@Override public int hashCode() { int result = apiKey != null ? apiKey.hashCode() : 0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 150, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:37:25.007001", "score": "0.9992", "loss": "0.0018", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0); result = 31 * result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 132, "n_pass": [21, 2, 2]}
{"time": "2021-02-13 23:37:26.399001", "score": "0.9994", "loss": "0.0015", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime != null ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 123, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 23:37:28.136235", "score": "0.9993", "loss": "0.0016", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31 * result + (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 118, "n_pass": [89, 4, 4]}
{"time": "2021-02-13 23:37:29.881069", "score": "0.9994", "loss": "0.0014", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum != null ? checksum.hashCode() : 0); return result; }", "n_tokens": 113, "n_pass": [93, 5, 5]}
{"time": "2021-02-13 23:37:31.288062", "score": "0.9994", "loss": "0.0016", "code": "@Override public int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 108, "n_pass": [95, 6, 6]}
{"time": "2021-02-13 23:37:32.648062", "score": "0.9968", "loss": "0.0082", "code": " int hashCode() { int result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 104, "n_pass": [100, 7, 7]}
{"time": "2021-02-13 23:37:35.184125", "score": "0.9966", "loss": "0.0089", "code": " int hashCode() { result =0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 102, "n_pass": [171, 8, 8]}
{"time": "2021-02-13 23:37:36.552473", "score": "0.9976", "loss": "0.0062", "code": " int hashCode() { result0; result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 100, "n_pass": [172, 9, 9]}
{"time": "2021-02-13 23:37:37.935474", "score": "0.9964", "loss": "0.011", "code": " int hashCode() { result result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 98, "n_pass": [173, 10, 10]}
{"time": "2021-02-13 23:37:39.297311", "score": "0.9978", "loss": "0.0059", "code": " int hashCode() { result = 31 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 96, "n_pass": [174, 11, 11]}
{"time": "2021-02-13 23:37:40.660770", "score": "0.9976", "loss": "0.0064", "code": " int hashCode() { result =1 * result + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 94, "n_pass": [176, 12, 12]}
{"time": "2021-02-13 23:37:42.022582", "score": "0.9968", "loss": "0.0085", "code": " int hashCode() { result =1 * + (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 92, "n_pass": [179, 13, 13]}
{"time": "2021-02-13 23:37:43.407582", "score": "0.9976", "loss": "0.0066", "code": " int hashCode() { result =1 * (apiVersion != null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 90, "n_pass": [180, 14, 14]}
{"time": "2021-02-13 23:37:44.755113", "score": "0.9979", "loss": "0.0055", "code": " int hashCode() { result =1 * (apiVersion= null ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 88, "n_pass": [182, 15, 15]}
{"time": "2021-02-13 23:37:46.122285", "score": "0.9962", "loss": "0.0099", "code": " int hashCode() { result =1 * (apiVersionnull ? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 86, "n_pass": [183, 16, 16]}
{"time": "2021-02-13 23:37:47.505163", "score": "0.9963", "loss": "0.0099", "code": " int hashCode() { result =1 * (apiVersion? apiVersion.hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 84, "n_pass": [184, 17, 17]}
{"time": "2021-02-13 23:37:48.863104", "score": "0.9937", "loss": "0.0163", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* result + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 82, "n_pass": [186, 18, 18]}
{"time": "2021-02-13 23:37:50.192794", "score": "0.9964", "loss": "0.0108", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* + (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 80, "n_pass": [192, 19, 19]}
{"time": "2021-02-13 23:37:51.534168", "score": "0.9969", "loss": "0.0096", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result = 31+ (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 78, "n_pass": [193, 20, 20]}
{"time": "2021-02-13 23:37:53.564106", "score": "0.9979", "loss": "0.0068", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode() : 0); return result; }", "n_tokens": 75, "n_pass": [201, 21, 21]}
{"time": "2021-02-13 23:37:54.926445", "score": "0.9973", "loss": "0.0084", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode: 0); return result; }", "n_tokens": 72, "n_pass": [205, 22, 22]}
{"time": "2021-02-13 23:37:56.275465", "score": "0.996", "loss": "0.0134", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result =  (checksum ? checksum.hashCode: 0); ; }", "n_tokens": 69, "n_pass": [208, 23, 23]}
{"time": "2021-02-13 23:37:58.669792", "score": "0.9852", "loss": "0.0534", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); result (checksum ? checksum.hashCode: 0); ; }", "n_tokens": 66, "n_pass": [231, 24, 24]}
{"time": "2021-02-13 23:38:05.705886", "score": "0.9959", "loss": "0.0154", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? checksum.hashCode: 0); ; }", "n_tokens": 64, "n_pass": [315, 25, 25]}
{"time": "2021-02-13 23:38:07.029164", "score": "0.9928", "loss": "0.0288", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); ; }", "n_tokens": 62, "n_pass": [319, 26, 26]}
{"time": "2021-02-13 23:38:08.372992", "score": "0.9928", "loss": "0.0288", "code": " int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 60, "n_pass": [323, 27, 27]}
{"time": "2021-02-13 23:38:09.690849", "score": "0.9928", "loss": "0.0288", "code": "int hashCode() { result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 59, "n_pass": [325, 28, 28]}
{"time": "2021-02-13 23:38:11.715742", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){ result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 58, "n_pass": [331, 29, 29]}
{"time": "2021-02-13 23:38:13.056756", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result =1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 57, "n_pass": [333, 30, 30]}
{"time": "2021-02-13 23:38:14.375842", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1 * (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 56, "n_pass": [335, 31, 31]}
{"time": "2021-02-13 23:38:16.046380", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1* (apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 55, "n_pass": [338, 32, 32]}
{"time": "2021-02-13 23:38:17.378607", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion? hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 54, "n_pass": [340, 33, 33]}
{"time": "2021-02-13 23:38:18.696786", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode() : 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 53, "n_pass": [344, 34, 34]}
{"time": "2021-02-13 23:38:20.023668", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode(): 0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 52, "n_pass": [348, 35, 35]}
{"time": "2021-02-13 23:38:21.336485", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)* (uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 51, "n_pass": [350, 36, 36]}
{"time": "2021-02-13 23:38:22.669965", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime ? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 50, "n_pass": [354, 37, 37]}
{"time": "2021-02-13 23:38:24.015465", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime? uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 49, "n_pass": [357, 38, 38]}
{"time": "2021-02-13 23:38:25.361979", "score": "0.9928", "loss": "0.0288", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime.hashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 48, "n_pass": [359, 39, 39]}
{"time": "2021-02-13 23:38:26.699827", "score": "0.9653", "loss": "0.1612", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTimehashCode() : 0); (checksum ? hashCode: 0); }", "n_tokens": 47, "n_pass": [361, 40, 40]}
{"time": "2021-02-13 23:38:28.009713", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime() : 0); (checksum ? hashCode: 0); }", "n_tokens": 46, "n_pass": [362, 41, 41]}
{"time": "2021-02-13 23:38:29.362839", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime(): 0); (checksum ? hashCode: 0); }", "n_tokens": 45, "n_pass": [365, 42, 42]}
{"time": "2021-02-13 23:38:34.455377", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime(): 0); (checksum? hashCode: 0); }", "n_tokens": 44, "n_pass": [422, 43, 43]}
{"time": "2021-02-13 23:38:35.817435", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime(): 0); (checksum?hashCode: 0); }", "n_tokens": 43, "n_pass": [424, 44, 44]}
{"time": "2021-02-13 23:38:37.168377", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime(): 0); (checksum?hashCode:0); }", "n_tokens": 42, "n_pass": [427, 45, 45]}
{"time": "2021-02-13 23:38:38.507186", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime(): 0); (checksum?hashCode:0);}", "n_tokens": 41, "n_pass": [431, 46, 46]}
{"time": "2021-02-13 23:38:40.911237", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime():0); (checksum?hashCode:0);}", "n_tokens": 40, "n_pass": [460, 47, 47]}
{"time": "2021-02-13 23:38:42.263018", "score": "0.9717", "loss": "0.118", "code": "int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime():0);(checksum?hashCode:0);}", "n_tokens": 39, "n_pass": [464, 48, 48]}

Minimal simplified code:
int hashCode(){result=1*(apiVersion?hashCode():0)*(uploadTime?uploadTime():0);(checksum?hashCode:0);}

