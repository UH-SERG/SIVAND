
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__incubator-heron/heron/schedulers/src/java/org/apache/heron/scheduler/yarn/HeronMasterDriverProvider_getInstance.java
method_name = getInstance
method_body = static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException("Heron Master Driver is not initialized yet"); } return instance; }
predict, score, loss = getInstance, 0.9501237869262695, 0.15477995574474335

Trace of simplified code(s):
{"time": "2021-02-13 20:17:22.039704", "score": "0.9501", "loss": "0.1548", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron Master Driver is not initialized yet\"); } return instance; }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:17:23.404469", "score": "0.935", "loss": "0.1735", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron Masterinitialized yet\"); } return instance; }", "n_tokens": 50, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 20:17:24.719809", "score": "0.9226", "loss": "0.2077", "code": "static synchronized HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron \"); } return instance; }", "n_tokens": 46, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 20:17:26.017265", "score": "0.9226", "loss": "0.2077", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw new IllegalStateException(\"Heron \"); } return instance; }", "n_tokens": 43, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 20:17:27.672706", "score": "0.9607", "loss": "0.0932", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"Heron \"); } return instance; }", "n_tokens": 39, "n_pass": [58, 5, 5]}
{"time": "2021-02-13 20:17:30.348895", "score": "0.9615", "loss": "0.0908", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); } return instance; }", "n_tokens": 37, "n_pass": [93, 6, 6]}
{"time": "2021-02-13 20:17:31.642112", "score": "0.924", "loss": "0.1851", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); } instance; }", "n_tokens": 35, "n_pass": [97, 7, 7]}
{"time": "2021-02-13 20:17:32.931461", "score": "0.8345", "loss": "0.6383", "code": " HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); }  }", "n_tokens": 33, "n_pass": [98, 8, 8]}
{"time": "2021-02-13 20:17:34.219959", "score": "0.8345", "loss": "0.6383", "code": "HeronMasterDriver getInstance() { if (instance == null) { throw(\"\"); }  }", "n_tokens": 32, "n_pass": [100, 9, 9]}
{"time": "2021-02-13 20:17:36.575250", "score": "0.6036", "loss": "1.709", "code": "HeronMasterDriver getInstance() { if (instance= null) { throw(\"\"); }  }", "n_tokens": 30, "n_pass": [109, 10, 10]}
{"time": "2021-02-13 20:17:39.244523", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance() { if (instance= null) {(\"\"); }  }", "n_tokens": 28, "n_pass": [113, 12, 11]}
{"time": "2021-02-13 20:17:45.953197", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance() { if (instance= null) {(\"\");}  }", "n_tokens": 27, "n_pass": [158, 14, 12]}
{"time": "2021-02-13 20:17:47.245336", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance() { if (instance= null) {(\"\");} }", "n_tokens": 26, "n_pass": [160, 15, 13]}
{"time": "2021-02-13 20:17:48.533755", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance() { if (instance= null) {(\"\");}}", "n_tokens": 25, "n_pass": [161, 16, 14]}
{"time": "2021-02-13 20:17:50.870920", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance(){ if (instance= null) {(\"\");}}", "n_tokens": 24, "n_pass": [168, 17, 15]}
{"time": "2021-02-13 20:17:52.160001", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance(){if (instance= null) {(\"\");}}", "n_tokens": 23, "n_pass": [170, 18, 16]}
{"time": "2021-02-13 20:17:53.477657", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance(){if(instance= null) {(\"\");}}", "n_tokens": 22, "n_pass": [172, 19, 17]}
{"time": "2021-02-13 20:17:54.786789", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance(){if(instance=null) {(\"\");}}", "n_tokens": 21, "n_pass": [176, 20, 18]}
{"time": "2021-02-13 20:17:56.072555", "score": "0.4799", "loss": "2.5493", "code": "HeronMasterDriver getInstance(){if(instance=null){(\"\");}}", "n_tokens": 20, "n_pass": [179, 21, 19]}

Minimal simplified code:
HeronMasterDriver getInstance(){if(instance=null){("");}}

