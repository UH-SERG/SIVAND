
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_w.java
method_name = w
method_body = public static void w(Throwable tr) { if (!allowW) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }
predict, score, loss = w, 0.9922427535057068, 0.04213549941778183

Trace of simplified code(s):
{"time": "2021-02-14 03:06:30.781261", "score": "0.9922", "loss": "0.0421", "code": "public static void w(Throwable tr) { if (!allowW) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 92, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 03:06:32.202980", "score": "0.9931", "loss": "0.0417", "code": "public static void w(Throwable tr) { if (!allowW) return; if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 69, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 03:06:33.943044", "score": "0.9885", "loss": "0.0174", "code": "public static void w(Throwable tr) {  return; if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 63, "n_pass": [47, 3, 3]}
{"time": "2021-02-14 03:06:35.710903", "score": "0.9885", "loss": "0.0174", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tag, tr); } else { Log.w(tag, tr); } }", "n_tokens": 60, "n_pass": [81, 4, 4]}
{"time": "2021-02-14 03:06:37.061147", "score": "0.9865", "loss": "0.0212", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else { Log.w(tag, tr); } }", "n_tokens": 57, "n_pass": [87, 5, 5]}
{"time": "2021-02-14 03:06:38.409507", "score": "0.991", "loss": "0.0176", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag, tr); } }", "n_tokens": 54, "n_pass": [91, 6, 6]}
{"time": "2021-02-14 03:06:39.842104", "score": "0.9824", "loss": "0.0496", "code": "public static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 51, "n_pass": [93, 7, 7]}
{"time": "2021-02-14 03:06:41.212181", "score": "0.9824", "loss": "0.0496", "code": "static void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 49, "n_pass": [96, 8, 8]}
{"time": "2021-02-14 03:06:42.587682", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr) {  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 47, "n_pass": [97, 9, 9]}
{"time": "2021-02-14 03:06:47.903691", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr){  if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 46, "n_pass": [154, 10, 10]}
{"time": "2021-02-14 03:06:49.273079", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr){ if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 45, "n_pass": [156, 11, 11]}
{"time": "2021-02-14 03:06:50.624294", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr){if (customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 44, "n_pass": [157, 12, 12]}
{"time": "2021-02-14 03:06:52.003412", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr){if(customLogger != null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 43, "n_pass": [159, 13, 13]}
{"time": "2021-02-14 03:06:53.377348", "score": "0.9824", "loss": "0.0496", "code": "void w(Throwable tr){if(customLogger!= null) { customLogger.w(tr); } else {w(tag); } }", "n_tokens": 42, "n_pass": [162, 14, 14]}
{"time": "2021-02-14 03:06:54.734838", "score": "0.9908", "loss": "0.0539", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } else {w(tag); } }", "n_tokens": 40, "n_pass": [167, 15, 15]}
{"time": "2021-02-14 03:06:56.115474", "score": "0.9809", "loss": "0.0532", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w(tag); } }", "n_tokens": 38, "n_pass": [172, 16, 16]}
{"time": "2021-02-14 03:07:01.346375", "score": "0.9784", "loss": "0.0472", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w(); } }", "n_tokens": 37, "n_pass": [225, 17, 17]}
{"time": "2021-02-14 03:07:02.710894", "score": "0.9784", "loss": "0.0472", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w();} }", "n_tokens": 36, "n_pass": [228, 18, 18]}
{"time": "2021-02-14 03:07:04.043029", "score": "0.9784", "loss": "0.0472", "code": "void w(Throwable tr){if(customLogger!= null) { w(tr); } {w();}}", "n_tokens": 35, "n_pass": [230, 19, 19]}
{"time": "2021-02-14 03:07:06.115265", "score": "0.9897", "loss": "0.0261", "code": "void w(Throwable tr){if(customLogger= null) { w(tr); } {w();}}", "n_tokens": 34, "n_pass": [244, 20, 20]}
{"time": "2021-02-14 03:07:07.481387", "score": "0.9897", "loss": "0.0261", "code": "void w(Throwable tr){if(customLogger=null) { w(tr); } {w();}}", "n_tokens": 33, "n_pass": [246, 21, 21]}
{"time": "2021-02-14 03:07:08.842473", "score": "0.9897", "loss": "0.0261", "code": "void w(Throwable tr){if(customLogger=null){ w(tr); } {w();}}", "n_tokens": 32, "n_pass": [249, 22, 22]}
{"time": "2021-02-14 03:07:10.196745", "score": "0.9897", "loss": "0.0261", "code": "void w(Throwable tr){if(customLogger=null){w(tr); } {w();}}", "n_tokens": 31, "n_pass": [251, 23, 23]}
{"time": "2021-02-14 03:07:11.560731", "score": "0.3972", "loss": "1.7607", "code": "void w(Throwable tr){if(customLogger=null){(tr); } {w();}}", "n_tokens": 30, "n_pass": [252, 24, 24]}
{"time": "2021-02-14 03:07:12.919875", "score": "0.3972", "loss": "1.7607", "code": "void w(Throwable tr){if(customLogger=null){(tr);} {w();}}", "n_tokens": 29, "n_pass": [257, 25, 25]}
{"time": "2021-02-14 03:07:14.248184", "score": "0.3972", "loss": "1.7607", "code": "void w(Throwable tr){if(customLogger=null){(tr);}{w();}}", "n_tokens": 28, "n_pass": [259, 26, 26]}
{"time": "2021-02-14 03:07:16.379777", "score": "0.692", "loss": "0.8638", "code": "void w(Throwable tr){if(customLoggernull){(tr);}{w();}}", "n_tokens": 27, "n_pass": [279, 27, 27]}
{"time": "2021-02-14 03:07:17.751513", "score": "0.7677", "loss": "0.5305", "code": "void w(Throwable tr){if(customLogger){(tr);}{w();}}", "n_tokens": 26, "n_pass": [280, 28, 28]}

Minimal simplified code:
void w(Throwable tr){if(customLogger){(tr);}{w();}}

