
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.1/org/bouncycastle/x509/AttributeCertificateHolder_equals.java
method_name = equals
method_body = public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = (AttributeCertificateHolder) obj; return this.holder.equals(other.holder); }
predict, score, loss = equals, 0.9994389414787292, 0.000943514984101057

Trace of simplified code(s):
{"time": "2021-02-13 03:54:09.336521", "score": "0.9994", "loss": "0.0009", "code": "public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = (AttributeCertificateHolder) obj; return this.holder.equals(other.holder); }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 03:54:11.035215", "score": "0.9986", "loss": "0.0023", "code": "public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = holder.equals(other.holder); }", "n_tokens": 72, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 03:54:12.776953", "score": "0.9989", "loss": "0.0018", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } AttributeCertificateHolder other = holder.equals(other.holder); }", "n_tokens": 67, "n_pass": [55, 3, 3]}
{"time": "2021-02-13 03:54:14.107979", "score": "0.9966", "loss": "0.0051", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; }  holder.equals(other.holder); }", "n_tokens": 62, "n_pass": [61, 4, 4]}
{"time": "2021-02-13 03:54:15.432548", "score": "0.9982", "loss": "0.0027", "code": "public boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } equals(other.holder); }", "n_tokens": 59, "n_pass": [98, 5, 5]}
{"time": "2021-02-13 03:54:16.737617", "score": "0.9982", "loss": "0.0027", "code": "boolean equals(Object obj) { if (obj == this) { } if (!(obj instanceof AttributeCertificateHolder)) { return false; } equals(other.holder); }", "n_tokens": 57, "n_pass": [101, 6, 6]}
{"time": "2021-02-13 03:54:18.424198", "score": "0.9872", "loss": "0.018", "code": "boolean equals(Object obj) { if (obj == this) { } if (!(obj )) { return false; } equals(other.holder); }", "n_tokens": 54, "n_pass": [116, 7, 7]}
{"time": "2021-02-13 03:54:23.788770", "score": "0.985", "loss": "0.0214", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) { return false; } equals(other.holder); }", "n_tokens": 53, "n_pass": [181, 8, 8]}
{"time": "2021-02-13 03:54:25.122170", "score": "0.9654", "loss": "0.0509", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) { false; } equals(other.holder); }", "n_tokens": 51, "n_pass": [186, 9, 9]}
{"time": "2021-02-13 03:54:26.427348", "score": "0.9492", "loss": "0.0743", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  } equals(other.holder); }", "n_tokens": 49, "n_pass": [187, 10, 10]}
{"time": "2021-02-13 03:54:27.764726", "score": "0.3825", "loss": "1.5273", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  }(other.holder); }", "n_tokens": 47, "n_pass": [189, 11, 11]}
{"time": "2021-02-13 03:54:29.066628", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj) { if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 45, "n_pass": [191, 12, 12]}
{"time": "2021-02-13 03:54:31.089129", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){ if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 44, "n_pass": [202, 13, 13]}
{"time": "2021-02-13 03:54:32.385017", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if (obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 43, "n_pass": [204, 14, 14]}
{"time": "2021-02-13 03:54:33.679619", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj == this) { } if ((obj )) {  }(other); }", "n_tokens": 42, "n_pass": [206, 15, 15]}
{"time": "2021-02-13 03:54:34.975615", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj== this) { } if ((obj )) {  }(other); }", "n_tokens": 41, "n_pass": [209, 16, 16]}
{"time": "2021-02-13 03:54:38.872019", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this) { } if ((obj )) {  }(other); }", "n_tokens": 40, "n_pass": [212, 19, 17]}
{"time": "2021-02-13 03:54:40.158126", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){ } if ((obj )) {  }(other); }", "n_tokens": 39, "n_pass": [215, 20, 18]}
{"time": "2021-02-13 03:54:41.451769", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){} if ((obj )) {  }(other); }", "n_tokens": 38, "n_pass": [217, 21, 19]}
{"time": "2021-02-13 03:54:42.743040", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if ((obj )) {  }(other); }", "n_tokens": 37, "n_pass": [219, 22, 20]}
{"time": "2021-02-13 03:54:44.077429", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj )) {  }(other); }", "n_tokens": 36, "n_pass": [221, 23, 21]}
{"time": "2021-02-13 03:54:50.718512", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj )){  }(other); }", "n_tokens": 35, "n_pass": [267, 26, 22]}
{"time": "2021-02-13 03:54:52.014011", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj )){ }(other); }", "n_tokens": 34, "n_pass": [269, 27, 23]}
{"time": "2021-02-13 03:54:53.307688", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj )){}(other); }", "n_tokens": 33, "n_pass": [270, 28, 24]}
{"time": "2021-02-13 03:54:54.609844", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj )){}(other);}", "n_tokens": 32, "n_pass": [276, 29, 25]}
{"time": "2021-02-13 03:54:59.249938", "score": "0.3948", "loss": "1.3805", "code": "boolean equals(Object obj){if(obj==this){}if((obj)){}(other);}", "n_tokens": 31, "n_pass": [300, 32, 26]}

Minimal simplified code:
boolean equals(Object obj){if(obj==this){}if((obj)){}(other);}

