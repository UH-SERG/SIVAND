
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/spring-projects__spring-ws/spring-ws-core/src/main/java/org/springframework/ws/soap/saaj/support/SaajContentHandler_endElement.java
method_name = endElement
method_body = @Override public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), "Invalid element on stack"); Assert.isTrue(uri.equals(element.getElementName().getURI()), "Invalid element on stack"); element = element.getParentElement(); }
predict, score, loss = endElement, 0.7759963870048523, 0.636968195438385

Trace of simplified code(s):
{"time": "2021-02-13 21:46:27.462396", "score": "0.776", "loss": "0.637", "code": "@Override public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\"); Assert.isTrue(uri.equals(element.getElementName().getURI()), \"Invalid element on stack\"); element = element.getParentElement(); }", "n_tokens": 106, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:46:29.186081", "score": "0.7557", "loss": "0.7222", "code": "@Override public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\"); Assert.isTrue(uri.equals(element.getElementName().getURI()), \"Invalid element on stack\").getParentElement(); }", "n_tokens": 99, "n_pass": [58, 2, 2]}
{"time": "2021-02-13 21:46:30.893193", "score": "0.7796", "loss": "0.624", "code": "@Override public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\"); Assert.isTrue(uri.equals(element.getElementName().getURI()), \"Invalid element on stack\"); }", "n_tokens": 95, "n_pass": [103, 3, 3]}
{"time": "2021-02-13 21:46:32.229066", "score": "0.6236", "loss": "1.5194", "code": "public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\"); Assert.isTrue(uri.equals(element.getElementName().getURI()), \"Invalid element on stack\"); }", "n_tokens": 92, "n_pass": [105, 4, 4]}
{"time": "2021-02-13 21:46:37.920675", "score": "0.6288", "loss": "1.4863", "code": "public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getElementName().getURI()), \"Invalid element on stack\"); }", "n_tokens": 89, "n_pass": [125, 8, 5]}
{"time": "2021-02-13 21:46:39.251913", "score": "0.6646", "loss": "1.2364", "code": "public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"Invalid element on stack\"); }", "n_tokens": 85, "n_pass": [128, 9, 6]}
{"time": "2021-02-13 21:46:41.961068", "score": "0.7022", "loss": "1.0321", "code": "public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"on stack\"); }", "n_tokens": 81, "n_pass": [131, 11, 7]}
{"time": "2021-02-13 21:46:51.365723", "score": "0.712", "loss": "0.9686", "code": "public void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 79, "n_pass": [207, 16, 8]}
{"time": "2021-02-13 21:46:52.699799", "score": "0.712", "loss": "0.9686", "code": " void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 78, "n_pass": [210, 17, 9]}
{"time": "2021-02-13 21:46:54.050520", "score": "0.712", "loss": "0.9686", "code": "void endElement(String uri, String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 77, "n_pass": [211, 18, 10]}
{"time": "2021-02-13 21:46:56.093380", "score": "0.712", "loss": "0.9686", "code": "void endElement(String uri,String localName, String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 76, "n_pass": [220, 19, 11]}
{"time": "2021-02-13 21:46:57.415699", "score": "0.712", "loss": "0.9686", "code": "void endElement(String uri,String localName,String qName) throws SAXException { Assert.isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 75, "n_pass": [225, 20, 12]}
{"time": "2021-02-13 21:46:58.740360", "score": "0.7021", "loss": "1.0347", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(element.getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 73, "n_pass": [233, 21, 13]}
{"time": "2021-02-13 21:47:01.412650", "score": "0.7239", "loss": "0.9197", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element on stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 71, "n_pass": [237, 23, 14]}
{"time": "2021-02-13 21:47:04.055064", "score": "0.7402", "loss": "0.8164", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element stack\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 69, "n_pass": [245, 25, 15]}
{"time": "2021-02-13 21:47:05.383972", "score": "0.7271", "loss": "0.8904", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element\").isTrue(uri.equals(element.getURI()), \"stack\"); }", "n_tokens": 67, "n_pass": [246, 26, 16]}
{"time": "2021-02-13 21:47:06.694684", "score": "0.7644", "loss": "0.7523", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element\").isTrue(uri(element.getURI()), \"stack\"); }", "n_tokens": 65, "n_pass": [250, 27, 17]}
{"time": "2021-02-13 21:47:08.028452", "score": "0.7017", "loss": "1.0788", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element\").isTrue(uri(element()), \"stack\"); }", "n_tokens": 63, "n_pass": [252, 28, 18]}
{"time": "2021-02-13 21:47:09.344055", "score": "0.678", "loss": "1.2173", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(localName.equals(getElementName().getLocalName()), \"Invalid element\").isTrue(uri(element), \"stack\"); }", "n_tokens": 61, "n_pass": [253, 29, 19]}
{"time": "2021-02-13 21:47:11.390863", "score": "0.6579", "loss": "1.3778", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()), \"Invalid element\").isTrue(uri(element), \"stack\"); }", "n_tokens": 59, "n_pass": [279, 30, 20]}
{"time": "2021-02-13 21:47:17.771857", "score": "0.6579", "loss": "1.3778", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue(uri(element), \"stack\"); }", "n_tokens": 58, "n_pass": [366, 32, 21]}
{"time": "2021-02-13 21:47:23.026124", "score": "0.7343", "loss": "0.8903", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element), \"stack\"); }", "n_tokens": 57, "n_pass": [376, 36, 22]}
{"time": "2021-02-13 21:47:24.343942", "score": "0.7419", "loss": "0.7736", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element) \"stack\"); }", "n_tokens": 56, "n_pass": [380, 37, 23]}
{"time": "2021-02-13 21:47:25.664420", "score": "0.7419", "loss": "0.7736", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"stack\"); }", "n_tokens": 55, "n_pass": [381, 38, 24]}
{"time": "2021-02-13 21:47:26.979824", "score": "0.7825", "loss": "0.6182", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\"); }", "n_tokens": 54, "n_pass": [383, 39, 25]}
{"time": "2021-02-13 21:47:28.303188", "score": "0.7825", "loss": "0.6182", "code": "void endElement(String uri,String localName,String qName) throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\");}", "n_tokens": 53, "n_pass": [387, 40, 26]}
{"time": "2021-02-13 21:47:30.368789", "score": "0.7825", "loss": "0.6182", "code": "void endElement(String uri,String localName,String qName)throws SAXException { isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\");}", "n_tokens": 52, "n_pass": [405, 41, 27]}
{"time": "2021-02-13 21:47:31.699798", "score": "0.7825", "loss": "0.6182", "code": "void endElement(String uri,String localName,String qName)throws SAXException{ isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\");}", "n_tokens": 51, "n_pass": [409, 42, 28]}
{"time": "2021-02-13 21:47:33.035050", "score": "0.7825", "loss": "0.6182", "code": "void endElement(String uri,String localName,String qName)throws SAXException{isTrue(equals(getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\");}", "n_tokens": 50, "n_pass": [411, 43, 29]}
{"time": "2021-02-13 21:47:34.351852", "score": "0.8001", "loss": "0.5458", "code": "void endElement(String uri,String localName,String qName)throws SAXException{isTrue((getElementName().getLocalName()),\"Invalid element\").isTrue((element)\"\");}", "n_tokens": 49, "n_pass": [414, 44, 30]}
{"time": "2021-02-13 21:47:35.681924", "score": "0.7695", "loss": "0.6452", "code": "void endElement(String uri,String localName,String qName)throws SAXException{isTrue((getElementName().getLocalName()),\" element\").isTrue((element)\"\");}", "n_tokens": 48, "n_pass": [426, 45, 31]}
{"time": "2021-02-13 21:47:37.014316", "score": "0.7695", "loss": "0.6452", "code": "void endElement(String uri,String localName,String qName)throws SAXException{isTrue((getElementName().getLocalName()),\"element\").isTrue((element)\"\");}", "n_tokens": 47, "n_pass": [427, 46, 32]}
{"time": "2021-02-13 21:47:38.329557", "score": "0.7752", "loss": "0.6197", "code": "void endElement(String uri,String localName,String qName)throws SAXException{isTrue((getElementName().getLocalName()),\"\").isTrue((element)\"\");}", "n_tokens": 46, "n_pass": [428, 47, 33]}

Minimal simplified code:
void endElement(String uri,String localName,String qName)throws SAXException{isTrue((getElementName().getLocalName()),"").isTrue((element)"");}

