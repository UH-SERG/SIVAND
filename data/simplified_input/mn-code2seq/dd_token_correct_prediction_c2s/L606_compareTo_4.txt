
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/signup/api/src/java/org/sakaiproject/signup/model/SignupAttendee_compareTo.java
method_name = compareTo
method_body = public int compareTo(Object o) { if (o == null) return -1; if (!(o instanceof SignupAttendee)) throw new ClassCastException("Not type of SignupAttendee"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }
predict, score, loss = compareTo, 0.9900379776954651, 0.024555396288633347

Trace of simplified code(s):
{"time": "2021-02-13 18:50:07.118350", "score": "0.99", "loss": "0.0242", "code": "public int compareTo(Object o) { if (o == null) return -1; if (!(o instanceof SignupAttendee)) throw new ClassCastException(\"Not type of SignupAttendee\"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:50:08.467106", "score": "0.9915", "loss": "0.0214", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other = (SignupAttendee) o; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 115, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 18:50:09.818890", "score": "0.9859", "loss": "0.0397", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return -1; int value = displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 107, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 18:50:11.190380", "score": "0.991", "loss": "0.0264", "code": "public int compareTo(Object o) { if (o == null) return -1; if (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 99, "n_pass": [48, 4, 4]}
{"time": "2021-02-13 18:50:12.523807", "score": "0.9919", "loss": "0.0218", "code": "public int compareTo(Object o) { if (o == null) (\"Not type of SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 91, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 18:50:13.878197", "score": "0.9921", "loss": "0.0211", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\"); SignupAttendee other; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 87, "n_pass": [91, 6, 6]}
{"time": "2021-02-13 18:50:15.202761", "score": "0.9946", "loss": "0.0182", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null) return - displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 83, "n_pass": [93, 7, 7]}
{"time": "2021-02-13 18:50:16.588366", "score": "0.9846", "loss": "0.0376", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null) displayName.compareTo(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 79, "n_pass": [97, 8, 8]}
{"time": "2021-02-13 18:50:17.942939", "score": "0.8668", "loss": "0.3832", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if (value != 0) return value; return 0; }", "n_tokens": 75, "n_pass": [98, 9, 9]}
{"time": "2021-02-13 18:50:19.249319", "score": "0.6785", "loss": "0.9108", "code": "public int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 71, "n_pass": [102, 10, 10]}
{"time": "2021-02-13 18:50:26.565221", "score": "0.6785", "loss": "0.9108", "code": "int compareTo(Object o) { if (o == null) (\"Not SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 69, "n_pass": [160, 15, 11]}
{"time": "2021-02-13 18:50:27.878626", "score": "0.6757", "loss": "0.9125", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");; if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 67, "n_pass": [172, 16, 12]}
{"time": "2021-02-13 18:50:29.197048", "score": "0.728", "loss": "0.7578", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName == null)(other.getDisplayName()); if ( 0) return value; return 0; }", "n_tokens": 65, "n_pass": [175, 17, 13]}
{"time": "2021-02-13 18:50:33.165345", "score": "0.7429", "loss": "0.771", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName == null)(other()); if ( 0) return value; return 0; }", "n_tokens": 63, "n_pass": [182, 20, 14]}
{"time": "2021-02-13 18:50:34.496261", "score": "0.7332", "loss": "0.8416", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName == null)(other); if ( 0) return value; return 0; }", "n_tokens": 61, "n_pass": [183, 21, 15]}
{"time": "2021-02-13 18:50:35.795166", "score": "0.6722", "loss": "0.9788", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName == null)(other); if ( 0) value; return 0; }", "n_tokens": 59, "n_pass": [189, 22, 16]}
{"time": "2021-02-13 18:50:37.116218", "score": "0.7823", "loss": "0.5709", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName == null)(other); if ( 0) return 0; }", "n_tokens": 56, "n_pass": [190, 23, 17]}
{"time": "2021-02-13 18:50:40.142453", "score": "0.811", "loss": "0.5344", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName= null)(other); if ( 0) return 0; }", "n_tokens": 54, "n_pass": [209, 25, 18]}
{"time": "2021-02-13 18:50:41.455571", "score": "0.6967", "loss": "0.9162", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayNamenull)(other); if ( 0) return 0; }", "n_tokens": 52, "n_pass": [210, 26, 19]}
{"time": "2021-02-13 18:50:50.117254", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName)(other); if ( 0) return 0; }", "n_tokens": 51, "n_pass": [286, 28, 20]}
{"time": "2021-02-13 18:50:51.469518", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName)(other);if ( 0) return 0; }", "n_tokens": 50, "n_pass": [291, 29, 21]}
{"time": "2021-02-13 18:50:52.777673", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName)(other);if( 0) return 0; }", "n_tokens": 49, "n_pass": [293, 30, 22]}
{"time": "2021-02-13 18:50:54.110117", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName)(other);if(0) return 0; }", "n_tokens": 48, "n_pass": [295, 31, 23]}
{"time": "2021-02-13 18:50:55.429713", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o) { if (o == null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 47, "n_pass": [298, 32, 24]}
{"time": "2021-02-13 18:51:00.131713", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o){ if (o == null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 46, "n_pass": [311, 35, 25]}
{"time": "2021-02-13 18:51:01.443105", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o){if (o == null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 45, "n_pass": [313, 36, 26]}
{"time": "2021-02-13 18:51:02.752343", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o){if(o == null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 44, "n_pass": [315, 37, 27]}
{"time": "2021-02-13 18:51:04.065491", "score": "0.7737", "loss": "0.6202", "code": "int compareTo(Object o){if(o== null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 43, "n_pass": [318, 38, 28]}
{"time": "2021-02-13 18:51:05.376095", "score": "0.7188", "loss": "0.806", "code": "int compareTo(Object o){if(o= null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 42, "n_pass": [319, 39, 29]}
{"time": "2021-02-13 18:51:06.693686", "score": "0.7188", "loss": "0.806", "code": "int compareTo(Object o){if(o=null) (\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 41, "n_pass": [321, 40, 30]}
{"time": "2021-02-13 18:51:07.998594", "score": "0.7188", "loss": "0.806", "code": "int compareTo(Object o){if(o=null)(\"SignupAttendee\");if (displayName)(other);if(0)return 0; }", "n_tokens": 40, "n_pass": [324, 41, 31]}
{"time": "2021-02-13 18:51:11.024423", "score": "0.7188", "loss": "0.806", "code": "int compareTo(Object o){if(o=null)(\"SignupAttendee\");if(displayName)(other);if(0)return 0; }", "n_tokens": 39, "n_pass": [332, 43, 32]}
{"time": "2021-02-13 18:51:15.745046", "score": "0.7521", "loss": "0.7032", "code": "int compareTo(Object o){if(onull)(\"SignupAttendee\");if(displayName)(other);if(0)return 0; }", "n_tokens": 38, "n_pass": [360, 46, 33]}
{"time": "2021-02-13 18:51:17.043981", "score": "0.7527", "loss": "0.6734", "code": "int compareTo(Object o){if(o)(\"SignupAttendee\");if(displayName)(other);if(0)return 0; }", "n_tokens": 37, "n_pass": [361, 47, 34]}
{"time": "2021-02-13 18:51:25.699854", "score": "0.7527", "loss": "0.6734", "code": "int compareTo(Object o){if(o)(\"SignupAttendee\");if(displayName)(other);if(0)return 0;}", "n_tokens": 36, "n_pass": [403, 52, 35]}

Minimal simplified code:
int compareTo(Object o){if(o)("SignupAttendee");if(displayName)(other);if(0)return 0;}

