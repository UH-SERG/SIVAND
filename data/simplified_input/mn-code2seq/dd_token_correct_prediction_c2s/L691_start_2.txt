
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/group/GroupChannel_start.java
method_name = start
method_body = @Override public synchronized void start(int svc) throws ChannelException { setupDefaultStack(); if (optionCheck) checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }
predict, score, loss = start, 0.9996616840362549, 0.001119411550462246

Trace of simplified code(s):
{"time": "2021-02-13 20:19:35.223984", "score": "0.9997", "loss": "0.0011", "code": "@Override public synchronized void start(int svc) throws ChannelException { setupDefaultStack(); if (optionCheck) checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 89, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:19:37.907722", "score": "0.9997", "loss": "0.0014", "code": "@Override public synchronized void start(int svc) throws ChannelException { checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread = new HeartbeatThread(this, heartbeatSleeptime); hbthread.start(); } }", "n_tokens": 78, "n_pass": [22, 3, 2]}
{"time": "2021-02-13 20:19:39.236905", "score": "0.9995", "loss": "0.0014", "code": "@Override public synchronized void start(int svc) throws ChannelException { checkOptionFlags(); super.start(svc); if (hbthread == null && heartbeat) { hbthread ; hbthread.start(); } }", "n_tokens": 67, "n_pass": [25, 4, 3]}
{"time": "2021-02-13 20:19:40.559545", "score": "0.5925", "loss": "1.5355", "code": "@Override public synchronized void start(int svc) throws ChannelException { ; if (hbthread == null && heartbeat) { hbthread ; hbthread.start(); } }", "n_tokens": 56, "n_pass": [29, 5, 4]}
{"time": "2021-02-13 20:19:41.884373", "score": "0.7872", "loss": "1.266", "code": "synchronized void start(int svc) throws ChannelException { ; if (hbthread == null && heartbeat) { hbthread ; hbthread.start(); } }", "n_tokens": 51, "n_pass": [51, 6, 5]}
{"time": "2021-02-13 20:19:43.200537", "score": "0.7274", "loss": "1.3672", "code": "synchronized void start(int svc){ ; if (hbthread == null && heartbeat) { hbthread ; hbthread.start(); } }", "n_tokens": 46, "n_pass": [54, 7, 6]}
{"time": "2021-02-13 20:19:44.524186", "score": "0.6846", "loss": "1.4375", "code": "synchronized void start(int svc){ ; if (hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 43, "n_pass": [86, 8, 7]}
{"time": "2021-02-13 20:19:45.841419", "score": "0.6846", "loss": "1.4375", "code": "void start(int svc){ ; if (hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 41, "n_pass": [91, 9, 8]}
{"time": "2021-02-13 20:19:50.601810", "score": "0.6846", "loss": "1.4375", "code": "void start(int svc){; if (hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 40, "n_pass": [143, 10, 9]}
{"time": "2021-02-13 20:19:51.933239", "score": "0.6846", "loss": "1.4375", "code": "void start(int svc){ if (hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 39, "n_pass": [144, 11, 10]}
{"time": "2021-02-13 20:19:53.247915", "score": "0.6846", "loss": "1.4375", "code": "void start(int svc){if (hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 38, "n_pass": [145, 12, 11]}
{"time": "2021-02-13 20:19:54.556139", "score": "0.6846", "loss": "1.4375", "code": "void start(int svc){if(hbthread == null && heartbeat) {; hbthread.start(); } }", "n_tokens": 37, "n_pass": [147, 13, 12]}
{"time": "2021-02-13 20:19:55.864528", "score": "0.6661", "loss": "1.6827", "code": "void start(int svc){if(hbthread == null& heartbeat) {; hbthread.start(); } }", "n_tokens": 35, "n_pass": [152, 14, 13]}
{"time": "2021-02-13 20:19:57.178628", "score": "0.5962", "loss": "1.7428", "code": "void start(int svc){if(hbthread == nullheartbeat) {; hbthread.start(); } }", "n_tokens": 33, "n_pass": [153, 15, 14]}
{"time": "2021-02-13 20:19:58.497291", "score": "0.5962", "loss": "1.7428", "code": "void start(int svc){if(hbthread == nullheartbeat) {hbthread.start(); } }", "n_tokens": 31, "n_pass": [156, 16, 15]}
{"time": "2021-02-13 20:19:59.788556", "score": "0.6412", "loss": "1.5723", "code": "void start(int svc){if(hbthread == nullheartbeat) {start(); } }", "n_tokens": 29, "n_pass": [157, 17, 16]}
{"time": "2021-02-13 20:20:01.832243", "score": "0.3766", "loss": "2.5213", "code": "void start(int svc){if(hbthread ==heartbeat) {start(); } }", "n_tokens": 27, "n_pass": [175, 18, 17]}
{"time": "2021-02-13 20:20:05.507998", "score": "0.3766", "loss": "2.5213", "code": "void start(int svc){if(hbthread ==heartbeat) {start();} }", "n_tokens": 26, "n_pass": [216, 19, 18]}
{"time": "2021-02-13 20:20:06.798743", "score": "0.3766", "loss": "2.5213", "code": "void start(int svc){if(hbthread ==heartbeat) {start();}}", "n_tokens": 25, "n_pass": [217, 20, 19]}
{"time": "2021-02-13 20:20:08.841555", "score": "0.3766", "loss": "2.5213", "code": "void start(int svc){if(hbthread==heartbeat) {start();}}", "n_tokens": 24, "n_pass": [231, 21, 20]}
{"time": "2021-02-13 20:20:12.724360", "score": "0.3766", "loss": "2.5213", "code": "void start(int svc){if(hbthread==heartbeat){start();}}", "n_tokens": 23, "n_pass": [236, 24, 21]}

Minimal simplified code:
void start(int svc){if(hbthread==heartbeat){start();}}

