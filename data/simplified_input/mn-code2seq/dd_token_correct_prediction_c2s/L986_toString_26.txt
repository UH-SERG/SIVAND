
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-util/jrcs/src/completejava/org/apache/commons/jrcs/diff/myers/PathNode_toString.java
method_name = toString
method_body = public String toString() { StringBuffer buf = new StringBuffer("["); PathNode node = this; while (node != null) { buf.append("("); buf.append(Integer.toString(node.i)); buf.append(","); buf.append(Integer.toString(node.j)); buf.append(")"); node = node.prev; } buf.append("]"); return buf.toString(); }
predict, score, loss = toString, 0.9847162961959839, 0.05526473745703697

Trace of simplified code(s):
{"time": "2021-02-14 03:11:54.800932", "score": "0.9871", "loss": "0.0468", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node != null) { buf.append(\"(\"); buf.append(Integer.toString(node.i)); buf.append(\",\"); buf.append(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf.append(\"]\"); return buf.toString(); }", "n_tokens": 139, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 03:11:56.638155", "score": "0.9681", "loss": "0.109", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node != null) { bufbuf.append(Integer.toString(node.i)); buf.append(\",\"); buf.append(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf.append(\"]\"); return buf.toString(); }", "n_tokens": 130, "n_pass": [50, 2, 2]}
{"time": "2021-02-14 03:11:58.043151", "score": "0.963", "loss": "0.122", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node != null) { bufbuf.append(Integer.toString(node.i)); buf.appendappend(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf.append(\"]\"); return buf.toString(); }", "n_tokens": 121, "n_pass": [53, 3, 3]}
{"time": "2021-02-14 03:11:59.426303", "score": "0.922", "loss": "0.3366", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node != null) { bufbuf.append(Integer.toString(node.i)); buf.appendappend(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf. buf.toString(); }", "n_tokens": 112, "n_pass": [58, 4, 4]}
{"time": "2021-02-14 03:12:01.170671", "score": "0.8904", "loss": "0.4808", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node != null) { bufbuf.append(Integer.toString(node.i)); buf.appendappend(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf(); }", "n_tokens": 107, "n_pass": [98, 5, 5]}
{"time": "2021-02-14 03:12:02.936434", "score": "0.9175", "loss": "0.3411", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { bufbuf.append(Integer.toString(node.i)); buf.appendappend(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf(); }", "n_tokens": 103, "n_pass": [110, 6, 6]}
{"time": "2021-02-14 03:12:04.293010", "score": "0.9567", "loss": "0.1939", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); buf.appendappend(Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf(); }", "n_tokens": 99, "n_pass": [112, 7, 7]}
{"time": "2021-02-14 03:12:05.680530", "score": "0.9741", "loss": "0.1087", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString(node.j)); buf.append(\")\"); node = node.prev; } buf(); }", "n_tokens": 95, "n_pass": [116, 8, 8]}
{"time": "2021-02-14 03:12:07.052602", "score": "0.9713", "loss": "0.1257", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\"); node = node.prev; } buf(); }", "n_tokens": 90, "n_pass": [118, 9, 9]}
{"time": "2021-02-14 03:12:08.402767", "score": "0.9779", "loss": "0.0859", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\"); node ; } buf(); }", "n_tokens": 85, "n_pass": [122, 10, 10]}
{"time": "2021-02-14 03:12:10.842928", "score": "0.9765", "loss": "0.1011", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } buf(); }", "n_tokens": 82, "n_pass": [183, 11, 11]}
{"time": "2021-02-14 03:12:12.219298", "score": "0.9703", "loss": "0.1191", "code": "public String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 79, "n_pass": [185, 12, 12]}
{"time": "2021-02-14 03:12:13.612485", "score": "0.9703", "loss": "0.1191", "code": "String toString() { StringBuffer buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 77, "n_pass": [187, 13, 13]}
{"time": "2021-02-14 03:12:15.358490", "score": "0.9677", "loss": "0.1222", "code": "String toString() { buf = new StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 75, "n_pass": [192, 14, 14]}
{"time": "2021-02-14 03:12:16.711332", "score": "0.978", "loss": "0.0873", "code": "String toString() { buf = StringBuffer(\"[\"); PathNode node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 73, "n_pass": [195, 15, 15]}
{"time": "2021-02-14 03:12:18.084391", "score": "0.9721", "loss": "0.1216", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer.toString(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 71, "n_pass": [200, 16, 16]}
{"time": "2021-02-14 03:12:19.464833", "score": "0.9643", "loss": "0.1734", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node.i)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 69, "n_pass": [210, 17, 17]}
{"time": "2021-02-14 03:12:20.819979", "score": "0.9666", "loss": "0.1607", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer.toString); buf.append(\")\");  } ; }", "n_tokens": 67, "n_pass": [212, 18, 18]}
{"time": "2021-02-14 03:12:22.175794", "score": "0.955", "loss": "0.1984", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer); buf.append(\")\");  } ; }", "n_tokens": 65, "n_pass": [216, 19, 19]}
{"time": "2021-02-14 03:12:23.523211", "score": "0.8952", "loss": "0.4932", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer); buf(\")\");  } ; }", "n_tokens": 63, "n_pass": [219, 20, 20]}
{"time": "2021-02-14 03:12:25.249012", "score": "0.9245", "loss": "0.3621", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\")\");  } ; }", "n_tokens": 61, "n_pass": [249, 21, 21]}
{"time": "2021-02-14 03:12:34.077963", "score": "0.8986", "loss": "0.5179", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\");  } ; }", "n_tokens": 60, "n_pass": [339, 22, 22]}
{"time": "2021-02-14 03:12:35.395540", "score": "0.8986", "loss": "0.5179", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } ; }", "n_tokens": 59, "n_pass": [342, 23, 23]}
{"time": "2021-02-14 03:12:36.707888", "score": "0.8986", "loss": "0.5179", "code": "String toString() { buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 57, "n_pass": [344, 24, 24]}
{"time": "2021-02-14 03:12:39.113630", "score": "0.8986", "loss": "0.5179", "code": "String toString(){ buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 56, "n_pass": [351, 25, 25]}
{"time": "2021-02-14 03:12:40.426444", "score": "0.8986", "loss": "0.5179", "code": "String toString(){buf = StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 55, "n_pass": [353, 26, 26]}
{"time": "2021-02-14 03:12:41.769341", "score": "0.8986", "loss": "0.5179", "code": "String toString(){buf= StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 54, "n_pass": [355, 27, 27]}
{"time": "2021-02-14 03:12:43.118745", "score": "0.8986", "loss": "0.5179", "code": "String toString(){buf=StringBuffer(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 53, "n_pass": [357, 28, 28]}
{"time": "2021-02-14 03:12:44.478347", "score": "0.9042", "loss": "0.5003", "code": "String toString(){buf=(\"[\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 52, "n_pass": [358, 29, 29]}
{"time": "2021-02-14 03:12:45.842059", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\"); node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 51, "n_pass": [361, 30, 30]}
{"time": "2021-02-14 03:12:47.174739", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node = this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 50, "n_pass": [365, 31, 31]}
{"time": "2021-02-14 03:12:48.525928", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node= this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 49, "n_pass": [367, 32, 32]}
{"time": "2021-02-14 03:12:49.873133", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this; while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 48, "n_pass": [369, 33, 33]}
{"time": "2021-02-14 03:12:51.222984", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this;while (node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 47, "n_pass": [372, 34, 34]}
{"time": "2021-02-14 03:12:52.561684", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this;while(node ) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 46, "n_pass": [374, 35, 35]}
{"time": "2021-02-14 03:12:53.883176", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this;while(node) { (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 45, "n_pass": [377, 36, 36]}
{"time": "2021-02-14 03:12:55.207223", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this;while(node){ (Integer(node)); (Integer);(\"\"); } }", "n_tokens": 44, "n_pass": [379, 37, 37]}
{"time": "2021-02-14 03:12:56.566890", "score": "0.9032", "loss": "0.508", "code": "String toString(){buf=(\"\");node=this;while(node){(Integer(node)); (Integer);(\"\"); } }", "n_tokens": 43, "n_pass": [381, 38, 38]}
{"time": "2021-02-14 03:12:57.969210", "score": "0.9213", "loss": "0.3564", "code": "String toString(){buf=(\"\");node=this;while(node){((node)); (Integer);(\"\"); } }", "n_tokens": 42, "n_pass": [383, 39, 39]}
{"time": "2021-02-14 03:12:59.307547", "score": "0.9213", "loss": "0.3564", "code": "String toString(){buf=(\"\");node=this;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 41, "n_pass": [389, 40, 40]}
{"time": "2021-02-14 03:13:02.134879", "score": "0.9651", "loss": "0.1676", "code": "String toString(){buf(\"\");node=this;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 40, "n_pass": [408, 41, 41]}
{"time": "2021-02-14 03:13:03.488747", "score": "0.8637", "loss": "0.5396", "code": "String toString(){buf(\"\");nodethis;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 39, "n_pass": [415, 42, 42]}
{"time": "2021-02-14 03:13:04.836147", "score": "0.9382", "loss": "0.2238", "code": "String toString(){buf(\"\");node;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 38, "n_pass": [416, 43, 43]}
{"time": "2021-02-14 03:13:07.675291", "score": "0.8623", "loss": "0.4387", "code": "String toString(){(\"\");node;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 37, "n_pass": [446, 44, 44]}
{"time": "2021-02-14 03:13:09.022527", "score": "0.7986", "loss": "0.6449", "code": "String toString(){(\"\");;while(node){((node));(Integer);(\"\"); } }", "n_tokens": 36, "n_pass": [452, 45, 45]}
{"time": "2021-02-14 03:13:10.373358", "score": "0.7986", "loss": "0.6449", "code": "String toString(){(\"\");while(node){((node));(Integer);(\"\"); } }", "n_tokens": 35, "n_pass": [453, 46, 46]}
{"time": "2021-02-14 03:13:13.859024", "score": "0.7986", "loss": "0.6449", "code": "String toString(){(\"\");while(node){((node));(Integer);(\"\");} }", "n_tokens": 34, "n_pass": [491, 47, 47]}
{"time": "2021-02-14 03:13:15.190703", "score": "0.7986", "loss": "0.6449", "code": "String toString(){(\"\");while(node){((node));(Integer);(\"\");}}", "n_tokens": 33, "n_pass": [492, 48, 48]}

Minimal simplified code:
String toString(){("");while(node){((node));(Integer);("");}}

