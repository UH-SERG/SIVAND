
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/baksmali/Adaptors/CatchMethodItem_writeTo.java
method_name = writeTo
method_body = @Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer.write(".catchall"); } else { writer.write(".catch "); writer.write(exceptionType); } writer.write(" {"); tryStartLabel.writeTo(writer); writer.write(" .. "); tryEndLabel.writeTo(writer); writer.write("} "); handlerLabel.writeTo(writer); return true; }
predict, score, loss = writeTo, 0.990034818649292, 0.027978021651506424

Trace of simplified code(s):
{"time": "2021-02-13 23:27:17.429694", "score": "0.98", "loss": "0.0537", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer.write(\".catchall\"); } else { writer.write(\".catch \"); writer.write(exceptionType); } writer.write(\" {\"); tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:27:18.807925", "score": "0.9827", "loss": "0.0474", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.write(\" {\"); tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 103, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 23:27:20.534029", "score": "0.9838", "loss": "0.043", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \"); tryEndLabel.writeTo(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 94, "n_pass": [37, 3, 3]}
{"time": "2021-02-13 23:27:21.932538", "score": "0.9684", "loss": "0.0856", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");(writer); writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 90, "n_pass": [76, 4, 4]}
{"time": "2021-02-13 23:27:23.326063", "score": "0.9724", "loss": "0.0748", "code": "@Override public boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 85, "n_pass": [77, 5, 5]}
{"time": "2021-02-13 23:27:24.680105", "score": "0.9409", "loss": "0.2437", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionType == null) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 81, "n_pass": [83, 6, 6]}
{"time": "2021-02-13 23:27:26.031662", "score": "0.9635", "loss": "0.1193", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) { writer; } writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 77, "n_pass": [89, 7, 7]}
{"time": "2021-02-13 23:27:27.351696", "score": "0.9667", "loss": "0.1173", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writer.tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 73, "n_pass": [91, 8, 8]}
{"time": "2021-02-13 23:27:29.082082", "score": "0.9619", "loss": "0.1405", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} tryStartLabel.writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 71, "n_pass": [144, 9, 9]}
{"time": "2021-02-13 23:27:30.409857", "score": "0.9733", "loss": "0.0773", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); writer.write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 69, "n_pass": [145, 10, 10]}
{"time": "2021-02-13 23:27:31.737670", "score": "0.9782", "loss": "0.0702", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\" .. \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 67, "n_pass": [149, 11, 11]}
{"time": "2021-02-13 23:27:33.105369", "score": "0.9778", "loss": "0.0653", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");writer.write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 65, "n_pass": [152, 12, 12]}
{"time": "2021-02-13 23:27:34.458476", "score": "0.9695", "loss": "0.0972", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \"); handlerLabel.writeTo(writer); return true; }", "n_tokens": 63, "n_pass": [155, 13, 13]}
{"time": "2021-02-13 23:27:35.798425", "score": "0.9402", "loss": "0.1719", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); return true; }", "n_tokens": 60, "n_pass": [160, 14, 14]}
{"time": "2021-02-13 23:27:37.161597", "score": "0.7697", "loss": "0.7845", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); ; }", "n_tokens": 57, "n_pass": [163, 15, 15]}
{"time": "2021-02-13 23:27:44.967080", "score": "0.7697", "loss": "0.7845", "code": " boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 55, "n_pass": [245, 16, 16]}
{"time": "2021-02-13 23:27:46.291626", "score": "0.7697", "loss": "0.7845", "code": "boolean writeTo(IndentingWriter writer) throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 54, "n_pass": [247, 17, 17]}
{"time": "2021-02-13 23:27:48.347984", "score": "0.7697", "loss": "0.7845", "code": "boolean writeTo(IndentingWriter writer)throws IOException { if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 53, "n_pass": [256, 18, 18]}
{"time": "2021-02-13 23:27:49.657167", "score": "0.7697", "loss": "0.7845", "code": "boolean writeTo(IndentingWriter writer)throws IOException{ if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 52, "n_pass": [260, 19, 19]}
{"time": "2021-02-13 23:27:50.993137", "score": "0.7697", "loss": "0.7845", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if (exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 51, "n_pass": [262, 20, 20]}
{"time": "2021-02-13 23:27:52.378258", "score": "0.7697", "loss": "0.7845", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(exceptionTypenull) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 50, "n_pass": [264, 21, 21]}
{"time": "2021-02-13 23:27:53.689598", "score": "0.7787", "loss": "0.805", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null) {} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 49, "n_pass": [266, 22, 22]}
{"time": "2021-02-13 23:27:55.029980", "score": "0.7787", "loss": "0.805", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){} writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 48, "n_pass": [269, 23, 23]}
{"time": "2021-02-13 23:27:56.377461", "score": "0.7787", "loss": "0.805", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}writeTo(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 47, "n_pass": [272, 24, 24]}
{"time": "2021-02-13 23:27:57.718367", "score": "0.7441", "loss": "0.9173", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer); write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 46, "n_pass": [273, 25, 25]}
{"time": "2021-02-13 23:27:59.421112", "score": "0.7441", "loss": "0.9173", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);write(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 45, "n_pass": [278, 26, 26]}
{"time": "2021-02-13 23:28:00.735095", "score": "0.7527", "loss": "0.9211", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"  \");write(\"} \");writeTo(writer); }", "n_tokens": 44, "n_pass": [279, 27, 27]}
{"time": "2021-02-13 23:28:02.048226", "score": "0.7669", "loss": "0.9518", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\" \");write(\"} \");writeTo(writer); }", "n_tokens": 43, "n_pass": [282, 28, 28]}
{"time": "2021-02-13 23:28:03.398653", "score": "0.8004", "loss": "0.7389", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");write(\"} \");writeTo(writer); }", "n_tokens": 42, "n_pass": [283, 29, 29]}
{"time": "2021-02-13 23:28:04.741392", "score": "0.792", "loss": "0.8931", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");(\"} \");writeTo(writer); }", "n_tokens": 41, "n_pass": [287, 30, 30]}
{"time": "2021-02-13 23:28:06.074380", "score": "0.7344", "loss": "1.2612", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");(\" \");writeTo(writer); }", "n_tokens": 40, "n_pass": [290, 31, 31]}
{"time": "2021-02-13 23:28:07.411927", "score": "0.7951", "loss": "1.0019", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");(\"\");writeTo(writer); }", "n_tokens": 39, "n_pass": [291, 32, 32]}
{"time": "2021-02-13 23:28:10.050604", "score": "0.6049", "loss": "2.0453", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");(\"\");writeTo(); }", "n_tokens": 38, "n_pass": [297, 34, 33]}
{"time": "2021-02-13 23:28:13.106695", "score": "0.6049", "loss": "2.0453", "code": "boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);(\"\");(\"\");writeTo();}", "n_tokens": 37, "n_pass": [339, 35, 34]}

Minimal simplified code:
boolean writeTo(IndentingWriter writer)throws IOException{if(null){}(writer);("");("");writeTo();}

