
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeasonWong__BezierLoadingView/LoadingiVew/src/main/java/me/wangyuwei/loadingview/LoadingView_onSizeChanged.java
method_name = onSizeChanged
method_body = @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); mWidth = w; mHeight = h; setShader(); resetPoint(); }
predict, score, loss = onSizeChanged, 0.9999698996543884, 0.00013231835328042507

Trace of simplified code(s):
{"time": "2021-02-13 17:55:14.862898", "score": "1.0", "loss": "0.0001", "code": "@Override protected void onSizeChanged(int w, int h, int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); mWidth = w; mHeight = h; setShader(); resetPoint(); }", "n_tokens": 73, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:55:16.229666", "score": "1.0", "loss": "0.0002", "code": "@Override protected void onSizeChanged( int oldw, int oldh) { super.onSizeChanged(w, h, oldw, oldh); mWidth = w; mHeight = h; setShader(); resetPoint(); }", "n_tokens": 64, "n_pass": [21, 2, 2]}
{"time": "2021-02-13 17:55:17.545062", "score": "0.9927", "loss": "0.0239", "code": "@Override protected void onSizeChanged() { super.onSizeChanged(w, h, oldw, oldh); mWidth = w; mHeight = h; setShader(); resetPoint(); }", "n_tokens": 55, "n_pass": [22, 3, 3]}
{"time": "2021-02-13 17:55:18.858615", "score": "0.993", "loss": "0.0234", "code": "@Override protected void onSizeChanged() { super.onSizeChanged(w); mWidth = w; mHeight = h; setShader(); resetPoint(); }", "n_tokens": 46, "n_pass": [24, 4, 4]}
{"time": "2021-02-13 17:55:21.493667", "score": "0.982", "loss": "0.06", "code": "@Override protected void onSizeChanged() { super.onSizeChanged(w); ; mHeight = h; setShader(); resetPoint(); }", "n_tokens": 41, "n_pass": [41, 6, 5]}
{"time": "2021-02-13 17:55:22.788609", "score": "0.987", "loss": "0.0436", "code": "@Override protected void onSizeChanged() { super.onSizeChanged(w);  h; setShader(); resetPoint(); }", "n_tokens": 36, "n_pass": [42, 7, 6]}
{"time": "2021-02-13 17:55:24.088211", "score": "0.9857", "loss": "0.0475", "code": "@Override protected void onSizeChanged() { super.onSizeChanged(w);  h; setShader(); }", "n_tokens": 31, "n_pass": [44, 8, 7]}
{"time": "2021-02-13 17:55:25.367373", "score": "0.8974", "loss": "0.4159", "code": " void onSizeChanged() { super.onSizeChanged(w);  h; setShader(); }", "n_tokens": 27, "n_pass": [46, 9, 8]}
{"time": "2021-02-13 17:55:28.960523", "score": "0.8974", "loss": "0.4159", "code": " void onSizeChanged() { super.onSizeChanged(w);h; setShader(); }", "n_tokens": 25, "n_pass": [73, 11, 9]}
{"time": "2021-02-13 17:55:30.245425", "score": "0.8068", "loss": "0.971", "code": " void onSizeChanged() { super.onSizeChanged(w);setShader(); }", "n_tokens": 22, "n_pass": [74, 12, 10]}
{"time": "2021-02-13 17:55:31.524812", "score": "0.7735", "loss": "1.6304", "code": " void onSizeChanged() { super.onSizeChanged(w);; }", "n_tokens": 19, "n_pass": [75, 13, 11]}
{"time": "2021-02-13 17:55:35.496075", "score": "0.7735", "loss": "1.6304", "code": " void onSizeChanged() { super.onSizeChanged(w); }", "n_tokens": 18, "n_pass": [103, 14, 12]}
{"time": "2021-02-13 17:55:36.821175", "score": "0.7735", "loss": "1.6304", "code": "void onSizeChanged() { super.onSizeChanged(w); }", "n_tokens": 17, "n_pass": [104, 15, 13]}
{"time": "2021-02-13 17:55:38.802810", "score": "0.7735", "loss": "1.6304", "code": "void onSizeChanged(){ super.onSizeChanged(w); }", "n_tokens": 16, "n_pass": [110, 16, 14]}
{"time": "2021-02-13 17:55:40.079576", "score": "0.7735", "loss": "1.6304", "code": "void onSizeChanged(){super.onSizeChanged(w); }", "n_tokens": 15, "n_pass": [112, 17, 15]}
{"time": "2021-02-13 17:55:42.629337", "score": "0.8498", "loss": "0.7789", "code": "void onSizeChanged(){super.onSizeChanged(); }", "n_tokens": 14, "n_pass": [117, 19, 16]}
{"time": "2021-02-13 17:55:46.255132", "score": "0.8498", "loss": "0.7789", "code": "void onSizeChanged(){super.onSizeChanged();}", "n_tokens": 13, "n_pass": [133, 21, 17]}

Minimal simplified code:
void onSizeChanged(){super.onSizeChanged();}

