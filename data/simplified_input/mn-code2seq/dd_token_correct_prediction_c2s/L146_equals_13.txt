
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/ecgost12/BCECGOST3410_2012PublicKey_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST3410_2012PublicKey other = (BCECGOST3410_2012PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQ()) && (engineGetSpec().equals(other.engineGetSpec())); }
predict, score, loss = equals, 0.9878209233283997, 0.017493750900030136

Trace of simplified code(s):
{"time": "2021-02-13 06:13:02.979753", "score": "0.9878", "loss": "0.0175", "code": "public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST3410_2012PublicKey other = (BCECGOST3410_2012PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQ()) && (engineGetSpec().equals(other.engineGetSpec())); }", "n_tokens": 117, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 06:13:04.362151", "score": "0.9892", "loss": "0.0159", "code": "public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST3410_2012PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQ()) && (engineGetSpec().equals(other.engineGetSpec())); }", "n_tokens": 110, "n_pass": [51, 2, 2]}
{"time": "2021-02-13 06:13:05.727437", "score": "0.9892", "loss": "0.0159", "code": "public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQ()) && (engineGetSpec().equals(other.engineGetSpec())); }", "n_tokens": 103, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 06:13:07.066858", "score": "0.9801", "loss": "0.0303", "code": "public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQengineGetSpec().equals(other.engineGetSpec())); }", "n_tokens": 95, "n_pass": [57, 4, 4]}
{"time": "2021-02-13 06:13:08.421933", "score": "0.9694", "loss": "0.0469", "code": "public boolean equals(Object o) { if (!(o instanceof BCECGOST3410_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 91, "n_pass": [97, 5, 5]}
{"time": "2021-02-13 06:13:11.458605", "score": "0.9394", "loss": "0.0968", "code": "public boolean equals(Object o) { if (!( BCECGOST3410_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 88, "n_pass": [106, 7, 6]}
{"time": "2021-02-13 06:13:12.791104", "score": "0.9394", "loss": "0.0968", "code": "public boolean equals(Object o) { if (!( BCECGOST3_2012PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 85, "n_pass": [108, 8, 7]}
{"time": "2021-02-13 06:13:14.118335", "score": "0.9394", "loss": "0.0968", "code": "public boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST341 other = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 81, "n_pass": [109, 9, 8]}
{"time": "2021-02-13 06:13:15.476543", "score": "0.8313", "loss": "0.3273", "code": "public boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.getQ().equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 77, "n_pass": [114, 10, 9]}
{"time": "2021-02-13 06:13:16.833649", "score": "0.772", "loss": "0.5104", "code": "public boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(other.ecPublicKey.getQequals(other.engineGetSpec())); }", "n_tokens": 73, "n_pass": [119, 11, 10]}
{"time": "2021-02-13 06:13:18.160162", "score": "0.6864", "loss": "0.8123", "code": "public boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(other.engineGetSpec())); }", "n_tokens": 69, "n_pass": [121, 12, 11]}
{"time": "2021-02-13 06:13:22.174694", "score": "0.5141", "loss": "1.1954", "code": "public boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 67, "n_pass": [180, 14, 12]}
{"time": "2021-02-13 06:13:23.485738", "score": "0.5141", "loss": "1.1954", "code": " boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 66, "n_pass": [185, 15, 13]}
{"time": "2021-02-13 06:13:24.823523", "score": "0.5141", "loss": "1.1954", "code": "boolean equals(Object o) { if (!( BCECGOST32PublicKey)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 65, "n_pass": [186, 16, 14]}
{"time": "2021-02-13 06:13:26.857469", "score": "0.5734", "loss": "0.9935", "code": "boolean equals(Object o) { if (!( BCECGOST3)) { return false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 63, "n_pass": [199, 17, 15]}
{"time": "2021-02-13 06:13:28.187564", "score": "0.4982", "loss": "1.167", "code": "boolean equals(Object o) { if (!( BCECGOST3)) { false; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 61, "n_pass": [202, 18, 16]}
{"time": "2021-02-13 06:13:29.501813", "score": "0.4525", "loss": "1.362", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {; } BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 59, "n_pass": [203, 19, 17]}
{"time": "2021-02-13 06:13:30.836061", "score": "0.4525", "loss": "1.362", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST12PublicKey) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 57, "n_pass": [204, 20, 18]}
{"time": "2021-02-13 06:13:32.252041", "score": "0.3904", "loss": "1.4823", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1) o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 55, "n_pass": [210, 21, 19]}
{"time": "2021-02-13 06:13:41.982685", "score": "0.3904", "loss": "1.4823", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1)o; return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 54, "n_pass": [291, 24, 20]}
{"time": "2021-02-13 06:13:43.315693", "score": "0.3548", "loss": "1.6585", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1); return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 53, "n_pass": [292, 25, 21]}
{"time": "2021-02-13 06:13:44.630063", "score": "0.3548", "loss": "1.6585", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals(otherequals(engineGetSpec())); }", "n_tokens": 52, "n_pass": [294, 26, 22]}
{"time": "2021-02-13 06:13:49.867851", "score": "0.7955", "loss": "0.3764", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals(equals(engineGetSpec())); }", "n_tokens": 51, "n_pass": [301, 30, 23]}
{"time": "2021-02-13 06:13:51.209373", "score": "0.6049", "loss": "0.8947", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec())); }", "n_tokens": 50, "n_pass": [302, 31, 24]}
{"time": "2021-02-13 06:13:52.529150", "score": "0.6049", "loss": "0.8947", "code": "boolean equals(Object o) { if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 49, "n_pass": [310, 32, 25]}
{"time": "2021-02-13 06:13:54.556120", "score": "0.6049", "loss": "0.8947", "code": "boolean equals(Object o){ if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 48, "n_pass": [320, 33, 26]}
{"time": "2021-02-13 06:13:55.859688", "score": "0.6049", "loss": "0.8947", "code": "boolean equals(Object o){if (!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 47, "n_pass": [322, 34, 27]}
{"time": "2021-02-13 06:13:57.162958", "score": "0.6049", "loss": "0.8947", "code": "boolean equals(Object o){if(!( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 46, "n_pass": [324, 35, 28]}
{"time": "2021-02-13 06:13:58.464718", "score": "0.6071", "loss": "0.9334", "code": "boolean equals(Object o){if(( BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 45, "n_pass": [326, 36, 29]}
{"time": "2021-02-13 06:13:59.767845", "score": "0.6071", "loss": "0.9334", "code": "boolean equals(Object o){if((BCECGOST3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 44, "n_pass": [328, 37, 30]}
{"time": "2021-02-13 06:14:01.080013", "score": "0.5782", "loss": "0.9417", "code": "boolean equals(Object o){if((3)) {} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 43, "n_pass": [329, 38, 31]}
{"time": "2021-02-13 06:14:02.425470", "score": "0.5782", "loss": "0.9417", "code": "boolean equals(Object o){if((3)){} BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 42, "n_pass": [333, 39, 32]}
{"time": "2021-02-13 06:14:03.743306", "score": "0.5782", "loss": "0.9417", "code": "boolean equals(Object o){if((3)){}BCECGOST3 = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 41, "n_pass": [336, 40, 33]}
{"time": "2021-02-13 06:14:05.413159", "score": "0.5782", "loss": "0.9417", "code": "boolean equals(Object o){if((3)){}BCECGOST = (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 40, "n_pass": [338, 41, 34]}
{"time": "2021-02-13 06:14:06.722462", "score": "0.5782", "loss": "0.9417", "code": "boolean equals(Object o){if((3)){}BCECGOST= (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 39, "n_pass": [339, 42, 35]}
{"time": "2021-02-13 06:14:08.043136", "score": "0.7173", "loss": "0.8197", "code": "boolean equals(Object o){if((3)){}BCECGOST (BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 38, "n_pass": [340, 43, 36]}
{"time": "2021-02-13 06:14:09.344028", "score": "0.7173", "loss": "0.8197", "code": "boolean equals(Object o){if((3)){}BCECGOST(BCECGOST1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 37, "n_pass": [341, 44, 37]}
{"time": "2021-02-13 06:14:10.651914", "score": "0.5462", "loss": "1.0703", "code": "boolean equals(Object o){if((3)){}BCECGOST(1);return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 36, "n_pass": [343, 45, 38]}
{"time": "2021-02-13 06:14:11.983260", "score": "0.8452", "loss": "0.3597", "code": "boolean equals(Object o){if((3)){}BCECGOST();return ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 35, "n_pass": [344, 46, 39]}
{"time": "2021-02-13 06:14:13.294780", "score": "0.634", "loss": "0.8177", "code": "boolean equals(Object o){if((3)){}BCECGOST(); ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 34, "n_pass": [347, 47, 40]}
{"time": "2021-02-13 06:14:14.601175", "score": "0.634", "loss": "0.8177", "code": "boolean equals(Object o){if((3)){}BCECGOST();ecPublicKey.equals((engineGetSpec()));}", "n_tokens": 33, "n_pass": [348, 48, 41]}

Minimal simplified code:
boolean equals(Object o){if((3)){}BCECGOST();ecPublicKey.equals((engineGetSpec()));}

