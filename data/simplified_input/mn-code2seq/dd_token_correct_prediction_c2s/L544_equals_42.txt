
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/com/sun/identity/entitlement/JwtPrincipal_equals.java
method_name = equals
method_body = @Override public boolean equals(final Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } final JwtPrincipal principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }
predict, score, loss = equals, 0.9825233817100525, 0.020891936495900154

Trace of simplified code(s):
{"time": "2021-02-13 17:42:54.180845", "score": "0.9825", "loss": "0.0209", "code": "@Override public boolean equals(final Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } final JwtPrincipal principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 110, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:42:55.524387", "score": "0.9527", "loss": "0.0565", "code": "@Override public boolean equals(final Object o) { if (this == o != o.getClass()) { return false; } final JwtPrincipal principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 83, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 17:42:56.854713", "score": "0.9419", "loss": "0.0709", "code": "@Override public boolean equals(final Object o) { if (this == o()) { return false; } final JwtPrincipal principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 76, "n_pass": [37, 3, 3]}
{"time": "2021-02-13 17:42:58.565096", "score": "0.8436", "loss": "0.1972", "code": "@Override public boolean equals(final Object o) { if (this == o()) { ; } final JwtPrincipal principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 73, "n_pass": [73, 4, 4]}
{"time": "2021-02-13 17:42:59.923698", "score": "0.791", "loss": "0.3158", "code": "@Override public boolean equals(final Object o) { if (this == o()) { ; } principal = (JwtPrincipal) o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 69, "n_pass": [75, 5, 5]}
{"time": "2021-02-13 17:43:01.638633", "score": "0.752", "loss": "0.4099", "code": "@Override public boolean equals(final Object o) { if (this == o()) { ; } principal = o; return jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 65, "n_pass": [77, 6, 6]}
{"time": "2021-02-13 17:43:02.968627", "score": "0.5568", "loss": "0.8029", "code": "@Override public boolean equals(final Object o) { if (this == o()) { ; } principal =  jwt.toString().equals(principal.jwt.toString()); }", "n_tokens": 61, "n_pass": [78, 7, 7]}
{"time": "2021-02-13 17:43:05.605034", "score": "0.8198", "loss": "0.2765", "code": "@Override public boolean equals(final Object o) { if (this == o()) { ; } principal =  jwt.toString().equals(principal.jwt); }", "n_tokens": 57, "n_pass": [82, 9, 8]}
{"time": "2021-02-13 17:43:06.926406", "score": "0.8071", "loss": "0.3282", "code": "public boolean equals(final Object o) { if (this == o()) { ; } principal =  jwt.toString().equals(principal.jwt); }", "n_tokens": 54, "n_pass": [84, 10, 9]}
{"time": "2021-02-13 17:43:08.613398", "score": "0.859", "loss": "0.2684", "code": "public boolean equals(final Object o) { if (this == o()) { ; }  jwt.toString().equals(principal.jwt); }", "n_tokens": 50, "n_pass": [96, 11, 10]}
{"time": "2021-02-13 17:43:09.919288", "score": "0.3225", "loss": "1.8248", "code": "public boolean equals(final Object o) { if (this == o()) { ; }  jwt.toString(principal.jwt); }", "n_tokens": 46, "n_pass": [98, 12, 11]}
{"time": "2021-02-13 17:43:11.590397", "score": "0.3991", "loss": "1.3765", "code": "public boolean equals(final Object o) { if (this == o()) { ; } (principal.jwt); }", "n_tokens": 42, "n_pass": [112, 13, 12]}
{"time": "2021-02-13 17:43:16.260022", "score": "0.3991", "loss": "1.3765", "code": " boolean equals(final Object o) { if (this == o()) { ; } (principal.jwt); }", "n_tokens": 41, "n_pass": [156, 15, 13]}
{"time": "2021-02-13 17:43:17.567490", "score": "0.3991", "loss": "1.3765", "code": "boolean equals(final Object o) { if (this == o()) { ; } (principal.jwt); }", "n_tokens": 40, "n_pass": [157, 16, 14]}
{"time": "2021-02-13 17:43:19.230682", "score": "0.3991", "loss": "1.3765", "code": "boolean equals( Object o) { if (this == o()) { ; } (principal.jwt); }", "n_tokens": 39, "n_pass": [161, 17, 15]}
{"time": "2021-02-13 17:43:20.534959", "score": "0.3991", "loss": "1.3765", "code": "boolean equals(Object o) { if (this == o()) { ; } (principal.jwt); }", "n_tokens": 38, "n_pass": [162, 18, 16]}
{"time": "2021-02-13 17:43:21.837429", "score": "0.4009", "loss": "1.3612", "code": "boolean equals(Object o) { if (this == o) { ; } (principal.jwt); }", "n_tokens": 36, "n_pass": [172, 19, 17]}
{"time": "2021-02-13 17:43:23.132596", "score": "0.4009", "loss": "1.3612", "code": "boolean equals(Object o) { if (this == o) { } (principal.jwt); }", "n_tokens": 34, "n_pass": [175, 20, 18]}
{"time": "2021-02-13 17:43:29.800456", "score": "0.4009", "loss": "1.3612", "code": "boolean equals(Object o) { if (this == o) { }(principal.jwt); }", "n_tokens": 33, "n_pass": [224, 22, 19]}
{"time": "2021-02-13 17:43:31.095374", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o) { if (this == o) { }(principaljwt); }", "n_tokens": 32, "n_pass": [227, 23, 20]}
{"time": "2021-02-13 17:43:33.681992", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o) { if (this == o) { }(principaljwt);}", "n_tokens": 31, "n_pass": [231, 25, 21]}
{"time": "2021-02-13 17:43:35.718053", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){ if (this == o) { }(principaljwt);}", "n_tokens": 30, "n_pass": [241, 26, 22]}
{"time": "2021-02-13 17:43:37.009607", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if (this == o) { }(principaljwt);}", "n_tokens": 29, "n_pass": [243, 27, 23]}
{"time": "2021-02-13 17:43:38.300462", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if(this == o) { }(principaljwt);}", "n_tokens": 28, "n_pass": [245, 28, 24]}
{"time": "2021-02-13 17:43:39.606114", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if(this== o) { }(principaljwt);}", "n_tokens": 27, "n_pass": [248, 29, 25]}
{"time": "2021-02-13 17:43:41.655015", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if(this==o) { }(principaljwt);}", "n_tokens": 26, "n_pass": [251, 30, 26]}
{"time": "2021-02-13 17:43:42.970971", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if(this==o){ }(principaljwt);}", "n_tokens": 25, "n_pass": [254, 31, 27]}
{"time": "2021-02-13 17:43:44.261689", "score": "0.3692", "loss": "1.5107", "code": "boolean equals(Object o){if(this==o){}(principaljwt);}", "n_tokens": 24, "n_pass": [256, 32, 28]}
{"time": "2021-02-13 17:43:45.554071", "score": "0.4826", "loss": "1.1035", "code": "boolean equals(Object o){if(this==o){}(jwt);}", "n_tokens": 23, "n_pass": [259, 33, 29]}

Minimal simplified code:
boolean equals(Object o){if(this==o){}(jwt);}

