
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__apex-core/engine/src/test/java/com/datatorrent/stram/support/StramTestSupport_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (this.windowId != other.windowId) { return false; } return true; }
predict, score, loss = equals, 0.9990230798721313, 0.0012215564493089914

Trace of simplified code(s):
{"time": "2021-02-13 23:46:59.323454", "score": "0.9992", "loss": "0.001", "code": "@Override public boolean equals(Object obj) { if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (this.windowId != other.windowId) { return false; } return true; }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:47:00.728640", "score": "0.9988", "loss": "0.0016", "code": "@Override public boolean equals(Object obj) { if (obj == null) { return false; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (this.windowId != other.windowId) { return false; } return true; }", "n_tokens": 123, "n_pass": [49, 2, 2]}
{"time": "2021-02-13 23:47:02.121151", "score": "0.996", "loss": "0.0052", "code": "@Override public boolean equals(Object obj) { if (obj == null) { return false; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (windowId) { return false; } return true; }", "n_tokens": 114, "n_pass": [57, 3, 3]}
{"time": "2021-02-13 23:47:03.514142", "score": "0.9963", "loss": "0.0048", "code": "@Override public boolean equals(Object obj) { if (obj == null) { return false; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (windowId) {; } return true; }", "n_tokens": 110, "n_pass": [101, 4, 4]}
{"time": "2021-02-13 23:47:06.253795", "score": "0.9941", "loss": "0.0079", "code": "@Override public boolean equals(Object obj) { if (objnull) { return false; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (windowId) {; } return true; }", "n_tokens": 106, "n_pass": [109, 6, 5]}
{"time": "2021-02-13 23:47:07.594128", "score": "0.9916", "loss": "0.0115", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId != other.operatorId) { return false; } if (windowId) {; } return true; }", "n_tokens": 102, "n_pass": [111, 7, 6]}
{"time": "2021-02-13 23:47:08.935663", "score": "0.8448", "loss": "0.2529", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId .operatorId) { return false; } if (windowId) {; } return true; }", "n_tokens": 98, "n_pass": [123, 8, 7]}
{"time": "2021-02-13 23:47:12.719101", "score": "0.9306", "loss": "0.1091", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) { return false; } if (windowId) {; } return true; }", "n_tokens": 96, "n_pass": [196, 10, 8]}
{"time": "2021-02-13 23:47:14.073560", "score": "0.8961", "loss": "0.1634", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) { false; } if (windowId) {; } return true; }", "n_tokens": 94, "n_pass": [198, 11, 9]}
{"time": "2021-02-13 23:47:15.439543", "score": "0.9075", "loss": "0.1488", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {; } return true; }", "n_tokens": 92, "n_pass": [199, 12, 10]}
{"time": "2021-02-13 23:47:16.795083", "score": "0.9075", "loss": "0.1488", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} return true; }", "n_tokens": 90, "n_pass": [205, 13, 11]}
{"time": "2021-02-13 23:47:18.156372", "score": "0.9553", "loss": "0.0748", "code": "@Override public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 87, "n_pass": [207, 14, 12]}
{"time": "2021-02-13 23:47:19.500783", "score": "0.9188", "loss": "0.1576", "code": " public boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 85, "n_pass": [209, 15, 13]}
{"time": "2021-02-13 23:47:20.867568", "score": "0.9188", "loss": "0.1576", "code": " boolean equals(Object obj) { if (objnull) {; } if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 83, "n_pass": [210, 16, 14]}
{"time": "2021-02-13 23:47:22.587821", "score": "0.9188", "loss": "0.1576", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { return false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 81, "n_pass": [221, 17, 15]}
{"time": "2021-02-13 23:47:23.935467", "score": "0.5553", "loss": "0.8745", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } final OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 79, "n_pass": [228, 18, 16]}
{"time": "2021-02-13 23:47:26.629125", "score": "0.5553", "loss": "0.8745", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (this.operatorId ) {  } if (windowId) {} ; }", "n_tokens": 77, "n_pass": [232, 20, 17]}
{"time": "2021-02-13 23:47:30.676244", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId ) {  } if (windowId) {} ; }", "n_tokens": 75, "n_pass": [241, 23, 18]}
{"time": "2021-02-13 23:47:46.429659", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId) {  } if (windowId) {} ; }", "n_tokens": 74, "n_pass": [354, 27, 19]}
{"time": "2021-02-13 23:47:47.779890", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){  } if (windowId) {} ; }", "n_tokens": 73, "n_pass": [356, 28, 20]}
{"time": "2021-02-13 23:47:49.126565", "score": "0.3581", "loss": "1.4265", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){ } if (windowId) {} ; }", "n_tokens": 72, "n_pass": [358, 29, 21]}
{"time": "2021-02-13 23:47:50.463534", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){} if (windowId) {} ; }", "n_tokens": 71, "n_pass": [359, 30, 22]}
{"time": "2021-02-13 23:47:51.794675", "score": "0.3581", "loss": "1.4265", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if (windowId) {} ; }", "n_tokens": 70, "n_pass": [361, 31, 23]}
{"time": "2021-02-13 23:47:53.123369", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId) {} ; }", "n_tokens": 69, "n_pass": [363, 32, 24]}
{"time": "2021-02-13 23:47:54.468491", "score": "0.3581", "loss": "1.4265", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} ; }", "n_tokens": 68, "n_pass": [367, 33, 25]}
{"time": "2021-02-13 23:47:55.831559", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){}; }", "n_tokens": 67, "n_pass": [370, 34, 26]}
{"time": "2021-02-13 23:47:57.156172", "score": "0.3581", "loss": "1.4264", "code": " boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 66, "n_pass": [371, 35, 27]}
{"time": "2021-02-13 23:47:58.481540", "score": "0.3581", "loss": "1.4264", "code": "boolean equals(Object obj) { if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 65, "n_pass": [373, 36, 28]}
{"time": "2021-02-13 23:48:00.530849", "score": "0.3581", "loss": "1.4264", "code": "boolean equals(Object obj){ if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 64, "n_pass": [382, 37, 29]}
{"time": "2021-02-13 23:48:01.867842", "score": "0.3581", "loss": "1.4264", "code": "boolean equals(Object obj){if (objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 63, "n_pass": [384, 38, 30]}
{"time": "2021-02-13 23:48:03.200839", "score": "0.3581", "loss": "1.4264", "code": "boolean equals(Object obj){if(objnull) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 62, "n_pass": [386, 39, 31]}
{"time": "2021-02-13 23:48:05.871176", "score": "0.5698", "loss": "0.8261", "code": "boolean equals(Object obj){if(obj) {} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 61, "n_pass": [389, 41, 32]}
{"time": "2021-02-13 23:48:07.210418", "score": "0.5698", "loss": "0.8261", "code": "boolean equals(Object obj){if(obj){} if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 60, "n_pass": [391, 42, 33]}
{"time": "2021-02-13 23:48:08.553718", "score": "0.5698", "loss": "0.8261", "code": "boolean equals(Object obj){if(obj){}if (getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 59, "n_pass": [394, 43, 34]}
{"time": "2021-02-13 23:48:09.893724", "score": "0.5698", "loss": "0.8261", "code": "boolean equals(Object obj){if(obj){}if(getClassgetClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 58, "n_pass": [396, 44, 35]}
{"time": "2021-02-13 23:48:11.213717", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()) { false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 57, "n_pass": [398, 45, 36]}
{"time": "2021-02-13 23:48:12.536989", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){ false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 56, "n_pass": [403, 46, 37]}
{"time": "2021-02-13 23:48:13.883095", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false; } OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 55, "n_pass": [405, 47, 38]}
{"time": "2021-02-13 23:48:16.544253", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;} OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 54, "n_pass": [408, 49, 39]}
{"time": "2021-02-13 23:48:17.966493", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other = (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 53, "n_pass": [410, 50, 40]}
{"time": "2021-02-13 23:48:23.289740", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other= (OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 52, "n_pass": [414, 54, 41]}
{"time": "2021-02-13 23:48:24.609920", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair) obj; if (operatorId){}if(windowId){} }", "n_tokens": 51, "n_pass": [416, 55, 42]}
{"time": "2021-02-13 23:48:25.943752", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair)obj; if (operatorId){}if(windowId){} }", "n_tokens": 50, "n_pass": [420, 56, 43]}
{"time": "2021-02-13 23:48:28.601461", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair)obj;if (operatorId){}if(windowId){} }", "n_tokens": 49, "n_pass": [423, 58, 44]}
{"time": "2021-02-13 23:48:29.952065", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair)obj;if(operatorId){}if(windowId){} }", "n_tokens": 48, "n_pass": [425, 59, 45]}
{"time": "2021-02-13 23:48:39.074051", "score": "0.6091", "loss": "0.7335", "code": "boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair)obj;if(operatorId){}if(windowId){}}", "n_tokens": 47, "n_pass": [475, 65, 46]}

Minimal simplified code:
boolean equals(Object obj){if(obj){}if(getClass()){false;}OperatorWindowIdPair other=(OperatorWindowIdPair)obj;if(operatorId){}if(windowId){}}

