
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioEndpoint_run.java
method_name = run
method_body = @Override public void run() { SelectionKey key = socket.getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachment ka = null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (ka != null && ka.isUpgraded() && SocketStatus.OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }
predict, score, loss = run, 0.9670460224151611, 0.07970909774303436

Trace of simplified code(s):
{"time": "2021-02-13 16:26:42.649762", "score": "0.9642", "loss": "0.0858", "code": "@Override public void run() { SelectionKey key = socket.getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachment ka = null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (ka != null && ka.isUpgraded() && SocketStatus.OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:26:44.020868", "score": "0.9612", "loss": "0.0856", "code": "@Override public void run() { SelectionKey key = socket.getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachment ka = null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 144, "n_pass": [24, 2, 2]}
{"time": "2021-02-13 16:26:45.910143", "score": "0.822", "loss": "0.3813", "code": "void run() { SelectionKey key = socket.getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachment ka = null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 139, "n_pass": [100, 3, 3]}
{"time": "2021-02-13 16:26:47.259868", "score": "0.81", "loss": "0.4057", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachment ka = null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 134, "n_pass": [102, 4, 4]}
{"time": "2021-02-13 16:26:48.599261", "score": "0.6651", "loss": "0.783", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector()); KeyAttachmentnull; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 129, "n_pass": [107, 5, 5]}
{"time": "2021-02-13 16:26:50.697846", "score": "0.6821", "loss": "0.7395", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector); KeyAttachmentnull; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 127, "n_pass": [183, 6, 6]}
{"time": "2021-02-13 16:26:52.064490", "score": "0.8265", "loss": "0.3375", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector);null; if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 125, "n_pass": [185, 7, 7]}
{"time": "2021-02-13 16:26:53.396300", "score": "0.8391", "loss": "0.3413", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key, ka); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 123, "n_pass": [186, 8, 8]}
{"time": "2021-02-13 16:26:54.740660", "score": "0.8586", "loss": "0.2737", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } } else { synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 120, "n_pass": [209, 9, 9]}
{"time": "2021-02-13 16:26:56.073675", "score": "0.852", "loss": "0.2726", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(key, ka); } } }", "n_tokens": 117, "n_pass": [212, 10, 10]}
{"time": "2021-02-13 16:26:57.407670", "score": "0.8611", "loss": "0.2253", "code": "void run() { SelectionKey .getIOChannel().keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 114, "n_pass": [217, 11, 11]}
{"time": "2021-02-13 16:26:59.097293", "score": "0.8662", "loss": "0.2072", "code": "void run() { SelectionKey ().keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 112, "n_pass": [226, 12, 12]}
{"time": "2021-02-13 16:27:00.420674", "score": "0.8787", "loss": "0.191", "code": "void run() { SelectionKey .keyFor(socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 110, "n_pass": [227, 13, 13]}
{"time": "2021-02-13 16:27:01.751674", "score": "0.8773", "loss": "0.1735", "code": "void run() { SelectionKey (socket.getPoller().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 108, "n_pass": [228, 14, 14]}
{"time": "2021-02-13 16:27:03.078054", "score": "0.8663", "loss": "0.1943", "code": "void run() { SelectionKey (socket().getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 106, "n_pass": [230, 15, 15]}
{"time": "2021-02-13 16:27:04.404182", "score": "0.8705", "loss": "0.1921", "code": "void run() { SelectionKey (socket.getSelector); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 104, "n_pass": [231, 16, 16]}
{"time": "2021-02-13 16:27:05.736496", "score": "0.9051", "loss": "0.1479", "code": "void run() { SelectionKey (socket); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 102, "n_pass": [232, 17, 17]}
{"time": "2021-02-13 16:27:07.467361", "score": "0.8467", "loss": "0.2421", "code": "void run() { (socket); if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 100, "n_pass": [269, 18, 18]}
{"time": "2021-02-13 16:27:15.182735", "score": "0.8467", "loss": "0.2421", "code": "void run() { (socket);if (key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 99, "n_pass": [385, 19, 19]}
{"time": "2021-02-13 16:27:16.507749", "score": "0.8467", "loss": "0.2421", "code": "void run() { (socket);if(key != null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 98, "n_pass": [386, 20, 20]}
{"time": "2021-02-13 16:27:17.864775", "score": "0.8467", "loss": "0.2421", "code": "void run() { (socket);if(key!= null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 97, "n_pass": [389, 21, 21]}
{"time": "2021-02-13 16:27:19.216579", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key= null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 96, "n_pass": [390, 22, 22]}
{"time": "2021-02-13 16:27:20.539993", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null) { ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 95, "n_pass": [392, 23, 23]}
{"time": "2021-02-13 16:27:21.888005", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null){ ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 94, "n_pass": [395, 24, 24]}
{"time": "2021-02-13 16:27:23.212022", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null){ka = (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 93, "n_pass": [397, 25, 25]}
{"time": "2021-02-13 16:27:24.551705", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null){ka= (KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 92, "n_pass": [399, 26, 26]}
{"time": "2021-02-13 16:27:25.879705", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment) key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 91, "n_pass": [401, 27, 27]}
{"time": "2021-02-13 16:27:27.231290", "score": "0.86", "loss": "0.2118", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)key.attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 90, "n_pass": [405, 28, 28]}
{"time": "2021-02-13 16:27:28.552439", "score": "0.8921", "loss": "0.1697", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment).attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 89, "n_pass": [406, 29, 29]}
{"time": "2021-02-13 16:27:29.876284", "score": "0.8518", "loss": "0.221", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment(); } if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 88, "n_pass": [407, 30, 30]}
{"time": "2021-02-13 16:27:31.204111", "score": "0.8518", "loss": "0.221", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();} if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 87, "n_pass": [412, 31, 31]}
{"time": "2021-02-13 16:27:32.546332", "score": "0.8518", "loss": "0.221", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if (OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 86, "n_pass": [414, 32, 32]}
{"time": "2021-02-13 16:27:33.877767", "score": "0.8518", "loss": "0.221", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(OPEN_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 85, "n_pass": [416, 33, 33]}
{"time": "2021-02-13 16:27:35.194509", "score": "0.8402", "loss": "0.2302", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(_WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 84, "n_pass": [418, 34, 34]}
{"time": "2021-02-13 16:27:36.516191", "score": "0.8402", "loss": "0.2302", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka.getWriteThreadLock()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 83, "n_pass": [419, 35, 35]}
{"time": "2021-02-13 16:27:37.847395", "score": "0.778", "loss": "0.3431", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka()) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 81, "n_pass": [427, 36, 36]}
{"time": "2021-02-13 16:27:39.168965", "score": "0.8171", "loss": "0.271", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); } }{ synchronized (socket) { doRun(ka); } } }", "n_tokens": 79, "n_pass": [428, 37, 37]}
{"time": "2021-02-13 16:27:40.519100", "score": "0.8585", "loss": "0.2362", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) { doRun(ka); } } }", "n_tokens": 77, "n_pass": [435, 38, 38]}
{"time": "2021-02-13 16:27:41.849415", "score": "0.6967", "loss": "0.6109", "code": "void run() { (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 75, "n_pass": [440, 39, 39]}
{"time": "2021-02-13 16:27:43.902498", "score": "0.6967", "loss": "0.6109", "code": "void run(){ (socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 74, "n_pass": [451, 40, 40]}
{"time": "2021-02-13 16:27:45.233684", "score": "0.6967", "loss": "0.6109", "code": "void run(){(socket);if(key=null){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 73, "n_pass": [453, 41, 41]}
{"time": "2021-02-13 16:27:46.562019", "score": "0.813", "loss": "0.4349", "code": "void run(){(socket);if(keynull){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 72, "n_pass": [461, 42, 42]}
{"time": "2021-02-13 16:27:47.887680", "score": "0.7559", "loss": "0.5531", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE == status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 71, "n_pass": [462, 43, 43]}
{"time": "2021-02-13 16:27:55.637475", "score": "0.7559", "loss": "0.5531", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE== status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 70, "n_pass": [557, 44, 44]}
{"time": "2021-02-13 16:27:56.946360", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE= status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 69, "n_pass": [558, 45, 45]}
{"time": "2021-02-13 16:27:58.293580", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status) { synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 68, "n_pass": [560, 46, 46]}
{"time": "2021-02-13 16:27:59.611785", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){ synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 67, "n_pass": [563, 47, 47]}
{"time": "2021-02-13 16:28:00.939679", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized (ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 66, "n_pass": [565, 48, 48]}
{"time": "2021-02-13 16:28:02.285073", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka) { doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 65, "n_pass": [567, 49, 49]}
{"time": "2021-02-13 16:28:03.606812", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){ doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 64, "n_pass": [571, 50, 50]}
{"time": "2021-02-13 16:28:04.950674", "score": "0.7472", "loss": "0.5261", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun(key); }  synchronized (socket) {(ka); } } }", "n_tokens": 63, "n_pass": [573, 51, 51]}
{"time": "2021-02-13 16:28:07.601445", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun(); }  synchronized (socket) {(ka); } } }", "n_tokens": 62, "n_pass": [576, 53, 52]}
{"time": "2021-02-13 16:28:08.927080", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}  synchronized (socket) {(ka); } } }", "n_tokens": 61, "n_pass": [579, 54, 53]}
{"time": "2021-02-13 16:28:10.236350", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();} synchronized (socket) {(ka); } } }", "n_tokens": 60, "n_pass": [581, 55, 54]}
{"time": "2021-02-13 16:28:11.553559", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized (socket) {(ka); } } }", "n_tokens": 59, "n_pass": [582, 56, 55]}
{"time": "2021-02-13 16:28:12.890105", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized(socket) {(ka); } } }", "n_tokens": 58, "n_pass": [584, 57, 56]}
{"time": "2021-02-13 16:28:14.210955", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized(socket){(ka); } } }", "n_tokens": 57, "n_pass": [588, 58, 57]}
{"time": "2021-02-13 16:28:15.544448", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized(socket){(ka);} } }", "n_tokens": 56, "n_pass": [594, 59, 58]}
{"time": "2021-02-13 16:28:16.862523", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized(socket){(ka);}} }", "n_tokens": 55, "n_pass": [596, 60, 59]}
{"time": "2021-02-13 16:28:18.181717", "score": "0.5807", "loss": "0.9839", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE=status){synchronized(ka){doRun();}synchronized(socket){(ka);}}}", "n_tokens": 54, "n_pass": [598, 61, 60]}
{"time": "2021-02-13 16:28:20.231569", "score": "0.543", "loss": "1.161", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITEstatus){synchronized(ka){doRun();}synchronized(socket){(ka);}}}", "n_tokens": 53, "n_pass": [628, 62, 61]}
{"time": "2021-02-13 16:28:21.547099", "score": "0.2888", "loss": "2.1132", "code": "void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE){synchronized(ka){doRun();}synchronized(socket){(ka);}}}", "n_tokens": 52, "n_pass": [629, 63, 62]}

Minimal simplified code:
void run(){(socket);if(key){ka=(KeyAttachment)attachment();}if(WRITE){synchronized(ka){doRun();}synchronized(socket){(ka);}}}

