
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Blankj__AndroidUtilCode/utilcode/src/main/java/com/blankj/utilcode/util/ActivityUtils_startActivity.java
method_name = startActivity
method_body = private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }
predict, score, loss = startActivity, 0.9244368672370911, 0.2616840600967407

Trace of simplified code(s):
{"time": "2021-02-13 21:07:05.109870", "score": "0.9244", "loss": "0.2617", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }", "n_tokens": 129, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:07:06.469699", "score": "0.8833", "loss": "0.4341", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); } else { context.startActivity(intent); } }", "n_tokens": 113, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 21:07:07.821473", "score": "0.8259", "loss": "0.7128", "code": "private static void startActivity(final Intent intent, final Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 105, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 21:07:09.171022", "score": "0.886", "loss": "0.4762", "code": "private static void startActivity( Context context, final Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 97, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 21:07:10.530531", "score": "0.7991", "loss": "0.7966", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != null && Build.VERSIONBEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 89, "n_pass": [51, 5, 5]}
{"time": "2021-02-13 21:07:11.865051", "score": "0.8745", "loss": "0.446", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity(intent, options); startActivity(intent); } }", "n_tokens": 81, "n_pass": [58, 6, 6]}
{"time": "2021-02-13 21:07:13.207947", "score": "0.7458", "loss": "1.1913", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivitystartActivity(intent); } }", "n_tokens": 73, "n_pass": [60, 7, 7]}
{"time": "2021-02-13 21:07:14.554514", "score": "0.605", "loss": "2.2889", "code": "private static void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 69, "n_pass": [88, 8, 8]}
{"time": "2021-02-13 21:07:15.863698", "score": "0.605", "loss": "2.2889", "code": "void startActivity(Bundle options) { if (!(context instanceof Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 65, "n_pass": [89, 9, 9]}
{"time": "2021-02-13 21:07:17.189465", "score": "0.6725", "loss": "1.802", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 61, "n_pass": [94, 10, 10]}
{"time": "2021-02-13 21:07:18.507684", "score": "0.7099", "loss": "1.5141", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.NEW_TASK); } if (options != BEAN) { context.startActivity; } }", "n_tokens": 57, "n_pass": [98, 11, 11]}
{"time": "2021-02-13 21:07:19.823339", "score": "0.6812", "loss": "1.6713", "code": "void startActivity(Bundle options) { if (!(Activity)) { intent.addFlags(Intent.NEW_TASK); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 53, "n_pass": [102, 12, 12]}
{"time": "2021-02-13 21:07:24.815949", "score": "0.6516", "loss": "1.7416", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags(Intent.NEW_TASK); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 51, "n_pass": [159, 15, 13]}
{"time": "2021-02-13 21:07:26.137474", "score": "0.7468", "loss": "1.1738", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags(NEW_TASK); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 49, "n_pass": [161, 16, 14]}
{"time": "2021-02-13 21:07:27.453043", "score": "0.8135", "loss": "0.8385", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags(TASK); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 47, "n_pass": [162, 17, 15]}
{"time": "2021-02-13 21:07:35.450849", "score": "0.7308", "loss": "1.1682", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags(); } if (optionsBEAN) { context.startActivity; } }", "n_tokens": 46, "n_pass": [232, 19, 16]}
{"time": "2021-02-13 21:07:36.784806", "score": "0.7308", "loss": "1.1682", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();} if (optionsBEAN) { context.startActivity; } }", "n_tokens": 45, "n_pass": [234, 20, 17]}
{"time": "2021-02-13 21:07:38.099385", "score": "0.7308", "loss": "1.1682", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if (optionsBEAN) { context.startActivity; } }", "n_tokens": 44, "n_pass": [236, 21, 18]}
{"time": "2021-02-13 21:07:39.419553", "score": "0.7308", "loss": "1.1682", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if(optionsBEAN) { context.startActivity; } }", "n_tokens": 43, "n_pass": [238, 22, 19]}
{"time": "2021-02-13 21:07:40.732246", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if(BEAN) { context.startActivity; } }", "n_tokens": 42, "n_pass": [240, 23, 20]}
{"time": "2021-02-13 21:07:42.072284", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if(BEAN){ context.startActivity; } }", "n_tokens": 41, "n_pass": [243, 24, 21]}
{"time": "2021-02-13 21:07:43.385380", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if(BEAN){context.startActivity; } }", "n_tokens": 40, "n_pass": [245, 25, 22]}
{"time": "2021-02-13 21:07:45.999946", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options) { if (!(Activity)) { addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 39, "n_pass": [250, 27, 23]}
{"time": "2021-02-13 21:07:48.035766", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options){ if (!(Activity)) { addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 38, "n_pass": [261, 28, 24]}
{"time": "2021-02-13 21:07:49.347278", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options){if (!(Activity)) { addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 37, "n_pass": [263, 29, 25]}
{"time": "2021-02-13 21:07:50.650801", "score": "0.8396", "loss": "0.7126", "code": "void startActivity(Bundle options){if(!(Activity)) { addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 36, "n_pass": [265, 30, 26]}
{"time": "2021-02-13 21:07:51.961861", "score": "0.8331", "loss": "0.6973", "code": "void startActivity(Bundle options){if((Activity)) { addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 35, "n_pass": [267, 31, 27]}
{"time": "2021-02-13 21:07:53.292460", "score": "0.8331", "loss": "0.6973", "code": "void startActivity(Bundle options){if((Activity)){ addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 34, "n_pass": [272, 32, 28]}
{"time": "2021-02-13 21:07:54.600866", "score": "0.8331", "loss": "0.6973", "code": "void startActivity(Bundle options){if((Activity)){addFlags();}if(BEAN){context.startActivity;} }", "n_tokens": 33, "n_pass": [274, 33, 29]}
{"time": "2021-02-13 21:07:58.273634", "score": "0.8331", "loss": "0.6973", "code": "void startActivity(Bundle options){if((Activity)){addFlags();}if(BEAN){context.startActivity;}}", "n_tokens": 32, "n_pass": [309, 35, 30]}

Minimal simplified code:
void startActivity(Bundle options){if((Activity)){addFlags();}if(BEAN){context.startActivity;}}

