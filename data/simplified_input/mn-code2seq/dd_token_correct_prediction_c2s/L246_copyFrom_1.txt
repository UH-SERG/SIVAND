
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CreateRoleNode_copyFrom.java
method_name = copyFrom
method_body = public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }
predict, score, loss = copyFrom, 0.9993758201599121, 0.001814759918488562

Trace of simplified code(s):
{"time": "2021-02-13 12:33:59.151011", "score": "0.9994", "loss": "0.0018", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); CreateRoleNode other = (CreateRoleNode) node; this.name = other.name; }", "n_tokens": 50, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:34:00.817780", "score": "0.9994", "loss": "0.0023", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); this.name = other.name; }", "n_tokens": 37, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 12:34:02.107906", "score": "0.9977", "loss": "0.0064", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); other.name; }", "n_tokens": 31, "n_pass": [20, 3, 3]}
{"time": "2021-02-13 12:34:03.415565", "score": "0.9963", "loss": "0.0098", "code": "public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node);name; }", "n_tokens": 28, "n_pass": [35, 4, 4]}
{"time": "2021-02-13 12:34:05.059146", "score": "0.7972", "loss": "0.5966", "code": "public void copyFrom() throws StandardException { super.copyFrom(node);name; }", "n_tokens": 25, "n_pass": [38, 5, 5]}
{"time": "2021-02-13 12:34:07.719287", "score": "0.8193", "loss": "0.5769", "code": "public void copyFrom() throws StandardException { super.copyFrom(node); }", "n_tokens": 23, "n_pass": [73, 6, 6]}
{"time": "2021-02-13 12:34:09.002473", "score": "0.8193", "loss": "0.5769", "code": " void copyFrom() throws StandardException { super.copyFrom(node); }", "n_tokens": 22, "n_pass": [74, 7, 7]}
{"time": "2021-02-13 12:34:10.281710", "score": "0.8193", "loss": "0.5769", "code": "void copyFrom() throws StandardException { super.copyFrom(node); }", "n_tokens": 21, "n_pass": [75, 8, 8]}
{"time": "2021-02-13 12:34:14.609937", "score": "0.8193", "loss": "0.5769", "code": "void copyFrom()throws StandardException { super.copyFrom(node); }", "n_tokens": 20, "n_pass": [105, 9, 9]}
{"time": "2021-02-13 12:34:15.888092", "score": "0.8193", "loss": "0.5769", "code": "void copyFrom()throws StandardException{ super.copyFrom(node); }", "n_tokens": 19, "n_pass": [108, 10, 10]}
{"time": "2021-02-13 12:34:17.171607", "score": "0.8193", "loss": "0.5769", "code": "void copyFrom()throws StandardException{super.copyFrom(node); }", "n_tokens": 18, "n_pass": [110, 11, 11]}
{"time": "2021-02-13 12:34:19.749315", "score": "0.9923", "loss": "0.0271", "code": "void copyFrom()throws StandardException{super.copyFrom(); }", "n_tokens": 17, "n_pass": [115, 13, 12]}
{"time": "2021-02-13 12:34:21.026270", "score": "0.9923", "loss": "0.0271", "code": "void copyFrom()throws StandardException{super.copyFrom();}", "n_tokens": 16, "n_pass": [118, 14, 13]}

Minimal simplified code:
void copyFrom()throws StandardException{super.copyFrom();}

