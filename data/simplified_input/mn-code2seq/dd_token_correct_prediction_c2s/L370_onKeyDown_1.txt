
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysdk/src/main/java/org/renpy/android/PythonActivity_onKeyDown.java
method_name = onKeyDown
method_body = @Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null && mView.mStarted && SDLSurfaceView.nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }
predict, score, loss = onKeyDown, 0.9994862079620361, 0.0016219569370150566

Trace of simplified code(s):
{"time": "2021-02-13 14:47:31.520157", "score": "0.9995", "loss": "0.0016", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null && mView.mStarted && SDLSurfaceView.nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 90, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:47:32.868288", "score": "0.9993", "loss": "0.0023", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode, 1, event.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 79, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 14:47:35.524934", "score": "0.9994", "loss": "0.0019", "code": "@Override public boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 73, "n_pass": [45, 4, 3]}
{"time": "2021-02-13 14:47:36.856431", "score": "0.9989", "loss": "0.0036", "code": "boolean onKeyDown(int keyCode, final KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 68, "n_pass": [52, 5, 4]}
{"time": "2021-02-13 14:47:38.551287", "score": "0.9989", "loss": "0.0036", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != null .nativeKey(keyCode.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 65, "n_pass": [93, 6, 5]}
{"time": "2021-02-13 14:47:39.870978", "score": "0.9986", "loss": "0.0047", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { return true; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 62, "n_pass": [99, 7, 6]}
{"time": "2021-02-13 14:47:41.188707", "score": "0.9973", "loss": "0.009", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { ; } else { return super.onKeyDown(keyCode, event); } }", "n_tokens": 59, "n_pass": [104, 8, 7]}
{"time": "2021-02-13 14:47:42.497317", "score": "0.9965", "loss": "0.0119", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ return super.onKeyDown(keyCode, event); } }", "n_tokens": 56, "n_pass": [106, 9, 8]}
{"time": "2021-02-13 14:47:45.134405", "score": "0.9981", "loss": "0.0062", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ return super.onKeyDown(keyCode); } }", "n_tokens": 53, "n_pass": [110, 11, 9]}
{"time": "2021-02-13 14:47:46.821794", "score": "0.7827", "loss": "1.0862", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ returnonKeyDown(keyCode); } }", "n_tokens": 50, "n_pass": [128, 12, 10]}
{"time": "2021-02-13 14:47:51.248660", "score": "0.6986", "loss": "1.6704", "code": "boolean onKeyDown(int keyCode,KeyEvent event) { if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 48, "n_pass": [184, 13, 11]}
{"time": "2021-02-13 14:47:53.276161", "score": "0.6986", "loss": "1.6704", "code": "boolean onKeyDown(int keyCode,KeyEvent event){ if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 47, "n_pass": [201, 14, 12]}
{"time": "2021-02-13 14:47:54.601968", "score": "0.6986", "loss": "1.6704", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if (mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 46, "n_pass": [203, 15, 13]}
{"time": "2021-02-13 14:47:55.928538", "score": "0.6986", "loss": "1.6704", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView != nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 45, "n_pass": [205, 16, 14]}
{"time": "2021-02-13 14:47:57.233709", "score": "0.6986", "loss": "1.6704", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView!= nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 44, "n_pass": [208, 17, 15]}
{"time": "2021-02-13 14:47:58.535663", "score": "0.7555", "loss": "1.324", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView= nativeKey(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 43, "n_pass": [209, 18, 16]}
{"time": "2021-02-13 14:47:59.834905", "score": "0.801", "loss": "1.0352", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView=(keyCode.getUnicodeChar())) { ; }{ (keyCode); } }", "n_tokens": 41, "n_pass": [211, 19, 17]}
{"time": "2021-02-13 14:48:01.133420", "score": "0.8391", "loss": "0.7162", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView=(keyCode())) { ; }{ (keyCode); } }", "n_tokens": 39, "n_pass": [213, 20, 18]}
{"time": "2021-02-13 14:48:02.405718", "score": "0.8217", "loss": "0.8853", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView=(keyCode)) { ; }{ (keyCode); } }", "n_tokens": 37, "n_pass": [214, 21, 19]}
{"time": "2021-02-13 14:48:03.708438", "score": "0.8217", "loss": "0.8853", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView=(keyCode)) { }{ (keyCode); } }", "n_tokens": 35, "n_pass": [217, 22, 20]}
{"time": "2021-02-13 14:48:05.731955", "score": "0.8375", "loss": "0.8578", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) { }{ (keyCode); } }", "n_tokens": 34, "n_pass": [240, 23, 21]}
{"time": "2021-02-13 14:48:11.073684", "score": "0.8375", "loss": "0.8578", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) {}{ (keyCode); } }", "n_tokens": 33, "n_pass": [285, 25, 22]}
{"time": "2021-02-13 14:48:12.370059", "score": "0.8375", "loss": "0.8578", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) {}{(keyCode); } }", "n_tokens": 32, "n_pass": [287, 26, 23]}
{"time": "2021-02-13 14:48:13.695819", "score": "0.8375", "loss": "0.8578", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) {}{(keyCode);} }", "n_tokens": 31, "n_pass": [292, 27, 24]}
{"time": "2021-02-13 14:48:14.992814", "score": "0.8375", "loss": "0.8578", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView(keyCode)) {}{(keyCode);}}", "n_tokens": 30, "n_pass": [294, 28, 25]}
{"time": "2021-02-13 14:48:18.321453", "score": "0.8514", "loss": "0.715", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView()) {}{(keyCode);}}", "n_tokens": 29, "n_pass": [313, 30, 26]}
{"time": "2021-02-13 14:48:19.617992", "score": "0.8514", "loss": "0.715", "code": "boolean onKeyDown(int keyCode,KeyEvent event){if(mView()){}{(keyCode);}}", "n_tokens": 28, "n_pass": [316, 31, 27]}

Minimal simplified code:
boolean onKeyDown(int keyCode,KeyEvent event){if(mView()){}{(keyCode);}}

