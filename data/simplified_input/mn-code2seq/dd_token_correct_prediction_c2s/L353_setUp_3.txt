
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/pusher__pusher-websocket-java/src/test/java/com/pusher/client/connection/websocket/WebSocketConnectionTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws URISyntaxException, SSLException { when(factory.getChannelManager()).thenReturn(mockChannelManager); when(factory.newWebSocketClientWrapper(any(URI.class), any(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.getTimers()).thenReturn(new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }
predict, score, loss = setUp, 0.8193910121917725, 0.47581154108047485

Trace of simplified code(s):
{"time": "2021-02-13 14:27:44.614005", "score": "0.7974", "loss": "0.5364", "code": "@Before public void setUp() throws URISyntaxException, SSLException { when(factory.getChannelManager()).thenReturn(mockChannelManager); when(factory.newWebSocketClientWrapper(any(URI.class), any(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.getTimers()).thenReturn(new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 228, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:27:46.459395", "score": "0.8295", "loss": "0.4408", "code": "@Before public void setUp() throws URISyntaxException, SSLException { when.thenReturn(mockChannelManager); when(factory.newWebSocketClientWrapper(any(URI.class), any(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.getTimers()).thenReturn(new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 221, "n_pass": [95, 2, 2]}
{"time": "2021-02-13 14:27:47.839409", "score": "0.7885", "loss": "0.6081", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(any(URI.class), any(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.getTimers()).thenReturn(new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 214, "n_pass": [96, 3, 3]}
{"time": "2021-02-13 14:27:49.212636", "score": "0.7909", "loss": "0.5898", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.getTimers()).thenReturn(new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 207, "n_pass": [98, 4, 4]}
{"time": "2021-02-13 14:27:50.609865", "score": "0.7928", "loss": "0.5983", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT, MAX_RECONNECTIONS, MAX_GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 200, "n_pass": [115, 5, 5]}
{"time": "2021-02-13 14:27:53.370840", "score": "0.8041", "loss": "0.5275", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor()); connection = new WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT,GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 192, "n_pass": [120, 7, 6]}
{"time": "2021-02-13 14:27:55.175335", "score": "0.725", "loss": "1.1017", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(URL, ACTIVITY_TIMEOUT, PONG_TIMEOUT,GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 185, "n_pass": [145, 8, 7]}
{"time": "2021-02-13 14:27:58.341373", "score": "0.7348", "loss": "1.0387", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(_TIMEOUT, PONG_TIMEOUT,GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 181, "n_pass": [225, 10, 8]}
{"time": "2021-02-13 14:27:59.704058", "score": "0.6657", "loss": "1.404", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(PONG_TIMEOUT,GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 177, "n_pass": [226, 11, 9]}
{"time": "2021-02-13 14:28:01.067114", "score": "0.7339", "loss": "1.0173", "code": "@Before public void setUp() throws URISyntaxException, SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 173, "n_pass": [227, 12, 10]}
{"time": "2021-02-13 14:28:04.206879", "score": "0.7085", "loss": "1.0279", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(Proxy.class), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 170, "n_pass": [238, 14, 11]}
{"time": "2021-02-13 14:28:05.607572", "score": "0.7886", "loss": "0.6059", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { @Override public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 167, "n_pass": [244, 15, 12]}
{"time": "2021-02-13 14:28:07.078639", "score": "0.7974", "loss": "0.6071", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() { public Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 164, "n_pass": [254, 16, 13]}
{"time": "2021-02-13 14:28:08.440571", "score": "0.7551", "loss": "0.8925", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { final Runnable r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 161, "n_pass": [255, 17, 14]}
{"time": "2021-02-13 14:28:09.808634", "score": "0.806", "loss": "0.5309", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { r = (Runnable) invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 157, "n_pass": [260, 18, 15]}
{"time": "2021-02-13 14:28:11.533661", "score": "0.756", "loss": "0.8748", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { r = invocation.getArguments()[0]; r.run(); return null; } }).when(factory).queueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 153, "n_pass": [262, 19, 16]}
{"time": "2021-02-13 14:28:14.252648", "score": "0.7736", "loss": "0.6918", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { r = invocation.getArguments()[0]; r.run(); return null; } }).whenqueueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 149, "n_pass": [270, 21, 17]}
{"time": "2021-02-13 14:28:17.377798", "score": "0.7937", "loss": "0.6263", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run(); return null; } }).whenqueueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 145, "n_pass": [305, 23, 18]}
{"time": "2021-02-13 14:28:18.730882", "score": "0.8427", "loss": "0.4611", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();; } }).whenqueueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 141, "n_pass": [310, 24, 19]}
{"time": "2021-02-13 14:28:25.545089", "score": "0.7978", "loss": "0.7506", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class)); when(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 139, "n_pass": [431, 26, 20]}
{"time": "2021-02-13 14:28:26.928437", "score": "0.8172", "loss": "0.6339", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(GAP, PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 137, "n_pass": [439, 27, 21]}
{"time": "2021-02-13 14:28:28.309712", "score": "0.7721", "loss": "1.0186", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXY, factory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 135, "n_pass": [446, 28, 22]}
{"time": "2021-02-13 14:28:29.663913", "score": "0.8368", "loss": "0.5851", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); connection.bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 133, "n_pass": [448, 29, 23]}
{"time": "2021-02-13 14:28:31.010011", "score": "0.8219", "loss": "0.6949", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(ConnectionState.ALL, mockEventListener); }", "n_tokens": 131, "n_pass": [451, 30, 24]}
{"time": "2021-02-13 14:28:32.358802", "score": "0.8229", "loss": "0.6917", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(ALL, mockEventListener); }", "n_tokens": 129, "n_pass": [453, 31, 25]}
{"time": "2021-02-13 14:28:33.706698", "score": "0.8325", "loss": "0.624", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind( mockEventListener); }", "n_tokens": 127, "n_pass": [454, 32, 26]}
{"time": "2021-02-13 14:28:35.055707", "score": "0.837", "loss": "0.6049", "code": "@Before public void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 125, "n_pass": [455, 33, 27]}
{"time": "2021-02-13 14:28:37.750757", "score": "0.837", "loss": "0.6049", "code": "@Before  void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 124, "n_pass": [461, 35, 28]}
{"time": "2021-02-13 14:28:39.103414", "score": "0.837", "loss": "0.6049", "code": "@Before void setUp() throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 123, "n_pass": [462, 36, 29]}
{"time": "2021-02-13 14:28:41.221053", "score": "0.837", "loss": "0.6049", "code": "@Before void setUp()throws SSLException { whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 122, "n_pass": [468, 37, 30]}
{"time": "2021-02-13 14:28:42.565078", "score": "0.837", "loss": "0.6049", "code": "@Before void setUp()throws SSLException{ whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 121, "n_pass": [472, 38, 31]}
{"time": "2021-02-13 14:28:43.907650", "score": "0.837", "loss": "0.6049", "code": "@Before void setUp()throws SSLException{whenwhen(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 120, "n_pass": [474, 39, 32]}
{"time": "2021-02-13 14:28:45.272297", "score": "0.8495", "loss": "0.5535", "code": "@Before void setUp()throws SSLException{when(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 119, "n_pass": [475, 40, 33]}
{"time": "2021-02-13 14:28:46.629099", "score": "0.8398", "loss": "0.5676", "code": "@Before void setUp()throws SSLException{(factory.newWebSocketClientWrapper(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 118, "n_pass": [476, 41, 34]}
{"time": "2021-02-13 14:28:48.033583", "score": "0.8462", "loss": "0.5352", "code": "@Before void setUp()throws SSLException{(factory(anyany(), any(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 116, "n_pass": [478, 42, 35]}
{"time": "2021-02-13 14:28:49.374814", "score": "0.8432", "loss": "0.5463", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection.class))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 114, "n_pass": [482, 43, 36]}
{"time": "2021-02-13 14:28:50.719164", "score": "0.8442", "loss": "0.5635", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object answer(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 112, "n_pass": [484, 44, 37]}
{"time": "2021-02-13 14:28:52.078479", "score": "0.8627", "loss": "0.3752", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { invocation.getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 110, "n_pass": [495, 45, 38]}
{"time": "2021-02-13 14:28:53.450532", "score": "0.8659", "loss": "0.3657", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; r.run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 108, "n_pass": [502, 46, 39]}
{"time": "2021-02-13 14:28:54.797849", "score": "0.8551", "loss": "0.4177", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection( PROXYfactory); bind(); }", "n_tokens": 106, "n_pass": [507, 47, 40]}
{"time": "2021-02-13 14:28:56.169846", "score": "0.8559", "loss": "0.4", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory); bind(); }", "n_tokens": 104, "n_pass": [524, 48, 41]}
{"time": "2021-02-13 14:29:05.338827", "score": "0.8559", "loss": "0.4", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind(); }", "n_tokens": 103, "n_pass": [677, 49, 42]}
{"time": "2021-02-13 14:29:06.687249", "score": "0.8559", "loss": "0.4", "code": "@Before void setUp()throws SSLException{(factory(anyany(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 102, "n_pass": [682, 50, 43]}
{"time": "2021-02-13 14:29:09.130125", "score": "0.8595", "loss": "0.3833", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn(mockUnderlyingConnection); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 101, "n_pass": [699, 51, 44]}
{"time": "2021-02-13 14:29:10.486530", "score": "0.8382", "loss": "0.4539", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn(); doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 100, "n_pass": [712, 52, 45]}
{"time": "2021-02-13 14:29:11.822720", "score": "0.8382", "loss": "0.4539", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();doAnswer(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 99, "n_pass": [715, 53, 46]}
{"time": "2021-02-13 14:29:13.182775", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer() {Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 98, "n_pass": [716, 54, 47]}
{"time": "2021-02-13 14:29:14.553091", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation) throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 97, "n_pass": [723, 55, 48]}
{"time": "2021-02-13 14:29:15.893933", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable { getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 96, "n_pass": [731, 56, 49]}
{"time": "2021-02-13 14:29:17.229555", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{ getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 95, "n_pass": [735, 57, 50]}
{"time": "2021-02-13 14:29:18.552471", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0]; run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 94, "n_pass": [737, 58, 51]}
{"time": "2021-02-13 14:29:19.890098", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();} }).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 93, "n_pass": [745, 59, 52]}
{"time": "2021-02-13 14:29:21.210187", "score": "0.8132", "loss": "0.5953", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).whenqueueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 92, "n_pass": [751, 60, 53]}
{"time": "2021-02-13 14:29:22.552816", "score": "0.8091", "loss": "0.5928", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread(any(Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 91, "n_pass": [755, 61, 54]}
{"time": "2021-02-13 14:29:23.887229", "score": "0.7805", "loss": "0.7538", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable.class));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 90, "n_pass": [758, 62, 55]}
{"time": "2021-02-13 14:29:25.257884", "score": "0.7937", "loss": "0.7024", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnableclass));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 89, "n_pass": [761, 63, 56]}
{"time": "2021-02-13 14:29:26.607105", "score": "0.7827", "loss": "0.7555", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory.new DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 88, "n_pass": [762, 64, 57]}
{"time": "2021-02-13 14:29:27.962229", "score": "0.7666", "loss": "0.8125", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory. DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 87, "n_pass": [769, 65, 58]}
{"time": "2021-02-13 14:29:29.318064", "score": "0.7666", "loss": "0.8125", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory.DoNothingExecutor());WebSocketConnection(factory);bind();}", "n_tokens": 86, "n_pass": [770, 66, 59]}
{"time": "2021-02-13 14:29:30.665431", "score": "0.7836", "loss": "0.7054", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory.DoNothingExecutor());(factory);bind();}", "n_tokens": 85, "n_pass": [776, 67, 60]}
{"time": "2021-02-13 14:29:33.540472", "score": "0.7977", "loss": "0.6604", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factoryDoNothingExecutor());(factory);bind();}", "n_tokens": 84, "n_pass": [856, 68, 61]}
{"time": "2021-02-13 14:29:34.897035", "score": "0.7901", "loss": "0.6869", "code": "@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory());(factory);bind();}", "n_tokens": 83, "n_pass": [857, 69, 62]}

Minimal simplified code:
@Before void setUp()throws SSLException{(factory(any(),(WebSocketConnection))).thenReturn();(new Answer(){Object(InvocationOnMock invocation)throws Throwable{getArguments()[0];run();}}).queueOnEventThread((Runnable));(factory());(factory);bind();}

