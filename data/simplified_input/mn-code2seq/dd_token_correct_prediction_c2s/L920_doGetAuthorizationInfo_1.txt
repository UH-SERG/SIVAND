
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/zhengyunfei__springboot-hadmin/src/main/java/com/sparrow/hadmin/config/shiro/MyRealm_doGetAuthorizationInfo.java
method_name = doGetAuthorizationInfo
method_body = @Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser = userService.findByUserName(user.getUserName()); Set<String> shiroPermissions = new HashSet<>(); Set<String> roleSet = new HashSet<String>(); Set<Role> roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }
predict, score, loss = doGetAuthorizationInfo, 0.8602840304374695, 0.9319944381713867

Trace of simplified code(s):
{"time": "2021-02-14 02:07:11.641578", "score": "0.9549", "loss": "0.2605", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser = userService.findByUserName(user.getUserName()); Set<String> shiroPermissions = new HashSet<>(); Set<String> roleSet = new HashSet<String>(); Set<Role> roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 211, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:07:13.015346", "score": "0.9055", "loss": "0.5752", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User dbUser =  roles = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 158, "n_pass": [9, 2, 2]}
{"time": "2021-02-14 02:07:19.326378", "score": "0.8432", "loss": "1.1004", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User  = dbUser.getRoles(); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 152, "n_pass": [72, 6, 3]}
{"time": "2021-02-14 02:07:20.688060", "score": "0.8985", "loss": "0.6259", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfo.setRoles(roleSet); authorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 146, "n_pass": [73, 7, 4]}
{"time": "2021-02-14 02:07:22.440467", "score": "0.8661", "loss": "0.8667", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User) principals.getPrimaryPrincipal(); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 139, "n_pass": [85, 8, 5]}
{"time": "2021-02-14 02:07:24.193796", "score": "0.8453", "loss": "1.1456", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) { shiroPermissions.add(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 133, "n_pass": [92, 9, 6]}
{"time": "2021-02-14 02:07:28.774015", "score": "0.8693", "loss": "0.8816", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role.getRoleKey()); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 129, "n_pass": [174, 11, 7]}
{"time": "2021-02-14 02:07:30.138620", "score": "0.8414", "loss": "1.1261", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { User user = (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 125, "n_pass": [179, 12, 8]}
{"time": "2021-02-14 02:07:35.994533", "score": "0.8767", "loss": "0.7981", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {user = (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 122, "n_pass": [190, 16, 9]}
{"time": "2021-02-14 02:07:37.343848", "score": "0.8805", "loss": "0.8536", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); } authorizationInfoauthorizationInfo.setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 119, "n_pass": [191, 17, 10]}
{"time": "2021-02-14 02:07:39.509464", "score": "0.8515", "loss": "1.042", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions); return authorizationInfo; }", "n_tokens": 115, "n_pass": [219, 18, 11]}
{"time": "2021-02-14 02:07:49.942003", "score": "0.9292", "loss": "0.4893", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions); authorizationInfo; }", "n_tokens": 113, "n_pass": [328, 22, 12]}
{"time": "2021-02-14 02:07:51.289997", "score": "0.949", "loss": "0.3772", "code": "@Override protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 111, "n_pass": [329, 23, 13]}
{"time": "2021-02-14 02:07:52.651938", "score": "0.9031", "loss": "0.7879", "code": "@Overrideprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 110, "n_pass": [333, 24, 14]}
{"time": "2021-02-14 02:07:54.004016", "score": "0.949", "loss": "0.3772", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) { (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 109, "n_pass": [334, 25, 15]}
{"time": "2021-02-14 02:07:56.850054", "score": "0.949", "loss": "0.3772", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){ (User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 108, "n_pass": [344, 26, 16]}
{"time": "2021-02-14 02:07:58.305273", "score": "0.949", "loss": "0.3772", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User); SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 107, "n_pass": [346, 27, 17]}
{"time": "2021-02-14 02:07:59.774905", "score": "0.949", "loss": "0.3772", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 106, "n_pass": [351, 28, 18]}
{"time": "2021-02-14 02:08:01.128711", "score": "0.9358", "loss": "0.4633", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User); authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 105, "n_pass": [352, 29, 19]}
{"time": "2021-02-14 02:08:02.524607", "score": "0.9358", "loss": "0.4633", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo = new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 104, "n_pass": [353, 30, 20]}
{"time": "2021-02-14 02:08:03.904812", "score": "0.9358", "loss": "0.4633", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= new SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 103, "n_pass": [355, 31, 21]}
{"time": "2021-02-14 02:08:05.252280", "score": "0.937", "loss": "0.4526", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = role.getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 101, "n_pass": [357, 32, 22]}
{"time": "2021-02-14 02:08:07.395084", "score": "0.9277", "loss": "0.5192", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource.getSourceKey()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 99, "n_pass": [375, 33, 23]}
{"time": "2021-02-14 02:08:08.769122", "score": "0.9225", "loss": "0.5519", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource()); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 97, "n_pass": [386, 34, 24]}
{"time": "2021-02-14 02:08:10.118469", "score": "0.9338", "loss": "0.4622", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); } roleSet.add(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 95, "n_pass": [387, 35, 25]}
{"time": "2021-02-14 02:08:11.483358", "score": "0.9219", "loss": "0.5695", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfo= SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); } roleSet(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 93, "n_pass": [391, 36, 26]}
{"time": "2021-02-14 02:08:15.192512", "score": "0.9345", "loss": "0.5013", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfoSimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); } roleSet(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 91, "n_pass": [416, 37, 27]}
{"time": "2021-02-14 02:08:17.317472", "score": "0.9207", "loss": "0.5729", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);authorizationInfoSimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 89, "n_pass": [446, 38, 28]}
{"time": "2021-02-14 02:08:21.081009", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for (Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 88, "n_pass": [470, 39, 29]}
{"time": "2021-02-14 02:08:34.934093", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role : roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 87, "n_pass": [596, 40, 30]}
{"time": "2021-02-14 02:08:36.310463", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role: roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 86, "n_pass": [600, 41, 31]}
{"time": "2021-02-14 02:08:37.690222", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles) { Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 85, "n_pass": [602, 42, 32]}
{"time": "2021-02-14 02:08:39.040020", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){ Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 84, "n_pass": [605, 43, 33]}
{"time": "2021-02-14 02:08:40.396836", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource> resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 83, "n_pass": [607, 44, 34]}
{"time": "2021-02-14 02:08:42.116836", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources = getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 82, "n_pass": [612, 45, 35]}
{"time": "2021-02-14 02:08:43.637477", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources= getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 81, "n_pass": [614, 46, 36]}
{"time": "2021-02-14 02:08:44.996988", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources(); for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 80, "n_pass": [616, 47, 37]}
{"time": "2021-02-14 02:08:46.334903", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for (Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 79, "n_pass": [621, 48, 38]}
{"time": "2021-02-14 02:08:47.681524", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource : resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 78, "n_pass": [623, 49, 39]}
{"time": "2021-02-14 02:08:49.031665", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource: resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 77, "n_pass": [628, 50, 40]}
{"time": "2021-02-14 02:08:50.397093", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources) {(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 76, "n_pass": [630, 51, 41]}
{"time": "2021-02-14 02:08:51.748705", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource); }(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 75, "n_pass": [633, 52, 42]}
{"time": "2021-02-14 02:08:53.105700", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role); }setStringPermissions(shiroPermissions);  }", "n_tokens": 74, "n_pass": [639, 53, 43]}
{"time": "2021-02-14 02:08:54.474070", "score": "0.9245", "loss": "0.5385", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}setStringPermissions(shiroPermissions);  }", "n_tokens": 73, "n_pass": [645, 54, 44]}
{"time": "2021-02-14 02:08:55.818674", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);  }", "n_tokens": 72, "n_pass": [647, 55, 45]}
{"time": "2021-02-14 02:08:57.192877", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions); }", "n_tokens": 71, "n_pass": [652, 56, 46]}
{"time": "2021-02-14 02:08:58.554537", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo(); User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);}", "n_tokens": 70, "n_pass": [653, 57, 47]}
{"time": "2021-02-14 02:09:02.271596", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo();User (); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);}", "n_tokens": 69, "n_pass": [675, 58, 48]}
{"time": "2021-02-14 02:09:03.645091", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo();User(); for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);}", "n_tokens": 68, "n_pass": [677, 59, 49]}
{"time": "2021-02-14 02:09:04.976373", "score": "0.8541", "loss": "0.9933", "code": "@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo();User();for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);}", "n_tokens": 67, "n_pass": [681, 60, 50]}

Minimal simplified code:
@Override AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals){(User);SimpleAuthorizationInfo();User();for(Role role:roles){Set<Resource>resources=getResources();for(Resource resource:resources){(resource);}(role);}(shiroPermissions);}

