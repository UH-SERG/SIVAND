
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_home_position_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }
predict, score, loss = pack, 0.9733019471168518, 0.06058833748102188

Trace of simplified code(s):
{"time": "2021-02-13 03:57:12.333798", "score": "0.9901", "loss": "0.069", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 212, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 03:57:13.730581", "score": "0.9774", "loss": "0.0726", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 199, "n_pass": [45, 2, 2]}
{"time": "2021-02-13 03:57:15.100630", "score": "0.9601", "loss": "0.1116", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; msgid = MAVLINK_MSG_ID_HOME_POSITION; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 186, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 03:57:16.467396", "score": "0.955", "loss": "0.0648", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packet.payload.putInt(longitude); packet.payload.putInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 173, "n_pass": [48, 4, 4]}
{"time": "2021-02-13 03:57:17.848757", "score": "0.9712", "loss": "0.1085", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } packet.payload.putFloat(approach_x); packet.payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 160, "n_pass": [50, 5, 5]}
{"time": "2021-02-13 03:57:19.213399", "score": "0.9661", "loss": "0.085", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } payload.putFloat(approach_y); packet.payload.putFloat(approach_z); return packet; }", "n_tokens": 146, "n_pass": [57, 6, 6]}
{"time": "2021-02-13 03:57:20.566205", "score": "0.9501", "loss": "0.0921", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.sysid = 255; ; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 132, "n_pass": [58, 7, 7]}
{"time": "2021-02-13 03:57:21.923288", "score": "0.9522", "loss": "0.1277", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet; packet.payload.putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 119, "n_pass": [61, 8, 8]}
{"time": "2021-02-13 03:57:23.285088", "score": "0.9377", "loss": "0.2024", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude); packetputInt(altitude); packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 113, "n_pass": [89, 9, 9]}
{"time": "2021-02-13 03:57:24.638359", "score": "0.9558", "loss": "0.1021", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);; packet.payload.putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 107, "n_pass": [91, 10, 10]}
{"time": "2021-02-13 03:57:25.980750", "score": "0.9593", "loss": "0.1387", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);putFloat(x); packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 101, "n_pass": [92, 11, 11]}
{"time": "2021-02-13 03:57:27.322580", "score": "0.9441", "loss": "0.142", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); } putFloat(approach_z); return packet; }", "n_tokens": 95, "n_pass": [93, 12, 12]}
{"time": "2021-02-13 03:57:28.690256", "score": "0.9354", "loss": "0.0824", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }  return packet; }", "n_tokens": 88, "n_pass": [103, 13, 13]}
{"time": "2021-02-13 03:57:30.042289", "score": "0.9503", "loss": "0.0619", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y); packet.payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 84, "n_pass": [143, 14, 14]}
{"time": "2021-02-13 03:57:31.768986", "score": "0.9522", "loss": "0.0605", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);payload.putFloat(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 81, "n_pass": [154, 15, 15]}
{"time": "2021-02-13 03:57:33.126168", "score": "0.9446", "loss": "0.0714", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);(z); for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 78, "n_pass": [155, 16, 16]}
{"time": "2021-02-13 03:57:34.456406", "score": "0.9468", "loss": "0.0701", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i = 0; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 75, "n_pass": [156, 17, 17]}
{"time": "2021-02-13 03:57:35.791026", "score": "0.9494", "loss": "0.064", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(q[i]); }packet; }", "n_tokens": 72, "n_pass": [160, 18, 18]}
{"time": "2021-02-13 03:57:37.123299", "score": "0.9615", "loss": "0.0556", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); }packet; }", "n_tokens": 68, "n_pass": [167, 19, 19]}
{"time": "2021-02-13 03:57:41.157746", "score": "0.9525", "loss": "0.0581", "code": "public MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 66, "n_pass": [230, 20, 20]}
{"time": "2021-02-13 03:57:42.508002", "score": "0.9525", "loss": "0.0581", "code": " MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 65, "n_pass": [231, 21, 21]}
{"time": "2021-02-13 03:57:43.836243", "score": "0.9525", "loss": "0.0581", "code": "MAVLinkPacket pack() { MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 64, "n_pass": [232, 22, 22]}
{"time": "2021-02-13 03:57:46.255447", "score": "0.9525", "loss": "0.0581", "code": "MAVLinkPacket pack(){ MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 63, "n_pass": [238, 23, 23]}
{"time": "2021-02-13 03:57:47.608736", "score": "0.9525", "loss": "0.0581", "code": "MAVLinkPacket pack(){MAVLinkPacket .putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 62, "n_pass": [240, 24, 24]}
{"time": "2021-02-13 03:57:48.955142", "score": "0.9525", "loss": "0.0581", "code": "MAVLinkPacket pack(){MAVLinkPacket.putInt(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 61, "n_pass": [242, 25, 25]}
{"time": "2021-02-13 03:57:50.273815", "score": "0.9573", "loss": "0.053", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);packet.payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 59, "n_pass": [243, 26, 26]}
{"time": "2021-02-13 03:57:51.607994", "score": "0.9544", "loss": "0.0566", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);payload.putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 57, "n_pass": [246, 27, 27]}
{"time": "2021-02-13 03:57:52.916519", "score": "0.9619", "loss": "0.0551", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (int i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 55, "n_pass": [247, 28, 28]}
{"time": "2021-02-13 03:57:54.253921", "score": "0.964", "loss": "0.0463", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (i ; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 53, "n_pass": [253, 29, 29]}
{"time": "2021-02-13 03:57:55.558027", "score": "0.9754", "loss": "0.0344", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < q.length; i++) { packet.payload.putFloat(); } }", "n_tokens": 51, "n_pass": [254, 30, 30]}
{"time": "2021-02-13 03:57:56.876819", "score": "0.9752", "loss": "0.0384", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i++) { packet.payload.putFloat(); } }", "n_tokens": 49, "n_pass": [258, 31, 31]}
{"time": "2021-02-13 03:57:58.188458", "score": "0.9737", "loss": "0.0403", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { packet.payload.putFloat(); } }", "n_tokens": 47, "n_pass": [261, 32, 32]}
{"time": "2021-02-13 03:57:59.501267", "score": "0.9716", "loss": "0.0535", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { payload.putFloat(); } }", "n_tokens": 45, "n_pass": [264, 33, 33]}
{"time": "2021-02-13 03:58:00.824578", "score": "0.9736", "loss": "0.0645", "code": "MAVLinkPacket pack(){MAVLinkPacket(latitude);putFloat(y);; for (; i < length; i) { putFloat(); } }", "n_tokens": 43, "n_pass": [265, 34, 34]}
{"time": "2021-02-13 03:58:03.217802", "score": "0.9474", "loss": "0.1174", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length; i) { putFloat(); } }", "n_tokens": 42, "n_pass": [276, 35, 35]}
{"time": "2021-02-13 03:58:04.523606", "score": "0.9554", "loss": "0.1411", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length;) { putFloat(); } }", "n_tokens": 40, "n_pass": [288, 36, 36]}
{"time": "2021-02-13 03:58:11.861457", "score": "0.9554", "loss": "0.1411", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length;){ putFloat(); } }", "n_tokens": 39, "n_pass": [346, 37, 37]}
{"time": "2021-02-13 03:58:13.167410", "score": "0.9554", "loss": "0.1411", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length;){putFloat(); } }", "n_tokens": 38, "n_pass": [348, 38, 38]}
{"time": "2021-02-13 03:58:14.479358", "score": "0.9554", "loss": "0.1411", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length;){putFloat();} }", "n_tokens": 37, "n_pass": [353, 39, 39]}
{"time": "2021-02-13 03:58:15.772624", "score": "0.9554", "loss": "0.1411", "code": "MAVLinkPacket pack(){(latitude);putFloat(y);; for (; i < length;){putFloat();}}", "n_tokens": 36, "n_pass": [355, 40, 40]}
{"time": "2021-02-13 03:58:18.493548", "score": "0.7998", "loss": "0.4628", "code": "MAVLinkPacket pack(){(latitude);(y);; for (; i < length;){putFloat();}}", "n_tokens": 35, "n_pass": [367, 41, 41]}
{"time": "2021-02-13 03:58:19.811373", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y); for (; i < length;){putFloat();}}", "n_tokens": 34, "n_pass": [371, 42, 42]}
{"time": "2021-02-13 03:58:21.106773", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y);for (; i < length;){putFloat();}}", "n_tokens": 33, "n_pass": [373, 43, 43]}
{"time": "2021-02-13 03:58:22.424136", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y);for(; i < length;){putFloat();}}", "n_tokens": 32, "n_pass": [375, 44, 44]}
{"time": "2021-02-13 03:58:23.726720", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y);for(;i < length;){putFloat();}}", "n_tokens": 31, "n_pass": [378, 45, 45]}
{"time": "2021-02-13 03:58:25.026342", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y);for(;i< length;){putFloat();}}", "n_tokens": 30, "n_pass": [380, 46, 46]}
{"time": "2021-02-13 03:58:26.328833", "score": "0.8216", "loss": "0.4165", "code": "MAVLinkPacket pack(){(latitude);(y);for(;i<length;){putFloat();}}", "n_tokens": 29, "n_pass": [382, 47, 47]}
{"time": "2021-02-13 03:58:29.087949", "score": "0.9208", "loss": "0.1137", "code": "MAVLinkPacket pack(){(latitude);(y);for(;ilength;){putFloat();}}", "n_tokens": 28, "n_pass": [411, 48, 48]}
{"time": "2021-02-13 03:58:30.386214", "score": "0.8885", "loss": "0.1552", "code": "MAVLinkPacket pack(){(latitude);(y);for(;i;){putFloat();}}", "n_tokens": 27, "n_pass": [412, 49, 49]}
{"time": "2021-02-13 03:58:33.209062", "score": "0.8629", "loss": "0.2491", "code": "MAVLinkPacket pack(){(latitude);(y);for(;;){putFloat();}}", "n_tokens": 26, "n_pass": [439, 50, 50]}

Minimal simplified code:
MAVLinkPacket pack(){(latitude);(y);for(;;){putFloat();}}

