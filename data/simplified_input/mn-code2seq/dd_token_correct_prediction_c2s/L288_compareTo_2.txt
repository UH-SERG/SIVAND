
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/gui/core/SortableAndSearchableWrapperTableModel_compareTo.java
method_name = compareTo
method_body = public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }
predict, score, loss = compareTo, 0.9878268241882324, 0.03254149481654167

Trace of simplified code(s):
{"time": "2021-02-13 13:17:14.439691", "score": "0.9887", "loss": "0.0308", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) return 0; if (m_Value == null) return -1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 171, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:17:15.830298", "score": "0.983", "loss": "0.0456", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_Value.getClass().equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 150, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 13:17:17.936280", "score": "0.9841", "loss": "0.0416", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue().getClass())) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 145, "n_pass": [92, 3, 3]}
{"time": "2021-02-13 13:17:19.298252", "score": "0.9878", "loss": "0.0377", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue()); else return m_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 139, "n_pass": [94, 4, 4]}
{"time": "2021-02-13 13:17:20.633664", "score": "0.9842", "loss": "0.046", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue().toString()); } }", "n_tokens": 133, "n_pass": [98, 5, 5]}
{"time": "2021-02-13 13:17:22.007013", "score": "0.991", "loss": "0.0286", "code": "public int compareTo(SortContainer o) { if ((m_Value == null) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 127, "n_pass": [101, 6, 6]}
{"time": "2021-02-13 13:17:23.354838", "score": "0.9912", "loss": "0.0264", "code": "public int compareTo(SortContainer o) { if ((m_Value) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 122, "n_pass": [107, 7, 7]}
{"time": "2021-02-13 13:17:25.104311", "score": "0.9924", "loss": "0.0232", "code": "public int compareTo(SortContainer o) { if ((m) || (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 120, "n_pass": [178, 8, 8]}
{"time": "2021-02-13 13:17:26.447317", "score": "0.9931", "loss": "0.0249", "code": "public int compareTo(SortContainer o) { if ((m)  (o.getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 118, "n_pass": [180, 9, 9]}
{"time": "2021-02-13 13:17:27.811374", "score": "0.9927", "loss": "0.0254", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value == o.getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 116, "n_pass": [182, 10, 10]}
{"time": "2021-02-13 13:17:29.166159", "score": "0.9917", "loss": "0.0283", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals(o.getValue)) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 113, "n_pass": [191, 11, 11]}
{"time": "2021-02-13 13:17:30.925108", "score": "0.9939", "loss": "0.0211", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) return m_Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 110, "n_pass": [202, 12, 12]}
{"time": "2021-02-13 13:17:32.273367", "score": "0.9902", "loss": "0.0342", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) _Value.compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 107, "n_pass": [204, 13, 13]}
{"time": "2021-02-13 13:17:33.630738", "score": "0.9932", "loss": "0.0227", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());_Value.toString().compareTo(o.getValue); } }", "n_tokens": 104, "n_pass": [205, 14, 14]}
{"time": "2021-02-13 13:17:34.970790", "score": "0.9935", "loss": "0.0225", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(o.getValue); } }", "n_tokens": 101, "n_pass": [209, 15, 15]}
{"time": "2021-02-13 13:17:36.321813", "score": "0.9942", "loss": "0.0211", "code": "public int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 98, "n_pass": [212, 16, 16]}
{"time": "2021-02-13 13:17:37.658240", "score": "0.9942", "loss": "0.0211", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value ==getValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 96, "n_pass": [215, 17, 17]}
{"time": "2021-02-13 13:17:39.364708", "score": "0.9933", "loss": "0.0221", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_ValuegetValue()) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 93, "n_pass": [233, 18, 18]}
{"time": "2021-02-13 13:17:40.691751", "score": "0.991", "loss": "0.0337", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if (m_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 90, "n_pass": [234, 19, 19]}
{"time": "2021-02-13 13:17:48.463000", "score": "0.991", "loss": "0.0337", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(m_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 89, "n_pass": [337, 20, 20]}
{"time": "2021-02-13 13:17:49.785733", "score": "0.9915", "loss": "0.0315", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(_Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 88, "n_pass": [339, 21, 21]}
{"time": "2021-02-13 13:17:51.110129", "score": "0.9915", "loss": "0.0315", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value) 1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 87, "n_pass": [340, 22, 22]}
{"time": "2021-02-13 13:17:52.436736", "score": "0.9915", "loss": "0.0315", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value)1; else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 86, "n_pass": [343, 23, 23]}
{"time": "2021-02-13 13:17:53.751441", "score": "0.9932", "loss": "0.0247", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value); else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 85, "n_pass": [344, 24, 24]}
{"time": "2021-02-13 13:17:55.107834", "score": "0.9932", "loss": "0.0247", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);else return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 84, "n_pass": [346, 25, 25]}
{"time": "2021-02-13 13:17:56.424622", "score": "0.9943", "loss": "0.0208", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value); return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 83, "n_pass": [347, 26, 26]}
{"time": "2021-02-13 13:17:57.794587", "score": "0.9943", "loss": "0.0208", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return +1; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 82, "n_pass": [348, 27, 27]}
{"time": "2021-02-13 13:17:59.499881", "score": "0.9863", "loss": "0.0463", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } else { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 80, "n_pass": [350, 28, 28]}
{"time": "2021-02-13 13:18:00.820992", "score": "0.9864", "loss": "0.0466", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } { if (m_.equals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 78, "n_pass": [353, 29, 29]}
{"time": "2021-02-13 13:18:02.148779", "score": "0.988", "loss": "0.0437", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals()) compareTo(o.getValue());toString().compareTo(); } }", "n_tokens": 76, "n_pass": [357, 30, 30]}
{"time": "2021-02-13 13:18:03.450410", "score": "0.9774", "loss": "0.0853", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o.getValue());toString().compareTo(); } }", "n_tokens": 74, "n_pass": [360, 31, 31]}
{"time": "2021-02-13 13:18:04.766389", "score": "0.9682", "loss": "0.1162", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o());toString().compareTo(); } }", "n_tokens": 72, "n_pass": [362, 32, 32]}
{"time": "2021-02-13 13:18:06.074941", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o) { if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 70, "n_pass": [363, 33, 33]}
{"time": "2021-02-13 13:18:08.117460", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){ if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 69, "n_pass": [379, 34, 34]}
{"time": "2021-02-13 13:18:09.448762", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if ((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 68, "n_pass": [381, 35, 35]}
{"time": "2021-02-13 13:18:10.777072", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)  (getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 67, "n_pass": [383, 36, 36]}
{"time": "2021-02-13 13:18:12.083854", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m) (getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 66, "n_pass": [388, 37, 37]}
{"time": "2021-02-13 13:18:13.447089", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)(getValue() == null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 65, "n_pass": [389, 38, 38]}
{"time": "2021-02-13 13:18:14.785967", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)(getValue()== null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 64, "n_pass": [394, 39, 39]}
{"time": "2021-02-13 13:18:16.837489", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)) { if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 63, "n_pass": [397, 40, 40]}
{"time": "2021-02-13 13:18:18.146902", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){ if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 62, "n_pass": [401, 41, 41]}
{"time": "2021-02-13 13:18:19.464046", "score": "0.9574", "loss": "0.1661", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){if(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 61, "n_pass": [403, 42, 42]}
{"time": "2021-02-13 13:18:20.779820", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);return ; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 60, "n_pass": [404, 43, 43]}
{"time": "2021-02-13 13:18:22.199646", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);; } { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 58, "n_pass": [409, 44, 44]}
{"time": "2021-02-13 13:18:23.514788", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo(); } }", "n_tokens": 56, "n_pass": [410, 45, 45]}
{"time": "2021-02-13 13:18:28.996803", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo();} }", "n_tokens": 55, "n_pass": [496, 46, 46]}
{"time": "2021-02-13 13:18:30.342446", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);} { if (mequals())(o);toString().compareTo();}}", "n_tokens": 54, "n_pass": [497, 47, 47]}
{"time": "2021-02-13 13:18:33.127714", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{ if (mequals())(o);toString().compareTo();}}", "n_tokens": 53, "n_pass": [528, 48, 48]}
{"time": "2021-02-13 13:18:34.450819", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if (mequals())(o);toString().compareTo();}}", "n_tokens": 52, "n_pass": [530, 49, 49]}
{"time": "2021-02-13 13:18:35.793390", "score": "0.901", "loss": "0.4089", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if(mequals())(o);toString().compareTo();}}", "n_tokens": 51, "n_pass": [532, 50, 50]}
{"time": "2021-02-13 13:18:37.108618", "score": "0.9338", "loss": "0.2816", "code": "int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if(equals())(o);toString().compareTo();}}", "n_tokens": 50, "n_pass": [534, 51, 51]}

Minimal simplified code:
int compareTo(SortContainer o){if((m)(getValue()==null)){(Value);}{if(equals())(o);toString().compareTo();}}

