
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/rakam-io__rakam/rakam-spi/src/main/java/org/rakam/plugin/stream/CollectionStreamQuery_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } CollectionStreamQuery that = (CollectionStreamQuery) o; if (!collection.equals(that.collection)) { return false; } return filter != null ? filter.equals(that.filter) : that.filter == null; }
predict, score, loss = equals, 0.9963706731796265, 0.004369539674371481

Trace of simplified code(s):
{"time": "2021-02-13 19:21:27.468141", "score": "0.9963", "loss": "0.0045", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false; } CollectionStreamQuery that = (CollectionStreamQuery) o; if (!collection.equals(that.collection)) { return false; } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 141, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:21:28.803550", "score": "0.9945", "loss": "0.0066", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass() != o.getClass()) { return false;  } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 106, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 19:21:30.184782", "score": "0.993", "loss": "0.0083", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter != null ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 97, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 19:21:31.536914", "score": "0.9874", "loss": "0.0158", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 92, "n_pass": [84, 4, 4]}
{"time": "2021-02-13 19:21:32.903919", "score": "0.9645", "loss": "0.0496", "code": " boolean equals(Object o) { if (this == o) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 88, "n_pass": [90, 5, 5]}
{"time": "2021-02-13 19:21:34.240875", "score": "0.7343", "loss": "0.4615", "code": " boolean equals(Object o) { if (thiso) { return true; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 84, "n_pass": [95, 6, 6]}
{"time": "2021-02-13 19:21:35.563980", "score": "0.6878", "loss": "0.5314", "code": " boolean equals(Object o) { if (thiso) {; } if (o == null || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 80, "n_pass": [97, 7, 7]}
{"time": "2021-02-13 19:21:36.886734", "score": "0.5854", "loss": "0.7564", "code": " boolean equals(Object o) { if (thiso) {; } if (onull || getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 76, "n_pass": [100, 8, 8]}
{"time": "2021-02-13 19:21:38.895559", "score": "0.7618", "loss": "0.391", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass()) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 74, "n_pass": [152, 9, 9]}
{"time": "2021-02-13 19:21:40.219423", "score": "0.7699", "loss": "0.3803", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { return false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 72, "n_pass": [154, 10, 10]}
{"time": "2021-02-13 19:21:41.544601", "score": "0.7323", "loss": "0.4446", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { false;  } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 70, "n_pass": [157, 11, 11]}
{"time": "2021-02-13 19:21:42.873855", "score": "0.6401", "loss": "0.6222", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) {   } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 68, "n_pass": [158, 12, 12]}
{"time": "2021-02-13 19:21:44.195250", "score": "0.6401", "loss": "0.6222", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { } return filter ? filter.equals(that.filter) : that.filter == null; }", "n_tokens": 66, "n_pass": [159, 13, 13]}
{"time": "2021-02-13 19:21:45.870823", "score": "0.33", "loss": "1.497", "code": " boolean equals(Object o) { if (thiso) {; } if (o|| getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 63, "n_pass": [165, 14, 14]}
{"time": "2021-02-13 19:21:48.877040", "score": "0.33", "loss": "1.497", "code": " boolean equals(Object o) { if (thiso) {} if (o|| getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 61, "n_pass": [181, 16, 15]}
{"time": "2021-02-13 19:21:57.568758", "score": "0.33", "loss": "1.497", "code": " boolean equals(Object o) { if (thiso) {}if (o|| getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 60, "n_pass": [264, 18, 16]}
{"time": "2021-02-13 19:21:58.883244", "score": "0.33", "loss": "1.497", "code": " boolean equals(Object o) { if (thiso) {}if(o|| getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 59, "n_pass": [266, 19, 17]}
{"time": "2021-02-13 19:22:00.183744", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o| getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 58, "n_pass": [269, 20, 18]}
{"time": "2021-02-13 19:22:01.490972", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass) { } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 57, "n_pass": [271, 21, 19]}
{"time": "2021-02-13 19:22:02.798780", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){ } return filter ? filter.equals() : that.filter == null; }", "n_tokens": 56, "n_pass": [274, 22, 20]}
{"time": "2021-02-13 19:22:04.097638", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){} return filter ? filter.equals() : that.filter == null; }", "n_tokens": 55, "n_pass": [276, 23, 21]}
{"time": "2021-02-13 19:22:05.412920", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){}return filter ? filter.equals() : that.filter == null; }", "n_tokens": 54, "n_pass": [278, 24, 22]}
{"time": "2021-02-13 19:22:07.446872", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){}return filter? filter.equals() : that.filter == null; }", "n_tokens": 53, "n_pass": [282, 25, 23]}
{"time": "2021-02-13 19:22:08.779199", "score": "0.3792", "loss": "1.3555", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){}return filter?filter.equals() : that.filter == null; }", "n_tokens": 52, "n_pass": [284, 26, 24]}
{"time": "2021-02-13 19:22:11.396541", "score": "0.4112", "loss": "1.3514", "code": " boolean equals(Object o) { if (thiso) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 50, "n_pass": [292, 28, 25]}
{"time": "2021-02-13 19:22:13.429094", "score": "0.4112", "loss": "1.3514", "code": "boolean equals(Object o) { if (thiso) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 49, "n_pass": [297, 29, 26]}
{"time": "2021-02-13 19:22:15.463163", "score": "0.4112", "loss": "1.3514", "code": "boolean equals(Object o){ if (thiso) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 48, "n_pass": [306, 30, 27]}
{"time": "2021-02-13 19:22:16.768629", "score": "0.4112", "loss": "1.3514", "code": "boolean equals(Object o){if (thiso) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 47, "n_pass": [308, 31, 28]}
{"time": "2021-02-13 19:22:18.091590", "score": "0.4112", "loss": "1.3514", "code": "boolean equals(Object o){if(thiso) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 46, "n_pass": [310, 32, 29]}
{"time": "2021-02-13 19:22:19.402030", "score": "0.6026", "loss": "0.8359", "code": "boolean equals(Object o){if(o) {}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 45, "n_pass": [312, 33, 30]}
{"time": "2021-02-13 19:22:20.727213", "score": "0.6026", "loss": "0.8359", "code": "boolean equals(Object o){if(o){}if(o|getClass){}return filter?filter.equals() : that == null; }", "n_tokens": 44, "n_pass": [315, 34, 31]}
{"time": "2021-02-13 19:22:22.043551", "score": "0.4923", "loss": "1.0406", "code": "boolean equals(Object o){if(o){}if(ogetClass){}return filter?filter.equals() : that == null; }", "n_tokens": 43, "n_pass": [321, 35, 32]}
{"time": "2021-02-13 19:22:23.368301", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals() : that == null; }", "n_tokens": 42, "n_pass": [322, 36, 33]}
{"time": "2021-02-13 19:22:30.182413", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals(): that == null; }", "n_tokens": 41, "n_pass": [371, 38, 34]}
{"time": "2021-02-13 19:22:31.494178", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals():that == null; }", "n_tokens": 40, "n_pass": [372, 39, 35]}
{"time": "2021-02-13 19:22:32.817380", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals():that== null; }", "n_tokens": 39, "n_pass": [374, 40, 36]}
{"time": "2021-02-13 19:22:34.848711", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals():that==null; }", "n_tokens": 38, "n_pass": [377, 41, 37]}
{"time": "2021-02-13 19:22:36.181633", "score": "0.6289", "loss": "0.7087", "code": "boolean equals(Object o){if(o){}if(o){}return filter?filter.equals():that==null;}", "n_tokens": 37, "n_pass": [380, 42, 38]}

Minimal simplified code:
boolean equals(Object o){if(o){}if(o){}return filter?filter.equals():that==null;}

