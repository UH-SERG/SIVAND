
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/transport/http/src/test/java/org/kaazing/gateway/transport/http/security/auth/challenge/TokenHttpChallengeFactoryTest_setUp.java
method_name = setUp
method_body = @Before public void setUp() throws Exception { factory = new TokenHttpChallengeFactory(); context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }
predict, score, loss = setUp, 0.929188072681427, 0.1564357578754425

Trace of simplified code(s):
{"time": "2021-02-14 02:55:27.107876", "score": "0.9292", "loss": "0.1564", "code": "@Before public void setUp() throws Exception { factory = new TokenHttpChallengeFactory(); context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:55:29.161431", "score": "0.9414", "loss": "0.127", "code": "@Before public void setUp() throws Exception { factory = context = new Mockery() { { setImposteriser(ClassImposteriser.INSTANCE); } }; }", "n_tokens": 49, "n_pass": [23, 2, 2]}
{"time": "2021-02-14 02:55:30.510890", "score": "0.937", "loss": "0.1372", "code": "@Before public void setUp() throws Exception { factory = context = new Mockery() { {  } }; }", "n_tokens": 42, "n_pass": [26, 3, 3]}
{"time": "2021-02-14 02:55:32.245822", "score": "0.9326", "loss": "0.1715", "code": "public void setUp() throws Exception { factory = context = new Mockery() { {  } }; }", "n_tokens": 39, "n_pass": [47, 4, 4]}
{"time": "2021-02-14 02:55:33.954547", "score": "0.9284", "loss": "0.202", "code": "public void setUp() throws Exception { factory = new Mockery() { {  } }; }", "n_tokens": 35, "n_pass": [53, 5, 5]}
{"time": "2021-02-14 02:55:36.641545", "score": "0.9284", "loss": "0.202", "code": "public void setUp() throws Exception { factory = new Mockery() { {} }; }", "n_tokens": 33, "n_pass": [90, 6, 6]}
{"time": "2021-02-14 02:55:37.946510", "score": "0.9284", "loss": "0.202", "code": " void setUp() throws Exception { factory = new Mockery() { {} }; }", "n_tokens": 32, "n_pass": [93, 7, 7]}
{"time": "2021-02-14 02:55:39.265798", "score": "0.9284", "loss": "0.202", "code": "void setUp() throws Exception { factory = new Mockery() { {} }; }", "n_tokens": 31, "n_pass": [94, 8, 8]}
{"time": "2021-02-14 02:55:45.292405", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception { factory = new Mockery() { {} }; }", "n_tokens": 30, "n_pass": [142, 9, 9]}
{"time": "2021-02-14 02:55:46.621207", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{ factory = new Mockery() { {} }; }", "n_tokens": 29, "n_pass": [145, 10, 10]}
{"time": "2021-02-14 02:55:47.976897", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory = new Mockery() { {} }; }", "n_tokens": 28, "n_pass": [147, 11, 11]}
{"time": "2021-02-14 02:55:49.308728", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory= new Mockery() { {} }; }", "n_tokens": 27, "n_pass": [149, 12, 12]}
{"time": "2021-02-14 02:55:50.628744", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory=new Mockery() { {} }; }", "n_tokens": 26, "n_pass": [151, 13, 13]}
{"time": "2021-02-14 02:55:51.959382", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory=new Mockery(){ {} }; }", "n_tokens": 25, "n_pass": [157, 14, 14]}
{"time": "2021-02-14 02:55:53.286254", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory=new Mockery(){{} }; }", "n_tokens": 24, "n_pass": [159, 15, 15]}
{"time": "2021-02-14 02:55:54.625527", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory=new Mockery(){{}}; }", "n_tokens": 23, "n_pass": [162, 16, 16]}
{"time": "2021-02-14 02:55:55.922763", "score": "0.9284", "loss": "0.202", "code": "void setUp()throws Exception{factory=new Mockery(){{}};}", "n_tokens": 22, "n_pass": [165, 17, 17]}

Minimal simplified code:
void setUp()throws Exception{factory=new Mockery(){{}};}

