
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/drewnoakes__metadata-extractor/Source/com/drew/metadata/exif/makernotes/LeicaMakernoteDescriptor_getDescription.java
method_name = getDescription
method_body = @Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE: return getUserProfileDescription(); case TAG_WHITE_BALANCE: return getWhiteBalanceDescription(); case TAG_EXTERNAL_SENSOR_BRIGHTNESS_VALUE: return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LV: return getMeasuredLvDescription(); case TAG_APPROXIMATE_F_NUMBER: return getApproximateFNumberDescription(); case TAG_CAMERA_TEMPERATURE: return getCameraTemperatureDescription(); case TAG_WB_RED_LEVEL: case TAG_WB_BLUE_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }
predict, score, loss = getDescription, 0.9983797073364258, 0.012857540510594845

Trace of simplified code(s):
{"time": "2021-02-13 21:10:38.662569", "score": "0.9984", "loss": "0.0129", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE: return getUserProfileDescription(); case TAG_WHITE_BALANCE: return getWhiteBalanceDescription(); case TAG_EXTERNAL_SENSOR_BRIGHTNESS_VALUE: return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LV: return getMeasuredLvDescription(); case TAG_APPROXIMATE_F_NUMBER: return getApproximateFNumberDescription(); case TAG_CAMERA_TEMPERATURE: return getCameraTemperatureDescription(); case TAG_WB_RED_LEVEL: case TAG_WB_BLUE_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 199, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:10:40.011664", "score": "0.9988", "loss": "0.0058", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE: return getUserProfileDescription(); case TAG_WHITE_BALANCE: return getWhiteBalanceDescription(); case TAG_EXTERNAL_SENSOR_BRIGHTNESS_VALUE: return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LV_LEVEL: case TAG_WB_BLUE_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 149, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 21:10:41.366361", "score": "0.9989", "loss": "0.005", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE: TAG_EXTERNAL_SENSOR_BRIGHTNESS_VALUE: return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LV_LEVEL: case TAG_WB_BLUE_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 124, "n_pass": [23, 3, 3]}
{"time": "2021-02-13 21:10:42.730437", "score": "0.999", "loss": "0.0054", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LV_LEVEL: case TAG_WB_BLUE_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 112, "n_pass": [38, 4, 4]}
{"time": "2021-02-13 21:10:44.065727", "score": "0.9991", "loss": "0.0046", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED_LEVEL: case TAG_WB_GREEN_LEVEL: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 99, "n_pass": [40, 5, 5]}
{"time": "2021-02-13 21:10:45.399067", "score": "0.9992", "loss": "0.0039", "code": "@Override @Nullable public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 86, "n_pass": [41, 6, 6]}
{"time": "2021-02-13 21:10:46.741226", "score": "0.9984", "loss": "0.0142", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:return getExternalSensorBrightnessValueDescription(); case TAG_MEASURED: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 80, "n_pass": [67, 7, 7]}
{"time": "2021-02-13 21:10:48.075083", "score": "0.997", "loss": "0.0232", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE: case TAG_MEASURED: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 74, "n_pass": [74, 8, 8]}
{"time": "2021-02-13 21:10:49.413185", "score": "0.9954", "loss": "0.0364", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:TAG_MEASURED: return getSimpleRational(tagType); default: return super.getDescription(tagType); } }", "n_tokens": 71, "n_pass": [111, 9, 9]}
{"time": "2021-02-13 21:10:50.751192", "score": "0.9963", "loss": "0.0279", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:TAG_MEASURED: return getSimpleRational(tagType); return super.getDescription(tagType); } }", "n_tokens": 68, "n_pass": [115, 10, 10]}
{"time": "2021-02-13 21:10:52.068231", "score": "0.8964", "loss": "0.5654", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription(); case TAG_USER_PROFILE:TAG_MEASURED: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 65, "n_pass": [116, 11, 11]}
{"time": "2021-02-13 21:10:56.440205", "score": "0.9482", "loss": "0.3474", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription();TAG_USER_PROFILE:TAG_MEASURED: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 62, "n_pass": [131, 14, 12]}
{"time": "2021-02-13 21:10:57.766807", "score": "0.9482", "loss": "0.3474", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription();_PROFILE:TAG_MEASURED: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 59, "n_pass": [132, 15, 13]}
{"time": "2021-02-13 21:10:59.092138", "score": "0.8688", "loss": "0.7236", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription();TAG_MEASURED: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 56, "n_pass": [133, 16, 14]}
{"time": "2021-02-13 21:11:05.221956", "score": "0.8416", "loss": "0.9129", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG_MEASURED: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 54, "n_pass": [189, 19, 15]}
{"time": "2021-02-13 21:11:06.575905", "score": "0.8416", "loss": "0.9129", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: return getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 52, "n_pass": [191, 20, 16]}
{"time": "2021-02-13 21:11:07.899780", "score": "0.9741", "loss": "0.2034", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType);super.getDescription(tagType); } }", "n_tokens": 50, "n_pass": [193, 21, 17]}
{"time": "2021-02-13 21:11:09.216051", "score": "0.7119", "loss": "1.9294", "code": "public String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 48, "n_pass": [196, 22, 18]}
{"time": "2021-02-13 21:11:10.524558", "score": "0.7119", "loss": "1.9294", "code": " String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 47, "n_pass": [202, 23, 19]}
{"time": "2021-02-13 21:11:11.862549", "score": "0.7119", "loss": "1.9294", "code": "String getDescription(int tagType) { switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 46, "n_pass": [203, 24, 20]}
{"time": "2021-02-13 21:11:14.244271", "score": "0.7119", "loss": "1.9294", "code": "String getDescription(int tagType){ switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 45, "n_pass": [212, 25, 21]}
{"time": "2021-02-13 21:11:15.580916", "score": "0.7119", "loss": "1.9294", "code": "String getDescription(int tagType){switch(tagType) { case TAG_QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 44, "n_pass": [214, 26, 22]}
{"time": "2021-02-13 21:11:16.886018", "score": "0.7071", "loss": "1.9268", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: return getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 42, "n_pass": [221, 27, 23]}
{"time": "2021-02-13 21:11:18.193343", "score": "0.8216", "loss": "1.4772", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: getQualityDescription;TAG: getSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 40, "n_pass": [223, 28, 24]}
{"time": "2021-02-13 21:11:22.171384", "score": "0.8336", "loss": "1.3906", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription(tagType); } }", "n_tokens": 38, "n_pass": [226, 31, 25]}
{"time": "2021-02-13 21:11:29.835627", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription(); } }", "n_tokens": 37, "n_pass": [282, 34, 26]}
{"time": "2021-02-13 21:11:31.185653", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription();} }", "n_tokens": 36, "n_pass": [285, 35, 27]}
{"time": "2021-02-13 21:11:32.488444", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType) { case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription();}}", "n_tokens": 35, "n_pass": [287, 36, 28]}
{"time": "2021-02-13 21:11:34.862831", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType){ case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription();}}", "n_tokens": 34, "n_pass": [302, 37, 29]}
{"time": "2021-02-13 21:11:36.165674", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType){case QUALITY: getQualityDescription;TAGgetSimpleRational(tagType).getDescription();}}", "n_tokens": 33, "n_pass": [304, 38, 30]}
{"time": "2021-02-13 21:11:37.470225", "score": "0.7729", "loss": "1.5316", "code": "String getDescription(int tagType){switch(tagType){case QUALITY:getQualityDescription;TAGgetSimpleRational(tagType).getDescription();}}", "n_tokens": 32, "n_pass": [309, 39, 31]}
{"time": "2021-02-13 21:11:40.084933", "score": "0.7389", "loss": "1.6632", "code": "String getDescription(int tagType){switch(tagType){case QUALITY:getQualityDescriptionTAGgetSimpleRational(tagType).getDescription();}}", "n_tokens": 31, "n_pass": [311, 41, 32]}

Minimal simplified code:
String getDescription(int tagType){switch(tagType){case QUALITY:getQualityDescriptionTAGgetSimpleRational(tagType).getDescription();}}

