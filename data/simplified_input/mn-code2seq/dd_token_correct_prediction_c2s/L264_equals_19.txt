
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/tribes/UniqueId_equals.java
method_name = equals
method_body = @Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }
predict, score, loss = equals, 0.8640864491462708, 0.187331885099411

Trace of simplified code(s):
{"time": "2021-02-13 12:51:30.185879", "score": "0.9542", "loss": "0.0677", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (this.id == null && uid.id != null) result = false; else if (this.id != null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 181, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:51:31.539643", "score": "0.7031", "loss": "0.5015", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = true; else if (thisuid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 136, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 12:51:32.890582", "score": "0.813", "loss": "0.2553", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null) result = false; else result = Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 113, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 12:51:34.237507", "score": "0.8215", "loss": "0.2626", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if (this.id == null && uid.id == null)  Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 101, "n_pass": [41, 4, 4]}
{"time": "2021-02-13 12:51:35.578965", "score": "0.6073", "loss": "0.6877", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if ( uid.id == null)  Arrays.equals(this.id, uid.id); } return result; }", "n_tokens": 90, "n_pass": [49, 5, 5]}
{"time": "2021-02-13 12:51:36.930811", "score": "0.4061", "loss": "1.2505", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); if (result) { UniqueId uid = (UniqueId) other; if ( uid.id == null)  Arrays.equals(thisid); } return result; }", "n_tokens": 84, "n_pass": [77, 6, 6]}
{"time": "2021-02-13 12:51:39.606444", "score": "0.3353", "loss": "1.5502", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid = (UniqueId) other; if ( uid.id == null)  Arrays.equals(thisid); } return result; }", "n_tokens": 78, "n_pass": [86, 8, 7]}
{"time": "2021-02-13 12:51:42.317440", "score": "0.375", "loss": "1.4561", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uid.id == null)  Arrays.equals(thisid); } return result; }", "n_tokens": 75, "n_pass": [132, 10, 8]}
{"time": "2021-02-13 12:51:43.653305", "score": "0.3884", "loss": "1.3841", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uid== null)  Arrays.equals(thisid); } return result; }", "n_tokens": 72, "n_pass": [136, 11, 9]}
{"time": "2021-02-13 12:51:44.976940", "score": "0.4373", "loss": "1.3654", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull)  Arrays.equals(thisid); } return result; }", "n_tokens": 69, "n_pass": [137, 12, 10]}
{"time": "2021-02-13 12:51:46.290682", "score": "0.5202", "loss": "1.1346", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } return result; }", "n_tokens": 66, "n_pass": [139, 13, 11]}
{"time": "2021-02-13 12:51:47.617100", "score": "0.5502", "loss": "0.9314", "code": "@Override public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 63, "n_pass": [143, 14, 12]}
{"time": "2021-02-13 12:51:48.926432", "score": "0.4891", "loss": "1.26", "code": " public boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 61, "n_pass": [145, 15, 13]}
{"time": "2021-02-13 12:51:50.263667", "score": "0.4891", "loss": "1.26", "code": " boolean equals(Object other) { boolean result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 59, "n_pass": [146, 16, 14]}
{"time": "2021-02-13 12:51:51.956061", "score": "0.286", "loss": "1.8053", "code": " boolean equals(Object other) {result = (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 56, "n_pass": [152, 17, 15]}
{"time": "2021-02-13 12:51:53.295759", "score": "0.3202", "loss": "1.6921", "code": " boolean equals(Object other) { (other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 53, "n_pass": [153, 18, 16]}
{"time": "2021-02-13 12:52:00.640717", "score": "0.3202", "loss": "1.6921", "code": " boolean equals(Object other) {(other instanceof UniqueId); { UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 52, "n_pass": [212, 20, 17]}
{"time": "2021-02-13 12:52:01.966281", "score": "0.3202", "loss": "1.6921", "code": " boolean equals(Object other) {(other instanceof UniqueId);{ UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 51, "n_pass": [221, 21, 18]}
{"time": "2021-02-13 12:52:03.295347", "score": "0.3202", "loss": "1.6921", "code": " boolean equals(Object other) {(other instanceof UniqueId);{UniqueId uid =  other; if ( uidnull) equals(thisid); } ; }", "n_tokens": 50, "n_pass": [223, 22, 19]}
{"time": "2021-02-13 12:52:07.649000", "score": "0.3672", "loss": "1.4838", "code": " boolean equals(Object other) {(other instanceof UniqueId);{UniqueId uid =  other; if ( uidnull) equals(); } ; }", "n_tokens": 48, "n_pass": [234, 25, 20]}
{"time": "2021-02-13 12:52:08.959769", "score": "0.3672", "loss": "1.4838", "code": " boolean equals(Object other) {(other instanceof UniqueId);{UniqueId uid =  other; if ( uidnull) equals(); } }", "n_tokens": 46, "n_pass": [237, 26, 21]}
{"time": "2021-02-13 12:52:10.278220", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other) {(other instanceof UniqueId);{UniqueId uid =  other; if ( uidnull) equals(); } }", "n_tokens": 45, "n_pass": [239, 27, 22]}
{"time": "2021-02-13 12:52:12.331924", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid =  other; if ( uidnull) equals(); } }", "n_tokens": 44, "n_pass": [248, 28, 23]}
{"time": "2021-02-13 12:52:25.310398", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=  other; if ( uidnull) equals(); } }", "n_tokens": 43, "n_pass": [309, 34, 24]}
{"time": "2021-02-13 12:52:26.658823", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid= other; if ( uidnull) equals(); } }", "n_tokens": 42, "n_pass": [311, 35, 25]}
{"time": "2021-02-13 12:52:27.988246", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other; if ( uidnull) equals(); } }", "n_tokens": 41, "n_pass": [312, 36, 26]}
{"time": "2021-02-13 12:52:29.313394", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if ( uidnull) equals(); } }", "n_tokens": 40, "n_pass": [315, 37, 27]}
{"time": "2021-02-13 12:52:30.999307", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if( uidnull) equals(); } }", "n_tokens": 39, "n_pass": [317, 38, 28]}
{"time": "2021-02-13 12:52:32.352178", "score": "0.3672", "loss": "1.4838", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if(uidnull) equals(); } }", "n_tokens": 38, "n_pass": [319, 39, 29]}
{"time": "2021-02-13 12:52:33.690187", "score": "0.4112", "loss": "1.337", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if(null) equals(); } }", "n_tokens": 37, "n_pass": [320, 40, 30]}
{"time": "2021-02-13 12:52:35.007082", "score": "0.4112", "loss": "1.337", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if(null)equals(); } }", "n_tokens": 36, "n_pass": [323, 41, 31]}
{"time": "2021-02-13 12:52:36.337759", "score": "0.4112", "loss": "1.337", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if(null)equals();} }", "n_tokens": 35, "n_pass": [328, 42, 32]}
{"time": "2021-02-13 12:52:37.665078", "score": "0.4112", "loss": "1.337", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid=other;if(null)equals();}}", "n_tokens": 34, "n_pass": [330, 43, 33]}
{"time": "2021-02-13 12:52:43.649644", "score": "0.4832", "loss": "1.1101", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uidother;if(null)equals();}}", "n_tokens": 33, "n_pass": [353, 47, 34]}
{"time": "2021-02-13 12:52:44.965096", "score": "0.4833", "loss": "1.092", "code": "boolean equals(Object other){(other instanceof UniqueId);{UniqueId uid;if(null)equals();}}", "n_tokens": 32, "n_pass": [354, 48, 35]}
{"time": "2021-02-13 12:52:47.014018", "score": "0.3231", "loss": "1.6783", "code": "boolean equals(Object other){(other instanceof UniqueId);{ uid;if(null)equals();}}", "n_tokens": 31, "n_pass": [384, 49, 36]}
{"time": "2021-02-13 12:52:48.318514", "score": "0.3231", "loss": "1.6783", "code": "boolean equals(Object other){(other instanceof UniqueId);{uid;if(null)equals();}}", "n_tokens": 30, "n_pass": [385, 50, 37]}
{"time": "2021-02-13 12:52:49.614486", "score": "0.6075", "loss": "0.7627", "code": "boolean equals(Object other){(other instanceof UniqueId);{;if(null)equals();}}", "n_tokens": 29, "n_pass": [386, 51, 38]}
{"time": "2021-02-13 12:52:50.906487", "score": "0.6075", "loss": "0.7627", "code": "boolean equals(Object other){(other instanceof UniqueId);{if(null)equals();}}", "n_tokens": 28, "n_pass": [387, 52, 39]}

Minimal simplified code:
boolean equals(Object other){(other instanceof UniqueId);{if(null)equals();}}

