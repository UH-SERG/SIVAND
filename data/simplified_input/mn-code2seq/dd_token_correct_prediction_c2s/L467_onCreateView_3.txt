
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/TaskListFragment_onCreateView.java
method_name = onCreateView
method_body = @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R.layout.fragment_expandable_task_list, container, false); mExpandableListView = (RetainExpandableListView) rootView.findViewById(android.R.id.list); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout.task_list_group, mExpandableListView, false)); } if (mGroupDescriptor == null) { loadGroupDescriptor(); } this.prepareReload(); if (mSavedExpandedGroups != null) { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }
predict, score, loss = onCreateView, 0.9936436414718628, 0.027199609205126762

Trace of simplified code(s):
{"time": "2021-02-13 16:23:47.308050", "score": "0.9951", "loss": "0.0202", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R.layout.fragment_expandable_task_list, container, false); mExpandableListView = (RetainExpandableListView) rootView.findViewById(android.R.id.list); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout.task_list_group, mExpandableListView, false)); } if (mGroupDescriptor == null) { loadGroupDescriptor(); } this.prepareReload(); if (mSavedExpandedGroups != null) { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 205, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:23:48.721690", "score": "0.9958", "loss": "0.018", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R.layout.fragment_expandable_task_list, container); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout.task_list_group, mExpandableListView, false)); } if (mGroupDescriptor == null) { loadGroupDescriptor(); } this.prepareReload(); if (mSavedExpandedGroups != null) { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 180, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 16:23:50.104394", "score": "0.9916", "loss": "0.0336", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R.layout.fragment_expandable_task_list, container); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout.task_list_group, mExpandableListView, false)); } if (mGroupDescriptor == null)  { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 154, "n_pass": [25, 3, 3]}
{"time": "2021-02-13 16:23:51.819095", "score": "0.9924", "loss": "0.03", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout.task_list_group, mExpandableListView, false)); } if (mGroupDescriptor == null)  { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 141, "n_pass": [51, 4, 4]}
{"time": "2021-02-13 16:23:53.201053", "score": "0.9931", "loss": "0.0302", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout, mExpandableListView, false)); } if (mGroupDescriptor == null)  { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 135, "n_pass": [89, 5, 5]}
{"time": "2021-02-13 16:23:54.556832", "score": "0.9956", "loss": "0.0185", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  { mExpandableListView.expandGroups(mSavedExpandedGroups); } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 129, "n_pass": [90, 6, 6]}
{"time": "2021-02-13 16:23:55.925867", "score": "0.9936", "loss": "0.0249", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView, mGroupDescriptor.getElementViewDescriptor().getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 122, "n_pass": [94, 7, 7]}
{"time": "2021-02-13 16:23:57.272209", "score": "0.9968", "loss": "0.0125", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId()); swiper.setOnFlingListener(this); return rootView; }", "n_tokens": 115, "n_pass": [97, 8, 8]}
{"time": "2021-02-13 16:23:58.640123", "score": "0.9976", "loss": "0.01", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());  return rootView; }", "n_tokens": 108, "n_pass": [99, 9, 9]}
{"time": "2021-02-13 16:24:00.375358", "score": "0.9981", "loss": "0.0085", "code": "@Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 104, "n_pass": [151, 10, 10]}
{"time": "2021-02-13 16:24:01.720556", "score": "0.9831", "loss": "0.0847", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View rootView = inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 101, "n_pass": [153, 11, 11]}
{"time": "2021-02-13 16:24:03.432834", "score": "0.9741", "loss": "0.109", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View= inflater.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 98, "n_pass": [162, 12, 12]}
{"time": "2021-02-13 16:24:04.785963", "score": "0.968", "loss": "0.1496", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) { mExpandableListView.addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 95, "n_pass": [163, 13, 13]}
{"time": "2021-02-13 16:24:06.124904", "score": "0.954", "loss": "0.205", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate(R.layout)); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 92, "n_pass": [169, 14, 14]}
{"time": "2021-02-13 16:24:07.489379", "score": "0.9514", "loss": "0.2193", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector swiper = new FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 89, "n_pass": [172, 15, 15]}
{"time": "2021-02-13 16:24:08.830413", "score": "0.969", "loss": "0.1475", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector swiper =(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 85, "n_pass": [182, 16, 16]}
{"time": "2021-02-13 16:24:10.553722", "score": "0.9545", "loss": "0.2242", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView.getFlingContentViewId());rootView; }", "n_tokens": 81, "n_pass": [209, 17, 17]}
{"time": "2021-02-13 16:24:16.262195", "score": "0.9621", "loss": "0.1831", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView());rootView; }", "n_tokens": 79, "n_pass": [289, 18, 18]}
{"time": "2021-02-13 16:24:17.591423", "score": "0.9621", "loss": "0.1822", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView);rootView; }", "n_tokens": 77, "n_pass": [290, 19, 19]}
{"time": "2021-02-13 16:24:18.925905", "score": "0.9787", "loss": "0.1013", "code": "public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 75, "n_pass": [292, 20, 20]}
{"time": "2021-02-13 16:24:20.251546", "score": "0.9787", "loss": "0.1013", "code": " View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 74, "n_pass": [294, 21, 21]}
{"time": "2021-02-13 16:24:21.589842", "score": "0.9787", "loss": "0.1013", "code": "View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 73, "n_pass": [295, 22, 22]}
{"time": "2021-02-13 16:24:24.025620", "score": "0.9787", "loss": "0.1013", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container, Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 72, "n_pass": [304, 23, 23]}
{"time": "2021-02-13 16:24:25.341966", "score": "0.9787", "loss": "0.1013", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState) { View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 71, "n_pass": [309, 24, 24]}
{"time": "2021-02-13 16:24:26.686685", "score": "0.9787", "loss": "0.1013", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){ View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 70, "n_pass": [314, 25, 25]}
{"time": "2021-02-13 16:24:28.008556", "score": "0.9787", "loss": "0.1013", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){View.inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 69, "n_pass": [316, 26, 26]}
{"time": "2021-02-13 16:24:29.331499", "score": "0.9711", "loss": "0.136", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflater.inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 67, "n_pass": [317, 27, 27]}
{"time": "2021-02-13 16:24:30.682140", "score": "0.9734", "loss": "0.1273", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptor == null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 65, "n_pass": [326, 28, 28]}
{"time": "2021-02-13 16:24:32.010258", "score": "0.962", "loss": "0.1757", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptor= null)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 63, "n_pass": [333, 29, 29]}
{"time": "2021-02-13 16:24:33.364605", "score": "0.9469", "loss": "0.2524", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull)  {  } FlingDetector(mExpandableListView); }", "n_tokens": 61, "n_pass": [334, 30, 30]}
{"time": "2021-02-13 16:24:34.682495", "score": "0.9469", "loss": "0.2524", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  } FlingDetector(mExpandableListView); }", "n_tokens": 59, "n_pass": [336, 31, 31]}
{"time": "2021-02-13 16:24:35.992650", "score": "0.901", "loss": "0.4593", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView); }", "n_tokens": 57, "n_pass": [339, 32, 32]}
{"time": "2021-02-13 16:24:42.409647", "score": "0.901", "loss": "0.4593", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){inflate(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 56, "n_pass": [420, 33, 33]}
{"time": "2021-02-13 16:24:44.805529", "score": "0.9288", "loss": "0.3616", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R); if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 55, "n_pass": [438, 34, 34]}
{"time": "2021-02-13 16:24:46.117231", "score": "0.9288", "loss": "0.3616", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if (!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 54, "n_pass": [443, 35, 35]}
{"time": "2021-02-13 16:24:47.425404", "score": "0.9288", "loss": "0.3616", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(!mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 53, "n_pass": [445, 36, 36]}
{"time": "2021-02-13 16:24:48.762398", "score": "0.9166", "loss": "0.4193", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout) {addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 52, "n_pass": [447, 37, 37]}
{"time": "2021-02-13 16:24:50.094205", "score": "0.9166", "loss": "0.4193", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){addFooterView(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 51, "n_pass": [450, 38, 38]}
{"time": "2021-02-13 16:24:51.408754", "score": "0.9441", "loss": "0.2716", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate()); } if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 50, "n_pass": [452, 39, 39]}
{"time": "2021-02-13 16:24:52.723985", "score": "0.9441", "loss": "0.2716", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());} if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 49, "n_pass": [459, 40, 40]}
{"time": "2021-02-13 16:24:54.067095", "score": "0.9441", "loss": "0.2716", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if (mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 48, "n_pass": [461, 41, 41]}
{"time": "2021-02-13 16:24:55.379448", "score": "0.9441", "loss": "0.2716", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if(mGroupDescriptornull){  }(mExpandableListView);}", "n_tokens": 47, "n_pass": [463, 42, 42]}
{"time": "2021-02-13 16:24:56.748306", "score": "0.9702", "loss": "0.1745", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if(null){  }(mExpandableListView);}", "n_tokens": 46, "n_pass": [465, 43, 43]}
{"time": "2021-02-13 16:24:58.071446", "score": "0.9702", "loss": "0.1745", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if(null){ }(mExpandableListView);}", "n_tokens": 45, "n_pass": [469, 44, 44]}
{"time": "2021-02-13 16:24:59.382688", "score": "0.9702", "loss": "0.1745", "code": "View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if(null){}(mExpandableListView);}", "n_tokens": 44, "n_pass": [470, 45, 45]}

Minimal simplified code:
View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState){(R);if(mTwoPaneLayout){(inflate());}if(null){}(mExpandableListView);}

