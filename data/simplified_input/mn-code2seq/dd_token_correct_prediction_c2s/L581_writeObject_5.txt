
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wildfly__jandex/src/main/java/org/jboss/jandex/StrongInternPool_writeObject.java
method_name = writeObject
method_body = private void writeObject(java.io.ObjectOutputStream s) throws IOException { s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }
predict, score, loss = writeObject, 0.9947930574417114, 0.011946028098464012

Trace of simplified code(s):
{"time": "2021-02-13 18:21:10.360684", "score": "0.9948", "loss": "0.0119", "code": "private void writeObject(java.io.ObjectOutputStream s) throws IOException { s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 79, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:21:12.429198", "score": "0.9945", "loss": "0.0161", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject(); s.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 74, "n_pass": [47, 2, 2]}
{"time": "2021-02-13 18:21:13.784832", "score": "0.9919", "loss": "0.0326", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject.writeInt(size); for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 69, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 18:21:15.098747", "score": "0.9816", "loss": "0.0681", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e != null) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 64, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 18:21:16.418530", "score": "0.9601", "loss": "0.1626", "code": "private void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 59, "n_pass": [55, 5, 5]}
{"time": "2021-02-13 18:21:18.103963", "score": "0.9601", "loss": "0.1626", "code": "void writeObject(java.io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 57, "n_pass": [100, 6, 6]}
{"time": "2021-02-13 18:21:19.427046", "score": "0.9153", "loss": "0.3422", "code": "void writeObject(io.ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 55, "n_pass": [102, 7, 7]}
{"time": "2021-02-13 18:21:20.752757", "score": "0.9437", "loss": "0.2704", "code": "void writeObject(ObjectOutputStream s){ s.defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 53, "n_pass": [103, 8, 8]}
{"time": "2021-02-13 18:21:22.065845", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject; for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 51, "n_pass": [107, 9, 9]}
{"time": "2021-02-13 18:21:30.414312", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for (Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 50, "n_pass": [170, 12, 10]}
{"time": "2021-02-13 18:21:31.737883", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e : table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 49, "n_pass": [171, 13, 11]}
{"time": "2021-02-13 18:21:33.065215", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e: table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 48, "n_pass": [176, 14, 12]}
{"time": "2021-02-13 18:21:34.391001", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e:table) { if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 47, "n_pass": [178, 15, 13]}
{"time": "2021-02-13 18:21:35.741716", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e:table){ if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 46, "n_pass": [181, 16, 14]}
{"time": "2021-02-13 18:21:37.109158", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e:table){if (e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 45, "n_pass": [183, 17, 15]}
{"time": "2021-02-13 18:21:38.433059", "score": "0.9366", "loss": "0.3218", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e:table){if(e) { s.writeObject(unmaskNull(e)); } } }", "n_tokens": 44, "n_pass": [185, 18, 16]}
{"time": "2021-02-13 18:21:39.758502", "score": "0.9731", "loss": "0.1518", "code": "void writeObject(ObjectOutputStream s){ defaultWriteObject;for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 42, "n_pass": [189, 19, 17]}
{"time": "2021-02-13 18:21:41.814649", "score": "0.9731", "loss": "0.1518", "code": "void writeObject(ObjectOutputStream s){defaultWriteObject;for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 41, "n_pass": [206, 20, 18]}
{"time": "2021-02-13 18:21:43.136756", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){;for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 40, "n_pass": [207, 21, 19]}
{"time": "2021-02-13 18:21:44.457054", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e) { writeObject(unmaskNull(e)); } } }", "n_tokens": 39, "n_pass": [208, 22, 20]}
{"time": "2021-02-13 18:21:48.516889", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){ writeObject(unmaskNull(e)); } } }", "n_tokens": 38, "n_pass": [261, 23, 21]}
{"time": "2021-02-13 18:21:49.835396", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e)); } } }", "n_tokens": 37, "n_pass": [263, 24, 22]}
{"time": "2021-02-13 18:21:55.128482", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e));} } }", "n_tokens": 36, "n_pass": [272, 28, 23]}
{"time": "2021-02-13 18:21:56.458468", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e));}} }", "n_tokens": 35, "n_pass": [274, 29, 24]}
{"time": "2021-02-13 18:21:57.787411", "score": "0.6503", "loss": "1.5103", "code": "void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e));}}}", "n_tokens": 34, "n_pass": [276, 30, 25]}

Minimal simplified code:
void writeObject(ObjectOutputStream s){for(Object e:table){if(e){writeObject(unmaskNull(e));}}}

