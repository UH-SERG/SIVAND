
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dmfs__opentasks/opentasks/src/main/java/org/dmfs/tasks/notification/NotificationActionUtils_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out.writeInt(mNotificationId); out.writeString(mTaskUri.toString()); out.writeLong(mWhen); out.writeString(mTitle); }
predict, score, loss = writeToParcel, 0.9994981288909912, 0.002857479965314269

Trace of simplified code(s):
{"time": "2021-02-13 04:47:43.118028", "score": "0.9995", "loss": "0.0029", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out.writeInt(mNotificationId); out.writeString(mTaskUri.toString()); out.writeLong(mWhen); out.writeString(mTitle); }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:47:44.444175", "score": "0.9995", "loss": "0.0023", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out.writeLong(mWhen); out.writeString(mTitle); }", "n_tokens": 58, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 04:47:47.105037", "score": "0.9993", "loss": "0.0037", "code": "@Override public void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out. out.writeString(mTitle); }", "n_tokens": 53, "n_pass": [39, 4, 3]}
{"time": "2021-02-13 04:47:48.427300", "score": "0.9947", "loss": "0.0609", "code": " void writeToParcel(final Parcel out, final int flags) { out.writeString(mActionType); out.writeInt(mActionTextResId); out. out.writeString(mTitle); }", "n_tokens": 49, "n_pass": [42, 5, 4]}
{"time": "2021-02-13 04:47:49.738605", "score": "0.9468", "loss": "0.2741", "code": " void writeToParcel(final Parcel out, final int flags) { out.writeStringout.writeInt(mActionTextResId); out. out.writeString(mTitle); }", "n_tokens": 44, "n_pass": [48, 6, 5]}
{"time": "2021-02-13 04:47:51.071820", "score": "0.9832", "loss": "0.1163", "code": " void writeToParcel(final Parcel out, final int flags) {writeStringout.writeInt(mActionTextResId); out. out.writeString(mTitle); }", "n_tokens": 41, "n_pass": [76, 7, 6]}
{"time": "2021-02-13 04:47:52.384141", "score": "0.9817", "loss": "0.1077", "code": " void writeToParcel(final Parcel out, final int flags) {writeInt(mActionTextResId); out. out.writeString(mTitle); }", "n_tokens": 38, "n_pass": [77, 8, 7]}
{"time": "2021-02-13 04:47:53.719010", "score": "0.9944", "loss": "0.0668", "code": " void writeToParcel(final Parcel out, final int flags) {writeInt(mActionTextResId); out.writeString(mTitle); }", "n_tokens": 35, "n_pass": [80, 9, 8]}
{"time": "2021-02-13 04:47:55.021268", "score": "0.9381", "loss": "0.2608", "code": " void writeToParcel(final Parcel out, final int flags) {writeInt(mActionTextResId); (mTitle); }", "n_tokens": 32, "n_pass": [81, 10, 9]}
{"time": "2021-02-13 04:47:56.339432", "score": "0.9872", "loss": "0.0928", "code": " void writeToParcel(final Parcel out, final int flags) {writeInt(mActionTextResId); ; }", "n_tokens": 29, "n_pass": [82, 11, 10]}
{"time": "2021-02-13 04:47:58.009749", "score": "0.9872", "loss": "0.0928", "code": " void writeToParcel(final Parcel out, int flags) {writeInt(mActionTextResId); ; }", "n_tokens": 27, "n_pass": [90, 12, 11]}
{"time": "2021-02-13 04:48:02.363839", "score": "0.9872", "loss": "0.0928", "code": " void writeToParcel(final Parcel out, int flags){writeInt(mActionTextResId); ; }", "n_tokens": 26, "n_pass": [131, 13, 12]}
{"time": "2021-02-13 04:48:03.660972", "score": "0.9921", "loss": "0.0757", "code": " void writeToParcel(final Parcel out, int flags){(mActionTextResId); ; }", "n_tokens": 25, "n_pass": [132, 14, 13]}
{"time": "2021-02-13 04:48:04.977476", "score": "0.9921", "loss": "0.0757", "code": " void writeToParcel(final Parcel out, int flags){(mActionTextResId); }", "n_tokens": 23, "n_pass": [136, 15, 14]}
{"time": "2021-02-13 04:48:06.283716", "score": "0.9921", "loss": "0.0757", "code": "void writeToParcel(final Parcel out, int flags){(mActionTextResId); }", "n_tokens": 22, "n_pass": [138, 16, 15]}
{"time": "2021-02-13 04:48:08.290878", "score": "0.9921", "loss": "0.0757", "code": "void writeToParcel( Parcel out, int flags){(mActionTextResId); }", "n_tokens": 21, "n_pass": [143, 17, 16]}
{"time": "2021-02-13 04:48:09.581240", "score": "0.9921", "loss": "0.0757", "code": "void writeToParcel(Parcel out, int flags){(mActionTextResId); }", "n_tokens": 20, "n_pass": [144, 18, 17]}
{"time": "2021-02-13 04:48:10.885742", "score": "0.9921", "loss": "0.0757", "code": "void writeToParcel(Parcel out,int flags){(mActionTextResId); }", "n_tokens": 19, "n_pass": [149, 19, 18]}
{"time": "2021-02-13 04:48:13.582861", "score": "0.9921", "loss": "0.0757", "code": "void writeToParcel(Parcel out,int flags){(mActionTextResId);}", "n_tokens": 18, "n_pass": [173, 20, 19]}

Minimal simplified code:
void writeToParcel(Parcel out,int flags){(mActionTextResId);}

