
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ahmetaa__zemberek-nlp/core/src/main/java/zemberek/core/collections/UIntKeyHashBase_remove.java
method_name = remove
method_body = public void remove(int key) { int k = locate(key); if (k < 0) { return; } keys[k] = DELETED; keyCount--; removeCount++; }
predict, score, loss = remove, 0.7641535401344299, 0.5915631055831909

Trace of simplified code(s):
{"time": "2021-02-13 20:11:37.141182", "score": "0.7642", "loss": "0.5916", "code": "public void remove(int key) { int k = locate(key); if (k < 0) { return; } keys[k] = DELETED; keyCount--; removeCount++; }", "n_tokens": 63, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:11:38.467546", "score": "0.946", "loss": "0.2244", "code": "public void remove(int key) { int k = locate(key); if (k < 0) { return; } keys[k] ; removeCount++; }", "n_tokens": 55, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 20:11:40.162861", "score": "0.9159", "loss": "0.328", "code": "public void remove(int key) { int k = locate(key); if (k < 0) { return; } keys; removeCount++; }", "n_tokens": 51, "n_pass": [60, 3, 3]}
{"time": "2021-02-13 20:11:43.878659", "score": "0.9159", "loss": "0.328", "code": " void remove(int key) { int k = locate(key); if (k < 0) { return; } keys; removeCount++; }", "n_tokens": 50, "n_pass": [103, 5, 4]}
{"time": "2021-02-13 20:11:45.217495", "score": "0.8839", "loss": "0.4477", "code": " void remove(int key) { k = locate(key); if (k < 0) { return; } keys; removeCount++; }", "n_tokens": 48, "n_pass": [109, 6, 5]}
{"time": "2021-02-13 20:11:46.537642", "score": "0.8839", "loss": "0.4477", "code": " void remove(int key) { k = locate(key); if (k < 0) {  } keys; removeCount++; }", "n_tokens": 46, "n_pass": [121, 7, 6]}
{"time": "2021-02-13 20:11:47.849373", "score": "0.9264", "loss": "0.2218", "code": " void remove(int key) { k = locate(key); if (k < 0) {  }; removeCount++; }", "n_tokens": 44, "n_pass": [123, 8, 7]}
{"time": "2021-02-13 20:11:49.160990", "score": "0.912", "loss": "0.2622", "code": " void remove(int key) { k = locate(key); if (k < 0) {  }removeCount++; }", "n_tokens": 42, "n_pass": [124, 9, 8]}
{"time": "2021-02-13 20:11:56.505301", "score": "0.912", "loss": "0.2622", "code": " void remove(int key) { k = locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 41, "n_pass": [192, 10, 9]}
{"time": "2021-02-13 20:11:57.816587", "score": "0.912", "loss": "0.2622", "code": "void remove(int key) { k = locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 40, "n_pass": [193, 11, 10]}
{"time": "2021-02-13 20:11:59.853212", "score": "0.912", "loss": "0.2622", "code": "void remove(int key){ k = locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 39, "n_pass": [202, 12, 11]}
{"time": "2021-02-13 20:12:01.164974", "score": "0.912", "loss": "0.2622", "code": "void remove(int key){k = locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 38, "n_pass": [204, 13, 12]}
{"time": "2021-02-13 20:12:02.472443", "score": "0.912", "loss": "0.2622", "code": "void remove(int key){k= locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 37, "n_pass": [206, 14, 13]}
{"time": "2021-02-13 20:12:03.783915", "score": "0.912", "loss": "0.2622", "code": "void remove(int key){k=locate(key); if (k < 0) {  }removeCount++;}", "n_tokens": 36, "n_pass": [208, 15, 14]}
{"time": "2021-02-13 20:12:05.083986", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key); if (k < 0) {  }removeCount++;}", "n_tokens": 35, "n_pass": [209, 16, 15]}
{"time": "2021-02-13 20:12:06.380572", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if (k < 0) {  }removeCount++;}", "n_tokens": 34, "n_pass": [214, 17, 16]}
{"time": "2021-02-13 20:12:07.676734", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k < 0) {  }removeCount++;}", "n_tokens": 33, "n_pass": [216, 18, 17]}
{"time": "2021-02-13 20:12:08.989281", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k< 0) {  }removeCount++;}", "n_tokens": 32, "n_pass": [219, 19, 18]}
{"time": "2021-02-13 20:12:10.300922", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k<0) {  }removeCount++;}", "n_tokens": 31, "n_pass": [221, 20, 19]}
{"time": "2021-02-13 20:12:11.598071", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k<0){  }removeCount++;}", "n_tokens": 30, "n_pass": [224, 21, 20]}
{"time": "2021-02-13 20:12:12.895947", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k<0){ }removeCount++;}", "n_tokens": 29, "n_pass": [226, 22, 21]}
{"time": "2021-02-13 20:12:14.203226", "score": "0.8686", "loss": "0.4189", "code": "void remove(int key){k=(key);if(k<0){}removeCount++;}", "n_tokens": 28, "n_pass": [227, 23, 22]}
{"time": "2021-02-13 20:12:16.257874", "score": "0.8498", "loss": "0.3767", "code": "void remove(int key){k(key);if(k<0){}removeCount++;}", "n_tokens": 27, "n_pass": [244, 24, 23]}
{"time": "2021-02-13 20:12:17.555434", "score": "0.893", "loss": "0.3232", "code": "void remove(int key){k();if(k<0){}removeCount++;}", "n_tokens": 26, "n_pass": [246, 25, 24]}
{"time": "2021-02-13 20:12:18.850568", "score": "0.7734", "loss": "0.6397", "code": "void remove(int key){k();if(k0){}removeCount++;}", "n_tokens": 25, "n_pass": [252, 26, 25]}
{"time": "2021-02-13 20:12:20.143313", "score": "0.7734", "loss": "0.6397", "code": "void remove(int key){k();if(k){}removeCount++;}", "n_tokens": 24, "n_pass": [253, 27, 26]}

Minimal simplified code:
void remove(int key){k();if(k){}removeCount++;}

