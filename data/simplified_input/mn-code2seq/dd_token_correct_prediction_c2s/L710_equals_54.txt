
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/kernel-impl/src/main/java/org/sakaiproject/site/impl/BaseGroup_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; BaseGroup other = (BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }
predict, score, loss = equals, 0.9995113611221313, 0.0006514072301797569

Trace of simplified code(s):
{"time": "2021-02-13 20:40:27.592357", "score": "0.9996", "loss": "0.0005", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; BaseGroup other = (BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:40:28.947488", "score": "0.9995", "loss": "0.0007", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj = obj.getClass()) return false; BaseGroup other = (BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 132, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 20:40:30.412230", "score": "0.9995", "loss": "0.0006", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return false; BaseGroup other = (BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 127, "n_pass": [86, 3, 3]}
{"time": "2021-02-13 20:40:31.754863", "score": "0.9989", "loss": "0.0014", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return other = (BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 122, "n_pass": [88, 4, 4]}
{"time": "2021-02-13 20:40:33.104015", "score": "0.9988", "loss": "0.0017", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return(BaseGroup) obj; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 117, "n_pass": [89, 5, 5]}
{"time": "2021-02-13 20:40:34.442273", "score": "0.999", "loss": "0.0014", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id != null) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 112, "n_pass": [90, 6, 6]}
{"time": "2021-02-13 20:40:35.775653", "score": "0.9981", "loss": "0.0026", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!m_id.equals(other.m_id)) return false; return true; }", "n_tokens": 107, "n_pass": [96, 7, 7]}
{"time": "2021-02-13 20:40:37.113345", "score": "0.9964", "loss": "0.0049", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return false; return true; }", "n_tokens": 102, "n_pass": [100, 8, 8]}
{"time": "2021-02-13 20:40:38.457112", "score": "0.9923", "loss": "0.0109", "code": "@Override public boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 97, "n_pass": [103, 9, 9]}
{"time": "2021-02-13 20:40:39.773934", "score": "0.9632", "loss": "0.0641", "code": " boolean equals(Object obj) { if (this == obj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 93, "n_pass": [105, 10, 10]}
{"time": "2021-02-13 20:40:41.121188", "score": "0.7013", "loss": "0.6568", "code": " boolean equals(Object obj) { if (thisobj) return true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 89, "n_pass": [110, 11, 11]}
{"time": "2021-02-13 20:40:43.143230", "score": "0.7654", "loss": "0.5165", "code": " boolean equals(Object obj) { if (thisobj) true; if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 87, "n_pass": [169, 12, 12]}
{"time": "2021-02-13 20:40:44.452659", "score": "0.7213", "loss": "0.6275", "code": " boolean equals(Object obj) { if (thisobj); if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 85, "n_pass": [170, 13, 13]}
{"time": "2021-02-13 20:40:45.779897", "score": "0.6468", "loss": "0.7766", "code": " boolean equals(Object obj) { if (thisobj)if (obj ()) return; if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 83, "n_pass": [171, 14, 14]}
{"time": "2021-02-13 20:40:47.103386", "score": "0.6468", "loss": "0.7766", "code": " boolean equals(Object obj) { if (thisobj)if (obj ()); if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 81, "n_pass": [176, 15, 15]}
{"time": "2021-02-13 20:40:48.412113", "score": "0.7185", "loss": "0.6957", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m_id == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 79, "n_pass": [177, 16, 16]}
{"time": "2021-02-13 20:40:49.721477", "score": "0.6661", "loss": "0.846", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m == null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 77, "n_pass": [180, 17, 17]}
{"time": "2021-02-13 20:40:51.033384", "score": "0.4717", "loss": "1.4506", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m= null) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 75, "n_pass": [181, 18, 18]}
{"time": "2021-02-13 20:40:52.357918", "score": "0.5297", "loss": "1.241", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (mnull) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 73, "n_pass": [182, 19, 19]}
{"time": "2021-02-13 20:41:00.063730", "score": "0.4404", "loss": "1.5493", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m) { if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 72, "n_pass": [273, 21, 20]}
{"time": "2021-02-13 20:41:01.394886", "score": "0.4404", "loss": "1.5493", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){ if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 71, "n_pass": [274, 22, 21]}
{"time": "2021-02-13 20:41:02.739055", "score": "0.4404", "loss": "1.5493", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if (other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 70, "n_pass": [276, 23, 22]}
{"time": "2021-02-13 20:41:04.096057", "score": "0.4404", "loss": "1.5493", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.m_id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 69, "n_pass": [278, 24, 23]}
{"time": "2021-02-13 20:41:06.770569", "score": "0.3688", "loss": "1.7787", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other._id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 68, "n_pass": [282, 26, 24]}
{"time": "2021-02-13 20:41:08.089402", "score": "0.3688", "loss": "1.7787", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id) return false; } else if (!(other.m_id)) return true; }", "n_tokens": 67, "n_pass": [283, 27, 25]}
{"time": "2021-02-13 20:41:09.430725", "score": "0.3688", "loss": "1.7787", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)return false; } else if (!(other.m_id)) return true; }", "n_tokens": 66, "n_pass": [286, 28, 26]}
{"time": "2021-02-13 20:41:10.745517", "score": "0.4239", "loss": "1.6455", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id) false; } else if (!(other.m_id)) return true; }", "n_tokens": 65, "n_pass": [287, 29, 27]}
{"time": "2021-02-13 20:41:12.082805", "score": "0.4239", "loss": "1.6455", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)false; } else if (!(other.m_id)) return true; }", "n_tokens": 64, "n_pass": [288, 30, 28]}
{"time": "2021-02-13 20:41:13.390155", "score": "0.2255", "loss": "2.2458", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.m_id)) return true; }", "n_tokens": 62, "n_pass": [291, 31, 29]}
{"time": "2021-02-13 20:41:16.028544", "score": "0.2077", "loss": "2.3188", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) return true; }", "n_tokens": 60, "n_pass": [296, 33, 30]}
{"time": "2021-02-13 20:41:17.359126", "score": "0.1786", "loss": "2.637", "code": " boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 58, "n_pass": [299, 34, 31]}
{"time": "2021-02-13 20:41:18.716816", "score": "0.1786", "loss": "2.637", "code": "boolean equals(Object obj) { if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 57, "n_pass": [302, 35, 32]}
{"time": "2021-02-13 20:41:20.775090", "score": "0.1786", "loss": "2.637", "code": "boolean equals(Object obj){ if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 56, "n_pass": [311, 36, 33]}
{"time": "2021-02-13 20:41:22.092279", "score": "0.1786", "loss": "2.637", "code": "boolean equals(Object obj){if (thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 55, "n_pass": [313, 37, 34]}
{"time": "2021-02-13 20:41:23.410433", "score": "0.1786", "loss": "2.637", "code": "boolean equals(Object obj){if(thisobj)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 54, "n_pass": [315, 38, 35]}
{"time": "2021-02-13 20:41:26.051021", "score": "0.4701", "loss": "1.5514", "code": "boolean equals(Object obj){if(this)if (obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 53, "n_pass": [318, 40, 36]}
{"time": "2021-02-13 20:41:27.371470", "score": "0.4701", "loss": "1.5514", "code": "boolean equals(Object obj){if(this)if(obj ())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 52, "n_pass": [321, 41, 37]}
{"time": "2021-02-13 20:41:28.737582", "score": "0.4701", "loss": "1.5514", "code": "boolean equals(Object obj){if(this)if(obj())if (m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 51, "n_pass": [324, 42, 38]}
{"time": "2021-02-13 20:41:30.075598", "score": "0.4701", "loss": "1.5514", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other.id)false; } if (!(other.id)) true; }", "n_tokens": 50, "n_pass": [329, 43, 39]}
{"time": "2021-02-13 20:41:31.760222", "score": "0.3841", "loss": "1.84", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(otherid)false; } if (!(other.id)) true; }", "n_tokens": 49, "n_pass": [337, 44, 40]}
{"time": "2021-02-13 20:41:33.083377", "score": "0.4219", "loss": "1.7531", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false; } if (!(other.id)) true; }", "n_tokens": 48, "n_pass": [338, 45, 41]}
{"time": "2021-02-13 20:41:34.402214", "score": "0.375", "loss": "1.8494", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false; } if (!(id)) true; }", "n_tokens": 46, "n_pass": [345, 46, 42]}
{"time": "2021-02-13 20:41:39.176464", "score": "0.375", "loss": "1.8494", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false; } if (!(id))true; }", "n_tokens": 45, "n_pass": [401, 47, 43]}
{"time": "2021-02-13 20:41:40.484931", "score": "0.2102", "loss": "2.4695", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false; } if (!(id)); }", "n_tokens": 44, "n_pass": [402, 48, 44]}
{"time": "2021-02-13 20:41:41.793418", "score": "0.2102", "loss": "2.4695", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false; } if (!(id));}", "n_tokens": 43, "n_pass": [404, 49, 45]}
{"time": "2021-02-13 20:41:45.577214", "score": "0.2102", "loss": "2.4695", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;} if (!(id));}", "n_tokens": 42, "n_pass": [436, 51, 46]}
{"time": "2021-02-13 20:41:46.892254", "score": "0.2102", "loss": "2.4695", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;}if (!(id));}", "n_tokens": 41, "n_pass": [438, 52, 47]}
{"time": "2021-02-13 20:41:49.545202", "score": "0.2102", "loss": "2.4695", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;}if(!(id));}", "n_tokens": 40, "n_pass": [440, 54, 48]}
{"time": "2021-02-13 20:41:50.855820", "score": "0.1662", "loss": "2.7628", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;}if((id));}", "n_tokens": 39, "n_pass": [442, 55, 49]}
{"time": "2021-02-13 20:41:54.596057", "score": "0.2011", "loss": "2.6844", "code": "boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;}((id));}", "n_tokens": 38, "n_pass": [480, 57, 50]}

Minimal simplified code:
boolean equals(Object obj){if(this)if(obj())if(m){if(other)false;}((id));}

