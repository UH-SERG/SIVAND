
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/LazyEncodedSequence_encode.java
method_name = encode
method_body = void encode(ASN1OutputStream out) throws IOException { if (encoded != null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }
predict, score, loss = encode, 0.9824183583259583, 0.03908340632915497

Trace of simplified code(s):
{"time": "2021-02-13 18:42:25.294370", "score": "0.9824", "loss": "0.0391", "code": "void encode(ASN1OutputStream out) throws IOException { if (encoded != null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 70, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:42:26.646494", "score": "0.9753", "loss": "0.0398", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.SEQUENCE | BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 66, "n_pass": [49, 2, 2]}
{"time": "2021-02-13 18:42:27.984335", "score": "0.9736", "loss": "0.0613", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.BERTags.CONSTRUCTED, encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 62, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 18:42:29.304210", "score": "0.9666", "loss": "0.0644", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } else { super.toDLObject().encode(out); } }", "n_tokens": 57, "n_pass": [54, 4, 4]}
{"time": "2021-02-13 18:42:32.270225", "score": "0.9497", "loss": "0.1721", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } { super.toDLObject().encode(out); } }", "n_tokens": 55, "n_pass": [97, 6, 5]}
{"time": "2021-02-13 18:42:33.584593", "score": "0.6162", "loss": "0.9429", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { out.writeEncoded(BERTags.encoded); } { super.toDLObjectencode(out); } }", "n_tokens": 52, "n_pass": [100, 7, 6]}
{"time": "2021-02-13 18:42:36.578917", "score": "0.5465", "loss": "1.2459", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { writeEncoded(BERTags.encoded); } { super.toDLObjectencode(out); } }", "n_tokens": 50, "n_pass": [117, 9, 7]}
{"time": "2021-02-13 18:42:37.909850", "score": "0.4412", "loss": "1.375", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { writeEncoded(encoded); } { super.toDLObjectencode(out); } }", "n_tokens": 48, "n_pass": [119, 10, 8]}
{"time": "2021-02-13 18:42:39.234460", "score": "0.9833", "loss": "0.0662", "code": "void encode(ASN1OutputStream out) throws IOException { if ( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 45, "n_pass": [124, 11, 9]}
{"time": "2021-02-13 18:42:40.904670", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out) throws IOException { if ( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 43, "n_pass": [130, 12, 10]}
{"time": "2021-02-13 18:42:47.261370", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException { if ( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 42, "n_pass": [195, 13, 11]}
{"time": "2021-02-13 18:42:48.568459", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{ if ( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 41, "n_pass": [198, 14, 12]}
{"time": "2021-02-13 18:42:49.902243", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{if ( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 40, "n_pass": [200, 15, 13]}
{"time": "2021-02-13 18:42:51.210597", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{if( null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 39, "n_pass": [202, 16, 14]}
{"time": "2021-02-13 18:42:52.522820", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{if(null) { writeEncoded(encoded); } { encode(out); } }", "n_tokens": 38, "n_pass": [204, 17, 15]}
{"time": "2021-02-13 18:42:53.850467", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{if(null){ writeEncoded(encoded); } { encode(out); } }", "n_tokens": 37, "n_pass": [207, 18, 16]}
{"time": "2021-02-13 18:42:55.157363", "score": "0.9542", "loss": "0.0914", "code": "void encode(OutputStream out)throws IOException{if(null){writeEncoded(encoded); } { encode(out); } }", "n_tokens": 36, "n_pass": [209, 19, 17]}
{"time": "2021-02-13 18:42:56.465539", "score": "0.9863", "loss": "0.091", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded); } { encode(out); } }", "n_tokens": 35, "n_pass": [210, 20, 18]}
{"time": "2021-02-13 18:42:57.794297", "score": "0.9863", "loss": "0.091", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);} { encode(out); } }", "n_tokens": 34, "n_pass": [215, 21, 19]}
{"time": "2021-02-13 18:42:59.125231", "score": "0.9863", "loss": "0.091", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);}{ encode(out); } }", "n_tokens": 33, "n_pass": [217, 22, 20]}
{"time": "2021-02-13 18:43:00.432388", "score": "0.9863", "loss": "0.091", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);}{encode(out); } }", "n_tokens": 32, "n_pass": [219, 23, 21]}
{"time": "2021-02-13 18:43:03.036714", "score": "0.944", "loss": "0.244", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);}{encode(); } }", "n_tokens": 31, "n_pass": [222, 25, 22]}
{"time": "2021-02-13 18:43:06.071801", "score": "0.944", "loss": "0.244", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);}{encode();} }", "n_tokens": 30, "n_pass": [257, 26, 23]}
{"time": "2021-02-13 18:43:07.402598", "score": "0.944", "loss": "0.244", "code": "void encode(OutputStream out)throws IOException{if(null){(encoded);}{encode();}}", "n_tokens": 29, "n_pass": [258, 27, 24]}

Minimal simplified code:
void encode(OutputStream out)throws IOException{if(null){(encoded);}{encode();}}

