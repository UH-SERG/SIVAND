
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/jdk1.3/org/bouncycastle/jce/cert/CertPathBuilderException_printStackTrace.java
method_name = printStackTrace
method_body = public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }
predict, score, loss = printStackTrace, 0.9931946396827698, 0.02298324927687645

Trace of simplified code(s):
{"time": "2021-02-13 12:29:55.265778", "score": "0.9932", "loss": "0.023", "code": "public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if (getCause() != null) { getCause().printStackTrace(pw); } }", "n_tokens": 49, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:29:56.596468", "score": "0.9919", "loss": "0.0293", "code": "public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if ( null) { getCause().printStackTrace(pw); } }", "n_tokens": 43, "n_pass": [24, 2, 2]}
{"time": "2021-02-13 12:30:02.922641", "score": "0.9918", "loss": "0.0289", "code": "public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if ( null) { getCause.printStackTrace(pw); } }", "n_tokens": 41, "n_pass": [93, 5, 3]}
{"time": "2021-02-13 12:30:04.235008", "score": "0.9923", "loss": "0.0287", "code": "public void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if ( null) { getCause(pw); } }", "n_tokens": 39, "n_pass": [94, 6, 4]}
{"time": "2021-02-13 12:30:05.543555", "score": "0.9923", "loss": "0.0287", "code": " void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if ( null) { getCause(pw); } }", "n_tokens": 38, "n_pass": [99, 7, 5]}
{"time": "2021-02-13 12:30:06.837124", "score": "0.9923", "loss": "0.0287", "code": "void printStackTrace(PrintWriter pw) { super.printStackTrace(pw); if ( null) { getCause(pw); } }", "n_tokens": 37, "n_pass": [100, 8, 6]}
{"time": "2021-02-13 12:30:08.858408", "score": "0.9923", "loss": "0.0287", "code": "void printStackTrace(PrintWriter pw){ super.printStackTrace(pw); if ( null) { getCause(pw); } }", "n_tokens": 36, "n_pass": [109, 9, 7]}
{"time": "2021-02-13 12:30:10.189577", "score": "0.9923", "loss": "0.0287", "code": "void printStackTrace(PrintWriter pw){super.printStackTrace(pw); if ( null) { getCause(pw); } }", "n_tokens": 35, "n_pass": [111, 10, 8]}
{"time": "2021-02-13 12:30:12.814405", "score": "0.9952", "loss": "0.0201", "code": "void printStackTrace(PrintWriter pw){super.printStackTrace(pw); if ( null) {(pw); } }", "n_tokens": 33, "n_pass": [120, 12, 9]}
{"time": "2021-02-13 12:30:14.864007", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw); if ( null) {(pw); } }", "n_tokens": 31, "n_pass": [134, 13, 10]}
{"time": "2021-02-13 12:30:19.580479", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if ( null) {(pw); } }", "n_tokens": 30, "n_pass": [178, 14, 11]}
{"time": "2021-02-13 12:30:20.889003", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if( null) {(pw); } }", "n_tokens": 29, "n_pass": [180, 15, 12]}
{"time": "2021-02-13 12:30:22.212108", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if(null) {(pw); } }", "n_tokens": 28, "n_pass": [182, 16, 13]}
{"time": "2021-02-13 12:30:23.514426", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if(null){(pw); } }", "n_tokens": 27, "n_pass": [185, 17, 14]}
{"time": "2021-02-13 12:30:24.822514", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if(null){(pw);} }", "n_tokens": 26, "n_pass": [191, 18, 15]}
{"time": "2021-02-13 12:30:26.140845", "score": "0.9123", "loss": "0.3737", "code": "void printStackTrace(PrintWriter pw){printStackTrace(pw);if(null){(pw);}}", "n_tokens": 25, "n_pass": [193, 19, 16]}
{"time": "2021-02-13 12:30:29.491768", "score": "0.8442", "loss": "0.8178", "code": "void printStackTrace(PrintWriter pw){printStackTrace();if(null){(pw);}}", "n_tokens": 24, "n_pass": [206, 21, 17]}

Minimal simplified code:
void printStackTrace(PrintWriter pw){printStackTrace();if(null){(pw);}}

