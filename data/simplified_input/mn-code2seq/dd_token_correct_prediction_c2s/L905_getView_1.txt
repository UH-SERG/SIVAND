
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/smuyyh__EasyAdapter/library/src/main/java/com/yuyh/easyadapter/recyclerview/EasyRVHolder_getView.java
method_name = getView
method_body = public <V extends View> V getView(int viewId) { View view = mViews.get(viewId); if (view == null) { view = mConvertView.findViewById(viewId); mViews.put(viewId, view); } return (V) view; }
predict, score, loss = getView, 0.9587944149971008, 0.12547804415225983

Trace of simplified code(s):
{"time": "2021-02-14 01:52:21.716912", "score": "0.9588", "loss": "0.1255", "code": "public <V extends View> V getView(int viewId) { View view = mViews.get(viewId); if (view == null) { view = mConvertView.findViewById(viewId); mViews.put(viewId, view); } return (V) view; }", "n_tokens": 83, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 01:52:25.864598", "score": "0.9515", "loss": "0.1778", "code": "public <V extends View> V getView(int viewId) { View view = mViews.get(viewId); if (view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 72, "n_pass": [25, 4, 2]}
{"time": "2021-02-14 01:52:27.235811", "score": "0.9288", "loss": "0.2663", "code": "V getView(int viewId) { View view = mViews.get(viewId); if (view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 62, "n_pass": [28, 5, 3]}
{"time": "2021-02-14 01:52:30.286847", "score": "0.8014", "loss": "0.6335", "code": "V getView(int viewId) { view = mViews.get(viewId); if (view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 60, "n_pass": [88, 7, 4]}
{"time": "2021-02-14 01:52:33.047042", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get; if (view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 57, "n_pass": [93, 9, 5]}
{"time": "2021-02-14 01:52:43.327684", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get;if (view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 56, "n_pass": [161, 13, 6]}
{"time": "2021-02-14 01:52:44.651600", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get;if(view == null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 55, "n_pass": [163, 14, 7]}
{"time": "2021-02-14 01:52:46.010651", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get;if(view== null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 54, "n_pass": [166, 15, 8]}
{"time": "2021-02-14 01:52:50.062822", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get;if(view==null) { view .put(viewId, view); } return (V) view; }", "n_tokens": 53, "n_pass": [169, 18, 9]}
{"time": "2021-02-14 01:52:51.406233", "score": "0.6999", "loss": "5.2799", "code": "V getView(int viewId) { view = mViews.get;if(view==null){ view .put(viewId, view); } return (V) view; }", "n_tokens": 52, "n_pass": [172, 19, 10]}
{"time": "2021-02-14 01:52:52.776918", "score": "0.8207", "loss": "4.5973", "code": "V getView(int viewId) { view = mViews.get;if(view==null){ view (viewId, view); } return (V) view; }", "n_tokens": 50, "n_pass": [175, 20, 11]}
{"time": "2021-02-14 01:52:54.123316", "score": "0.7175", "loss": "4.0109", "code": "V getView(int viewId) { view = mViews.get;if(view==null){ view (viewIdview); } return (V) view; }", "n_tokens": 48, "n_pass": [177, 21, 12]}
{"time": "2021-02-14 01:52:56.916258", "score": "0.7175", "loss": "4.0109", "code": "V getView(int viewId){ view = mViews.get;if(view==null){ view (viewIdview); } return (V) view; }", "n_tokens": 47, "n_pass": [194, 22, 13]}
{"time": "2021-02-14 01:52:58.258611", "score": "0.7175", "loss": "4.0109", "code": "V getView(int viewId){view = mViews.get;if(view==null){ view (viewIdview); } return (V) view; }", "n_tokens": 46, "n_pass": [196, 23, 14]}
{"time": "2021-02-14 01:52:59.603971", "score": "0.7175", "loss": "4.0109", "code": "V getView(int viewId){view= mViews.get;if(view==null){ view (viewIdview); } return (V) view; }", "n_tokens": 45, "n_pass": [198, 24, 15]}
{"time": "2021-02-14 01:53:00.936227", "score": "0.7175", "loss": "4.0109", "code": "V getView(int viewId){view=mViews.get;if(view==null){ view (viewIdview); } return (V) view; }", "n_tokens": 44, "n_pass": [200, 25, 16]}
{"time": "2021-02-14 01:53:03.619264", "score": "0.7521", "loss": "0.8151", "code": "V getView(int viewId){view=mViews.get;if(view=null){ view (viewIdview); } return (V) view; }", "n_tokens": 43, "n_pass": [208, 27, 17]}
{"time": "2021-02-14 01:53:04.925672", "score": "0.7213", "loss": "0.888", "code": "V getView(int viewId){view=mViews.get;if(viewnull){ view (viewIdview); } return (V) view; }", "n_tokens": 42, "n_pass": [209, 28, 18]}
{"time": "2021-02-14 01:53:06.289914", "score": "0.7142", "loss": "3.7169", "code": "V getView(int viewId){view=mViews.get;if(view){ view (viewIdview); } return (V) view; }", "n_tokens": 41, "n_pass": [210, 29, 19]}
{"time": "2021-02-14 01:53:07.606493", "score": "0.7769", "loss": "0.7294", "code": "V getView(int viewId){view=mViews.get;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 39, "n_pass": [213, 30, 20]}
{"time": "2021-02-14 01:53:10.405267", "score": "0.7847", "loss": "0.7681", "code": "V getView(int viewId){viewmViews.get;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 38, "n_pass": [233, 31, 21]}
{"time": "2021-02-14 01:53:11.718113", "score": "0.7533", "loss": "0.8877", "code": "V getView(int viewId){view.get;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 37, "n_pass": [234, 32, 22]}
{"time": "2021-02-14 01:53:13.024594", "score": "0.9193", "loss": "0.2711", "code": "V getView(int viewId){viewget;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 36, "n_pass": [235, 33, 23]}
{"time": "2021-02-14 01:53:14.359545", "score": "0.8327", "loss": "0.5294", "code": "V getView(int viewId){view;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 35, "n_pass": [236, 34, 24]}
{"time": "2021-02-14 01:53:17.233408", "score": "0.9167", "loss": "0.3186", "code": "V getView(int viewId){;if(view){ (viewIdview); } return (V) view; }", "n_tokens": 34, "n_pass": [261, 35, 25]}
{"time": "2021-02-14 01:53:18.595935", "score": "0.9167", "loss": "0.3186", "code": "V getView(int viewId){if(view){ (viewIdview); } return (V) view; }", "n_tokens": 33, "n_pass": [262, 36, 26]}
{"time": "2021-02-14 01:53:24.082016", "score": "0.9167", "loss": "0.3186", "code": "V getView(int viewId){if(view){(viewIdview); } return (V) view; }", "n_tokens": 32, "n_pass": [307, 37, 27]}
{"time": "2021-02-14 01:53:25.399085", "score": "0.8905", "loss": "0.4354", "code": "V getView(int viewId){if(view){(view); } return (V) view; }", "n_tokens": 31, "n_pass": [309, 38, 28]}
{"time": "2021-02-14 01:53:26.728209", "score": "0.8905", "loss": "0.4354", "code": "V getView(int viewId){if(view){(view);} return (V) view; }", "n_tokens": 30, "n_pass": [313, 39, 29]}
{"time": "2021-02-14 01:53:28.072623", "score": "0.8905", "loss": "0.4354", "code": "V getView(int viewId){if(view){(view);}return (V) view; }", "n_tokens": 29, "n_pass": [315, 40, 30]}
{"time": "2021-02-14 01:53:29.740054", "score": "0.8905", "loss": "0.4354", "code": "V getView(int viewId){if(view){(view);}return(V) view; }", "n_tokens": 28, "n_pass": [317, 41, 31]}
{"time": "2021-02-14 01:53:31.087085", "score": "0.8905", "loss": "0.4354", "code": "V getView(int viewId){if(view){(view);}return(V)view; }", "n_tokens": 27, "n_pass": [321, 42, 32]}
{"time": "2021-02-14 01:53:32.451909", "score": "0.932", "loss": "0.2673", "code": "V getView(int viewId){if(view){(view);}return(V); }", "n_tokens": 26, "n_pass": [322, 43, 33]}
{"time": "2021-02-14 01:53:33.760761", "score": "0.932", "loss": "0.2673", "code": "V getView(int viewId){if(view){(view);}return(V);}", "n_tokens": 25, "n_pass": [324, 44, 34]}
{"time": "2021-02-14 01:53:36.236585", "score": "0.8159", "loss": "0.7807", "code": "V getView(int viewId){if(view){(view);}(V);}", "n_tokens": 24, "n_pass": [345, 45, 35]}

Minimal simplified code:
V getView(int viewId){if(view){(view);}(V);}

