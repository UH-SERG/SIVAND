
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioSelectorPool_open.java
method_name = open
method_body = public void open() throws IOException { enabled = true; getSharedSelector(); if (SHARED) { blockingSelector = new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }
predict, score, loss = open, 0.713512122631073, 0.5648781657218933

Trace of simplified code(s):
{"time": "2021-02-13 18:36:33.040645", "score": "0.7135", "loss": "0.5649", "code": "public void open() throws IOException { enabled = true; getSharedSelector(); if (SHARED) { blockingSelector = new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }", "n_tokens": 58, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:36:34.383715", "score": "0.6957", "loss": "0.7974", "code": "public void open() throws IOException { getSharedSelector(); if (SHARED) { blockingSelector = new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }", "n_tokens": 51, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 18:36:35.705678", "score": "0.8594", "loss": "0.5463", "code": "public void open() throws IOException { getSharedSelector(); if (SHARED) { new NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }", "n_tokens": 47, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 18:36:38.362775", "score": "0.8816", "loss": "0.3518", "code": "public void open() throws IOException { getSharedSelector(); if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector()); } }", "n_tokens": 45, "n_pass": [87, 4, 4]}
{"time": "2021-02-13 18:36:41.036172", "score": "0.8591", "loss": "0.4384", "code": "public void open() throws IOException { getSharedSelector(); if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 43, "n_pass": [92, 6, 5]}
{"time": "2021-02-13 18:36:42.368436", "score": "0.8591", "loss": "0.4384", "code": " void open() throws IOException { getSharedSelector(); if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 42, "n_pass": [96, 7, 6]}
{"time": "2021-02-13 18:36:43.663463", "score": "0.8591", "loss": "0.4384", "code": "void open() throws IOException { getSharedSelector(); if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 41, "n_pass": [97, 8, 7]}
{"time": "2021-02-13 18:36:45.678540", "score": "0.7966", "loss": "1.0572", "code": "void open() throws IOException { getSharedSelector; if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 39, "n_pass": [106, 9, 8]}
{"time": "2021-02-13 18:36:48.982153", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {; if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 37, "n_pass": [127, 11, 9]}
{"time": "2021-02-13 18:36:50.309000", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {if (SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 35, "n_pass": [128, 12, 10]}
{"time": "2021-02-13 18:36:57.279126", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {if(SHARED) { NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 34, "n_pass": [180, 14, 11]}
{"time": "2021-02-13 18:36:58.572669", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {if(SHARED){ NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 33, "n_pass": [184, 15, 12]}
{"time": "2021-02-13 18:36:59.897120", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {if(SHARED){NioBlockingSelector(); blockingSelector.open(getSharedSelector); } }", "n_tokens": 32, "n_pass": [186, 16, 13]}
{"time": "2021-02-13 18:37:01.193139", "score": "0.8108", "loss": "0.7161", "code": "void open() throws IOException {if(SHARED){NioBlockingSelector();blockingSelector.open(getSharedSelector); } }", "n_tokens": 31, "n_pass": [191, 17, 14]}
{"time": "2021-02-13 18:37:03.779867", "score": "0.8825", "loss": "0.3223", "code": "void open() throws IOException {if(SHARED){NioBlockingSelector();blockingSelector.open(); } }", "n_tokens": 30, "n_pass": [196, 19, 15]}
{"time": "2021-02-13 18:37:05.065354", "score": "0.8825", "loss": "0.3223", "code": "void open() throws IOException {if(SHARED){NioBlockingSelector();blockingSelector.open();} }", "n_tokens": 29, "n_pass": [199, 20, 16]}
{"time": "2021-02-13 18:37:06.368828", "score": "0.8825", "loss": "0.3223", "code": "void open() throws IOException {if(SHARED){NioBlockingSelector();blockingSelector.open();}}", "n_tokens": 28, "n_pass": [201, 21, 17]}
{"time": "2021-02-13 18:37:08.372950", "score": "0.8825", "loss": "0.3223", "code": "void open()throws IOException {if(SHARED){NioBlockingSelector();blockingSelector.open();}}", "n_tokens": 27, "n_pass": [208, 22, 18]}
{"time": "2021-02-13 18:37:09.663981", "score": "0.8825", "loss": "0.3223", "code": "void open()throws IOException{if(SHARED){NioBlockingSelector();blockingSelector.open();}}", "n_tokens": 26, "n_pass": [212, 23, 19]}

Minimal simplified code:
void open()throws IOException{if(SHARED){NioBlockingSelector();blockingSelector.open();}}

