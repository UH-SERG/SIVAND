
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/jdk1.1/java/util/AbstractSet_hashCode.java
method_name = hashCode
method_body = public int hashCode() { int hashCode = 0; Iterator it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }
predict, score, loss = hashCode, 0.9982097148895264, 0.0073289768770337105

Trace of simplified code(s):
{"time": "2021-02-13 13:02:04.334686", "score": "0.9982", "loss": "0.0073", "code": "public int hashCode() { int hashCode = 0; Iterator it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:02:05.667096", "score": "0.9972", "loss": "0.0101", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { Object o = it.next(); if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 76, "n_pass": [21, 2, 2]}
{"time": "2021-02-13 13:02:07.014429", "score": "0.9981", "loss": "0.0064", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { ; if (o != null) hashCode += o.hashCode(); } return hashCode; }", "n_tokens": 65, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 13:02:08.326538", "score": "0.8592", "loss": "0.4147", "code": "public int hashCode() {  it = iterator(); while (it.hasNext()) { ; if (o != null); } return hashCode; }", "n_tokens": 54, "n_pass": [26, 4, 4]}
{"time": "2021-02-13 13:02:09.643789", "score": "0.8357", "loss": "0.4633", "code": "public int hashCode() { iterator(); while (it.hasNext()) { ; if (o != null); } return hashCode; }", "n_tokens": 49, "n_pass": [46, 5, 5]}
{"time": "2021-02-13 13:02:13.556796", "score": "0.9482", "loss": "0.1343", "code": "public int hashCode() { iterator(); while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 46, "n_pass": [81, 8, 6]}
{"time": "2021-02-13 13:02:16.142421", "score": "0.9482", "loss": "0.1343", "code": "int hashCode() { iterator(); while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 44, "n_pass": [88, 10, 7]}
{"time": "2021-02-13 13:02:17.800568", "score": "0.9336", "loss": "0.1681", "code": "int hashCode() { ; while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 41, "n_pass": [93, 11, 8]}
{"time": "2021-02-13 13:02:23.405765", "score": "0.9336", "loss": "0.1681", "code": "int hashCode() {  while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 40, "n_pass": [139, 13, 9]}
{"time": "2021-02-13 13:02:24.746725", "score": "0.9336", "loss": "0.1681", "code": "int hashCode() { while (it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 39, "n_pass": [140, 14, 10]}
{"time": "2021-02-13 13:02:26.045195", "score": "0.9336", "loss": "0.1681", "code": "int hashCode() { while(it.hasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 38, "n_pass": [141, 15, 11]}
{"time": "2021-02-13 13:02:27.339980", "score": "0.9561", "loss": "0.1088", "code": "int hashCode() { while(ithasNext()) { ;(o != null); } return hashCode; }", "n_tokens": 37, "n_pass": [144, 16, 12]}
{"time": "2021-02-13 13:02:28.657853", "score": "0.9855", "loss": "0.0405", "code": "int hashCode() { while(it()) { ;(o != null); } return hashCode; }", "n_tokens": 36, "n_pass": [145, 17, 13]}
{"time": "2021-02-13 13:02:29.952250", "score": "0.9855", "loss": "0.0405", "code": "int hashCode() { while(it()) {(o != null); } return hashCode; }", "n_tokens": 34, "n_pass": [150, 18, 14]}
{"time": "2021-02-13 13:02:31.262389", "score": "0.9676", "loss": "0.0902", "code": "int hashCode() { while(it()) {(o= null); } return hashCode; }", "n_tokens": 32, "n_pass": [152, 19, 15]}
{"time": "2021-02-13 13:02:32.549347", "score": "0.9864", "loss": "0.0312", "code": "int hashCode() { while(it()) {(onull); } return hashCode; }", "n_tokens": 30, "n_pass": [153, 20, 16]}
{"time": "2021-02-13 13:02:33.817106", "score": "0.9522", "loss": "0.1228", "code": "int hashCode() { while(it()) {(onull); } hashCode; }", "n_tokens": 28, "n_pass": [157, 21, 17]}
{"time": "2021-02-13 13:02:37.089494", "score": "0.9522", "loss": "0.1228", "code": "int hashCode(){ while(it()) {(onull); } hashCode; }", "n_tokens": 27, "n_pass": [165, 23, 18]}
{"time": "2021-02-13 13:02:38.371727", "score": "0.9522", "loss": "0.1228", "code": "int hashCode(){while(it()) {(onull); } hashCode; }", "n_tokens": 26, "n_pass": [167, 24, 19]}
{"time": "2021-02-13 13:02:43.654752", "score": "0.9522", "loss": "0.1228", "code": "int hashCode(){while(it()){(onull); } hashCode; }", "n_tokens": 25, "n_pass": [201, 26, 20]}
{"time": "2021-02-13 13:02:44.941136", "score": "0.9926", "loss": "0.0222", "code": "int hashCode(){while(it()){(null); } hashCode; }", "n_tokens": 24, "n_pass": [203, 27, 21]}
{"time": "2021-02-13 13:02:46.228875", "score": "0.9926", "loss": "0.0222", "code": "int hashCode(){while(it()){(null);} hashCode; }", "n_tokens": 23, "n_pass": [207, 28, 22]}
{"time": "2021-02-13 13:02:47.523072", "score": "0.9926", "loss": "0.0222", "code": "int hashCode(){while(it()){(null);}hashCode; }", "n_tokens": 22, "n_pass": [209, 29, 23]}
{"time": "2021-02-13 13:02:50.104373", "score": "0.9926", "loss": "0.0222", "code": "int hashCode(){while(it()){(null);}hashCode;}", "n_tokens": 21, "n_pass": [212, 31, 24]}

Minimal simplified code:
int hashCode(){while(it()){(null);}hashCode;}

