
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/qpython-android__qpython/qpysl4a/src/main/java/org/qpython/qsl4a/qsl4a/SimpleServer_run.java
method_name = run
method_body = @Override public void run() { Log.v("Server thread " + getId() + " started."); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e("Server error.", e); } } finally { close(); mConnectionThreads.remove(this); notifyOnDisconnect(); Log.v("Server thread " + getId() + " died."); } }
predict, score, loss = run, 0.8958039879798889, 0.1712811142206192

Trace of simplified code(s):
{"time": "2021-02-13 13:18:41.648317", "score": "0.8958", "loss": "0.1713", "code": "@Override public void run() { Log.v(\"Server thread \" + getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } } finally { close(); mConnectionThreads.remove(this); notifyOnDisconnect(); Log.v(\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 143, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:18:43.004397", "score": "0.9604", "loss": "0.0493", "code": "@Override public void run() { Log.v(\"Server thread \" + getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); }  notifyOnDisconnect(); Log.v(\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 125, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 13:18:44.367131", "score": "0.9614", "loss": "0.0556", "code": "@Override public void run() { Log.v(\"Server thread \" + getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 116, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 13:18:45.702311", "score": "0.9564", "loss": "0.0629", "code": "@Override public void run() { Log.v(getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 107, "n_pass": [51, 4, 4]}
{"time": "2021-02-13 13:18:47.057957", "score": "0.6921", "loss": "0.552", "code": " void run() { Log.v(getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 103, "n_pass": [108, 5, 5]}
{"time": "2021-02-13 13:18:48.371554", "score": "0.5902", "loss": "0.7666", "code": " void run() {(getId() + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 99, "n_pass": [110, 6, 6]}
{"time": "2021-02-13 13:18:49.712070", "score": "0.5939", "loss": "0.7397", "code": " void run() {(getId + \" started.\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 97, "n_pass": [178, 7, 7]}
{"time": "2021-02-13 13:18:51.066595", "score": "0.6781", "loss": "0.6794", "code": " void run() {(getId + \".\"); try { handleConnection(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 95, "n_pass": [181, 8, 8]}
{"time": "2021-02-13 13:18:52.381233", "score": "0.4922", "loss": "1.1639", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { Log.e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 93, "n_pass": [186, 9, 9]}
{"time": "2021-02-13 13:18:53.737390", "score": "0.5566", "loss": "0.9758", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server error.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 91, "n_pass": [200, 10, 10]}
{"time": "2021-02-13 13:18:55.074095", "score": "0.5745", "loss": "0.9524", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"Server thread \" + getId() + \" died.\"); } }", "n_tokens": 89, "n_pass": [203, 11, 11]}
{"time": "2021-02-13 13:18:56.428617", "score": "0.5436", "loss": "1.016", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"Server\" + getId() + \" died.\"); } }", "n_tokens": 86, "n_pass": [209, 12, 12]}
{"time": "2021-02-13 13:19:05.443606", "score": "0.5119", "loss": "1.1432", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId() + \" died.\"); } }", "n_tokens": 85, "n_pass": [326, 13, 13]}
{"time": "2021-02-13 13:19:06.757784", "score": "0.5721", "loss": "1.0056", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \" died.\"); } }", "n_tokens": 83, "n_pass": [330, 14, 14]}
{"time": "2021-02-13 13:19:08.080009", "score": "0.6104", "loss": "0.869", "code": " void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 81, "n_pass": [333, 15, 15]}
{"time": "2021-02-13 13:19:09.409193", "score": "0.6104", "loss": "0.869", "code": "void run() {(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 80, "n_pass": [338, 16, 16]}
{"time": "2021-02-13 13:19:11.463245", "score": "0.6104", "loss": "0.869", "code": "void run(){(getId + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 79, "n_pass": [344, 17, 17]}
{"time": "2021-02-13 13:19:12.802718", "score": "0.6109", "loss": "0.8152", "code": "void run(){( + \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 78, "n_pass": [347, 18, 18]}
{"time": "2021-02-13 13:19:14.144099", "score": "0.6109", "loss": "0.8152", "code": "void run(){(+ \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 77, "n_pass": [348, 19, 19]}
{"time": "2021-02-13 13:19:15.459092", "score": "0.5872", "loss": "0.8679", "code": "void run(){( \".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 76, "n_pass": [349, 20, 20]}
{"time": "2021-02-13 13:19:16.810442", "score": "0.5872", "loss": "0.8679", "code": "void run(){(\".\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 75, "n_pass": [350, 21, 21]}
{"time": "2021-02-13 13:19:18.147374", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\"); try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 74, "n_pass": [352, 22, 22]}
{"time": "2021-02-13 13:19:19.475744", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try {(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 73, "n_pass": [356, 23, 23]}
{"time": "2021-02-13 13:19:20.795273", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket); } catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 72, "n_pass": [358, 24, 24]}
{"time": "2021-02-13 13:19:22.141020", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);} catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 71, "n_pass": [364, 25, 25]}
{"time": "2021-02-13 13:19:23.458704", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);}catch (Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 70, "n_pass": [366, 26, 26]}
{"time": "2021-02-13 13:19:24.781948", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e) { if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 69, "n_pass": [368, 27, 27]}
{"time": "2021-02-13 13:19:26.105437", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){ if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 68, "n_pass": [374, 28, 28]}
{"time": "2021-02-13 13:19:27.428385", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if (!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 67, "n_pass": [376, 29, 29]}
{"time": "2021-02-13 13:19:28.773425", "score": "0.5437", "loss": "0.9617", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(!mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 66, "n_pass": [378, 30, 30]}
{"time": "2021-02-13 13:19:30.120083", "score": "0.6064", "loss": "0.9247", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer) { e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 65, "n_pass": [380, 31, 31]}
{"time": "2021-02-13 13:19:31.468377", "score": "0.6064", "loss": "0.9247", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){ e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 64, "n_pass": [383, 32, 32]}
{"time": "2021-02-13 13:19:32.813711", "score": "0.6064", "loss": "0.9247", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"Server.\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 63, "n_pass": [385, 33, 33]}
{"time": "2021-02-13 13:19:34.148680", "score": "0.5636", "loss": "1.0645", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\".\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 62, "n_pass": [389, 34, 34]}
{"time": "2021-02-13 13:19:35.490098", "score": "0.5541", "loss": "1.0919", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\", e); } (\"\" + getId + \".\"); } }", "n_tokens": 61, "n_pass": [390, 35, 35]}
{"time": "2021-02-13 13:19:36.808759", "score": "0.5541", "loss": "1.0919", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e); } (\"\" + getId + \".\"); } }", "n_tokens": 60, "n_pass": [393, 36, 36]}
{"time": "2021-02-13 13:19:38.175616", "score": "0.5541", "loss": "1.0919", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);} (\"\" + getId + \".\"); } }", "n_tokens": 59, "n_pass": [397, 37, 37]}
{"time": "2021-02-13 13:19:39.510129", "score": "0.5541", "loss": "1.0919", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\" + getId + \".\"); } }", "n_tokens": 58, "n_pass": [399, 38, 38]}
{"time": "2021-02-13 13:19:40.832801", "score": "0.4526", "loss": "1.317", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\" + + \".\"); } }", "n_tokens": 56, "n_pass": [404, 39, 39]}
{"time": "2021-02-13 13:19:42.147846", "score": "0.4114", "loss": "1.4004", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\" + \".\"); } }", "n_tokens": 54, "n_pass": [405, 40, 40]}
{"time": "2021-02-13 13:19:45.869808", "score": "0.4114", "loss": "1.4004", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\" + \".\");} }", "n_tokens": 53, "n_pass": [468, 41, 41]}
{"time": "2021-02-13 13:19:47.205685", "score": "0.4114", "loss": "1.4004", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\" + \".\");}}", "n_tokens": 52, "n_pass": [469, 42, 42]}
{"time": "2021-02-13 13:19:49.281264", "score": "0.4114", "loss": "1.4004", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\"+ \".\");}}", "n_tokens": 51, "n_pass": [513, 43, 43]}
{"time": "2021-02-13 13:19:50.628045", "score": "0.4114", "loss": "1.4004", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\"+\".\");}}", "n_tokens": 50, "n_pass": [515, 44, 44]}
{"time": "2021-02-13 13:19:51.943888", "score": "0.412", "loss": "1.4706", "code": "void run(){(\"\");try{(mmSocket);}catch(Exception e){if(mStopServer){e(\"\",e);}(\"\"+\"\");}}", "n_tokens": 49, "n_pass": [517, 45, 45]}

Minimal simplified code:
void run(){("");try{(mmSocket);}catch(Exception e){if(mStopServer){e("",e);}(""+"");}}

