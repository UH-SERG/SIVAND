
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/ClientLib/src/main/java/com/o3dr/services/android/lib/drone/mission/item/spatial/Waypoint_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double.compare(waypoint.delay, delay) != 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0) return false; if (Double.compare(waypoint.yawAngle, yawAngle) != 0) return false; if (Double.compare(waypoint.orbitalRadius, orbitalRadius) != 0) return false; return orbitCCW == waypoint.orbitCCW; }
predict, score, loss = equals, 0.9993612170219421, 0.0008177442359738052

Trace of simplified code(s):
{"time": "2021-02-13 05:24:09.688292", "score": "0.9983", "loss": "0.002", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double.compare(waypoint.delay, delay) != 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0) return false; if (Double.compare(waypoint.yawAngle, yawAngle) != 0) return false; if (Double.compare(waypoint.orbitalRadius, orbitalRadius) != 0) return false; return orbitCCW == waypoint.orbitCCW; }", "n_tokens": 197, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 05:24:11.109222", "score": "0.9996", "loss": "0.0005", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double.compare(waypoint.delay, delay) != 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0) return false; if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return false; return orbitCCW == waypoint.orbitCCW; }", "n_tokens": 172, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 05:24:12.487275", "score": "0.9992", "loss": "0.001", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double.compare(waypoint.delay, delay) != 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0) return false; if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return false; return orbitCCW == waypoint.orbitCCW; }", "n_tokens": 160, "n_pass": [51, 3, 3]}
{"time": "2021-02-13 05:24:13.858198", "score": "0.9996", "loss": "0.0005", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0) return false; if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return false; return orbitCCW == waypoint.orbitCCW; }", "n_tokens": 148, "n_pass": [55, 4, 4]}
{"time": "2021-02-13 05:24:15.245312", "score": "0.9995", "loss": "0.0006", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return false; return orbitCCW == waypoint.orbitCCW; }", "n_tokens": 142, "n_pass": [97, 5, 5]}
{"time": "2021-02-13 05:24:16.612182", "score": "0.998", "loss": "0.0026", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return false; waypoint.orbitCCW; }", "n_tokens": 135, "n_pass": [102, 6, 6]}
{"time": "2021-02-13 05:24:18.751381", "score": "0.998", "loss": "0.0025", "code": "@Override public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return falseorbitCCW; }", "n_tokens": 131, "n_pass": [169, 7, 7]}
{"time": "2021-02-13 05:24:20.107567", "score": "0.9851", "loss": "0.018", "code": "public boolean equals(Object o) { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return falseorbitCCW; }", "n_tokens": 128, "n_pass": [171, 8, 8]}
{"time": "2021-02-13 05:24:21.828685", "score": "0.4343", "loss": "0.9404", "code": "public boolean equals() { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false; Waypoint waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return falseorbitCCW; }", "n_tokens": 125, "n_pass": [174, 9, 9]}
{"time": "2021-02-13 05:24:28.994132", "score": "0.4453", "loss": "1.0176", "code": "public boolean equals() { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false;waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0) return falseorbitCCW; }", "n_tokens": 122, "n_pass": [189, 14, 10]}
{"time": "2021-02-13 05:24:33.429915", "score": "0.4741", "loss": "1.1281", "code": "public boolean equals() { if (this == (o instanceof Waypoint)) return false; if (!super.equals(o)) return false;waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 118, "n_pass": [212, 17, 11]}
{"time": "2021-02-13 05:24:35.518732", "score": "0.7064", "loss": "0.5361", "code": "public boolean equals() { if (this == (o )) return false; if (!super.equals(o)) return false;waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 115, "n_pass": [221, 18, 12]}
{"time": "2021-02-13 05:24:36.853998", "score": "0.3421", "loss": "1.5752", "code": "public boolean equals() { if (this == (o )) ; if (!super.equals(o)) return false;waypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 112, "n_pass": [223, 19, 13]}
{"time": "2021-02-13 05:24:40.900719", "score": "0.5501", "loss": "1.0881", "code": "public boolean equals() { if (this == (o )) ; if (!super.equals(o)) returnwaypoint = (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 109, "n_pass": [229, 22, 14]}
{"time": "2021-02-13 05:24:42.273395", "score": "0.56", "loss": "0.9212", "code": "public boolean equals() { if (this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double= 0) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 106, "n_pass": [230, 23, 15]}
{"time": "2021-02-13 05:24:43.638120", "score": "0.65", "loss": "0.7211", "code": "public boolean equals() { if (this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle, yawAngle)  != 0)orbitCCW; }", "n_tokens": 103, "n_pass": [235, 24, 16]}
{"time": "2021-02-13 05:24:45.015708", "score": "0.6874", "loss": "0.6243", "code": "public boolean equals() { if (this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle)  != 0)orbitCCW; }", "n_tokens": 100, "n_pass": [248, 25, 17]}
{"time": "2021-02-13 05:24:46.722723", "score": "0.7032", "loss": "0.573", "code": "public boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if (Double.compare(waypoint.yawAngle)  != 0)orbitCCW; }", "n_tokens": 97, "n_pass": [256, 26, 18]}
{"time": "2021-02-13 05:24:51.152587", "score": "0.7344", "loss": "0.4965", "code": "public boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)  != 0)orbitCCW; }", "n_tokens": 94, "n_pass": [280, 29, 19]}
{"time": "2021-02-13 05:24:52.487278", "score": "0.6606", "loss": "0.651", "code": "public boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)  0)orbitCCW; }", "n_tokens": 91, "n_pass": [283, 30, 20]}
{"time": "2021-02-13 05:25:01.316625", "score": "0.6606", "loss": "0.651", "code": "public boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 89, "n_pass": [374, 33, 21]}
{"time": "2021-02-13 05:25:02.671672", "score": "0.6606", "loss": "0.651", "code": " boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 88, "n_pass": [378, 34, 22]}
{"time": "2021-02-13 05:25:04.011502", "score": "0.6606", "loss": "0.651", "code": "boolean equals() {(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 87, "n_pass": [379, 35, 23]}
{"time": "2021-02-13 05:25:06.083334", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this == (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 86, "n_pass": [385, 36, 24]}
{"time": "2021-02-13 05:25:07.417969", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this== (o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 85, "n_pass": [389, 37, 25]}
{"time": "2021-02-13 05:25:09.486007", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this==(o )) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 84, "n_pass": [392, 38, 26]}
{"time": "2021-02-13 05:25:10.822155", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this==(o)) ; if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 83, "n_pass": [395, 39, 27]}
{"time": "2021-02-13 05:25:12.155742", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this==(o)); if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 82, "n_pass": [398, 40, 28]}
{"time": "2021-02-13 05:25:13.485870", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this==(o));if (!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 81, "n_pass": [400, 41, 29]}
{"time": "2021-02-13 05:25:14.815945", "score": "0.6606", "loss": "0.651", "code": "boolean equals(){(this==(o));if(!super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 80, "n_pass": [402, 42, 30]}
{"time": "2021-02-13 05:25:16.170448", "score": "0.4042", "loss": "1.2955", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) return false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 79, "n_pass": [404, 43, 31]}
{"time": "2021-02-13 05:25:19.204742", "score": "0.3254", "loss": "1.6126", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double.compare(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 77, "n_pass": [417, 45, 32]}
{"time": "2021-02-13 05:25:21.880491", "score": "0.252", "loss": "1.8816", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint.acceptanceRadius, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 75, "n_pass": [422, 47, 33]}
{"time": "2021-02-13 05:25:23.213283", "score": "0.2647", "loss": "1.8044", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius) != 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 73, "n_pass": [424, 48, 34]}
{"time": "2021-02-13 05:25:37.866251", "score": "0.2647", "loss": "1.8044", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!= 0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 72, "n_pass": [525, 53, 35]}
{"time": "2021-02-13 05:25:39.201858", "score": "0.2647", "loss": "1.8044", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if ((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 71, "n_pass": [527, 54, 36]}
{"time": "2021-02-13 05:25:40.532211", "score": "0.2647", "loss": "1.8044", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint.yawAngle)0)orbitCCW; }", "n_tokens": 70, "n_pass": [531, 55, 37]}
{"time": "2021-02-13 05:25:41.883657", "score": "0.2565", "loss": "1.8671", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypointyawAngle)0)orbitCCW; }", "n_tokens": 69, "n_pass": [535, 56, 38]}
{"time": "2021-02-13 05:25:43.209424", "score": "0.2869", "loss": "1.7309", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint)0)orbitCCW; }", "n_tokens": 68, "n_pass": [536, 57, 39]}
{"time": "2021-02-13 05:25:44.566501", "score": "0.4355", "loss": "1.2088", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint))orbitCCW; }", "n_tokens": 67, "n_pass": [538, 58, 40]}
{"time": "2021-02-13 05:25:45.921401", "score": "0.4795", "loss": "1.0591", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint)); }", "n_tokens": 66, "n_pass": [540, 59, 41]}
{"time": "2021-02-13 05:25:47.244593", "score": "0.4795", "loss": "1.0591", "code": "boolean equals(){(this==(o));if(super.equals(o)) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 65, "n_pass": [542, 60, 42]}
{"time": "2021-02-13 05:25:51.366557", "score": "0.7721", "loss": "0.2947", "code": "boolean equals(){(this==(o));if(super.equals()) return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 64, "n_pass": [565, 62, 43]}
{"time": "2021-02-13 05:25:52.692262", "score": "0.7721", "loss": "0.2947", "code": "boolean equals(){(this==(o));if(super.equals())return (Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 63, "n_pass": [568, 63, 44]}
{"time": "2021-02-13 05:25:54.418530", "score": "0.7721", "loss": "0.2947", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint) o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 62, "n_pass": [570, 64, 45]}
{"time": "2021-02-13 05:25:55.767597", "score": "0.7721", "loss": "0.2947", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint)o; if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 61, "n_pass": [574, 65, 46]}
{"time": "2021-02-13 05:25:57.107048", "score": "0.7364", "loss": "0.3487", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint); if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 60, "n_pass": [575, 66, 47]}
{"time": "2021-02-13 05:25:58.428514", "score": "0.7364", "loss": "0.3487", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if (Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 59, "n_pass": [577, 67, 48]}
{"time": "2021-02-13 05:26:00.132090", "score": "0.7364", "loss": "0.3487", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double) false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 58, "n_pass": [579, 68, 49]}
{"time": "2021-02-13 05:26:01.449698", "score": "0.7364", "loss": "0.3487", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double)false; if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 57, "n_pass": [583, 69, 50]}
{"time": "2021-02-13 05:26:02.754121", "score": "0.533", "loss": "0.7031", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double); if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 56, "n_pass": [584, 70, 51]}
{"time": "2021-02-13 05:26:04.057556", "score": "0.6611", "loss": "0.4919", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double) if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 55, "n_pass": [585, 71, 52]}
{"time": "2021-02-13 05:26:05.370495", "score": "0.6611", "loss": "0.4919", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double)if (Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 54, "n_pass": [586, 72, 53]}
{"time": "2021-02-13 05:26:06.693795", "score": "0.6611", "loss": "0.4919", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double)if(Double(waypoint, acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 53, "n_pass": [588, 73, 54]}
{"time": "2021-02-13 05:26:08.003647", "score": "0.6611", "loss": "0.4919", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double)if(Double(waypoint,acceptanceRadius)!=0)if((waypoint));}", "n_tokens": 52, "n_pass": [594, 74, 55]}
{"time": "2021-02-13 05:26:09.676223", "score": "0.7971", "loss": "0.2662", "code": "boolean equals(){(this==(o));if(super.equals())return(Waypoint);if(Double)if(Double(waypoint,acceptanceRadius)!=0)((waypoint));}", "n_tokens": 51, "n_pass": [601, 75, 56]}
{"time": "2021-02-13 05:26:13.726828", "score": "0.9463", "loss": "0.0679", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if(Double(waypoint,acceptanceRadius)!=0)((waypoint));}", "n_tokens": 50, "n_pass": [632, 77, 57]}
{"time": "2021-02-13 05:26:15.062351", "score": "0.9649", "loss": "0.0478", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if(Double(waypointacceptanceRadius)!=0)((waypoint));}", "n_tokens": 49, "n_pass": [646, 78, 58]}
{"time": "2021-02-13 05:26:16.364525", "score": "0.9625", "loss": "0.0482", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if(Double(waypoint)!=0)((waypoint));}", "n_tokens": 48, "n_pass": [647, 79, 59]}
{"time": "2021-02-13 05:26:20.840186", "score": "0.9598", "loss": "0.0483", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if((waypoint)!=0)((waypoint));}", "n_tokens": 47, "n_pass": [693, 81, 60]}
{"time": "2021-02-13 05:26:22.176571", "score": "0.9423", "loss": "0.0719", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if((waypoint)=0)((waypoint));}", "n_tokens": 46, "n_pass": [697, 82, 61]}
{"time": "2021-02-13 05:26:23.520491", "score": "0.9446", "loss": "0.0719", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if((waypoint)0)((waypoint));}", "n_tokens": 45, "n_pass": [698, 83, 62]}
{"time": "2021-02-13 05:26:24.818810", "score": "0.9738", "loss": "0.0317", "code": "boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if((waypoint))((waypoint));}", "n_tokens": 44, "n_pass": [699, 84, 63]}

Minimal simplified code:
boolean equals(){(this==(o));if(super.equals())(Waypoint);if(Double)if((waypoint))((waypoint));}

