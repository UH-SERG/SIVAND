
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/core/StatUtils_main.java
method_name = main
method_body = public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals("L")) { String I = "I"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, "M" + args[2])); }
predict, score, loss = main, 0.9902905821800232, 0.010893953032791615

Trace of simplified code(s):
{"time": "2021-02-13 15:37:43.016911", "score": "0.967", "loss": "0.0405", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } else { CD = StatUtils.margDepMatrix(D, args[2]); } System.out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 204, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:37:44.408939", "score": "0.9844", "loss": "0.0169", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = D.classIndex(); double[][] CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 178, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 15:37:45.790418", "score": "0.9441", "loss": "0.0707", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I = args[3]; CD = StatUtils.LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 165, "n_pass": [54, 3, 3]}
{"time": "2021-02-13 15:37:47.167289", "score": "0.9914", "loss": "0.0096", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils.prepareData(D); int L = CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 152, "n_pass": [59, 4, 4]}
{"time": "2021-02-13 15:37:48.559383", "score": "0.9966", "loss": "0.0039", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils CD = null; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 140, "n_pass": [67, 5, 5]}
{"time": "2021-02-13 15:37:49.935544", "score": "0.9914", "loss": "0.0095", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), new Random(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 134, "n_pass": [101, 6, 6]}
{"time": "2021-02-13 15:37:51.317861", "score": "0.9434", "loss": "0.0661", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset(args); MLUtils; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 127, "n_pass": [111, 7, 7]}
{"time": "2021-02-13 15:37:53.048146", "score": "0.976", "loss": "0.0258", "code": "public static void main(String[] args) throws Exception { Instances D = Evaluation.loadDataset; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 121, "n_pass": [122, 8, 8]}
{"time": "2021-02-13 15:37:54.780491", "score": "0.9861", "loss": "0.0178", "code": "public static void main(String[] args) throws Exception { Instances D; if (args[2].equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 115, "n_pass": [141, 9, 9]}
{"time": "2021-02-13 15:37:56.534449", "score": "0.9893", "loss": "0.0133", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals(\"L\")) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 112, "n_pass": [198, 10, 10]}
{"time": "2021-02-13 15:37:57.907603", "score": "0.9734", "loss": "0.0328", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String I = \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 109, "n_pass": [199, 11, 11]}
{"time": "2021-02-13 15:37:59.279569", "score": "0.9768", "loss": "0.0285", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I .LEAD(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 106, "n_pass": [202, 12, 12]}
{"time": "2021-02-13 15:38:00.635095", "score": "0.9722", "loss": "0.0356", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D, new SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 103, "n_pass": [210, 13, 13]}
{"time": "2021-02-13 15:38:01.992058", "score": "0.95", "loss": "0.0686", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO(), I); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 100, "n_pass": [212, 14, 14]}
{"time": "2021-02-13 15:38:03.334808", "score": "0.9582", "loss": "0.0559", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, \"M\" + args[2])); }", "n_tokens": 97, "n_pass": [214, 15, 15]}
{"time": "2021-02-13 15:38:04.678291", "score": "0.9584", "loss": "0.0581", "code": "public static void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 93, "n_pass": [219, 16, 16]}
{"time": "2021-02-13 15:38:06.020948", "score": "0.9584", "loss": "0.0581", "code": " void main(String[] args) throws Exception { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 90, "n_pass": [223, 17, 17]}
{"time": "2021-02-13 15:38:07.730362", "score": "0.977", "loss": "0.0441", "code": " void main(String[] args)  { Instances D; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 87, "n_pass": [228, 18, 18]}
{"time": "2021-02-13 15:38:09.088595", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args)  { ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 84, "n_pass": [230, 19, 19]}
{"time": "2021-02-13 15:38:14.154795", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args) { ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 83, "n_pass": [310, 20, 20]}
{"time": "2021-02-13 15:38:15.512465", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args){ ; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 82, "n_pass": [311, 21, 21]}
{"time": "2021-02-13 15:38:16.860796", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args){; if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 81, "n_pass": [313, 22, 22]}
{"time": "2021-02-13 15:38:18.194892", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args){ if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 80, "n_pass": [314, 23, 23]}
{"time": "2021-02-13 15:38:19.522214", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args){if (args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 79, "n_pass": [315, 24, 24]}
{"time": "2021-02-13 15:38:20.875901", "score": "0.9121", "loss": "0.179", "code": " void main(String[] args){if(args.equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 78, "n_pass": [317, 25, 25]}
{"time": "2021-02-13 15:38:22.229368", "score": "0.9511", "loss": "0.0989", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (args.length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 76, "n_pass": [319, 26, 26]}
{"time": "2021-02-13 15:38:23.563464", "score": "0.9607", "loss": "0.0773", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(D,SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 74, "n_pass": [329, 27, 27]}
{"time": "2021-02-13 15:38:24.893434", "score": "0.9597", "loss": "0.0794", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } out.println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 72, "n_pass": [335, 28, 28]}
{"time": "2021-02-13 15:38:26.247546", "score": "0.9766", "loss": "0.0401", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(MatrixUtils.toString(CD, + args[2])); }", "n_tokens": 70, "n_pass": [340, 29, 29]}
{"time": "2021-02-13 15:38:27.592116", "score": "0.9788", "loss": "0.0352", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString(CD, + args[2])); }", "n_tokens": 68, "n_pass": [342, 30, 30]}
{"time": "2021-02-13 15:38:28.916297", "score": "0.9893", "loss": "0.0189", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( + args[2])); }", "n_tokens": 66, "n_pass": [344, 31, 31]}
{"time": "2021-02-13 15:38:30.269259", "score": "0.9926", "loss": "0.0129", "code": " void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 64, "n_pass": [345, 32, 32]}
{"time": "2021-02-13 15:38:31.630762", "score": "0.9926", "loss": "0.0129", "code": "void main(String[] args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 63, "n_pass": [351, 33, 33]}
{"time": "2021-02-13 15:38:33.687749", "score": "0.9926", "loss": "0.0129", "code": "void main(String[]args){if(equals()) { String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 62, "n_pass": [359, 34, 34]}
{"time": "2021-02-13 15:38:40.795672", "score": "0.9926", "loss": "0.0129", "code": "void main(String[]args){if(equals()){ String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 61, "n_pass": [451, 35, 35]}
{"time": "2021-02-13 15:38:42.118038", "score": "0.9926", "loss": "0.0129", "code": "void main(String[]args){if(equals()){String= \"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 60, "n_pass": [452, 36, 36]}
{"time": "2021-02-13 15:38:43.473847", "score": "0.9926", "loss": "0.0129", "code": "void main(String[]args){if(equals()){String=\"I\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 59, "n_pass": [455, 37, 37]}
{"time": "2021-02-13 15:38:44.788499", "score": "0.989", "loss": "0.018", "code": "void main(String[]args){if(equals()){String=\"\"; if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 58, "n_pass": [457, 38, 38]}
{"time": "2021-02-13 15:38:46.115077", "score": "0.989", "loss": "0.018", "code": "void main(String[]args){if(equals()){String=\"\";if (length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 57, "n_pass": [460, 39, 39]}
{"time": "2021-02-13 15:38:47.462557", "score": "0.989", "loss": "0.018", "code": "void main(String[]args){if(equals()){String=\"\";if(length >= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 56, "n_pass": [462, 40, 40]}
{"time": "2021-02-13 15:38:48.809409", "score": "0.989", "loss": "0.018", "code": "void main(String[]args){if(equals()){String=\"\";if(length>= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 55, "n_pass": [465, 41, 41]}
{"time": "2021-02-13 15:38:50.151547", "score": "0.9967", "loss": "0.0054", "code": "void main(String[]args){if(equals()){String=\"\";if(length= 3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 54, "n_pass": [466, 42, 42]}
{"time": "2021-02-13 15:38:51.474996", "score": "0.9967", "loss": "0.0054", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3) I(SMO()); } println(toString( args[2])); }", "n_tokens": 53, "n_pass": [468, 43, 43]}
{"time": "2021-02-13 15:38:52.813738", "score": "0.9967", "loss": "0.0054", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)I(SMO()); } println(toString( args[2])); }", "n_tokens": 52, "n_pass": [471, 44, 44]}
{"time": "2021-02-13 15:38:54.142588", "score": "0.9982", "loss": "0.0032", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO()); } println(toString( args[2])); }", "n_tokens": 51, "n_pass": [472, 45, 45]}
{"time": "2021-02-13 15:38:55.470168", "score": "0.9982", "loss": "0.0032", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());} println(toString( args[2])); }", "n_tokens": 50, "n_pass": [479, 46, 46]}
{"time": "2021-02-13 15:38:56.803129", "score": "0.9982", "loss": "0.0032", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}println(toString( args[2])); }", "n_tokens": 49, "n_pass": [481, 47, 47]}
{"time": "2021-02-13 15:38:58.136642", "score": "0.9796", "loss": "0.0341", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}(toString( args[2])); }", "n_tokens": 48, "n_pass": [482, 48, 48]}
{"time": "2021-02-13 15:38:59.444167", "score": "0.9452", "loss": "0.0888", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}(( args[2])); }", "n_tokens": 47, "n_pass": [484, 49, 49]}
{"time": "2021-02-13 15:39:00.756830", "score": "0.9452", "loss": "0.0888", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}((args[2])); }", "n_tokens": 46, "n_pass": [486, 50, 50]}
{"time": "2021-02-13 15:39:02.093614", "score": "0.9452", "loss": "0.0888", "code": "void main(String[]args){if(equals()){String=\"\";if(length=3)(SMO());}((args[2]));}", "n_tokens": 45, "n_pass": [494, 51, 51]}
{"time": "2021-02-13 15:39:04.153181", "score": "0.8973", "loss": "0.2035", "code": "void main(String[]args){if(equals()){String=\"\";if(length3)(SMO());}((args[2]));}", "n_tokens": 44, "n_pass": [521, 52, 52]}
{"time": "2021-02-13 15:39:05.486858", "score": "0.8973", "loss": "0.2035", "code": "void main(String[]args){if(equals()){String=\"\";if(length)(SMO());}((args[2]));}", "n_tokens": 43, "n_pass": [522, 53, 53]}

Minimal simplified code:
void main(String[]args){if(equals()){String="";if(length)(SMO());}((args[2]));}

