
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/trikita__slide/src/main/java/trikita/slide/ui/Editor_onSelectionChanged.java
method_name = onSelectionChanged
method_body = @Override protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }
predict, score, loss = onSelectionChanged, 0.9938450455665588, 0.021929997950792313

Trace of simplified code(s):
{"time": "2021-02-13 15:48:09.623682", "score": "0.9938", "loss": "0.0219", "code": "@Override protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:48:11.323071", "score": "0.8565", "loss": "0.6465", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { mOnSelectionChangedListener.onSelectionChanged(selStart); } }", "n_tokens": 53, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 15:48:14.339141", "score": "0.9898", "loss": "0.0396", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) {(selStart); } }", "n_tokens": 49, "n_pass": [57, 4, 3]}
{"time": "2021-02-13 15:48:15.663911", "score": "0.9843", "loss": "0.0637", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListener != null) { } }", "n_tokens": 45, "n_pass": [58, 5, 4]}
{"time": "2021-02-13 15:48:17.339189", "score": "0.8237", "loss": "0.9438", "code": "protected void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { } }", "n_tokens": 41, "n_pass": [70, 6, 5]}
{"time": "2021-02-13 15:48:20.004386", "score": "0.8237", "loss": "0.9438", "code": " void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { } }", "n_tokens": 40, "n_pass": [111, 7, 6]}
{"time": "2021-02-13 15:48:21.318610", "score": "0.8237", "loss": "0.9438", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStart, selEnd); if (mOnSelectionChangedListenernull) { } }", "n_tokens": 39, "n_pass": [112, 8, 7]}
{"time": "2021-02-13 15:48:23.330040", "score": "0.9221", "loss": "0.3752", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd); if (mOnSelectionChangedListenernull) { } }", "n_tokens": 37, "n_pass": [125, 9, 8]}
{"time": "2021-02-13 15:48:29.392357", "score": "0.9221", "loss": "0.3752", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if (mOnSelectionChangedListenernull) { } }", "n_tokens": 36, "n_pass": [181, 10, 9]}
{"time": "2021-02-13 15:48:30.690007", "score": "0.9221", "loss": "0.3752", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(mOnSelectionChangedListenernull) { } }", "n_tokens": 35, "n_pass": [183, 11, 10]}
{"time": "2021-02-13 15:48:32.006738", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null) { } }", "n_tokens": 34, "n_pass": [185, 12, 11]}
{"time": "2021-02-13 15:48:33.303239", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){ } }", "n_tokens": 33, "n_pass": [188, 13, 12]}
{"time": "2021-02-13 15:48:34.629130", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){} }", "n_tokens": 32, "n_pass": [190, 14, 13]}
{"time": "2021-02-13 15:48:35.925585", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart, int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){}}", "n_tokens": 31, "n_pass": [192, 15, 14]}
{"time": "2021-02-13 15:48:37.970751", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart,int selEnd) { super.onSelectionChanged(selStartselEnd);if(null){}}", "n_tokens": 30, "n_pass": [202, 16, 15]}
{"time": "2021-02-13 15:48:39.269305", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart,int selEnd){ super.onSelectionChanged(selStartselEnd);if(null){}}", "n_tokens": 29, "n_pass": [207, 17, 16]}
{"time": "2021-02-13 15:48:40.575321", "score": "0.9883", "loss": "0.0593", "code": "void onSelectionChanged(int selStart,int selEnd){super.onSelectionChanged(selStartselEnd);if(null){}}", "n_tokens": 28, "n_pass": [209, 18, 17]}
{"time": "2021-02-13 15:48:43.207585", "score": "0.9887", "loss": "0.056", "code": "void onSelectionChanged(int selStart,int selEnd){super.onSelectionChanged(selEnd);if(null){}}", "n_tokens": 27, "n_pass": [214, 20, 18]}
{"time": "2021-02-13 15:48:44.503297", "score": "0.895", "loss": "1.0053", "code": "void onSelectionChanged(int selStart,int selEnd){super.onSelectionChanged();if(null){}}", "n_tokens": 26, "n_pass": [215, 21, 19]}
{"time": "2021-02-13 15:48:46.520582", "score": "0.6515", "loss": "2.0391", "code": "void onSelectionChanged(int selStart,int selEnd){superonSelectionChanged();if(null){}}", "n_tokens": 25, "n_pass": [239, 22, 20]}
{"time": "2021-02-13 15:48:48.939483", "score": "0.8654", "loss": "0.8767", "code": "void onSelectionChanged(int selStart,int selEnd){onSelectionChanged();if(null){}}", "n_tokens": 24, "n_pass": [264, 23, 21]}

Minimal simplified code:
void onSelectionChanged(int selStart,int selEnd){onSelectionChanged();if(null){}}

