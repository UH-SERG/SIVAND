
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_hil_rc_inputs_raw_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(chan4_raw); packet.payload.putUnsignedShort(chan5_raw); packet.payload.putUnsignedShort(chan6_raw); packet.payload.putUnsignedShort(chan7_raw); packet.payload.putUnsignedShort(chan8_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }
predict, score, loss = pack, 0.8754786849021912, 0.13508054614067078

Trace of simplified code(s):
{"time": "2021-02-13 14:46:33.862758", "score": "0.9515", "loss": "0.0516", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(chan4_raw); packet.payload.putUnsignedShort(chan5_raw); packet.payload.putUnsignedShort(chan6_raw); packet.payload.putUnsignedShort(chan7_raw); packet.payload.putUnsignedShort(chan8_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 258, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:46:35.259172", "score": "0.9464", "loss": "0.0589", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(chan9_raw); packet.payload.putUnsignedShort(chan10_raw); packet.payload.putUnsignedShort(chan11_raw); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 193, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 14:46:36.616948", "score": "0.9697", "loss": "0.0325", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_HIL_RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 161, "n_pass": [20, 3, 3]}
{"time": "2021-02-13 14:46:37.959631", "score": "0.9529", "loss": "0.0496", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 129, "n_pass": [22, 4, 4]}
{"time": "2021-02-13 14:46:39.336380", "score": "0.924", "loss": "0.0829", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShort(chan1_raw); packet.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 113, "n_pass": [42, 5, 5]}
{"time": "2021-02-13 14:46:40.720434", "score": "0.8471", "loss": "0.1765", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payload.putUnsignedShort(chan3_raw); packet.payload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 105, "n_pass": [66, 6, 6]}
{"time": "2021-02-13 14:46:42.082115", "score": "0.7909", "loss": "0.2494", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payload; packet.payload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 97, "n_pass": [69, 7, 7]}
{"time": "2021-02-13 14:46:43.799020", "score": "0.8299", "loss": "0.1956", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet.payload.putUnsignedShort(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 93, "n_pass": [106, 8, 8]}
{"time": "2021-02-13 14:46:45.127694", "score": "0.78", "loss": "0.2645", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 89, "n_pass": [108, 9, 9]}
{"time": "2021-02-13 14:46:46.831243", "score": "0.8171", "loss": "0.2135", "code": "public MAVLinkPacket pack() { MAVLinkPacket RC_INPUTS_RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 85, "n_pass": [118, 10, 10]}
{"time": "2021-02-13 14:46:48.165984", "score": "0.8358", "loss": "0.1915", "code": "public MAVLinkPacket pack() { MAVLinkPacket RAW; packet.payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 81, "n_pass": [119, 11, 11]}
{"time": "2021-02-13 14:46:49.503696", "score": "0.7836", "loss": "0.2584", "code": "public MAVLinkPacket pack() { MAVLinkPacket .payload.putUnsignedLong(time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 77, "n_pass": [120, 12, 12]}
{"time": "2021-02-13 14:46:50.841428", "score": "0.8097", "loss": "0.2354", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packet.payload.putUnsignedShortpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 73, "n_pass": [121, 13, 13]}
{"time": "2021-02-13 14:46:52.164368", "score": "0.7576", "loss": "0.3111", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetpacket.payload.putUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 69, "n_pass": [124, 14, 14]}
{"time": "2021-02-13 14:46:53.510470", "score": "0.6451", "loss": "0.502", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw); packet.payloadpayload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 65, "n_pass": [125, 15, 15]}
{"time": "2021-02-13 14:46:54.853790", "score": "0.6463", "loss": "0.4832", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);payload.putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 61, "n_pass": [128, 16, 16]}
{"time": "2021-02-13 14:46:56.536835", "score": "0.5712", "loss": "0.6378", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort(); packet(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 59, "n_pass": [174, 17, 17]}
{"time": "2021-02-13 14:46:57.849821", "score": "0.5269", "loss": "0.738", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan12_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 57, "n_pass": [176, 18, 18]}
{"time": "2021-02-13 14:46:59.164561", "score": "0.5269", "loss": "0.738", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan_raw); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 55, "n_pass": [178, 19, 19]}
{"time": "2021-02-13 14:47:00.468864", "score": "0.5867", "loss": "0.6048", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet.payload.putUnsignedByte(rssi); return packet; }", "n_tokens": 53, "n_pass": [179, 20, 20]}
{"time": "2021-02-13 14:47:01.783215", "score": "0.61", "loss": "0.5486", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet.putUnsignedByte(rssi); return packet; }", "n_tokens": 51, "n_pass": [182, 21, 21]}
{"time": "2021-02-13 14:47:03.087264", "score": "0.5602", "loss": "0.65", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi); return packet; }", "n_tokens": 49, "n_pass": [183, 22, 22]}
{"time": "2021-02-13 14:47:04.402254", "score": "0.6864", "loss": "0.4033", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi); packet; }", "n_tokens": 47, "n_pass": [186, 23, 23]}
{"time": "2021-02-13 14:47:05.711457", "score": "0.6663", "loss": "0.4307", "code": "public MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 45, "n_pass": [187, 24, 24]}
{"time": "2021-02-13 14:47:07.019179", "score": "0.6663", "loss": "0.4307", "code": "MAVLinkPacket pack() { MAVLinkPacket (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 43, "n_pass": [189, 25, 25]}
{"time": "2021-02-13 14:47:08.672482", "score": "0.5328", "loss": "0.6634", "code": "MAVLinkPacket pack() { (time_usec); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 41, "n_pass": [194, 26, 26]}
{"time": "2021-02-13 14:47:09.980808", "score": "0.6119", "loss": "0.5287", "code": "MAVLinkPacket pack() { (time); packetputUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 39, "n_pass": [196, 27, 27]}
{"time": "2021-02-13 14:47:11.309832", "score": "0.7629", "loss": "0.2956", "code": "MAVLinkPacket pack() { (time);putUnsignedShort(chan2_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 37, "n_pass": [198, 28, 28]}
{"time": "2021-02-13 14:47:12.638375", "score": "0.8124", "loss": "0.2282", "code": "MAVLinkPacket pack() { (time);putUnsignedShort(_raw);putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 35, "n_pass": [200, 29, 29]}
{"time": "2021-02-13 14:47:13.938781", "score": "0.8271", "loss": "0.2073", "code": "MAVLinkPacket pack() { (time);putUnsignedShort();putUnsignedShort();(chan); packet(rssi);; }", "n_tokens": 33, "n_pass": [201, 30, 30]}
{"time": "2021-02-13 14:47:15.270353", "score": "0.5943", "loss": "0.536", "code": "MAVLinkPacket pack() { (time);putUnsignedShort();putUnsignedShort();(chan);(rssi);; }", "n_tokens": 31, "n_pass": [207, 31, 31]}
{"time": "2021-02-13 14:47:19.923031", "score": "0.5943", "loss": "0.536", "code": "MAVLinkPacket pack() { (time);putUnsignedShort();putUnsignedShort();(chan);(rssi); }", "n_tokens": 30, "n_pass": [256, 32, 32]}
{"time": "2021-02-13 14:47:22.276933", "score": "0.5943", "loss": "0.536", "code": "MAVLinkPacket pack(){ (time);putUnsignedShort();putUnsignedShort();(chan);(rssi); }", "n_tokens": 29, "n_pass": [264, 33, 33]}
{"time": "2021-02-13 14:47:23.597056", "score": "0.5943", "loss": "0.536", "code": "MAVLinkPacket pack(){(time);putUnsignedShort();putUnsignedShort();(chan);(rssi); }", "n_tokens": 28, "n_pass": [266, 34, 34]}
{"time": "2021-02-13 14:47:27.022108", "score": "0.5943", "loss": "0.536", "code": "MAVLinkPacket pack(){(time);putUnsignedShort();putUnsignedShort();(chan);(rssi);}", "n_tokens": 27, "n_pass": [296, 35, 35]}

Minimal simplified code:
MAVLinkPacket pack(){(time);putUnsignedShort();putUnsignedShort();(chan);(rssi);}

