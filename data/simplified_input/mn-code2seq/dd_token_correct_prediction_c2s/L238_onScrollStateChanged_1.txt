
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/w446108264__ScrollableLayout/ScrollableLayout/app/src/main/java/com/scrollablelayout/simple/recyclerloadmore/EndlessRecyclerOnScrollListener_onScrollStateChanged.java
method_name = onScrollStateChanged
method_body = @Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollState = newState; RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager(); int visibleItemCount = layoutManager.getChildCount(); int totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }
predict, score, loss = onScrollStateChanged, 0.9994660019874573, 0.002371450886130333

Trace of simplified code(s):
{"time": "2021-02-13 12:26:32.684146", "score": "0.9995", "loss": "0.0024", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollState = newState; RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager(); int visibleItemCount = layoutManager.getChildCount(); int totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 135, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:26:34.025844", "score": "0.9994", "loss": "0.0029", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((visibleItemCount > 0 && currentScrollState == RecyclerView.SCROLL_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 101, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 12:26:35.379734", "score": "0.9996", "loss": "0.002", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((_STATE_IDLE && (lastVisibleItemPosition) >= totalItemCount - minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 84, "n_pass": [19, 3, 3]}
{"time": "2021-02-13 12:26:36.703390", "score": "0.9995", "loss": "0.0026", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) { onLoadMore(recyclerView); } }", "n_tokens": 67, "n_pass": [20, 4, 4]}
{"time": "2021-02-13 12:26:38.057702", "score": "0.9996", "loss": "0.002", "code": "@Override public void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 62, "n_pass": [59, 5, 5]}
{"time": "2021-02-13 12:26:39.379250", "score": "0.9991", "loss": "0.0043", "code": " void onScrollStateChanged(RecyclerView recyclerView, int newState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 58, "n_pass": [61, 6, 6]}
{"time": "2021-02-13 12:26:40.689232", "score": "0.9974", "loss": "0.0118", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager.getItemCount(); if ((- minPositionToEndless)) {; } }", "n_tokens": 54, "n_pass": [64, 7, 7]}
{"time": "2021-02-13 12:26:41.996541", "score": "0.9966", "loss": "0.016", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount = layoutManager; if ((- minPositionToEndless)) {; } }", "n_tokens": 50, "n_pass": [71, 8, 8]}
{"time": "2021-02-13 12:26:43.316274", "score": "0.9952", "loss": "0.0229", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); currentScrollStateint totalItemCount; if ((- minPositionToEndless)) {; } }", "n_tokens": 46, "n_pass": [83, 9, 9]}
{"time": "2021-02-13 12:26:44.618726", "score": "0.9511", "loss": "0.2704", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); ; if ((- minPositionToEndless)) {; } }", "n_tokens": 42, "n_pass": [94, 10, 10]}
{"time": "2021-02-13 12:26:46.579081", "score": "0.9511", "loss": "0.2704", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); if ((- minPositionToEndless)) {; } }", "n_tokens": 40, "n_pass": [125, 11, 11]}
{"time": "2021-02-13 12:26:47.882841", "score": "0.9716", "loss": "0.1504", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView, newState); if ((minPositionToEndless)) {; } }", "n_tokens": 38, "n_pass": [127, 12, 12]}
{"time": "2021-02-13 12:26:49.905491", "score": "0.9793", "loss": "0.1035", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerViewnewState); if ((minPositionToEndless)) {; } }", "n_tokens": 36, "n_pass": [141, 13, 13]}
{"time": "2021-02-13 12:26:55.280094", "score": "0.9824", "loss": "0.0857", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView); if ((minPositionToEndless)) {; } }", "n_tokens": 35, "n_pass": [193, 14, 14]}
{"time": "2021-02-13 12:26:56.598525", "score": "0.9824", "loss": "0.0857", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if ((minPositionToEndless)) {; } }", "n_tokens": 34, "n_pass": [195, 15, 15]}
{"time": "2021-02-13 12:26:57.907945", "score": "0.9824", "loss": "0.0857", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)) {; } }", "n_tokens": 33, "n_pass": [197, 16, 16]}
{"time": "2021-02-13 12:26:59.231836", "score": "0.9824", "loss": "0.0857", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){; } }", "n_tokens": 32, "n_pass": [203, 17, 17]}
{"time": "2021-02-13 12:27:00.533446", "score": "0.9824", "loss": "0.0857", "code": " void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 31, "n_pass": [205, 18, 18]}
{"time": "2021-02-13 12:27:01.846586", "score": "0.9824", "loss": "0.0857", "code": "void onScrollStateChanged(RecyclerView recyclerViewnewState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 30, "n_pass": [208, 19, 19]}
{"time": "2021-02-13 12:27:03.891985", "score": "0.9855", "loss": "0.0706", "code": "void onScrollStateChanged(RecyclerView newState) { super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 29, "n_pass": [215, 20, 20]}
{"time": "2021-02-13 12:27:05.194244", "score": "0.9855", "loss": "0.0706", "code": "void onScrollStateChanged(RecyclerView newState){ super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 28, "n_pass": [218, 21, 21]}
{"time": "2021-02-13 12:27:06.500354", "score": "0.9855", "loss": "0.0706", "code": "void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged(recyclerView);if((minPositionToEndless)){ } }", "n_tokens": 27, "n_pass": [220, 22, 22]}
{"time": "2021-02-13 12:27:09.111712", "score": "0.9208", "loss": "0.4338", "code": "void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged();if((minPositionToEndless)){ } }", "n_tokens": 26, "n_pass": [225, 24, 23]}
{"time": "2021-02-13 12:27:13.099588", "score": "0.9208", "loss": "0.4338", "code": "void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged();if((minPositionToEndless)){} }", "n_tokens": 25, "n_pass": [254, 26, 24]}
{"time": "2021-02-13 12:27:14.423334", "score": "0.9208", "loss": "0.4338", "code": "void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged();if((minPositionToEndless)){}}", "n_tokens": 24, "n_pass": [255, 27, 25]}

Minimal simplified code:
void onScrollStateChanged(RecyclerView newState){super.onScrollStateChanged();if((minPositionToEndless)){}}

