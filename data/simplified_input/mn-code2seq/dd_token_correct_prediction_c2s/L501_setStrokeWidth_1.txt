
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wotomas__VoiceRipple/ripplelibrary/src/main/java/info/kimjihyok/ripplelibrary/renderer/TimerCircleRippleRenderer_setStrokeWidth.java
method_name = setStrokeWidth
method_body = public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException("Stroke Width should be an even number!"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }
predict, score, loss = setStrokeWidth, 0.9884253740310669, 0.06704086810350418

Trace of simplified code(s):
{"time": "2021-02-13 16:56:54.709491", "score": "0.9884", "loss": "0.067", "code": "public void setStrokeWidth(int strokeWidth) { if (strokeWidth % 2 != 0) { throw new IllegalArgumentException(\"Stroke Width should be an even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 75, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:56:56.437197", "score": "0.9881", "loss": "0.0712", "code": "public void setStrokeWidth(int strokeWidth) { if (2 != 0) { throw new IllegalArgumentException(\"Stroke Width should be an even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 71, "n_pass": [48, 2, 2]}
{"time": "2021-02-13 16:56:57.798710", "score": "0.9897", "loss": "0.058", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { throw new IllegalArgumentException(\"Stroke Width should be an even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 66, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 16:56:59.122596", "score": "0.991", "loss": "0.054", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke Width should be an even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 61, "n_pass": [51, 4, 4]}
{"time": "2021-02-13 16:57:00.436651", "score": "0.9917", "loss": "0.0542", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke Widthan even number!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 56, "n_pass": [53, 5, 5]}
{"time": "2021-02-13 16:57:01.746427", "score": "0.9908", "loss": "0.0553", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke Width!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 51, "n_pass": [54, 6, 6]}
{"time": "2021-02-13 16:57:03.452001", "score": "0.9923", "loss": "0.0464", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } this.strokeWidth = strokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 49, "n_pass": [88, 7, 7]}
{"time": "2021-02-13 16:57:04.801147", "score": "0.9855", "loss": "0.1059", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } this.strokeWidthstrokeWidth; timerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 46, "n_pass": [93, 8, 8]}
{"time": "2021-02-13 16:57:06.131884", "score": "0.9863", "loss": "0.0566", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } this.strokeWidthtimerPaint.setStrokeWidth(strokeWidth); }", "n_tokens": 43, "n_pass": [94, 9, 9]}
{"time": "2021-02-13 16:57:08.773712", "score": "0.9663", "loss": "0.1521", "code": "public void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } this.strokeWidthtimerPaint.setStrokeWidth; }", "n_tokens": 40, "n_pass": [96, 11, 10]}
{"time": "2021-02-13 16:57:10.074088", "score": "0.9663", "loss": "0.1521", "code": "void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } this.strokeWidthtimerPaint.setStrokeWidth; }", "n_tokens": 38, "n_pass": [98, 12, 11]}
{"time": "2021-02-13 16:57:11.731452", "score": "0.9645", "loss": "0.2194", "code": "void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); } timerPaint.setStrokeWidth; }", "n_tokens": 35, "n_pass": [113, 13, 12]}
{"time": "2021-02-13 16:57:18.054257", "score": "0.9645", "loss": "0.2194", "code": "void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); }timerPaint.setStrokeWidth; }", "n_tokens": 34, "n_pass": [162, 15, 13]}
{"time": "2021-02-13 16:57:19.373468", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth) { if (0) { (\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 32, "n_pass": [163, 16, 14]}
{"time": "2021-02-13 16:57:22.710134", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth){ if (0) { (\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 31, "n_pass": [174, 18, 15]}
{"time": "2021-02-13 16:57:24.003357", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth){if (0) { (\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 30, "n_pass": [176, 19, 16]}
{"time": "2021-02-13 16:57:25.324835", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth){if(0) { (\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 29, "n_pass": [178, 20, 17]}
{"time": "2021-02-13 16:57:26.614959", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth){if(0){ (\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 28, "n_pass": [182, 21, 18]}
{"time": "2021-02-13 16:57:27.902536", "score": "0.9712", "loss": "0.1243", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"Stroke!\"); }setStrokeWidth; }", "n_tokens": 27, "n_pass": [184, 22, 19]}
{"time": "2021-02-13 16:57:29.212803", "score": "0.9897", "loss": "0.0758", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"!\"); }setStrokeWidth; }", "n_tokens": 26, "n_pass": [187, 23, 20]}
{"time": "2021-02-13 16:57:30.505768", "score": "0.9837", "loss": "0.1087", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"\"); }setStrokeWidth; }", "n_tokens": 25, "n_pass": [188, 24, 21]}
{"time": "2021-02-13 16:57:31.803754", "score": "0.9837", "loss": "0.1087", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"\");}setStrokeWidth; }", "n_tokens": 24, "n_pass": [192, 25, 22]}
{"time": "2021-02-13 16:57:33.094604", "score": "0.7731", "loss": "1.7226", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"\");} }", "n_tokens": 22, "n_pass": [194, 26, 23]}
{"time": "2021-02-13 16:57:35.443749", "score": "0.7731", "loss": "1.7226", "code": "void setStrokeWidth(int strokeWidth){if(0){(\"\");}}", "n_tokens": 21, "n_pass": [218, 27, 24]}

Minimal simplified code:
void setStrokeWidth(int strokeWidth){if(0){("");}}

