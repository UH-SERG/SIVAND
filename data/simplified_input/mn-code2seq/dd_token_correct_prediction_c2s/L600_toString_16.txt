
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__aurora/src/main/java/org/apache/aurora/scheduler/state/SideEffect_toString.java
method_name = toString
method_body = @Override public String toString() { if (nextState.isPresent()) { return action.toString() + " " + nextState.get(); } else { return action.toString(); } }
predict, score, loss = toString, 0.9362236857414246, 0.1490488201379776

Trace of simplified code(s):
{"time": "2021-02-13 18:44:54.443602", "score": "0.9362", "loss": "0.149", "code": "@Override public String toString() { if (nextState.isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 66, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:44:56.131344", "score": "0.7446", "loss": "0.7703", "code": " String toString() { if (nextState.isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 62, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 18:45:01.117270", "score": "0.8944", "loss": "0.2695", "code": " String toString() { if (isPresent()) { return action.toString() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 60, "n_pass": [95, 5, 3]}
{"time": "2021-02-13 18:45:02.764836", "score": "0.8012", "loss": "0.5696", "code": " String toString() { if (isPresent()) { return action() + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 58, "n_pass": [100, 6, 4]}
{"time": "2021-02-13 18:45:04.082841", "score": "0.8093", "loss": "0.526", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState.get(); } else { return action.toString(); } }", "n_tokens": 56, "n_pass": [101, 7, 5]}
{"time": "2021-02-13 18:45:05.383524", "score": "0.8778", "loss": "0.3649", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState(); } else { return action.toString(); } }", "n_tokens": 54, "n_pass": [107, 8, 6]}
{"time": "2021-02-13 18:45:06.679446", "score": "0.9276", "loss": "0.1861", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState; } else { return action.toString(); } }", "n_tokens": 52, "n_pass": [108, 9, 7]}
{"time": "2021-02-13 18:45:07.984142", "score": "0.9052", "loss": "0.2477", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState; } { return action.toString(); } }", "n_tokens": 50, "n_pass": [111, 10, 8]}
{"time": "2021-02-13 18:45:09.291282", "score": "0.9388", "loss": "0.1633", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState; } { action.toString(); } }", "n_tokens": 48, "n_pass": [113, 11, 9]}
{"time": "2021-02-13 18:45:10.592643", "score": "0.9062", "loss": "0.2593", "code": " String toString() { if (isPresent()) { return action + \" \" + nextState; } { toString(); } }", "n_tokens": 46, "n_pass": [114, 12, 10]}
{"time": "2021-02-13 18:45:12.971486", "score": "0.8347", "loss": "0.4661", "code": " String toString() { if (isPresent()) { return + \" \" + nextState; } { toString(); } }", "n_tokens": 44, "n_pass": [128, 13, 11]}
{"time": "2021-02-13 18:45:14.285591", "score": "0.7707", "loss": "0.6999", "code": " String toString() { if (isPresent()) { return \" \" + nextState; } { toString(); } }", "n_tokens": 42, "n_pass": [129, 14, 12]}
{"time": "2021-02-13 18:45:21.983576", "score": "0.7707", "loss": "0.6999", "code": " String toString() { if (isPresent()) { return\" \" + nextState; } { toString(); } }", "n_tokens": 41, "n_pass": [190, 15, 13]}
{"time": "2021-02-13 18:45:23.276092", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\" + nextState; } { toString(); } }", "n_tokens": 40, "n_pass": [191, 16, 14]}
{"time": "2021-02-13 18:45:24.570230", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\"+ nextState; } { toString(); } }", "n_tokens": 39, "n_pass": [193, 17, 15]}
{"time": "2021-02-13 18:45:25.882879", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\"+nextState; } { toString(); } }", "n_tokens": 38, "n_pass": [195, 18, 16]}
{"time": "2021-02-13 18:45:27.176318", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\"+nextState;} { toString(); } }", "n_tokens": 37, "n_pass": [198, 19, 17]}
{"time": "2021-02-13 18:45:28.462963", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\"+nextState;}{ toString(); } }", "n_tokens": 36, "n_pass": [200, 20, 18]}
{"time": "2021-02-13 18:45:29.764992", "score": "0.7655", "loss": "0.7238", "code": " String toString() { if (isPresent()) { return\"\"+nextState;}{toString(); } }", "n_tokens": 35, "n_pass": [202, 21, 19]}
{"time": "2021-02-13 18:45:31.117100", "score": "0.7655", "loss": "0.7238", "code": "String toString() { if (isPresent()) { return\"\"+nextState;}{toString(); } }", "n_tokens": 34, "n_pass": [209, 22, 20]}
{"time": "2021-02-13 18:45:33.504285", "score": "0.7655", "loss": "0.7238", "code": "String toString(){ if (isPresent()) { return\"\"+nextState;}{toString(); } }", "n_tokens": 33, "n_pass": [215, 23, 21]}
{"time": "2021-02-13 18:45:34.800902", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if (isPresent()) { return\"\"+nextState;}{toString(); } }", "n_tokens": 32, "n_pass": [217, 24, 22]}
{"time": "2021-02-13 18:45:36.094934", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if(isPresent()) { return\"\"+nextState;}{toString(); } }", "n_tokens": 31, "n_pass": [219, 25, 23]}
{"time": "2021-02-13 18:45:37.390251", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if(isPresent()){ return\"\"+nextState;}{toString(); } }", "n_tokens": 30, "n_pass": [225, 26, 24]}
{"time": "2021-02-13 18:45:38.683278", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if(isPresent()){return\"\"+nextState;}{toString(); } }", "n_tokens": 29, "n_pass": [227, 27, 25]}
{"time": "2021-02-13 18:45:42.064285", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if(isPresent()){return\"\"+nextState;}{toString();} }", "n_tokens": 28, "n_pass": [259, 28, 26]}
{"time": "2021-02-13 18:45:43.347694", "score": "0.7655", "loss": "0.7238", "code": "String toString(){if(isPresent()){return\"\"+nextState;}{toString();}}", "n_tokens": 27, "n_pass": [260, 29, 27]}

Minimal simplified code:
String toString(){if(isPresent()){return""+nextState;}{toString();}}

