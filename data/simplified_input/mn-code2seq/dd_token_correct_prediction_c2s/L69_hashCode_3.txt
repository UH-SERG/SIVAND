
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-ldap-utils/src/main/java/org/forgerock/openam/ldap/LDAPURL_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }
predict, score, loss = hashCode, 0.9998399019241333, 0.0004423224017955363

Trace of simplified code(s):
{"time": "2021-02-13 04:48:16.999291", "score": "0.9998", "loss": "0.0004", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0); hash = 19 * hash + this.port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 124, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:48:18.370513", "score": "0.9998", "loss": "0.0005", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);port; hash = 19 * hash + (this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 108, "n_pass": [24, 2, 2]}
{"time": "2021-02-13 04:48:19.705087", "score": "0.9998", "loss": "0.0006", "code": "@Override public int hashCode() { int hash = 7; hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 92, "n_pass": [25, 3, 3]}
{"time": "2021-02-13 04:48:21.422643", "score": "0.9998", "loss": "0.0008", "code": "@Override public int hashCode() { int hash = 19 * hash + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 85, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 04:48:23.134069", "score": "0.9997", "loss": "0.001", "code": "@Override public int hashCode() { int hash = 19 + (this.host != null ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 81, "n_pass": [86, 5, 5]}
{"time": "2021-02-13 04:48:24.463044", "score": "0.9997", "loss": "0.0012", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSL != null ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 77, "n_pass": [88, 6, 6]}
{"time": "2021-02-13 04:48:26.174096", "score": "0.9997", "loss": "0.0012", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? this.isSSL.hashCode() : 0); return hash; }", "n_tokens": 73, "n_pass": [94, 7, 7]}
{"time": "2021-02-13 04:48:27.500292", "score": "0.9996", "loss": "0.0013", "code": "@Override public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 69, "n_pass": [96, 8, 8]}
{"time": "2021-02-13 04:48:28.819033", "score": "0.9959", "loss": "0.0149", "code": "public int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 66, "n_pass": [101, 9, 9]}
{"time": "2021-02-13 04:48:31.555075", "score": "0.9959", "loss": "0.0149", "code": " int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 65, "n_pass": [153, 10, 10]}
{"time": "2021-02-13 04:48:32.874869", "score": "0.9959", "loss": "0.0149", "code": "int hashCode() { int hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 64, "n_pass": [154, 11, 11]}
{"time": "2021-02-13 04:48:34.566290", "score": "0.9962", "loss": "0.0152", "code": "int hashCode() { hash = 19 + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 62, "n_pass": [159, 12, 12]}
{"time": "2021-02-13 04:48:35.879040", "score": "0.9952", "loss": "0.019", "code": "int hashCode() { hash =  + (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 60, "n_pass": [162, 13, 13]}
{"time": "2021-02-13 04:48:37.182095", "score": "0.9936", "loss": "0.0264", "code": "int hashCode() { hash =  (this.host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 58, "n_pass": [163, 14, 14]}
{"time": "2021-02-13 04:48:38.517211", "score": "0.9958", "loss": "0.0209", "code": "int hashCode() { hash =  (host  ? this.host.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 56, "n_pass": [165, 15, 15]}
{"time": "2021-02-13 04:48:39.831469", "score": "0.99", "loss": "0.049", "code": "int hashCode() { hash =  (host  ? this.hashCode() : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 54, "n_pass": [169, 16, 16]}
{"time": "2021-02-13 04:48:41.503231", "score": "0.9888", "loss": "0.0518", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this.isSSLnull ? hashCode() : 0); return hash; }", "n_tokens": 52, "n_pass": [171, 17, 17]}
{"time": "2021-02-13 04:48:42.830080", "score": "0.9907", "loss": "0.0436", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(thisnull ? hashCode() : 0); return hash; }", "n_tokens": 50, "n_pass": [176, 18, 18]}
{"time": "2021-02-13 04:48:44.161999", "score": "0.9851", "loss": "0.0665", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0); return hash; }", "n_tokens": 48, "n_pass": [177, 19, 19]}
{"time": "2021-02-13 04:48:45.485199", "score": "0.9927", "loss": "0.0345", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0); hash; }", "n_tokens": 46, "n_pass": [184, 20, 20]}
{"time": "2021-02-13 04:48:46.791460", "score": "0.996", "loss": "0.0147", "code": "int hashCode() { hash =  (host  ? this.hashCode : 0);(this? hashCode() : 0);  }", "n_tokens": 44, "n_pass": [185, 21, 21]}
{"time": "2021-02-13 04:48:48.454966", "score": "0.9876", "loss": "0.0332", "code": "int hashCode() { hash  (host  ? this.hashCode : 0);(this? hashCode() : 0);  }", "n_tokens": 42, "n_pass": [192, 22, 22]}
{"time": "2021-02-13 04:48:49.768387", "score": "0.9681", "loss": "0.088", "code": "int hashCode() { hash  (host  ? this : 0);(this? hashCode() : 0);  }", "n_tokens": 40, "n_pass": [197, 23, 23]}
{"time": "2021-02-13 04:48:51.430655", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() {  (host  ? this : 0);(this? hashCode() : 0);  }", "n_tokens": 38, "n_pass": [213, 24, 24]}
{"time": "2021-02-13 04:48:58.457077", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host  ? this : 0);(this? hashCode() : 0);  }", "n_tokens": 37, "n_pass": [271, 25, 25]}
{"time": "2021-02-13 04:48:59.770544", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host ? this : 0);(this? hashCode() : 0);  }", "n_tokens": 36, "n_pass": [273, 26, 26]}
{"time": "2021-02-13 04:49:01.065013", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host? this : 0);(this? hashCode() : 0);  }", "n_tokens": 35, "n_pass": [274, 27, 27]}
{"time": "2021-02-13 04:49:02.361611", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this : 0);(this? hashCode() : 0);  }", "n_tokens": 34, "n_pass": [276, 28, 28]}
{"time": "2021-02-13 04:49:03.656819", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this: 0);(this? hashCode() : 0);  }", "n_tokens": 33, "n_pass": [278, 29, 29]}
{"time": "2021-02-13 04:49:04.985033", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this? hashCode() : 0);  }", "n_tokens": 32, "n_pass": [280, 30, 30]}
{"time": "2021-02-13 04:49:06.284616", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this?hashCode() : 0);  }", "n_tokens": 31, "n_pass": [287, 31, 31]}
{"time": "2021-02-13 04:49:07.580743", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this?hashCode(): 0);  }", "n_tokens": 30, "n_pass": [291, 32, 32]}
{"time": "2021-02-13 04:49:08.876125", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this?hashCode():0);  }", "n_tokens": 29, "n_pass": [293, 33, 33]}
{"time": "2021-02-13 04:49:10.168999", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this?hashCode():0); }", "n_tokens": 28, "n_pass": [297, 34, 34]}
{"time": "2021-02-13 04:49:11.464310", "score": "0.9504", "loss": "0.2646", "code": "int hashCode() { (host?this:0);(this?hashCode():0);}", "n_tokens": 27, "n_pass": [298, 35, 35]}
{"time": "2021-02-13 04:49:13.471904", "score": "0.9504", "loss": "0.2646", "code": "int hashCode(){ (host?this:0);(this?hashCode():0);}", "n_tokens": 26, "n_pass": [305, 36, 36]}
{"time": "2021-02-13 04:49:14.765422", "score": "0.9504", "loss": "0.2646", "code": "int hashCode(){(host?this:0);(this?hashCode():0);}", "n_tokens": 25, "n_pass": [307, 37, 37]}

Minimal simplified code:
int hashCode(){(host?this:0);(this?hashCode():0);}

