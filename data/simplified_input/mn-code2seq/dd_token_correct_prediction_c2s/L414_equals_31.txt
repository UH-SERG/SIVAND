
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcElieceCCA2PrivateKey_equals.java
method_name = equals
method_body = public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey) other; return (getN() == otherKey.getN()) && (getK() == otherKey.getK()) && getField().equals(otherKey.getField()) && getGoppaPoly().equals(otherKey.getGoppaPoly()) && getP().equals(otherKey.getP()) && getH().equals(otherKey.getH()); }
predict, score, loss = equals, 0.9948339462280273, 0.015660222619771957

Trace of simplified code(s):
{"time": "2021-02-13 15:31:20.870183", "score": "0.9927", "loss": "0.0176", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey) other; return (getN() == otherKey.getN()) && (getK() == otherKey.getK()) && getField().equals(otherKey.getField()) && getGoppaPoly().equals(otherKey.getGoppaPoly()) && getP().equals(otherKey.getP()) && getH().equals(otherKey.getH()); }", "n_tokens": 165, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:31:22.217724", "score": "0.988", "loss": "0.0232", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey) other; return (getN() == otherKey.getN()) &(otherKey.getGoppaPoly()) && getP().equals(otherKey.getP()) && getH().equals(otherKey.getH()); }", "n_tokens": 124, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 15:31:23.561539", "score": "0.9716", "loss": "0.0792", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey) (otherKey.getGoppaPoly()) && getP().equals(otherKey.getP()) && getH().equals(otherKey.getH()); }", "n_tokens": 103, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 15:31:24.895209", "score": "0.9583", "loss": "0.086", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey)& getP().equals(otherKey.getP()) && getH().equals(otherKey.getH()); }", "n_tokens": 93, "n_pass": [40, 4, 4]}
{"time": "2021-02-13 15:31:26.963429", "score": "0.975", "loss": "0.0559", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) && getH().equals(otherKey.getH()); }", "n_tokens": 88, "n_pass": [68, 5, 5]}
{"time": "2021-02-13 15:31:28.323547", "score": "0.9674", "loss": "0.0676", "code": "public boolean equals(Object other) { if (other == null || !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 82, "n_pass": [71, 6, 6]}
{"time": "2021-02-13 15:31:29.645991", "score": "0.9792", "loss": "0.0514", "code": "public boolean equals(Object other) { if (other == !(other instanceof BCMcElieceCCA2PrivateKey)) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 77, "n_pass": [78, 7, 7]}
{"time": "2021-02-13 15:31:30.962875", "score": "0.979", "loss": "0.0532", "code": "public boolean equals(Object other) { if (other == !(other )) { return false; } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 72, "n_pass": [80, 8, 8]}
{"time": "2021-02-13 15:31:32.298916", "score": "0.8935", "loss": "0.243", "code": "public boolean equals(Object other) { if (other == !(other )) { } BCMcElieceCCA2PrivateKey otherKey = (BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 67, "n_pass": [82, 9, 9]}
{"time": "2021-02-13 15:31:33.615190", "score": "0.9574", "loss": "0.115", "code": "public boolean equals(Object other) { if (other == !(other )) { } BCMcElieceCCA2PrivateKey(BCMcElieceCCA2PrivateKey).equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 62, "n_pass": [84, 10, 10]}
{"time": "2021-02-13 15:31:34.953404", "score": "0.9398", "loss": "0.1009", "code": "public boolean equals(Object other) { if (other == !(other )) { } BCMcElieceCCA2PrivateKey.equals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 57, "n_pass": [85, 11, 11]}
{"time": "2021-02-13 15:31:36.292638", "score": "0.9065", "loss": "0.1641", "code": "public boolean equals(Object other) { if (other == !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 54, "n_pass": [119, 12, 12]}
{"time": "2021-02-13 15:31:37.639060", "score": "0.9065", "loss": "0.1641", "code": "boolean equals(Object other) { if (other == !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 52, "n_pass": [127, 13, 13]}
{"time": "2021-02-13 15:31:43.364104", "score": "0.9065", "loss": "0.1641", "code": "boolean equals(Object other){ if (other == !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 51, "n_pass": [196, 14, 14]}
{"time": "2021-02-13 15:31:44.680906", "score": "0.9065", "loss": "0.1641", "code": "boolean equals(Object other){if (other == !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 50, "n_pass": [197, 15, 15]}
{"time": "2021-02-13 15:31:45.997772", "score": "0.9065", "loss": "0.1641", "code": "boolean equals(Object other){if(other == !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 49, "n_pass": [199, 16, 16]}
{"time": "2021-02-13 15:31:47.313955", "score": "0.9065", "loss": "0.1641", "code": "boolean equals(Object other){if(other== !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 48, "n_pass": [202, 17, 17]}
{"time": "2021-02-13 15:31:48.630976", "score": "0.8021", "loss": "0.3902", "code": "boolean equals(Object other){if(other= !(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 47, "n_pass": [203, 18, 18]}
{"time": "2021-02-13 15:31:49.952576", "score": "0.8021", "loss": "0.3902", "code": "boolean equals(Object other){if(other=!(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 46, "n_pass": [205, 19, 19]}
{"time": "2021-02-13 15:31:51.265622", "score": "0.8896", "loss": "0.1999", "code": "boolean equals(Object other){if(other=(other )) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 45, "n_pass": [206, 20, 20]}
{"time": "2021-02-13 15:31:52.600424", "score": "0.8896", "loss": "0.1999", "code": "boolean equals(Object other){if(other=(other)) { } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 44, "n_pass": [209, 21, 21]}
{"time": "2021-02-13 15:31:53.926204", "score": "0.8896", "loss": "0.1999", "code": "boolean equals(Object other){if(other=(other)){ } BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 43, "n_pass": [212, 22, 22]}
{"time": "2021-02-13 15:31:55.250225", "score": "0.8896", "loss": "0.1999", "code": "boolean equals(Object other){if(other=(other)){} BCMcElieceCCAequals(otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 42, "n_pass": [214, 23, 23]}
{"time": "2021-02-13 15:31:56.570537", "score": "0.8421", "loss": "0.239", "code": "boolean equals(Object other){if(other=(other)){} (otherKey.getP()) .equals(otherKey.getH()); }", "n_tokens": 40, "n_pass": [216, 24, 24]}
{"time": "2021-02-13 15:31:57.875105", "score": "0.86", "loss": "0.2292", "code": "boolean equals(Object other){if(other=(other)){} (otherKey()) .equals(otherKey.getH()); }", "n_tokens": 38, "n_pass": [218, 25, 25]}
{"time": "2021-02-13 15:31:59.183433", "score": "0.8585", "loss": "0.2181", "code": "boolean equals(Object other){if(other=(other)){} (otherKey) .equals(otherKey.getH()); }", "n_tokens": 36, "n_pass": [219, 26, 26]}
{"time": "2021-02-13 15:32:00.887342", "score": "0.8055", "loss": "0.3555", "code": "boolean equals(Object other){if(other=(other)){} (otherKey) .equals(otherKey()); }", "n_tokens": 34, "n_pass": [223, 27, 27]}
{"time": "2021-02-13 15:32:02.213342", "score": "0.8501", "loss": "0.2411", "code": "boolean equals(Object other){if(other=(other)){} (otherKey) .equals(otherKey); }", "n_tokens": 32, "n_pass": [224, 28, 28]}
{"time": "2021-02-13 15:32:04.237000", "score": "0.8385", "loss": "0.2586", "code": "boolean equals(Object other){if(other(other)){} (otherKey) .equals(otherKey); }", "n_tokens": 31, "n_pass": [239, 29, 29]}
{"time": "2021-02-13 15:32:05.539318", "score": "0.8741", "loss": "0.1941", "code": "boolean equals(Object other){if(other()){} (otherKey) .equals(otherKey); }", "n_tokens": 30, "n_pass": [241, 30, 30]}
{"time": "2021-02-13 15:32:09.257744", "score": "0.8741", "loss": "0.1941", "code": "boolean equals(Object other){if(other()){}(otherKey) .equals(otherKey); }", "n_tokens": 29, "n_pass": [280, 31, 31]}
{"time": "2021-02-13 15:32:10.564387", "score": "0.8741", "loss": "0.1941", "code": "boolean equals(Object other){if(other()){}(otherKey).equals(otherKey); }", "n_tokens": 28, "n_pass": [284, 32, 32]}
{"time": "2021-02-13 15:32:12.219898", "score": "0.7522", "loss": "0.4224", "code": "boolean equals(Object other){if(other()){}(otherKey).equals(); }", "n_tokens": 27, "n_pass": [288, 33, 33]}
{"time": "2021-02-13 15:32:13.522880", "score": "0.7522", "loss": "0.4224", "code": "boolean equals(Object other){if(other()){}(otherKey).equals();}", "n_tokens": 26, "n_pass": [291, 34, 34]}

Minimal simplified code:
boolean equals(Object other){if(other()){}(otherKey).equals();}

