
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-schema/openam-wsfederation-schema/src/main/java/com/sun/identity/wsfederation/jaxb/wsspolicy/impl/EncryptBeforeSigningElementImpl_leaveElement.java
method_name = leaveElement
method_body = public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if (("EncryptBeforeSigning" == ___local) && ("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }
predict, score, loss = leaveElement, 0.9976316690444946, 0.005711066536605358

Trace of simplified code(s):
{"time": "2021-02-13 05:36:09.985633", "score": "0.9925", "loss": "0.0204", "code": "public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname); return; case 3: revertToParentFromLeaveElement(___uri, ___local, ___qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 306, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 05:36:11.392659", "score": "0.9984", "loss": "0.0037", "code": "public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri, ___local, ___qname); break; } }", "n_tokens": 267, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 05:36:12.803450", "score": "0.9983", "loss": "0.0039", "code": "public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 257, "n_pass": [92, 3, 3]}
{"time": "2021-02-13 05:36:14.165834", "score": "0.9985", "loss": "0.0035", "code": "public void leaveElement(java.langjava.lang.String ___local, java.lang.String ___qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 248, "n_pass": [94, 4, 4]}
{"time": "2021-02-13 05:36:15.514003", "score": "0.9975", "loss": "0.0061", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 239, "n_pass": [96, 5, 5]}
{"time": "2021-02-13 05:36:16.883383", "score": "0.9975", "loss": "0.0061", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://-sx/ws-securitypolicy/200512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 230, "n_pass": [105, 6, 6]}
{"time": "2021-02-13 05:36:18.250298", "score": "0.9977", "loss": "0.0056", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 220, "n_pass": [106, 7, 7]}
{"time": "2021-02-13 05:36:19.612881", "score": "0.9979", "loss": "0.005", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 210, "n_pass": [112, 8, 8]}
{"time": "2021-02-13 05:36:20.967645", "score": "0.999", "loss": "0.0023", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(___uri,qname); break; } }", "n_tokens": 200, "n_pass": [114, 9, 9]}
{"time": "2021-02-13 05:36:22.724851", "score": "0.9992", "loss": "0.0017", "code": "public void leaveElement(java.langjava.lang.String ______qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 195, "n_pass": [185, 10, 10]}
{"time": "2021-02-13 05:36:24.484851", "score": "0.9992", "loss": "0.0017", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.xml.sax.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 191, "n_pass": [192, 11, 11]}
{"time": "2021-02-13 05:36:25.848387", "score": "0.9989", "loss": "0.0025", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException { int attIdx; outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 187, "n_pass": [195, 12, 12]}
{"time": "2021-02-13 05:36:27.200658", "score": "0.9991", "loss": "0.002", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes(); state = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 183, "n_pass": [197, 13, 13]}
{"time": "2021-02-13 05:36:28.568243", "score": "0.9985", "loss": "0.0035", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl) com.sun.EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 178, "n_pass": [212, 14, 14]}
{"time": "2021-02-13 05:36:29.928878", "score": "0.9981", "loss": "0.0047", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)EncryptBeforeSigningElementImpl.this).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 173, "n_pass": [219, 15, 15]}
{"time": "2021-02-13 05:36:31.714347", "score": "0.9983", "loss": "0.0042", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), 2, ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 170, "n_pass": [331, 16, 16]}
{"time": "2021-02-13 05:36:33.065215", "score": "0.9965", "loss": "0.009", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), ___uri_qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 167, "n_pass": [335, 17, 17]}
{"time": "2021-02-13 05:36:34.411228", "score": "0.9966", "loss": "0.0092", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); return; } super.leaveElement(qname); break; } }", "n_tokens": 164, "n_pass": [337, 18, 18]}
{"time": "2021-02-13 05:36:35.757176", "score": "0.9966", "loss": "0.0092", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); break; } }", "n_tokens": 161, "n_pass": [339, 19, 19]}
{"time": "2021-02-13 05:36:38.488499", "score": "0.9966", "loss": "0.0092", "code": "public void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 158, "n_pass": [344, 21, 20]}
{"time": "2021-02-13 05:36:39.859141", "score": "0.9966", "loss": "0.0092", "code": "void leaveElement(java.langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 156, "n_pass": [346, 22, 21]}
{"time": "2021-02-13 05:36:41.581964", "score": "0.9963", "loss": "0.01", "code": "void leaveElement(langjava.lang.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 154, "n_pass": [349, 23, 22]}
{"time": "2021-02-13 05:36:42.944769", "score": "0.9934", "loss": "0.0187", "code": "void leaveElement(langjava.String __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 152, "n_pass": [351, 24, 23]}
{"time": "2021-02-13 05:36:44.289339", "score": "0.9922", "loss": "0.0233", "code": "void leaveElement(langjava __qname) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 150, "n_pass": [352, 25, 24]}
{"time": "2021-02-13 05:36:45.644341", "score": "0.9913", "loss": "0.0272", "code": "void leaveElement(langjava _) throws org.SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 148, "n_pass": [354, 26, 25]}
{"time": "2021-02-13 05:36:47.001953", "score": "0.9951", "loss": "0.0137", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" == ___local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 146, "n_pass": [357, 27, 26]}
{"time": "2021-02-13 05:36:48.368763", "score": "0.9951", "loss": "0.0137", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==__local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 144, "n_pass": [377, 28, 27]}
{"time": "2021-02-13 05:36:49.737785", "score": "0.9951", "loss": "0.0137", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local) && (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 142, "n_pass": [378, 29, 28]}
{"time": "2021-02-13 05:36:51.103975", "score": "0.9925", "loss": "0.0211", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"http://512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 140, "n_pass": [380, 30, 29]}
{"time": "2021-02-13 05:36:52.450312", "score": "0.9922", "loss": "0.022", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"//512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 138, "n_pass": [383, 31, 30]}
{"time": "2021-02-13 05:36:53.832816", "score": "0.9913", "loss": "0.0246", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"512\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 136, "n_pass": [384, 32, 31]}
{"time": "2021-02-13 05:36:55.176053", "score": "0.9923", "loss": "0.0216", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == ___uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 134, "n_pass": [385, 33, 32]}
{"time": "2021-02-13 05:36:57.268760", "score": "0.9923", "loss": "0.0216", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) { context.popAttributes = 3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 131, "n_pass": [389, 34, 33]}
{"time": "2021-02-13 05:36:58.614948", "score": "0.9948", "loss": "0.014", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) { context.popAttributes3; return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 128, "n_pass": [393, 35, 34]}
{"time": "2021-02-13 05:36:59.960975", "score": "0.9942", "loss": "0.0159", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) { context.popAttributesreturn; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 125, "n_pass": [394, 36, 35]}
{"time": "2021-02-13 05:37:03.941709", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) { return; } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 122, "n_pass": [446, 38, 36]}
{"time": "2021-02-13 05:37:05.279459", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) { } break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 119, "n_pass": [447, 39, 37]}
{"time": "2021-02-13 05:37:18.158240", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {} break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 118, "n_pass": [599, 41, 38]}
{"time": "2021-02-13 05:37:19.500553", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}break; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 117, "n_pass": [601, 42, 39]}
{"time": "2021-02-13 05:37:20.841585", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}; case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 116, "n_pass": [602, 43, 40]}
{"time": "2021-02-13 05:37:22.182460", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {} case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 115, "n_pass": [603, 44, 41]}
{"time": "2021-02-13 05:37:23.527521", "score": "0.9889", "loss": "0.0313", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case 1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 114, "n_pass": [604, 45, 42]}
{"time": "2021-02-13 05:37:24.866664", "score": "0.8541", "loss": "0.5169", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1: spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 113, "n_pass": [606, 46, 43]}
{"time": "2021-02-13 05:37:26.209364", "score": "0.8541", "loss": "0.5169", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((com.impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 112, "n_pass": [609, 47, 44]}
{"time": "2021-02-13 05:37:27.579219", "score": "0.9027", "loss": "0.3379", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((impl.QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 110, "n_pass": [614, 48, 45]}
{"time": "2021-02-13 05:37:28.922859", "score": "0.8938", "loss": "0.3694", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).new Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 108, "n_pass": [615, 49, 46]}
{"time": "2021-02-13 05:37:30.259514", "score": "0.9694", "loss": "0.1015", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)), __qname); } super.leaveElement(qname); } }", "n_tokens": 106, "n_pass": [618, 50, 47]}
{"time": "2021-02-13 05:37:31.602121", "score": "0.9694", "loss": "0.1015", "code": "void leaveElement(langjava _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 104, "n_pass": [622, 51, 48]}
{"time": "2021-02-13 05:37:34.042292", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _) throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 103, "n_pass": [636, 52, 49]}
{"time": "2021-02-13 05:37:35.375568", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException {  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 102, "n_pass": [641, 53, 50]}
{"time": "2021-02-13 05:37:36.726834", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{  outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 101, "n_pass": [645, 54, 51]}
{"time": "2021-02-13 05:37:38.073580", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{ outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 100, "n_pass": [647, 55, 52]}
{"time": "2021-02-13 05:37:39.405359", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer: while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 99, "n_pass": [648, 56, 53]}
{"time": "2021-02-13 05:37:40.742641", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while (true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 98, "n_pass": [651, 57, 54]}
{"time": "2021-02-13 05:37:42.077531", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true) { switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 97, "n_pass": [653, 58, 55]}
{"time": "2021-02-13 05:37:43.427632", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){ switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 96, "n_pass": [657, 59, 56]}
{"time": "2021-02-13 05:37:44.780638", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state) { case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 95, "n_pass": [659, 60, 57]}
{"time": "2021-02-13 05:37:46.132937", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){ case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 94, "n_pass": [664, 61, 58]}
{"time": "2021-02-13 05:37:47.464717", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2: if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 93, "n_pass": [666, 62, 59]}
{"time": "2021-02-13 05:37:48.805389", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if ((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 92, "n_pass": [671, 63, 60]}
{"time": "2021-02-13 05:37:50.139083", "score": "0.9714", "loss": "0.0929", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"EncryptBeforeSigning\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 91, "n_pass": [673, 64, 61]}
{"time": "2021-02-13 05:37:51.478629", "score": "0.9937", "loss": "0.0174", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\" ==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 90, "n_pass": [677, 65, 62]}
{"time": "2021-02-13 05:37:52.841094", "score": "0.9937", "loss": "0.0174", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)& (\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 89, "n_pass": [679, 66, 63]}
{"time": "2021-02-13 05:37:54.942894", "score": "0.9937", "loss": "0.0174", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"2\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 88, "n_pass": [685, 67, 64]}
{"time": "2021-02-13 05:37:56.275352", "score": "0.9935", "loss": "0.0182", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\" == uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 87, "n_pass": [688, 68, 65]}
{"time": "2021-02-13 05:37:57.609062", "score": "0.9935", "loss": "0.0182", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"== uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 86, "n_pass": [690, 69, 66]}
{"time": "2021-02-13 05:37:59.689297", "score": "0.9935", "loss": "0.0182", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)) {}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 85, "n_pass": [693, 70, 67]}
{"time": "2021-02-13 05:38:01.056126", "score": "0.9935", "loss": "0.0182", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1:spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 84, "n_pass": [697, 71, 68]}
{"time": "2021-02-13 05:38:02.397505", "score": "0.9846", "loss": "0.0391", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1spawnHandlerFromLeaveElement((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 83, "n_pass": [702, 72, 69]}
{"time": "2021-02-13 05:38:03.729747", "score": "0.9964", "loss": "0.0086", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),_qname); } super.leaveElement(qname); } }", "n_tokens": 82, "n_pass": [703, 73, 70]}
{"time": "2021-02-13 05:38:09.716271", "score": "0.9964", "loss": "0.0086", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname); } super.leaveElement(qname); } }", "n_tokens": 81, "n_pass": [804, 74, 71]}
{"time": "2021-02-13 05:38:11.085883", "score": "0.9964", "loss": "0.0086", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname);} super.leaveElement(qname); } }", "n_tokens": 80, "n_pass": [807, 75, 72]}
{"time": "2021-02-13 05:38:12.417827", "score": "0.9964", "loss": "0.0086", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname);}super.leaveElement(qname); } }", "n_tokens": 79, "n_pass": [809, 76, 73]}
{"time": "2021-02-13 05:38:15.106312", "score": "0.8643", "loss": "0.4158", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname);}super.leaveElement(); } }", "n_tokens": 78, "n_pass": [814, 78, 74]}
{"time": "2021-02-13 05:38:16.439451", "score": "0.8643", "loss": "0.4158", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname);}super.leaveElement();} }", "n_tokens": 77, "n_pass": [817, 79, 75]}
{"time": "2021-02-13 05:38:17.774603", "score": "0.8643", "loss": "0.4158", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller(context)),qname);}super.leaveElement();}}", "n_tokens": 76, "n_pass": [819, 80, 76]}
{"time": "2021-02-13 05:38:21.374138", "score": "0.9498", "loss": "0.1188", "code": "void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((\"\"==local)&(\"\"==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller()),qname);}super.leaveElement();}}", "n_tokens": 75, "n_pass": [881, 81, 77]}

Minimal simplified code:
void leaveElement(java _)throws SAXException{outer:while(true){switch(state){case 2:if((""==local)&(""==uri)){}case1((((QNameAssertionTypeImpl)).Unmarshaller()),qname);}super.leaveElement();}}

