
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/huxq17__FloatBall/library/src/main/java/com/huxq17/floatball/libarary/utils/LogUtils_v.java
method_name = v
method_body = public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }
predict, score, loss = v, 0.9832772016525269, 0.022863103076815605

Trace of simplified code(s):
{"time": "2021-02-13 11:09:34.940793", "score": "0.9863", "loss": "0.0187", "code": "public static void v(String content, Throwable tr) { if (!allowV) return; StackTraceElement caller = getCallerStackTraceElement(); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 103, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 11:09:36.303890", "score": "0.9873", "loss": "0.0196", "code": "public static void v(String content, Throwable tr) { if (!allowV); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } else { Log.v(tag, content, tr); } }", "n_tokens": 90, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 11:09:37.639877", "score": "0.8789", "loss": "0.2115", "code": "public static void v(String content, Throwable tr) { if (!allowV); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, trtag, content, tr); } }", "n_tokens": 77, "n_pass": [25, 3, 3]}
{"time": "2021-02-13 11:09:38.989842", "score": "0.9796", "loss": "0.038", "code": "public static void v(String content, Throwable tr) { if (!allowV); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } }", "n_tokens": 70, "n_pass": [44, 4, 4]}
{"time": "2021-02-13 11:09:40.690373", "score": "0.9796", "loss": "0.038", "code": " void v(String content, Throwable tr) { if (!allowV); String tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } }", "n_tokens": 67, "n_pass": [80, 5, 5]}
{"time": "2021-02-13 11:09:42.020781", "score": "0.9676", "loss": "0.0533", "code": " void v(String content, Throwable tr) { if (!allowV);tag = generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } }", "n_tokens": 64, "n_pass": [88, 6, 6]}
{"time": "2021-02-13 11:09:43.349520", "score": "0.9825", "loss": "0.0264", "code": " void v(String content, Throwable tr) { if (!allowV); generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } }", "n_tokens": 61, "n_pass": [89, 7, 7]}
{"time": "2021-02-13 11:09:47.685121", "score": "0.9702", "loss": "0.048", "code": " void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLogger != null) { customLogger.v(tag, content, tr); } }", "n_tokens": 59, "n_pass": [147, 8, 8]}
{"time": "2021-02-13 11:09:49.005240", "score": "0.9689", "loss": "0.0475", "code": " void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLogger= null) { customLogger.v(tag, content, tr); } }", "n_tokens": 57, "n_pass": [156, 9, 9]}
{"time": "2021-02-13 11:09:50.318218", "score": "0.9677", "loss": "0.0653", "code": " void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLoggernull) { customLogger.v(tag, content, tr); } }", "n_tokens": 55, "n_pass": [157, 10, 10]}
{"time": "2021-02-13 11:09:51.676662", "score": "0.4852", "loss": "1.0987", "code": " void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLoggernull) { customLogger(tag, content, tr); } }", "n_tokens": 53, "n_pass": [161, 11, 11]}
{"time": "2021-02-13 11:09:53.015423", "score": "0.2901", "loss": "1.9658", "code": " void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 51, "n_pass": [163, 12, 12]}
{"time": "2021-02-13 11:09:54.322028", "score": "0.2901", "loss": "1.9658", "code": "void v(String content, Throwable tr) { (!allowV); generateTag(caller); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 50, "n_pass": [169, 13, 13]}
{"time": "2021-02-13 11:09:56.331847", "score": "0.2901", "loss": "1.9658", "code": "void v(String content,Throwable tr) { (!allowV); generateTag(caller); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 49, "n_pass": [178, 14, 14]}
{"time": "2021-02-13 11:09:57.698900", "score": "0.2901", "loss": "1.9658", "code": "void v(String content,Throwable tr){ (!allowV); generateTag(caller); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 48, "n_pass": [183, 15, 15]}
{"time": "2021-02-13 11:10:03.733093", "score": "0.2901", "loss": "1.9658", "code": "void v(String content,Throwable tr){ (!allowV);generateTag(caller); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 47, "n_pass": [250, 16, 16]}
{"time": "2021-02-13 11:10:06.398894", "score": "0.3601", "loss": "1.6794", "code": "void v(String content,Throwable tr){ (!allowV);generateTag(); if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 46, "n_pass": [253, 18, 17]}
{"time": "2021-02-13 11:10:07.723923", "score": "0.3601", "loss": "1.6794", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if (customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 45, "n_pass": [256, 19, 18]}
{"time": "2021-02-13 11:10:09.067231", "score": "0.3601", "loss": "1.6794", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(customLoggernull) { customLogger(tagcontent, tr); } }", "n_tokens": 44, "n_pass": [258, 20, 19]}
{"time": "2021-02-13 11:10:10.383860", "score": "0.5168", "loss": "1.0715", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null) { customLogger(tagcontent, tr); } }", "n_tokens": 43, "n_pass": [260, 21, 20]}
{"time": "2021-02-13 11:10:11.724805", "score": "0.5168", "loss": "1.0715", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){ customLogger(tagcontent, tr); } }", "n_tokens": 42, "n_pass": [263, 22, 21]}
{"time": "2021-02-13 11:10:13.040846", "score": "0.5168", "loss": "1.0715", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){customLogger(tagcontent, tr); } }", "n_tokens": 41, "n_pass": [265, 23, 22]}
{"time": "2021-02-13 11:10:14.374534", "score": "0.4949", "loss": "0.9886", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){customLogger(content, tr); } }", "n_tokens": 40, "n_pass": [268, 24, 23]}
{"time": "2021-02-13 11:10:15.702989", "score": "0.4949", "loss": "0.9886", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){customLogger(content,tr); } }", "n_tokens": 39, "n_pass": [271, 25, 24]}
{"time": "2021-02-13 11:10:17.011093", "score": "0.4949", "loss": "0.9886", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){customLogger(content,tr);} }", "n_tokens": 38, "n_pass": [275, 26, 25]}
{"time": "2021-02-13 11:10:18.349341", "score": "0.4949", "loss": "0.9886", "code": "void v(String content,Throwable tr){ (!allowV);generateTag();if(null){customLogger(content,tr);}}", "n_tokens": 37, "n_pass": [277, 27, 26]}
{"time": "2021-02-13 11:10:20.369334", "score": "0.4949", "loss": "0.9886", "code": "void v(String content,Throwable tr){(!allowV);generateTag();if(null){customLogger(content,tr);}}", "n_tokens": 36, "n_pass": [292, 28, 27]}
{"time": "2021-02-13 11:10:21.700047", "score": "0.7593", "loss": "0.447", "code": "void v(String content,Throwable tr){(allowV);generateTag();if(null){customLogger(content,tr);}}", "n_tokens": 35, "n_pass": [294, 29, 28]}
{"time": "2021-02-13 11:10:23.391713", "score": "0.587", "loss": "1.0538", "code": "void v(String content,Throwable tr){(allowV);generateTag();if(null){customLogger(contenttr);}}", "n_tokens": 34, "n_pass": [310, 30, 29]}
{"time": "2021-02-13 11:10:24.702694", "score": "0.5919", "loss": "1.0351", "code": "void v(String content,Throwable tr){(allowV);generateTag();if(null){customLogger(content);}}", "n_tokens": 33, "n_pass": [311, 31, 30]}
{"time": "2021-02-13 11:10:28.402153", "score": "0.7132", "loss": "1.0586", "code": "void v(String content,Throwable tr){(allowV);generateTag();if(null){customLogger();}}", "n_tokens": 32, "n_pass": [344, 33, 31]}

Minimal simplified code:
void v(String content,Throwable tr){(allowV);generateTag();if(null){customLogger();}}

