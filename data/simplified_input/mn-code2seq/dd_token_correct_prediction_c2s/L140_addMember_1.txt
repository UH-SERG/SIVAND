
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/idsvcs/opensso/IdentityServicesImpl_addMember.java
method_name = addMember
method_body = private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(""); } } }
predict, score, loss = addMember, 0.9101715087890625, 0.42755913734436035

Trace of simplified code(s):
{"time": "2021-02-13 06:06:31.274950", "score": "0.9102", "loss": "0.4276", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException, SSOException, ForbiddenException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 100, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 06:06:32.653148", "score": "0.9142", "loss": "0.4347", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (!member.isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 94, "n_pass": [48, 2, 2]}
{"time": "2021-02-13 06:06:34.007794", "score": "0.922", "loss": "0.3918", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo, amIdentity.getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 91, "n_pass": [95, 3, 3]}
{"time": "2021-02-13 06:06:35.343525", "score": "0.9247", "loss": "0.3866", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType(), IdOperation.EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 88, "n_pass": [100, 4, 4]}
{"time": "2021-02-13 06:06:36.674460", "score": "0.9354", "loss": "0.3187", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) { amIdentity.addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 85, "n_pass": [102, 5, 5]}
{"time": "2021-02-13 06:06:38.004088", "score": "0.8631", "loss": "0.6474", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { throw new ForbiddenException(\"\"); } } }", "n_tokens": 82, "n_pass": [105, 6, 6]}
{"time": "2021-02-13 06:06:39.350303", "score": "0.7516", "loss": "1.3665", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member) throws IdRepoException { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 78, "n_pass": [110, 7, 7]}
{"time": "2021-02-13 06:06:41.055550", "score": "0.6568", "loss": "1.9635", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity, AMIdentity member)  { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 75, "n_pass": [121, 8, 8]}
{"time": "2021-02-13 06:06:45.780190", "score": "0.6568", "loss": "1.9635", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member)  { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 74, "n_pass": [195, 9, 9]}
{"time": "2021-02-13 06:06:47.146400", "score": "0.6568", "loss": "1.9635", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo,getType().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 73, "n_pass": [200, 10, 10]}
{"time": "2021-02-13 06:06:48.481514", "score": "0.6595", "loss": "1.9013", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo().EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 71, "n_pass": [211, 11, 11]}
{"time": "2021-02-13 06:06:49.806906", "score": "0.7013", "loss": "1.6654", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo.EDIT)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 69, "n_pass": [212, 12, 12]}
{"time": "2021-02-13 06:06:51.129269", "score": "0.6875", "loss": "1.8194", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } else { ForbiddenException(\"\"); } } }", "n_tokens": 67, "n_pass": [213, 13, 13]}
{"time": "2021-02-13 06:06:52.454993", "score": "0.6813", "loss": "1.8849", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(\"\"); } } }", "n_tokens": 65, "n_pass": [220, 14, 14]}
{"time": "2021-02-13 06:06:53.773862", "score": "0.6739", "loss": "1.9392", "code": "private void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 63, "n_pass": [223, 15, 15]}
{"time": "2021-02-13 06:06:55.113782", "score": "0.6739", "loss": "1.9392", "code": " void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 62, "n_pass": [228, 16, 16]}
{"time": "2021-02-13 06:06:56.428480", "score": "0.6739", "loss": "1.9392", "code": "void addMember(AMIdentityRepository repo, AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 61, "n_pass": [229, 17, 17]}
{"time": "2021-02-13 06:06:58.467523", "score": "0.6739", "loss": "1.9392", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member) { if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 60, "n_pass": [238, 18, 18]}
{"time": "2021-02-13 06:07:05.519287", "score": "0.6739", "loss": "1.9392", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){ if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 59, "n_pass": [321, 19, 19]}
{"time": "2021-02-13 06:07:06.835306", "score": "0.6739", "loss": "1.9392", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if (isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 58, "n_pass": [322, 20, 20]}
{"time": "2021-02-13 06:07:08.155289", "score": "0.6739", "loss": "1.9392", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if(isMember(amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 57, "n_pass": [324, 21, 21]}
{"time": "2021-02-13 06:07:09.470375", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)) { if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 56, "n_pass": [326, 22, 22]}
{"time": "2021-02-13 06:07:10.787562", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){ if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 55, "n_pass": [331, 23, 23]}
{"time": "2021-02-13 06:07:12.105537", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if (isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 54, "n_pass": [333, 24, 24]}
{"time": "2021-02-13 06:07:13.417103", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)) {addMember(member); } { ForbiddenException(); } } }", "n_tokens": 53, "n_pass": [335, 25, 25]}
{"time": "2021-02-13 06:07:17.378648", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member); } { ForbiddenException(); } } }", "n_tokens": 52, "n_pass": [342, 28, 26]}
{"time": "2021-02-13 06:07:21.356441", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);} { ForbiddenException(); } } }", "n_tokens": 51, "n_pass": [349, 31, 27]}
{"time": "2021-02-13 06:07:22.670103", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ ForbiddenException(); } } }", "n_tokens": 50, "n_pass": [351, 32, 28]}
{"time": "2021-02-13 06:07:24.005496", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ForbiddenException(); } } }", "n_tokens": 49, "n_pass": [353, 33, 29]}
{"time": "2021-02-13 06:07:25.320758", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ForbiddenException();} } }", "n_tokens": 48, "n_pass": [358, 34, 30]}
{"time": "2021-02-13 06:07:26.639129", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ForbiddenException();}} }", "n_tokens": 47, "n_pass": [360, 35, 31]}
{"time": "2021-02-13 06:07:27.985750", "score": "0.5814", "loss": "2.5115", "code": "void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ForbiddenException();}}}", "n_tokens": 46, "n_pass": [362, 36, 32]}

Minimal simplified code:
void addMember(AMIdentityRepository repo,AMIdentity amIdentity,AMIdentity member){if((amIdentity)){if(isOperationSupported(repo)){addMember(member);}{ForbiddenException();}}}

