
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S11.03-Exercise-DetailLayoutAndDataBinding/app/src/main/java/com/example/android/sunshine/data/WeatherProvider_query.java
method_name = query
method_body = @Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + " = ? ", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException("Unknown uri: " + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }
predict, score, loss = query, 0.8542020916938782, 0.36705419421195984

Trace of simplified code(s):
{"time": "2021-02-16 20:40:21.537769", "score": "0.7554", "loss": "0.771", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry.COLUMN_DATE + \" = ? \", selectionArguments, null, null, sortOrder); break; } case CODE_WEATHER: { cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, selection, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 270, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 20:40:22.857761", "score": "0.8737", "loss": "0.2925", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection, WeatherContract.WeatherEntry, selectionArgs, null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 202, "n_pass": [10, 2, 2]}
{"time": "2021-02-16 20:40:24.209968", "score": "0.7081", "loss": "0.6807", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext().getContentResolver(), uri); return cursor; }", "n_tokens": 193, "n_pass": [74, 3, 3]}
{"time": "2021-02-16 20:40:25.553088", "score": "0.768", "loss": "0.4614", "code": "@Override public Cursor query(@NonNull Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 184, "n_pass": [80, 4, 4]}
{"time": "2021-02-16 20:40:26.863650", "score": "0.8417", "loss": "0.3175", "code": "@Override public Cursor query(@NonNull Uri uri,String selection, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 176, "n_pass": [84, 5, 5]}
{"time": "2021-02-16 20:40:28.220696", "score": "0.5304", "loss": "1.0373", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_WEATHER_WITH_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 172, "n_pass": [148, 6, 6]}
{"time": "2021-02-16 20:40:29.538766", "score": "0.7717", "loss": "0.4697", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri.getLastPathSegment(); String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 168, "n_pass": [157, 7, 7]}
{"time": "2021-02-16 20:40:30.854399", "score": "0.8887", "loss": "0.2331", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor = mOpenHelper.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 164, "n_pass": [161, 8, 8]}
{"time": "2021-02-16 20:40:32.165715", "score": "0.8352", "loss": "0.3668", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.getReadableDatabase().query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 160, "n_pass": [168, 9, 9]}
{"time": "2021-02-16 20:40:33.494332", "score": "0.5837", "loss": "0.8323", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContract.WeatherEntry.TABLE_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 156, "n_pass": [169, 10, 10]}
{"time": "2021-02-16 20:40:34.799610", "score": "0.552", "loss": "0.9182", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContract_NAME, projection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 152, "n_pass": [171, 11, 11]}
{"time": "2021-02-16 20:40:36.126113", "score": "0.482", "loss": "1.1382", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null, null, sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 148, "n_pass": [172, 12, 12]}
{"time": "2021-02-16 20:40:37.422420", "score": "0.7941", "loss": "0.3912", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null,sortOrder); break; } default: throw new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 144, "n_pass": [174, 13, 13]}
{"time": "2021-02-16 20:40:38.744845", "score": "0.7264", "loss": "0.5035", "code": "@Override public Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null,sortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 139, "n_pass": [177, 14, 14]}
{"time": "2021-02-16 20:40:40.068664", "score": "0.7712", "loss": "0.5354", "code": " Cursor query(@NonNull Uri uri, String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null,sortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 135, "n_pass": [185, 15, 15]}
{"time": "2021-02-16 20:40:41.381047", "score": "0.3531", "loss": "1.5891", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString = uri; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null,sortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 131, "n_pass": [188, 16, 16]}
{"time": "2021-02-16 20:40:42.704170", "score": "0.3226", "loss": "1.6704", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractprojection,null,sortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 127, "n_pass": [200, 17, 17]}
{"time": "2021-02-16 20:40:44.005636", "score": "0.3576", "loss": "1.5647", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: { String normalizedUtcDateString; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractsortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 123, "n_pass": [208, 18, 18]}
{"time": "2021-02-16 20:40:45.412689", "score": "0.2644", "loss": "1.8382", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {; String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractsortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 119, "n_pass": [230, 19, 19]}
{"time": "2021-02-16 20:40:47.706432", "score": "0.3184", "loss": "1.6516", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { normalizedUtcDateString }; cursor.query(WeatherContractsortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 117, "n_pass": [315, 20, 20]}
{"time": "2021-02-16 20:40:49.015356", "score": "0.3773", "loss": "1.5478", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder); break; } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 115, "n_pass": [323, 21, 21]}
{"time": "2021-02-16 20:40:51.629953", "score": "0.3526", "loss": "1.5515", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  } new UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 113, "n_pass": [330, 23, 22]}
{"time": "2021-02-16 20:40:52.931813", "score": "0.5208", "loss": "1.1344", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  } UnsupportedOperationException(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 111, "n_pass": [332, 24, 23]}
{"time": "2021-02-16 20:40:54.247685", "score": "0.469", "loss": "1.224", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\"Unknown uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 109, "n_pass": [333, 25, 24]}
{"time": "2021-02-16 20:40:55.555706", "score": "0.5097", "loss": "1.1648", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\"uri: \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 107, "n_pass": [335, 26, 25]}
{"time": "2021-02-16 20:40:56.838971", "score": "0.5109", "loss": "1.1296", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); } cursor.setNotificationUri(getContext); return cursor; }", "n_tokens": 105, "n_pass": [336, 27, 26]}
{"time": "2021-02-16 20:40:58.128680", "score": "0.6271", "loss": "0.8354", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); return cursor; }", "n_tokens": 102, "n_pass": [341, 28, 27]}
{"time": "2021-02-16 20:40:59.434081", "score": "0.6883", "loss": "0.9487", "code": " Cursor query(@NonNull  String[] selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 99, "n_pass": [344, 29, 28]}
{"time": "2021-02-16 20:41:01.434312", "score": "0.6349", "loss": "1.1972", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) { Cursor cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 97, "n_pass": [351, 30, 29]}
{"time": "2021-02-16 20:41:02.740673", "score": "0.6881", "loss": "1.0102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) { cursor; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 95, "n_pass": [357, 31, 30]}
{"time": "2021-02-16 20:41:04.025293", "score": "0.591", "loss": "1.2233", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {; switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 93, "n_pass": [358, 32, 31]}
{"time": "2021-02-16 20:41:05.310999", "score": "0.591", "loss": "1.2233", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(sUriMatcher.match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 91, "n_pass": [359, 33, 32]}
{"time": "2021-02-16 20:41:06.620692", "score": "0.5426", "loss": "1.51", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case CODE_DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 89, "n_pass": [361, 34, 33]}
{"time": "2021-02-16 20:41:07.907999", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE: {String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 87, "n_pass": [367, 35, 34]}
{"time": "2021-02-16 20:41:20.495061", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[] selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 86, "n_pass": [493, 37, 35]}
{"time": "2021-02-16 20:41:21.807484", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments = new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 85, "n_pass": [497, 38, 36]}
{"time": "2021-02-16 20:41:23.116119", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments= new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 84, "n_pass": [499, 39, 37]}
{"time": "2021-02-16 20:41:24.421029", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[] { }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 83, "n_pass": [501, 40, 38]}
{"time": "2021-02-16 20:41:25.700441", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{ }; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 82, "n_pass": [507, 41, 39]}
{"time": "2021-02-16 20:41:26.986083", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{}; cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 81, "n_pass": [509, 42, 40]}
{"time": "2021-02-16 20:41:28.296993", "score": "0.5338", "loss": "1.441", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(WeatherContractsortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 80, "n_pass": [512, 43, 41]}
{"time": "2021-02-16 20:41:30.855417", "score": "0.4928", "loss": "1.2515", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);  }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 79, "n_pass": [517, 45, 42]}
{"time": "2021-02-16 20:41:33.415467", "score": "0.4928", "loss": "1.2515", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder); }(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 78, "n_pass": [521, 47, 43]}
{"time": "2021-02-16 20:41:34.712109", "score": "0.4928", "loss": "1.2515", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\" \" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 77, "n_pass": [522, 48, 44]}
{"time": "2021-02-16 20:41:36.018956", "score": "0.5429", "loss": "1.1102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\" + uri); }setNotificationUri(getContext); ; }", "n_tokens": 76, "n_pass": [526, 49, 45]}
{"time": "2021-02-16 20:41:37.334862", "score": "0.5429", "loss": "1.1102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+ uri); }setNotificationUri(getContext); ; }", "n_tokens": 75, "n_pass": [528, 50, 46]}
{"time": "2021-02-16 20:41:38.640697", "score": "0.5429", "loss": "1.1102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri); }setNotificationUri(getContext); ; }", "n_tokens": 74, "n_pass": [530, 51, 47]}
{"time": "2021-02-16 20:41:39.921744", "score": "0.5429", "loss": "1.1102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); ; }", "n_tokens": 73, "n_pass": [534, 52, 48]}
{"time": "2021-02-16 20:41:41.201215", "score": "0.5429", "loss": "1.1102", "code": " Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 71, "n_pass": [538, 53, 49]}
{"time": "2021-02-16 20:41:42.479156", "score": "0.5429", "loss": "1.1102", "code": "Cursor query(@NonNull  String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 70, "n_pass": [540, 54, 50]}
{"time": "2021-02-16 20:41:44.856598", "score": "0.5429", "loss": "1.1102", "code": "Cursor query(@NonNull String selectionArgs, String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 69, "n_pass": [547, 55, 51]}
{"time": "2021-02-16 20:41:46.135801", "score": "0.5429", "loss": "1.1102", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder) {switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 68, "n_pass": [553, 56, 52]}
{"time": "2021-02-16 20:41:47.415673", "score": "0.5429", "loss": "1.1102", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch(match(uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 67, "n_pass": [558, 57, 53]}
{"time": "2021-02-16 20:41:48.694121", "score": "0.4978", "loss": "1.2056", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)) { case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 66, "n_pass": [562, 58, 54]}
{"time": "2021-02-16 20:41:49.975782", "score": "0.4978", "loss": "1.2056", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)){ case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 65, "n_pass": [567, 59, 55]}
{"time": "2021-02-16 20:41:51.251534", "score": "0.4978", "loss": "1.2056", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)){case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}setNotificationUri(getContext); }", "n_tokens": 64, "n_pass": [569, 60, 56]}
{"time": "2021-02-16 20:41:56.854960", "score": "0.5113", "loss": "1.1512", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)){case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}(getContext); }", "n_tokens": 63, "n_pass": [639, 63, 57]}
{"time": "2021-02-16 20:41:58.134317", "score": "0.5113", "loss": "1.1512", "code": "Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)){case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(\"\"+uri);}(getContext);}", "n_tokens": 62, "n_pass": [644, 64, 58]}

Minimal simplified code:
Cursor query(@NonNull String selectionArgs,String sortOrder){switch((uri)){case DATE:{String[]selectionArguments=new String[]{};cursor.query(sortOrder);}(""+uri);}(getContext);}

