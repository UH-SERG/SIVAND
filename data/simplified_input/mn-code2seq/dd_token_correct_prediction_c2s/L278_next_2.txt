
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-core/src/main/java/com/bj58/oceanus/core/jdbc/result/RowSetsResultSet_next.java
method_name = next
method_body = @Override public boolean next() throws SQLException { i++; if (i >= rowSetList.size()) { return false; } currentRow = rowSetList.get(i); return true; }
predict, score, loss = next, 0.8615046739578247, 0.36397817730903625

Trace of simplified code(s):
{"time": "2021-02-13 13:06:12.898601", "score": "0.8615", "loss": "0.364", "code": "@Override public boolean next() throws SQLException { i++; if (i >= rowSetList.size()) { return false; } currentRow = rowSetList.get(i); return true; }", "n_tokens": 64, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:06:15.541492", "score": "0.9091", "loss": "0.4355", "code": " boolean next() throws SQLException { i++; if (i >= rowSetList.size()) { return false; } currentRow = rowSetList.get(i); return true; }", "n_tokens": 60, "n_pass": [44, 3, 2]}
{"time": "2021-02-13 13:06:18.153876", "score": "0.9014", "loss": "0.3906", "code": " boolean next() throws SQLException { i++; if (i >size()) { return false; } currentRow = rowSetList.get(i); return true; }", "n_tokens": 56, "n_pass": [50, 5, 3]}
{"time": "2021-02-13 13:06:21.790059", "score": "0.8945", "loss": "0.5041", "code": " boolean next() throws SQLException { i++; if (i >size()) { false; } currentRow = rowSetList.get(i); return true; }", "n_tokens": 54, "n_pass": [96, 7, 4]}
{"time": "2021-02-13 13:06:23.105957", "score": "0.8942", "loss": "0.4514", "code": " boolean next() throws SQLException { i++; if (i >size()) {; } currentRow = rowSetList.get(i); return true; }", "n_tokens": 52, "n_pass": [97, 8, 5]}
{"time": "2021-02-13 13:06:24.416073", "score": "0.8942", "loss": "0.4514", "code": " boolean next() throws SQLException { i++; if (i >size()) {} currentRow = rowSetList.get(i); return true; }", "n_tokens": 50, "n_pass": [98, 9, 6]}
{"time": "2021-02-13 13:06:25.728118", "score": "0.9137", "loss": "0.4797", "code": " boolean next() throws SQLException { i++; if (i >size()) {} currentRow = get(i); return true; }", "n_tokens": 48, "n_pass": [102, 10, 7]}
{"time": "2021-02-13 13:06:27.058389", "score": "0.8681", "loss": "0.9061", "code": " boolean next() throws SQLException { i++; if (i >size()) {} currentRow = get(i); true; }", "n_tokens": 46, "n_pass": [106, 11, 8]}
{"time": "2021-02-13 13:06:28.353055", "score": "0.8899", "loss": "0.5687", "code": " boolean next() throws SQLException { i++; if (i >size()) {} currentRow = get(i);  }", "n_tokens": 44, "n_pass": [107, 12, 9]}
{"time": "2021-02-13 13:06:30.012587", "score": "0.6307", "loss": "1.7326", "code": " boolean next() throws SQLException { i; if (i >size()) {} currentRow = get(i);  }", "n_tokens": 42, "n_pass": [116, 13, 10]}
{"time": "2021-02-13 13:06:31.316087", "score": "0.5211", "loss": "1.7777", "code": " boolean next() throws SQLException { i; if (isize()) {} currentRow = get(i);  }", "n_tokens": 40, "n_pass": [120, 14, 11]}
{"time": "2021-02-13 13:06:39.597097", "score": "0.4407", "loss": "1.8799", "code": " boolean next() throws SQLException { i; if (i()) {} currentRow = get(i);  }", "n_tokens": 39, "n_pass": [181, 16, 12]}
{"time": "2021-02-13 13:06:40.910468", "score": "0.4407", "loss": "1.8799", "code": " boolean next() throws SQLException { i; if (i()){} currentRow = get(i);  }", "n_tokens": 38, "n_pass": [184, 17, 13]}
{"time": "2021-02-13 13:06:42.203841", "score": "0.4407", "loss": "1.8799", "code": " boolean next() throws SQLException { i; if (i()){}currentRow = get(i);  }", "n_tokens": 37, "n_pass": [187, 18, 14]}
{"time": "2021-02-13 13:06:43.495110", "score": "0.4407", "loss": "1.8799", "code": " boolean next() throws SQLException { i; if (i()){}currentRow= get(i);  }", "n_tokens": 36, "n_pass": [189, 19, 15]}
{"time": "2021-02-13 13:06:44.787710", "score": "0.4407", "loss": "1.8799", "code": " boolean next() throws SQLException { i; if (i()){}currentRow=get(i);  }", "n_tokens": 35, "n_pass": [191, 20, 16]}
{"time": "2021-02-13 13:06:46.096356", "score": "0.4383", "loss": "1.4638", "code": " boolean next() throws SQLException { i; if (i()){}currentRow=(i);  }", "n_tokens": 34, "n_pass": [192, 21, 17]}
{"time": "2021-02-13 13:06:47.422965", "score": "0.4383", "loss": "1.4638", "code": " boolean next() throws SQLException { i; if (i()){}currentRow=(i); }", "n_tokens": 33, "n_pass": [197, 22, 18]}
{"time": "2021-02-13 13:06:48.714095", "score": "0.4383", "loss": "1.4638", "code": " boolean next() throws SQLException { i; if (i()){}currentRow=(i);}", "n_tokens": 32, "n_pass": [198, 23, 19]}
{"time": "2021-02-13 13:06:50.030526", "score": "0.4383", "loss": "1.4638", "code": "boolean next() throws SQLException { i; if (i()){}currentRow=(i);}", "n_tokens": 31, "n_pass": [200, 24, 20]}
{"time": "2021-02-13 13:06:52.025844", "score": "0.4383", "loss": "1.4638", "code": "boolean next()throws SQLException { i; if (i()){}currentRow=(i);}", "n_tokens": 30, "n_pass": [206, 25, 21]}
{"time": "2021-02-13 13:06:53.340819", "score": "0.4383", "loss": "1.4638", "code": "boolean next()throws SQLException{ i; if (i()){}currentRow=(i);}", "n_tokens": 29, "n_pass": [210, 26, 22]}
{"time": "2021-02-13 13:06:54.662533", "score": "0.4383", "loss": "1.4638", "code": "boolean next()throws SQLException{i; if (i()){}currentRow=(i);}", "n_tokens": 28, "n_pass": [212, 27, 23]}
{"time": "2021-02-13 13:06:55.952188", "score": "0.3309", "loss": "2.0808", "code": "boolean next()throws SQLException{; if (i()){}currentRow=(i);}", "n_tokens": 27, "n_pass": [213, 28, 24]}
{"time": "2021-02-13 13:06:57.239251", "score": "0.3309", "loss": "2.0808", "code": "boolean next()throws SQLException{ if (i()){}currentRow=(i);}", "n_tokens": 26, "n_pass": [214, 29, 25]}
{"time": "2021-02-13 13:06:58.517677", "score": "0.3309", "loss": "2.0808", "code": "boolean next()throws SQLException{if (i()){}currentRow=(i);}", "n_tokens": 25, "n_pass": [215, 30, 26]}
{"time": "2021-02-13 13:06:59.805644", "score": "0.3309", "loss": "2.0808", "code": "boolean next()throws SQLException{if(i()){}currentRow=(i);}", "n_tokens": 24, "n_pass": [217, 31, 27]}

Minimal simplified code:
boolean next()throws SQLException{if(i()){}currentRow=(i);}

