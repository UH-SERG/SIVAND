
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/chunker/src/main/java/edu/illinois/cs/cogcomp/chunker/main/ChunkTester_main.java
method_name = main
method_body = public static void main(String[] args) { if (args.length > 3) { logger.info("Usage: ...ChunkTester testIn.txt [modelDir] [modelName]"); return; } String testFileName = args[0]; logger.info("Test file: " + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }
predict, score, loss = main, 0.9893237948417664, 0.013265462592244148

Trace of simplified code(s):
{"time": "2021-02-13 23:53:52.200180", "score": "0.9887", "loss": "0.0142", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester testIn.txt [modelDir] [modelName]\"); return; } String testFileName = args[0]; logger.info(\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 142, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:53:53.642597", "score": "0.9868", "loss": "0.0182", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = args[0]; logger.info(\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 133, "n_pass": [49, 2, 2]}
{"time": "2021-02-13 23:53:55.066658", "score": "0.9832", "loss": "0.0241", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName, args[1], args[2]); } }", "n_tokens": 124, "n_pass": [52, 3, 3]}
{"time": "2021-02-13 23:53:56.449074", "score": "0.9938", "loss": "0.0095", "code": "public static void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 115, "n_pass": [58, 4, 4]}
{"time": "2021-02-13 23:53:57.863212", "score": "0.9938", "loss": "0.0095", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"Usage: ...ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 111, "n_pass": [100, 5, 5]}
{"time": "2021-02-13 23:53:59.272070", "score": "0.992", "loss": "0.0122", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"..ChunkTester[modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 107, "n_pass": [108, 6, 6]}
{"time": "2021-02-13 23:54:00.655478", "score": "0.9917", "loss": "0.0121", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String testFileName = (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 103, "n_pass": [109, 7, 7]}
{"time": "2021-02-13 23:54:02.013171", "score": "0.985", "loss": "0.0215", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) { chunkTester(testFileName); } else { chunkTester(testFileName[2]); } }", "n_tokens": 99, "n_pass": [113, 8, 8]}
{"time": "2021-02-13 23:54:03.364832", "score": "0.9795", "loss": "0.0337", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName[2]); } }", "n_tokens": 94, "n_pass": [120, 9, 9]}
{"time": "2021-02-13 23:54:05.405651", "score": "0.9833", "loss": "0.0271", "code": "void main(String[] args) { if (args.length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 91, "n_pass": [189, 10, 10]}
{"time": "2021-02-13 23:54:07.117726", "score": "0.9914", "loss": "0.0134", "code": "void main(String[] args) { if (length > 3) { logger.info(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 89, "n_pass": [200, 11, 11]}
{"time": "2021-02-13 23:54:08.500572", "score": "0.9921", "loss": "0.0124", "code": "void main(String[] args) { if (length > 3) { logger(\"modelName]\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 87, "n_pass": [206, 12, 12]}
{"time": "2021-02-13 23:54:09.845118", "score": "0.9906", "loss": "0.0145", "code": "void main(String[] args) { if (length > 3) { logger(\"\"); return; } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 85, "n_pass": [208, 13, 13]}
{"time": "2021-02-13 23:54:11.239320", "score": "0.9906", "loss": "0.0145", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } String (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 83, "n_pass": [211, 14, 14]}
{"time": "2021-02-13 23:54:12.816141", "score": "0.9848", "loss": "0.0228", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test file: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 81, "n_pass": [213, 15, 15]}
{"time": "2021-02-13 23:54:14.203429", "score": "0.9788", "loss": "0.03", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test: \" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 79, "n_pass": [216, 16, 16]}
{"time": "2021-02-13 23:54:15.560126", "score": "0.9788", "loss": "0.03", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args.length == 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 77, "n_pass": [217, 17, 17]}
{"time": "2021-02-13 23:54:16.951537", "score": "0.962", "loss": "0.0537", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args== 1) {; } else { chunkTester(testFileName); } }", "n_tokens": 74, "n_pass": [224, 18, 18]}
{"time": "2021-02-13 23:54:18.299710", "score": "0.978", "loss": "0.0331", "code": "void main(String[] args) { if (length > 3) { logger(\"\");  } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 71, "n_pass": [225, 19, 19]}
{"time": "2021-02-13 23:54:20.028122", "score": "0.9782", "loss": "0.0307", "code": "void main(String[] args) { if (length > 3) {(\"\");  } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 69, "n_pass": [245, 20, 20]}
{"time": "2021-02-13 23:54:28.539662", "score": "0.9782", "loss": "0.0307", "code": "void main(String[] args) { if (length > 3) {(\"\"); } (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 68, "n_pass": [344, 21, 21]}
{"time": "2021-02-13 23:54:30.229247", "score": "0.9782", "loss": "0.0307", "code": "void main(String[] args) { if (length > 3) {(\"\");} (\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 67, "n_pass": [345, 22, 22]}
{"time": "2021-02-13 23:54:31.603012", "score": "0.9782", "loss": "0.0307", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"Test\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 66, "n_pass": [347, 23, 23]}
{"time": "2021-02-13 23:54:32.979236", "score": "0.9628", "loss": "0.0658", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\" + testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 65, "n_pass": [350, 24, 24]}
{"time": "2021-02-13 23:54:34.320080", "score": "0.9628", "loss": "0.0658", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+ testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 64, "n_pass": [352, 25, 25]}
{"time": "2021-02-13 23:54:35.682720", "score": "0.9628", "loss": "0.0658", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName); if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 63, "n_pass": [354, 26, 26]}
{"time": "2021-02-13 23:54:37.041351", "score": "0.9628", "loss": "0.0658", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if (args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 62, "n_pass": [358, 27, 27]}
{"time": "2021-02-13 23:54:38.377029", "score": "0.9628", "loss": "0.0658", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(args1) {; } else { chunkTester(testFileName); } }", "n_tokens": 61, "n_pass": [360, 28, 28]}
{"time": "2021-02-13 23:54:39.727281", "score": "0.992", "loss": "0.0123", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1) {; } else { chunkTester(testFileName); } }", "n_tokens": 60, "n_pass": [362, 29, 29]}
{"time": "2021-02-13 23:54:41.094574", "score": "0.992", "loss": "0.0123", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){; } else { chunkTester(testFileName); } }", "n_tokens": 59, "n_pass": [365, 30, 30]}
{"time": "2021-02-13 23:54:42.457391", "score": "0.992", "loss": "0.0123", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){ } else { chunkTester(testFileName); } }", "n_tokens": 58, "n_pass": [367, 31, 31]}
{"time": "2021-02-13 23:54:43.816463", "score": "0.992", "loss": "0.0123", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} else { chunkTester(testFileName); } }", "n_tokens": 57, "n_pass": [368, 32, 32]}
{"time": "2021-02-13 23:54:45.176066", "score": "0.9897", "loss": "0.0152", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} { chunkTester(testFileName); } }", "n_tokens": 55, "n_pass": [370, 33, 33]}
{"time": "2021-02-13 23:54:46.530207", "score": "0.9931", "loss": "0.0127", "code": "void main(String[] args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 53, "n_pass": [372, 34, 34]}
{"time": "2021-02-13 23:54:48.588889", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args) { if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 52, "n_pass": [384, 35, 35]}
{"time": "2021-02-13 23:54:49.918463", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){ if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 51, "n_pass": [387, 36, 36]}
{"time": "2021-02-13 23:54:51.285119", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){if (length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 50, "n_pass": [389, 37, 37]}
{"time": "2021-02-13 23:54:52.616215", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){if(length > 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 49, "n_pass": [391, 38, 38]}
{"time": "2021-02-13 23:54:53.973302", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){if(length> 3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 48, "n_pass": [394, 39, 39]}
{"time": "2021-02-13 23:54:55.334223", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){if(length>3) {(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 47, "n_pass": [396, 40, 40]}
{"time": "2021-02-13 23:54:56.666684", "score": "0.9931", "loss": "0.0127", "code": "void main(String[]args){if(length>3){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 46, "n_pass": [399, 41, 41]}
{"time": "2021-02-13 23:54:59.042151", "score": "0.9917", "loss": "0.0153", "code": "void main(String[]args){if(length3){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 45, "n_pass": [438, 42, 42]}
{"time": "2021-02-13 23:55:00.415800", "score": "0.9917", "loss": "0.0153", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){} {(testFileName); } }", "n_tokens": 44, "n_pass": [439, 43, 43]}
{"time": "2021-02-13 23:55:04.018223", "score": "0.9917", "loss": "0.0153", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName); } }", "n_tokens": 43, "n_pass": [489, 44, 44]}
{"time": "2021-02-13 23:55:05.370923", "score": "0.9917", "loss": "0.0153", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName);} }", "n_tokens": 42, "n_pass": [494, 45, 45]}
{"time": "2021-02-13 23:55:06.718796", "score": "0.9917", "loss": "0.0153", "code": "void main(String[]args){if(length){(\"\");}(\"\"+testFileName);if(1){}{(testFileName);}}", "n_tokens": 41, "n_pass": [496, 46, 46]}

Minimal simplified code:
void main(String[]args){if(length){("");}(""+testFileName);if(1){}{(testFileName);}}

