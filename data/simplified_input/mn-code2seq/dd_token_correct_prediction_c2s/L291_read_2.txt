
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/util/io/TeeInputStream_read.java
method_name = read
method_body = public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }
predict, score, loss = read, 0.9572886228561401, 0.3432971239089966

Trace of simplified code(s):
{"time": "2021-02-13 13:20:58.600587", "score": "0.9573", "loss": "0.3433", "code": "public int read() throws IOException { int i = input.read(); if (i >= 0) { output.write(i); } return i; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:21:00.291211", "score": "0.9637", "loss": "0.2732", "code": "public int read() throws IOException { int i = input.read(); if (i ) { output.write(i); } return i; }", "n_tokens": 52, "n_pass": [54, 2, 2]}
{"time": "2021-02-13 13:21:03.297229", "score": "0.9692", "loss": "0.4413", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); } return i; }", "n_tokens": 50, "n_pass": [102, 3, 3]}
{"time": "2021-02-13 13:21:04.618749", "score": "0.7897", "loss": "0.9073", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); } i; }", "n_tokens": 48, "n_pass": [106, 4, 4]}
{"time": "2021-02-13 13:21:05.947423", "score": "0.6263", "loss": "1.369", "code": "public int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 46, "n_pass": [107, 5, 5]}
{"time": "2021-02-13 13:21:07.244683", "score": "0.6263", "loss": "1.369", "code": " int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 45, "n_pass": [109, 6, 6]}
{"time": "2021-02-13 13:21:08.544901", "score": "0.6263", "loss": "1.369", "code": "int read() throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 44, "n_pass": [110, 7, 7]}
{"time": "2021-02-13 13:21:10.558655", "score": "0.6263", "loss": "1.369", "code": "int read()throws IOException { int i = input.read(); if (i ) { write(i); }  }", "n_tokens": 43, "n_pass": [116, 8, 8]}
{"time": "2021-02-13 13:21:11.862801", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i = input.read(); if (i ) { write(i); }  }", "n_tokens": 41, "n_pass": [120, 9, 9]}
{"time": "2021-02-13 13:21:20.168713", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read(); if (i ) { write(i); }  }", "n_tokens": 40, "n_pass": [180, 11, 10]}
{"time": "2021-02-13 13:21:22.750952", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read();if (i ) { write(i); }  }", "n_tokens": 39, "n_pass": [187, 13, 11]}
{"time": "2021-02-13 13:21:24.062358", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read();if(i ) { write(i); }  }", "n_tokens": 38, "n_pass": [189, 14, 12]}
{"time": "2021-02-13 13:21:25.355251", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read();if(i) { write(i); }  }", "n_tokens": 37, "n_pass": [192, 15, 13]}
{"time": "2021-02-13 13:21:26.646599", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read();if(i){ write(i); }  }", "n_tokens": 36, "n_pass": [194, 16, 14]}
{"time": "2021-02-13 13:21:27.964482", "score": "0.5544", "loss": "2.0549", "code": "int read()throws IOException { i =input.read();if(i){write(i); }  }", "n_tokens": 35, "n_pass": [196, 17, 15]}
{"time": "2021-02-13 13:21:29.285058", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException { i =input.read();if(i){(i); }  }", "n_tokens": 34, "n_pass": [197, 18, 16]}
{"time": "2021-02-13 13:21:30.578583", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException { i =input.read();if(i){(i);}  }", "n_tokens": 33, "n_pass": [202, 19, 17]}
{"time": "2021-02-13 13:21:31.909191", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException { i =input.read();if(i){(i);} }", "n_tokens": 32, "n_pass": [204, 20, 18]}
{"time": "2021-02-13 13:21:33.227678", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException { i =input.read();if(i){(i);}}", "n_tokens": 31, "n_pass": [205, 21, 19]}
{"time": "2021-02-13 13:21:35.229234", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException{ i =input.read();if(i){(i);}}", "n_tokens": 30, "n_pass": [215, 22, 20]}
{"time": "2021-02-13 13:21:36.520780", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException{i =input.read();if(i){(i);}}", "n_tokens": 29, "n_pass": [217, 23, 21]}
{"time": "2021-02-13 13:21:37.832456", "score": "0.8817", "loss": "0.5308", "code": "int read()throws IOException{i=input.read();if(i){(i);}}", "n_tokens": 28, "n_pass": [219, 24, 22]}
{"time": "2021-02-13 13:21:39.123988", "score": "0.8589", "loss": "0.4128", "code": "int read()throws IOException{iinput.read();if(i){(i);}}", "n_tokens": 27, "n_pass": [220, 25, 23]}
{"time": "2021-02-13 13:21:40.410356", "score": "0.9052", "loss": "0.2601", "code": "int read()throws IOException{i.read();if(i){(i);}}", "n_tokens": 26, "n_pass": [221, 26, 24]}

Minimal simplified code:
int read()throws IOException{i.read();if(i){(i);}}

