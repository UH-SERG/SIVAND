
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/cscheiblich__JWave/src/jwave/datatypes/lines/LineHash_isAllocated.java
method_name = isAllocated
method_body = @Override public boolean isAllocated() { boolean isAllocated = true; if (_hashMap == null) isAllocated = false; return isAllocated; }
predict, score, loss = isAllocated, 0.9881839752197266, 0.08283647894859314

Trace of simplified code(s):
{"time": "2021-02-13 15:21:18.814541", "score": "0.9882", "loss": "0.0828", "code": "@Override public boolean isAllocated() { boolean isAllocated = true; if (_hashMap == null) isAllocated = false; return isAllocated; }", "n_tokens": 47, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:21:20.527037", "score": "0.9792", "loss": "0.178", "code": "boolean isAllocated() { boolean isAllocated = true; if (_hashMap == null) isAllocated = false; return isAllocated; }", "n_tokens": 42, "n_pass": [20, 2, 2]}
{"time": "2021-02-13 15:21:21.856654", "score": "0.9771", "loss": "0.1471", "code": "boolean isAllocated() { boolean isAllocated ; if (_hashMap == null) isAllocated = false; return isAllocated; }", "n_tokens": 39, "n_pass": [45, 3, 3]}
{"time": "2021-02-13 15:21:23.204717", "score": "0.9654", "loss": "0.2456", "code": "boolean isAllocated() { boolean isAllocated ; if (_= null) isAllocated = false; return isAllocated; }", "n_tokens": 36, "n_pass": [47, 4, 4]}
{"time": "2021-02-13 15:21:24.535426", "score": "0.9761", "loss": "0.1613", "code": "boolean isAllocated() { boolean isAllocated ; if (_) isAllocated = false; return isAllocated; }", "n_tokens": 33, "n_pass": [48, 5, 5]}
{"time": "2021-02-13 15:21:25.854227", "score": "0.9356", "loss": "0.3494", "code": "boolean isAllocated() { boolean isAllocated ; if (_) isAllocatedfalse; return isAllocated; }", "n_tokens": 30, "n_pass": [50, 6, 6]}
{"time": "2021-02-13 15:21:30.472225", "score": "0.9584", "loss": "0.2172", "code": "boolean isAllocated() { boolean isAllocated ; if (_) ; return isAllocated; }", "n_tokens": 28, "n_pass": [82, 8, 7]}
{"time": "2021-02-13 15:21:31.771487", "score": "0.8773", "loss": "0.7829", "code": "boolean isAllocated() { boolean isAllocated ; if (_) return isAllocated; }", "n_tokens": 26, "n_pass": [83, 9, 8]}
{"time": "2021-02-13 15:21:33.089782", "score": "0.8103", "loss": "1.2866", "code": "boolean isAllocated() { boolean isAllocated ; if (_) isAllocated; }", "n_tokens": 24, "n_pass": [84, 10, 9]}
{"time": "2021-02-13 15:21:35.104288", "score": "0.8103", "loss": "1.2866", "code": "boolean isAllocated(){ boolean isAllocated ; if (_) isAllocated; }", "n_tokens": 23, "n_pass": [92, 11, 10]}
{"time": "2021-02-13 15:21:36.403592", "score": "0.8103", "loss": "1.2866", "code": "boolean isAllocated(){boolean isAllocated ; if (_) isAllocated; }", "n_tokens": 22, "n_pass": [94, 12, 11]}
{"time": "2021-02-13 15:21:37.710436", "score": "0.9841", "loss": "0.0753", "code": "boolean isAllocated(){ isAllocated ; if (_) isAllocated; }", "n_tokens": 21, "n_pass": [95, 13, 12]}
{"time": "2021-02-13 15:21:38.991866", "score": "0.9841", "loss": "0.0753", "code": "boolean isAllocated(){isAllocated ; if (_) isAllocated; }", "n_tokens": 20, "n_pass": [96, 14, 13]}
{"time": "2021-02-13 15:21:40.259798", "score": "0.9462", "loss": "0.2984", "code": "boolean isAllocated(){; if (_) isAllocated; }", "n_tokens": 18, "n_pass": [97, 15, 14]}
{"time": "2021-02-13 15:21:41.526715", "score": "0.9462", "loss": "0.2984", "code": "boolean isAllocated(){if (_) isAllocated; }", "n_tokens": 16, "n_pass": [98, 16, 15]}
{"time": "2021-02-13 15:21:45.184105", "score": "0.9462", "loss": "0.2984", "code": "boolean isAllocated(){if (_)isAllocated; }", "n_tokens": 15, "n_pass": [123, 17, 16]}
{"time": "2021-02-13 15:21:47.750873", "score": "0.9462", "loss": "0.2984", "code": "boolean isAllocated(){if (_)isAllocated;}", "n_tokens": 14, "n_pass": [126, 19, 17]}
{"time": "2021-02-13 15:21:50.072376", "score": "0.9462", "loss": "0.2984", "code": "boolean isAllocated(){if(_)isAllocated;}", "n_tokens": 13, "n_pass": [135, 20, 18]}

Minimal simplified code:
boolean isAllocated(){if(_)isAllocated;}

