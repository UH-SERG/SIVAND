
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_file_transfer_protocol_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }
predict, score, loss = pack, 0.9478857517242432, 0.06038298457860947

Trace of simplified code(s):
{"time": "2021-02-13 13:15:14.093774", "score": "0.944", "loss": "0.0639", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 154, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:15:15.456590", "score": "0.9475", "loss": "0.0586", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_TRANSFER_PROTOCOL; packet.payload.putUnsignedByte(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 135, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 13:15:16.814981", "score": "0.9537", "loss": "0.062", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_(target_network); packet.payload.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 125, "n_pass": [44, 3, 3]}
{"time": "2021-02-13 13:15:18.161580", "score": "0.928", "loss": "0.0827", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_.putUnsignedByte(target_system); packet.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 115, "n_pass": [45, 4, 4]}
{"time": "2021-02-13 13:15:19.514601", "score": "0.9326", "loss": "0.0848", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet.payload.putUnsignedByte(payload[i]); } return packet; }", "n_tokens": 105, "n_pass": [46, 5, 5]}
{"time": "2021-02-13 13:15:20.956867", "score": "0.9364", "loss": "0.1053", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 95, "n_pass": [51, 6, 6]}
{"time": "2021-02-13 13:15:22.312352", "score": "0.9444", "loss": "0.0912", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255;_MSG_ID_FILE_.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 86, "n_pass": [54, 7, 7]}
{"time": "2021-02-13 13:15:23.640735", "score": "0.7498", "loss": "0.4867", "code": "public MAVLinkPacket pack() { packet.sysid = 255;_MSG_ID_FILE_.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 77, "n_pass": [55, 8, 8]}
{"time": "2021-02-13 13:15:24.962995", "score": "0.5444", "loss": "1.0106", "code": "public MAVLinkPacket pack() {5;_MSG_ID_FILE_.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 68, "n_pass": [56, 9, 9]}
{"time": "2021-02-13 13:15:26.294804", "score": "0.6011", "loss": "0.865", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int i = 0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 63, "n_pass": [79, 10, 10]}
{"time": "2021-02-13 13:15:27.617057", "score": "0.8411", "loss": "0.2977", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i < payload.length; i++) { packet; } return packet; }", "n_tokens": 58, "n_pass": [83, 11, 11]}
{"time": "2021-02-13 13:15:28.926743", "score": "0.93", "loss": "0.0975", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i ; i++) { packet; } return packet; }", "n_tokens": 53, "n_pass": [85, 12, 12]}
{"time": "2021-02-13 13:15:31.263799", "score": "0.9344", "loss": "0.0946", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i ; ) { packet; } return packet; }", "n_tokens": 50, "n_pass": [121, 13, 13]}
{"time": "2021-02-13 13:15:32.577463", "score": "0.917", "loss": "0.1052", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i ; ) { } return packet; }", "n_tokens": 47, "n_pass": [123, 14, 14]}
{"time": "2021-02-13 13:15:33.887101", "score": "0.8473", "loss": "0.1698", "code": "public MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i ; ) { } ; }", "n_tokens": 44, "n_pass": [125, 15, 15]}
{"time": "2021-02-13 13:15:35.180213", "score": "0.8473", "loss": "0.1698", "code": "MAVLinkPacket pack() {5;_MSG.payload.putUnsignedByte(target_component); for (int0; i ; ) { } ; }", "n_tokens": 42, "n_pass": [127, 16, 16]}
{"time": "2021-02-13 13:15:36.837350", "score": "0.8326", "loss": "0.1874", "code": "MAVLinkPacket pack() {5;_payload.putUnsignedByte(target_component); for (int0; i ; ) { } ; }", "n_tokens": 40, "n_pass": [133, 17, 17]}
{"time": "2021-02-13 13:15:38.144592", "score": "0.8444", "loss": "0.1762", "code": "MAVLinkPacket pack() {5;_putUnsignedByte(target_component); for (int0; i ; ) { } ; }", "n_tokens": 38, "n_pass": [134, 18, 18]}
{"time": "2021-02-13 13:15:39.456207", "score": "0.8495", "loss": "0.168", "code": "MAVLinkPacket pack() {5;_putUnsignedByte(component); for (int0; i ; ) { } ; }", "n_tokens": 36, "n_pass": [136, 19, 19]}
{"time": "2021-02-13 13:15:44.448888", "score": "0.7025", "loss": "0.3774", "code": "MAVLinkPacket pack() {5;_putUnsignedByte(); for (int0; i ; ) { } ; }", "n_tokens": 35, "n_pass": [182, 20, 20]}
{"time": "2021-02-13 13:15:45.774608", "score": "0.7025", "loss": "0.3774", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for (int0; i ; ) { } ; }", "n_tokens": 34, "n_pass": [184, 21, 21]}
{"time": "2021-02-13 13:15:47.074027", "score": "0.7025", "loss": "0.3774", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(int0; i ; ) { } ; }", "n_tokens": 33, "n_pass": [186, 22, 22]}
{"time": "2021-02-13 13:15:48.393920", "score": "0.7115", "loss": "0.3909", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(0; i ; ) { } ; }", "n_tokens": 32, "n_pass": [188, 23, 23]}
{"time": "2021-02-13 13:15:49.682853", "score": "0.6801", "loss": "0.4284", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(; i ; ) { } ; }", "n_tokens": 31, "n_pass": [189, 24, 24]}
{"time": "2021-02-13 13:15:51.005394", "score": "0.6801", "loss": "0.4284", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(;i ; ) { } ; }", "n_tokens": 30, "n_pass": [191, 25, 25]}
{"time": "2021-02-13 13:15:52.308013", "score": "0.806", "loss": "0.2579", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(; ; ) { } ; }", "n_tokens": 29, "n_pass": [192, 26, 26]}
{"time": "2021-02-13 13:15:53.611555", "score": "0.806", "loss": "0.2579", "code": "MAVLinkPacket pack() {5;_putUnsignedByte();for(; ; ) { } }", "n_tokens": 27, "n_pass": [197, 27, 27]}
{"time": "2021-02-13 13:15:55.957491", "score": "0.806", "loss": "0.2579", "code": "MAVLinkPacket pack(){5;_putUnsignedByte();for(; ; ) { } }", "n_tokens": 26, "n_pass": [204, 28, 28]}
{"time": "2021-02-13 13:15:57.277239", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){;_putUnsignedByte();for(; ; ) { } }", "n_tokens": 25, "n_pass": [206, 29, 29]}
{"time": "2021-02-13 13:15:58.564816", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){_putUnsignedByte();for(; ; ) { } }", "n_tokens": 24, "n_pass": [207, 30, 30]}
{"time": "2021-02-13 13:15:59.854265", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(; ; ) { } }", "n_tokens": 23, "n_pass": [208, 31, 31]}
{"time": "2021-02-13 13:16:04.185242", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(;; ) { } }", "n_tokens": 22, "n_pass": [237, 32, 32]}
{"time": "2021-02-13 13:16:05.486234", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(;;) { } }", "n_tokens": 21, "n_pass": [238, 33, 33]}
{"time": "2021-02-13 13:16:06.776022", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(;;){ } }", "n_tokens": 20, "n_pass": [240, 34, 34]}
{"time": "2021-02-13 13:16:08.063305", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(;;){} }", "n_tokens": 19, "n_pass": [242, 35, 35]}
{"time": "2021-02-13 13:16:09.352630", "score": "0.6824", "loss": "0.4752", "code": "MAVLinkPacket pack(){putUnsignedByte();for(;;){}}", "n_tokens": 18, "n_pass": [244, 36, 36]}

Minimal simplified code:
MAVLinkPacket pack(){putUnsignedByte();for(;;){}}

