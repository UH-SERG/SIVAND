
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/jdk1.1/java/security/cert/X509CertSelector_getKeyUsage.java
method_name = getKeyUsage
method_body = public boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } return null; }
predict, score, loss = getKeyUsage, 0.9066352248191833, 0.3875974416732788

Trace of simplified code(s):
{"time": "2021-02-13 20:13:04.614482", "score": "0.9066", "loss": "0.3876", "code": "public boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } return null; }", "n_tokens": 48, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:13:07.013575", "score": "0.9164", "loss": "0.3588", "code": "public boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } ; }", "n_tokens": 45, "n_pass": [58, 2, 2]}
{"time": "2021-02-13 20:13:11.067743", "score": "0.9164", "loss": "0.3588", "code": "public boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 43, "n_pass": [103, 3, 3]}
{"time": "2021-02-13 20:13:12.369193", "score": "0.9164", "loss": "0.3588", "code": " boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 42, "n_pass": [105, 4, 4]}
{"time": "2021-02-13 20:13:13.667885", "score": "0.9164", "loss": "0.3588", "code": "boolean[] getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 41, "n_pass": [106, 5, 5]}
{"time": "2021-02-13 20:13:14.962746", "score": "0.9164", "loss": "0.3588", "code": "boolean[]getKeyUsage() { if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 40, "n_pass": [110, 6, 6]}
{"time": "2021-02-13 20:13:16.252013", "score": "0.9164", "loss": "0.3588", "code": "boolean[]getKeyUsage(){ if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 39, "n_pass": [114, 7, 7]}
{"time": "2021-02-13 20:13:17.554138", "score": "0.9164", "loss": "0.3588", "code": "boolean[]getKeyUsage(){if (keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 38, "n_pass": [116, 8, 8]}
{"time": "2021-02-13 20:13:18.853956", "score": "0.9164", "loss": "0.3588", "code": "boolean[]getKeyUsage(){if(keyUsage != null) { return (boolean[]) keyUsage.clone(); } }", "n_tokens": 37, "n_pass": [118, 9, 9]}
{"time": "2021-02-13 20:13:20.515775", "score": "0.9083", "loss": "0.4011", "code": "boolean[]getKeyUsage(){if(keyUsage != null) { return (boolean) keyUsage.clone(); } }", "n_tokens": 35, "n_pass": [127, 10, 10]}
{"time": "2021-02-13 20:13:21.801155", "score": "0.8853", "loss": "0.6629", "code": "boolean[]getKeyUsage(){if(keyUsage != null) { return (boolean) clone(); } }", "n_tokens": 33, "n_pass": [129, 11, 11]}
{"time": "2021-02-13 20:13:26.447787", "score": "0.8853", "loss": "0.6629", "code": "boolean[]getKeyUsage(){if(keyUsage != null) { return (boolean) clone();} }", "n_tokens": 32, "n_pass": [178, 12, 12]}
{"time": "2021-02-13 20:13:27.742752", "score": "0.8853", "loss": "0.6629", "code": "boolean[]getKeyUsage(){if(keyUsage != null) { return (boolean) clone();}}", "n_tokens": 31, "n_pass": [179, 13, 13]}
{"time": "2021-02-13 20:13:29.053292", "score": "0.8853", "loss": "0.6629", "code": "boolean[]getKeyUsage(){if(keyUsage!= null) { return (boolean) clone();}}", "n_tokens": 30, "n_pass": [191, 14, 14]}
{"time": "2021-02-13 20:13:30.351622", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage= null) { return (boolean) clone();}}", "n_tokens": 29, "n_pass": [192, 15, 15]}
{"time": "2021-02-13 20:13:31.665068", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage=null) { return (boolean) clone();}}", "n_tokens": 28, "n_pass": [194, 16, 16]}
{"time": "2021-02-13 20:13:32.985578", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage=null){ return (boolean) clone();}}", "n_tokens": 27, "n_pass": [197, 17, 17]}
{"time": "2021-02-13 20:13:34.283956", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage=null){return (boolean) clone();}}", "n_tokens": 26, "n_pass": [199, 18, 18]}
{"time": "2021-02-13 20:13:35.952635", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage=null){return(boolean) clone();}}", "n_tokens": 25, "n_pass": [201, 19, 19]}
{"time": "2021-02-13 20:13:37.251382", "score": "0.8577", "loss": "1.028", "code": "boolean[]getKeyUsage(){if(keyUsage=null){return(boolean)clone();}}", "n_tokens": 24, "n_pass": [205, 20, 20]}

Minimal simplified code:
boolean[]getKeyUsage(){if(keyUsage=null){return(boolean)clone();}}

