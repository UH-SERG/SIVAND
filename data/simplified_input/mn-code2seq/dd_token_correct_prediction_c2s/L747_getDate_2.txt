
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/cms/Time_getDate.java
method_name = getDate
method_body = public Date getDate() { try { if (time instanceof ASN1UTCTime) { return ((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException("invalid date string: " + e.getMessage()); } }
predict, score, loss = getDate, 0.8864656686782837, 0.4908904433250427

Trace of simplified code(s):
{"time": "2021-02-13 21:21:31.966935", "score": "0.8865", "loss": "0.4909", "code": "public Date getDate() { try { if (time instanceof ASN1UTCTime) { return ((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException(\"invalid date string: \" + e.getMessage()); } }", "n_tokens": 111, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:21:33.721441", "score": "0.8759", "loss": "0.5945", "code": "public Date getDate() { try { if (timeASN1UTCTime) { return ((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException(\"invalid date string: \" + e.getMessage()); } }", "n_tokens": 108, "n_pass": [98, 2, 2]}
{"time": "2021-02-13 21:21:35.111562", "score": "0.9125", "loss": "0.4115", "code": "public Date getDate() { try { if (time) { return ((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException(\"invalid date string: \" + e.getMessage()); } }", "n_tokens": 105, "n_pass": [99, 3, 3]}
{"time": "2021-02-13 21:21:36.472763", "score": "0.9105", "loss": "0.4375", "code": "public Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw new IllegalStateException(\"invalid date string: \" + e.getMessage()); } }", "n_tokens": 102, "n_pass": [101, 4, 4]}
{"time": "2021-02-13 21:21:37.815013", "score": "0.9086", "loss": "0.4043", "code": "public Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid date string: \" + e.getMessage()); } }", "n_tokens": 98, "n_pass": [117, 5, 5]}
{"time": "2021-02-13 21:21:39.152421", "score": "0.8604", "loss": "0.5426", "code": "public Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e.getMessage()); } }", "n_tokens": 94, "n_pass": [119, 6, 6]}
{"time": "2021-02-13 21:21:43.222519", "score": "0.8491", "loss": "0.5572", "code": "public Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e()); } }", "n_tokens": 92, "n_pass": [204, 7, 7]}
{"time": "2021-02-13 21:21:44.539742", "score": "0.8255", "loss": "0.6569", "code": "public Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 90, "n_pass": [205, 8, 8]}
{"time": "2021-02-13 21:21:45.891804", "score": "0.8255", "loss": "0.6569", "code": " Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 89, "n_pass": [209, 9, 9]}
{"time": "2021-02-13 21:21:47.213084", "score": "0.8255", "loss": "0.6569", "code": "Date getDate() { try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 88, "n_pass": [210, 10, 10]}
{"time": "2021-02-13 21:21:49.640009", "score": "0.8255", "loss": "0.6569", "code": "Date getDate(){ try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 87, "n_pass": [216, 11, 11]}
{"time": "2021-02-13 21:21:50.982637", "score": "0.8255", "loss": "0.6569", "code": "Date getDate(){try { if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 86, "n_pass": [218, 12, 12]}
{"time": "2021-02-13 21:21:52.313096", "score": "0.8255", "loss": "0.6569", "code": "Date getDate(){try{ if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 85, "n_pass": [220, 13, 13]}
{"time": "2021-02-13 21:21:53.633896", "score": "0.8255", "loss": "0.6569", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } else { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 84, "n_pass": [222, 14, 14]}
{"time": "2021-02-13 21:21:57.615212", "score": "0.9049", "loss": "0.3419", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { return ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 82, "n_pass": [235, 17, 15]}
{"time": "2021-02-13 21:21:58.927683", "score": "0.855", "loss": "0.5543", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((ASN1GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 80, "n_pass": [237, 18, 16]}
{"time": "2021-02-13 21:22:00.262431", "score": "0.8479", "loss": "0.5816", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime) time).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 78, "n_pass": [239, 19, 17]}
{"time": "2021-02-13 21:22:01.602117", "score": "0.7869", "loss": "0.7794", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) { throw(\"invalid  \" + e); } }", "n_tokens": 76, "n_pass": [241, 20, 18]}
{"time": "2021-02-13 21:22:02.937079", "score": "0.7364", "loss": "0.9819", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\"invalid  \" + e); } }", "n_tokens": 74, "n_pass": [252, 21, 19]}
{"time": "2021-02-13 21:22:04.247038", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \" + e); } }", "n_tokens": 72, "n_pass": [254, 22, 20]}
{"time": "2021-02-13 21:22:15.985255", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+ e); } }", "n_tokens": 71, "n_pass": [360, 25, 21]}
{"time": "2021-02-13 21:22:17.315778", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e); } }", "n_tokens": 70, "n_pass": [361, 26, 22]}
{"time": "2021-02-13 21:22:18.669220", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);} }", "n_tokens": 69, "n_pass": [365, 27, 23]}
{"time": "2021-02-13 21:22:20.012810", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if (time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 68, "n_pass": [367, 28, 24]}
{"time": "2021-02-13 21:22:22.419261", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if(time) {((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 67, "n_pass": [378, 29, 25]}
{"time": "2021-02-13 21:22:23.773531", "score": "0.7344", "loss": "1.003", "code": "Date getDate(){try{if(time){((ASN1UTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 66, "n_pass": [382, 30, 26]}
{"time": "2021-02-13 21:22:25.129703", "score": "0.7053", "loss": "1.154", "code": "Date getDate(){try{if(time){((ASNUTCTime) time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 65, "n_pass": [387, 31, 27]}
{"time": "2021-02-13 21:22:27.748393", "score": "0.7053", "loss": "1.154", "code": "Date getDate(){try{if(time){((ASNUTCTime)time).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 64, "n_pass": [390, 33, 28]}
{"time": "2021-02-13 21:22:29.083127", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate(); } { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 63, "n_pass": [391, 34, 29]}
{"time": "2021-02-13 21:22:30.432464", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();} { ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 62, "n_pass": [398, 35, 30]}
{"time": "2021-02-13 21:22:31.756587", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{ ((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 61, "n_pass": [400, 36, 31]}
{"time": "2021-02-13 21:22:33.098714", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate(); } } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 60, "n_pass": [402, 37, 32]}
{"time": "2021-02-13 21:22:34.445977", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();} } catch (ParseException e) {(\" \"+e);}}", "n_tokens": 59, "n_pass": [413, 38, 33]}
{"time": "2021-02-13 21:22:35.775783", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}} catch (ParseException e) {(\" \"+e);}}", "n_tokens": 58, "n_pass": [415, 39, 34]}
{"time": "2021-02-13 21:22:37.104862", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch (ParseException e) {(\" \"+e);}}", "n_tokens": 57, "n_pass": [417, 40, 35]}
{"time": "2021-02-13 21:22:38.434754", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch(ParseException e) {(\" \"+e);}}", "n_tokens": 56, "n_pass": [419, 41, 36]}
{"time": "2021-02-13 21:22:39.778878", "score": "0.7862", "loss": "0.8984", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch(ParseException e){(\" \"+e);}}", "n_tokens": 55, "n_pass": [425, 42, 37]}
{"time": "2021-02-13 21:22:41.091851", "score": "0.7944", "loss": "0.8441", "code": "Date getDate(){try{if(time){((ASNUTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch(ParseException e){(\"\"+e);}}", "n_tokens": 54, "n_pass": [429, 43, 38]}
{"time": "2021-02-13 21:22:43.510260", "score": "0.8137", "loss": "0.7359", "code": "Date getDate(){try{if(time){((UTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch(ParseException e){(\"\"+e);}}", "n_tokens": 53, "n_pass": [452, 44, 39]}

Minimal simplified code:
Date getDate(){try{if(time){((UTCTime)).getAdjustedDate();}{((GeneralizedTime)).getDate();}}catch(ParseException e){(""+e);}}

