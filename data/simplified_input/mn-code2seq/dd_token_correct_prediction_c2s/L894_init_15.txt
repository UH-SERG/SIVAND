
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/crypto/macs/SkeinMac_init.java
method_name = init
method_body = public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else if (params instanceof KeyParameter) { skeinParameters = new SkeinParameters.Builder().setKey(((KeyParameter) params).getKey()).build(); } else { throw new IllegalArgumentException("Invalid parameter passed to Skein MAC init - " + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException("Skein MAC requires a key parameter."); } engine.init(skeinParameters); }
predict, score, loss = init, 0.7447009086608887, 0.4608917534351349

Trace of simplified code(s):
{"time": "2021-02-13 23:52:24.259553", "score": "0.747", "loss": "0.4534", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else if (params instanceof KeyParameter) { skeinParameters = new SkeinParameters.Builder().setKey(((KeyParameter) params).getKey()).build(); } else { throw new IllegalArgumentException(\"Invalid parameter passed to Skein MAC init - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 191, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:52:25.656489", "score": "0.472", "loss": "1.1081", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid parameter passed to Skein MAC init - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 143, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 23:52:27.064520", "score": "0.4943", "loss": "1.0169", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC requires a key parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 131, "n_pass": [37, 3, 3]}
{"time": "2021-02-13 23:52:28.557616", "score": "0.5147", "loss": "0.963", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters = (SkeinParameters) params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 125, "n_pass": [78, 4, 4]}
{"time": "2021-02-13 23:52:29.947816", "score": "0.4167", "loss": "1.3543", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else { throw new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 119, "n_pass": [87, 5, 5]}
{"time": "2021-02-13 23:52:31.341774", "score": "0.435", "loss": "1.4308", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {new IllegalArgumentException(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 116, "n_pass": [151, 6, 6]}
{"time": "2021-02-13 23:52:32.754684", "score": "0.3909", "loss": "1.6215", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid - \" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 113, "n_pass": [152, 7, 7]}
{"time": "2021-02-13 23:52:34.124612", "score": "0.3733", "loss": "1.6933", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" + params.getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 110, "n_pass": [154, 8, 8]}
{"time": "2021-02-13 23:52:35.502711", "score": "0.3578", "loss": "1.7101", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKey() == null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 107, "n_pass": [156, 9, 9]}
{"time": "2021-02-13 23:52:36.892431", "score": "0.3962", "loss": "1.6123", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKey== null) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 104, "n_pass": [163, 10, 10]}
{"time": "2021-02-13 23:52:38.412080", "score": "0.2203", "loss": "2.3211", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throw new IllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 101, "n_pass": [164, 11, 11]}
{"time": "2021-02-13 23:52:39.808164", "score": "0.1965", "loss": "2.7148", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"Skein MAC parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 98, "n_pass": [167, 12, 12]}
{"time": "2021-02-13 23:52:41.192653", "score": "0.2962", "loss": "2.1275", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\" parameter.\"); } engine.init(skeinParameters); }", "n_tokens": 95, "n_pass": [169, 13, 13]}
{"time": "2021-02-13 23:52:42.576026", "score": "0.2906", "loss": "2.2263", "code": "public void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 92, "n_pass": [170, 14, 14]}
{"time": "2021-02-13 23:52:46.756215", "score": "0.2906", "loss": "2.2263", "code": "void init(CipherParameters params) throws IllegalArgumentException { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 90, "n_pass": [176, 17, 15]}
{"time": "2021-02-13 23:52:48.137278", "score": "0.359", "loss": "2.2842", "code": "void init(CipherParameters params)  { SkeinParameters skeinParameters; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 87, "n_pass": [180, 18, 16]}
{"time": "2021-02-13 23:52:49.525986", "score": "0.5389", "loss": "1.582", "code": "void init(CipherParameters params)  { ; if (params instanceof SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 84, "n_pass": [182, 19, 17]}
{"time": "2021-02-13 23:52:50.895797", "score": "0.4171", "loss": "1.8662", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (skeinParameters.getKeynull) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 81, "n_pass": [185, 20, 18]}
{"time": "2021-02-13 23:52:52.271203", "score": "0.6022", "loss": "1.219", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init(skeinParameters); }", "n_tokens": 78, "n_pass": [198, 21, 19]}
{"time": "2021-02-13 23:52:54.994496", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params)  { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 75, "n_pass": [205, 23, 20]}
{"time": "2021-02-13 23:53:03.034158", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params) { ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 74, "n_pass": [291, 25, 21]}
{"time": "2021-02-13 23:53:04.370032", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params){ ; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 73, "n_pass": [292, 26, 22]}
{"time": "2021-02-13 23:53:05.734440", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params){; if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 72, "n_pass": [294, 27, 23]}
{"time": "2021-02-13 23:53:07.116834", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params){ if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 71, "n_pass": [295, 28, 24]}
{"time": "2021-02-13 23:53:08.451412", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params){if (paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 70, "n_pass": [296, 29, 25]}
{"time": "2021-02-13 23:53:09.817492", "score": "0.4056", "loss": "1.7048", "code": "void init(CipherParameters params){if(paramsSkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 69, "n_pass": [298, 30, 26]}
{"time": "2021-02-13 23:53:11.190160", "score": "0.4317", "loss": "1.6212", "code": "void init(CipherParameters params){if(SkeinParameters) { skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 68, "n_pass": [300, 31, 27]}
{"time": "2021-02-13 23:53:12.518322", "score": "0.4317", "loss": "1.6212", "code": "void init(CipherParameters params){if(SkeinParameters){ skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 67, "n_pass": [303, 32, 28]}
{"time": "2021-02-13 23:53:13.906168", "score": "0.4317", "loss": "1.6212", "code": "void init(CipherParameters params){if(SkeinParameters){skeinParameters params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 66, "n_pass": [305, 33, 29]}
{"time": "2021-02-13 23:53:15.278926", "score": "0.5165", "loss": "1.282", "code": "void init(CipherParameters params){if(SkeinParameters){ params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 65, "n_pass": [306, 34, 30]}
{"time": "2021-02-13 23:53:16.626469", "score": "0.5165", "loss": "1.282", "code": "void init(CipherParameters params){if(SkeinParameters){params; } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 64, "n_pass": [307, 35, 31]}
{"time": "2021-02-13 23:53:17.979959", "score": "0.5131", "loss": "1.1672", "code": "void init(CipherParameters params){if(SkeinParameters){ } else {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 62, "n_pass": [308, 36, 32]}
{"time": "2021-02-13 23:53:19.363652", "score": "0.4249", "loss": "1.3247", "code": "void init(CipherParameters params){if(SkeinParameters){ } {(\"Invalid\" +getClass().getName()); } if (null) { throwIllegalArgumentException(\"\"); } engine.init; }", "n_tokens": 60, "n_pass": [310, 37, 33]}
{"time": "2021-02-13 23:53:20.707997", "score": "0.4283", "loss": "1.5913", "code": "void init(CipherParameters params){if(SkeinParameters){ } {(\"Invalid\" +getClass().getName()); } if (null) { (\"\"); } engine.init; }", "n_tokens": 58, "n_pass": [325, 38, 34]}
{"time": "2021-02-13 23:53:22.056602", "score": "0.3778", "loss": "1.9266", "code": "void init(CipherParameters params){if(SkeinParameters){ } {(\"Invalid\" +getClass().getName()); } if (null) { (\"\"); } init; }", "n_tokens": 56, "n_pass": [330, 39, 35]}
{"time": "2021-02-13 23:53:31.582146", "score": "0.3778", "loss": "1.9266", "code": "void init(CipherParameters params){if(SkeinParameters){ } {(\"Invalid\" +getClass().getName()); } if (null) { (\"\"); } init;}", "n_tokens": 55, "n_pass": [410, 42, 36]}
{"time": "2021-02-13 23:53:33.728355", "score": "0.3778", "loss": "1.9266", "code": "void init(CipherParameters params){if(SkeinParameters){} {(\"Invalid\" +getClass().getName()); } if (null) { (\"\"); } init;}", "n_tokens": 54, "n_pass": [425, 43, 37]}
{"time": "2021-02-13 23:53:35.089886", "score": "0.3778", "loss": "1.9266", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"Invalid\" +getClass().getName()); } if (null) { (\"\"); } init;}", "n_tokens": 53, "n_pass": [427, 44, 38]}
{"time": "2021-02-13 23:53:36.415530", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\" +getClass().getName()); } if (null) { (\"\"); } init;}", "n_tokens": 52, "n_pass": [431, 45, 39]}
{"time": "2021-02-13 23:53:37.758985", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName()); } if (null) { (\"\"); } init;}", "n_tokens": 51, "n_pass": [433, 46, 40]}
{"time": "2021-02-13 23:53:39.123845", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());} if (null) { (\"\"); } init;}", "n_tokens": 50, "n_pass": [444, 47, 41]}
{"time": "2021-02-13 23:53:40.458728", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if (null) { (\"\"); } init;}", "n_tokens": 49, "n_pass": [446, 48, 42]}
{"time": "2021-02-13 23:53:41.816535", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if(null) { (\"\"); } init;}", "n_tokens": 48, "n_pass": [448, 49, 43]}
{"time": "2021-02-13 23:53:43.166143", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if(null){ (\"\"); } init;}", "n_tokens": 47, "n_pass": [452, 50, 44]}
{"time": "2021-02-13 23:53:44.498831", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if(null){(\"\"); } init;}", "n_tokens": 46, "n_pass": [454, 51, 45]}
{"time": "2021-02-13 23:53:45.859298", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if(null){(\"\");} init;}", "n_tokens": 45, "n_pass": [460, 52, 46]}
{"time": "2021-02-13 23:53:47.214549", "score": "0.6246", "loss": "1.5706", "code": "void init(CipherParameters params){if(SkeinParameters){}{(\"\"+getClass().getName());}if(null){(\"\");}init;}", "n_tokens": 44, "n_pass": [462, 53, 47]}

Minimal simplified code:
void init(CipherParameters params){if(SkeinParameters){}{(""+getClass().getName());}if(null){("");}init;}

