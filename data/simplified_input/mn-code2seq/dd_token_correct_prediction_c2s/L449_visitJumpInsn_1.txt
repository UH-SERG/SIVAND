
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/jmockit__jmockit1/main/src/mockit/asm/MethodWriter_visitJumpInsn.java
method_name = visitJumpInsn
method_body = @Override public void visitJumpInsn(int opcode, @Nonnull Label label) { Label nextInsn = cfgAnalysis.updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); } else { code.putByte(opcode); label.put(code, code.length - 1, false); } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }
predict, score, loss = visitJumpInsn, 0.8332809209823608, 0.7475870251655579

Trace of simplified code(s):
{"time": "2021-02-16 20:42:04.417840", "score": "0.8459", "loss": "0.7676", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) { Label nextInsn = cfgAnalysis.updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); } else { code.putByte(opcode); label.put(code, code.length - 1, false); } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 256, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 20:42:07.139808", "score": "0.8724", "loss": "0.6449", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) { Label nextInsn = cfgAnalysis.updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); put(code, code.length - 1, false); } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 240, "n_pass": [57, 3, 2]}
{"time": "2021-02-16 20:42:08.457482", "score": "0.8979", "loss": "0.4427", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) { Label nextInsn = cfgAnalysis.updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 224, "n_pass": [58, 4, 3]}
{"time": "2021-02-16 20:42:09.810862", "score": "0.946", "loss": "0.2547", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) { updateCurrentBlockForJumpInstruction(opcode, label); if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 216, "n_pass": [106, 5, 4]}
{"time": "2021-02-16 20:42:11.118062", "score": "0.8638", "loss": "0.6043", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); code.putByte(GOTO_W); } label.put(code, code.length - 1, true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 208, "n_pass": [107, 6, 5]}
{"time": "2021-02-16 20:42:13.775610", "score": "0.8246", "loss": "0.7871", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(code, code.length - 1, true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 200, "n_pass": [125, 8, 6]}
{"time": "2021-02-16 20:42:15.094951", "score": "0.889", "loss": "0.5474", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put( 1, true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 192, "n_pass": [127, 9, 7]}
{"time": "2021-02-16 20:42:17.786515", "score": "0.8833", "loss": "0.5685", "code": "@Override public void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 188, "n_pass": [200, 11, 8]}
{"time": "2021-02-16 20:42:20.419316", "score": "0.7235", "loss": "1.3339", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && label.position - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 184, "n_pass": [205, 13, 9]}
{"time": "2021-02-16 20:42:21.726604", "score": "0.7309", "loss": "1.4665", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length < Short.MIN_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 180, "n_pass": [214, 14, 10]}
{"time": "2021-02-16 20:42:23.045715", "score": "0.7199", "loss": "1.631", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn != null) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 176, "n_pass": [217, 15, 11]}
{"time": "2021-02-16 20:42:24.357146", "score": "0.8329", "loss": "0.8412", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); } code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 172, "n_pass": [228, 16, 12]}
{"time": "2021-02-16 20:42:25.651794", "score": "0.8063", "loss": "0.9223", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 168, "n_pass": [232, 17, 13]}
{"time": "2021-02-16 20:42:26.946041", "score": "0.7934", "loss": "0.9962", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 164, "n_pass": [234, 18, 14]}
{"time": "2021-02-16 20:42:29.565559", "score": "0.7567", "loss": "1.1965", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(opcode, nextInsn); }", "n_tokens": 160, "n_pass": [241, 20, 15]}
{"time": "2021-02-16 20:42:30.870162", "score": "0.7475", "loss": "1.2545", "code": " void visitJumpInsn(int opcode, @Nonnull Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 156, "n_pass": [250, 21, 16]}
{"time": "2021-02-16 20:42:36.882211", "score": "0.7523", "loss": "1.2075", "code": " void visitJumpInsn(int opcode,  Label label) {  if (label.isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 154, "n_pass": [375, 24, 17]}
{"time": "2021-02-16 20:42:38.203389", "score": "0.7832", "loss": "0.9847", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved() && - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 152, "n_pass": [382, 25, 18]}
{"time": "2021-02-16 20:42:39.526295", "score": "0.7709", "loss": "1.1667", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code.length <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 150, "n_pass": [385, 26, 19]}
{"time": "2021-02-16 20:42:40.822788", "score": "0.7961", "loss": "1.0475", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code <_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 148, "n_pass": [388, 27, 20]}
{"time": "2021-02-16 20:42:42.130166", "score": "0.8041", "loss": "0.8962", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code_VALUE) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 146, "n_pass": [389, 28, 21]}
{"time": "2021-02-16 20:42:43.439473", "score": "0.851", "loss": "0.6912", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcode == GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 144, "n_pass": [390, 29, 22]}
{"time": "2021-02-16 20:42:44.751845", "score": "0.7802", "loss": "1.0504", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcode= GOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 142, "n_pass": [395, 30, 23]}
{"time": "2021-02-16 20:42:46.060354", "score": "0.8114", "loss": "0.8898", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code.putByte(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 140, "n_pass": [396, 31, 24]}
{"time": "2021-02-16 20:42:47.344495", "score": "0.814", "loss": "0.864", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO_W); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 138, "n_pass": [400, 32, 25]}
{"time": "2021-02-16 20:42:48.647904", "score": "0.8079", "loss": "0.8914", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } else { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 136, "n_pass": [402, 33, 26]}
{"time": "2021-02-16 20:42:49.931048", "score": "0.8029", "loss": "0.9626", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { nextInsn.markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 134, "n_pass": [405, 34, 27]}
{"time": "2021-02-16 20:42:51.220471", "score": "0.8021", "loss": "0.9533", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode <6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 132, "n_pass": [412, 35, 28]}
{"time": "2021-02-16 20:42:52.532035", "score": "0.8001", "loss": "0.943", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode6 ? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 130, "n_pass": [417, 36, 29]}
{"time": "2021-02-16 20:42:53.810719", "score": "0.8001", "loss": "0.943", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((opcode + 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 128, "n_pass": [418, 37, 30]}
{"time": "2021-02-16 20:42:55.093272", "score": "0.7965", "loss": "0.9781", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((+ 1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 126, "n_pass": [421, 38, 31]}
{"time": "2021-02-16 20:42:56.366803", "score": "0.798", "loss": "0.9663", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); code.putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 124, "n_pass": [422, 39, 32]}
{"time": "2021-02-16 20:42:57.692413", "score": "0.8125", "loss": "0.9043", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); ; } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 122, "n_pass": [432, 40, 33]}
{"time": "2021-02-16 20:42:58.971088", "score": "0.8125", "loss": "0.9043", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } label.put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 120, "n_pass": [435, 41, 34]}
{"time": "2021-02-16 20:43:00.259730", "score": "0.8275", "loss": "0.8455", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); ; } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 118, "n_pass": [438, 42, 35]}
{"time": "2021-02-16 20:43:01.554487", "score": "0.8275", "loss": "0.8455", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) { code(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 116, "n_pass": [441, 43, 36]}
{"time": "2021-02-16 20:43:04.483525", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO); } { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 114, "n_pass": [469, 45, 37]}
{"time": "2021-02-16 20:43:21.626827", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);} { if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 113, "n_pass": [645, 47, 38]}
{"time": "2021-02-16 20:43:22.923942", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{ if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 112, "n_pass": [646, 48, 39]}
{"time": "2021-02-16 20:43:24.216861", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if (nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 111, "n_pass": [648, 49, 40]}
{"time": "2021-02-16 20:43:25.511360", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn ) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 110, "n_pass": [650, 50, 41]}
{"time": "2021-02-16 20:43:26.784521", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn) { markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 109, "n_pass": [653, 51, 42]}
{"time": "2021-02-16 20:43:28.086580", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){ markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 108, "n_pass": [655, 52, 43]}
{"time": "2021-02-16 20:43:29.363261", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget(); }(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 107, "n_pass": [657, 53, 44]}
{"time": "2021-02-16 20:43:30.660970", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode? ((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 106, "n_pass": [662, 54, 45]}
{"time": "2021-02-16 20:43:31.951047", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1) ^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 105, "n_pass": [667, 55, 46]}
{"time": "2021-02-16 20:43:33.247776", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^ 1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 104, "n_pass": [672, 56, 47]}
{"time": "2021-02-16 20:43:34.523266", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1) - 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 103, "n_pass": [674, 57, 48]}
{"time": "2021-02-16 20:43:35.800206", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)- 1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 102, "n_pass": [677, 58, 49]}
{"time": "2021-02-16 20:43:37.109736", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1 : 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 101, "n_pass": [679, 59, 50]}
{"time": "2021-02-16 20:43:38.387211", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1: 1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 100, "n_pass": [681, 60, 51]}
{"time": "2021-02-16 20:43:39.695631", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1); putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 99, "n_pass": [683, 61, 52]}
{"time": "2021-02-16 20:43:40.975194", "score": "0.8264", "loss": "0.859", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);putShort(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 98, "n_pass": [687, 62, 53]}
{"time": "2021-02-16 20:43:42.279573", "score": "0.8003", "loss": "1.0405", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8); } put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 97, "n_pass": [688, 63, 54]}
{"time": "2021-02-16 20:43:43.580967", "score": "0.8003", "loss": "1.0405", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);} put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 96, "n_pass": [693, 64, 55]}
{"time": "2021-02-16 20:43:44.886260", "score": "0.8003", "loss": "1.0405", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}put(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 95, "n_pass": [695, 65, 56]}
{"time": "2021-02-16 20:43:46.160037", "score": "0.8002", "loss": "1.1253", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true); } cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 94, "n_pass": [696, 66, 57]}
{"time": "2021-02-16 20:43:47.437887", "score": "0.8002", "loss": "1.1253", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);} cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 93, "n_pass": [701, 67, 58]}
{"time": "2021-02-16 20:43:48.711352", "score": "0.8002", "loss": "1.1253", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis.updateCurrentBlockForJumpTarget(); }", "n_tokens": 92, "n_pass": [703, 68, 59]}
{"time": "2021-02-16 20:43:49.983621", "score": "0.7508", "loss": "1.619", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysisupdateCurrentBlockForJumpTarget(); }", "n_tokens": 91, "n_pass": [705, 69, 60]}
{"time": "2021-02-16 20:43:51.253912", "score": "0.8024", "loss": "1.2326", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis(); }", "n_tokens": 90, "n_pass": [706, 70, 61]}
{"time": "2021-02-16 20:43:52.547139", "score": "0.8024", "loss": "1.2326", "code": " void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 89, "n_pass": [710, 71, 62]}
{"time": "2021-02-16 20:43:53.827750", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,  Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 88, "n_pass": [712, 72, 63]}
{"time": "2021-02-16 20:43:55.812650", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode, Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 87, "n_pass": [721, 73, 64]}
{"time": "2021-02-16 20:43:57.085384", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label) {  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 86, "n_pass": [722, 74, 65]}
{"time": "2021-02-16 20:43:58.393131", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){  if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 85, "n_pass": [727, 75, 66]}
{"time": "2021-02-16 20:43:59.668869", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){ if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 84, "n_pass": [729, 76, 67]}
{"time": "2021-02-16 20:44:00.957508", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if (isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 83, "n_pass": [730, 77, 68]}
{"time": "2021-02-16 20:44:02.233915", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()  - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 82, "n_pass": [732, 78, 69]}
{"time": "2021-02-16 20:44:03.507716", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved() - code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 81, "n_pass": [737, 79, 70]}
{"time": "2021-02-16 20:44:04.797843", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()- code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 80, "n_pass": [738, 80, 71]}
{"time": "2021-02-16 20:44:06.073595", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code) { if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 79, "n_pass": [740, 81, 72]}
{"time": "2021-02-16 20:44:07.368493", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code){ if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 78, "n_pass": [743, 82, 73]}
{"time": "2021-02-16 20:44:08.640469", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code){if (opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 77, "n_pass": [745, 83, 74]}
{"time": "2021-02-16 20:44:09.913820", "score": "0.8024", "loss": "1.2326", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code){if(opcodeGOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 76, "n_pass": [747, 84, 75]}
{"time": "2021-02-16 20:44:11.211214", "score": "0.7861", "loss": "1.3838", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code){if(GOTO) {(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 75, "n_pass": [749, 85, 76]}
{"time": "2021-02-16 20:44:12.504614", "score": "0.7861", "loss": "1.3838", "code": "void visitJumpInsn(int opcode,Label label){if(isResolved()-code){if(GOTO){(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}", "n_tokens": 74, "n_pass": [752, 86, 77]}

Minimal simplified code:
void visitJumpInsn(int opcode,Label label){if(isResolved()-code){if(GOTO){(GOTO);}{if(nextInsn){markAsTarget();}(opcode?((1)^1)-1:1);(8);}(true);}cfgAnalysis();}

