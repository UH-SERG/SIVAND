
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/vladmihalcea__high-performance-java-persistence/core/src/test/java/com/vladmihalcea/book/hpjp/hibernate/association/BidirectionalManyAsOneToManyExtraColumnsTest_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag = (Tag) o; return Objects.equals(name, tag.name); }
predict, score, loss = equals, 0.9976657629013062, 0.0027634408324956894

Trace of simplified code(s):
{"time": "2021-02-13 19:27:30.161653", "score": "0.9977", "loss": "0.0028", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag = (Tag) o; return Objects.equals(name, tag.name); }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:27:31.507197", "score": "0.9965", "loss": "0.0043", "code": "@Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 81, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 19:27:32.844122", "score": "0.9887", "loss": "0.0155", "code": "boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 76, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 19:27:34.172461", "score": "0.9966", "loss": "0.0047", "code": "boolean equals(Object o) { if (this == o) return true; if (o ==getClass() != o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 70, "n_pass": [56, 4, 4]}
{"time": "2021-02-13 19:27:35.498159", "score": "0.9908", "loss": "0.0118", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false; Tag tag =equals(name, tag.name); }", "n_tokens": 64, "n_pass": [57, 5, 5]}
{"time": "2021-02-13 19:27:36.818775", "score": "0.9867", "loss": "0.0182", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(name, tag.name); }", "n_tokens": 58, "n_pass": [60, 6, 6]}
{"time": "2021-02-13 19:27:38.172795", "score": "0.99", "loss": "0.0133", "code": "boolean equals(Object o) { if (this == o) return true; if (o == o.getClass()) return false;equals(name.name); }", "n_tokens": 55, "n_pass": [92, 7, 7]}
{"time": "2021-02-13 19:27:41.146884", "score": "0.9899", "loss": "0.0139", "code": "boolean equals(Object o) { if (this == o) ; if (o == o.getClass()) return false;equals(name.name); }", "n_tokens": 52, "n_pass": [103, 9, 8]}
{"time": "2021-02-13 19:27:42.458268", "score": "0.9922", "loss": "0.0104", "code": "boolean equals(Object o) { if (this == o) ; if (o ==getClass()) return false;equals(name.name); }", "n_tokens": 49, "n_pass": [107, 10, 9]}
{"time": "2021-02-13 19:27:43.773122", "score": "0.4707", "loss": "1.1827", "code": "boolean equals(Object o) { if (this == o) ; if (o ==getClass()) returnequals(name.name); }", "n_tokens": 46, "n_pass": [110, 11, 10]}
{"time": "2021-02-13 19:27:46.757388", "score": "0.6039", "loss": "0.8267", "code": "boolean equals(Object o) {(this == o) ; if (o ==getClass()) returnequals(name.name); }", "n_tokens": 43, "n_pass": [118, 13, 11]}
{"time": "2021-02-13 19:27:53.067269", "score": "0.6039", "loss": "0.8267", "code": "boolean equals(Object o){(this == o) ; if (o ==getClass()) returnequals(name.name); }", "n_tokens": 42, "n_pass": [164, 16, 12]}
{"time": "2021-02-13 19:27:54.384612", "score": "0.6039", "loss": "0.8267", "code": "boolean equals(Object o){(this== o) ; if (o ==getClass()) returnequals(name.name); }", "n_tokens": 41, "n_pass": [168, 17, 13]}
{"time": "2021-02-13 19:27:56.455895", "score": "0.6039", "loss": "0.8267", "code": "boolean equals(Object o){(this==o) ; if (o ==getClass()) returnequals(name.name); }", "n_tokens": 40, "n_pass": [171, 18, 14]}
{"time": "2021-02-13 19:27:57.780443", "score": "0.3568", "loss": "1.4255", "code": "boolean equals(Object o){(this==o) ; if (o=getClass()) returnequals(name.name); }", "n_tokens": 38, "n_pass": [177, 19, 15]}
{"time": "2021-02-13 19:28:01.743625", "score": "0.8162", "loss": "0.2991", "code": "boolean equals(Object o){(this==o) ; if (o=getClass()) (name.name); }", "n_tokens": 36, "n_pass": [181, 22, 16]}
{"time": "2021-02-13 19:28:03.043221", "score": "0.6011", "loss": "0.7432", "code": "boolean equals(Object o){(this==o) ; if (o=getClass()) (name); }", "n_tokens": 34, "n_pass": [183, 23, 17]}
{"time": "2021-02-13 19:28:05.810837", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o) ; if (o()) (name); }", "n_tokens": 32, "n_pass": [204, 24, 18]}
{"time": "2021-02-13 19:28:12.196494", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o) ; if (o())(name); }", "n_tokens": 31, "n_pass": [246, 26, 19]}
{"time": "2021-02-13 19:28:13.523784", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o) ; if (o())(name);}", "n_tokens": 30, "n_pass": [251, 27, 20]}
{"time": "2021-02-13 19:28:16.298847", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o); if (o())(name);}", "n_tokens": 29, "n_pass": [268, 28, 21]}
{"time": "2021-02-13 19:28:17.598291", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o);if (o())(name);}", "n_tokens": 28, "n_pass": [270, 29, 22]}
{"time": "2021-02-13 19:28:18.896152", "score": "0.4411", "loss": "1.0543", "code": "boolean equals(Object o){(this==o);if(o())(name);}", "n_tokens": 27, "n_pass": [272, 30, 23]}

Minimal simplified code:
boolean equals(Object o){(this==o);if(o())(name);}

