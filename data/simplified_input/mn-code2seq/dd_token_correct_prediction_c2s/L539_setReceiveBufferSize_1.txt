
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.netty/src/main/java/org/apache/mina/transport/socket/DefaultSocketSessionConfigEx_setReceiveBufferSize.java
method_name = setReceiveBufferSize
method_body = @Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (!parent.isActive() && parent instanceof SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }
predict, score, loss = setReceiveBufferSize, 0.9826450347900391, 0.09486260265111923

Trace of simplified code(s):
{"time": "2021-02-13 17:37:00.297271", "score": "0.9826", "loss": "0.0949", "code": "@Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (!parent.isActive() && parent instanceof SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:37:01.986764", "score": "0.9894", "loss": "0.0578", "code": "@Override public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 43, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 17:37:04.031248", "score": "0.9955", "loss": "0.0246", "code": "public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize = receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 40, "n_pass": [41, 3, 3]}
{"time": "2021-02-13 17:37:07.016139", "score": "0.9614", "loss": "0.2639", "code": "public void setReceiveBufferSize(int receiveBufferSize) { this.receiveBufferSize; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 36, "n_pass": [47, 5, 4]}
{"time": "2021-02-13 17:37:10.000389", "score": "0.9319", "loss": "0.4068", "code": "public void setReceiveBufferSize(int receiveBufferSize) {; if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 32, "n_pass": [57, 7, 5]}
{"time": "2021-02-13 17:37:13.979504", "score": "0.9319", "loss": "0.4068", "code": "public void setReceiveBufferSize(int receiveBufferSize) {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 30, "n_pass": [85, 9, 6]}
{"time": "2021-02-13 17:37:16.634721", "score": "0.9319", "loss": "0.4068", "code": " void setReceiveBufferSize(int receiveBufferSize) {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 29, "n_pass": [94, 11, 7]}
{"time": "2021-02-13 17:37:17.947775", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize) {if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 28, "n_pass": [95, 12, 8]}
{"time": "2021-02-13 17:37:24.637854", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if (SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 27, "n_pass": [143, 14, 9]}
{"time": "2021-02-13 17:37:25.955938", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor) { defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 26, "n_pass": [145, 15, 10]}
{"time": "2021-02-13 17:37:27.248779", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){ defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 25, "n_pass": [149, 16, 11]}
{"time": "2021-02-13 17:37:28.542341", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize = receiveBufferSize; } }", "n_tokens": 24, "n_pass": [151, 17, 12]}
{"time": "2021-02-13 17:37:29.833765", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize= receiveBufferSize; } }", "n_tokens": 23, "n_pass": [153, 18, 13]}
{"time": "2021-02-13 17:37:32.447221", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize; } }", "n_tokens": 22, "n_pass": [155, 20, 14]}
{"time": "2021-02-13 17:37:33.753576", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;} }", "n_tokens": 21, "n_pass": [158, 21, 15]}
{"time": "2021-02-13 17:37:35.069409", "score": "0.9319", "loss": "0.4068", "code": "void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;}}", "n_tokens": 20, "n_pass": [160, 22, 16]}

Minimal simplified code:
void setReceiveBufferSize(int receiveBufferSize){if(SocketAcceptor){defaultReceiveBufferSize=receiveBufferSize;}}

