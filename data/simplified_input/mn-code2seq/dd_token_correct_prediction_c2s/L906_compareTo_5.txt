
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/rwiki/rwiki-util/jrcs/src/completejava/org/apache/commons/jrcs/rcs/Version_compareTo.java
method_name = compareTo
method_body = public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size() != otherVer.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }
predict, score, loss = compareTo, 0.9043945074081421, 0.22717422246932983

Trace of simplified code(s):
{"time": "2021-02-14 01:53:40.080000", "score": "0.9044", "loss": "0.2272", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size() != otherVer.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 141, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 01:53:41.836773", "score": "0.9446", "loss": "0.1358", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { return this.size() - otherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 132, "n_pass": [54, 2, 2]}
{"time": "2021-02-14 01:53:43.212560", "score": "0.9375", "loss": "0.1615", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } else { return -compareVersions(otherVer); } } }", "n_tokens": 123, "n_pass": [55, 3, 3]}
{"time": "2021-02-14 01:53:44.611186", "score": "0.9464", "loss": "0.146", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size();  return -compareVersions(otherVer); } } }", "n_tokens": 118, "n_pass": [100, 4, 4]}
{"time": "2021-02-14 01:53:45.983024", "score": "0.8195", "loss": "0.567", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); (otherVer); } } }", "n_tokens": 113, "n_pass": [101, 5, 5]}
{"time": "2021-02-14 01:53:47.383127", "score": "0.8292", "loss": "0.4751", "code": "public int compareTo(Object other) { if (other == this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 108, "n_pass": [102, 6, 6]}
{"time": "2021-02-14 01:53:49.129658", "score": "0.8287", "loss": "0.727", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(other instanceof Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 104, "n_pass": [108, 7, 7]}
{"time": "2021-02-14 01:53:50.488280", "score": "0.8133", "loss": "0.8585", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { throw new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 100, "n_pass": [114, 8, 8]}
{"time": "2021-02-14 01:53:52.627953", "score": "0.694", "loss": "1.459", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { new IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 98, "n_pass": [187, 9, 9]}
{"time": "2021-02-14 01:53:54.011532", "score": "0.7015", "loss": "1.5014", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(other.toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 96, "n_pass": [188, 10, 10]}
{"time": "2021-02-14 01:53:55.357000", "score": "0.743", "loss": "1.2349", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } else { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 94, "n_pass": [190, 11, 11]}
{"time": "2021-02-14 01:53:56.736486", "score": "0.7675", "loss": "1.1937", "code": "public int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 92, "n_pass": [195, 12, 12]}
{"time": "2021-02-14 01:54:00.930183", "score": "0.7675", "loss": "1.1937", "code": "int compareTo(Object other) { if ( this) { return 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 90, "n_pass": [212, 15, 13]}
{"time": "2021-02-14 01:54:02.700421", "score": "0.6929", "loss": "1.621", "code": "int compareTo(Object other) { if ( this) { 0; } else if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 88, "n_pass": [223, 16, 14]}
{"time": "2021-02-14 01:54:04.077442", "score": "0.6481", "loss": "1.936", "code": "int compareTo(Object other) { if ( this) {  } else if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 86, "n_pass": [224, 17, 15]}
{"time": "2021-02-14 01:54:05.421756", "score": "0.625", "loss": "2.0622", "code": "int compareTo(Object other) { if ( this) {  } if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 84, "n_pass": [226, 18, 16]}
{"time": "2021-02-14 01:54:18.150610", "score": "0.625", "loss": "2.0622", "code": "int compareTo(Object other) { if ( this) {  }if (!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 83, "n_pass": [341, 21, 17]}
{"time": "2021-02-14 01:54:19.482811", "score": "0.625", "loss": "2.0622", "code": "int compareTo(Object other) { if ( this) {  }if(!(Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 82, "n_pass": [342, 22, 18]}
{"time": "2021-02-14 01:54:20.830247", "score": "0.6196", "loss": "2.145", "code": "int compareTo(Object other) { if ( this) {  }if((Version)) { IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 81, "n_pass": [344, 23, 19]}
{"time": "2021-02-14 01:54:22.167438", "score": "0.6196", "loss": "2.145", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){ IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 80, "n_pass": [349, 24, 20]}
{"time": "2021-02-14 01:54:23.497509", "score": "0.6196", "loss": "2.145", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){IllegalArgumentException(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 79, "n_pass": [351, 25, 21]}
{"time": "2021-02-14 01:54:24.831053", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString()); } { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 78, "n_pass": [352, 26, 22]}
{"time": "2021-02-14 01:54:26.151945", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());} { Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 77, "n_pass": [359, 27, 23]}
{"time": "2021-02-14 01:54:27.483190", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{ Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 76, "n_pass": [361, 28, 24]}
{"time": "2021-02-14 01:54:28.912672", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer = (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 75, "n_pass": [363, 29, 25]}
{"time": "2021-02-14 01:54:34.405221", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer= (Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 74, "n_pass": [367, 33, 26]}
{"time": "2021-02-14 01:54:35.748786", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version) other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 73, "n_pass": [369, 34, 27]}
{"time": "2021-02-14 01:54:37.096917", "score": "0.6648", "loss": "1.7618", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version)other; if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 72, "n_pass": [373, 35, 28]}
{"time": "2021-02-14 01:54:38.444480", "score": "0.6275", "loss": "2.2822", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version); if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 71, "n_pass": [374, 36, 29]}
{"time": "2021-02-14 01:54:39.810486", "score": "0.6275", "loss": "2.2822", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if (this.size()) { returnotherVer.size(); } } }", "n_tokens": 70, "n_pass": [376, 37, 30]}
{"time": "2021-02-14 01:54:41.171792", "score": "0.6275", "loss": "2.2822", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) { returnotherVer.size(); } } }", "n_tokens": 69, "n_pass": [378, 38, 31]}
{"time": "2021-02-14 01:54:43.888784", "score": "0.6447", "loss": "2.1454", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {otherVer.size(); } } }", "n_tokens": 67, "n_pass": [387, 40, 32]}
{"time": "2021-02-14 01:54:45.220289", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other) { if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 65, "n_pass": [388, 41, 33]}
{"time": "2021-02-14 01:54:47.319172", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){ if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 64, "n_pass": [402, 42, 34]}
{"time": "2021-02-14 01:54:48.699679", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if ( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 63, "n_pass": [404, 43, 35]}
{"time": "2021-02-14 01:54:50.022575", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if( this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 62, "n_pass": [406, 44, 36]}
{"time": "2021-02-14 01:54:51.382044", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this) {  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 61, "n_pass": [408, 45, 37]}
{"time": "2021-02-14 01:54:52.718280", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){  }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 60, "n_pass": [411, 46, 38]}
{"time": "2021-02-14 01:54:54.062772", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){ }if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 59, "n_pass": [413, 47, 39]}
{"time": "2021-02-14 01:54:55.441652", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()) {size(); } } }", "n_tokens": 58, "n_pass": [414, 48, 40]}
{"time": "2021-02-14 01:55:04.724743", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()){size(); } } }", "n_tokens": 57, "n_pass": [479, 53, 41]}
{"time": "2021-02-14 01:55:06.050609", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()){size();} } }", "n_tokens": 56, "n_pass": [484, 54, 42]}
{"time": "2021-02-14 01:55:07.500445", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()){size();}} }", "n_tokens": 55, "n_pass": [486, 55, 43]}
{"time": "2021-02-14 01:55:08.837317", "score": "0.6846", "loss": "1.7745", "code": "int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()){size();}}}", "n_tokens": 54, "n_pass": [488, 56, 44]}

Minimal simplified code:
int compareTo(Object other){if(this){}if((Version)){(toString());}{Version otherVer=(Version);if(this.size()){size();}}}

