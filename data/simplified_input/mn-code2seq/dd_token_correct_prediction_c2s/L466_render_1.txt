
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mbrlabs__Mundus/commons/src/main/com/mbrlabs/mundus/commons/scene3d/GameObject_render.java
method_name = render
method_body = public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }
predict, score, loss = render, 0.9959858059883118, 0.03676636517047882

Trace of simplified code(s):
{"time": "2021-02-13 16:22:45.725718", "score": "0.996", "loss": "0.0368", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildren() != null) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:22:47.441139", "score": "0.9927", "loss": "0.0711", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { node.render(delta); } } } }", "n_tokens": 87, "n_pass": [53, 2, 2]}
{"time": "2021-02-13 16:22:48.795969", "score": "0.981", "loss": "0.1231", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { (delta); } } } }", "n_tokens": 84, "n_pass": [105, 3, 3]}
{"time": "2021-02-13 16:22:50.126332", "score": "0.9764", "loss": "0.1345", "code": "public void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 81, "n_pass": [106, 4, 4]}
{"time": "2021-02-13 16:22:51.451550", "score": "0.9764", "loss": "0.1345", "code": "void render(float delta) { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 79, "n_pass": [110, 5, 5]}
{"time": "2021-02-13 16:22:53.156992", "score": "0.701", "loss": "0.8989", "code": "void render() { if (active) { for (Component component : this.components) { component.render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 76, "n_pass": [113, 6, 6]}
{"time": "2021-02-13 16:22:54.492867", "score": "0.9807", "loss": "0.2044", "code": "void render() { if (active) { for (Component component : this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 73, "n_pass": [123, 7, 7]}
{"time": "2021-02-13 16:23:00.240333", "score": "0.9807", "loss": "0.2044", "code": "void render() { if (active) { for (Component component: this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 72, "n_pass": [199, 8, 8]}
{"time": "2021-02-13 16:23:01.572789", "score": "0.9807", "loss": "0.2044", "code": "void render() { if (active) { for (Component component:this.components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 71, "n_pass": [201, 9, 9]}
{"time": "2021-02-13 16:23:02.923650", "score": "0.9739", "loss": "0.1933", "code": "void render() { if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { ; } } } }", "n_tokens": 70, "n_pass": [203, 10, 10]}
{"time": "2021-02-13 16:23:04.265994", "score": "0.9739", "loss": "0.1933", "code": "void render() { if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 68, "n_pass": [222, 11, 11]}
{"time": "2021-02-13 16:23:06.323944", "score": "0.9739", "loss": "0.1933", "code": "void render(){ if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 67, "n_pass": [232, 12, 12]}
{"time": "2021-02-13 16:23:07.644077", "score": "0.9739", "loss": "0.1933", "code": "void render(){if (active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 66, "n_pass": [234, 13, 13]}
{"time": "2021-02-13 16:23:08.971653", "score": "0.9739", "loss": "0.1933", "code": "void render(){if(active) { for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 65, "n_pass": [236, 14, 14]}
{"time": "2021-02-13 16:23:10.287700", "score": "0.9739", "loss": "0.1933", "code": "void render(){if(active){ for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 64, "n_pass": [240, 15, 15]}
{"time": "2021-02-13 16:23:11.621054", "score": "0.9739", "loss": "0.1933", "code": "void render(){if(active){for (Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 63, "n_pass": [242, 16, 16]}
{"time": "2021-02-13 16:23:12.937374", "score": "0.9739", "loss": "0.1933", "code": "void render(){if(active){for(Component component:thiscomponents) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 62, "n_pass": [244, 17, 17]}
{"time": "2021-02-13 16:23:14.273043", "score": "0.9759", "loss": "0.1767", "code": "void render(){if(active){for(Component component:components) {render(delta); } if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 61, "n_pass": [250, 18, 18]}
{"time": "2021-02-13 16:23:21.685203", "score": "0.9759", "loss": "0.1767", "code": "void render(){if(active){for(Component component:components) {render(delta);} if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 60, "n_pass": [334, 19, 19]}
{"time": "2021-02-13 16:23:23.012225", "score": "0.9759", "loss": "0.1767", "code": "void render(){if(active){for(Component component:components) {render(delta);}if (getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 59, "n_pass": [336, 20, 20]}
{"time": "2021-02-13 16:23:24.330973", "score": "0.9759", "loss": "0.1767", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(getChildrennull) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 58, "n_pass": [338, 21, 21]}
{"time": "2021-02-13 16:23:25.657516", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null) { for (GameObject node : getChildren()) { } } } }", "n_tokens": 57, "n_pass": [340, 22, 22]}
{"time": "2021-02-13 16:23:27.003857", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){ for (GameObject node : getChildren()) { } } } }", "n_tokens": 56, "n_pass": [343, 23, 23]}
{"time": "2021-02-13 16:23:28.329610", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for (GameObject node : getChildren()) { } } } }", "n_tokens": 55, "n_pass": [345, 24, 24]}
{"time": "2021-02-13 16:23:29.656478", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node : getChildren()) { } } } }", "n_tokens": 54, "n_pass": [347, 25, 25]}
{"time": "2021-02-13 16:23:30.984708", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node: getChildren()) { } } } }", "n_tokens": 53, "n_pass": [352, 26, 26]}
{"time": "2021-02-13 16:23:32.330543", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()) { } } } }", "n_tokens": 52, "n_pass": [354, 27, 27]}
{"time": "2021-02-13 16:23:33.722953", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){ } } } }", "n_tokens": 51, "n_pass": [359, 28, 28]}
{"time": "2021-02-13 16:23:35.050531", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){} } } }", "n_tokens": 50, "n_pass": [361, 29, 29]}
{"time": "2021-02-13 16:23:36.380260", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}} } }", "n_tokens": 49, "n_pass": [363, 30, 30]}
{"time": "2021-02-13 16:23:37.705541", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}}} }", "n_tokens": 48, "n_pass": [365, 31, 31]}
{"time": "2021-02-13 16:23:39.030109", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components) {render(delta);}if(null){for(GameObject node:getChildren()){}}}}", "n_tokens": 47, "n_pass": [367, 32, 32]}
{"time": "2021-02-13 16:23:41.114760", "score": "0.9869", "loss": "0.1154", "code": "void render(){if(active){for(Component component:components){render(delta);}if(null){for(GameObject node:getChildren()){}}}}", "n_tokens": 46, "n_pass": [388, 33, 33]}

Minimal simplified code:
void render(){if(active){for(Component component:components){render(delta);}if(null){for(GameObject node:getChildren()){}}}}

