
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jce/provider/JCEECPrivateKey_toString.java
method_name = toString
method_body = public String toString() { StringBuffer buf = new StringBuffer(); String nl = Strings.lineSeparator(); buf.append("EC Private Key").append(nl); buf.append(" S: ").append(this.d.toString(16)).append(nl); return buf.toString(); }
predict, score, loss = toString, 0.8373675346374512, 0.5471765398979187

Trace of simplified code(s):
{"time": "2021-02-13 19:08:12.946400", "score": "0.8374", "loss": "0.5472", "code": "public String toString() { StringBuffer buf = new StringBuffer(); String nl = Strings.lineSeparator(); buf.append(\"EC Private Key\").append(nl); buf.append(\" S: \").append(this.d.toString(16)).append(nl); return buf.toString(); }", "n_tokens": 96, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:08:14.306167", "score": "0.9705", "loss": "0.1396", "code": "public String toString() { StringBuffer buf = new StringBuffer(); String.append(nl); buf.append(\" S: \").append(this.d.toString(16)).append(nl); return buf.toString(); }", "n_tokens": 72, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 19:08:15.653649", "score": "0.9632", "loss": "0.1557", "code": "public String toString() { StringBuffer .append(nl); buf.append(\" S: \").append(this.d.toString(16)).append(nl); return buf.toString(); }", "n_tokens": 60, "n_pass": [23, 3, 3]}
{"time": "2021-02-13 19:08:16.978667", "score": "0.9772", "loss": "0.094", "code": "public String toString() { StringBuffer .append(nl); buf.append(\" S: \").append(this.d).append(nl); return buf.toString(); }", "n_tokens": 54, "n_pass": [42, 4, 4]}
{"time": "2021-02-13 19:08:18.310756", "score": "0.9622", "loss": "0.1246", "code": "public String toString() { StringBuffer .append(nl); buf.append(\" S: \").append(this.d).append; return buf.toString(); }", "n_tokens": 51, "n_pass": [70, 5, 5]}
{"time": "2021-02-13 19:08:19.652946", "score": "0.9394", "loss": "0.2604", "code": "public String toString() { StringBuffer .append(nl); buf.append(\" S: \").append(this.d).append; returntoString(); }", "n_tokens": 48, "n_pass": [72, 6, 6]}
{"time": "2021-02-13 19:08:20.967068", "score": "0.9353", "loss": "0.1942", "code": "public String toString() { StringBuffer .append(nl); buf.append(\" S: \").append(this.d).append; return; }", "n_tokens": 45, "n_pass": [73, 7, 7]}
{"time": "2021-02-13 19:08:22.660679", "score": "0.9322", "loss": "0.2121", "code": "public String toString() { StringBuffer .append(nl);append(\" S: \").append(this.d).append; return; }", "n_tokens": 42, "n_pass": [81, 8, 8]}
{"time": "2021-02-13 19:08:23.984628", "score": "0.9118", "loss": "0.2881", "code": "public String toString() { StringBuffer .append(nl);append(\" \").append(this.d).append; return; }", "n_tokens": 39, "n_pass": [83, 9, 9]}
{"time": "2021-02-13 19:08:25.287989", "score": "0.7315", "loss": "1.208", "code": "public String toString() { StringBuffer .append(nl);append(\" \").append().append; return; }", "n_tokens": 36, "n_pass": [86, 10, 10]}
{"time": "2021-02-13 19:08:26.600025", "score": "0.7315", "loss": "1.208", "code": "public String toString() { StringBuffer .append(nl);append(\" \").append().append; }", "n_tokens": 33, "n_pass": [88, 11, 11]}
{"time": "2021-02-13 19:08:29.607369", "score": "0.7315", "loss": "1.208", "code": " String toString() { StringBuffer .append(nl);append(\" \").append().append; }", "n_tokens": 32, "n_pass": [124, 12, 12]}
{"time": "2021-02-13 19:08:30.912132", "score": "0.7315", "loss": "1.208", "code": "String toString() { StringBuffer .append(nl);append(\" \").append().append; }", "n_tokens": 31, "n_pass": [125, 13, 13]}
{"time": "2021-02-13 19:08:32.922820", "score": "0.7315", "loss": "1.208", "code": "String toString(){ StringBuffer .append(nl);append(\" \").append().append; }", "n_tokens": 30, "n_pass": [130, 14, 14]}
{"time": "2021-02-13 19:08:34.227445", "score": "0.7315", "loss": "1.208", "code": "String toString(){StringBuffer .append(nl);append(\" \").append().append; }", "n_tokens": 29, "n_pass": [132, 15, 15]}
{"time": "2021-02-13 19:08:40.860608", "score": "0.7158", "loss": "1.2355", "code": "String toString(){StringBuffer .append(nl);(\" \").append().append; }", "n_tokens": 28, "n_pass": [178, 18, 16]}
{"time": "2021-02-13 19:08:42.165501", "score": "0.7285", "loss": "1.2394", "code": "String toString(){StringBuffer .append(nl);(\"\").append().append; }", "n_tokens": 27, "n_pass": [181, 19, 17]}
{"time": "2021-02-13 19:08:43.482296", "score": "0.7285", "loss": "1.2394", "code": "String toString(){StringBuffer .append(nl);(\"\").append().append;}", "n_tokens": 26, "n_pass": [191, 20, 18]}
{"time": "2021-02-13 19:08:45.844731", "score": "0.7285", "loss": "1.2394", "code": "String toString(){StringBuffer.append(nl);(\"\").append().append;}", "n_tokens": 25, "n_pass": [200, 21, 19]}

Minimal simplified code:
String toString(){StringBuffer.append(nl);("").append().append;}

