
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/singwhatiwanna__android-art-res/Chapter_2/src/com/ryg/chapter_2/aidl/BookManagerService_onTransact.java
method_name = onTransact
method_body = public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission("com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE"); Log.d(TAG, "check=" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, "onTransact: " + packageName); if (!packageName.startsWith("com.ryg")) { return false; } return super.onTransact(code, data, reply, flags); }
predict, score, loss = onTransact, 0.9987349510192871, 0.0028219553641974926

Trace of simplified code(s):
{"time": "2021-02-13 03:50:39.842749", "score": "0.9991", "loss": "0.0025", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null && packages.length > 0) { packageName = packages[0]; } Log.d(TAG, \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 231, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 03:50:41.247675", "score": "0.9989", "loss": "0.0044", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName); if (!packageName.startsWith(\"com.ryg\")) { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 202, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 03:50:42.620833", "score": "0.9814", "loss": "0.0593", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com.ryg.chapter_2.permission.ACCESS_BOOK_SERVICE\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 187, "n_pass": [47, 3, 3]}
{"time": "2021-02-13 03:50:43.993404", "score": "0.9959", "loss": "0.0117", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\"); Log.d(TAG, \"check=\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 173, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 03:50:45.349384", "score": "0.9987", "loss": "0.0035", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; String[] packages = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 159, "n_pass": [54, 5, 5]}
{"time": "2021-02-13 03:50:46.745190", "score": "0.9988", "loss": "0.0033", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = null; StringgetPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 152, "n_pass": [94, 6, 6]}
{"time": "2021-02-13 03:50:48.117883", "score": "0.9987", "loss": "0.0038", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackageManager().getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 148, "n_pass": [158, 7, 7]}
{"time": "2021-02-13 03:50:49.488309", "score": "0.9991", "loss": "0.0022", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packages != null &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 144, "n_pass": [159, 8, 8]}
{"time": "2021-02-13 03:50:50.854542", "score": "0.9989", "loss": "0.0028", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  { return false; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 140, "n_pass": [163, 9, 9]}
{"time": "2021-02-13 03:50:52.226557", "score": "0.9986", "loss": "0.0032", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } return super.onTransact(code, data, reply, flags); }", "n_tokens": 136, "n_pass": [169, 10, 10]}
{"time": "2021-02-13 03:50:53.593041", "score": "0.975", "loss": "0.1367", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code, data, reply, flags); }", "n_tokens": 132, "n_pass": [171, 11, 11]}
{"time": "2021-02-13 03:50:54.934867", "score": "0.9731", "loss": "0.148", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check == PackageManager.PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 128, "n_pass": [173, 12, 12]}
{"time": "2021-02-13 03:50:56.665466", "score": "0.9497", "loss": "0.2436", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =PERMISSION_DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 124, "n_pass": [194, 13, 13]}
{"time": "2021-02-13 03:51:02.416534", "score": "0.9603", "loss": "0.1818", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) { return false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 122, "n_pass": [300, 14, 14]}
{"time": "2021-02-13 03:51:03.760854", "score": "0.9479", "loss": "0.2195", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) { false; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 120, "n_pass": [302, 15, 15]}
{"time": "2021-02-13 03:51:05.095467", "score": "0.9479", "loss": "0.2131", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {; } String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 118, "n_pass": [303, 16, 16]}
{"time": "2021-02-13 03:51:06.441346", "score": "0.9479", "loss": "0.2131", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} String packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 116, "n_pass": [304, 17, 17]}
{"time": "2021-02-13 03:51:07.780457", "score": "0.9223", "loss": "0.3108", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); if (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 114, "n_pass": [306, 18, 18]}
{"time": "2021-02-13 03:51:09.145993", "score": "0.9873", "loss": "0.0675", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packagesnull &&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 112, "n_pass": [313, 19, 19]}
{"time": "2021-02-13 03:51:10.481237", "score": "0.9874", "loss": "0.0615", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&  \"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 110, "n_pass": [315, 20, 20]}
{"time": "2021-02-13 03:51:11.842602", "score": "0.9874", "loss": "0.0615", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact: \" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 108, "n_pass": [317, 21, 21]}
{"time": "2021-02-13 03:51:13.178832", "score": "0.9874", "loss": "0.0615", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {; } onTransact(code,reply, flags); }", "n_tokens": 106, "n_pass": [319, 22, 22]}
{"time": "2021-02-13 03:51:14.524534", "score": "0.9874", "loss": "0.0615", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(code,reply, flags); }", "n_tokens": 104, "n_pass": [325, 23, 23]}
{"time": "2021-02-13 03:51:15.863397", "score": "0.9863", "loss": "0.0716", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(reply, flags); }", "n_tokens": 102, "n_pass": [328, 24, 24]}
{"time": "2021-02-13 03:51:17.199032", "score": "0.9912", "loss": "0.0606", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact( flags); }", "n_tokens": 100, "n_pass": [329, 25, 25]}
{"time": "2021-02-13 03:51:18.549458", "score": "0.989", "loss": "0.0756", "code": "public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 98, "n_pass": [330, 26, 26]}
{"time": "2021-02-13 03:51:19.894433", "score": "0.989", "loss": "0.0756", "code": " boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 97, "n_pass": [333, 27, 27]}
{"time": "2021-02-13 03:51:21.264769", "score": "0.989", "loss": "0.0756", "code": "boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 96, "n_pass": [334, 28, 28]}
{"time": "2021-02-13 03:51:23.346770", "score": "0.989", "loss": "0.0756", "code": "boolean onTransact(int code,Parcel data, Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 95, "n_pass": [343, 29, 29]}
{"time": "2021-02-13 03:51:24.697134", "score": "0.989", "loss": "0.0756", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { int check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 94, "n_pass": [348, 30, 30]}
{"time": "2021-02-13 03:51:26.032007", "score": "0.9963", "loss": "0.0334", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (check =DENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 92, "n_pass": [357, 31, 31]}
{"time": "2021-02-13 03:51:27.372933", "score": "0.996", "loss": "0.041", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {} packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 90, "n_pass": [368, 32, 32]}
{"time": "2021-02-13 03:51:38.853811", "score": "0.996", "loss": "0.041", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName = getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 89, "n_pass": [499, 33, 33]}
{"time": "2021-02-13 03:51:40.192912", "score": "0.996", "loss": "0.041", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName= getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 88, "n_pass": [501, 34, 34]}
{"time": "2021-02-13 03:51:41.555061", "score": "0.996", "loss": "0.041", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=getPackagesForUid(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 87, "n_pass": [503, 35, 35]}
{"time": "2021-02-13 03:51:42.907227", "score": "0.9971", "loss": "0.0282", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid()); (packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 86, "n_pass": [504, 36, 36]}
{"time": "2021-02-13 03:51:44.241604", "score": "0.9971", "loss": "0.0282", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 85, "n_pass": [511, 37, 37]}
{"time": "2021-02-13 03:51:45.570475", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\" + packageName);  {} onTransact(); }", "n_tokens": 84, "n_pass": [514, 38, 38]}
{"time": "2021-02-13 03:51:48.262567", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+ packageName);  {} onTransact(); }", "n_tokens": 83, "n_pass": [519, 40, 39]}
{"time": "2021-02-13 03:51:49.615560", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);  {} onTransact(); }", "n_tokens": 82, "n_pass": [521, 41, 40]}
{"time": "2021-02-13 03:51:50.962794", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName); {} onTransact(); }", "n_tokens": 81, "n_pass": [525, 42, 41]}
{"time": "2021-02-13 03:51:52.290114", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{} onTransact(); }", "n_tokens": 80, "n_pass": [526, 43, 42]}
{"time": "2021-02-13 03:51:53.618844", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact(); }", "n_tokens": 79, "n_pass": [529, 44, 43]}
{"time": "2021-02-13 03:51:54.960003", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply, int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 78, "n_pass": [534, 45, 44]}
{"time": "2021-02-13 03:51:57.048441", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags) throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 77, "n_pass": [552, 46, 45]}
{"time": "2021-02-13 03:51:58.403121", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException { check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 76, "n_pass": [557, 47, 46]}
{"time": "2021-02-13 03:51:59.741467", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{ check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 75, "n_pass": [561, 48, 47]}
{"time": "2021-02-13 03:52:01.072961", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check = checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 74, "n_pass": [563, 49, 48]}
{"time": "2021-02-13 03:52:02.399421", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check= checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 73, "n_pass": [565, 50, 49]}
{"time": "2021-02-13 03:52:03.728026", "score": "0.9981", "loss": "0.0206", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=checkCallingOrSelfPermission(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 72, "n_pass": [567, 51, 50]}
{"time": "2021-02-13 03:52:05.052255", "score": "0.9981", "loss": "0.0197", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"com\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 71, "n_pass": [568, 52, 51]}
{"time": "2021-02-13 03:52:06.380261", "score": "0.9983", "loss": "0.0154", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\" + check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 70, "n_pass": [571, 53, 52]}
{"time": "2021-02-13 03:52:07.708753", "score": "0.9983", "loss": "0.0154", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+ check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 69, "n_pass": [573, 54, 53]}
{"time": "2021-02-13 03:52:09.034686", "score": "0.9983", "loss": "0.0154", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check); if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 68, "n_pass": [575, 55, 54]}
{"time": "2021-02-13 03:52:10.384244", "score": "0.9983", "loss": "0.0154", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if (checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 67, "n_pass": [579, 56, 55]}
{"time": "2021-02-13 03:52:11.711968", "score": "0.9983", "loss": "0.0154", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(checkDENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 66, "n_pass": [581, 57, 56]}
{"time": "2021-02-13 03:52:13.039048", "score": "0.9984", "loss": "0.0156", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED) {}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 65, "n_pass": [583, 58, 57]}
{"time": "2021-02-13 03:52:14.389428", "score": "0.9984", "loss": "0.0156", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED){}packageName=(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 64, "n_pass": [586, 59, 58]}
{"time": "2021-02-13 03:52:15.735915", "score": "0.9982", "loss": "0.0189", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED){}packageName(getCallingUid());(packages&\"onTransact\"+packageName);{}onTransact();}", "n_tokens": 63, "n_pass": [590, 60, 59]}
{"time": "2021-02-13 03:52:17.071674", "score": "0.8746", "loss": "0.6126", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check=(\"\"+check);if(DENIED){}packageName(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 62, "n_pass": [601, 61, 60]}
{"time": "2021-02-13 03:52:19.173968", "score": "0.8837", "loss": "0.5749", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check(\"\"+check);if(DENIED){}packageName(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 61, "n_pass": [639, 62, 61]}
{"time": "2021-02-13 03:52:20.511055", "score": "0.916", "loss": "0.375", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{check(\"\"+check);if(DENIED){}(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 60, "n_pass": [653, 63, 62]}
{"time": "2021-02-13 03:52:22.581205", "score": "0.8997", "loss": "0.5598", "code": "boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{(\"\"+check);if(DENIED){}(getCallingUid());(packages&\"\"+packageName);{}onTransact();}", "n_tokens": 59, "n_pass": [700, 64, 63]}

Minimal simplified code:
boolean onTransact(int code,Parcel data,Parcel reply,int flags)throws RemoteException{(""+check);if(DENIED){}(getCallingUid());(packages&""+packageName);{}onTransact();}

