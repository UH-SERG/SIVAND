
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/test/java/org/jupiter/common/concurrent/collection/NonBlockingMapTest_main.java
method_name = main
method_body = public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, "--" + i); } String val = map.get(3); System.out.println(val); }
predict, score, loss = main, 0.9994908571243286, 0.000633427407592535

Trace of simplified code(s):
{"time": "2021-02-13 17:58:44.147785", "score": "0.9995", "loss": "0.0006", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (int i = 0; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 111, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:58:46.290791", "score": "0.9992", "loss": "0.001", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = map.get(3); System.out.println(val); }", "n_tokens": 104, "n_pass": [50, 2, 2]}
{"time": "2021-02-13 17:58:48.414956", "score": "0.9986", "loss": "0.0016", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val =(3); System.out.println(val); }", "n_tokens": 100, "n_pass": [108, 3, 3]}
{"time": "2021-02-13 17:58:49.747184", "score": "0.9985", "loss": "0.0018", "code": "public static void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 96, "n_pass": [109, 4, 4]}
{"time": "2021-02-13 17:58:51.112725", "score": "0.9985", "loss": "0.0018", "code": " void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 93, "n_pass": [113, 5, 5]}
{"time": "2021-02-13 17:58:55.171641", "score": "0.9985", "loss": "0.0018", "code": "void main(String[] args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 92, "n_pass": [195, 6, 6]}
{"time": "2021-02-13 17:58:57.252359", "score": "0.9985", "loss": "0.0018", "code": "void main(String[]args) { NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 91, "n_pass": [203, 7, 7]}
{"time": "2021-02-13 17:58:58.614636", "score": "0.9985", "loss": "0.0018", "code": "void main(String[]args){ NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 90, "n_pass": [206, 8, 8]}
{"time": "2021-02-13 17:58:59.948401", "score": "0.9985", "loss": "0.0018", "code": "void main(String[]args){NonBlockingHashMap<Integer, String> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 89, "n_pass": [208, 9, 9]}
{"time": "2021-02-13 17:59:01.284296", "score": "0.9989", "loss": "0.0014", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap<>(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 87, "n_pass": [211, 10, 10]}
{"time": "2021-02-13 17:59:02.653271", "score": "0.9989", "loss": "0.0014", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i < 100; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 85, "n_pass": [217, 11, 11]}
{"time": "2021-02-13 17:59:03.991867", "score": "0.9989", "loss": "0.0014", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i <00; i++) { map.put(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 83, "n_pass": [224, 12, 12]}
{"time": "2021-02-13 17:59:05.337554", "score": "0.9989", "loss": "0.0014", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i <00; i++) { map(i, \"--\" + i); } String val = System.out.println(val); }", "n_tokens": 81, "n_pass": [231, 13, 13]}
{"time": "2021-02-13 17:59:06.677843", "score": "0.9986", "loss": "0.002", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i <00; i++) { map(i, \"--\" + i); } val = System.out.println(val); }", "n_tokens": 79, "n_pass": [240, 14, 14]}
{"time": "2021-02-13 17:59:08.019603", "score": "0.9989", "loss": "0.0015", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i <00; i++) { map(i, \"--\" + i); } val = System.println(val); }", "n_tokens": 77, "n_pass": [244, 15, 15]}
{"time": "2021-02-13 17:59:09.351173", "score": "0.9965", "loss": "0.005", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = new NonBlockingHashMap(); for (; i <00; i++) { map(i, \"--\" + i); } val = System(val); }", "n_tokens": 75, "n_pass": [245, 16, 16]}
{"time": "2021-02-13 17:59:11.780968", "score": "0.9912", "loss": "0.0135", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap(); for (; i <00; i++) { map(i, \"--\" + i); } val = System(val); }", "n_tokens": 73, "n_pass": [264, 17, 17]}
{"time": "2021-02-13 17:59:13.111766", "score": "0.9904", "loss": "0.0146", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (; i <00; i++) { map(i, \"--\" + i); } val = System(val); }", "n_tokens": 71, "n_pass": [266, 18, 18]}
{"time": "2021-02-13 17:59:14.442623", "score": "0.9769", "loss": "0.0397", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (; i00; i++) { map(i, \"--\" + i); } val = System(val); }", "n_tokens": 69, "n_pass": [271, 19, 19]}
{"time": "2021-02-13 17:59:15.802921", "score": "0.9769", "loss": "0.0397", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (; i; i++) { map(i, \"--\" + i); } val = System(val); }", "n_tokens": 67, "n_pass": [272, 20, 20]}
{"time": "2021-02-13 17:59:17.171853", "score": "0.8886", "loss": "0.1937", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (; i; i++) { map(i, \"--\" + i); } val =(val); }", "n_tokens": 65, "n_pass": [288, 21, 21]}
{"time": "2021-02-13 17:59:19.631118", "score": "0.9171", "loss": "0.1341", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); } val =(val); }", "n_tokens": 63, "n_pass": [311, 22, 22]}
{"time": "2021-02-13 17:59:20.967228", "score": "0.873", "loss": "0.238", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); } val(val); }", "n_tokens": 61, "n_pass": [326, 23, 23]}
{"time": "2021-02-13 17:59:23.390268", "score": "0.9845", "loss": "0.0246", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val); }", "n_tokens": 59, "n_pass": [362, 24, 24]}
{"time": "2021-02-13 17:59:31.787076", "score": "0.9845", "loss": "0.0246", "code": "void main(String[]args){NonBlockingHashMap<IntegerString> map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 58, "n_pass": [450, 25, 25]}
{"time": "2021-02-13 17:59:34.186577", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String> map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 57, "n_pass": [463, 26, 26]}
{"time": "2021-02-13 17:59:35.502998", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map = NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 56, "n_pass": [466, 27, 27]}
{"time": "2021-02-13 17:59:36.819247", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map= NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 55, "n_pass": [468, 28, 28]}
{"time": "2021-02-13 17:59:38.153737", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap; for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 54, "n_pass": [470, 29, 29]}
{"time": "2021-02-13 17:59:39.468740", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for (;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 53, "n_pass": [473, 30, 30]}
{"time": "2021-02-13 17:59:40.785852", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;; i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 52, "n_pass": [475, 31, 31]}
{"time": "2021-02-13 17:59:42.095575", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++) { map(i, \"--\" + i); }(val);}", "n_tokens": 51, "n_pass": [479, 32, 32]}
{"time": "2021-02-13 17:59:43.437472", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){ map(i, \"--\" + i); }(val);}", "n_tokens": 50, "n_pass": [484, 33, 33]}
{"time": "2021-02-13 17:59:44.751821", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i, \"--\" + i); }(val);}", "n_tokens": 49, "n_pass": [486, 34, 34]}
{"time": "2021-02-13 17:59:46.094744", "score": "0.9691", "loss": "0.0527", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"--\" + i); }(val);}", "n_tokens": 48, "n_pass": [491, 35, 35]}
{"time": "2021-02-13 17:59:47.415990", "score": "0.9861", "loss": "0.0221", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"-\" + i); }(val);}", "n_tokens": 47, "n_pass": [493, 36, 36]}
{"time": "2021-02-13 17:59:48.733719", "score": "0.9798", "loss": "0.0356", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"\" + i); }(val);}", "n_tokens": 46, "n_pass": [494, 37, 37]}
{"time": "2021-02-13 17:59:50.063336", "score": "0.9798", "loss": "0.0356", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"\"+ i); }(val);}", "n_tokens": 45, "n_pass": [496, 38, 38]}
{"time": "2021-02-13 17:59:51.383677", "score": "0.9798", "loss": "0.0356", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"\"+i); }(val);}", "n_tokens": 44, "n_pass": [498, 39, 39]}
{"time": "2021-02-13 17:59:52.700526", "score": "0.9798", "loss": "0.0356", "code": "void main(String[]args){NonBlockingHashMap<String>map=NonBlockingHashMap;for(;;i++){map(i,\"\"+i);}(val);}", "n_tokens": 43, "n_pass": [502, 40, 40]}
{"time": "2021-02-13 17:59:55.837706", "score": "0.982", "loss": "0.0349", "code": "void main(String[]args){NonBlockingHashMap<String>mapNonBlockingHashMap;for(;;i++){map(i,\"\"+i);}(val);}", "n_tokens": 42, "n_pass": [524, 41, 41]}
{"time": "2021-02-13 17:59:57.155020", "score": "0.9595", "loss": "0.0877", "code": "void main(String[]args){NonBlockingHashMap<String>map;for(;;i++){map(i,\"\"+i);}(val);}", "n_tokens": 41, "n_pass": [525, 42, 42]}

Minimal simplified code:
void main(String[]args){NonBlockingHashMap<String>map;for(;;i++){map(i,""+i);}(val);}

