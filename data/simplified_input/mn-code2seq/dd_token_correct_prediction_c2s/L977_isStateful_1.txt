
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ozodrukh__RippleDrawable/app/src/main/java/codetail/graphics/drawables/LayerDrawable_isStateful.java
method_name = isStateful
method_body = public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; final int N = mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }
predict, score, loss = isStateful, 0.842300295829773, 0.5286353826522827

Trace of simplified code(s):
{"time": "2021-02-14 03:04:32.229143", "score": "0.8025", "loss": "0.7056", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; final int N = mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 03:04:33.631626", "score": "0.8428", "loss": "0.5626", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; mNum; boolean isStateful = false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 129, "n_pass": [49, 2, 2]}
{"time": "2021-02-14 03:04:35.016873", "score": "0.8414", "loss": "0.5492", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren;  false; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 121, "n_pass": [50, 3, 3]}
{"time": "2021-02-14 03:04:36.432139", "score": "0.8213", "loss": "0.6431", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; i < N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 117, "n_pass": [93, 4, 4]}
{"time": "2021-02-14 03:04:37.846255", "score": "0.8179", "loss": "0.6838", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { isStateful = true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 113, "n_pass": [97, 5, 5]}
{"time": "2021-02-14 03:04:39.216273", "score": "0.8118", "loss": "0.7467", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) {true; break; } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 108, "n_pass": [104, 6, 6]}
{"time": "2021-02-14 03:04:40.569461", "score": "0.8168", "loss": "0.6802", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } } mIsStateful = isStateful; mHaveIsStateful = true; return isStateful; }", "n_tokens": 103, "n_pass": [105, 7, 7]}
{"time": "2021-02-14 03:04:41.956718", "score": "0.8437", "loss": "0.4861", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } } ; mHaveIsStateful = true; return isStateful; }", "n_tokens": 98, "n_pass": [107, 8, 8]}
{"time": "2021-02-14 03:04:43.329838", "score": "0.8587", "loss": "0.4362", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  true; return isStateful; }", "n_tokens": 93, "n_pass": [108, 9, 9]}
{"time": "2021-02-14 03:04:44.710838", "score": "0.7995", "loss": "0.6662", "code": "public final boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 88, "n_pass": [109, 10, 10]}
{"time": "2021-02-14 03:04:46.091025", "score": "0.7995", "loss": "0.6662", "code": "boolean isStateful() { if (mHaveIsStateful) { return mIsStateful; } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 84, "n_pass": [111, 11, 11]}
{"time": "2021-02-14 03:04:47.436786", "score": "0.7852", "loss": "0.8908", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] array = mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 80, "n_pass": [116, 12, 12]}
{"time": "2021-02-14 03:04:48.791382", "score": "0.784", "loss": "0.9075", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i++) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 76, "n_pass": [119, 13, 13]}
{"time": "2021-02-14 03:04:51.066629", "score": "0.7725", "loss": "1.0246", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].mDrawable.isStateful()) { } }  isStateful; }", "n_tokens": 74, "n_pass": [184, 14, 14]}
{"time": "2021-02-14 03:04:52.437926", "score": "0.8891", "loss": "0.4172", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }  isStateful; }", "n_tokens": 72, "n_pass": [190, 15, 15]}
{"time": "2021-02-14 03:04:53.848542", "score": "0.8393", "loss": "0.5753", "code": "boolean isStateful() { if (mHaveIsStateful) {  } final ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 69, "n_pass": [195, 16, 16]}
{"time": "2021-02-14 03:04:55.587176", "score": "0.8393", "loss": "0.5753", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable[] mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 67, "n_pass": [206, 17, 17]}
{"time": "2021-02-14 03:04:56.914916", "score": "0.8485", "loss": "0.5711", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable mChildren; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 65, "n_pass": [208, 18, 18]}
{"time": "2021-02-14 03:04:58.298640", "score": "0.7451", "loss": "1.224", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable; for (int i = 0; N; i) { if (array[i].isStateful()) { } }; }", "n_tokens": 63, "n_pass": [209, 19, 19]}
{"time": "2021-02-14 03:04:59.636192", "score": "0.779", "loss": "0.9708", "code": "boolean isStateful() { if (mHaveIsStateful) {  } ChildDrawable; for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 61, "n_pass": [218, 20, 20]}
{"time": "2021-02-14 03:05:01.383164", "score": "0.8857", "loss": "0.4346", "code": "boolean isStateful() { if (mHaveIsStateful) {  }; for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 59, "n_pass": [239, 21, 21]}
{"time": "2021-02-14 03:05:02.709459", "score": "0.8857", "loss": "0.4346", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for (int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 57, "n_pass": [240, 22, 22]}
{"time": "2021-02-14 03:05:10.876071", "score": "0.8857", "loss": "0.4346", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(int i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 56, "n_pass": [323, 23, 23]}
{"time": "2021-02-14 03:05:12.235831", "score": "0.8601", "loss": "0.623", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for( i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 55, "n_pass": [325, 24, 24]}
{"time": "2021-02-14 03:05:13.562164", "score": "0.8601", "loss": "0.623", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i = 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 54, "n_pass": [326, 25, 25]}
{"time": "2021-02-14 03:05:14.903624", "score": "0.8601", "loss": "0.623", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i= 0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 53, "n_pass": [328, 26, 26]}
{"time": "2021-02-14 03:05:16.242385", "score": "0.8601", "loss": "0.623", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0; N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 52, "n_pass": [330, 27, 27]}
{"time": "2021-02-14 03:05:17.591417", "score": "0.8601", "loss": "0.623", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;N;) { if (array[i].isStateful()) { } }; }", "n_tokens": 51, "n_pass": [333, 28, 28]}
{"time": "2021-02-14 03:05:18.921659", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;) { if (array[i].isStateful()) { } }; }", "n_tokens": 50, "n_pass": [334, 29, 29]}
{"time": "2021-02-14 03:05:20.268907", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){ if (array[i].isStateful()) { } }; }", "n_tokens": 49, "n_pass": [337, 30, 30]}
{"time": "2021-02-14 03:05:21.609744", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if (array[i].isStateful()) { } }; }", "n_tokens": 48, "n_pass": [339, 31, 31]}
{"time": "2021-02-14 03:05:22.936990", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()) { } }; }", "n_tokens": 47, "n_pass": [341, 32, 32]}
{"time": "2021-02-14 03:05:24.293907", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){ } }; }", "n_tokens": 46, "n_pass": [352, 33, 33]}
{"time": "2021-02-14 03:05:25.645344", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful() { if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 45, "n_pass": [354, 34, 34]}
{"time": "2021-02-14 03:05:27.718622", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){ if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 44, "n_pass": [363, 35, 35]}
{"time": "2021-02-14 03:05:29.050781", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){if (mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 43, "n_pass": [365, 36, 36]}
{"time": "2021-02-14 03:05:30.429251", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){if(mHaveIsStateful) {  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 42, "n_pass": [367, 37, 37]}
{"time": "2021-02-14 03:05:31.788734", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){if(mHaveIsStateful){  }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 41, "n_pass": [371, 38, 38]}
{"time": "2021-02-14 03:05:33.108541", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){if(mHaveIsStateful){ }for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 40, "n_pass": [373, 39, 39]}
{"time": "2021-02-14 03:05:34.440672", "score": "0.7862", "loss": "1.027", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i=0;;){if(array[i].isStateful()){} }; }", "n_tokens": 39, "n_pass": [374, 40, 40]}
{"time": "2021-02-14 03:05:35.781884", "score": "0.8907", "loss": "0.4761", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i0;;){if(array[i].isStateful()){} }; }", "n_tokens": 38, "n_pass": [379, 41, 41]}
{"time": "2021-02-14 03:05:37.140650", "score": "0.8907", "loss": "0.4761", "code": "boolean isStateful(){if(mHaveIsStateful){}for(i;;){if(array[i].isStateful()){} }; }", "n_tokens": 37, "n_pass": [380, 42, 42]}
{"time": "2021-02-14 03:05:39.215741", "score": "0.8985", "loss": "0.3932", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){} }; }", "n_tokens": 36, "n_pass": [414, 43, 43]}
{"time": "2021-02-14 03:05:42.277825", "score": "0.8985", "loss": "0.3932", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}; }", "n_tokens": 35, "n_pass": [455, 44, 44]}
{"time": "2021-02-14 03:05:43.593187", "score": "0.8985", "loss": "0.3932", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}} }", "n_tokens": 34, "n_pass": [457, 45, 45]}
{"time": "2021-02-14 03:05:44.921735", "score": "0.8985", "loss": "0.3932", "code": "boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}}", "n_tokens": 33, "n_pass": [458, 46, 46]}

Minimal simplified code:
boolean isStateful(){if(mHaveIsStateful){}for(;;){if(array[i].isStateful()){}}}

