
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/entitlement/util/SearchFilter_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that = (SearchFilter) o; return longValue == that.longValue && !(attribute != null ? !attribute.equals(that.attribute) : that.attribute != null) && operator == that.operator && !(value != null ? !value.equals(that.value) : that.value != null); }
predict, score, loss = equals, 0.9982494115829468, 0.0020230477675795555

Trace of simplified code(s):
{"time": "2021-02-13 14:03:35.860160", "score": "0.9982", "loss": "0.002", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that = (SearchFilter) o; return longValue == that.longValue && !(attribute != null ? !attribute.equals(that.attribute) : that.attribute != null) && operator == that.operator && !(value != null ? !value.equals(that.value) : that.value != null); }", "n_tokens": 168, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:03:37.211793", "score": "0.9983", "loss": "0.0019", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that = (SearchFilter) o; return longValue == that.longValue &&that.operator && !(value != null ? !value.equals(that.value) : that.value != null); }", "n_tokens": 126, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 14:03:38.567695", "score": "0.998", "loss": "0.0024", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that =that.operator && !(value != null ? !value.equals(that.value) : that.value != null); }", "n_tokens": 105, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 14:03:39.929494", "score": "0.996", "loss": "0.0047", "code": "@Override public boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that =that.operator && !(value != null ? !value.equals(that.value) :  null); }", "n_tokens": 99, "n_pass": [75, 4, 4]}
{"time": "2021-02-13 14:03:41.267780", "score": "0.9902", "loss": "0.0133", "code": "boolean equals(Object o) { if (this == o) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that =that.operator && !(value != null ? !value.equals(that.value) :  null); }", "n_tokens": 94, "n_pass": [77, 5, 5]}
{"time": "2021-02-13 14:03:42.602905", "score": "0.9815", "loss": "0.027", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof SearchFilter)) { return false; } SearchFilter that =that.operator && !(value != null ? !value.equals(that.value) :  null); }", "n_tokens": 89, "n_pass": [81, 6, 6]}
{"time": "2021-02-13 14:03:43.927407", "score": "0.9227", "loss": "0.1198", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof SearchFilter)) { } SearchFilter that =that.operator && !(value != null ? !value.equals(that.value) :  null); }", "n_tokens": 84, "n_pass": [87, 7, 7]}
{"time": "2021-02-13 14:03:45.947790", "score": "0.8703", "loss": "0.2056", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof SearchFilter)) { }that =that.operator && !(value != null ? !value.equals(that.value) :  null); }", "n_tokens": 81, "n_pass": [138, 8, 8]}
{"time": "2021-02-13 14:03:47.672195", "score": "0.9317", "loss": "0.1074", "code": "boolean equals(Object o) { if (this) { return true; } if (!(o instanceof SearchFilter)) { }that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 78, "n_pass": [146, 9, 9]}
{"time": "2021-02-13 14:03:49.378426", "score": "0.8796", "loss": "0.2125", "code": "boolean equals(Object o) { if (this) { true; } if (!(o instanceof SearchFilter)) { }that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 76, "n_pass": [161, 10, 10]}
{"time": "2021-02-13 14:03:50.692465", "score": "0.8901", "loss": "0.1803", "code": "boolean equals(Object o) { if (this) {; } if (!(o instanceof SearchFilter)) { }that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 74, "n_pass": [162, 11, 11]}
{"time": "2021-02-13 14:03:52.025157", "score": "0.8901", "loss": "0.1803", "code": "boolean equals(Object o) { if (this) {} if (!(o instanceof SearchFilter)) { }that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 72, "n_pass": [163, 12, 12]}
{"time": "2021-02-13 14:03:53.338438", "score": "0.7889", "loss": "0.3761", "code": "boolean equals(Object o) { if (this) {} if (!(o )) { }that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 69, "n_pass": [167, 13, 13]}
{"time": "2021-02-13 14:03:54.650184", "score": "0.85", "loss": "0.2496", "code": "boolean equals(Object o) { if (this) {} if (!(o )) that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 66, "n_pass": [169, 14, 14]}
{"time": "2021-02-13 14:04:00.385710", "score": "0.85", "loss": "0.2496", "code": "boolean equals(Object o) { if (this) {} if (!(o)) that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 65, "n_pass": [245, 15, 15]}
{"time": "2021-02-13 14:04:01.700150", "score": "0.85", "loss": "0.2496", "code": "boolean equals(Object o) { if (this) {} if (!(o))that =that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 64, "n_pass": [248, 16, 16]}
{"time": "2021-02-13 14:04:03.015289", "score": "0.85", "loss": "0.2496", "code": "boolean equals(Object o) { if (this) {} if (!(o))that=that.operator && !(value != null ? equals(that.value) :  null); }", "n_tokens": 63, "n_pass": [250, 17, 17]}
{"time": "2021-02-13 14:04:04.724394", "score": "0.8647", "loss": "0.2564", "code": "boolean equals(Object o) { if (this) {} if (!(o))that=that && !(value != null ? equals(that.value) :  null); }", "n_tokens": 61, "n_pass": [253, 18, 18]}
{"time": "2021-02-13 14:04:06.063735", "score": "0.8731", "loss": "0.2295", "code": "boolean equals(Object o) { if (this) {} if (!(o))that=that& !(value != null ? equals(that.value) :  null); }", "n_tokens": 59, "n_pass": [254, 19, 19]}
{"time": "2021-02-13 14:04:07.401146", "score": "0.6726", "loss": "0.6892", "code": "boolean equals(Object o) { if (this) {} if (!(o))that=that& !(value != null ?(that.value) :  null); }", "n_tokens": 57, "n_pass": [261, 20, 20]}
{"time": "2021-02-13 14:04:08.706850", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o) { if (this) {} if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 55, "n_pass": [263, 21, 21]}
{"time": "2021-02-13 14:04:10.772585", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){ if (this) {} if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 54, "n_pass": [277, 22, 22]}
{"time": "2021-02-13 14:04:12.088096", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){if (this) {} if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 53, "n_pass": [279, 23, 23]}
{"time": "2021-02-13 14:04:13.401443", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){if(this) {} if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 52, "n_pass": [281, 24, 24]}
{"time": "2021-02-13 14:04:14.706562", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){if(this){} if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 51, "n_pass": [285, 25, 25]}
{"time": "2021-02-13 14:04:16.023233", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){if(this){}if (!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 50, "n_pass": [288, 26, 26]}
{"time": "2021-02-13 14:04:17.326580", "score": "0.6896", "loss": "0.7566", "code": "boolean equals(Object o){if(this){}if(!(o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 49, "n_pass": [290, 27, 27]}
{"time": "2021-02-13 14:04:18.638682", "score": "0.6784", "loss": "0.7606", "code": "boolean equals(Object o){if(this){}if((o))that=that& !(value != null ?(that) :  null); }", "n_tokens": 48, "n_pass": [292, 28, 28]}
{"time": "2021-02-13 14:04:24.134608", "score": "0.6784", "loss": "0.7606", "code": "boolean equals(Object o){if(this){}if((o))that=that&!(value != null ?(that) :  null); }", "n_tokens": 47, "n_pass": [354, 29, 29]}
{"time": "2021-02-13 14:04:25.448419", "score": "0.7569", "loss": "0.4785", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value != null ?(that) :  null); }", "n_tokens": 46, "n_pass": [355, 30, 30]}
{"time": "2021-02-13 14:04:26.758269", "score": "0.7569", "loss": "0.4785", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value!= null ?(that) :  null); }", "n_tokens": 45, "n_pass": [358, 31, 31]}
{"time": "2021-02-13 14:04:28.080680", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value= null ?(that) :  null); }", "n_tokens": 44, "n_pass": [359, 32, 32]}
{"time": "2021-02-13 14:04:29.409740", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null ?(that) :  null); }", "n_tokens": 43, "n_pass": [361, 33, 33]}
{"time": "2021-02-13 14:04:30.711148", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null?(that) :  null); }", "n_tokens": 42, "n_pass": [363, 34, 34]}
{"time": "2021-02-13 14:04:32.021744", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null?(that):  null); }", "n_tokens": 41, "n_pass": [368, 35, 35]}
{"time": "2021-02-13 14:04:33.326394", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null?(that): null); }", "n_tokens": 40, "n_pass": [370, 36, 36]}
{"time": "2021-02-13 14:04:34.644176", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null?(that):null); }", "n_tokens": 39, "n_pass": [371, 37, 37]}
{"time": "2021-02-13 14:04:35.968217", "score": "0.5673", "loss": "0.8915", "code": "boolean equals(Object o){if(this){}if((o))that=that&(value=null?(that):null);}", "n_tokens": 38, "n_pass": [375, 38, 38]}
{"time": "2021-02-13 14:04:38.368126", "score": "0.7807", "loss": "0.4442", "code": "boolean equals(Object o){if(this){}if((o))that=that(value=null?(that):null);}", "n_tokens": 37, "n_pass": [401, 39, 39]}
{"time": "2021-02-13 14:04:39.685945", "score": "0.7648", "loss": "0.4643", "code": "boolean equals(Object o){if(this){}if((o))that=that(valuenull?(that):null);}", "n_tokens": 36, "n_pass": [404, 40, 40]}
{"time": "2021-02-13 14:04:40.983747", "score": "0.8013", "loss": "0.4079", "code": "boolean equals(Object o){if(this){}if((o))that=that(value?(that):null);}", "n_tokens": 35, "n_pass": [405, 41, 41]}
{"time": "2021-02-13 14:04:44.338129", "score": "0.3556", "loss": "1.682", "code": "boolean equals(Object o){if(this){}if((o))that=(value?(that):null);}", "n_tokens": 34, "n_pass": [438, 43, 42]}
{"time": "2021-02-13 14:04:46.386112", "score": "0.4809", "loss": "1.3705", "code": "boolean equals(Object o){if(this){}if((o))that(value?(that):null);}", "n_tokens": 33, "n_pass": [472, 44, 43]}

Minimal simplified code:
boolean equals(Object o){if(this){}if((o))that(value?(that):null);}

