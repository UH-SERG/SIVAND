
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/event/cover/UsageSessionService_getSessions.java
method_name = getSessions
method_body = public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }
predict, score, loss = getSessions, 0.9892382621765137, 0.02729833871126175

Trace of simplified code(s):
{"time": "2021-02-13 13:31:54.038507", "score": "0.9892", "loss": "0.0273", "code": "public static java.util.List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 71, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:31:55.387071", "score": "0.9844", "loss": "0.0426", "code": "List getSessions(java.util.List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 63, "n_pass": [20, 2, 2]}
{"time": "2021-02-13 13:31:56.729818", "score": "0.9698", "loss": "0.0853", "code": "List getSessions(List param0) { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 59, "n_pass": [42, 3, 3]}
{"time": "2021-02-13 13:31:58.042658", "score": "0.9104", "loss": "0.2976", "code": "List getSessions() { org.sakaiproject.event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 55, "n_pass": [43, 4, 4]}
{"time": "2021-02-13 13:31:59.347071", "score": "0.9249", "loss": "0.2446", "code": "List getSessions() { event.api.UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 51, "n_pass": [45, 5, 5]}
{"time": "2021-02-13 13:32:00.661422", "score": "0.9034", "loss": "0.2912", "code": "List getSessions() { UsageSessionService service = getInstance(); if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 47, "n_pass": [46, 6, 6]}
{"time": "2021-02-13 13:32:01.968844", "score": "0.8572", "loss": "0.4625", "code": "List getSessions() { UsageSessionService service ; if (service == null) return null; return service.getSessions(param0); }", "n_tokens": 42, "n_pass": [48, 7, 7]}
{"time": "2021-02-13 13:32:03.289609", "score": "0.8868", "loss": "0.3396", "code": "List getSessions() { UsageSessionService service ; if (null) return null; return service.getSessions(param0); }", "n_tokens": 37, "n_pass": [50, 8, 8]}
{"time": "2021-02-13 13:32:04.594088", "score": "0.9172", "loss": "0.2433", "code": "List getSessions() { UsageSessionService service ; if (null) return service.getSessions(param0); }", "n_tokens": 32, "n_pass": [52, 9, 9]}
{"time": "2021-02-13 13:32:05.894640", "score": "0.9215", "loss": "0.2716", "code": "List getSessions() { ; if (null) return service.getSessions(param0); }", "n_tokens": 28, "n_pass": [57, 10, 10]}
{"time": "2021-02-13 13:32:07.557347", "score": "0.9215", "loss": "0.2716", "code": "List getSessions() { if (null) return service.getSessions(param0); }", "n_tokens": 26, "n_pass": [76, 11, 11]}
{"time": "2021-02-13 13:32:11.204423", "score": "0.9215", "loss": "0.2716", "code": "List getSessions() { if(null) return service.getSessions(param0); }", "n_tokens": 25, "n_pass": [111, 12, 12]}
{"time": "2021-02-13 13:32:12.511627", "score": "0.9215", "loss": "0.2716", "code": "List getSessions() { if(null)return service.getSessions(param0); }", "n_tokens": 24, "n_pass": [115, 13, 13]}
{"time": "2021-02-13 13:32:13.809180", "score": "0.9326", "loss": "0.2589", "code": "List getSessions() { if(null) service.getSessions(param0); }", "n_tokens": 23, "n_pass": [116, 14, 14]}
{"time": "2021-02-13 13:32:15.108656", "score": "0.9326", "loss": "0.2589", "code": "List getSessions() { if(null)service.getSessions(param0); }", "n_tokens": 22, "n_pass": [117, 15, 15]}
{"time": "2021-02-13 13:32:17.711670", "score": "0.9766", "loss": "0.0842", "code": "List getSessions() { if(null)service.getSessions(); }", "n_tokens": 20, "n_pass": [121, 17, 16]}
{"time": "2021-02-13 13:32:20.074861", "score": "0.9766", "loss": "0.0842", "code": "List getSessions(){ if(null)service.getSessions(); }", "n_tokens": 19, "n_pass": [129, 18, 17]}
{"time": "2021-02-13 13:32:21.362797", "score": "0.9766", "loss": "0.0842", "code": "List getSessions(){if(null)service.getSessions(); }", "n_tokens": 18, "n_pass": [131, 19, 18]}
{"time": "2021-02-13 13:32:25.655631", "score": "0.9766", "loss": "0.0842", "code": "List getSessions(){if(null)service.getSessions();}", "n_tokens": 17, "n_pass": [157, 21, 19]}

Minimal simplified code:
List getSessions(){if(null)service.getSessions();}

