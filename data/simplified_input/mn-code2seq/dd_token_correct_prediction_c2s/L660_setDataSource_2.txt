
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/SummerRC__BiLiBiLi/VitamioBundle-4/src/io/vov/vitamio/MediaPlayer_setDataSource.java
method_name = setDataSource
method_body = public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(":").append(entry.getValue()).append("\r\n"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }
predict, score, loss = setDataSource, 0.8674273490905762, 0.7884835004806519

Trace of simplified code(s):
{"time": "2021-02-16 20:44:15.939869", "score": "0.8776", "loss": "0.7211", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 176, "n_pass": [1, 1, 1]}
{"time": "2021-02-16 20:44:18.638293", "score": "0.8459", "loss": "0.8899", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers != null) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 171, "n_pass": [98, 3, 2]}
{"time": "2021-02-16 20:44:21.254474", "score": "0.8396", "loss": "0.9716", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBuffer = new StringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 166, "n_pass": [103, 5, 3]}
{"time": "2021-02-16 20:44:22.543682", "score": "0.8139", "loss": "1.0864", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer == null ? null : headerBuffer.toString()); return; }", "n_tokens": 161, "n_pass": [105, 6, 4]}
{"time": "2021-02-16 20:44:25.153254", "score": "0.8269", "loss": "0.9285", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBuffer? null : headerBuffer.toString()); return; }", "n_tokens": 155, "n_pass": [120, 8, 5]}
{"time": "2021-02-16 20:44:26.459107", "score": "0.7587", "loss": "1.3793", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(context, uri, headerBufferheaderBuffer.toString()); return; }", "n_tokens": 149, "n_pass": [121, 9, 6]}
{"time": "2021-02-16 20:44:30.389625", "score": "0.673", "loss": "2.1541", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); return; }", "n_tokens": 143, "n_pass": [148, 12, 7]}
{"time": "2021-02-16 20:44:35.581627", "score": "0.673", "loss": "2.1541", "code": "public void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 140, "n_pass": [229, 16, 8]}
{"time": "2021-02-16 20:44:36.911007", "score": "0.673", "loss": "2.1541", "code": "void setDataSource(Context context, Uri uri, Map<String, String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 138, "n_pass": [230, 17, 9]}
{"time": "2021-02-16 20:44:38.553197", "score": "0.6924", "loss": "1.9758", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer headerBuffer = null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 136, "n_pass": [239, 18, 10]}
{"time": "2021-02-16 20:44:41.210136", "score": "0.6848", "loss": "1.9854", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer= null; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 133, "n_pass": [247, 20, 11]}
{"time": "2021-02-16 20:44:42.490763", "score": "0.6478", "loss": "2.2798", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { headerBuffer.append(entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 130, "n_pass": [248, 21, 12]}
{"time": "2021-02-16 20:44:45.077305", "score": "0.6737", "loss": "2.1166", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"\\r\\n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 127, "n_pass": [263, 23, 13]}
{"time": "2021-02-16 20:44:46.434142", "score": "0.6892", "loss": "1.9893", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String, String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 124, "n_pass": [273, 24, 14]}
{"time": "2021-02-16 20:44:50.643909", "score": "0.6844", "loss": "2.028", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer(); for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 121, "n_pass": [304, 27, 15]}
{"time": "2021-02-16 20:45:01.606261", "score": "0.6844", "loss": "2.028", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for (Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 120, "n_pass": [440, 30, 16]}
{"time": "2021-02-16 20:45:02.882318", "score": "0.6844", "loss": "2.028", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(Map.Entry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 119, "n_pass": [442, 31, 17]}
{"time": "2021-02-16 20:45:04.179202", "score": "0.684", "loss": "2.0274", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers.entrySet()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 118, "n_pass": [445, 32, 18]}
{"time": "2021-02-16 20:45:05.477390", "score": "0.6958", "loss": "1.9369", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers()) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 116, "n_pass": [451, 33, 19]}
{"time": "2021-02-16 20:45:06.753483", "score": "0.6965", "loss": "1.9256", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry.getKey()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 114, "n_pass": [452, 34, 20]}
{"time": "2021-02-16 20:45:08.031204", "score": "0.7254", "loss": "1.6312", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry()).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 112, "n_pass": [456, 35, 21]}
{"time": "2021-02-16 20:45:09.299791", "score": "0.716", "loss": "1.7225", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry.getValue()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 110, "n_pass": [457, 36, 22]}
{"time": "2021-02-16 20:45:10.579379", "score": "0.7447", "loss": "1.4895", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry()).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 108, "n_pass": [464, 37, 23]}
{"time": "2021-02-16 20:45:11.858439", "score": "0.7349", "loss": "1.5583", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString()); }", "n_tokens": 106, "n_pass": [465, 38, 24]}
{"time": "2021-02-16 20:45:14.411666", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context, Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 104, "n_pass": [476, 40, 25]}
{"time": "2021-02-16 20:45:16.452237", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context,Uri uri, Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 103, "n_pass": [487, 41, 26]}
{"time": "2021-02-16 20:45:17.750213", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context,Uri uri,Map< String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 102, "n_pass": [492, 42, 27]}
{"time": "2021-02-16 20:45:19.040348", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context,Uri uri,Map<String> headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 101, "n_pass": [495, 43, 28]}
{"time": "2021-02-16 20:45:20.315729", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context,Uri uri,Map<String>headers) throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 100, "n_pass": [498, 44, 29]}
{"time": "2021-02-16 20:45:21.587847", "score": "0.6578", "loss": "2.2101", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws IOExceptionSecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 99, "n_pass": [501, 45, 30]}
{"time": "2021-02-16 20:45:22.891674", "score": "0.6847", "loss": "1.9442", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException, IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 98, "n_pass": [504, 46, 31]}
{"time": "2021-02-16 20:45:24.165077", "score": "0.6847", "loss": "1.9442", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException { StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 97, "n_pass": [507, 47, 32]}
{"time": "2021-02-16 20:45:25.437732", "score": "0.6847", "loss": "1.9442", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{ StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 96, "n_pass": [509, 48, 33]}
{"time": "2021-02-16 20:45:26.712189", "score": "0.6847", "loss": "1.9442", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{StringBuffer; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 95, "n_pass": [511, 49, 34]}
{"time": "2021-02-16 20:45:27.983155", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{; if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 94, "n_pass": [512, 50, 35]}
{"time": "2021-02-16 20:45:29.284574", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{ if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 93, "n_pass": [513, 51, 36]}
{"time": "2021-02-16 20:45:30.552670", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if (headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 92, "n_pass": [514, 52, 37]}
{"time": "2021-02-16 20:45:31.852015", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers) { headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 91, "n_pass": [516, 53, 38]}
{"time": "2021-02-16 20:45:33.143684", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){ headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 90, "n_pass": [520, 54, 39]}
{"time": "2021-02-16 20:45:34.418460", "score": "0.7054", "loss": "1.7373", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){headerBufferStringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 89, "n_pass": [522, 55, 40]}
{"time": "2021-02-16 20:45:35.707008", "score": "0.7528", "loss": "1.4126", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(MapEntry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 88, "n_pass": [523, 56, 41]}
{"time": "2021-02-16 20:45:36.995565", "score": "0.7528", "loss": "1.4126", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer.toString); }", "n_tokens": 87, "n_pass": [530, 57, 42]}
{"time": "2021-02-16 20:45:38.313662", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer); }", "n_tokens": 85, "n_pass": [554, 58, 43]}
{"time": "2021-02-16 20:45:46.468514", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String> entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 84, "n_pass": [666, 61, 44]}
{"time": "2021-02-16 20:45:49.780759", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry : headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 83, "n_pass": [706, 63, 45]}
{"time": "2021-02-16 20:45:51.057690", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry: headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 82, "n_pass": [708, 64, 46]}
{"time": "2021-02-16 20:45:52.343313", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers) { (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 81, "n_pass": [710, 65, 47]}
{"time": "2021-02-16 20:45:53.647636", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){ (entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 80, "n_pass": [713, 66, 48]}
{"time": "2021-02-16 20:45:54.918074", "score": "0.7222", "loss": "1.4806", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\":\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 79, "n_pass": [715, 67, 49]}
{"time": "2021-02-16 20:45:56.545390", "score": "0.7231", "loss": "1.4538", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append(entry).append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 78, "n_pass": [723, 68, 50]}
{"time": "2021-02-16 20:45:57.862863", "score": "0.7013", "loss": "1.6194", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"n\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 77, "n_pass": [729, 69, 51]}
{"time": "2021-02-16 20:45:59.160372", "score": "0.6972", "loss": "1.6496", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"\"); } } setDataSource(contextheaderBuffer);}", "n_tokens": 76, "n_pass": [735, 70, 52]}
{"time": "2021-02-16 20:46:00.429809", "score": "0.6972", "loss": "1.6496", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"\");} } setDataSource(contextheaderBuffer);}", "n_tokens": 75, "n_pass": [739, 71, 53]}
{"time": "2021-02-16 20:46:01.727095", "score": "0.6972", "loss": "1.6496", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"\");}} setDataSource(contextheaderBuffer);}", "n_tokens": 74, "n_pass": [741, 72, 54]}
{"time": "2021-02-16 20:46:03.008481", "score": "0.6972", "loss": "1.6496", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"\");}}setDataSource(contextheaderBuffer);}", "n_tokens": 73, "n_pass": [743, 73, 55]}
{"time": "2021-02-16 20:46:06.821710", "score": "0.7222", "loss": "1.4675", "code": "void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append(\"\").append().append(\"\");}}setDataSource(context);}", "n_tokens": 72, "n_pass": [747, 76, 56]}

Minimal simplified code:
void setDataSource(Context context,Uri uri,Map<String>headers)throws SecurityException,IllegalStateException{if(headers){StringBuffer();for(Entry<String>entry:headers){(entry).append("").append().append("");}}setDataSource(context);}

