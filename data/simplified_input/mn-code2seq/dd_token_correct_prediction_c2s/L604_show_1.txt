
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/w568w__fuckView/app/src/main/java/ml/qingsu/fuckview/base/BasePopupWindow_show.java
method_name = show
method_body = public final void show() { if (isShown) { return; } isShown = true; try { mWindowManager.addView(view, params); onShow(); } catch (WindowManager.BadTokenException e) { e.printStackTrace(); } }
predict, score, loss = show, 0.7469122409820557, 0.5072673559188843

Trace of simplified code(s):
{"time": "2021-02-13 18:48:10.850011", "score": "0.7469", "loss": "0.5073", "code": "public final void show() { if (isShown) { return; } isShown = true; try { mWindowManager.addView(view, params); onShow(); } catch (WindowManager.BadTokenException e) { e.printStackTrace(); } }", "n_tokens": 76, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:48:12.569000", "score": "0.6512", "loss": "0.6788", "code": "public final void show() { if (isShown) { return; } isShown = true; try {  onShow(); } catch (WindowManager.BadTokenException e) { e.printStackTrace(); } }", "n_tokens": 66, "n_pass": [24, 2, 2]}
{"time": "2021-02-13 18:48:14.267718", "score": "0.3869", "loss": "1.4243", "code": "public final void show() { if (isShown) { return; } isShown = true; try {  } catch (WindowManager.BadTokenException e) { e.printStackTrace(); } }", "n_tokens": 61, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 18:48:15.603658", "score": "0.2706", "loss": "1.9051", "code": "public final void show() { if (isShown) { return; } isShown = true; try {  } catch (WindowManager.BadTokenException e) { ; } }", "n_tokens": 56, "n_pass": [49, 4, 4]}
{"time": "2021-02-13 18:48:16.904982", "score": "0.2706", "loss": "1.9051", "code": "void show() { if (isShown) { return; } isShown = true; try {  } catch (WindowManager.BadTokenException e) { ; } }", "n_tokens": 52, "n_pass": [51, 5, 5]}
{"time": "2021-02-13 18:48:19.244247", "score": "0.2706", "loss": "1.9051", "code": "void show() { if (isShown) {  } isShown = true; try {  } catch (WindowManager.BadTokenException e) { ; } }", "n_tokens": 50, "n_pass": [93, 6, 6]}
{"time": "2021-02-13 18:48:20.549143", "score": "0.2706", "loss": "1.9051", "code": "void show() { if (isShown) {  } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 47, "n_pass": [105, 7, 7]}
{"time": "2021-02-13 18:48:28.596145", "score": "0.2706", "loss": "1.9051", "code": "void show(){ if (isShown) {  } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 46, "n_pass": [173, 8, 8]}
{"time": "2021-02-13 18:48:29.922321", "score": "0.2706", "loss": "1.9051", "code": "void show(){if (isShown) {  } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 45, "n_pass": [175, 9, 9]}
{"time": "2021-02-13 18:48:31.249970", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown) {  } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 44, "n_pass": [177, 10, 10]}
{"time": "2021-02-13 18:48:32.570742", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){  } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 43, "n_pass": [181, 11, 11]}
{"time": "2021-02-13 18:48:33.870530", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){ } isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 42, "n_pass": [183, 12, 12]}
{"time": "2021-02-13 18:48:35.169017", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){} isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 41, "n_pass": [184, 13, 13]}
{"time": "2021-02-13 18:48:36.471366", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown = true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 40, "n_pass": [186, 14, 14]}
{"time": "2021-02-13 18:48:37.788669", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown= true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 39, "n_pass": [188, 15, 15]}
{"time": "2021-02-13 18:48:39.102756", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true; try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 38, "n_pass": [190, 16, 16]}
{"time": "2021-02-13 18:48:40.429931", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try {  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 37, "n_pass": [193, 17, 17]}
{"time": "2021-02-13 18:48:41.729109", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{  } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 36, "n_pass": [195, 18, 18]}
{"time": "2021-02-13 18:48:43.024760", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{ } catch (WindowManager.BadTokenException e) {} }", "n_tokens": 35, "n_pass": [197, 19, 19]}
{"time": "2021-02-13 18:48:44.347984", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{} catch (WindowManager.BadTokenException e) {} }", "n_tokens": 34, "n_pass": [198, 20, 20]}
{"time": "2021-02-13 18:48:45.663303", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{}catch (WindowManager.BadTokenException e) {} }", "n_tokens": 33, "n_pass": [200, 21, 21]}
{"time": "2021-02-13 18:48:51.671276", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{}catch (WindowManager.BadTokenException e){} }", "n_tokens": 32, "n_pass": [245, 24, 22]}
{"time": "2021-02-13 18:48:52.971864", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{}catch (WindowManager.BadTokenException e){}}", "n_tokens": 31, "n_pass": [248, 25, 23]}
{"time": "2021-02-13 18:48:56.289210", "score": "0.2706", "loss": "1.9051", "code": "void show(){if(isShown){}isShown=true;try{}catch(WindowManager.BadTokenException e){}}", "n_tokens": 30, "n_pass": [270, 27, 24]}
{"time": "2021-02-13 18:48:57.615075", "score": "0.2472", "loss": "2.0942", "code": "void show(){if(isShown){}isShown=true;try{}catch(WindowManagerBadTokenException e){}}", "n_tokens": 29, "n_pass": [273, 28, 25]}
{"time": "2021-02-13 18:49:02.248546", "score": "0.2941", "loss": "1.9247", "code": "void show(){if(isShown){}isShown=true;try{}catch(BadTokenException e){}}", "n_tokens": 28, "n_pass": [302, 31, 26]}

Minimal simplified code:
void show(){if(isShown){}isShown=true;try{}catch(BadTokenException e){}}

