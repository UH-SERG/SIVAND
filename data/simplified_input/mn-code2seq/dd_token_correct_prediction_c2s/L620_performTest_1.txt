
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/test/java/org/bouncycastle/crypto/test/TnepresTest_performTest.java
method_name = performTest
method_body = public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode("9ea101ecebaa41c712bcb0d9bab3e2e4")); doCbcMonte(Hex.decode("9ea101ecebaa41c712bcb0d9bab3e2e4"), Hex.decode("9ea101ecebaa41c712bcb0d9bab3e2e4"), Hex.decode("b4813d8a66244188b9e92c75913fa2f4"), Hex.decode("f86b2c265b9c75869f31e2c684c13e9f")); }
predict, score, loss = performTest, 0.8175250887870789, 0.469220906496048

Trace of simplified code(s):
{"time": "2021-02-13 19:05:43.492431", "score": "0.7137", "loss": "0.8492", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"b4813d8a66244188b9e92c75913fa2f4\"), Hex.decode(\"f86b2c265b9c75869f31e2c684c13e9f\")); }", "n_tokens": 229, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:05:44.853889", "score": "0.7165", "loss": "0.8369", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e42c75913fa2f4\"), Hex.decode(\"f86b2c265b9c75869f31e2c684c13e9f\")); }", "n_tokens": 200, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 19:05:46.191189", "score": "0.7936", "loss": "0.5397", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4b9c75869f31e2c684c13e9f\")); }", "n_tokens": 171, "n_pass": [26, 3, 3]}
{"time": "2021-02-13 19:05:47.565111", "score": "0.7936", "loss": "0.5397", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e684c13e9f\")); }", "n_tokens": 156, "n_pass": [45, 4, 4]}
{"time": "2021-02-13 19:05:48.905538", "score": "0.7875", "loss": "0.5582", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"99bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e684c13e9f\")); }", "n_tokens": 142, "n_pass": [51, 5, 5]}
{"time": "2021-02-13 19:05:50.242658", "score": "0.7897", "loss": "0.5508", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"99bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa684c13e9f\")); }", "n_tokens": 127, "n_pass": [56, 6, 6]}
{"time": "2021-02-13 19:05:51.587930", "score": "0.809", "loss": "0.4866", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new byte[16], Hex.decode(\"99bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa9f\")); }", "n_tokens": 120, "n_pass": [84, 7, 7]}
{"time": "2021-02-13 19:05:54.264428", "score": "0.8566", "loss": "0.3445", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"99bab3e2e4\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa9f\")); }", "n_tokens": 113, "n_pass": [91, 9, 8]}
{"time": "2021-02-13 19:05:55.595488", "score": "0.7813", "loss": "0.5815", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9ea101ecebaa41c712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa9f\")); }", "n_tokens": 106, "n_pass": [93, 10, 9]}
{"time": "2021-02-13 19:05:56.946892", "score": "0.8381", "loss": "0.3957", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9ea712bcb0d9bab3e2e4\"), Hex.decode(\"9ea101ecebaa9f\")); }", "n_tokens": 99, "n_pass": [96, 11, 10]}
{"time": "2021-02-13 19:05:58.308336", "score": "0.755", "loss": "0.6783", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea101ecebaa9f\")); }", "n_tokens": 92, "n_pass": [97, 12, 11]}
{"time": "2021-02-13 19:06:03.685992", "score": "0.7527", "loss": "0.6863", "code": "public void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 88, "n_pass": [142, 16, 12]}
{"time": "2021-02-13 19:06:11.414756", "score": "0.7527", "loss": "0.6863", "code": " void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 87, "n_pass": [222, 20, 13]}
{"time": "2021-02-13 19:06:12.742283", "score": "0.7527", "loss": "0.6863", "code": "void performTest() throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 86, "n_pass": [223, 21, 14]}
{"time": "2021-02-13 19:06:14.432653", "score": "0.7527", "loss": "0.6863", "code": "void performTest()throws Exception { super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 85, "n_pass": [228, 22, 15]}
{"time": "2021-02-13 19:06:15.851480", "score": "0.7527", "loss": "0.6863", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16], new Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 84, "n_pass": [232, 23, 16]}
{"time": "2021-02-13 19:06:18.517548", "score": "0.7892", "loss": "0.5514", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16], Hex.decode(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 82, "n_pass": [247, 25, 17]}
{"time": "2021-02-13 19:06:19.841876", "score": "0.7795", "loss": "0.5845", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16], Hex(\"9\")); doCbcMonte(Hex.decode(\"9eabab3e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 80, "n_pass": [249, 26, 18]}
{"time": "2021-02-13 19:06:22.534716", "score": "0.764", "loss": "0.6403", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16], Hex(\"9\")); doCbcMonte(Hex.decode(\"93e2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 78, "n_pass": [258, 28, 19]}
{"time": "2021-02-13 19:06:23.858257", "score": "0.7515", "loss": "0.6881", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16], Hex(\"9\")); doCbcMonte(Hex.decode(\"92e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 76, "n_pass": [259, 29, 20]}
{"time": "2021-02-13 19:06:32.598137", "score": "0.7964", "loss": "0.5248", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(Hex.decode(\"92e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 74, "n_pass": [293, 35, 21]}
{"time": "2021-02-13 19:06:33.941939", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"92e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 72, "n_pass": [299, 36, 22]}
{"time": "2021-02-13 19:06:46.338826", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"2e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 71, "n_pass": [405, 42, 23]}
{"time": "2021-02-13 19:06:47.667115", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e4\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 70, "n_pass": [406, 43, 24]}
{"time": "2021-02-13 19:06:50.332452", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"), Hex.decode(\"9ea9f\")); }", "n_tokens": 69, "n_pass": [408, 45, 25]}
{"time": "2021-02-13 19:06:51.655562", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"9ea9f\")); }", "n_tokens": 68, "n_pass": [412, 46, 26]}
{"time": "2021-02-13 19:06:54.308086", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\")); }", "n_tokens": 67, "n_pass": [418, 48, 27]}
{"time": "2021-02-13 19:06:59.637664", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{ super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 66, "n_pass": [426, 52, 28]}
{"time": "2021-02-13 19:07:01.679006", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{super.performTest(); doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 65, "n_pass": [437, 53, 29]}
{"time": "2021-02-13 19:07:04.325298", "score": "0.7498", "loss": "0.6942", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(new byte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 64, "n_pass": [444, 55, 30]}
{"time": "2021-02-13 19:07:05.650008", "score": "0.8131", "loss": "0.468", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[16], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 63, "n_pass": [448, 56, 31]}
{"time": "2021-02-13 19:07:06.978800", "score": "0.8131", "loss": "0.468", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6], new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 62, "n_pass": [451, 57, 32]}
{"time": "2021-02-13 19:07:08.302063", "score": "0.8131", "loss": "0.468", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],new byte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 61, "n_pass": [455, 58, 33]}
{"time": "2021-02-13 19:07:09.617838", "score": "0.8192", "loss": "0.4448", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[16],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 60, "n_pass": [457, 59, 34]}
{"time": "2021-02-13 19:07:10.935271", "score": "0.8192", "loss": "0.4448", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"9\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 59, "n_pass": [460, 60, 35]}
{"time": "2021-02-13 19:07:12.281222", "score": "0.8457", "loss": "0.368", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\")); doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 58, "n_pass": [466, 61, 36]}
{"time": "2021-02-13 19:07:13.616467", "score": "0.8457", "loss": "0.368", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte(decode(\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 57, "n_pass": [471, 62, 37]}
{"time": "2021-02-13 19:07:14.926062", "score": "0.8768", "loss": "0.2842", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"e\"),Hex.decode(\"ea9f\"));}", "n_tokens": 56, "n_pass": [474, 63, 38]}
{"time": "2021-02-13 19:07:16.244560", "score": "0.8827", "loss": "0.2692", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hex.decode(\"ea9f\"));}", "n_tokens": 55, "n_pass": [477, 64, 39]}
{"time": "2021-02-13 19:07:17.589580", "score": "0.8243", "loss": "0.4331", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hexdecode(\"ea9f\"));}", "n_tokens": 54, "n_pass": [482, 65, 40]}
{"time": "2021-02-13 19:07:18.905516", "score": "0.8697", "loss": "0.3023", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hex(\"ea9f\"));}", "n_tokens": 53, "n_pass": [483, 66, 41]}
{"time": "2021-02-13 19:07:20.220672", "score": "0.8407", "loss": "0.384", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hex(\"9f\"));}", "n_tokens": 52, "n_pass": [486, 67, 42]}
{"time": "2021-02-13 19:07:21.557695", "score": "0.8407", "loss": "0.384", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hex(\"f\"));}", "n_tokens": 51, "n_pass": [487, 68, 43]}
{"time": "2021-02-13 19:07:22.877843", "score": "0.8223", "loss": "0.44", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),Hex(\"\"));}", "n_tokens": 50, "n_pass": [488, 69, 44]}
{"time": "2021-02-13 19:07:26.263659", "score": "0.8081", "loss": "0.4865", "code": "void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(\"\"));doCbcMonte((\"\"),(\"\"));}", "n_tokens": 49, "n_pass": [536, 71, 45]}

Minimal simplified code:
void performTest()throws Exception{super.performTest();doCbcMonte(newbyte[6],newbyte[6],(""));doCbcMonte((""),(""));}

