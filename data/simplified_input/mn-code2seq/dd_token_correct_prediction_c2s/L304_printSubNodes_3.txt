
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/CopyStatementNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, "subquery: "); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, "columnList: "); columnList.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9975182414054871, 0.00834411010146141

Trace of simplified code(s):
{"time": "2021-02-13 13:35:02.494747", "score": "0.9975", "loss": "0.0083", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 102, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:35:04.236234", "score": "0.9558", "loss": "0.1601", "code": "public void printSubNodes() { super.printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 99, "n_pass": [94, 2, 2]}
{"time": "2021-02-13 13:35:05.569213", "score": "0.7165", "loss": "1.5631", "code": "public void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(depth, \"subquery: \"); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 96, "n_pass": [95, 3, 3]}
{"time": "2021-02-13 13:35:06.903629", "score": "0.7093", "loss": "1.6188", "code": "public void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \"); subquery.treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 93, "n_pass": [103, 4, 4]}
{"time": "2021-02-13 13:35:08.259691", "score": "0.7405", "loss": "1.4335", "code": "public void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint(depth + 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 90, "n_pass": [106, 5, 5]}
{"time": "2021-02-13 13:35:09.589160", "score": "0.7442", "loss": "1.4022", "code": "public void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 87, "n_pass": [108, 6, 6]}
{"time": "2021-02-13 13:35:10.954070", "score": "0.7607", "loss": "1.4377", "code": "public void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 83, "n_pass": [119, 7, 7]}
{"time": "2021-02-13 13:35:15.007124", "score": "0.7607", "loss": "1.4377", "code": " void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 82, "n_pass": [204, 8, 8]}
{"time": "2021-02-13 13:35:16.329530", "score": "0.7607", "loss": "1.4377", "code": "void printSubNodes() {printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 81, "n_pass": [205, 9, 9]}
{"time": "2021-02-13 13:35:18.011490", "score": "0.7607", "loss": "1.4377", "code": "void printSubNodes(){printSubNodes(depth); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 80, "n_pass": [210, 10, 10]}
{"time": "2021-02-13 13:35:20.667297", "score": "0.7695", "loss": "1.3577", "code": "void printSubNodes(){printSubNodes(); if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 79, "n_pass": [214, 12, 11]}
{"time": "2021-02-13 13:35:21.986730", "score": "0.7695", "loss": "1.3577", "code": "void printSubNodes(){printSubNodes();if (subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 78, "n_pass": [217, 13, 12]}
{"time": "2021-02-13 13:35:23.343461", "score": "0.7695", "loss": "1.3577", "code": "void printSubNodes(){printSubNodes();if(subquery != null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 77, "n_pass": [219, 14, 13]}
{"time": "2021-02-13 13:35:24.681692", "score": "0.7695", "loss": "1.3577", "code": "void printSubNodes(){printSubNodes();if(subquery!= null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 76, "n_pass": [222, 15, 14]}
{"time": "2021-02-13 13:35:25.997615", "score": "0.7222", "loss": "1.6179", "code": "void printSubNodes(){printSubNodes();if(subquery= null) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 75, "n_pass": [223, 16, 15]}
{"time": "2021-02-13 13:35:27.310773", "score": "0.6866", "loss": "1.9199", "code": "void printSubNodes(){printSubNodes();if(subquerynull) { printLabel(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 73, "n_pass": [224, 17, 16]}
{"time": "2021-02-13 13:35:28.628557", "score": "0.7179", "loss": "1.6942", "code": "void printSubNodes(){printSubNodes();if(subquerynull) {(\"subquery: \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 71, "n_pass": [227, 18, 17]}
{"time": "2021-02-13 13:35:29.978472", "score": "0.6861", "loss": "2.0259", "code": "void printSubNodes(){printSubNodes();if(subquerynull) {(\" \").treePrint( 1); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 69, "n_pass": [229, 19, 18]}
{"time": "2021-02-13 13:35:31.300690", "score": "0.676", "loss": "2.1042", "code": "void printSubNodes(){printSubNodes();if(subquerynull) {(\" \").treePrint(); } if (columnList != null) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 67, "n_pass": [233, 20, 19]}
{"time": "2021-02-13 13:35:33.952703", "score": "0.7215", "loss": "1.654", "code": "void printSubNodes(){printSubNodes();if(subquerynull) {(\" \").treePrint(); } if (columnList != null) { printLabel(depth, \" \");(depth + 1); } }", "n_tokens": 65, "n_pass": [246, 22, 20]}
{"time": "2021-02-13 13:35:35.987440", "score": "0.7441", "loss": "1.4489", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel(depth, \" \");(depth + 1); } }", "n_tokens": 64, "n_pass": [267, 23, 21]}
{"time": "2021-02-13 13:35:37.321123", "score": "0.7487", "loss": "1.4484", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \" \");(depth + 1); } }", "n_tokens": 62, "n_pass": [284, 24, 22]}
{"time": "2021-02-13 13:35:45.345420", "score": "0.7864", "loss": "1.1372", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(depth + 1); } }", "n_tokens": 61, "n_pass": [372, 25, 23]}
{"time": "2021-02-13 13:35:46.657920", "score": "0.7731", "loss": "1.217", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");( + 1); } }", "n_tokens": 60, "n_pass": [376, 26, 24]}
{"time": "2021-02-13 13:35:47.966741", "score": "0.7731", "loss": "1.217", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(+ 1); } }", "n_tokens": 59, "n_pass": [377, 27, 25]}
{"time": "2021-02-13 13:35:49.287672", "score": "0.7553", "loss": "1.3372", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");( 1); } }", "n_tokens": 58, "n_pass": [378, 28, 26]}
{"time": "2021-02-13 13:35:50.598272", "score": "0.7553", "loss": "1.3372", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(1); } }", "n_tokens": 57, "n_pass": [379, 29, 27]}
{"time": "2021-02-13 13:35:51.910474", "score": "0.7553", "loss": "1.3372", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(1);} }", "n_tokens": 56, "n_pass": [383, 30, 28]}
{"time": "2021-02-13 13:35:53.220893", "score": "0.7553", "loss": "1.3372", "code": "void printSubNodes(){printSubNodes();if(null) {(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 55, "n_pass": [385, 31, 29]}
{"time": "2021-02-13 13:35:55.245054", "score": "0.7553", "loss": "1.3372", "code": "void printSubNodes(){printSubNodes();if(null){(\" \").treePrint(); } if (columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 54, "n_pass": [401, 32, 30]}
{"time": "2021-02-13 13:35:56.558747", "score": "0.7814", "loss": "1.1359", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint(); } if (columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 53, "n_pass": [405, 33, 31]}
{"time": "2021-02-13 13:35:57.874545", "score": "0.7814", "loss": "1.1359", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();} if (columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 52, "n_pass": [413, 34, 32]}
{"time": "2021-02-13 13:35:59.216671", "score": "0.7814", "loss": "1.1359", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if (columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 51, "n_pass": [415, 35, 33]}
{"time": "2021-02-13 13:36:00.531711", "score": "0.7814", "loss": "1.1359", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList != null) { printLabel( \"\");(1);}}", "n_tokens": 50, "n_pass": [417, 36, 34]}
{"time": "2021-02-13 13:36:01.863785", "score": "0.7814", "loss": "1.1359", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList!= null) { printLabel( \"\");(1);}}", "n_tokens": 49, "n_pass": [420, 37, 35]}
{"time": "2021-02-13 13:36:03.175013", "score": "0.7349", "loss": "1.4784", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList= null) { printLabel( \"\");(1);}}", "n_tokens": 48, "n_pass": [421, 38, 36]}
{"time": "2021-02-13 13:36:04.487982", "score": "0.7349", "loss": "1.4784", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList=null) { printLabel( \"\");(1);}}", "n_tokens": 47, "n_pass": [423, 39, 37]}
{"time": "2021-02-13 13:36:05.811904", "score": "0.7349", "loss": "1.4784", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList=null){ printLabel( \"\");(1);}}", "n_tokens": 46, "n_pass": [426, 40, 38]}
{"time": "2021-02-13 13:36:07.124881", "score": "0.7349", "loss": "1.4784", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList=null){printLabel( \"\");(1);}}", "n_tokens": 45, "n_pass": [428, 41, 39]}
{"time": "2021-02-13 13:36:08.435102", "score": "0.8793", "loss": "0.5134", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList=null){( \"\");(1);}}", "n_tokens": 44, "n_pass": [429, 42, 40]}
{"time": "2021-02-13 13:36:09.743276", "score": "0.8793", "loss": "0.5134", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList=null){(\"\");(1);}}", "n_tokens": 43, "n_pass": [431, 43, 41]}
{"time": "2021-02-13 13:36:11.774975", "score": "0.8729", "loss": "0.533", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnListnull){(\"\");(1);}}", "n_tokens": 42, "n_pass": [470, 44, 42]}
{"time": "2021-02-13 13:36:13.084920", "score": "0.8623", "loss": "0.5978", "code": "void printSubNodes(){printSubNodes();if(null){(\"\").treePrint();}if(columnList){(\"\");(1);}}", "n_tokens": 41, "n_pass": [471, 45, 43]}

Minimal simplified code:
void printSubNodes(){printSubNodes();if(null){("").treePrint();}if(columnList){("");(1);}}

