
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bluestreak01__questdb/core/src/main/java/com/questdb/cairo/VirtualMemory_getDouble.java
method_name = getDouble
method_body = public final double getDouble(long offset) { if (roOffsetLo < offset && offset < roOffsetHi - 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }
predict, score, loss = getDouble, 0.9298727512359619, 0.29956868290901184

Trace of simplified code(s):
{"time": "2021-02-13 23:28:16.915138", "score": "0.9299", "loss": "0.2996", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset && offset < roOffsetHi - 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }", "n_tokens": 70, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:28:18.237214", "score": "0.893", "loss": "0.3487", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(absolutePointer + offset); } return getDouble0(offset); }", "n_tokens": 61, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 23:28:19.599016", "score": "0.9578", "loss": "0.1536", "code": "public final double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 56, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 23:28:20.935512", "score": "0.9578", "loss": "0.1536", "code": "double getDouble(long offset) { if (roOffsetLo < offset & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 52, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 23:28:22.274104", "score": "0.9638", "loss": "0.1348", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { return Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 48, "n_pass": [58, 5, 5]}
{"time": "2021-02-13 23:28:23.923166", "score": "0.982", "loss": "0.0809", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe.getUnsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 46, "n_pass": [95, 6, 6]}
{"time": "2021-02-13 23:28:25.237668", "score": "0.9829", "loss": "0.104", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe().getDouble(); } return getDouble0(offset); }", "n_tokens": 44, "n_pass": [97, 7, 7]}
{"time": "2021-02-13 23:28:26.542034", "score": "0.9796", "loss": "0.0934", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe.getDouble(); } return getDouble0(offset); }", "n_tokens": 42, "n_pass": [98, 8, 8]}
{"time": "2021-02-13 23:28:27.898478", "score": "0.9003", "loss": "0.3979", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe(); } return getDouble0(offset); }", "n_tokens": 40, "n_pass": [99, 9, 9]}
{"time": "2021-02-13 23:28:29.208125", "score": "0.9347", "loss": "0.2997", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe; } return getDouble0(offset); }", "n_tokens": 38, "n_pass": [100, 10, 10]}
{"time": "2021-02-13 23:28:31.885653", "score": "0.86", "loss": "1.0004", "code": "double getDouble(long offset) { if (roOffsetLo & 8) { Unsafe; } return getDouble0; }", "n_tokens": 35, "n_pass": [104, 12, 11]}
{"time": "2021-02-13 23:28:33.582024", "score": "0.8477", "loss": "1.5274", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {; } return getDouble0; }", "n_tokens": 33, "n_pass": [117, 13, 12]}
{"time": "2021-02-13 23:28:34.875686", "score": "0.8477", "loss": "1.5274", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {} return getDouble0; }", "n_tokens": 31, "n_pass": [118, 14, 13]}
{"time": "2021-02-13 23:28:40.974457", "score": "0.8477", "loss": "1.5274", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {}return getDouble0; }", "n_tokens": 30, "n_pass": [162, 16, 14]}
{"time": "2021-02-13 23:28:42.293649", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset) { if (roOffsetLo & 8) {} getDouble0; }", "n_tokens": 29, "n_pass": [163, 17, 15]}
{"time": "2021-02-13 23:28:45.660052", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){ if (roOffsetLo & 8) {} getDouble0; }", "n_tokens": 28, "n_pass": [175, 19, 16]}
{"time": "2021-02-13 23:28:46.984476", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){if (roOffsetLo & 8) {} getDouble0; }", "n_tokens": 27, "n_pass": [177, 20, 17]}
{"time": "2021-02-13 23:28:48.352635", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){if(roOffsetLo & 8) {} getDouble0; }", "n_tokens": 26, "n_pass": [179, 21, 18]}
{"time": "2021-02-13 23:28:49.671829", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){if(roOffsetLo& 8) {} getDouble0; }", "n_tokens": 25, "n_pass": [182, 22, 19]}
{"time": "2021-02-13 23:28:51.011145", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){if(roOffsetLo&8) {} getDouble0; }", "n_tokens": 24, "n_pass": [184, 23, 20]}
{"time": "2021-02-13 23:28:52.324451", "score": "0.9494", "loss": "0.8162", "code": "double getDouble(long offset){if(roOffsetLo&8){} getDouble0; }", "n_tokens": 23, "n_pass": [187, 24, 21]}
{"time": "2021-02-13 23:28:55.730395", "score": "0.9467", "loss": "0.4454", "code": "double getDouble(long offset){if(roOffsetLo8){} getDouble0; }", "n_tokens": 22, "n_pass": [205, 26, 22]}
{"time": "2021-02-13 23:28:57.067522", "score": "0.9467", "loss": "0.4454", "code": "double getDouble(long offset){if(roOffsetLo){} getDouble0; }", "n_tokens": 21, "n_pass": [206, 27, 23]}
{"time": "2021-02-13 23:29:01.543435", "score": "0.9467", "loss": "0.4454", "code": "double getDouble(long offset){if(roOffsetLo){}getDouble0; }", "n_tokens": 20, "n_pass": [231, 29, 24]}
{"time": "2021-02-13 23:29:02.862299", "score": "0.9467", "loss": "0.4454", "code": "double getDouble(long offset){if(roOffsetLo){}getDouble; }", "n_tokens": 19, "n_pass": [232, 30, 25]}
{"time": "2021-02-13 23:29:04.191665", "score": "0.9467", "loss": "0.4454", "code": "double getDouble(long offset){if(roOffsetLo){}getDouble;}", "n_tokens": 18, "n_pass": [234, 31, 26]}

Minimal simplified code:
double getDouble(long offset){if(roOffsetLo){}getDouble;}

