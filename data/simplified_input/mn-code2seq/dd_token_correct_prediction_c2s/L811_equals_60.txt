
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pg/src/main/java/org/bouncycastle/bcpg/UserIDPacket_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (o instanceof UserIDPacket) { return Arrays.areEqual(this.idData, ((UserIDPacket) o).idData); } return false; }
predict, score, loss = equals, 0.9156204462051392, 0.09989973902702332

Trace of simplified code(s):
{"time": "2021-02-13 22:30:17.709708", "score": "0.9156", "loss": "0.0999", "code": "public boolean equals(Object o) { if (o instanceof UserIDPacket) { return Arrays.areEqual(this.idData, ((UserIDPacket) o).idData); } return false; }", "n_tokens": 56, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 22:30:21.003262", "score": "0.9601", "loss": "0.0467", "code": "public boolean equals(Object o) { if (o ) { return Arrays.areEqual(this.idData, ((UserIDPacket) o).idData); } return false; }", "n_tokens": 53, "n_pass": [50, 3, 2]}
{"time": "2021-02-13 22:30:25.760037", "score": "0.9423", "loss": "0.0754", "code": "public boolean equals(Object o) { if (o ) { Arrays.areEqual(this.idData, ((UserIDPacket) o).idData); } return false; }", "n_tokens": 51, "n_pass": [98, 5, 3]}
{"time": "2021-02-13 22:30:28.849931", "score": "0.9506", "loss": "0.077", "code": "public boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket) o).idData); } return false; }", "n_tokens": 49, "n_pass": [101, 7, 4]}
{"time": "2021-02-13 22:30:30.603370", "score": "0.8989", "loss": "0.1755", "code": "public boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); } return false; }", "n_tokens": 47, "n_pass": [105, 8, 5]}
{"time": "2021-02-13 22:30:32.009414", "score": "0.8979", "loss": "0.1949", "code": "public boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); } false; }", "n_tokens": 45, "n_pass": [110, 9, 6]}
{"time": "2021-02-13 22:30:33.377706", "score": "0.8113", "loss": "0.3049", "code": "public boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 43, "n_pass": [111, 10, 7]}
{"time": "2021-02-13 22:30:34.807782", "score": "0.8113", "loss": "0.3049", "code": " boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 42, "n_pass": [113, 11, 8]}
{"time": "2021-02-13 22:30:36.164010", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o) { if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 41, "n_pass": [114, 12, 9]}
{"time": "2021-02-13 22:30:44.748264", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){ if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 40, "n_pass": [177, 14, 10]}
{"time": "2021-02-13 22:30:46.151057", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){if (o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 39, "n_pass": [179, 15, 11]}
{"time": "2021-02-13 22:30:47.606337", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){if(o ) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 38, "n_pass": [181, 16, 12]}
{"time": "2021-02-13 22:30:49.077541", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){if(o) { Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 37, "n_pass": [184, 17, 13]}
{"time": "2021-02-13 22:30:50.440674", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){if(o){ Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 36, "n_pass": [186, 18, 14]}
{"time": "2021-02-13 22:30:51.826131", "score": "0.8113", "loss": "0.3049", "code": "boolean equals(Object o){if(o){Arrays.areEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 35, "n_pass": [188, 19, 15]}
{"time": "2021-02-13 22:30:53.225808", "score": "0.7651", "loss": "0.4399", "code": "boolean equals(Object o){if(o){ArraysareEqual(this, ((UserIDPacket)).idData); }  }", "n_tokens": 34, "n_pass": [190, 20, 16]}
{"time": "2021-02-13 22:30:56.346745", "score": "0.7651", "loss": "0.4399", "code": "boolean equals(Object o){if(o){ArraysareEqual(this,((UserIDPacket)).idData); }  }", "n_tokens": 33, "n_pass": [195, 22, 17]}
{"time": "2021-02-13 22:30:57.718104", "score": "0.7651", "loss": "0.4399", "code": "boolean equals(Object o){if(o){ArraysareEqual(this,((UserIDPacket)).idData);}  }", "n_tokens": 32, "n_pass": [205, 23, 18]}
{"time": "2021-02-13 22:30:59.391165", "score": "0.7651", "loss": "0.4399", "code": "boolean equals(Object o){if(o){ArraysareEqual(this,((UserIDPacket)).idData);} }", "n_tokens": 31, "n_pass": [207, 24, 19]}
{"time": "2021-02-13 22:31:00.756659", "score": "0.7651", "loss": "0.4399", "code": "boolean equals(Object o){if(o){ArraysareEqual(this,((UserIDPacket)).idData);}}", "n_tokens": 30, "n_pass": [208, 25, 20]}
{"time": "2021-02-13 22:31:02.993459", "score": "0.8552", "loss": "0.2226", "code": "boolean equals(Object o){if(o){areEqual(this,((UserIDPacket)).idData);}}", "n_tokens": 29, "n_pass": [224, 26, 21]}

Minimal simplified code:
boolean equals(Object o){if(o){areEqual(this,((UserIDPacket)).idData);}}

