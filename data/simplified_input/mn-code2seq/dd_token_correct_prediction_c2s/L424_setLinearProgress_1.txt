
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/pnikosis__materialish-progress/library/src/main/java/com/pnikosis/materialishprogress/ProgressWheel_setLinearProgress.java
method_name = setLinearProgress
method_body = public void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }
predict, score, loss = setLinearProgress, 0.9856864213943481, 0.04908790439367294

Trace of simplified code(s):
{"time": "2021-02-13 15:45:20.151653", "score": "0.9857", "loss": "0.0491", "code": "public void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 37, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:45:23.440156", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear) { linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 35, "n_pass": [44, 3, 2]}
{"time": "2021-02-13 15:45:30.112296", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){ linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 34, "n_pass": [97, 5, 3]}
{"time": "2021-02-13 15:45:31.409830", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){linearProgress = isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 33, "n_pass": [98, 6, 4]}
{"time": "2021-02-13 15:45:32.733768", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){linearProgress= isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 32, "n_pass": [100, 7, 5]}
{"time": "2021-02-13 15:45:35.334487", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear; if (!isSpinning) { invalidate(); } }", "n_tokens": 31, "n_pass": [102, 9, 6]}
{"time": "2021-02-13 15:45:36.647440", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if (!isSpinning) { invalidate(); } }", "n_tokens": 30, "n_pass": [105, 10, 7]}
{"time": "2021-02-13 15:45:37.953309", "score": "0.9857", "loss": "0.0491", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(!isSpinning) { invalidate(); } }", "n_tokens": 29, "n_pass": [107, 11, 8]}
{"time": "2021-02-13 15:45:39.250668", "score": "0.986", "loss": "0.049", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning) { invalidate(); } }", "n_tokens": 28, "n_pass": [109, 12, 9]}
{"time": "2021-02-13 15:45:40.599343", "score": "0.986", "loss": "0.049", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning){ invalidate(); } }", "n_tokens": 27, "n_pass": [112, 13, 10]}
{"time": "2021-02-13 15:45:45.261941", "score": "0.986", "loss": "0.049", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning){ invalidate();} }", "n_tokens": 26, "n_pass": [148, 15, 11]}
{"time": "2021-02-13 15:45:46.565630", "score": "0.986", "loss": "0.049", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning){ invalidate();}}", "n_tokens": 25, "n_pass": [149, 16, 12]}
{"time": "2021-02-13 15:45:49.934145", "score": "0.986", "loss": "0.049", "code": "void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning){invalidate();}}", "n_tokens": 24, "n_pass": [169, 18, 13]}

Minimal simplified code:
void setLinearProgress(boolean isLinear){linearProgress=isLinear;if(isSpinning){invalidate();}}

