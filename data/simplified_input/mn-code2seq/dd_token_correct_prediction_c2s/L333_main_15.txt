
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/DaemonFromFactory_main.java
method_name = main
method_body = public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); exec.shutdown(); System.out.println("任务已经全部启动"); TimeUnit.MICROSECONDS.sleep(500); }
predict, score, loss = main, 0.9997672438621521, 0.00036903045838698745

Trace of simplified code(s):
{"time": "2021-02-13 14:04:51.197054", "score": "0.9996", "loss": "0.0007", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); exec.shutdown(); System.out.println(\"\u4efb\u52a1\u5df2\u7ecf\u5168\u90e8\u542f\u52a8\"); TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 108, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 14:04:52.950443", "score": "0.9974", "loss": "0.0037", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out.println(\"\u4efb\u52a1\u5df2\u7ecf\u5168\u90e8\u542f\u52a8\"); TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 101, "n_pass": [55, 2, 2]}
{"time": "2021-02-13 14:04:54.313661", "score": "0.9996", "loss": "0.0006", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit.MICROSECONDS.sleep(500); }", "n_tokens": 94, "n_pass": [57, 3, 3]}
{"time": "2021-02-13 14:04:56.071961", "score": "0.9997", "loss": "0.0005", "code": "public static void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 90, "n_pass": [101, 4, 4]}
{"time": "2021-02-13 14:04:57.412619", "score": "0.9997", "loss": "0.0005", "code": " void main(String[] args) throws InterruptedException { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 87, "n_pass": [104, 5, 5]}
{"time": "2021-02-13 14:04:59.129902", "score": "0.9997", "loss": "0.0005", "code": " void main(String[] args)  { ExecutorService exec = Executors.newCachedThreadPool(new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 84, "n_pass": [109, 6, 6]}
{"time": "2021-02-13 14:05:00.484250", "score": "0.9999", "loss": "0.0002", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i = 0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 81, "n_pass": [113, 7, 7]}
{"time": "2021-02-13 14:05:01.844167", "score": "0.9999", "loss": "0.0002", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0; i < 10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 78, "n_pass": [119, 8, 8]}
{"time": "2021-02-13 14:05:03.161124", "score": "0.9999", "loss": "0.0002", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0;  10; i++) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 75, "n_pass": [121, 9, 9]}
{"time": "2021-02-13 14:05:04.492000", "score": "0.9999", "loss": "0.0002", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (int i0;  10;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 71, "n_pass": [123, 10, 10]}
{"time": "2021-02-13 14:05:06.196250", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0;  10;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 68, "n_pass": [142, 11, 11]}
{"time": "2021-02-13 14:05:10.228784", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) exec.execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 66, "n_pass": [205, 12, 12]}
{"time": "2021-02-13 14:05:11.570107", "score": "0.9999", "loss": "0.0001", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(new DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 64, "n_pass": [207, 13, 13]}
{"time": "2021-02-13 14:05:12.893613", "score": "0.9998", "loss": "0.0002", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); System.out. TimeUnit(500); }", "n_tokens": 62, "n_pass": [209, 14, 14]}
{"time": "2021-02-13 14:05:14.218829", "score": "0.9997", "loss": "0.0004", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); out. TimeUnit(500); }", "n_tokens": 60, "n_pass": [213, 15, 15]}
{"time": "2021-02-13 14:05:15.540951", "score": "0.9996", "loss": "0.0005", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory());  TimeUnit(500); }", "n_tokens": 58, "n_pass": [214, 16, 16]}
{"time": "2021-02-13 14:05:16.867047", "score": "0.9996", "loss": "0.0005", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (500); }", "n_tokens": 56, "n_pass": [215, 17, 17]}
{"time": "2021-02-13 14:05:18.195441", "score": "0.9996", "loss": "0.0005", "code": " void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 54, "n_pass": [217, 18, 18]}
{"time": "2021-02-13 14:05:19.507601", "score": "0.9996", "loss": "0.0005", "code": "void main(String[] args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 53, "n_pass": [220, 19, 19]}
{"time": "2021-02-13 14:05:21.561264", "score": "0.9996", "loss": "0.0005", "code": "void main(String[]args)  { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 52, "n_pass": [228, 20, 20]}
{"time": "2021-02-13 14:05:22.869583", "score": "0.9996", "loss": "0.0005", "code": "void main(String[]args) { ExecutorService exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 51, "n_pass": [231, 21, 21]}
{"time": "2021-02-13 14:05:24.202696", "score": "0.999", "loss": "0.0012", "code": "void main(String[]args) { exec = (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 49, "n_pass": [233, 22, 22]}
{"time": "2021-02-13 14:05:25.510701", "score": "0.9993", "loss": "0.0009", "code": "void main(String[]args) { exec (new DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 47, "n_pass": [235, 23, 23]}
{"time": "2021-02-13 14:05:26.824543", "score": "0.9978", "loss": "0.0026", "code": "void main(String[]args) { exec (DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 45, "n_pass": [237, 24, 24]}
{"time": "2021-02-13 14:05:28.857110", "score": "0.9984", "loss": "0.0019", "code": "void main(String[]args) { (DaemonThreadFactory()); for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 43, "n_pass": [263, 25, 25]}
{"time": "2021-02-13 14:05:35.220371", "score": "0.9984", "loss": "0.0019", "code": "void main(String[]args) { (DaemonThreadFactory());for (0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 42, "n_pass": [326, 26, 26]}
{"time": "2021-02-13 14:05:36.555846", "score": "0.9984", "loss": "0.0019", "code": "void main(String[]args) { (DaemonThreadFactory());for(0; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 41, "n_pass": [328, 27, 27]}
{"time": "2021-02-13 14:05:37.885105", "score": "0.995", "loss": "0.0057", "code": "void main(String[]args) { (DaemonThreadFactory());for(; 0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 40, "n_pass": [330, 28, 28]}
{"time": "2021-02-13 14:05:39.205882", "score": "0.995", "loss": "0.0057", "code": "void main(String[]args) { (DaemonThreadFactory());for(;0;) execute(DaemonFromFactory()); (5); }", "n_tokens": 39, "n_pass": [332, 29, 29]}
{"time": "2021-02-13 14:05:40.558690", "score": "0.9861", "loss": "0.0154", "code": "void main(String[]args) { (DaemonThreadFactory());for(;;) execute(DaemonFromFactory()); (5); }", "n_tokens": 38, "n_pass": [333, 30, 30]}
{"time": "2021-02-13 14:05:41.881345", "score": "0.9861", "loss": "0.0154", "code": "void main(String[]args) { (DaemonThreadFactory());for(;;)execute(DaemonFromFactory()); (5); }", "n_tokens": 37, "n_pass": [336, 31, 31]}
{"time": "2021-02-13 14:05:43.197119", "score": "0.9964", "loss": "0.0052", "code": "void main(String[]args) { (DaemonThreadFactory());for(;;)(DaemonFromFactory()); (5); }", "n_tokens": 36, "n_pass": [337, 32, 32]}
{"time": "2021-02-13 14:05:44.519172", "score": "0.9964", "loss": "0.0052", "code": "void main(String[]args) { (DaemonThreadFactory());for(;;)(DaemonFromFactory());(5); }", "n_tokens": 35, "n_pass": [344, 33, 33]}
{"time": "2021-02-13 14:05:45.836004", "score": "0.9964", "loss": "0.0052", "code": "void main(String[]args) { (DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 34, "n_pass": [349, 34, 34]}
{"time": "2021-02-13 14:05:47.868124", "score": "0.9964", "loss": "0.0052", "code": "void main(String[]args){ (DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 33, "n_pass": [360, 35, 35]}
{"time": "2021-02-13 14:05:49.174254", "score": "0.9964", "loss": "0.0052", "code": "void main(String[]args){(DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}", "n_tokens": 32, "n_pass": [362, 36, 36]}

Minimal simplified code:
void main(String[]args){(DaemonThreadFactory());for(;;)(DaemonFromFactory());(5);}

