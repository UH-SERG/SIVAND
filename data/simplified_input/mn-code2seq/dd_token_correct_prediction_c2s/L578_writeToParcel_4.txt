
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/f2prateek__dart/dart-sample/module1-navigation/src/main/java/com/f2prateek/dart/model/SimpleParcelable_writeToParcel.java
method_name = writeToParcel
method_body = @Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }
predict, score, loss = writeToParcel, 0.9997758865356445, 0.001219967845827341

Trace of simplified code(s):
{"time": "2021-02-13 18:19:09.959454", "score": "0.9998", "loss": "0.0012", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt(anInt); dest.writeByte((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 66, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 18:19:11.294085", "score": "0.9997", "loss": "0.0014", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 : 0x00)); dest.writeFloat(aFloat); }", "n_tokens": 58, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 18:19:12.630380", "score": "0.9997", "loss": "0.0013", "code": "@Override public void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 54, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 18:19:13.934614", "score": "0.9972", "loss": "0.0372", "code": " void writeToParcel(Parcel dest, int flags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 50, "n_pass": [52, 4, 4]}
{"time": "2021-02-13 18:19:15.249138", "score": "0.9201", "loss": "0.688", "code": " void writeToParcel(Parcel destflags) { dest.writeInt((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 46, "n_pass": [55, 5, 5]}
{"time": "2021-02-13 18:19:16.595915", "score": "0.7934", "loss": "1.5444", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 0x01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 42, "n_pass": [57, 6, 6]}
{"time": "2021-02-13 18:19:17.936464", "score": "0.7873", "loss": "1.6624", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest.writeFloat(aFloat); }", "n_tokens": 40, "n_pass": [93, 7, 7]}
{"time": "2021-02-13 18:19:20.539412", "score": "0.8531", "loss": "1.0658", "code": " void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest.writeFloat; }", "n_tokens": 37, "n_pass": [100, 9, 8]}
{"time": "2021-02-13 18:19:27.158903", "score": "0.8531", "loss": "1.0658", "code": "void writeToParcel(Parcel destflags) {((byte) (aBoolean ? 01 :0)); dest.writeFloat; }", "n_tokens": 36, "n_pass": [157, 11, 9]}
{"time": "2021-02-13 18:19:28.815815", "score": "0.9758", "loss": "0.1617", "code": "void writeToParcel(Parcel flags) {((byte) (aBoolean ? 01 :0)); dest.writeFloat; }", "n_tokens": 35, "n_pass": [163, 12, 10]}
{"time": "2021-02-13 18:19:30.134565", "score": "0.9758", "loss": "0.1617", "code": "void writeToParcel(Parcel flags){((byte) (aBoolean ? 01 :0)); dest.writeFloat; }", "n_tokens": 34, "n_pass": [166, 13, 11]}
{"time": "2021-02-13 18:19:31.435753", "score": "0.9758", "loss": "0.1617", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean ? 01 :0)); dest.writeFloat; }", "n_tokens": 33, "n_pass": [172, 14, 12]}
{"time": "2021-02-13 18:19:32.722883", "score": "0.9758", "loss": "0.1617", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean? 01 :0)); dest.writeFloat; }", "n_tokens": 32, "n_pass": [175, 15, 13]}
{"time": "2021-02-13 18:19:34.034375", "score": "0.9758", "loss": "0.1617", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?01 :0)); dest.writeFloat; }", "n_tokens": 31, "n_pass": [177, 16, 14]}
{"time": "2021-02-13 18:19:35.332319", "score": "0.9747", "loss": "0.1618", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1 :0)); dest.writeFloat; }", "n_tokens": 30, "n_pass": [178, 17, 15]}
{"time": "2021-02-13 18:19:36.645778", "score": "0.9747", "loss": "0.1618", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0)); dest.writeFloat; }", "n_tokens": 29, "n_pass": [180, 18, 16]}
{"time": "2021-02-13 18:19:37.945219", "score": "0.9747", "loss": "0.1618", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest.writeFloat; }", "n_tokens": 28, "n_pass": [186, 19, 17]}
{"time": "2021-02-13 18:19:41.600745", "score": "0.9747", "loss": "0.1618", "code": "void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest.writeFloat;}", "n_tokens": 27, "n_pass": [216, 21, 18]}

Minimal simplified code:
void writeToParcel(Parcel flags){((byte)(aBoolean?1:0));dest.writeFloat;}

