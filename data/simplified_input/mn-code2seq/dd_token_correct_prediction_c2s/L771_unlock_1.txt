
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/authz/cover/SecurityService_unlock.java
method_name = unlock
method_body = public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject.authz.api.SecurityService service = getInstance(); if (service == null) return false; return service.unlock(param0, param1, param2, param3); }
predict, score, loss = unlock, 0.9995997548103333, 0.0026640070136636496

Trace of simplified code(s):
{"time": "2021-02-13 21:48:20.631157", "score": "0.9996", "loss": "0.0027", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject.authz.api.SecurityService service = getInstance(); if (service == null) return false; return service.unlock(param0, param1, param2, param3); }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:48:21.974657", "score": "0.9994", "loss": "0.0048", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0, param1, param2, param3); }", "n_tokens": 95, "n_pass": [24, 2, 2]}
{"time": "2021-02-13 21:48:23.317769", "score": "0.9994", "loss": "0.0059", "code": "public static boolean unlock(java.lang.String param0, java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 88, "n_pass": [50, 3, 3]}
{"time": "2021-02-13 21:48:25.011028", "score": "0.9994", "loss": "0.0064", "code": "public static boolean unlock(java.lang.java.lang.String param1, java.lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 82, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 21:48:26.719414", "score": "0.9986", "loss": "0.0149", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, java.util.Collection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 79, "n_pass": [93, 5, 5]}
{"time": "2021-02-13 21:48:28.048444", "score": "0.9975", "loss": "0.0281", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service == null) return false; return service.unlock(param0,  param3); }", "n_tokens": 76, "n_pass": [97, 6, 6]}
{"time": "2021-02-13 21:48:29.378320", "score": "0.9973", "loss": "0.022", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return false; return service.unlock(param0,  param3); }", "n_tokens": 72, "n_pass": [103, 7, 7]}
{"time": "2021-02-13 21:48:30.693126", "score": "0.9937", "loss": "0.03", "code": "public static boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 68, "n_pass": [105, 8, 8]}
{"time": "2021-02-13 21:48:32.003698", "score": "0.9937", "loss": "0.03", "code": " boolean unlock(java.lang.java.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 65, "n_pass": [110, 9, 9]}
{"time": "2021-02-13 21:48:33.709035", "score": "0.9937", "loss": "0.0402", "code": " boolean unlock(javajava.lang.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 62, "n_pass": [113, 10, 10]}
{"time": "2021-02-13 21:48:35.021064", "score": "0.9924", "loss": "0.0464", "code": " boolean unlock(java.String param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 59, "n_pass": [114, 11, 11]}
{"time": "2021-02-13 21:48:38.034751", "score": "0.9911", "loss": "0.0445", "code": " boolean unlock(javaString param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 58, "n_pass": [168, 12, 12]}
{"time": "2021-02-13 21:48:39.372611", "score": "0.9866", "loss": "0.0631", "code": " boolean unlock(java param1,lang.String param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 57, "n_pass": [169, 13, 13]}
{"time": "2021-02-13 21:48:40.686227", "score": "0.973", "loss": "0.1069", "code": " boolean unlock(java param1,lang param2, javaCollection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 55, "n_pass": [172, 14, 14]}
{"time": "2021-02-13 21:48:41.991434", "score": "0.9702", "loss": "0.1286", "code": " boolean unlock(java param1,lang param2,Collection param3) { org.sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 53, "n_pass": [175, 15, 15]}
{"time": "2021-02-13 21:48:43.322834", "score": "0.9734", "loss": "0.099", "code": " boolean unlock(java param1,lang param2,Collection param3) { sakaiproject; if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 51, "n_pass": [180, 16, 16]}
{"time": "2021-02-13 21:48:44.632734", "score": "0.9897", "loss": "0.0302", "code": " boolean unlock(java param1,lang param2,Collection param3) {  if (service ) return  service.unlock(param0,  param3); }", "n_tokens": 49, "n_pass": [181, 17, 17]}
{"time": "2021-02-13 21:48:45.961156", "score": "0.9514", "loss": "0.14", "code": " boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(param0,  param3); }", "n_tokens": 47, "n_pass": [186, 18, 18]}
{"time": "2021-02-13 21:48:48.574592", "score": "0.9514", "loss": "0.14", "code": " boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(param0,param3); }", "n_tokens": 45, "n_pass": [191, 20, 19]}
{"time": "2021-02-13 21:48:49.912514", "score": "0.9514", "loss": "0.14", "code": "boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(param0,param3); }", "n_tokens": 44, "n_pass": [195, 21, 20]}
{"time": "2021-02-13 21:48:53.591491", "score": "0.6933", "loss": "0.9357", "code": "boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(paramparam3); }", "n_tokens": 42, "n_pass": [217, 23, 21]}
{"time": "2021-02-13 21:48:54.893072", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(param); }", "n_tokens": 40, "n_pass": [218, 24, 22]}
{"time": "2021-02-13 21:49:02.277861", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param1,lang param2,Collection param3) {  if (service )  service.unlock(param);}", "n_tokens": 39, "n_pass": [278, 26, 23]}
{"time": "2021-02-13 21:49:04.298873", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param2,Collection param3) {  if (service )  service.unlock(param);}", "n_tokens": 38, "n_pass": [286, 27, 24]}
{"time": "2021-02-13 21:49:05.642789", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param3) {  if (service )  service.unlock(param);}", "n_tokens": 37, "n_pass": [291, 28, 25]}
{"time": "2021-02-13 21:49:06.965937", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param) {  if (service )  service.unlock(param);}", "n_tokens": 36, "n_pass": [296, 29, 26]}
{"time": "2021-02-13 21:49:08.270847", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){  if (service )  service.unlock(param);}", "n_tokens": 35, "n_pass": [298, 30, 27]}
{"time": "2021-02-13 21:49:09.578858", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){ if (service )  service.unlock(param);}", "n_tokens": 34, "n_pass": [300, 31, 28]}
{"time": "2021-02-13 21:49:10.876332", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){if (service )  service.unlock(param);}", "n_tokens": 33, "n_pass": [301, 32, 29]}
{"time": "2021-02-13 21:49:12.533852", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){if(service )  service.unlock(param);}", "n_tokens": 32, "n_pass": [303, 33, 30]}
{"time": "2021-02-13 21:49:13.857729", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){if(service)  service.unlock(param);}", "n_tokens": 31, "n_pass": [306, 34, 31]}
{"time": "2021-02-13 21:49:15.156763", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){if(service) service.unlock(param);}", "n_tokens": 30, "n_pass": [308, 35, 32]}
{"time": "2021-02-13 21:49:16.466275", "score": "0.7229", "loss": "0.8126", "code": "boolean unlock(java param,lang param,Collection param){if(service)service.unlock(param);}", "n_tokens": 29, "n_pass": [309, 36, 33]}
{"time": "2021-02-13 21:49:19.058601", "score": "0.7348", "loss": "0.8144", "code": "boolean unlock(java param,lang param,Collection param){if(service)service.unlock();}", "n_tokens": 28, "n_pass": [314, 38, 34]}

Minimal simplified code:
boolean unlock(java param,lang param,Collection param){if(service)service.unlock();}

