
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/modules/bayeux/java/org/apache/tomcat/bayeux/HttpError_toString.java
method_name = toString
method_body = public String toString() { if (cause != null) return code + ":" + status + " - [" + cause + "]"; else return code + ":" + status; }
predict, score, loss = toString, 0.9805890917778015, 0.047585628926754

Trace of simplified code(s):
{"time": "2021-02-13 21:37:00.709990", "score": "0.9806", "loss": "0.0476", "code": "public String toString() { if (cause != null) return code + \":\" + status + \" - [\" + cause + \"]\"; else return code + \":\" + status; }", "n_tokens": 73, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:37:02.058274", "score": "0.9657", "loss": "0.081", "code": "public String toString() { if (cause != null) return code +  \" - [\" + cause + \"]\"; else return code + \":\" + status; }", "n_tokens": 64, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 21:37:03.409390", "score": "0.9735", "loss": "0.0631", "code": "public String toString() { if (cause != null) return code +  cause + \"]\"; else return code + \":\" + status; }", "n_tokens": 55, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 21:37:05.125969", "score": "0.9651", "loss": "0.0831", "code": "public String toString() { if (cause != null) return code + \"]\"; else return code + \":\" + status; }", "n_tokens": 50, "n_pass": [43, 4, 4]}
{"time": "2021-02-13 21:37:06.454427", "score": "0.8628", "loss": "0.3484", "code": "public String toString() { if (cause != null) return code ; else return code + \":\" + status; }", "n_tokens": 45, "n_pass": [44, 5, 5]}
{"time": "2021-02-13 21:37:10.799989", "score": "0.9197", "loss": "0.1996", "code": "public String toString() { if (cause != null); else return code + \":\" + status; }", "n_tokens": 40, "n_pass": [54, 8, 6]}
{"time": "2021-02-13 21:37:12.474190", "score": "0.8323", "loss": "0.4615", "code": "public String toString() { if (cause != null); else return\":\" + status; }", "n_tokens": 35, "n_pass": [56, 9, 7]}
{"time": "2021-02-13 21:37:17.426013", "score": "0.8323", "loss": "0.4615", "code": "String toString() { if (cause != null); else return\":\" + status; }", "n_tokens": 33, "n_pass": [85, 12, 8]}
{"time": "2021-02-13 21:37:18.747199", "score": "0.7398", "loss": "0.8233", "code": "String toString() { if (cause= null); else return\":\" + status; }", "n_tokens": 31, "n_pass": [91, 13, 9]}
{"time": "2021-02-13 21:37:20.079177", "score": "0.7804", "loss": "0.6633", "code": "String toString() { if (causenull); else return\":\" + status; }", "n_tokens": 29, "n_pass": [92, 14, 10]}
{"time": "2021-02-13 21:37:21.395197", "score": "0.7424", "loss": "0.7886", "code": "String toString() { if (causenull); return\":\" + status; }", "n_tokens": 27, "n_pass": [95, 15, 11]}
{"time": "2021-02-13 21:37:25.676237", "score": "0.7804", "loss": "0.6633", "code": "String toString() { if (causenull)return\":\" + status; }", "n_tokens": 25, "n_pass": [107, 18, 12]}
{"time": "2021-02-13 21:37:30.706241", "score": "0.7632", "loss": "0.7671", "code": "String toString() { if (causenull)return\"\" + status; }", "n_tokens": 24, "n_pass": [143, 20, 13]}
{"time": "2021-02-13 21:37:32.028256", "score": "0.7632", "loss": "0.7671", "code": "String toString() { if (causenull)return\"\"+ status; }", "n_tokens": 23, "n_pass": [145, 21, 14]}
{"time": "2021-02-13 21:37:34.363523", "score": "0.7632", "loss": "0.7671", "code": "String toString(){ if (causenull)return\"\"+ status; }", "n_tokens": 22, "n_pass": [154, 22, 15]}
{"time": "2021-02-13 21:37:35.648413", "score": "0.7632", "loss": "0.7671", "code": "String toString(){if (causenull)return\"\"+ status; }", "n_tokens": 21, "n_pass": [156, 23, 16]}
{"time": "2021-02-13 21:37:36.935586", "score": "0.7632", "loss": "0.7671", "code": "String toString(){if(causenull)return\"\"+ status; }", "n_tokens": 20, "n_pass": [158, 24, 17]}
{"time": "2021-02-13 21:37:38.224690", "score": "0.822", "loss": "0.5475", "code": "String toString(){if(null)return\"\"+ status; }", "n_tokens": 19, "n_pass": [160, 25, 18]}
{"time": "2021-02-13 21:37:41.930315", "score": "0.822", "loss": "0.5475", "code": "String toString(){if(null)return\"\"+status; }", "n_tokens": 18, "n_pass": [184, 26, 19]}
{"time": "2021-02-13 21:37:43.220636", "score": "0.822", "loss": "0.5475", "code": "String toString(){if(null)return\"\"+status;}", "n_tokens": 17, "n_pass": [187, 27, 20]}

Minimal simplified code:
String toString(){if(null)return""+status;}

