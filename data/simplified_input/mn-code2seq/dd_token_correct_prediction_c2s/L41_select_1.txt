
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.netty/src/main/java/org/jboss/netty/channel/socket/nio/NioWorker_select.java
method_name = select
method_body = @Override protected int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }
predict, score, loss = select, 0.9810277223587036, 0.09083527326583862

Trace of simplified code(s):
{"time": "2021-02-13 04:21:08.935478", "score": "0.981", "loss": "0.0908", "code": "@Override protected int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 69, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:21:10.259635", "score": "0.9608", "loss": "0.221", "code": " int select(Selector selector, boolean quickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 65, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 04:21:11.562875", "score": "0.6896", "loss": "1.2238", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil.select(selector); } }", "n_tokens": 61, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 04:21:14.182690", "score": "0.5028", "loss": "1.9062", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil.select(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 56, "n_pass": [57, 5, 4]}
{"time": "2021-02-13 04:21:18.802057", "score": "0.5947", "loss": "1.9023", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil(selector, QUICK_SELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 54, "n_pass": [113, 8, 5]}
{"time": "2021-02-13 04:21:21.410267", "score": "0.8287", "loss": "1.4782", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil(selector, SELECT_TIMEOUT); } else { return SelectorUtil; } }", "n_tokens": 52, "n_pass": [115, 10, 6]}
{"time": "2021-02-13 04:21:24.014463", "score": "0.9001", "loss": "1.1124", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil(selector, SELECT_TIMEOUT); } else {SelectorUtil; } }", "n_tokens": 49, "n_pass": [121, 12, 7]}
{"time": "2021-02-13 04:21:25.334680", "score": "0.8794", "loss": "1.3481", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { return SelectorUtil(selector, SELECT_TIMEOUT); } else {} }", "n_tokens": 46, "n_pass": [122, 13, 8]}
{"time": "2021-02-13 04:21:27.027659", "score": "0.8669", "loss": "1.7059", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector, SELECT_TIMEOUT); } else {} }", "n_tokens": 44, "n_pass": [136, 14, 9]}
{"time": "2021-02-13 04:21:29.620817", "score": "0.6307", "loss": "1.5928", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector, TIMEOUT); } else {} }", "n_tokens": 42, "n_pass": [140, 16, 10]}
{"time": "2021-02-13 04:21:31.284681", "score": "0.807", "loss": "1.4355", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selectorTIMEOUT); } else {} }", "n_tokens": 40, "n_pass": [160, 17, 11]}
{"time": "2021-02-13 04:21:39.265670", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector); } else {} }", "n_tokens": 39, "n_pass": [218, 19, 12]}
{"time": "2021-02-13 04:21:40.562100", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);} else {} }", "n_tokens": 38, "n_pass": [220, 20, 13]}
{"time": "2021-02-13 04:21:41.876547", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);}else {} }", "n_tokens": 37, "n_pass": [222, 21, 14]}
{"time": "2021-02-13 04:21:43.175456", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);} {} }", "n_tokens": 36, "n_pass": [223, 22, 15]}
{"time": "2021-02-13 04:21:44.472334", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);}{} }", "n_tokens": 35, "n_pass": [224, 23, 16]}
{"time": "2021-02-13 04:21:45.769995", "score": "0.8728", "loss": "0.893", "code": " int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 33, "n_pass": [225, 24, 17]}
{"time": "2021-02-13 04:21:47.087363", "score": "0.8728", "loss": "0.893", "code": "int select(Selector selectorquickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 32, "n_pass": [227, 25, 18]}
{"time": "2021-02-13 04:21:49.105761", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect) throws IOException { if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 31, "n_pass": [234, 26, 19]}
{"time": "2021-02-13 04:21:50.402451", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException { if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 30, "n_pass": [237, 27, 20]}
{"time": "2021-02-13 04:21:51.698062", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException{ if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 29, "n_pass": [241, 28, 21]}
{"time": "2021-02-13 04:21:53.021682", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException{if (quickSelect) { SelectorUtil(selector);} }", "n_tokens": 28, "n_pass": [243, 29, 22]}
{"time": "2021-02-13 04:21:54.310887", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect) { SelectorUtil(selector);} }", "n_tokens": 27, "n_pass": [245, 30, 23]}
{"time": "2021-02-13 04:21:55.644717", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){ SelectorUtil(selector);} }", "n_tokens": 26, "n_pass": [249, 31, 24]}
{"time": "2021-02-13 04:21:56.958348", "score": "0.6108", "loss": "1.6249", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){SelectorUtil(selector);} }", "n_tokens": 25, "n_pass": [251, 32, 25]}
{"time": "2021-02-13 04:21:59.579745", "score": "0.4492", "loss": "2.1137", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){SelectorUtil();} }", "n_tokens": 24, "n_pass": [254, 34, 26]}
{"time": "2021-02-13 04:22:01.934665", "score": "0.4492", "loss": "2.1137", "code": "int select(Selector quickSelect)throws IOException{if(quickSelect){SelectorUtil();}}", "n_tokens": 23, "n_pass": [280, 35, 27]}

Minimal simplified code:
int select(Selector quickSelect)throws IOException{if(quickSelect){SelectorUtil();}}

