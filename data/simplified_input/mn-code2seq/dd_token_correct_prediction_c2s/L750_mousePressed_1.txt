
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mucommander__mucommander/src/main/java/com/mucommander/ui/table/EditableHeaderUI_mousePressed.java
method_name = mousePressed
method_body = @Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); TableColumnModel columnModel = header.getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }
predict, score, loss = mousePressed, 0.9975718855857849, 0.005069626960903406

Trace of simplified code(s):
{"time": "2021-02-13 21:24:06.260092", "score": "0.998", "loss": "0.0041", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); TableColumnModel columnModel = header.getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:24:07.667732", "score": "0.9983", "loss": "0.0035", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint();getColumnModel(); int index = columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 142, "n_pass": [52, 2, 2]}
{"time": "2021-02-13 21:24:09.048632", "score": "0.9984", "loss": "0.0034", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); columnModel.getColumnIndexAtX(p.x); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 132, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 21:24:10.415651", "score": "0.998", "loss": "0.0041", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); if (index != -1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 122, "n_pass": [54, 4, 4]}
{"time": "2021-02-13 21:24:11.783964", "score": "0.9981", "loss": "0.0039", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); if (index1) { if (header.editCellAt(index, e)) { setDispatchComponent(e); repostEvent(e); } } } }", "n_tokens": 117, "n_pass": [95, 5, 5]}
{"time": "2021-02-13 21:24:13.159079", "score": "0.9981", "loss": "0.004", "code": "@Override public void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 112, "n_pass": [100, 6, 6]}
{"time": "2021-02-13 21:24:14.531069", "score": "0.9972", "loss": "0.0062", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header.getResizingColumn() == null) { Point p = e.getPoint(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 108, "n_pass": [104, 7, 7]}
{"time": "2021-02-13 21:24:15.890640", "score": "0.9972", "loss": "0.0062", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { Point p = e.getPoint(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 103, "n_pass": [115, 8, 8]}
{"time": "2021-02-13 21:24:17.253857", "score": "0.9974", "loss": "0.0056", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { Point .getPoint(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 98, "n_pass": [118, 9, 9]}
{"time": "2021-02-13 21:24:18.613197", "score": "0.997", "loss": "0.0067", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {; repostEvent(e); } } } }", "n_tokens": 96, "n_pass": [184, 10, 10]}
{"time": "2021-02-13 21:24:19.977057", "score": "0.997", "loss": "0.0066", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {(e); } } } }", "n_tokens": 93, "n_pass": [195, 11, 11]}
{"time": "2021-02-13 21:24:21.330572", "score": "0.9969", "loss": "0.007", "code": " void mousePressed(MouseEvent e) { if (!SwingUtilities.isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 90, "n_pass": [196, 12, 12]}
{"time": "2021-02-13 21:24:23.044582", "score": "0.9968", "loss": "0.008", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) { return; } super.mousePressed(e); if (header== null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 88, "n_pass": [208, 13, 13]}
{"time": "2021-02-13 21:24:24.389844", "score": "0.9968", "loss": "0.008", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header== null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 86, "n_pass": [213, 14, 14]}
{"time": "2021-02-13 21:24:26.103338", "score": "0.9971", "loss": "0.0071", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header=null) { PointgetPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 84, "n_pass": [222, 15, 15]}
{"time": "2021-02-13 21:24:27.426790", "score": "0.9971", "loss": "0.007", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (header=null) {getPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 82, "n_pass": [225, 16, 16]}
{"time": "2021-02-13 21:24:29.488600", "score": "0.9971", "loss": "0.0067", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null) {getPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 80, "n_pass": [258, 17, 17]}
{"time": "2021-02-13 21:24:37.930670", "score": "0.9971", "loss": "0.0067", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint(); if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 79, "n_pass": [363, 18, 18]}
{"time": "2021-02-13 21:24:39.257459", "score": "0.9971", "loss": "0.0067", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if (index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 78, "n_pass": [368, 19, 19]}
{"time": "2021-02-13 21:24:40.605723", "score": "0.9971", "loss": "0.0067", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(index1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 77, "n_pass": [370, 20, 20]}
{"time": "2021-02-13 21:24:41.961145", "score": "0.9965", "loss": "0.0083", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1) { if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 76, "n_pass": [372, 21, 21]}
{"time": "2021-02-13 21:24:43.312875", "score": "0.9965", "loss": "0.0083", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){ if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 75, "n_pass": [375, 22, 22]}
{"time": "2021-02-13 21:24:44.635293", "score": "0.9965", "loss": "0.0083", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header.editCellAt(index, e)) {; } } } }", "n_tokens": 74, "n_pass": [377, 23, 23]}
{"time": "2021-02-13 21:24:45.979084", "score": "0.9977", "loss": "0.0054", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(index, e)) {; } } } }", "n_tokens": 72, "n_pass": [380, 24, 24]}
{"time": "2021-02-13 21:24:47.320416", "score": "0.998", "loss": "0.0048", "code": " void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 70, "n_pass": [382, 25, 25]}
{"time": "2021-02-13 21:24:48.667489", "score": "0.998", "loss": "0.0048", "code": "void mousePressed(MouseEvent e) { if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 69, "n_pass": [390, 26, 26]}
{"time": "2021-02-13 21:24:50.731700", "score": "0.998", "loss": "0.0048", "code": "void mousePressed(MouseEvent e){ if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 68, "n_pass": [399, 27, 27]}
{"time": "2021-02-13 21:24:52.056897", "score": "0.998", "loss": "0.0048", "code": "void mousePressed(MouseEvent e){if (!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 67, "n_pass": [401, 28, 28]}
{"time": "2021-02-13 21:24:53.391745", "score": "0.998", "loss": "0.0048", "code": "void mousePressed(MouseEvent e){if(!isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 66, "n_pass": [403, 29, 29]}
{"time": "2021-02-13 21:24:54.738343", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if(isLeftMouseButton(e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 65, "n_pass": [405, 30, 30]}
{"time": "2021-02-13 21:24:56.088053", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if((e)) {  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 64, "n_pass": [406, 31, 31]}
{"time": "2021-02-13 21:24:57.400737", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if((e)){  } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 63, "n_pass": [411, 32, 32]}
{"time": "2021-02-13 21:24:58.752376", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if((e)){ } super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 62, "n_pass": [413, 33, 33]}
{"time": "2021-02-13 21:25:00.064694", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if((e)){} super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 61, "n_pass": [414, 34, 34]}
{"time": "2021-02-13 21:25:01.406340", "score": "0.998", "loss": "0.0045", "code": "void mousePressed(MouseEvent e){if((e)){}super.mousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 60, "n_pass": [416, 35, 35]}
{"time": "2021-02-13 21:25:02.755734", "score": "0.7533", "loss": "0.7324", "code": "void mousePressed(MouseEvent e){if((e)){}supermousePressed(e); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 59, "n_pass": [418, 36, 36]}
{"time": "2021-02-13 21:25:04.421035", "score": "0.7631", "loss": "0.6853", "code": "void mousePressed(MouseEvent e){if((e)){}supermousePressed(); if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 58, "n_pass": [421, 37, 37]}
{"time": "2021-02-13 21:25:05.766164", "score": "0.7631", "loss": "0.6853", "code": "void mousePressed(MouseEvent e){if((e)){}supermousePressed();if (null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 57, "n_pass": [424, 38, 38]}
{"time": "2021-02-13 21:25:07.129604", "score": "0.7631", "loss": "0.6853", "code": "void mousePressed(MouseEvent e){if((e)){}supermousePressed();if(null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 56, "n_pass": [426, 39, 39]}
{"time": "2021-02-13 21:25:09.229653", "score": "0.905", "loss": "0.2413", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if (header(indexe)) {; } } } }", "n_tokens": 55, "n_pass": [467, 40, 40]}
{"time": "2021-02-13 21:25:13.673075", "score": "0.905", "loss": "0.2413", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if(header(indexe)) {; } } } }", "n_tokens": 54, "n_pass": [534, 41, 41]}
{"time": "2021-02-13 21:25:15.021723", "score": "0.9194", "loss": "0.1914", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((indexe)) {; } } } }", "n_tokens": 53, "n_pass": [536, 42, 42]}
{"time": "2021-02-13 21:25:16.369115", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)) {; } } } }", "n_tokens": 52, "n_pass": [538, 43, 43]}
{"time": "2021-02-13 21:25:17.717970", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){; } } } }", "n_tokens": 51, "n_pass": [542, 44, 44]}
{"time": "2021-02-13 21:25:19.055542", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){ } } } }", "n_tokens": 50, "n_pass": [544, 45, 45]}
{"time": "2021-02-13 21:25:20.400120", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){} } } }", "n_tokens": 49, "n_pass": [545, 46, 46]}
{"time": "2021-02-13 21:25:21.736909", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){}} } }", "n_tokens": 48, "n_pass": [547, 47, 47]}
{"time": "2021-02-13 21:25:23.072337", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){}}} }", "n_tokens": 47, "n_pass": [549, 48, 48]}
{"time": "2021-02-13 21:25:24.398829", "score": "0.9155", "loss": "0.2054", "code": "void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){}}}}", "n_tokens": 46, "n_pass": [551, 49, 49]}

Minimal simplified code:
void mousePressed(MouseEvent e){if((e)){}mousePressed();if(null){getPoint();if(1){if((e)){}}}}

