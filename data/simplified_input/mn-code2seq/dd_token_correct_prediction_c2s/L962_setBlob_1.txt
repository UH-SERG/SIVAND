
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MariaDB__mariadb-connector-j/src/main/java/org/mariadb/jdbc/BasePrepareStatement_setBlob.java
method_name = setBlob
method_body = public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream == null) { setNull(parameterIndex, ColumnType.BLOB); return; } setParameter(parameterIndex, new StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }
predict, score, loss = setBlob, 0.9524774551391602, 0.17664764821529388

Trace of simplified code(s):
{"time": "2021-02-14 02:52:02.862447", "score": "0.9525", "loss": "0.1766", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream == null) { setNull(parameterIndex, ColumnType.BLOB); return; } setParameter(parameterIndex, new StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }", "n_tokens": 80, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:52:05.573118", "score": "0.9175", "loss": "0.2924", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(parameterIndex, ColumnType.BLOB); return; } setParameter(parameterIndex, new StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }", "n_tokens": 75, "n_pass": [50, 3, 2]}
{"time": "2021-02-14 02:52:06.971996", "score": "0.9591", "loss": "0.1914", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); return; } setParameter(parameterIndex, new StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }", "n_tokens": 72, "n_pass": [100, 4, 3]}
{"time": "2021-02-14 02:52:09.690079", "score": "0.9591", "loss": "0.1914", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex, new StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }", "n_tokens": 69, "n_pass": [103, 6, 4]}
{"time": "2021-02-14 02:52:11.033908", "score": "0.9663", "loss": "0.1786", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream, noBackslashEscapes)); hasLongData = true; }", "n_tokens": 66, "n_pass": [106, 7, 5]}
{"time": "2021-02-14 02:52:12.359733", "score": "0.9534", "loss": "0.166", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream)); hasLongData = true; }", "n_tokens": 63, "n_pass": [108, 8, 6]}
{"time": "2021-02-14 02:52:13.777990", "score": "0.7951", "loss": "0.7073", "code": "public void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream)); hasLongData ; }", "n_tokens": 60, "n_pass": [111, 9, 7]}
{"time": "2021-02-14 02:52:15.198478", "score": "0.7951", "loss": "0.7073", "code": "void setBlob(final int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream)); hasLongData ; }", "n_tokens": 58, "n_pass": [113, 10, 8]}
{"time": "2021-02-14 02:52:16.896650", "score": "0.7951", "loss": "0.7073", "code": "void setBlob(int parameterIndex, final InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream)); hasLongData ; }", "n_tokens": 56, "n_pass": [116, 11, 9]}
{"time": "2021-02-14 02:52:18.225342", "score": "0.7951", "loss": "0.7073", "code": "void setBlob(int parameterIndex, InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream)); hasLongData ; }", "n_tokens": 54, "n_pass": [119, 12, 10]}
{"time": "2021-02-14 02:52:20.942290", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex, InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 51, "n_pass": [136, 14, 11]}
{"time": "2021-02-14 02:52:29.215977", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream) throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 50, "n_pass": [210, 16, 12]}
{"time": "2021-02-14 02:52:30.561559", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException { if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 49, "n_pass": [214, 17, 13]}
{"time": "2021-02-14 02:52:31.882421", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{ if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 48, "n_pass": [218, 18, 14]}
{"time": "2021-02-14 02:52:33.204720", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if (inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 47, "n_pass": [220, 19, 15]}
{"time": "2021-02-14 02:52:34.553517", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream) { setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 46, "n_pass": [222, 20, 16]}
{"time": "2021-02-14 02:52:35.889318", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){ setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 45, "n_pass": [226, 21, 17]}
{"time": "2021-02-14 02:52:37.266152", "score": "0.9944", "loss": "0.0231", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){setNull(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 44, "n_pass": [228, 22, 18]}
{"time": "2021-02-14 02:52:38.608891", "score": "0.962", "loss": "0.1039", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(ColumnType.BLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 43, "n_pass": [229, 23, 19]}
{"time": "2021-02-14 02:52:39.993631", "score": "0.8566", "loss": "0.4641", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(ColumnTypeBLOB); } setParameter(parameterIndex,StreamParameter(inputStream));; }", "n_tokens": 42, "n_pass": [232, 24, 20]}
{"time": "2021-02-14 02:52:42.618170", "score": "0.7025", "loss": "1.0737", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(ColumnTypeBLOB); } setParameter(parameterIndex(inputStream));; }", "n_tokens": 40, "n_pass": [238, 26, 21]}
{"time": "2021-02-14 02:52:47.450784", "score": "0.757", "loss": "1.5129", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(ColumnTypeBLOB); }(parameterIndex(inputStream));; }", "n_tokens": 38, "n_pass": [269, 29, 22]}
{"time": "2021-02-14 02:52:49.493724", "score": "0.7239", "loss": "1.1488", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB); }(parameterIndex(inputStream));; }", "n_tokens": 37, "n_pass": [297, 30, 23]}
{"time": "2021-02-14 02:52:53.205452", "score": "0.7764", "loss": "0.835", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB); }((inputStream));; }", "n_tokens": 36, "n_pass": [343, 31, 24]}
{"time": "2021-02-14 02:52:54.511990", "score": "0.7764", "loss": "0.835", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB); }((inputStream)); }", "n_tokens": 35, "n_pass": [348, 32, 25]}
{"time": "2021-02-14 02:52:55.812008", "score": "0.7764", "loss": "0.835", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB); }((inputStream));}", "n_tokens": 34, "n_pass": [350, 33, 26]}
{"time": "2021-02-14 02:52:57.889557", "score": "0.7764", "loss": "0.835", "code": "void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB);}((inputStream));}", "n_tokens": 33, "n_pass": [377, 34, 27]}

Minimal simplified code:
void setBlob(int parameterIndex,InputStream inputStream)throws SQLException{if(inputStream){(BLOB);}((inputStream));}

