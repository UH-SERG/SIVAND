
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/tomcat/util/net/NioSelectorPool_close.java
method_name = close
method_body = public void close() throws IOException { enabled = false; Selector s; while ((s = selectors.poll()) != null) s.close(); spare.set(0); active.set(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }
predict, score, loss = close, 0.8803859353065491, 0.32194897532463074

Trace of simplified code(s):
{"time": "2021-02-13 12:30:32.897693", "score": "0.8317", "loss": "0.4039", "code": "public void close() throws IOException { enabled = false; Selector s; while ((s = selectors.poll()) != null) s.close(); spare.set(0); active.set(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 133, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:30:34.242757", "score": "0.7869", "loss": "0.6134", "code": "public void close() throws IOException { enabled = false; Selector s; while ((s = selectors.poll()) != null) s(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 116, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 12:30:35.992776", "score": "0.8693", "loss": "0.4338", "code": "public void close() throws IOException { enabled ; while ((s = selectors.poll()) != null) s(0); if (blockingSelector != null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 108, "n_pass": [55, 3, 3]}
{"time": "2021-02-13 12:30:37.745099", "score": "0.8604", "loss": "0.487", "code": "public void close() throws IOException { enabled ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED && getSharedSelector() != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 104, "n_pass": [102, 4, 4]}
{"time": "2021-02-13 12:30:39.095177", "score": "0.8597", "loss": "0.4893", "code": "public void close() throws IOException { enabled ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED () != null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 100, "n_pass": [107, 5, 5]}
{"time": "2021-02-13 12:30:40.425052", "score": "0.8589", "loss": "0.5216", "code": "public void close() throws IOException { enabled ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_SELECTOR = null; } }", "n_tokens": 96, "n_pass": [108, 6, 6]}
{"time": "2021-02-13 12:30:41.760409", "score": "0.824", "loss": "0.6411", "code": "public void close() throws IOException { enabled ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 91, "n_pass": [113, 7, 7]}
{"time": "2021-02-13 12:30:43.445791", "score": "0.57", "loss": "1.3085", "code": "public void close() { enabled ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 87, "n_pass": [117, 8, 8]}
{"time": "2021-02-13 12:30:45.477391", "score": "0.5878", "loss": "1.4758", "code": "public void close() { ; while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 85, "n_pass": [182, 9, 9]}
{"time": "2021-02-13 12:30:46.808463", "score": "0.5878", "loss": "1.4758", "code": "public void close() { while ((s = selectors.poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 83, "n_pass": [183, 10, 10]}
{"time": "2021-02-13 12:30:48.136125", "score": "0.4431", "loss": "1.9877", "code": "public void close() { while ((s = poll()) != null) s(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 81, "n_pass": [188, 11, 11]}
{"time": "2021-02-13 12:30:49.835386", "score": "0.6582", "loss": "1.2786", "code": "public void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector().close(); SHARED_; } }", "n_tokens": 79, "n_pass": [194, 12, 12]}
{"time": "2021-02-13 12:30:52.496255", "score": "0.6583", "loss": "1.188", "code": "public void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector.close(); SHARED_; } }", "n_tokens": 77, "n_pass": [213, 14, 13]}
{"time": "2021-02-13 12:30:53.849028", "score": "0.4391", "loss": "1.991", "code": "public void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector(); SHARED_; } }", "n_tokens": 75, "n_pass": [214, 15, 14]}
{"time": "2021-02-13 12:30:55.172217", "score": "0.3393", "loss": "2.0661", "code": "public void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector; SHARED_; } }", "n_tokens": 73, "n_pass": [215, 16, 15]}
{"time": "2021-02-13 12:30:56.514231", "score": "0.4325", "loss": "1.9461", "code": "public void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector_; } }", "n_tokens": 70, "n_pass": [216, 17, 16]}
{"time": "2021-02-13 12:30:57.830867", "score": "0.4325", "loss": "1.9461", "code": "void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) { getSharedSelector_; } }", "n_tokens": 68, "n_pass": [219, 18, 17]}
{"time": "2021-02-13 12:31:01.217434", "score": "0.3385", "loss": "2.3394", "code": "void close() { while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 66, "n_pass": [250, 20, 18]}
{"time": "2021-02-13 12:31:15.289674", "score": "0.3385", "loss": "2.3394", "code": "void close(){ while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 65, "n_pass": [356, 24, 19]}
{"time": "2021-02-13 12:31:16.643941", "score": "0.3385", "loss": "2.3394", "code": "void close(){while ((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 64, "n_pass": [358, 25, 20]}
{"time": "2021-02-13 12:31:17.965773", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s = poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 63, "n_pass": [360, 26, 21]}
{"time": "2021-02-13 12:31:19.296978", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s= poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 62, "n_pass": [364, 27, 22]}
{"time": "2021-02-13 12:31:20.610434", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll()) != null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 61, "n_pass": [366, 28, 23]}
{"time": "2021-02-13 12:31:21.925612", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!= null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 60, "n_pass": [371, 29, 24]}
{"time": "2021-02-13 12:31:23.601233", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0); if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 59, "n_pass": [374, 30, 25]}
{"time": "2021-02-13 12:31:24.948557", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if ( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 58, "n_pass": [381, 31, 26]}
{"time": "2021-02-13 12:31:26.261715", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if( null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 57, "n_pass": [383, 32, 27]}
{"time": "2021-02-13 12:31:27.574976", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null) { blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 56, "n_pass": [385, 33, 28]}
{"time": "2021-02-13 12:31:28.892750", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){ blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 55, "n_pass": [388, 34, 29]}
{"time": "2021-02-13 12:31:30.203819", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close(); } if (SHARED = null) {_; } }", "n_tokens": 54, "n_pass": [390, 35, 30]}
{"time": "2021-02-13 12:31:32.831018", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();} if (SHARED = null) {_; } }", "n_tokens": 53, "n_pass": [397, 37, 31]}
{"time": "2021-02-13 12:31:34.150778", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();}if (SHARED = null) {_; } }", "n_tokens": 52, "n_pass": [399, 38, 32]}
{"time": "2021-02-13 12:31:35.464341", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();}if(SHARED = null) {_; } }", "n_tokens": 51, "n_pass": [401, 39, 33]}
{"time": "2021-02-13 12:31:36.784016", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();}if(SHARED= null) {_; } }", "n_tokens": 50, "n_pass": [404, 40, 34]}
{"time": "2021-02-13 12:31:38.097832", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();}if(SHARED=null) {_; } }", "n_tokens": 49, "n_pass": [406, 41, 35]}
{"time": "2021-02-13 12:31:39.409002", "score": "0.3385", "loss": "2.3394", "code": "void close(){while((s=poll())!=null)(0);if(null){blockingSelector.close();}if(SHARED=null){_; } }", "n_tokens": 48, "n_pass": [409, 42, 36]}
{"time": "2021-02-13 12:31:42.749179", "score": "0.5191", "loss": "1.5724", "code": "void close(){while((spoll())!=null)(0);if(null){blockingSelector.close();}if(SHARED=null){_; } }", "n_tokens": 47, "n_pass": [425, 44, 37]}
{"time": "2021-02-13 12:31:44.097337", "score": "0.4836", "loss": "1.5908", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED=null){_; } }", "n_tokens": 46, "n_pass": [426, 45, 38]}
{"time": "2021-02-13 12:31:47.098601", "score": "0.6066", "loss": "1.093", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHAREDnull){_; } }", "n_tokens": 45, "n_pass": [453, 47, 39]}
{"time": "2021-02-13 12:31:48.404745", "score": "0.5889", "loss": "1.0662", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){_; } }", "n_tokens": 44, "n_pass": [454, 48, 40]}
{"time": "2021-02-13 12:31:49.711316", "score": "0.585", "loss": "1.1631", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){; } }", "n_tokens": 43, "n_pass": [457, 49, 41]}
{"time": "2021-02-13 12:31:51.015888", "score": "0.585", "loss": "1.1631", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){ } }", "n_tokens": 42, "n_pass": [458, 50, 42]}
{"time": "2021-02-13 12:31:55.417724", "score": "0.585", "loss": "1.1631", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){ }}", "n_tokens": 41, "n_pass": [504, 52, 43]}
{"time": "2021-02-13 12:31:59.112866", "score": "0.585", "loss": "1.1631", "code": "void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){}}", "n_tokens": 40, "n_pass": [543, 54, 44]}

Minimal simplified code:
void close(){while((s())!=null)(0);if(null){blockingSelector.close();}if(SHARED){}}

