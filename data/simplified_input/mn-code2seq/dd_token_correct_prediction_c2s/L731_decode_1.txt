
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/kaazing__gateway/mina.core/core/src/main/java/org/apache/mina/filter/codec/statemachine/ShortIntegerDecodingState_decode.java
method_name = decode
method_body = public DecodingState decode(IoBuffer in, ProtocolDecoderOutput out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte = in.getUnsigned(); break; case 1: counter = 0; return finishDecode((short) ((highByte << 8) | in.getUnsigned()), out); default: throw new InternalError(); } counter++; } return this; }
predict, score, loss = decode, 0.9720579981803894, 0.09773223847150803

Trace of simplified code(s):
{"time": "2021-02-13 21:04:53.416732", "score": "0.9721", "loss": "0.0977", "code": "public DecodingState decode(IoBuffer in, ProtocolDecoderOutput out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte = in.getUnsigned(); break; case 1: counter = 0; return finishDecode((short) ((highByte << 8) | in.getUnsigned()), out); default: throw new InternalError(); } counter++; } return this; }", "n_tokens": 131, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:04:54.796703", "score": "0.9788", "loss": "0.2229", "code": "public DecodingState decode(IoBuffer in, ProtocolDecoderOutput out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode((short) ((highByte << 8) | in.getUnsigned()), out); default: throw new InternalError(); } counter++; } return this; }", "n_tokens": 115, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 21:04:56.149733", "score": "0.9818", "loss": "0.3241", "code": "public DecodingState decode(IoBuffer in, ProtocolDecoderOutput out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode((short) ((highByte << 8)), out); default: throw new InternalError(); } counter++; } return this; }", "n_tokens": 107, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 21:04:57.504027", "score": "0.9732", "loss": "0.2614", "code": "public DecodingState decode(IoBuffer in, ProtocolDecoderOutput out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode((short) ((highByte << 8)), out);  new InternalError(); } counter++; } return this; }", "n_tokens": 103, "n_pass": [90, 4, 4]}
{"time": "2021-02-13 21:04:59.251180", "score": "0.9013", "loss": "0.985", "code": "public DecodingState decode(IoBuffer  out) throws Exception { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode((short) ((highByte << 8)), out);  new InternalError(); } counter++; } return this; }", "n_tokens": 99, "n_pass": [98, 5, 5]}
{"time": "2021-02-13 21:05:00.592725", "score": "0.9014", "loss": "1.0763", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode((short) ((highByte << 8)), out);  new InternalError(); } counter++; } return this; }", "n_tokens": 95, "n_pass": [100, 6, 6]}
{"time": "2021-02-13 21:05:02.025562", "score": "0.887", "loss": "0.9047", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte << 8)), out);  new InternalError(); } counter++; } return this; }", "n_tokens": 91, "n_pass": [111, 7, 7]}
{"time": "2021-02-13 21:05:03.354802", "score": "0.8736", "loss": "0.7646", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  new InternalError(); } counter++; } return this; }", "n_tokens": 87, "n_pass": [113, 8, 8]}
{"time": "2021-02-13 21:05:06.063285", "score": "0.8625", "loss": "0.6576", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError(); } counter++; } return this; }", "n_tokens": 85, "n_pass": [181, 9, 9]}
{"time": "2021-02-13 21:05:07.400630", "score": "0.8652", "loss": "0.9215", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } return this; }", "n_tokens": 83, "n_pass": [182, 10, 10]}
{"time": "2021-02-13 21:05:08.760939", "score": "0.921", "loss": "0.6909", "code": "public DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 80, "n_pass": [188, 11, 11]}
{"time": "2021-02-13 21:05:10.094506", "score": "0.921", "loss": "0.6909", "code": "DecodingState decode(IoBuffer  out) { while (in.hasRemaining()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 78, "n_pass": [190, 12, 12]}
{"time": "2021-02-13 21:05:11.799028", "score": "0.941", "loss": "0.7231", "code": "DecodingState decode(IoBuffer  out) { while (in()) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 76, "n_pass": [199, 13, 13]}
{"time": "2021-02-13 21:05:13.119810", "score": "0.9467", "loss": "0.657", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0: highByte  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 74, "n_pass": [200, 14, 14]}
{"time": "2021-02-13 21:05:14.438632", "score": "0.9373", "loss": "0.7515", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; return finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 72, "n_pass": [209, 15, 15]}
{"time": "2021-02-13 21:05:15.753059", "score": "0.8577", "loss": "0.6589", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out);  InternalError; } counter++; } ; }", "n_tokens": 70, "n_pass": [214, 16, 16]}
{"time": "2021-02-13 21:05:17.076603", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); ; } counter++; } ; }", "n_tokens": 68, "n_pass": [222, 17, 17]}
{"time": "2021-02-13 21:05:18.392173", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); } counter++; } ; }", "n_tokens": 66, "n_pass": [223, 18, 18]}
{"time": "2021-02-13 21:05:28.419354", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++; } ; }", "n_tokens": 65, "n_pass": [321, 19, 19]}
{"time": "2021-02-13 21:05:29.737643", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} ; }", "n_tokens": 64, "n_pass": [326, 20, 20]}
{"time": "2021-02-13 21:05:31.046577", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer  out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 62, "n_pass": [328, 21, 21]}
{"time": "2021-02-13 21:05:33.449994", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out) { while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 61, "n_pass": [335, 22, 22]}
{"time": "2021-02-13 21:05:34.760879", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){ while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 60, "n_pass": [339, 23, 23]}
{"time": "2021-02-13 21:05:36.108667", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while (in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 59, "n_pass": [341, 24, 24]}
{"time": "2021-02-13 21:05:37.420453", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in) { switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 58, "n_pass": [343, 25, 25]}
{"time": "2021-02-13 21:05:38.739780", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){ switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 57, "n_pass": [347, 26, 26]}
{"time": "2021-02-13 21:05:40.055704", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter) { case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 56, "n_pass": [349, 27, 27]}
{"time": "2021-02-13 21:05:41.369835", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){ case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 55, "n_pass": [354, 28, 28]}
{"time": "2021-02-13 21:05:42.698820", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:  counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 54, "n_pass": [356, 29, 29]}
{"time": "2021-02-13 21:05:44.009845", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0: counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 53, "n_pass": [361, 30, 30]}
{"time": "2021-02-13 21:05:45.323701", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter = 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 52, "n_pass": [362, 31, 31]}
{"time": "2021-02-13 21:05:46.660343", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter= 0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 51, "n_pass": [364, 32, 32]}
{"time": "2021-02-13 21:05:47.968512", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter=0; finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 50, "n_pass": [366, 33, 33]}
{"time": "2021-02-13 21:05:49.292867", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter=0;finishDecode(((highByte )), out); }counter++;} }", "n_tokens": 49, "n_pass": [369, 34, 34]}
{"time": "2021-02-13 21:05:50.634307", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter=0;finishDecode(((highByte)), out); }counter++;} }", "n_tokens": 48, "n_pass": [375, 35, 35]}
{"time": "2021-02-13 21:05:51.945489", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter=0;finishDecode(((highByte)),out); }counter++;} }", "n_tokens": 47, "n_pass": [379, 36, 36]}
{"time": "2021-02-13 21:05:53.257276", "score": "0.9198", "loss": "0.6542", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter=0;finishDecode(((highByte)),out);}counter++;} }", "n_tokens": 46, "n_pass": [383, 37, 37]}
{"time": "2021-02-13 21:05:55.673658", "score": "0.9082", "loss": "0.6618", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter0;finishDecode(((highByte)),out);}counter++;} }", "n_tokens": 45, "n_pass": [415, 38, 38]}
{"time": "2021-02-13 21:05:56.985493", "score": "0.9082", "loss": "0.6618", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counter;finishDecode(((highByte)),out);}counter++;} }", "n_tokens": 44, "n_pass": [416, 39, 39]}
{"time": "2021-02-13 21:05:58.328196", "score": "0.9588", "loss": "0.3109", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:counterfinishDecode(((highByte)),out);}counter++;} }", "n_tokens": 43, "n_pass": [417, 40, 40]}
{"time": "2021-02-13 21:06:02.066507", "score": "0.898", "loss": "0.7505", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:finishDecode(((highByte)),out);}counter++;} }", "n_tokens": 42, "n_pass": [459, 42, 41]}
{"time": "2021-02-13 21:06:04.847203", "score": "0.898", "loss": "0.7505", "code": "DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:finishDecode(((highByte)),out);}counter++;}}", "n_tokens": 41, "n_pass": [503, 43, 42]}

Minimal simplified code:
DecodingState decode(IoBuffer out){while(in){switch(counter){case 0:finishDecode(((highByte)),out);}counter++;}}

