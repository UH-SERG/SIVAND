
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/erogenousbeef__BigReactors/src/main/java/erogenousbeef/bigreactors/gui/controls/BeefGuiRpmBar_getTooltip.java
method_name = getTooltip
method_body = @Override public String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(" %.0f RPM", turbine.getRotorSpeed()); } else { tooltip[1] = " 0 RPM"; } return tooltip; }
predict, score, loss = getTooltip, 0.894763171672821, 0.2628609538078308

Trace of simplified code(s):
{"time": "2021-02-13 19:03:09.437398", "score": "0.8948", "loss": "0.2629", "code": "@Override public String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" %.0f RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 87, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:03:10.797857", "score": "0.9287", "loss": "0.1985", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" %.0f RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 82, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 19:03:12.113785", "score": "0.9405", "loss": "0.1589", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); } else { tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 77, "n_pass": [51, 3, 3]}
{"time": "2021-02-13 19:03:13.493987", "score": "0.9327", "loss": "0.1849", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \" 0 RPM\"; } return tooltip; }", "n_tokens": 71, "n_pass": [54, 4, 4]}
{"time": "2021-02-13 19:03:14.833306", "score": "0.9327", "loss": "0.1849", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \"RPM\"; } return tooltip; }", "n_tokens": 68, "n_pass": [97, 5, 5]}
{"time": "2021-02-13 19:03:16.156620", "score": "0.8026", "loss": "0.709", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] = String.format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \"RPM\"; } ; }", "n_tokens": 65, "n_pass": [100, 6, 6]}
{"time": "2021-02-13 19:03:17.484311", "score": "0.8278", "loss": "0.6373", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\", turbine.getRotorSpeed()); tooltip[1] = \"RPM\"; } ; }", "n_tokens": 62, "n_pass": [114, 7, 7]}
{"time": "2021-02-13 19:03:18.794860", "score": "0.8541", "loss": "0.5825", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed()); tooltip[1] = \"RPM\"; } ; }", "n_tokens": 59, "n_pass": [117, 8, 8]}
{"time": "2021-02-13 19:03:23.485100", "score": "0.8731", "loss": "0.5047", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } ; }", "n_tokens": 57, "n_pass": [189, 9, 9]}
{"time": "2021-02-13 19:03:24.809461", "score": "0.8731", "loss": "0.5047", "code": "String[] getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 55, "n_pass": [198, 10, 10]}
{"time": "2021-02-13 19:03:26.121259", "score": "0.8731", "loss": "0.5047", "code": "String[]getTooltip() { if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 54, "n_pass": [203, 11, 11]}
{"time": "2021-02-13 19:03:27.432288", "score": "0.8731", "loss": "0.5047", "code": "String[]getTooltip(){ if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 53, "n_pass": [207, 12, 12]}
{"time": "2021-02-13 19:03:28.744061", "score": "0.8731", "loss": "0.5047", "code": "String[]getTooltip(){if (turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 52, "n_pass": [209, 13, 13]}
{"time": "2021-02-13 19:03:30.081581", "score": "0.8731", "loss": "0.5047", "code": "String[]getTooltip(){if(turbine != null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 51, "n_pass": [211, 14, 14]}
{"time": "2021-02-13 19:03:31.393815", "score": "0.8731", "loss": "0.5047", "code": "String[]getTooltip(){if(turbine!= null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 50, "n_pass": [214, 15, 15]}
{"time": "2021-02-13 19:03:32.703056", "score": "0.9029", "loss": "0.5358", "code": "String[]getTooltip(){if(turbine= null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 49, "n_pass": [215, 16, 16]}
{"time": "2021-02-13 19:03:34.020470", "score": "0.9029", "loss": "0.5358", "code": "String[]getTooltip(){if(turbine=null) { tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 48, "n_pass": [217, 17, 17]}
{"time": "2021-02-13 19:03:35.331246", "score": "0.9029", "loss": "0.5358", "code": "String[]getTooltip(){if(turbine=null){ tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 47, "n_pass": [220, 18, 18]}
{"time": "2021-02-13 19:03:36.643039", "score": "0.9029", "loss": "0.5358", "code": "String[]getTooltip(){if(turbine=null){tooltip[1] =format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 46, "n_pass": [222, 19, 19]}
{"time": "2021-02-13 19:03:37.954311", "score": "0.9029", "loss": "0.5358", "code": "String[]getTooltip(){if(turbine=null){tooltip[1]=format(\" RPM\".getRotorSpeed); tooltip[1] = \"RPM\"; } }", "n_tokens": 45, "n_pass": [227, 20, 20]}
{"time": "2021-02-13 19:03:39.265004", "score": "0.8626", "loss": "0.5535", "code": "String[]getTooltip(){if(turbine=null){tooltip[1]=format(\" RPM\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 43, "n_pass": [232, 21, 21]}
{"time": "2021-02-13 19:03:40.591393", "score": "0.7949", "loss": "0.9863", "code": "String[]getTooltip(){if(turbinenull){tooltip[1]=format(\" RPM\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 42, "n_pass": [252, 22, 22]}
{"time": "2021-02-13 19:03:41.908114", "score": "0.7663", "loss": "0.8966", "code": "String[]getTooltip(){if(turbine){tooltip[1]=format(\" RPM\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 41, "n_pass": [253, 23, 23]}
{"time": "2021-02-13 19:03:45.884754", "score": "0.8485", "loss": "0.6101", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\" RPM\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 40, "n_pass": [307, 24, 24]}
{"time": "2021-02-13 19:03:47.195492", "score": "0.8485", "loss": "0.6101", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"RPM\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 39, "n_pass": [309, 25, 25]}
{"time": "2021-02-13 19:03:48.497881", "score": "0.886", "loss": "0.4725", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\"); tooltip[1] = \"RPM\"; } }", "n_tokens": 38, "n_pass": [310, 26, 26]}
{"time": "2021-02-13 19:03:49.787382", "score": "0.886", "loss": "0.4725", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1] = \"RPM\"; } }", "n_tokens": 37, "n_pass": [314, 27, 27]}
{"time": "2021-02-13 19:03:51.124462", "score": "0.886", "loss": "0.4725", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1]= \"RPM\"; } }", "n_tokens": 36, "n_pass": [319, 28, 28]}
{"time": "2021-02-13 19:03:52.427293", "score": "0.886", "loss": "0.4725", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1]=\"RPM\"; } }", "n_tokens": 35, "n_pass": [321, 29, 29]}
{"time": "2021-02-13 19:03:53.727438", "score": "0.9304", "loss": "0.339", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1]=\"\"; } }", "n_tokens": 34, "n_pass": [323, 30, 30]}
{"time": "2021-02-13 19:03:55.073123", "score": "0.9304", "loss": "0.339", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1]=\"\";} }", "n_tokens": 33, "n_pass": [326, 31, 31]}
{"time": "2021-02-13 19:03:56.392527", "score": "0.9304", "loss": "0.339", "code": "String[]getTooltip(){if(turbine){tooltip[1]=(\"\");tooltip[1]=\"\";}}", "n_tokens": 32, "n_pass": [328, 32, 32]}

Minimal simplified code:
String[]getTooltip(){if(turbine){tooltip[1]=("");tooltip[1]="";}}

