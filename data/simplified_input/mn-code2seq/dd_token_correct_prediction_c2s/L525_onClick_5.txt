
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/udacity__ud851-Sunshine/S04.03-Exercise-AddMapAndSharing/app/src/main/java/com/example/android/sunshine/ForecastAdapter_onClick.java
method_name = onClick
method_body = @Override public void onClick(View v) { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }
predict, score, loss = onClick, 0.9996901750564575, 0.0008962790016084909

Trace of simplified code(s):
{"time": "2021-02-13 17:22:02.884202", "score": "0.9997", "loss": "0.0009", "code": "@Override public void onClick(View v) { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 48, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:22:04.587877", "score": "0.9876", "loss": "0.0884", "code": "public void onClick(View v) { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 45, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 17:22:05.931429", "score": "0.8148", "loss": "1.1395", "code": "public void onClick() { int adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 42, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 17:22:07.270594", "score": "0.7148", "loss": "1.5356", "code": "public void onClick() {adapterPosition = getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 39, "n_pass": [48, 4, 4]}
{"time": "2021-02-13 17:22:08.615434", "score": "0.8337", "loss": "1.0218", "code": "public void onClick() { getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick(weatherForDay); }", "n_tokens": 36, "n_pass": [49, 5, 5]}
{"time": "2021-02-13 17:22:11.288107", "score": "0.7656", "loss": "1.9209", "code": "public void onClick() { getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 33, "n_pass": [57, 7, 6]}
{"time": "2021-02-13 17:22:16.262447", "score": "0.7656", "loss": "1.9209", "code": " void onClick() { getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 32, "n_pass": [93, 9, 7]}
{"time": "2021-02-13 17:22:17.595524", "score": "0.7656", "loss": "1.9209", "code": "void onClick() { getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 31, "n_pass": [94, 10, 8]}
{"time": "2021-02-13 17:22:19.280649", "score": "0.7656", "loss": "1.9209", "code": "void onClick(){ getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 30, "n_pass": [99, 11, 9]}
{"time": "2021-02-13 17:22:20.597455", "score": "0.7656", "loss": "1.9209", "code": "void onClick(){getAdapterPosition(); String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 29, "n_pass": [101, 12, 10]}
{"time": "2021-02-13 17:22:21.904780", "score": "0.6496", "loss": "2.6913", "code": "void onClick(){getAdapterPosition; String weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 27, "n_pass": [103, 13, 11]}
{"time": "2021-02-13 17:22:24.538978", "score": "0.8066", "loss": "1.3117", "code": "void onClick(){getAdapterPosition; weatherForDay = mWeatherData[adapterPosition]; mClickHandler.onClick; }", "n_tokens": 25, "n_pass": [105, 15, 12]}
{"time": "2021-02-13 17:22:25.853682", "score": "0.7696", "loss": "1.3372", "code": "void onClick(){getAdapterPosition; weatherForDay = mWeatherData[adapterPosition]; onClick; }", "n_tokens": 23, "n_pass": [111, 16, 13]}
{"time": "2021-02-13 17:22:29.108482", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){; weatherForDay = mWeatherData[adapterPosition]; onClick; }", "n_tokens": 22, "n_pass": [120, 18, 14]}
{"time": "2021-02-13 17:22:30.404851", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){weatherForDay = mWeatherData[adapterPosition]; onClick; }", "n_tokens": 20, "n_pass": [121, 19, 15]}
{"time": "2021-02-13 17:22:35.663202", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){weatherForDay =mWeatherData[adapterPosition]; onClick; }", "n_tokens": 19, "n_pass": [149, 21, 16]}
{"time": "2021-02-13 17:22:36.948505", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){weatherForDay =mWeatherData[adapterPosition];onClick; }", "n_tokens": 18, "n_pass": [155, 22, 17]}
{"time": "2021-02-13 17:22:39.523604", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){weatherForDay =mWeatherData[adapterPosition];onClick;}", "n_tokens": 17, "n_pass": [158, 24, 18]}
{"time": "2021-02-13 17:22:41.512493", "score": "0.8103", "loss": "1.0363", "code": "void onClick(){weatherForDay=mWeatherData[adapterPosition];onClick;}", "n_tokens": 16, "n_pass": [167, 25, 19]}

Minimal simplified code:
void onClick(){weatherForDay=mWeatherData[adapterPosition];onClick;}

