
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/experiment/statisticsexporters/AbstractMeasurementEvaluationStatisticsExporter_getOptions.java
method_name = getOptions
method_body = @Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, super.getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }
predict, score, loss = getOptions, 0.9948204159736633, 0.011102113872766495

Trace of simplified code(s):
{"time": "2021-02-13 13:42:22.466240", "score": "0.9948", "loss": "0.0111", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, super.getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:42:24.174019", "score": "0.9921", "loss": "0.0182", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, super.getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 73, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 13:42:26.220422", "score": "0.768", "loss": "1.6916", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 68, "n_pass": [52, 3, 3]}
{"time": "2021-02-13 13:42:28.274724", "score": "0.7503", "loss": "1.8923", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils(getOptions()); OptionUtils.add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 66, "n_pass": [96, 4, 4]}
{"time": "2021-02-13 13:42:29.606708", "score": "0.8445", "loss": "1.1565", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils(getOptions());add(result, 'M', getMeasurement()); return OptionUtils.toArray(result); }", "n_tokens": 63, "n_pass": [99, 5, 5]}
{"time": "2021-02-13 13:42:30.937670", "score": "0.8034", "loss": "1.6392", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils(getOptions());add(result, 'M', getMeasurement());OptionUtils.toArray(result); }", "n_tokens": 60, "n_pass": [105, 6, 6]}
{"time": "2021-02-13 13:42:32.276890", "score": "0.8327", "loss": "1.4294", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils(getOptions());add(result, 'M', getMeasurement());(result); }", "n_tokens": 57, "n_pass": [106, 7, 7]}
{"time": "2021-02-13 13:42:33.593923", "score": "0.7797", "loss": "1.7239", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils(getOptions());add(result, 'M', getMeasurement());; }", "n_tokens": 54, "n_pass": [107, 8, 8]}
{"time": "2021-02-13 13:42:36.991269", "score": "0.7056", "loss": "2.3258", "code": " String[] getOptions() { List<String> result = new ArrayList<>();(getOptions());add(result, 'M', getMeasurement());; }", "n_tokens": 52, "n_pass": [123, 10, 9]}
{"time": "2021-02-13 13:42:44.005942", "score": "0.7843", "loss": "1.6871", "code": " String[] getOptions() { List<String> result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 50, "n_pass": [198, 12, 10]}
{"time": "2021-02-13 13:42:45.334160", "score": "0.7843", "loss": "1.6871", "code": "String[] getOptions() { List<String> result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 49, "n_pass": [206, 13, 11]}
{"time": "2021-02-13 13:42:46.660661", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions() { List<String> result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 48, "n_pass": [210, 14, 12]}
{"time": "2021-02-13 13:42:47.984050", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){ List<String> result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 47, "n_pass": [214, 15, 13]}
{"time": "2021-02-13 13:42:49.323556", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String> result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 46, "n_pass": [216, 16, 14]}
{"time": "2021-02-13 13:42:51.024654", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result = new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 45, "n_pass": [221, 17, 15]}
{"time": "2021-02-13 13:42:52.363810", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result= new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 44, "n_pass": [223, 18, 16]}
{"time": "2021-02-13 13:42:53.705882", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add( 'M', getMeasurement());; }", "n_tokens": 43, "n_pass": [225, 19, 17]}
{"time": "2021-02-13 13:42:57.770751", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add('M', getMeasurement());; }", "n_tokens": 42, "n_pass": [276, 20, 18]}
{"time": "2021-02-13 13:42:59.431607", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add('M',getMeasurement());; }", "n_tokens": 41, "n_pass": [280, 21, 19]}
{"time": "2021-02-13 13:43:00.767238", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add('M',getMeasurement()); }", "n_tokens": 40, "n_pass": [285, 22, 20]}
{"time": "2021-02-13 13:43:02.115222", "score": "0.7843", "loss": "1.6871", "code": "String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add('M',getMeasurement());}", "n_tokens": 39, "n_pass": [287, 23, 21]}

Minimal simplified code:
String[]getOptions(){List<String>result=new ArrayList<>();(getOptions());add('M',getMeasurement());}

