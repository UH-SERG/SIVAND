
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/demilich1__metastone/game/src/main/java/net/demilich/metastone/game/targeting/CardReference_equals.java
method_name = equals
method_body = @Override public boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }
predict, score, loss = equals, 0.9912415742874146, 0.010773908346891403

Trace of simplified code(s):
{"time": "2021-02-13 16:34:10.052978", "score": "0.9912", "loss": "0.0108", "code": "@Override public boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 86, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:34:11.400606", "score": "0.9653", "loss": "0.0547", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { return false; } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 81, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 16:34:12.716598", "score": "0.8759", "loss": "0.2038", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId() == getCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 76, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 16:34:14.059669", "score": "0.7418", "loss": "0.4686", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardIdgetCardId() && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 70, "n_pass": [54, 4, 4]}
{"time": "2021-02-13 16:34:15.766788", "score": "0.6307", "loss": "0.6068", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId && cardReference.getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 67, "n_pass": [94, 5, 5]}
{"time": "2021-02-13 16:34:17.104760", "score": "0.7323", "loss": "0.3916", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() == cardReference.getPlayerId(); }", "n_tokens": 64, "n_pass": [95, 6, 6]}
{"time": "2021-02-13 16:34:18.420249", "score": "0.7742", "loss": "0.3067", "code": "boolean equals(Object obj) { if (!(obj instanceof CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() ==getPlayerId(); }", "n_tokens": 61, "n_pass": [98, 7, 7]}
{"time": "2021-02-13 16:34:20.106578", "score": "0.6144", "loss": "0.5822", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId &&getPlayerId() ==getPlayerId(); }", "n_tokens": 58, "n_pass": [109, 8, 8]}
{"time": "2021-02-13 16:34:23.121664", "score": "0.7099", "loss": "0.472", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardIdgetPlayerId() ==getPlayerId(); }", "n_tokens": 55, "n_pass": [119, 10, 9]}
{"time": "2021-02-13 16:34:24.432854", "score": "0.8654", "loss": "0.1796", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference = (CardReference) obj; return cardReference.getCardId ==getPlayerId(); }", "n_tokens": 52, "n_pass": [120, 11, 10]}
{"time": "2021-02-13 16:34:27.419585", "score": "0.5638", "loss": "0.6484", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference cardReference =  obj; return cardReference.getCardId ==getPlayerId(); }", "n_tokens": 49, "n_pass": [137, 13, 11]}
{"time": "2021-02-13 16:34:34.476497", "score": "0.6221", "loss": "0.6895", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReferencecardReference =  obj; return cardReference.getCardId ==getPlayerId(); }", "n_tokens": 48, "n_pass": [195, 15, 12]}
{"time": "2021-02-13 16:34:35.808284", "score": "0.7405", "loss": "0.4549", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference=  obj; return cardReference.getCardId ==getPlayerId(); }", "n_tokens": 46, "n_pass": [196, 16, 13]}
{"time": "2021-02-13 16:34:38.832072", "score": "0.6523", "loss": "0.65", "code": "boolean equals(Object obj) { if (!( CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 44, "n_pass": [201, 18, 14]}
{"time": "2021-02-13 16:34:40.905378", "score": "0.6523", "loss": "0.65", "code": "boolean equals(Object obj){ if (!( CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 43, "n_pass": [215, 19, 15]}
{"time": "2021-02-13 16:34:42.215372", "score": "0.6523", "loss": "0.65", "code": "boolean equals(Object obj){if (!( CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 42, "n_pass": [217, 20, 16]}
{"time": "2021-02-13 16:34:43.542771", "score": "0.6523", "loss": "0.65", "code": "boolean equals(Object obj){if(!( CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 41, "n_pass": [219, 21, 17]}
{"time": "2021-02-13 16:34:44.851794", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if(( CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 40, "n_pass": [221, 22, 18]}
{"time": "2021-02-13 16:34:46.193360", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)) { } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 39, "n_pass": [223, 23, 19]}
{"time": "2021-02-13 16:34:47.508289", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){ } CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 38, "n_pass": [227, 24, 20]}
{"time": "2021-02-13 16:34:48.818703", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){} CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 37, "n_pass": [229, 25, 21]}
{"time": "2021-02-13 16:34:50.144379", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference=  obj; return getCardId ==getPlayerId(); }", "n_tokens": 36, "n_pass": [231, 26, 22]}
{"time": "2021-02-13 16:34:56.548597", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference=  obj;return getCardId ==getPlayerId(); }", "n_tokens": 35, "n_pass": [278, 28, 23]}
{"time": "2021-02-13 16:34:58.614587", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference=  obj;return getCardId==getPlayerId(); }", "n_tokens": 34, "n_pass": [282, 29, 24]}
{"time": "2021-02-13 16:35:02.544084", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference=  obj;return getCardId==getPlayerId();}", "n_tokens": 33, "n_pass": [289, 32, 25]}
{"time": "2021-02-13 16:35:05.941825", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference= obj;return getCardId==getPlayerId();}", "n_tokens": 32, "n_pass": [310, 34, 26]}
{"time": "2021-02-13 16:35:07.251060", "score": "0.5754", "loss": "0.8123", "code": "boolean equals(Object obj){if((CardReference)){}CardReference=obj;return getCardId==getPlayerId();}", "n_tokens": 31, "n_pass": [311, 35, 27]}

Minimal simplified code:
boolean equals(Object obj){if((CardReference)){}CardReference=obj;return getCardId==getPlayerId();}

