
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/fengjiachun__Jupiter/jupiter-common/src/main/java/org/jupiter/common/util/collection/ByteObjectHashMap_toString.java
method_name = toString
method_body = @Override public String toString() { if (isEmpty()) { return "{}"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(", "); } sb.append(keyToString(keys[i])).append('=').append(value == this ? "(this Map)" : toExternal(value)); first = false; } } return sb.append('}').toString(); }
predict, score, loss = toString, 0.9874650239944458, 0.04111650958657265

Trace of simplified code(s):
{"time": "2021-02-13 12:05:10.667791", "score": "0.9739", "loss": "0.0685", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').append(value == this ? \"(this Map)\" : toExternal(value)); first = false; } } return sb.append('}').toString(); }", "n_tokens": 221, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:05:12.064540", "score": "0.9948", "loss": "0.0146", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = new StringBuilder(4 * size); sb.append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 193, "n_pass": [26, 2, 2]}
{"time": "2021-02-13 12:05:13.436078", "score": "0.9935", "loss": "0.0188", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = append('{'); boolean first = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 179, "n_pass": [52, 3, 3]}
{"time": "2021-02-13 12:05:14.789021", "score": "0.996", "loss": "0.0162", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0; i < values.length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 165, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 12:05:16.181254", "score": "0.9986", "loss": "0.0057", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { if (!first) { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 158, "n_pass": [92, 5, 5]}
{"time": "2021-02-13 12:05:17.531648", "score": "0.9973", "loss": "0.0093", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).append('=').first = false; } } return sb.append('}').toString(); }", "n_tokens": 151, "n_pass": [97, 6, 6]}
{"time": "2021-02-13 12:05:18.908400", "score": "0.9981", "loss": "0.0067", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.append('}').toString(); }", "n_tokens": 144, "n_pass": [102, 7, 7]}
{"time": "2021-02-13 12:05:20.273643", "score": "0.9911", "loss": "0.0254", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; } StringBuilder sb = true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 137, "n_pass": [105, 8, 8]}
{"time": "2021-02-13 12:05:22.001479", "score": "0.9927", "loss": "0.0219", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i = 0;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 130, "n_pass": [112, 9, 9]}
{"time": "2021-02-13 12:05:23.746212", "score": "0.9927", "loss": "0.0217", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length; ++i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 127, "n_pass": [174, 10, 10]}
{"time": "2021-02-13 12:05:25.079551", "score": "0.9934", "loss": "0.0191", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V value = values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 124, "n_pass": [176, 11, 11]}
{"time": "2021-02-13 12:05:26.437595", "score": "0.996", "loss": "0.0126", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V= values[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 121, "n_pass": [179, 12, 12]}
{"time": "2021-02-13 12:05:27.776617", "score": "0.9957", "loss": "0.0148", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V[i]; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 118, "n_pass": [180, 13, 13]}
{"time": "2021-02-13 12:05:29.121392", "score": "0.9974", "loss": "0.0101", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { { sb.append(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 115, "n_pass": [181, 14, 14]}
{"time": "2021-02-13 12:05:30.461733", "score": "0.9971", "loss": "0.0099", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString(keys[i])).first = false; } } return sb.toString(); }", "n_tokens": 111, "n_pass": [186, 15, 15]}
{"time": "2021-02-13 12:05:31.799668", "score": "0.9962", "loss": "0.0115", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first = false; } } return sb.toString(); }", "n_tokens": 107, "n_pass": [191, 16, 16]}
{"time": "2021-02-13 12:05:33.132259", "score": "0.9967", "loss": "0.0104", "code": "@Override public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 103, "n_pass": [193, 17, 17]}
{"time": "2021-02-13 12:05:34.468548", "score": "0.9804", "loss": "0.0685", "code": "public String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 100, "n_pass": [198, 18, 18]}
{"time": "2021-02-13 12:05:39.868085", "score": "0.9804", "loss": "0.0685", "code": " String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 99, "n_pass": [286, 19, 19]}
{"time": "2021-02-13 12:05:41.195603", "score": "0.9804", "loss": "0.0685", "code": "String toString() { if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 98, "n_pass": [287, 20, 20]}
{"time": "2021-02-13 12:05:43.255185", "score": "0.9804", "loss": "0.0685", "code": "String toString(){ if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 97, "n_pass": [292, 21, 21]}
{"time": "2021-02-13 12:05:44.582503", "score": "0.9804", "loss": "0.0685", "code": "String toString(){if (isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 96, "n_pass": [294, 22, 22]}
{"time": "2021-02-13 12:05:45.911571", "score": "0.9804", "loss": "0.0685", "code": "String toString(){if(isEmpty()) { return \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 95, "n_pass": [296, 23, 23]}
{"time": "2021-02-13 12:05:47.245739", "score": "0.9818", "loss": "0.0653", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) { V; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 93, "n_pass": [303, 24, 24]}
{"time": "2021-02-13 12:05:48.578015", "score": "0.9746", "loss": "0.0876", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {; if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 91, "n_pass": [316, 25, 25]}
{"time": "2021-02-13 12:05:49.930159", "score": "0.9746", "loss": "0.0876", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (value != null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 89, "n_pass": [317, 26, 26]}
{"time": "2021-02-13 12:05:51.259377", "score": "0.9615", "loss": "0.1316", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (value= null) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 87, "n_pass": [320, 27, 27]}
{"time": "2021-02-13 12:05:52.599368", "score": "0.9608", "loss": "0.1231", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\", \"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 85, "n_pass": [321, 28, 28]}
{"time": "2021-02-13 12:05:53.926282", "score": "0.9599", "loss": "0.1261", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } sb.append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 83, "n_pass": [326, 29, 29]}
{"time": "2021-02-13 12:05:55.271846", "score": "0.942", "loss": "0.1754", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()).first; } } return sb.toString(); }", "n_tokens": 81, "n_pass": [330, 30, 30]}
{"time": "2021-02-13 12:05:56.585169", "score": "0.9831", "loss": "0.0612", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } return sb.toString(); }", "n_tokens": 79, "n_pass": [334, 31, 31]}
{"time": "2021-02-13 12:05:57.898720", "score": "0.9825", "loss": "0.0806", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } sb.toString(); }", "n_tokens": 77, "n_pass": [338, 32, 32]}
{"time": "2021-02-13 12:05:59.229793", "score": "0.9718", "loss": "0.1517", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString(); }", "n_tokens": 75, "n_pass": [339, 33, 33]}
{"time": "2021-02-13 12:06:09.628875", "score": "0.9718", "loss": "0.1517", "code": "String toString(){if(isEmpty()) { \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 74, "n_pass": [451, 34, 34]}
{"time": "2021-02-13 12:06:12.034053", "score": "0.9718", "loss": "0.1517", "code": "String toString(){if(isEmpty()){ \"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 73, "n_pass": [464, 35, 35]}
{"time": "2021-02-13 12:06:13.347557", "score": "0.9718", "loss": "0.1517", "code": "String toString(){if(isEmpty()){\"{}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 72, "n_pass": [466, 36, 36]}
{"time": "2021-02-13 12:06:14.657836", "score": "0.9841", "loss": "0.0903", "code": "String toString(){if(isEmpty()){\"}\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 71, "n_pass": [468, 37, 37]}
{"time": "2021-02-13 12:06:15.974577", "score": "0.9816", "loss": "0.0981", "code": "String toString(){if(isEmpty()){\"\"; }true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 70, "n_pass": [469, 38, 38]}
{"time": "2021-02-13 12:06:17.288630", "score": "0.9816", "loss": "0.0981", "code": "String toString(){if(isEmpty()){\"\";}true; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 69, "n_pass": [472, 39, 39]}
{"time": "2021-02-13 12:06:18.589584", "score": "0.983", "loss": "0.0849", "code": "String toString(){if(isEmpty()){\"\";}; for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 68, "n_pass": [474, 40, 40]}
{"time": "2021-02-13 12:06:19.891849", "score": "0.9826", "loss": "0.0907", "code": "String toString(){if(isEmpty()){\"\";} for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 67, "n_pass": [475, 41, 41]}
{"time": "2021-02-13 12:06:21.292635", "score": "0.9826", "loss": "0.0907", "code": "String toString(){if(isEmpty()){\"\";}for (int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 66, "n_pass": [476, 42, 42]}
{"time": "2021-02-13 12:06:22.633456", "score": "0.9826", "loss": "0.0907", "code": "String toString(){if(isEmpty()){\"\";}for(int i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 65, "n_pass": [478, 43, 43]}
{"time": "2021-02-13 12:06:23.947402", "score": "0.9832", "loss": "0.0797", "code": "String toString(){if(isEmpty()){\"\";}for( i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 64, "n_pass": [480, 44, 44]}
{"time": "2021-02-13 12:06:25.281934", "score": "0.9832", "loss": "0.0797", "code": "String toString(){if(isEmpty()){\"\";}for(i ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 63, "n_pass": [481, 45, 45]}
{"time": "2021-02-13 12:06:26.595515", "score": "0.9878", "loss": "0.0511", "code": "String toString(){if(isEmpty()){\"\";}for( ;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 62, "n_pass": [482, 46, 46]}
{"time": "2021-02-13 12:06:27.910127", "score": "0.9878", "loss": "0.0511", "code": "String toString(){if(isEmpty()){\"\";}for(;length;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 61, "n_pass": [483, 47, 47]}
{"time": "2021-02-13 12:06:29.223929", "score": "0.9821", "loss": "0.0879", "code": "String toString(){if(isEmpty()){\"\";}for(;;i) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 60, "n_pass": [485, 48, 48]}
{"time": "2021-02-13 12:06:30.564116", "score": "0.9855", "loss": "0.0728", "code": "String toString(){if(isEmpty()){\"\";}for(;;) {if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 59, "n_pass": [487, 49, 49]}
{"time": "2021-02-13 12:06:31.876625", "score": "0.9855", "loss": "0.0728", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if (valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 58, "n_pass": [489, 50, 50]}
{"time": "2021-02-13 12:06:33.186251", "score": "0.9855", "loss": "0.0728", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(valuenull) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 57, "n_pass": [492, 51, 51]}
{"time": "2021-02-13 12:06:34.502960", "score": "0.9742", "loss": "0.1047", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null) { {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 56, "n_pass": [494, 52, 52]}
{"time": "2021-02-13 12:06:35.841342", "score": "0.9742", "loss": "0.1047", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){ {(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 55, "n_pass": [497, 53, 53]}
{"time": "2021-02-13 12:06:37.155034", "score": "0.9742", "loss": "0.1047", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\"); } append(keyToString()); } } toString();}", "n_tokens": 54, "n_pass": [499, 54, 54]}
{"time": "2021-02-13 12:06:38.471739", "score": "0.9742", "loss": "0.1047", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");} append(keyToString()); } } toString();}", "n_tokens": 53, "n_pass": [506, 55, 55]}
{"time": "2021-02-13 12:06:39.778342", "score": "0.9742", "loss": "0.1047", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}append(keyToString()); } } toString();}", "n_tokens": 52, "n_pass": [508, 56, 56]}
{"time": "2021-02-13 12:06:41.087292", "score": "0.9363", "loss": "0.2387", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString()); } } toString();}", "n_tokens": 51, "n_pass": [509, 57, 57]}
{"time": "2021-02-13 12:06:42.404458", "score": "0.9363", "loss": "0.2387", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());} } toString();}", "n_tokens": 50, "n_pass": [516, 58, 58]}
{"time": "2021-02-13 12:06:43.704235", "score": "0.9363", "loss": "0.2387", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());}} toString();}", "n_tokens": 49, "n_pass": [518, 59, 59]}
{"time": "2021-02-13 12:06:45.032836", "score": "0.9363", "loss": "0.2387", "code": "String toString(){if(isEmpty()){\"\";}for(;;){if(null){{(\"\");}(keyToString());}}toString();}", "n_tokens": 48, "n_pass": [520, 60, 60]}

Minimal simplified code:
String toString(){if(isEmpty()){"";}for(;;){if(null){{("");}(keyToString());}}toString();}

