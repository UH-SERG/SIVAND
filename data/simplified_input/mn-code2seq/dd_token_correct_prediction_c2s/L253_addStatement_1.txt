
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-federation/openam-federation-library/src/main/java/com/sun/identity/federation/message/FSAssertion_addStatement.java
method_name = addStatement
method_body = public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement); addedStmt = true; } return addedStmt; }
predict, score, loss = addStatement, 0.9886206388473511, 0.03782917559146881

Trace of simplified code(s):
{"time": "2021-02-13 12:40:53.021166", "score": "0.9886", "loss": "0.0378", "code": "public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) { super.addStatement(statement); addedStmt = true; } return addedStmt; }", "n_tokens": 58, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:40:54.337605", "score": "0.5603", "loss": "2.08", "code": "public boolean addStatement(Statement statement) { boolean addedStmt = false; if (statement != null) {  addedStmt = true; } return addedStmt; }", "n_tokens": 51, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 12:41:00.010172", "score": "0.6534", "loss": "1.5866", "code": "public boolean addStatement(Statement statement) {addedStmt = false; if (statement != null) {  addedStmt = true; } return addedStmt; }", "n_tokens": 48, "n_pass": [55, 6, 3]}
{"time": "2021-02-13 12:41:01.325397", "score": "0.6684", "loss": "1.5445", "code": "public boolean addStatement(Statement statement) {false; if (statement != null) {  addedStmt = true; } return addedStmt; }", "n_tokens": 44, "n_pass": [56, 7, 4]}
{"time": "2021-02-13 12:41:02.688416", "score": "0.6223", "loss": "1.7485", "code": "public boolean addStatement(Statement statement) {false; if (statement ) {  addedStmt = true; } return addedStmt; }", "n_tokens": 40, "n_pass": [59, 8, 5]}
{"time": "2021-02-13 12:41:03.987345", "score": "0.5146", "loss": "2.323", "code": "public boolean addStatement(Statement statement) {false; if (statement ) {  true; } return addedStmt; }", "n_tokens": 36, "n_pass": [61, 9, 6]}
{"time": "2021-02-13 12:41:10.549792", "score": "0.6765", "loss": "1.4042", "code": "public boolean addStatement(Statement statement) {false; if (statement ) {  true; } addedStmt; }", "n_tokens": 34, "n_pass": [95, 13, 7]}
{"time": "2021-02-13 12:41:13.151715", "score": "0.6765", "loss": "1.4042", "code": " boolean addStatement(Statement statement) {false; if (statement ) {  true; } addedStmt; }", "n_tokens": 33, "n_pass": [98, 15, 8]}
{"time": "2021-02-13 12:41:14.454898", "score": "0.6765", "loss": "1.4042", "code": "boolean addStatement(Statement statement) {false; if (statement ) {  true; } addedStmt; }", "n_tokens": 32, "n_pass": [99, 16, 9]}
{"time": "2021-02-13 12:41:16.459187", "score": "0.613", "loss": "1.8717", "code": "boolean addStatement(Statement statement) { if (statement ) {  true; } addedStmt; }", "n_tokens": 30, "n_pass": [106, 17, 10]}
{"time": "2021-02-13 12:41:17.766935", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement) { if (statement ) { ; } addedStmt; }", "n_tokens": 28, "n_pass": [112, 18, 11]}
{"time": "2021-02-13 12:41:19.057845", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement) { if (statement ) { } addedStmt; }", "n_tokens": 26, "n_pass": [113, 19, 12]}
{"time": "2021-02-13 12:41:25.696447", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement) { if (statement ) { }addedStmt; }", "n_tokens": 25, "n_pass": [153, 21, 13]}
{"time": "2021-02-13 12:41:28.328340", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement) { if (statement ) { }addedStmt;}", "n_tokens": 24, "n_pass": [156, 23, 14]}
{"time": "2021-02-13 12:41:30.322814", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){ if (statement ) { }addedStmt;}", "n_tokens": 23, "n_pass": [166, 24, 15]}
{"time": "2021-02-13 12:41:31.627283", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){if (statement ) { }addedStmt;}", "n_tokens": 22, "n_pass": [168, 25, 16]}
{"time": "2021-02-13 12:41:32.929706", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){if(statement ) { }addedStmt;}", "n_tokens": 21, "n_pass": [170, 26, 17]}
{"time": "2021-02-13 12:41:34.220881", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){if(statement) { }addedStmt;}", "n_tokens": 20, "n_pass": [173, 27, 18]}
{"time": "2021-02-13 12:41:35.515044", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){if(statement){ }addedStmt;}", "n_tokens": 19, "n_pass": [175, 28, 19]}
{"time": "2021-02-13 12:41:36.831557", "score": "0.5505", "loss": "2.4321", "code": "boolean addStatement(Statement statement){if(statement){}addedStmt;}", "n_tokens": 18, "n_pass": [177, 29, 20]}

Minimal simplified code:
boolean addStatement(Statement statement){if(statement){}addedStmt;}

