
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/prov/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X509CertificateObject other = (X509CertificateObject) o; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }
predict, score, loss = equals, 0.998588502407074, 0.001592515967786312

Trace of simplified code(s):
{"time": "2021-02-13 05:45:00.449354", "score": "0.9986", "loss": "0.0016", "code": "public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X509CertificateObject other = (X509CertificateObject) o; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 140, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 05:45:01.828882", "score": "0.9977", "loss": "0.0026", "code": "public boolean equals(Object o) { if (o == this) { return true; } if (o instanceof X509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 123, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 05:45:03.541251", "score": "0.9976", "loss": "0.0026", "code": "public boolean equals(Object o) { if (o == this) if (o instanceof X509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 114, "n_pass": [56, 3, 3]}
{"time": "2021-02-13 05:45:04.903507", "score": "0.9982", "loss": "0.002", "code": "public boolean equals(Object o) { if (o == this) if (o509CertificateObject) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 110, "n_pass": [97, 4, 4]}
{"time": "2021-02-13 05:45:06.263575", "score": "0.9966", "loss": "0.0036", "code": "public boolean equals(Object o) { if (o == this) if (o) { X5; if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 106, "n_pass": [98, 5, 5]}
{"time": "2021-02-13 05:45:07.619068", "score": "0.9967", "loss": "0.0035", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (this.hashValueSet && other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 102, "n_pass": [100, 6, 6]}
{"time": "2021-02-13 05:45:08.958416", "score": "0.9974", "loss": "0.0028", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (this& other.hashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 98, "n_pass": [102, 7, 7]}
{"time": "2021-02-13 05:45:10.293314", "score": "0.9953", "loss": "0.0052", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return this.c.equals(other.c); } return super.equals(o); }", "n_tokens": 94, "n_pass": [103, 8, 8]}
{"time": "2021-02-13 05:45:11.635201", "score": "0.9941", "loss": "0.0068", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return (other.c); } return super.equals(o); }", "n_tokens": 89, "n_pass": [111, 9, 9]}
{"time": "2021-02-13 05:45:12.965237", "score": "0.9957", "loss": "0.005", "code": "public boolean equals(Object o) { if (o == this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 84, "n_pass": [112, 10, 10]}
{"time": "2021-02-13 05:45:14.674165", "score": "0.9923", "loss": "0.0096", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (this.hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 80, "n_pass": [120, 11, 11]}
{"time": "2021-02-13 05:45:16.414573", "score": "0.9881", "loss": "0.0151", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other.hashValue) { return false; } } return ; } return super.equals(o); }", "n_tokens": 78, "n_pass": [187, 12, 12]}
{"time": "2021-02-13 05:45:17.745026", "score": "0.9878", "loss": "0.0158", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { return false; } } return ; } return super.equals(o); }", "n_tokens": 76, "n_pass": [191, 13, 13]}
{"time": "2021-02-13 05:45:19.081193", "score": "0.9885", "loss": "0.0147", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { false; } } return ; } return super.equals(o); }", "n_tokens": 74, "n_pass": [194, 14, 14]}
{"time": "2021-02-13 05:45:20.411643", "score": "0.981", "loss": "0.0253", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } } return ; } return super.equals(o); }", "n_tokens": 71, "n_pass": [195, 15, 15]}
{"time": "2021-02-13 05:45:21.737423", "score": "0.981", "loss": "0.0253", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; } return super.equals(o); }", "n_tokens": 68, "n_pass": [197, 16, 16]}
{"time": "2021-02-13 05:45:23.068368", "score": "0.973", "loss": "0.0406", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }super.equals(o); }", "n_tokens": 65, "n_pass": [199, 17, 17]}
{"time": "2021-02-13 05:45:24.410725", "score": "0.3542", "loss": "1.8601", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }(o); }", "n_tokens": 62, "n_pass": [200, 18, 18]}
{"time": "2021-02-13 05:45:25.728060", "score": "0.5318", "loss": "1.2203", "code": "public boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 59, "n_pass": [201, 19, 19]}
{"time": "2021-02-13 05:45:27.044466", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o) { if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 57, "n_pass": [203, 20, 20]}
{"time": "2021-02-13 05:45:36.123635", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){ if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 56, "n_pass": [293, 21, 21]}
{"time": "2021-02-13 05:45:37.476839", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if ( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 55, "n_pass": [294, 22, 22]}
{"time": "2021-02-13 05:45:38.778939", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if( this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 54, "n_pass": [296, 23, 23]}
{"time": "2021-02-13 05:45:40.091715", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this) if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 53, "n_pass": [298, 24, 24]}
{"time": "2021-02-13 05:45:41.392942", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this)if (o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 52, "n_pass": [301, 25, 25]}
{"time": "2021-02-13 05:45:42.700506", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this)if(o) { if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 51, "n_pass": [303, 26, 26]}
{"time": "2021-02-13 05:45:44.010678", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this)if(o){ if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 50, "n_pass": [307, 27, 27]}
{"time": "2021-02-13 05:45:45.326219", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this)if(o){if (thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 49, "n_pass": [309, 28, 28]}
{"time": "2021-02-13 05:45:46.636981", "score": "0.5318", "loss": "1.2203", "code": "boolean equals(Object o){if(this)if(o){if(thishashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 48, "n_pass": [311, 29, 29]}
{"time": "2021-02-13 05:45:47.949903", "score": "0.5608", "loss": "1.059", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet) { if (hashValue != other) { } }; }; }", "n_tokens": 47, "n_pass": [313, 30, 30]}
{"time": "2021-02-13 05:45:49.262302", "score": "0.5608", "loss": "1.059", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){ if (hashValue != other) { } }; }; }", "n_tokens": 46, "n_pass": [316, 31, 31]}
{"time": "2021-02-13 05:45:50.570007", "score": "0.5608", "loss": "1.059", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if (hashValue != other) { } }; }; }", "n_tokens": 45, "n_pass": [318, 32, 32]}
{"time": "2021-02-13 05:45:51.912834", "score": "0.5608", "loss": "1.059", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue != other) { } }; }; }", "n_tokens": 44, "n_pass": [320, 33, 33]}
{"time": "2021-02-13 05:45:53.217868", "score": "0.5608", "loss": "1.059", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue!= other) { } }; }; }", "n_tokens": 43, "n_pass": [323, 34, 34]}
{"time": "2021-02-13 05:45:54.538023", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue= other) { } }; }; }", "n_tokens": 42, "n_pass": [324, 35, 35]}
{"time": "2021-02-13 05:45:55.851060", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other) { } }; }; }", "n_tokens": 41, "n_pass": [326, 36, 36]}
{"time": "2021-02-13 05:45:57.167527", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){ } }; }; }", "n_tokens": 40, "n_pass": [329, 37, 37]}
{"time": "2021-02-13 05:45:58.478309", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){} }; }; }", "n_tokens": 39, "n_pass": [331, 38, 38]}
{"time": "2021-02-13 05:45:59.789049", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){}}; }; }", "n_tokens": 38, "n_pass": [333, 39, 39]}
{"time": "2021-02-13 05:46:01.117576", "score": "0.224", "loss": "2.3571", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue=other){}}}; }", "n_tokens": 36, "n_pass": [335, 40, 40]}
{"time": "2021-02-13 05:46:03.157740", "score": "0.2383", "loss": "2.1388", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValueother){}}}; }", "n_tokens": 35, "n_pass": [364, 41, 41]}
{"time": "2021-02-13 05:46:04.465073", "score": "0.2458", "loss": "2.0202", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}; }", "n_tokens": 34, "n_pass": [365, 42, 42]}
{"time": "2021-02-13 05:46:07.182237", "score": "0.2458", "loss": "2.0202", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}} }", "n_tokens": 33, "n_pass": [403, 43, 43]}
{"time": "2021-02-13 05:46:08.481469", "score": "0.2458", "loss": "2.0202", "code": "boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}}", "n_tokens": 32, "n_pass": [404, 44, 44]}

Minimal simplified code:
boolean equals(Object o){if(this)if(o){if(hashValueSet){if(hashValue){}}}}

