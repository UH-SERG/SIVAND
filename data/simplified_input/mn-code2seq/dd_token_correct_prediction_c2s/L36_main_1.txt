
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/JeffLi1993__java-core-learning-example/src/main/java/org/javacore/thread/CallableDemo_main.java
method_name = main
method_body = public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }
predict, score, loss = main, 0.9958269000053406, 0.004585012793540955

Trace of simplified code(s):
{"time": "2021-02-13 04:15:50.162215", "score": "0.9983", "loss": "0.0021", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>(); for (int i = 0; i < 5; i++) results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 200, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:15:51.535404", "score": "0.9971", "loss": "0.0034", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>();results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get()); } catch (InterruptedException e) { System.out.println(e); e.printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 175, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 04:15:52.893549", "score": "0.9976", "loss": "0.0028", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>();results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get());printStackTrace(); } catch (ExecutionException e) { System.out.println(e); e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 150, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 04:15:54.235052", "score": "0.9982", "loss": "0.0023", "code": "public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); ArrayList<Future<String>> results = new ArrayList<>();results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get());; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 125, "n_pass": [25, 4, 4]}
{"time": "2021-02-13 04:15:55.604624", "score": "0.9931", "loss": "0.0095", "code": "public static void main(String[] args) { ExecutorService exec = Executors.results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try { System.out.println(fs.get());; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 100, "n_pass": [28, 5, 5]}
{"time": "2021-02-13 04:15:56.952319", "score": "0.9901", "loss": "0.0142", "code": "public static void main(String[] args) { ExecutorService exec = Executors.results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try {;; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 87, "n_pass": [44, 6, 6]}
{"time": "2021-02-13 04:15:58.686004", "score": "0.9927", "loss": "0.0092", "code": "public static void main(String[] args) { ExecutorService.results.add(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try {;; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 81, "n_pass": [73, 7, 7]}
{"time": "2021-02-13 04:16:00.407846", "score": "0.9389", "loss": "0.0823", "code": "public static void main(String[] args) { ExecutorServiceadd(exec.submit(new TaskWithResult(i))); for (Future<String> fs : results) try {;; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 78, "n_pass": [112, 8, 8]}
{"time": "2021-02-13 04:16:01.721988", "score": "0.9764", "loss": "0.0313", "code": "public static void main(String[] args) { ExecutorServiceadd(exec.submit((i))); for (Future<String> fs : results) try {;; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 75, "n_pass": [114, 9, 9]}
{"time": "2021-02-13 04:16:03.054338", "score": "0.9774", "loss": "0.0318", "code": "public static void main(String[] args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;; e.printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 72, "n_pass": [115, 10, 10]}
{"time": "2021-02-13 04:16:04.372032", "score": "0.9706", "loss": "0.0418", "code": "public static void main(String[] args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;printStackTrace(); } finally { exec.shutdown(); } }", "n_tokens": 69, "n_pass": [124, 11, 11]}
{"time": "2021-02-13 04:16:05.683009", "score": "0.9542", "loss": "0.066", "code": "public static void main(String[] args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 66, "n_pass": [125, 12, 12]}
{"time": "2021-02-13 04:16:07.009903", "score": "0.9542", "loss": "0.066", "code": " void main(String[] args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 63, "n_pass": [131, 13, 13]}
{"time": "2021-02-13 04:16:11.357222", "score": "0.9542", "loss": "0.066", "code": "void main(String[] args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 62, "n_pass": [192, 14, 14]}
{"time": "2021-02-13 04:16:13.413263", "score": "0.9542", "loss": "0.066", "code": "void main(String[]args) { ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 61, "n_pass": [200, 15, 15]}
{"time": "2021-02-13 04:16:14.733488", "score": "0.9542", "loss": "0.066", "code": "void main(String[]args){ ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 60, "n_pass": [203, 16, 16]}
{"time": "2021-02-13 04:16:16.046165", "score": "0.9542", "loss": "0.066", "code": "void main(String[]args){ExecutorServiceadd(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 59, "n_pass": [205, 17, 17]}
{"time": "2021-02-13 04:16:17.403415", "score": "0.9815", "loss": "0.0261", "code": "void main(String[]args){add(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 58, "n_pass": [206, 18, 18]}
{"time": "2021-02-13 04:16:18.730085", "score": "0.9932", "loss": "0.0085", "code": "void main(String[]args){(exec.submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 57, "n_pass": [207, 19, 19]}
{"time": "2021-02-13 04:16:20.067709", "score": "0.9919", "loss": "0.0102", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {;;; } finally { exec.shutdown(); } }", "n_tokens": 55, "n_pass": [209, 20, 20]}
{"time": "2021-02-13 04:16:21.392229", "score": "0.9919", "loss": "0.0102", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {; } finally { exec.shutdown(); } }", "n_tokens": 53, "n_pass": [222, 21, 21]}
{"time": "2021-02-13 04:16:22.719174", "score": "0.9919", "loss": "0.0102", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {} finally { exec.shutdown(); } }", "n_tokens": 51, "n_pass": [223, 22, 22]}
{"time": "2021-02-13 04:16:24.048766", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {} finally { shutdown(); } }", "n_tokens": 49, "n_pass": [227, 23, 23]}
{"time": "2021-02-13 04:16:30.787676", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {} finally { shutdown();} }", "n_tokens": 48, "n_pass": [299, 24, 24]}
{"time": "2021-02-13 04:16:32.120650", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit()); for (Future<String> fs : results) try {} finally { shutdown();}}", "n_tokens": 47, "n_pass": [300, 25, 25]}
{"time": "2021-02-13 04:16:34.171819", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for (Future<String> fs : results) try {} finally { shutdown();}}", "n_tokens": 46, "n_pass": [318, 26, 26]}
{"time": "2021-02-13 04:16:35.487855", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String> fs : results) try {} finally { shutdown();}}", "n_tokens": 45, "n_pass": [320, 27, 27]}
{"time": "2021-02-13 04:16:36.807505", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs : results) try {} finally { shutdown();}}", "n_tokens": 44, "n_pass": [326, 28, 28]}
{"time": "2021-02-13 04:16:38.141019", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs: results) try {} finally { shutdown();}}", "n_tokens": 43, "n_pass": [328, 29, 29]}
{"time": "2021-02-13 04:16:39.485540", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results) try {} finally { shutdown();}}", "n_tokens": 42, "n_pass": [330, 30, 30]}
{"time": "2021-02-13 04:16:40.810803", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results)try {} finally { shutdown();}}", "n_tokens": 41, "n_pass": [333, 31, 31]}
{"time": "2021-02-13 04:16:42.146794", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results)try{} finally { shutdown();}}", "n_tokens": 40, "n_pass": [335, 32, 32]}
{"time": "2021-02-13 04:16:43.464815", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results)try{}finally { shutdown();}}", "n_tokens": 39, "n_pass": [338, 33, 33]}
{"time": "2021-02-13 04:16:44.781569", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results)try{}finally{ shutdown();}}", "n_tokens": 38, "n_pass": [340, 34, 34]}
{"time": "2021-02-13 04:16:46.127735", "score": "0.9945", "loss": "0.0073", "code": "void main(String[]args){(submit());for(Future<String>fs:results)try{}finally{shutdown();}}", "n_tokens": 37, "n_pass": [342, 35, 35]}

Minimal simplified code:
void main(String[]args){(submit());for(Future<String>fs:results)try{}finally{shutdown();}}

