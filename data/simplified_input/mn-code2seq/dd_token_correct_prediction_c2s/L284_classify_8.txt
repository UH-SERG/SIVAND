
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/commasrl/src/main/java/edu/illinois/cs/cogcomp/comma/lbj/ParseTreeFeature_classify.java
method_name = classify
method_body = public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? "null" : examples.getClass().getName(); System.err.println("Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '" + type + "' as input."); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }
predict, score, loss = classify, 0.9999626874923706, 0.011321763508021832

Trace of simplified code(s):
{"time": "2021-02-13 13:12:25.193264", "score": "1.0", "loss": "0.0113", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier 'ParseTreeFeature(Comma)' defined on line 75 of CommaClassifier.lbj received '\" + type + \"' as input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 151, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 13:12:26.577967", "score": "1.0", "loss": "0.011", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples == null ? \"null\" : examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 113, "n_pass": [10, 2, 2]}
{"time": "2021-02-13 13:12:27.936138", "score": "1.0", "loss": "0.0121", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace(); System.exit(1); } return super.classify(examples); }", "n_tokens": 104, "n_pass": [46, 3, 3]}
{"time": "2021-02-13 13:12:29.297804", "score": "1.0", "loss": "0.0148", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace.exit(1); } return super.classify(examples); }", "n_tokens": 99, "n_pass": [87, 4, 4]}
{"time": "2021-02-13 13:12:30.620320", "score": "1.0", "loss": "0.014", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples instanceof Comma[])) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 94, "n_pass": [88, 5, 5]}
{"time": "2021-02-13 13:12:31.962606", "score": "1.0", "loss": "0.0122", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { String type = examples ==  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 89, "n_pass": [98, 6, 6]}
{"time": "2021-02-13 13:12:33.667703", "score": "1.0", "loss": "0.0121", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { String type =  examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 84, "n_pass": [101, 7, 7]}
{"time": "2021-02-13 13:12:35.130178", "score": "1.0", "loss": "0.0106", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) {   examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 79, "n_pass": [119, 8, 8]}
{"time": "2021-02-13 13:12:37.174674", "score": "1.0", "loss": "0.0106", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples.getClass().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 77, "n_pass": [171, 9, 9]}
{"time": "2021-02-13 13:12:38.530019", "score": "1.0", "loss": "0.01", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples().getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 75, "n_pass": [173, 10, 10]}
{"time": "2021-02-13 13:12:39.866952", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples.getName(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 73, "n_pass": [174, 11, 11]}
{"time": "2021-02-13 13:12:41.185108", "score": "1.0", "loss": "0.0078", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples(); System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 71, "n_pass": [175, 12, 12]}
{"time": "2021-02-13 13:12:42.504784", "score": "1.0", "loss": "0.0087", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examples; System.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 69, "n_pass": [176, 13, 13]}
{"time": "2021-02-13 13:12:43.841776", "score": "1.0", "loss": "0.0104", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesSystem.err.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 67, "n_pass": [177, 14, 14]}
{"time": "2021-02-13 13:12:45.175475", "score": "1.0", "loss": "0.0127", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { exampleserr.println(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 65, "n_pass": [178, 15, 15]}
{"time": "2021-02-13 13:12:46.491445", "score": "1.0", "loss": "0.012", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\"Classifier input.\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 63, "n_pass": [179, 16, 16]}
{"time": "2021-02-13 13:12:47.788348", "score": "1.0", "loss": "0.0145", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; } return super.classify(examples); }", "n_tokens": 60, "n_pass": [181, 17, 17]}
{"time": "2021-02-13 13:12:49.141975", "score": "0.9999", "loss": "0.0392", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify(examples); }", "n_tokens": 57, "n_pass": [187, 18, 18]}
{"time": "2021-02-13 13:12:51.767914", "score": "0.4716", "loss": "1.1333", "code": "public FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 54, "n_pass": [189, 20, 19]}
{"time": "2021-02-13 13:12:53.087785", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[] classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 52, "n_pass": [191, 21, 20]}
{"time": "2021-02-13 13:13:00.370560", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[] examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 51, "n_pass": [261, 24, 21]}
{"time": "2021-02-13 13:13:01.681259", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples) { if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 50, "n_pass": [267, 25, 22]}
{"time": "2021-02-13 13:13:03.015557", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){ if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 49, "n_pass": [270, 26, 23]}
{"time": "2021-02-13 13:13:04.321149", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if (!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 48, "n_pass": [272, 27, 24]}
{"time": "2021-02-13 13:13:05.636685", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples )) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 47, "n_pass": [274, 28, 25]}
{"time": "2021-02-13 13:13:08.260472", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)) { examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 46, "n_pass": [279, 30, 26]}
{"time": "2021-02-13 13:13:09.570246", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){ examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 45, "n_pass": [282, 31, 27]}
{"time": "2021-02-13 13:13:10.892124", "score": "0.4716", "loss": "1.1333", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examplesprintln(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 44, "n_pass": [284, 32, 28]}
{"time": "2021-02-13 13:13:13.505615", "score": "0.4478", "loss": "1.2265", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\".\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 43, "n_pass": [286, 34, 29]}
{"time": "2021-02-13 13:13:14.818748", "score": "0.4723", "loss": "1.1597", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\"); new Exception().printStackTrace; }super.classify; }", "n_tokens": 42, "n_pass": [289, 35, 30]}
{"time": "2021-02-13 13:13:16.136031", "score": "0.4723", "loss": "1.1597", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");new Exception().printStackTrace; }super.classify; }", "n_tokens": 41, "n_pass": [293, 36, 31]}
{"time": "2021-02-13 13:13:17.439121", "score": "0.611", "loss": "0.8854", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }super.classify; }", "n_tokens": 39, "n_pass": [294, 37, 32]}
{"time": "2021-02-13 13:13:18.755424", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }classify; }", "n_tokens": 37, "n_pass": [299, 38, 33]}
{"time": "2021-02-13 13:13:25.404205", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace; }classify;}", "n_tokens": 36, "n_pass": [344, 42, 34]}
{"time": "2021-02-13 13:13:29.376654", "score": "0.4454", "loss": "1.5668", "code": "FeatureVector[]classify(Object[]examples){if(!(examples)){examples(\"\");Exception().printStackTrace;}classify;}", "n_tokens": 35, "n_pass": [376, 45, 35]}

Minimal simplified code:
FeatureVector[]classify(Object[]examples){if(!(examples)){examples("");Exception().printStackTrace;}classify;}

