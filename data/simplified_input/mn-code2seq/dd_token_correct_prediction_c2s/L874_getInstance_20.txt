
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/DERT61UTF8String_getInstance.java
method_name = getInstance
method_body = public static DERT61UTF8String getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERT61String || o instanceof DERT61UTF8String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }
predict, score, loss = getInstance, 0.9684617519378662, 0.10360869765281677

Trace of simplified code(s):
{"time": "2021-02-13 23:33:56.318111", "score": "0.9685", "loss": "0.1036", "code": "public static DERT61UTF8String getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERT61String || o instanceof DERT61UTF8String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }", "n_tokens": 119, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 23:33:57.673160", "score": "0.9616", "loss": "0.133", "code": "UTF8String getInstance(ASN1TaggedObject obj, boolean explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERT61String || o instanceof DERT61UTF8String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }", "n_tokens": 112, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 23:33:59.045851", "score": "0.9567", "loss": "0.1384", "code": "UTF8String getInstance(ASN explicit) { ASN1Primitive o = obj.getObject(); if (explicit || o instanceof DERT61String || o instanceof DERT61UTF8String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }", "n_tokens": 105, "n_pass": [45, 3, 3]}
{"time": "2021-02-13 23:34:00.432348", "score": "0.9283", "loss": "0.2299", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit || o instanceof DERT61String || o instanceof DERT61UTF8String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }", "n_tokens": 98, "n_pass": [47, 4, 4]}
{"time": "2021-02-13 23:34:02.144813", "score": "0.8744", "loss": "0.3955", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit || o instanceof DERT61String || oString) { return getInstance(o); } else { return new DERT61UTF8String(ASN1OctetString.getInstance(o).getOctets()); } }", "n_tokens": 90, "n_pass": [52, 5, 5]}
{"time": "2021-02-13 23:34:03.507569", "score": "0.8925", "loss": "0.3344", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit || o instanceof DERT61String || oString) { return getInstance(o); } else { return new DERT61UTF8String(ASN1()); } }", "n_tokens": 82, "n_pass": [57, 6, 6]}
{"time": "2021-02-13 23:34:04.839552", "score": "0.9317", "loss": "0.2002", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit || o instanceof DERT6String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1()); } }", "n_tokens": 75, "n_pass": [64, 7, 7]}
{"time": "2021-02-13 23:34:06.160790", "score": "0.8626", "loss": "0.4115", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit ||String) { return getInstance(o); } else { return new DERT61UTF8String(ASN1()); } }", "n_tokens": 68, "n_pass": [74, 8, 8]}
{"time": "2021-02-13 23:34:08.926710", "score": "0.7308", "loss": "0.9771", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit ||String) { return getInstance(o); } else { return61UTF8String(ASN1()); } }", "n_tokens": 64, "n_pass": [107, 10, 9]}
{"time": "2021-02-13 23:34:10.269710", "score": "0.6229", "loss": "1.4724", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit ||String) { return getInstance(o); } else { returnString(ASN1()); } }", "n_tokens": 60, "n_pass": [108, 11, 10]}
{"time": "2021-02-13 23:34:17.670310", "score": "0.6413", "loss": "1.3765", "code": "UTF8String getInstance(ASN explicit) { ASNobj.getObject(); if (explicit ||String) { return getInstance(o); } else { returnString(ASN1); } }", "n_tokens": 58, "n_pass": [159, 16, 11]}
{"time": "2021-02-13 23:34:19.041100", "score": "0.6413", "loss": "1.3765", "code": "UTFString getInstance(ASN explicit) { ASNobj.getObject(); if (explicit ||String) { return getInstance(o); } else { returnString(ASN1); } }", "n_tokens": 57, "n_pass": [163, 17, 12]}
{"time": "2021-02-13 23:34:22.052187", "score": "0.7386", "loss": "0.8941", "code": "UTFString getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { return getInstance(o); } else { returnString(ASN1); } }", "n_tokens": 55, "n_pass": [170, 19, 13]}
{"time": "2021-02-13 23:34:24.711978", "score": "0.6891", "loss": "1.1488", "code": "UTFString getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { getInstance(o); } else { returnString(ASN1); } }", "n_tokens": 53, "n_pass": [180, 21, 14]}
{"time": "2021-02-13 23:34:27.397679", "score": "0.6927", "loss": "1.0856", "code": "UTFString getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { getInstance(o); } { returnString(ASN1); } }", "n_tokens": 51, "n_pass": [185, 23, 15]}
{"time": "2021-02-13 23:34:28.735868", "score": "0.6658", "loss": "1.1256", "code": "UTFString getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { getInstance(o); } {String(ASN1); } }", "n_tokens": 49, "n_pass": [187, 24, 16]}
{"time": "2021-02-13 23:34:30.096904", "score": "0.6521", "loss": "1.2848", "code": "UTFString getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { getInstance(o); } {String(); } }", "n_tokens": 47, "n_pass": [189, 25, 17]}
{"time": "2021-02-13 23:34:31.443042", "score": "0.6352", "loss": "1.4198", "code": "String getInstance(ASN explicit) {obj.getObject(); if (explicit ||String) { getInstance(o); } {String(); } }", "n_tokens": 46, "n_pass": [193, 26, 18]}
{"time": "2021-02-13 23:34:33.472997", "score": "0.6388", "loss": "1.41", "code": "String getInstance(ASN explicit) {getObject(); if (explicit ||String) { getInstance(o); } {String(); } }", "n_tokens": 44, "n_pass": [200, 27, 19]}
{"time": "2021-02-13 23:34:41.535246", "score": "0.6388", "loss": "1.41", "code": "String getInstance(ASN explicit) {getObject();if (explicit ||String) { getInstance(o); } {String(); } }", "n_tokens": 43, "n_pass": [269, 29, 20]}
{"time": "2021-02-13 23:34:42.885628", "score": "0.6388", "loss": "1.41", "code": "String getInstance(ASN explicit) {getObject();if(explicit ||String) { getInstance(o); } {String(); } }", "n_tokens": 42, "n_pass": [270, 30, 21]}
{"time": "2021-02-13 23:34:44.227408", "score": "0.6388", "loss": "1.41", "code": "String getInstance(ASN explicit) {getObject();if(explicit||String) { getInstance(o); } {String(); } }", "n_tokens": 41, "n_pass": [273, 31, 22]}
{"time": "2021-02-13 23:34:45.542160", "score": "0.66", "loss": "1.3326", "code": "String getInstance(ASN explicit) {getObject();if(explicit|String) { getInstance(o); } {String(); } }", "n_tokens": 40, "n_pass": [274, 32, 23]}
{"time": "2021-02-13 23:34:46.884260", "score": "0.8177", "loss": "0.5904", "code": "String getInstance(ASN explicit) {getObject();if(explicitString) { getInstance(o); } {String(); } }", "n_tokens": 39, "n_pass": [275, 33, 24]}
{"time": "2021-02-13 23:34:48.225683", "score": "0.8562", "loss": "0.4661", "code": "String getInstance(ASN explicit) {getObject();if(explicit) { getInstance(o); } {String(); } }", "n_tokens": 38, "n_pass": [276, 34, 25]}
{"time": "2021-02-13 23:34:49.553813", "score": "0.8562", "loss": "0.4661", "code": "String getInstance(ASN explicit) {getObject();if(explicit){ getInstance(o); } {String(); } }", "n_tokens": 37, "n_pass": [278, 35, 26]}
{"time": "2021-02-13 23:34:50.882891", "score": "0.8562", "loss": "0.4661", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance(o); } {String(); } }", "n_tokens": 36, "n_pass": [280, 36, 27]}
{"time": "2021-02-13 23:34:53.536518", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance(); } {String(); } }", "n_tokens": 35, "n_pass": [283, 38, 28]}
{"time": "2021-02-13 23:34:54.866101", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance();} {String(); } }", "n_tokens": 34, "n_pass": [286, 39, 29]}
{"time": "2021-02-13 23:34:56.197819", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance();}{String(); } }", "n_tokens": 33, "n_pass": [288, 40, 30]}
{"time": "2021-02-13 23:34:57.620445", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance();}{String();} }", "n_tokens": 32, "n_pass": [294, 41, 31]}
{"time": "2021-02-13 23:34:58.961642", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit) {getObject();if(explicit){getInstance();}{String();}}", "n_tokens": 31, "n_pass": [296, 42, 32]}
{"time": "2021-02-13 23:35:01.339578", "score": "0.7121", "loss": "1.0681", "code": "String getInstance(ASN explicit){getObject();if(explicit){getInstance();}{String();}}", "n_tokens": 30, "n_pass": [306, 43, 33]}

Minimal simplified code:
String getInstance(ASN explicit){getObject();if(explicit){getInstance();}{String();}}

