
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/droidefense__engine/mods/memapktool/src/main/java/org/jf/dexlib2/base/value/BaseFloatEncodedValue_equals.java
method_name = equals
method_body = @Override public boolean equals(Object o) { if (o != null && o instanceof FloatEncodedValue) { return Float.floatToRawIntBits(getValue()) == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }
predict, score, loss = equals, 0.9643210768699646, 0.04926484823226929

Trace of simplified code(s):
{"time": "2021-02-13 16:52:22.102407", "score": "0.9643", "loss": "0.0493", "code": "@Override public boolean equals(Object o) { if (o != null && o instanceof FloatEncodedValue) { return Float.floatToRawIntBits(getValue()) == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 16:52:23.453453", "score": "0.9328", "loss": "0.1049", "code": " boolean equals(Object o) { if (o != null && o instanceof FloatEncodedValue) { return Float.floatToRawIntBits(getValue()) == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 74, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 16:52:24.776345", "score": "0.9504", "loss": "0.0769", "code": " boolean equals(Object o) { if (o != o instanceof FloatEncodedValue) { return Float.floatToRawIntBits(getValue()) == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 69, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 16:52:26.096872", "score": "0.9161", "loss": "0.1329", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { return Float.floatToRawIntBits(getValue()) == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 64, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 16:52:27.778431", "score": "0.9322", "loss": "0.1019", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { return Float.floatToRawIntBits == Float.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 59, "n_pass": [53, 5, 5]}
{"time": "2021-02-13 16:52:29.097563", "score": "0.8043", "loss": "0.4074", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { return Float.floatToRawIntBits.floatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 54, "n_pass": [54, 6, 6]}
{"time": "2021-02-13 16:52:30.444062", "score": "0.4154", "loss": "1.3622", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { return FloatfloatToRawIntBits(((FloatEncodedValue) o).getValue()); } return false; }", "n_tokens": 51, "n_pass": [89, 7, 7]}
{"time": "2021-02-13 16:52:31.762997", "score": "0.4819", "loss": "1.1828", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { return FloatfloatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 48, "n_pass": [91, 8, 8]}
{"time": "2021-02-13 16:52:36.067966", "score": "0.7482", "loss": "0.5782", "code": " boolean equals(Object o) { if (o !=FloatEncodedValue) { floatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 45, "n_pass": [110, 11, 9]}
{"time": "2021-02-13 16:52:39.080959", "score": "0.4054", "loss": "1.4585", "code": " boolean equals(Object o) { if (o=FloatEncodedValue) { floatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 43, "n_pass": [126, 13, 10]}
{"time": "2021-02-13 16:52:40.381184", "score": "0.6874", "loss": "0.7593", "code": " boolean equals(Object o) { if (o) { floatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 41, "n_pass": [127, 14, 11]}
{"time": "2021-02-13 16:52:46.720156", "score": "0.6874", "loss": "0.7593", "code": " boolean equals(Object o) { if (o){ floatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 40, "n_pass": [180, 16, 12]}
{"time": "2021-02-13 16:52:48.019455", "score": "0.6874", "loss": "0.7593", "code": " boolean equals(Object o) { if (o){floatToRawIntBits(( o).getValue()); } return false; }", "n_tokens": 39, "n_pass": [182, 17, 13]}
{"time": "2021-02-13 16:52:49.309914", "score": "0.4417", "loss": "1.0055", "code": " boolean equals(Object o) { if (o){(( o).getValue()); } return false; }", "n_tokens": 38, "n_pass": [183, 18, 14]}
{"time": "2021-02-13 16:52:50.633277", "score": "0.4417", "loss": "1.0055", "code": " boolean equals(Object o) { if (o){((o).getValue()); } return false; }", "n_tokens": 37, "n_pass": [186, 19, 15]}
{"time": "2021-02-13 16:52:51.952956", "score": "0.5267", "loss": "0.8078", "code": " boolean equals(Object o) { if (o){((o)getValue()); } return false; }", "n_tokens": 36, "n_pass": [189, 20, 16]}
{"time": "2021-02-13 16:52:53.253011", "score": "0.401", "loss": "1.3047", "code": " boolean equals(Object o) { if (o){((o)getValue()); } false; }", "n_tokens": 34, "n_pass": [194, 21, 17]}
{"time": "2021-02-13 16:52:55.854090", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o) { if (o){((o)getValue()); } false; }", "n_tokens": 33, "n_pass": [197, 23, 18]}
{"time": "2021-02-13 16:52:57.903787", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){ if (o){((o)getValue()); } false; }", "n_tokens": 32, "n_pass": [206, 24, 19]}
{"time": "2021-02-13 16:52:59.200560", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){if (o){((o)getValue()); } false; }", "n_tokens": 31, "n_pass": [208, 25, 20]}
{"time": "2021-02-13 16:53:00.523173", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){if(o){((o)getValue()); } false; }", "n_tokens": 30, "n_pass": [210, 26, 21]}
{"time": "2021-02-13 16:53:05.545628", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){if(o){((o)getValue());} false; }", "n_tokens": 29, "n_pass": [252, 28, 22]}
{"time": "2021-02-13 16:53:06.863998", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){if(o){((o)getValue());}false; }", "n_tokens": 28, "n_pass": [254, 29, 23]}
{"time": "2021-02-13 16:53:09.513119", "score": "0.401", "loss": "1.3047", "code": "boolean equals(Object o){if(o){((o)getValue());}false;}", "n_tokens": 27, "n_pass": [257, 31, 24]}

Minimal simplified code:
boolean equals(Object o){if(o){((o)getValue());}false;}

