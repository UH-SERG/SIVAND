
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/Waikato__meka/src/main/java/meka/classifiers/multilabel/meta/EM_getOptions.java
method_name = getOptions
method_body = @Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }
predict, score, loss = getOptions, 0.9945467710494995, 0.011730188503861427

Trace of simplified code(s):
{"time": "2021-02-13 22:06:56.118531", "score": "0.9945", "loss": "0.0117", "code": "@Override public String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 77, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 22:06:57.851467", "score": "0.9903", "loss": "0.0225", "code": " String[] getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 73, "n_pass": [44, 2, 2]}
{"time": "2021-02-13 22:06:59.949753", "score": "0.9844", "loss": "0.0362", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils.add(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 71, "n_pass": [91, 3, 3]}
{"time": "2021-02-13 22:07:02.415768", "score": "0.9842", "loss": "0.0364", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations()); OptionUtils.add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 69, "n_pass": [105, 4, 4]}
{"time": "2021-02-13 22:07:03.797139", "score": "0.98", "loss": "0.0503", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result, super.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 66, "n_pass": [111, 5, 5]}
{"time": "2021-02-13 22:07:05.163983", "score": "0.7262", "loss": "1.7287", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions()); return OptionUtils.toArray(result); }", "n_tokens": 63, "n_pass": [113, 6, 6]}
{"time": "2021-02-13 22:07:06.500757", "score": "0.6548", "loss": "2.335", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());OptionUtils.toArray(result); }", "n_tokens": 60, "n_pass": [116, 7, 7]}
{"time": "2021-02-13 22:07:07.862158", "score": "0.617", "loss": "2.5608", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());(result); }", "n_tokens": 57, "n_pass": [117, 8, 8]}
{"time": "2021-02-13 22:07:09.204991", "score": "0.6143", "loss": "2.6765", "code": " String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 54, "n_pass": [118, 9, 9]}
{"time": "2021-02-13 22:07:16.455538", "score": "0.6143", "loss": "2.6765", "code": "String getOptions() { List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 53, "n_pass": [190, 10, 10]}
{"time": "2021-02-13 22:07:18.571193", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){ List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 52, "n_pass": [195, 11, 11]}
{"time": "2021-02-13 22:07:19.930469", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String> result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 51, "n_pass": [197, 12, 12]}
{"time": "2021-02-13 22:07:21.637665", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result = new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 50, "n_pass": [202, 13, 13]}
{"time": "2021-02-13 22:07:23.014700", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result= new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 49, "n_pass": [204, 14, 14]}
{"time": "2021-02-13 22:07:24.388482", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result=new ArrayList<>(); OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 48, "n_pass": [206, 15, 15]}
{"time": "2021-02-13 22:07:25.736271", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result, 'I', getIterations());add(result.getOptions());; }", "n_tokens": 47, "n_pass": [215, 16, 16]}
{"time": "2021-02-13 22:07:27.086728", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I', getIterations());add(result.getOptions());; }", "n_tokens": 46, "n_pass": [220, 17, 17]}
{"time": "2021-02-13 22:07:28.773902", "score": "0.6143", "loss": "2.6765", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(result.getOptions());; }", "n_tokens": 45, "n_pass": [225, 18, 18]}
{"time": "2021-02-13 22:07:31.497575", "score": "0.5943", "loss": "2.8916", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(getOptions());; }", "n_tokens": 43, "n_pass": [230, 20, 19]}
{"time": "2021-02-13 22:07:38.160968", "score": "0.5943", "loss": "2.8916", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(getOptions()); }", "n_tokens": 42, "n_pass": [282, 22, 20]}
{"time": "2021-02-13 22:07:39.524644", "score": "0.5943", "loss": "2.8916", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());add(getOptions());}", "n_tokens": 41, "n_pass": [283, 23, 21]}
{"time": "2021-02-13 22:07:43.402130", "score": "0.6027", "loss": "3.1667", "code": "String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());(getOptions());}", "n_tokens": 40, "n_pass": [318, 24, 22]}

Minimal simplified code:
String getOptions(){List<String>result=new ArrayList<>();OptionUtils(result,'I',getIterations());(getOptions());}

