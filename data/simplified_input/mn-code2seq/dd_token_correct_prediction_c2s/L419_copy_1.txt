
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/sakaiproject__sakai/kernel/api/src/main/java/org/sakaiproject/content/cover/ContentHostingService_copy.java
method_name = copy
method_body = public static String copy(java.lang.String param0, java.lang.String param1) throws org.sakaiproject.exception.PermissionException, org.sakaiproject.exception.IdUnusedException, org.sakaiproject.exception.TypeException, org.sakaiproject.exception.InUseException, org.sakaiproject.exception.OverQuotaException, org.sakaiproject.exception.IdUsedException, org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = getInstance(); if (service == null) return null; return service.copy(param0, param1); }
predict, score, loss = copy, 0.9903019070625305, 0.013151852414011955

Trace of simplified code(s):
{"time": "2021-02-13 15:39:09.271439", "score": "0.9903", "loss": "0.0132", "code": "public static String copy(java.lang.String param0, java.lang.String param1) throws org.sakaiproject.exception.PermissionException, org.sakaiproject.exception.IdUnusedException, org.sakaiproject.exception.TypeException, org.sakaiproject.exception.InUseException, org.sakaiproject.exception.OverQuotaException, org.sakaiproject.exception.IdUsedException, org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = getInstance(); if (service == null) return null; return service.copy(param0, param1); }", "n_tokens": 145, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:39:10.629169", "score": "0.9969", "loss": "0.0088", "code": "public static String copy(java.lang.String param0, java.lang.String param1) throws org.sakaiproject.exception.OverQuotaException, org.sakaiproject.exception.IdUsedException, org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = getInstance(); if (service == null) return null; return service.copy(param0, param1); }", "n_tokens": 109, "n_pass": [9, 2, 2]}
{"time": "2021-02-13 15:39:12.104797", "score": "0.9984", "loss": "0.0111", "code": "public static String copy(java.lang.String param0, java.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = getInstance(); if (service == null) return null; return service.copy(param0, param1); }", "n_tokens": 91, "n_pass": [18, 3, 3]}
{"time": "2021-02-13 15:39:13.423043", "score": "0.9988", "loss": "0.0082", "code": "public static String copy(java.lang.String param0, java.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = null; return service.copy(param0, param1); }", "n_tokens": 73, "n_pass": [19, 4, 4]}
{"time": "2021-02-13 15:39:14.764981", "score": "0.9989", "loss": "0.0072", "code": "public static String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.content.api.ContentHostingService service = null; return service.copy(param0, param1); }", "n_tokens": 64, "n_pass": [35, 5, 5]}
{"time": "2021-02-13 15:39:16.103875", "score": "0.9748", "loss": "0.1131", "code": "public static String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject.contentnull; return service.copy(param0, param1); }", "n_tokens": 55, "n_pass": [39, 6, 6]}
{"time": "2021-02-13 15:39:17.426291", "score": "0.9945", "loss": "0.0133", "code": "public static String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject. service.copy(param0, param1); }", "n_tokens": 50, "n_pass": [58, 7, 7]}
{"time": "2021-02-13 15:39:20.079205", "score": "0.9945", "loss": "0.0133", "code": "String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { org.sakaiproject. service.copy(param0, param1); }", "n_tokens": 46, "n_pass": [62, 9, 8]}
{"time": "2021-02-13 15:39:21.385247", "score": "0.995", "loss": "0.0075", "code": "String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException { service.copy(param0, param1); }", "n_tokens": 41, "n_pass": [69, 10, 9]}
{"time": "2021-02-13 15:39:24.018795", "score": "0.9941", "loss": "0.0089", "code": "String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param0, param1); }", "n_tokens": 38, "n_pass": [98, 12, 10]}
{"time": "2021-02-13 15:39:25.318940", "score": "0.6558", "loss": "0.4738", "code": "String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException {copy(paramparam1); }", "n_tokens": 35, "n_pass": [100, 13, 11]}
{"time": "2021-02-13 15:39:35.177230", "score": "0.7642", "loss": "0.3093", "code": "String copy(javajava.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 34, "n_pass": [149, 19, 12]}
{"time": "2021-02-13 15:39:38.849279", "score": "0.6944", "loss": "0.4514", "code": "String copy(java.lang.String param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 33, "n_pass": [157, 21, 13]}
{"time": "2021-02-13 15:39:40.150143", "score": "0.8522", "loss": "0.2435", "code": "String copy(javalang.String param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 32, "n_pass": [159, 22, 14]}
{"time": "2021-02-13 15:39:42.741928", "score": "0.4583", "loss": "1.2238", "code": "String copy(javalangString param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 31, "n_pass": [161, 24, 15]}
{"time": "2021-02-13 15:39:44.047136", "score": "0.6987", "loss": "0.7407", "code": "String copy(javalang param1) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 30, "n_pass": [162, 25, 16]}
{"time": "2021-02-13 15:39:45.347663", "score": "0.6987", "loss": "0.7407", "code": "String copy(javalang param) throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 29, "n_pass": [165, 26, 17]}
{"time": "2021-02-13 15:39:46.664789", "score": "0.6987", "loss": "0.7407", "code": "String copy(javalang param)throws org.sakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 28, "n_pass": [167, 27, 18]}
{"time": "2021-02-13 15:39:48.002712", "score": "0.4331", "loss": "1.4756", "code": "String copy(javalang param)throws orgsakaiproject.exception.ServerOverloadException {copy(param1); }", "n_tokens": 27, "n_pass": [171, 28, 19]}
{"time": "2021-02-13 15:39:49.321393", "score": "0.3526", "loss": "1.7612", "code": "String copy(javalang param)throws org.exception.ServerOverloadException {copy(param1); }", "n_tokens": 26, "n_pass": [172, 29, 20]}
{"time": "2021-02-13 15:39:50.616207", "score": "0.3092", "loss": "2.0325", "code": "String copy(javalang param)throws orgexception.ServerOverloadException {copy(param1); }", "n_tokens": 25, "n_pass": [173, 30, 21]}
{"time": "2021-02-13 15:39:51.910132", "score": "0.2593", "loss": "2.1774", "code": "String copy(javalang param)throws org.ServerOverloadException {copy(param1); }", "n_tokens": 24, "n_pass": [174, 31, 22]}
{"time": "2021-02-13 15:39:53.241293", "score": "0.2614", "loss": "2.2476", "code": "String copy(javalang param)throws orgServerOverloadException {copy(param1); }", "n_tokens": 23, "n_pass": [175, 32, 23]}
{"time": "2021-02-13 15:39:54.562507", "score": "0.2971", "loss": "2.1264", "code": "String copy(javalang param)throws org {copy(param1); }", "n_tokens": 22, "n_pass": [176, 33, 24]}
{"time": "2021-02-13 15:39:55.867716", "score": "0.2971", "loss": "2.1264", "code": "String copy(javalang param)throws org{copy(param1); }", "n_tokens": 21, "n_pass": [177, 34, 25]}
{"time": "2021-02-13 15:40:00.816499", "score": "0.2651", "loss": "2.1465", "code": "String copy(lang param)throws org{copy(param1); }", "n_tokens": 20, "n_pass": [188, 37, 26]}
{"time": "2021-02-13 15:40:07.806546", "score": "0.2651", "loss": "2.1465", "code": "String copy(lang param)throws org{copy(param); }", "n_tokens": 19, "n_pass": [213, 41, 27]}
{"time": "2021-02-13 15:40:09.125706", "score": "0.2651", "loss": "2.1465", "code": "String copy(lang param)throws org{copy(param);}", "n_tokens": 18, "n_pass": [216, 42, 28]}

Minimal simplified code:
String copy(lang param)throws org{copy(param);}

