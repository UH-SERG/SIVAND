
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/wildfly__jandex/src/main/java/org/jboss/jandex/FieldInternal_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int result = Arrays.hashCode(name); result = 31 * result + type.hashCode(); result = 31 * result + (int) flags; result = 31 * result + Arrays.hashCode(annotations); return result; }
predict, score, loss = hashCode, 0.9994000792503357, 0.0014155536191537976

Trace of simplified code(s):
{"time": "2021-02-14 02:34:37.702108", "score": "0.9994", "loss": "0.0014", "code": "@Override public int hashCode() { int result = Arrays.hashCode(name); result = 31 * result + type.hashCode(); result = 31 * result + (int) flags; result = 31 * result + Arrays.hashCode(annotations); return result; }", "n_tokens": 94, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:34:39.972854", "score": "0.9996", "loss": "0.001", "code": "@Override public int hashCode() { int result = Arrays.hashCode* result + type.hashCode(); result = 31 * result + (int) flags; result = 31 * result + Arrays.hashCode(annotations); return result; }", "n_tokens": 82, "n_pass": [22, 2, 2]}
{"time": "2021-02-14 02:34:41.668802", "score": "0.9998", "loss": "0.0006", "code": "@Override public int hashCode() { int result = Arrays.hashCode* result + type.hashCode(); result = 31 * result + (int) flags; result =hashCode(annotations); return result; }", "n_tokens": 70, "n_pass": [26, 3, 3]}
{"time": "2021-02-14 02:34:43.734522", "score": "0.9981", "loss": "0.0056", "code": "int hashCode() { int result = Arrays.hashCode* result + type.hashCode(); result = 31 * result + (int) flags; result =hashCode(annotations); return result; }", "n_tokens": 65, "n_pass": [47, 4, 4]}
{"time": "2021-02-14 02:34:45.433283", "score": "0.9986", "loss": "0.0057", "code": "int hashCode() { int result = Arrays.hashCodetype.hashCode(); result = 31 * result + (int) flags; result =hashCode(annotations); return result; }", "n_tokens": 59, "n_pass": [51, 5, 5]}
{"time": "2021-02-14 02:34:47.144599", "score": "0.9979", "loss": "0.0083", "code": "int hashCode() { int result = Arrays.hashCodetype.hashCode(); result = 3+ (int) flags; result =hashCode(annotations); return result; }", "n_tokens": 53, "n_pass": [54, 6, 6]}
{"time": "2021-02-14 02:34:48.525919", "score": "0.9975", "loss": "0.0097", "code": "int hashCode() { int result = Arrays.hashCodetype.hashCode(); result = 3+ (int) hashCode(annotations); return result; }", "n_tokens": 47, "n_pass": [56, 7, 7]}
{"time": "2021-02-14 02:34:50.704778", "score": "0.9955", "loss": "0.0179", "code": "int hashCode() { int result = Arrays.hashCodetype.hashCode(); result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 44, "n_pass": [83, 8, 8]}
{"time": "2021-02-14 02:34:52.377106", "score": "0.998", "loss": "0.0071", "code": "int hashCode() { int result = type.hashCode(); result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 41, "n_pass": [89, 9, 9]}
{"time": "2021-02-14 02:34:57.197923", "score": "0.998", "loss": "0.0071", "code": "int hashCode() { int result= type.hashCode(); result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 40, "n_pass": [133, 10, 10]}
{"time": "2021-02-14 02:34:58.565344", "score": "0.998", "loss": "0.0071", "code": "int hashCode() { int result=type.hashCode(); result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 39, "n_pass": [135, 11, 11]}
{"time": "2021-02-14 02:34:59.917727", "score": "0.9963", "loss": "0.0155", "code": "int hashCode() { int result=type(); result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 37, "n_pass": [137, 12, 12]}
{"time": "2021-02-14 02:35:01.254702", "score": "0.9972", "loss": "0.009", "code": "int hashCode() { int result=type; result = 3+ (int) hashCode(annotations); ; }", "n_tokens": 35, "n_pass": [138, 13, 13]}
{"time": "2021-02-14 02:35:02.600503", "score": "0.9865", "loss": "0.0449", "code": "int hashCode() { int result=typeresult = 3+ (int) hashCode(annotations); ; }", "n_tokens": 33, "n_pass": [139, 14, 14]}
{"time": "2021-02-14 02:35:04.062681", "score": "0.9856", "loss": "0.0523", "code": "int hashCode() { int result=type= 3+ (int) hashCode(annotations); ; }", "n_tokens": 31, "n_pass": [140, 15, 15]}
{"time": "2021-02-14 02:35:05.380789", "score": "0.9178", "loss": "0.3158", "code": "int hashCode() { int result=type3+ (int) hashCode(annotations); ; }", "n_tokens": 29, "n_pass": [141, 16, 16]}
{"time": "2021-02-14 02:35:08.025230", "score": "0.9178", "loss": "0.3158", "code": "int hashCode() { int result=type3+ (int) hashCode(annotations); }", "n_tokens": 27, "n_pass": [148, 18, 17]}
{"time": "2021-02-14 02:35:10.168760", "score": "0.9178", "loss": "0.3158", "code": "int hashCode(){ int result=type3+ (int) hashCode(annotations); }", "n_tokens": 26, "n_pass": [155, 19, 18]}
{"time": "2021-02-14 02:35:11.487398", "score": "0.9178", "loss": "0.3158", "code": "int hashCode(){int result=type3+ (int) hashCode(annotations); }", "n_tokens": 25, "n_pass": [157, 20, 19]}
{"time": "2021-02-14 02:35:12.788834", "score": "0.9981", "loss": "0.0092", "code": "int hashCode(){ result=type3+ (int) hashCode(annotations); }", "n_tokens": 24, "n_pass": [158, 21, 20]}
{"time": "2021-02-14 02:35:14.090084", "score": "0.9981", "loss": "0.0092", "code": "int hashCode(){result=type3+ (int) hashCode(annotations); }", "n_tokens": 23, "n_pass": [159, 22, 21]}
{"time": "2021-02-14 02:35:15.799519", "score": "0.9991", "loss": "0.0039", "code": "int hashCode(){result=3+ (int) hashCode(annotations); }", "n_tokens": 22, "n_pass": [162, 23, 22]}
{"time": "2021-02-14 02:35:17.095037", "score": "0.9974", "loss": "0.013", "code": "int hashCode(){result= (int) hashCode(annotations); }", "n_tokens": 20, "n_pass": [163, 24, 23]}
{"time": "2021-02-14 02:35:21.853177", "score": "0.9974", "loss": "0.013", "code": "int hashCode(){result= (int)hashCode(annotations); }", "n_tokens": 19, "n_pass": [191, 26, 24]}
{"time": "2021-02-14 02:35:23.165606", "score": "0.9965", "loss": "0.0188", "code": "int hashCode(){result= (int)hashCode(); }", "n_tokens": 18, "n_pass": [193, 27, 25]}
{"time": "2021-02-14 02:35:24.470799", "score": "0.9965", "loss": "0.0188", "code": "int hashCode(){result= (int)hashCode();}", "n_tokens": 17, "n_pass": [196, 28, 26]}
{"time": "2021-02-14 02:35:26.640523", "score": "0.9965", "loss": "0.0188", "code": "int hashCode(){result=(int)hashCode();}", "n_tokens": 16, "n_pass": [206, 29, 27]}

Minimal simplified code:
int hashCode(){result=(int)hashCode();}

