
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/j2me/java/util/AbstractSet_equals.java
method_name = equals
method_body = public boolean equals(Object o) { if (this == o) { return true; } if (o == null) { return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }
predict, score, loss = equals, 0.9542266130447388, 0.0508841872215271

Trace of simplified code(s):
{"time": "2021-02-13 21:20:24.682611", "score": "0.9542", "loss": "0.0509", "code": "public boolean equals(Object o) { if (this == o) { return true; } if (o == null) { return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 120, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:20:26.038593", "score": "0.9644", "loss": "0.0394", "code": "public boolean equals(Object o) { if (this == o) { return true; return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 105, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 21:20:27.460153", "score": "0.9675", "loss": "0.036", "code": "public boolean equals(Object o) { if (this == o) {; return false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 101, "n_pass": [85, 3, 3]}
{"time": "2021-02-13 21:20:28.822840", "score": "0.9632", "loss": "0.0409", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) { return false; } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 97, "n_pass": [86, 4, 4]}
{"time": "2021-02-13 21:20:30.162110", "score": "0.9286", "loss": "0.0796", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o).size() != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 93, "n_pass": [92, 5, 5]}
{"time": "2021-02-13 21:20:31.530616", "score": "0.9105", "loss": "0.0973", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) { return false; } return containsAll((Collection) o); }", "n_tokens": 89, "n_pass": [96, 6, 6]}
{"time": "2021-02-13 21:20:32.876197", "score": "0.7818", "loss": "0.2544", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  } return containsAll((Collection) o); }", "n_tokens": 85, "n_pass": [100, 7, 7]}
{"time": "2021-02-13 21:20:36.589704", "score": "0.959", "loss": "0.0566", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  } containsAll((Collection) o); }", "n_tokens": 83, "n_pass": [171, 9, 8]}
{"time": "2021-02-13 21:20:37.936483", "score": "0.9809", "loss": "0.0287", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  }((Collection) o); }", "n_tokens": 81, "n_pass": [172, 10, 9]}
{"time": "2021-02-13 21:20:39.296410", "score": "0.9895", "loss": "0.0164", "code": "public boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  }((Collection)); }", "n_tokens": 79, "n_pass": [175, 11, 10]}
{"time": "2021-02-13 21:20:40.608976", "score": "0.9895", "loss": "0.0164", "code": " boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  }((Collection)); }", "n_tokens": 78, "n_pass": [178, 12, 11]}
{"time": "2021-02-13 21:20:41.950943", "score": "0.9895", "loss": "0.0164", "code": "boolean equals(Object o) { if (this == o) {false; } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  }((Collection)); }", "n_tokens": 77, "n_pass": [179, 13, 12]}
{"time": "2021-02-13 21:20:44.766525", "score": "0.9789", "loss": "0.0308", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set) o) != size()) {  }((Collection)); }", "n_tokens": 75, "n_pass": [194, 14, 13]}
{"time": "2021-02-13 21:20:46.096843", "score": "0.9606", "loss": "0.0617", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size()) {  }((Collection)); }", "n_tokens": 73, "n_pass": [209, 15, 14]}
{"time": "2021-02-13 21:20:47.415784", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size) {  }((Collection)); }", "n_tokens": 71, "n_pass": [213, 16, 15]}
{"time": "2021-02-13 21:20:58.230941", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){  }((Collection)); }", "n_tokens": 70, "n_pass": [319, 17, 16]}
{"time": "2021-02-13 21:20:59.578376", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){ }((Collection)); }", "n_tokens": 69, "n_pass": [321, 18, 17]}
{"time": "2021-02-13 21:21:00.927166", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection)); }", "n_tokens": 68, "n_pass": [322, 19, 18]}
{"time": "2021-02-13 21:21:02.282832", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o) { if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 67, "n_pass": [330, 20, 19]}
{"time": "2021-02-13 21:21:04.354654", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){ if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 66, "n_pass": [340, 21, 20]}
{"time": "2021-02-13 21:21:05.695369", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if (this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 65, "n_pass": [342, 22, 21]}
{"time": "2021-02-13 21:21:07.018431", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this == o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 64, "n_pass": [344, 23, 22]}
{"time": "2021-02-13 21:21:08.335623", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this== o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 63, "n_pass": [347, 24, 23]}
{"time": "2021-02-13 21:21:10.402980", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this==o) { } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 62, "n_pass": [350, 25, 24]}
{"time": "2021-02-13 21:21:11.750274", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this==o){ } if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 61, "n_pass": [353, 26, 25]}
{"time": "2021-02-13 21:21:13.090086", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this==o){} if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 60, "n_pass": [355, 27, 26]}
{"time": "2021-02-13 21:21:14.414605", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this==o){}if (!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 59, "n_pass": [357, 28, 27]}
{"time": "2021-02-13 21:21:15.731027", "score": "0.9432", "loss": "0.0886", "code": "boolean equals(Object o){if(this==o){}if(!(o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 58, "n_pass": [359, 29, 28]}
{"time": "2021-02-13 21:21:17.078331", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)) {  } if (((Set)) != size){}((Collection));}", "n_tokens": 57, "n_pass": [361, 30, 29]}
{"time": "2021-02-13 21:21:18.429203", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){  } if (((Set)) != size){}((Collection));}", "n_tokens": 56, "n_pass": [370, 31, 30]}
{"time": "2021-02-13 21:21:19.757666", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){ } if (((Set)) != size){}((Collection));}", "n_tokens": 55, "n_pass": [372, 32, 31]}
{"time": "2021-02-13 21:21:21.102193", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){} if (((Set)) != size){}((Collection));}", "n_tokens": 54, "n_pass": [373, 33, 32]}
{"time": "2021-02-13 21:21:22.415270", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if (((Set)) != size){}((Collection));}", "n_tokens": 53, "n_pass": [375, 34, 33]}
{"time": "2021-02-13 21:21:23.760757", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if(((Set)) != size){}((Collection));}", "n_tokens": 52, "n_pass": [377, 35, 34]}
{"time": "2021-02-13 21:21:25.109002", "score": "0.8431", "loss": "0.2933", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if(((Set))!= size){}((Collection));}", "n_tokens": 51, "n_pass": [384, 36, 35]}
{"time": "2021-02-13 21:21:26.452753", "score": "0.5474", "loss": "0.8816", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if(((Set))= size){}((Collection));}", "n_tokens": 50, "n_pass": [385, 37, 36]}
{"time": "2021-02-13 21:21:27.790309", "score": "0.5474", "loss": "0.8816", "code": "boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if(((Set))=size){}((Collection));}", "n_tokens": 49, "n_pass": [387, 38, 37]}

Minimal simplified code:
boolean equals(Object o){if(this==o){}if((o instanceof Set)){}if(((Set))=size){}((Collection));}

