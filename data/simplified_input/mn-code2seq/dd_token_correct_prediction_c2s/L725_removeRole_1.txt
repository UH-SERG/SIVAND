
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/users/MemoryUserDatabase_removeRole.java
method_name = removeRole
method_body = @Override public void removeRole(Role role) { synchronized (roles) { Iterator<Group> groups = getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }
predict, score, loss = removeRole, 0.8870605230331421, 0.3695772588253021

Trace of simplified code(s):
{"time": "2021-02-13 20:57:49.765789", "score": "0.9015", "loss": "0.3099", "code": "@Override public void removeRole(Role role) { synchronized (roles) { Iterator<Group> groups = getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 137, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:57:51.177083", "score": "0.9018", "loss": "0.3052", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = groups.next(); group.removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 129, "n_pass": [47, 2, 2]}
{"time": "2021-02-13 20:57:52.529223", "score": "0.9093", "loss": "0.2869", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator<User> users = getUsers(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 120, "n_pass": [51, 3, 3]}
{"time": "2021-02-13 20:57:53.890865", "score": "0.9187", "loss": "0.2556", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) { User user = users.next(); user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 111, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 20:57:55.232090", "score": "0.93", "loss": "0.2114", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) { User ; user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 102, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 20:57:56.598712", "score": "0.9359", "loss": "0.1902", "code": "@Override public void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 97, "n_pass": [93, 6, 6]}
{"time": "2021-02-13 20:57:57.944727", "score": "0.9276", "loss": "0.2243", "code": " void removeRole(Role role) { synchronized (roles) {  getGroups(); while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 93, "n_pass": [99, 7, 7]}
{"time": "2021-02-13 20:57:59.287373", "score": "0.9205", "loss": "0.2504", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); } Iterator(); while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 89, "n_pass": [105, 8, 8]}
{"time": "2021-02-13 20:58:00.641953", "score": "0.8764", "loss": "0.4255", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (users.hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 85, "n_pass": [113, 9, 9]}
{"time": "2021-02-13 20:58:03.018277", "score": "0.8811", "loss": "0.3946", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {user.removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 83, "n_pass": [176, 10, 10]}
{"time": "2021-02-13 20:58:04.353646", "score": "0.8645", "loss": "0.4191", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } roles.remove(role.getRolename()); } }", "n_tokens": 81, "n_pass": [179, 11, 11]}
{"time": "2021-02-13 20:58:05.679161", "score": "0.8518", "loss": "0.6027", "code": " void removeRole(Role role) { synchronized (roles) { ; while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 78, "n_pass": [184, 12, 12]}
{"time": "2021-02-13 20:58:07.384663", "score": "0.8518", "loss": "0.6027", "code": " void removeRole(Role role) { synchronized (roles) { while (groups.hasNext()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 76, "n_pass": [199, 13, 13]}
{"time": "2021-02-13 20:58:08.753099", "score": "0.7696", "loss": "0.8592", "code": " void removeRole(Role role) { synchronized (roles) { while (groups()) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 74, "n_pass": [202, 14, 14]}
{"time": "2021-02-13 20:58:10.096940", "score": "0.7932", "loss": "0.7724", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { Group group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 72, "n_pass": [203, 15, 15]}
{"time": "2021-02-13 20:58:11.417023", "score": "0.7919", "loss": "0.7715", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group = removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 70, "n_pass": [206, 16, 16]}
{"time": "2021-02-13 20:58:20.450450", "score": "0.7919", "loss": "0.7715", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group= removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 69, "n_pass": [307, 17, 17]}
{"time": "2021-02-13 20:58:21.770222", "score": "0.7919", "loss": "0.7715", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=removeRole(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 68, "n_pass": [309, 18, 18]}
{"time": "2021-02-13 20:58:23.109751", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role); }  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 67, "n_pass": [310, 19, 19]}
{"time": "2021-02-13 20:58:24.422948", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}  while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 66, "n_pass": [315, 20, 20]}
{"time": "2021-02-13 20:58:25.733303", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);} while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 65, "n_pass": [317, 21, 21]}
{"time": "2021-02-13 20:58:27.044334", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while (hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 64, "n_pass": [318, 22, 22]}
{"time": "2021-02-13 20:58:28.356799", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()) {removeRole(role); } (role.getRolename()); } }", "n_tokens": 63, "n_pass": [320, 23, 23]}
{"time": "2021-02-13 20:58:29.686222", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role); } (role.getRolename()); } }", "n_tokens": 62, "n_pass": [326, 24, 24]}
{"time": "2021-02-13 20:58:33.617872", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);} (role.getRolename()); } }", "n_tokens": 61, "n_pass": [333, 27, 25]}
{"time": "2021-02-13 20:58:34.954112", "score": "0.7625", "loss": "0.8832", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role.getRolename()); } }", "n_tokens": 60, "n_pass": [335, 28, 26]}
{"time": "2021-02-13 20:58:36.264449", "score": "0.6911", "loss": "1.2206", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(rolegetRolename()); } }", "n_tokens": 59, "n_pass": [338, 29, 27]}
{"time": "2021-02-13 20:58:37.572233", "score": "0.6811", "loss": "1.2213", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role()); } }", "n_tokens": 58, "n_pass": [339, 30, 28]}
{"time": "2021-02-13 20:58:38.892057", "score": "0.803", "loss": "0.7566", "code": " void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 56, "n_pass": [340, 31, 29]}
{"time": "2021-02-13 20:58:40.225817", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role) { synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 55, "n_pass": [344, 32, 30]}
{"time": "2021-02-13 20:58:42.297442", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){ synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 54, "n_pass": [353, 33, 31]}
{"time": "2021-02-13 20:58:43.603113", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized (roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 53, "n_pass": [355, 34, 32]}
{"time": "2021-02-13 20:58:44.929640", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles) { while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 52, "n_pass": [357, 35, 33]}
{"time": "2021-02-13 20:58:46.235614", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles){ while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 51, "n_pass": [361, 36, 34]}
{"time": "2021-02-13 20:58:47.542094", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles){while (groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 50, "n_pass": [363, 37, 35]}
{"time": "2021-02-13 20:58:48.849332", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles){while(groups) { group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 49, "n_pass": [365, 38, 36]}
{"time": "2021-02-13 20:58:50.157972", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles){while(groups){ group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 48, "n_pass": [369, 39, 37]}
{"time": "2021-02-13 20:58:51.466279", "score": "0.803", "loss": "0.7566", "code": "void removeRole(Role role){synchronized(roles){while(groups){group=(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 47, "n_pass": [371, 40, 38]}
{"time": "2021-02-13 20:58:52.789335", "score": "0.6763", "loss": "1.2547", "code": "void removeRole(Role role){synchronized(roles){while(groups){group(role);}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 46, "n_pass": [373, 41, 39]}
{"time": "2021-02-13 20:58:54.126137", "score": "0.7265", "loss": "0.9436", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole(role);}(role); } }", "n_tokens": 45, "n_pass": [375, 42, 40]}
{"time": "2021-02-13 20:58:56.787428", "score": "0.6641", "loss": "1.5325", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role); } }", "n_tokens": 44, "n_pass": [388, 44, 41]}
{"time": "2021-02-13 20:58:59.827737", "score": "0.6641", "loss": "1.5325", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);} }", "n_tokens": 43, "n_pass": [438, 45, 42]}
{"time": "2021-02-13 20:59:01.140123", "score": "0.6641", "loss": "1.5325", "code": "void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);}}", "n_tokens": 42, "n_pass": [439, 46, 43]}

Minimal simplified code:
void removeRole(Role role){synchronized(roles){while(groups){group();}while(hasNext()){removeRole();}(role);}}

