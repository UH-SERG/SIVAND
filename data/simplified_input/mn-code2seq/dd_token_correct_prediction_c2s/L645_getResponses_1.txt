
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/pkix/src/main/java/org/bouncycastle/cert/ocsp/RespData_getResponses.java
method_name = getResponses
method_body = public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i != rs.length; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }
predict, score, loss = getResponses, 0.7853380441665649, 0.6573835015296936

Trace of simplified code(s):
{"time": "2021-02-13 19:35:17.235434", "score": "0.7853", "loss": "0.6574", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i != rs.length; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 109, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:35:20.694137", "score": "0.7409", "loss": "0.8168", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rs[i] = new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 102, "n_pass": [53, 3, 2]}
{"time": "2021-02-13 19:35:24.145742", "score": "0.7404", "loss": "0.8907", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rs= new SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 98, "n_pass": [102, 5, 3]}
{"time": "2021-02-13 19:35:25.488846", "score": "0.7382", "loss": "0.9653", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses(); SingleResp[] rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 94, "n_pass": [103, 6, 4]}
{"time": "2021-02-13 19:35:29.895729", "score": "0.7547", "loss": "0.8188", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses();  rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 91, "n_pass": [119, 9, 5]}
{"time": "2021-02-13 19:35:38.348546", "score": "0.8874", "loss": "0.3263", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = new SingleResp[s.size()]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 89, "n_pass": [203, 13, 6]}
{"time": "2021-02-13 19:35:39.687307", "score": "0.8774", "loss": "0.3583", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s.size()]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 87, "n_pass": [207, 14, 7]}
{"time": "2021-02-13 19:35:41.048878", "score": "0.8825", "loss": "0.3495", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s()]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 85, "n_pass": [210, 15, 8]}
{"time": "2021-02-13 19:35:42.384646", "score": "0.8963", "loss": "0.2985", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (int i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 83, "n_pass": [211, 16, 9]}
{"time": "2021-02-13 19:35:43.712727", "score": "0.8571", "loss": "0.4189", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0; i; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 81, "n_pass": [215, 17, 10]}
{"time": "2021-02-13 19:35:45.084794", "score": "0.8735", "loss": "0.3642", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) { rsSingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 79, "n_pass": [219, 18, 11]}
{"time": "2021-02-13 19:35:46.424848", "score": "0.8452", "loss": "0.445", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(SingleResponse.getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 77, "n_pass": [224, 19, 12]}
{"time": "2021-02-13 19:35:47.759153", "score": "0.8306", "loss": "0.4947", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(s.getObjectAt(i))); } return rs; }", "n_tokens": 75, "n_pass": [226, 20, 13]}
{"time": "2021-02-13 19:35:49.084860", "score": "0.8046", "loss": "0.6013", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); } return rs; }", "n_tokens": 73, "n_pass": [228, 21, 14]}
{"time": "2021-02-13 19:35:50.417117", "score": "0.8683", "loss": "0.3887", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); } rs; }", "n_tokens": 71, "n_pass": [234, 22, 15]}
{"time": "2021-02-13 19:35:51.748093", "score": "0.8708", "loss": "0.397", "code": "public SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 69, "n_pass": [235, 23, 16]}
{"time": "2021-02-13 19:35:53.119321", "score": "0.8708", "loss": "0.397", "code": " SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 68, "n_pass": [237, 24, 17]}
{"time": "2021-02-13 19:35:54.464390", "score": "0.8708", "loss": "0.397", "code": "SingleResp[] getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 67, "n_pass": [238, 25, 18]}
{"time": "2021-02-13 19:35:55.798512", "score": "0.8708", "loss": "0.397", "code": "SingleResp[]getResponses() { ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 66, "n_pass": [242, 26, 19]}
{"time": "2021-02-13 19:35:57.140124", "score": "0.8708", "loss": "0.397", "code": "SingleResp[]getResponses(){ ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 65, "n_pass": [246, 27, 20]}
{"time": "2021-02-13 19:35:58.501528", "score": "0.8708", "loss": "0.397", "code": "SingleResp[]getResponses(){ASN1Sequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 64, "n_pass": [248, 28, 21]}
{"time": "2021-02-13 19:35:59.837950", "score": "0.8708", "loss": "0.397", "code": "SingleResp[]getResponses(){ASNSequence s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 63, "n_pass": [250, 29, 22]}
{"time": "2021-02-13 19:36:01.186829", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;  rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 62, "n_pass": [251, 30, 23]}
{"time": "2021-02-13 19:36:15.862665", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses; rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 61, "n_pass": [344, 36, 24]}
{"time": "2021-02-13 19:36:17.226247", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs = SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 60, "n_pass": [345, 37, 25]}
{"time": "2021-02-13 19:36:18.561627", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs= SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 59, "n_pass": [347, 38, 26]}
{"time": "2021-02-13 19:36:19.902570", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s]; for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 58, "n_pass": [349, 39, 27]}
{"time": "2021-02-13 19:36:21.243093", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for (i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 57, "n_pass": [355, 40, 28]}
{"time": "2021-02-13 19:36:22.600049", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i = 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 56, "n_pass": [357, 41, 29]}
{"time": "2021-02-13 19:36:23.938705", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i= 0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 55, "n_pass": [360, 42, 30]}
{"time": "2021-02-13 19:36:25.298889", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;; i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 54, "n_pass": [362, 43, 31]}
{"time": "2021-02-13 19:36:26.637680", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++) {SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 53, "n_pass": [366, 44, 32]}
{"time": "2021-02-13 19:36:27.984643", "score": "0.857", "loss": "0.4384", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){SingleResp(getInstance(getObjectAt(i))); }  }", "n_tokens": 52, "n_pass": [371, 45, 33]}
{"time": "2021-02-13 19:36:29.309419", "score": "0.7061", "loss": "1.1091", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){(getInstance(getObjectAt(i))); }  }", "n_tokens": 51, "n_pass": [373, 46, 34]}
{"time": "2021-02-13 19:36:30.632495", "score": "0.8558", "loss": "0.3948", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){((getObjectAt(i))); }  }", "n_tokens": 50, "n_pass": [375, 47, 35]}
{"time": "2021-02-13 19:36:31.977904", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i))); }  }", "n_tokens": 49, "n_pass": [377, 48, 36]}
{"time": "2021-02-13 19:36:33.310403", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i)));}  }", "n_tokens": 48, "n_pass": [384, 49, 37]}
{"time": "2021-02-13 19:36:34.629824", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i)));} }", "n_tokens": 47, "n_pass": [386, 50, 38]}
{"time": "2021-02-13 19:36:35.951557", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s = data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i)));}}", "n_tokens": 46, "n_pass": [387, 51, 39]}
{"time": "2021-02-13 19:36:41.224091", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s= data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i)));}}", "n_tokens": 45, "n_pass": [399, 55, 40]}
{"time": "2021-02-13 19:36:42.544829", "score": "0.9034", "loss": "0.2466", "code": "SingleResp[]getResponses(){ASN s=data.getResponses;rs=SingleResp[s];for(i=0;;i++){(((i)));}}", "n_tokens": 44, "n_pass": [401, 56, 41]}
{"time": "2021-02-13 19:36:46.505321", "score": "0.9181", "loss": "0.1992", "code": "SingleResp[]getResponses(){ASN s=data.getResponses;rsSingleResp[s];for(i=0;;i++){(((i)));}}", "n_tokens": 43, "n_pass": [407, 59, 42]}
{"time": "2021-02-13 19:36:47.842816", "score": "0.9058", "loss": "0.221", "code": "SingleResp[]getResponses(){ASN s=data.getResponses;rs[s];for(i=0;;i++){(((i)));}}", "n_tokens": 42, "n_pass": [408, 60, 43]}
{"time": "2021-02-13 19:36:49.189716", "score": "0.9154", "loss": "0.1973", "code": "SingleResp[]getResponses(){ASN s=data.getResponses;rs[s];for(i0;;i++){(((i)));}}", "n_tokens": 41, "n_pass": [416, 61, 44]}
{"time": "2021-02-13 19:36:50.530717", "score": "0.9154", "loss": "0.1973", "code": "SingleResp[]getResponses(){ASN s=data.getResponses;rs[s];for(i;;i++){(((i)));}}", "n_tokens": 40, "n_pass": [417, 62, 45]}
{"time": "2021-02-13 19:36:51.896213", "score": "0.9037", "loss": "0.2737", "code": "SingleResp[]getResponses(){ s=data.getResponses;rs[s];for(i;;i++){(((i)));}}", "n_tokens": 39, "n_pass": [442, 63, 46]}
{"time": "2021-02-13 19:36:53.211468", "score": "0.9037", "loss": "0.2737", "code": "SingleResp[]getResponses(){s=data.getResponses;rs[s];for(i;;i++){(((i)));}}", "n_tokens": 38, "n_pass": [443, 64, 47]}
{"time": "2021-02-13 19:36:54.522513", "score": "0.8229", "loss": "0.5791", "code": "SingleResp[]getResponses(){sdata.getResponses;rs[s];for(i;;i++){(((i)));}}", "n_tokens": 37, "n_pass": [445, 65, 48]}
{"time": "2021-02-13 19:36:55.814956", "score": "0.845", "loss": "0.4413", "code": "SingleResp[]getResponses(){s.getResponses;rs[s];for(i;;i++){(((i)));}}", "n_tokens": 36, "n_pass": [446, 66, 49]}
{"time": "2021-02-13 19:36:59.710871", "score": "0.8986", "loss": "0.2815", "code": "SingleResp[]getResponses(){s.getResponses;rs[s];for(;;i++){(((i)));}}", "n_tokens": 35, "n_pass": [457, 69, 50]}

Minimal simplified code:
SingleResp[]getResponses(){s.getResponses;rs[s];for(;;i++){(((i)));}}

