
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-core/src/main/java/com/sun/identity/sm/ServiceConfigManagerImpl_hashCode.java
method_name = hashCode
method_body = public int hashCode() { int hash = 4; hash = 29 * hash + (this.serviceName != null ? this.serviceName.hashCode() : 0); hash = 29 * hash + (this.version != null ? this.version.hashCode() : 0); return hash; }
predict, score, loss = hashCode, 0.9985601902008057, 0.004200278781354427

Trace of simplified code(s):
{"time": "2021-02-13 20:50:01.246174", "score": "0.9986", "loss": "0.0042", "code": "public int hashCode() { int hash = 4; hash = 29 * hash + (this.serviceName != null ? this.serviceName.hashCode() : 0); hash = 29 * hash + (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 103, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 20:50:02.606758", "score": "0.999", "loss": "0.003", "code": "public int hashCode() { int  hash = 29 * hash + (this.serviceName != null ? this.serviceName.hashCode() : 0); hash = 29 * hash + (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 97, "n_pass": [46, 2, 2]}
{"time": "2021-02-13 20:50:03.966242", "score": "0.9987", "loss": "0.004", "code": "public int hashCode() { int  hash = 2+ (this.serviceName != null ? this.serviceName.hashCode() : 0); hash = 29 * hash + (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 91, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 20:50:05.298748", "score": "0.998", "loss": "0.0057", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash = 29 * hash + (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 85, "n_pass": [50, 4, 4]}
{"time": "2021-02-13 20:50:06.658466", "score": "0.9966", "loss": "0.0091", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash = + (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 78, "n_pass": [54, 5, 5]}
{"time": "2021-02-13 20:50:08.000468", "score": "0.9982", "loss": "0.0054", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash  (this.version != null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 75, "n_pass": [91, 6, 6]}
{"time": "2021-02-13 20:50:09.326527", "score": "0.9981", "loss": "0.0057", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash  (this!= null ? this.version.hashCode() : 0); return hash; }", "n_tokens": 72, "n_pass": [93, 7, 7]}
{"time": "2021-02-13 20:50:10.656619", "score": "0.9984", "loss": "0.0052", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash  (thisnull ? this.version.hashCode() : 0); return hash; }", "n_tokens": 69, "n_pass": [94, 8, 8]}
{"time": "2021-02-13 20:50:11.986378", "score": "0.9981", "loss": "0.0063", "code": "public int hashCode() { int  hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash  (thisnull ? hashCode() : 0); return hash; }", "n_tokens": 65, "n_pass": [96, 9, 9]}
{"time": "2021-02-13 20:50:13.688400", "score": "0.9969", "loss": "0.0106", "code": "public int hashCode() { hash = 2+ (this.serviceName? this.serviceName.hashCode() : 0); hash  (thisnull ? hashCode() : 0); return hash; }", "n_tokens": 62, "n_pass": [104, 10, 10]}
{"time": "2021-02-13 20:50:15.367792", "score": "0.9894", "loss": "0.0412", "code": "public int hashCode() { hash = 2+ (this.serviceName? thishashCode() : 0); hash  (thisnull ? hashCode() : 0); return hash; }", "n_tokens": 59, "n_pass": [110, 11, 11]}
{"time": "2021-02-13 20:50:16.674313", "score": "0.9933", "loss": "0.0299", "code": "public int hashCode() { hash = 2+ (this.serviceName? this : 0); hash  (thisnull ? hashCode() : 0); return hash; }", "n_tokens": 56, "n_pass": [111, 12, 12]}
{"time": "2021-02-13 20:50:18.026768", "score": "0.9915", "loss": "0.0393", "code": "public int hashCode() { hash = 2+ (this.serviceName? this : 0); (thisnull ? hashCode() : 0); return hash; }", "n_tokens": 53, "n_pass": [114, 13, 13]}
{"time": "2021-02-13 20:50:22.076502", "score": "0.9839", "loss": "0.0727", "code": "public int hashCode() { hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0); return hash; }", "n_tokens": 51, "n_pass": [165, 14, 14]}
{"time": "2021-02-13 20:50:23.400755", "score": "0.9945", "loss": "0.0229", "code": "public int hashCode() { hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0); hash; }", "n_tokens": 49, "n_pass": [171, 15, 15]}
{"time": "2021-02-13 20:50:24.714612", "score": "0.996", "loss": "0.0186", "code": "public int hashCode() { hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 47, "n_pass": [172, 16, 16]}
{"time": "2021-02-13 20:50:26.016208", "score": "0.996", "loss": "0.0186", "code": " int hashCode() { hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 46, "n_pass": [174, 17, 17]}
{"time": "2021-02-13 20:50:27.354233", "score": "0.996", "loss": "0.0186", "code": "int hashCode() { hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 45, "n_pass": [175, 18, 18]}
{"time": "2021-02-13 20:50:29.380679", "score": "0.996", "loss": "0.0186", "code": "int hashCode(){ hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 44, "n_pass": [181, 19, 19]}
{"time": "2021-02-13 20:50:30.681286", "score": "0.996", "loss": "0.0186", "code": "int hashCode(){hash = 2+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 43, "n_pass": [183, 20, 20]}
{"time": "2021-02-13 20:50:32.020259", "score": "0.9856", "loss": "0.0458", "code": "int hashCode(){hash =+ (this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 41, "n_pass": [186, 21, 21]}
{"time": "2021-02-13 20:50:33.330418", "score": "0.9938", "loss": "0.0293", "code": "int hashCode(){hash =(this.serviceName? this : 0); (this? hashCode() : 0);  }", "n_tokens": 39, "n_pass": [187, 22, 22]}
{"time": "2021-02-13 20:50:34.623146", "score": "0.9813", "loss": "0.073", "code": "int hashCode(){hash =(this? this : 0); (this? hashCode() : 0);  }", "n_tokens": 37, "n_pass": [189, 23, 23]}
{"time": "2021-02-13 20:50:36.685064", "score": "0.9874", "loss": "0.0498", "code": "int hashCode(){hash(this? this : 0); (this? hashCode() : 0);  }", "n_tokens": 35, "n_pass": [210, 24, 24]}
{"time": "2021-02-13 20:50:38.715564", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this : 0); (this? hashCode() : 0);  }", "n_tokens": 34, "n_pass": [231, 25, 25]}
{"time": "2021-02-13 20:50:44.423820", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this: 0); (this? hashCode() : 0);  }", "n_tokens": 33, "n_pass": [281, 26, 26]}
{"time": "2021-02-13 20:50:45.757251", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0); (this? hashCode() : 0);  }", "n_tokens": 32, "n_pass": [283, 27, 27]}
{"time": "2021-02-13 20:50:47.062153", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this? hashCode() : 0);  }", "n_tokens": 31, "n_pass": [287, 28, 28]}
{"time": "2021-02-13 20:50:48.374954", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this?hashCode() : 0);  }", "n_tokens": 30, "n_pass": [291, 29, 29]}
{"time": "2021-02-13 20:50:49.671254", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this?hashCode(): 0);  }", "n_tokens": 29, "n_pass": [295, 30, 30]}
{"time": "2021-02-13 20:50:50.981980", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this?hashCode():0);  }", "n_tokens": 28, "n_pass": [297, 31, 31]}
{"time": "2021-02-13 20:50:52.276835", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this?hashCode():0); }", "n_tokens": 27, "n_pass": [301, 32, 32]}
{"time": "2021-02-13 20:50:53.590156", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this? this:0);(this?hashCode():0);}", "n_tokens": 26, "n_pass": [302, 33, 33]}
{"time": "2021-02-13 20:50:55.592352", "score": "0.9048", "loss": "0.478", "code": "int hashCode(){(this?this:0);(this?hashCode():0);}", "n_tokens": 25, "n_pass": [313, 34, 34]}

Minimal simplified code:
int hashCode(){(this?this:0);(this?hashCode():0);}

