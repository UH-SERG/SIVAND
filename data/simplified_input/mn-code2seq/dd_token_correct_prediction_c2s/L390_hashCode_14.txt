
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/OpenRock__OpenAM/openam-entitlements/src/main/java/org/forgerock/openam/entitlement/conditions/environment/SimpleTimeCondition_hashCode.java
method_name = hashCode
method_body = @Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }
predict, score, loss = hashCode, 0.999870777130127, 0.00031289472826756537

Trace of simplified code(s):
{"time": "2021-02-13 15:08:25.605869", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = 31 * hc + startHour; hc = 31 * hc + startMinute; hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 233, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 15:08:27.350070", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc =hc = 31 * hc + endHour; hc = 31 * hc + endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 204, "n_pass": [21, 2, 2]}
{"time": "2021-02-13 15:08:28.703685", "score": "0.9999", "loss": "0.0003", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc =endMinute; hc = 31 * hc + startDayInt; hc = 31 * hc + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 175, "n_pass": [22, 3, 3]}
{"time": "2021-02-13 15:08:30.054649", "score": "0.9998", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 * hc + startDateCal.hashCode(); } if (endDateCal != null) { hc = 31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 146, "n_pass": [23, 4, 4]}
{"time": "2021-02-13 15:08:31.395225", "score": "0.9998", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 * hc31 * hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 117, "n_pass": [25, 5, 5]}
{"time": "2021-02-13 15:08:32.745543", "score": "0.9998", "loss": "0.0004", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc = 31 * hc + enforcementTZ.hashCode(); } return hc; }", "n_tokens": 110, "n_pass": [62, 6, 6]}
{"time": "2021-02-13 15:08:34.106846", "score": "0.9998", "loss": "0.0005", "code": "@Override public int hashCode() { int hc = super.hashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 102, "n_pass": [67, 7, 7]}
{"time": "2021-02-13 15:08:35.819507", "score": "0.9939", "loss": "0.017", "code": "@Override public int hashCode() { inthashCode(); hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 95, "n_pass": [72, 8, 8]}
{"time": "2021-02-13 15:08:37.914810", "score": "0.9923", "loss": "0.0204", "code": "@Override public int hashCode() { inthashCode hc = + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 92, "n_pass": [113, 9, 9]}
{"time": "2021-02-13 15:08:39.239493", "score": "0.9934", "loss": "0.0172", "code": "@Override public int hashCode() { inthashCode= + endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 89, "n_pass": [114, 10, 10]}
{"time": "2021-02-13 15:08:40.564865", "score": "0.9959", "loss": "0.0113", "code": "@Override public int hashCode() { inthashCode endDayInt; if (startDateCal != null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 86, "n_pass": [115, 11, 11]}
{"time": "2021-02-13 15:08:41.920254", "score": "0.9963", "loss": "0.0129", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31 *hc + endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 82, "n_pass": [118, 12, 12]}
{"time": "2021-02-13 15:08:43.621889", "score": "0.9965", "loss": "0.0119", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ != null) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 78, "n_pass": [122, 13, 13]}
{"time": "2021-02-13 15:08:44.965428", "score": "0.9968", "loss": "0.0114", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) { hc =  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 74, "n_pass": [127, 14, 14]}
{"time": "2021-02-13 15:08:46.287734", "score": "0.9926", "loss": "0.027", "code": "@Override public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 70, "n_pass": [129, 15, 15]}
{"time": "2021-02-13 15:08:47.608312", "score": "0.9695", "loss": "0.1439", "code": "public int hashCode() { inthashCode endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 67, "n_pass": [134, 16, 16]}
{"time": "2021-02-13 15:08:49.288675", "score": "0.949", "loss": "0.1745", "code": "public int hashCode() { endDayInt; if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 64, "n_pass": [138, 17, 17]}
{"time": "2021-02-13 15:08:50.603425", "score": "0.9574", "loss": "0.1421", "code": "public int hashCode() { if ( null) { hc = 31+ endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 61, "n_pass": [139, 18, 18]}
{"time": "2021-02-13 15:08:53.366918", "score": "0.861", "loss": "0.3811", "code": "public int hashCode() { if ( null) { hc = + endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 59, "n_pass": [195, 19, 19]}
{"time": "2021-02-13 15:08:54.683669", "score": "0.8977", "loss": "0.2699", "code": "public int hashCode() { if ( null) { hc = endDateCal.hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 57, "n_pass": [196, 20, 20]}
{"time": "2021-02-13 15:08:55.995842", "score": "0.9706", "loss": "0.0827", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ.hashCode(); } return hc; }", "n_tokens": 55, "n_pass": [197, 21, 21]}
{"time": "2021-02-13 15:08:57.331458", "score": "0.9468", "loss": "0.1513", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ(); } return hc; }", "n_tokens": 53, "n_pass": [207, 22, 22]}
{"time": "2021-02-13 15:08:58.642400", "score": "0.9049", "loss": "0.2484", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; } return hc; }", "n_tokens": 51, "n_pass": [208, 23, 23]}
{"time": "2021-02-13 15:08:59.958088", "score": "0.9924", "loss": "0.0344", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; } hc; }", "n_tokens": 49, "n_pass": [211, 24, 24]}
{"time": "2021-02-13 15:09:01.279315", "score": "0.9887", "loss": "0.0531", "code": "public int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 47, "n_pass": [212, 25, 25]}
{"time": "2021-02-13 15:09:02.606019", "score": "0.9887", "loss": "0.0531", "code": " int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 46, "n_pass": [214, 26, 26]}
{"time": "2021-02-13 15:09:03.932148", "score": "0.9887", "loss": "0.0531", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) {  enforcementTZ; }  }", "n_tokens": 45, "n_pass": [215, 27, 27]}
{"time": "2021-02-13 15:09:05.586775", "score": "0.9054", "loss": "0.4769", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { ; }  }", "n_tokens": 43, "n_pass": [235, 28, 28]}
{"time": "2021-02-13 15:09:06.880244", "score": "0.9054", "loss": "0.4769", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { }  }", "n_tokens": 41, "n_pass": [236, 29, 29]}
{"time": "2021-02-13 15:09:14.524170", "score": "0.9054", "loss": "0.4769", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { } }", "n_tokens": 40, "n_pass": [299, 30, 30]}
{"time": "2021-02-13 15:09:15.812094", "score": "0.9054", "loss": "0.4769", "code": "int hashCode() { if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 39, "n_pass": [300, 31, 31]}
{"time": "2021-02-13 15:09:17.818747", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){ if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 38, "n_pass": [307, 32, 32]}
{"time": "2021-02-13 15:09:19.120886", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if ( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 37, "n_pass": [309, 33, 33]}
{"time": "2021-02-13 15:09:20.414466", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if( null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 36, "n_pass": [311, 34, 34]}
{"time": "2021-02-13 15:09:21.705995", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null) { hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 35, "n_pass": [313, 35, 35]}
{"time": "2021-02-13 15:09:23.009676", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){ hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 34, "n_pass": [316, 36, 36]}
{"time": "2021-02-13 15:09:24.325228", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc = hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 33, "n_pass": [318, 37, 37]}
{"time": "2021-02-13 15:09:25.633595", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc= hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 32, "n_pass": [320, 38, 38]}
{"time": "2021-02-13 15:09:26.927863", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode(); } if (enforcementTZ ) { }}", "n_tokens": 31, "n_pass": [322, 39, 39]}
{"time": "2021-02-13 15:09:28.223237", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();} if (enforcementTZ ) { }}", "n_tokens": 30, "n_pass": [327, 40, 40]}
{"time": "2021-02-13 15:09:29.515288", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();}if (enforcementTZ ) { }}", "n_tokens": 29, "n_pass": [329, 41, 41]}
{"time": "2021-02-13 15:09:30.810009", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ ) { }}", "n_tokens": 28, "n_pass": [331, 42, 42]}
{"time": "2021-02-13 15:09:32.106460", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ) { }}", "n_tokens": 27, "n_pass": [334, 43, 43]}
{"time": "2021-02-13 15:09:33.396185", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){ }}", "n_tokens": 26, "n_pass": [336, 44, 44]}
{"time": "2021-02-13 15:09:34.690823", "score": "0.9054", "loss": "0.4769", "code": "int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){}}", "n_tokens": 25, "n_pass": [338, 45, 45]}

Minimal simplified code:
int hashCode(){if(null){hc=hashCode();}if(enforcementTZ){}}

