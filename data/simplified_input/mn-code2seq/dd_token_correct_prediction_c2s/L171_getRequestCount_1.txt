
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/coyote/RequestGroupInfo_getRequestCount.java
method_name = getRequestCount
method_body = public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int i = 0; i < processors.size(); i++) { RequestInfo rp = processors.get(i); requestCount += rp.getRequestCount(); } return requestCount; }
predict, score, loss = getRequestCount, 0.8608602285385132, 0.5838823318481445

Trace of simplified code(s):
{"time": "2021-02-13 11:08:28.304317", "score": "0.8609", "loss": "0.5839", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int i = 0; i < processors.size(); i++) { RequestInfo rp = processors.get(i); requestCount += rp.getRequestCount(); } return requestCount; }", "n_tokens": 85, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 11:08:30.013345", "score": "0.869", "loss": "0.5826", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int i = 0; i < processors.size(); i++) { RequestInfo; requestCount += rp.getRequestCount(); } return requestCount; }", "n_tokens": 74, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 11:08:31.706080", "score": "0.7302", "loss": "1.5283", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int i = 0; i < processors.size(); i++) { RequestInfo; requestCount (); } return requestCount; }", "n_tokens": 68, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 11:08:33.391599", "score": "0.7641", "loss": "1.2273", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int0; i < processors.size(); i++) { RequestInfo; requestCount (); } return requestCount; }", "n_tokens": 63, "n_pass": [56, 4, 4]}
{"time": "2021-02-13 11:08:36.446124", "score": "0.7555", "loss": "1.2189", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int0; i .size(); i++) { RequestInfo; requestCount (); } return requestCount; }", "n_tokens": 60, "n_pass": [96, 6, 5]}
{"time": "2021-02-13 11:08:37.766127", "score": "0.7696", "loss": "1.1228", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int0; i .size(); ) { RequestInfo; requestCount (); } return requestCount; }", "n_tokens": 57, "n_pass": [99, 7, 6]}
{"time": "2021-02-13 11:08:39.117212", "score": "0.842", "loss": "0.759", "code": "public synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 54, "n_pass": [101, 8, 7]}
{"time": "2021-02-13 11:08:41.783405", "score": "0.842", "loss": "0.759", "code": "synchronized int getRequestCount() { int requestCount = deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 52, "n_pass": [107, 10, 8]}
{"time": "2021-02-13 11:08:43.086132", "score": "0.842", "loss": "0.759", "code": "int getRequestCount() { int requestCount = deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 50, "n_pass": [108, 11, 9]}
{"time": "2021-02-13 11:08:44.773751", "score": "0.7718", "loss": "1.343", "code": "int getRequestCount() { requestCount = deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 48, "n_pass": [113, 12, 10]}
{"time": "2021-02-13 11:08:46.095769", "score": "0.8455", "loss": "0.7236", "code": "int getRequestCount() { requestCount deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 46, "n_pass": [115, 13, 11]}
{"time": "2021-02-13 11:08:49.087662", "score": "0.8031", "loss": "1.0047", "code": "int getRequestCount() { deadRequestCount; for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 44, "n_pass": [132, 15, 12]}
{"time": "2021-02-13 11:08:50.377373", "score": "0.8519", "loss": "0.64", "code": "int getRequestCount() { for (int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 41, "n_pass": [133, 16, 13]}
{"time": "2021-02-13 11:08:56.309235", "score": "0.8519", "loss": "0.64", "code": "int getRequestCount() { for(int0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 40, "n_pass": [180, 18, 14]}
{"time": "2021-02-13 11:08:57.600414", "score": "0.8034", "loss": "0.933", "code": "int getRequestCount() { for(0; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 39, "n_pass": [182, 19, 15]}
{"time": "2021-02-13 11:08:58.911859", "score": "0.8829", "loss": "0.4743", "code": "int getRequestCount() { for(; i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 38, "n_pass": [183, 20, 16]}
{"time": "2021-02-13 11:09:00.192600", "score": "0.8829", "loss": "0.4743", "code": "int getRequestCount() { for(;i .size(); ) { requestCount (); } return requestCount; }", "n_tokens": 37, "n_pass": [185, 21, 17]}
{"time": "2021-02-13 11:09:01.502004", "score": "0.8829", "loss": "0.4743", "code": "int getRequestCount() { for(;i.size(); ) { requestCount (); } return requestCount; }", "n_tokens": 36, "n_pass": [187, 22, 18]}
{"time": "2021-02-13 11:09:02.795033", "score": "0.8194", "loss": "0.787", "code": "int getRequestCount() { for(;isize(); ) { requestCount (); } return requestCount; }", "n_tokens": 35, "n_pass": [188, 23, 19]}
{"time": "2021-02-13 11:09:05.370517", "score": "0.8081", "loss": "0.8361", "code": "int getRequestCount() { for(;isize; ) { requestCount (); } return requestCount; }", "n_tokens": 33, "n_pass": [190, 25, 20]}
{"time": "2021-02-13 11:09:06.647379", "score": "0.9215", "loss": "0.3133", "code": "int getRequestCount() { for(;isize; ) { requestCount ; } return requestCount; }", "n_tokens": 31, "n_pass": [195, 26, 21]}
{"time": "2021-02-13 11:09:07.919602", "score": "0.8345", "loss": "1.2021", "code": "int getRequestCount() { for(;isize; ) { requestCount ; } requestCount; }", "n_tokens": 29, "n_pass": [198, 27, 22]}
{"time": "2021-02-13 11:09:11.194120", "score": "0.8345", "loss": "1.2021", "code": "int getRequestCount(){ for(;isize; ) { requestCount ; } requestCount; }", "n_tokens": 28, "n_pass": [206, 29, 23]}
{"time": "2021-02-13 11:09:12.489748", "score": "0.8345", "loss": "1.2021", "code": "int getRequestCount(){for(;isize; ) { requestCount ; } requestCount; }", "n_tokens": 27, "n_pass": [208, 30, 24]}
{"time": "2021-02-13 11:09:13.763387", "score": "0.8534", "loss": "0.975", "code": "int getRequestCount(){for(;size; ) { requestCount ; } requestCount; }", "n_tokens": 26, "n_pass": [212, 31, 25]}
{"time": "2021-02-13 11:09:15.055968", "score": "0.8162", "loss": "1.1231", "code": "int getRequestCount(){for(;; ) { requestCount ; } requestCount; }", "n_tokens": 25, "n_pass": [213, 32, 26]}
{"time": "2021-02-13 11:09:16.324837", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;; ) { ; } requestCount; }", "n_tokens": 23, "n_pass": [217, 33, 27]}
{"time": "2021-02-13 11:09:17.599064", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;; ) { } requestCount; }", "n_tokens": 21, "n_pass": [218, 34, 28]}
{"time": "2021-02-13 11:09:23.152518", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;; ) { }requestCount; }", "n_tokens": 20, "n_pass": [246, 36, 29]}
{"time": "2021-02-13 11:09:25.713190", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;; ) { }requestCount;}", "n_tokens": 19, "n_pass": [249, 38, 30]}
{"time": "2021-02-13 11:09:27.689827", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;;) { }requestCount;}", "n_tokens": 18, "n_pass": [261, 39, 31]}
{"time": "2021-02-13 11:09:28.954386", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;;){ }requestCount;}", "n_tokens": 17, "n_pass": [263, 40, 32]}
{"time": "2021-02-13 11:09:30.228459", "score": "0.9578", "loss": "0.2547", "code": "int getRequestCount(){for(;;){}requestCount;}", "n_tokens": 16, "n_pass": [265, 41, 33]}

Minimal simplified code:
int getRequestCount(){for(;;){}requestCount;}

