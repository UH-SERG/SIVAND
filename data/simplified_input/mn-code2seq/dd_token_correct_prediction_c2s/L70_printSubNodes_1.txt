
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/58code__Oceanus/oceanus-all/oceanus-exchange/oceanus-exchange-sqlparser/src/main/java/com/bj58/sql/parser/ConstraintDefinitionNode_printSubNodes.java
method_name = printSubNodes
method_body = public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, "columnList: "); columnList.treePrint(depth + 1); } }
predict, score, loss = printSubNodes, 0.9976354241371155, 0.00813759583979845

Trace of simplified code(s):
{"time": "2021-02-13 04:49:18.142300", "score": "0.9976", "loss": "0.0081", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList != null) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 04:49:19.846376", "score": "0.9962", "loss": "0.0126", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel(depth, \"columnList: \"); columnList.treePrint(depth + 1); } }", "n_tokens": 58, "n_pass": [51, 2, 2]}
{"time": "2021-02-13 04:49:21.163250", "score": "0.9861", "loss": "0.0441", "code": "public void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 54, "n_pass": [56, 3, 3]}
{"time": "2021-02-13 04:49:23.206606", "score": "0.9861", "loss": "0.0441", "code": " void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 53, "n_pass": [105, 4, 4]}
{"time": "2021-02-13 04:49:24.521393", "score": "0.9861", "loss": "0.0441", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel(depth, \"columnList: \");(depth + 1); } }", "n_tokens": 52, "n_pass": [106, 5, 5]}
{"time": "2021-02-13 04:49:26.644953", "score": "0.9576", "loss": "0.1378", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"columnList: \");(depth + 1); } }", "n_tokens": 50, "n_pass": [122, 6, 6]}
{"time": "2021-02-13 04:49:27.981900", "score": "0.9702", "loss": "0.0957", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \" \");(depth + 1); } }", "n_tokens": 48, "n_pass": [124, 7, 7]}
{"time": "2021-02-13 04:49:36.017801", "score": "0.9705", "loss": "0.0946", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(depth + 1); } }", "n_tokens": 47, "n_pass": [197, 8, 8]}
{"time": "2021-02-13 04:49:37.354443", "score": "0.9641", "loss": "0.1165", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");( + 1); } }", "n_tokens": 46, "n_pass": [201, 9, 9]}
{"time": "2021-02-13 04:49:38.695779", "score": "0.9641", "loss": "0.1165", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(+ 1); } }", "n_tokens": 45, "n_pass": [202, 10, 10]}
{"time": "2021-02-13 04:49:40.014781", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");( 1); } }", "n_tokens": 44, "n_pass": [203, 11, 11]}
{"time": "2021-02-13 04:49:41.332533", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(1); } }", "n_tokens": 43, "n_pass": [204, 12, 12]}
{"time": "2021-02-13 04:49:42.661352", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(1);} }", "n_tokens": 42, "n_pass": [208, 13, 13]}
{"time": "2021-02-13 04:49:43.970686", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth) { super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 41, "n_pass": [210, 14, 14]}
{"time": "2021-02-13 04:49:46.021461", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth){ super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 40, "n_pass": [220, 15, 15]}
{"time": "2021-02-13 04:49:47.340877", "score": "0.955", "loss": "0.1475", "code": "void printSubNodes(int depth){super.printSubNodes(depth); if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 39, "n_pass": [222, 16, 16]}
{"time": "2021-02-13 04:49:48.641890", "score": "0.7681", "loss": "1.4478", "code": "void printSubNodes(int depth){superprintSubNodes(depth); if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 38, "n_pass": [224, 17, 17]}
{"time": "2021-02-13 04:49:50.297770", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes(); if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 37, "n_pass": [227, 18, 18]}
{"time": "2021-02-13 04:49:51.598275", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if (columnList ) { printLabel( \"\");(1);}}", "n_tokens": 36, "n_pass": [230, 19, 19]}
{"time": "2021-02-13 04:49:52.925669", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if(columnList ) { printLabel( \"\");(1);}}", "n_tokens": 35, "n_pass": [232, 20, 20]}
{"time": "2021-02-13 04:49:54.226087", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if(columnList) { printLabel( \"\");(1);}}", "n_tokens": 34, "n_pass": [235, 21, 21]}
{"time": "2021-02-13 04:49:55.550228", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if(columnList){ printLabel( \"\");(1);}}", "n_tokens": 33, "n_pass": [237, 22, 22]}
{"time": "2021-02-13 04:49:56.869754", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if(columnList){printLabel( \"\");(1);}}", "n_tokens": 32, "n_pass": [239, 23, 23]}
{"time": "2021-02-13 04:49:59.464292", "score": "0.7638", "loss": "1.4789", "code": "void printSubNodes(int depth){superprintSubNodes();if(columnList){printLabel(\"\");(1);}}", "n_tokens": 31, "n_pass": [242, 25, 24]}
{"time": "2021-02-13 04:50:01.490526", "score": "0.8257", "loss": "0.9189", "code": "void printSubNodes(int depth){printSubNodes();if(columnList){printLabel(\"\");(1);}}", "n_tokens": 30, "n_pass": [262, 26, 25]}
{"time": "2021-02-13 04:50:02.790705", "score": "0.9239", "loss": "0.4685", "code": "void printSubNodes(int depth){printSubNodes();if(columnList){(\"\");(1);}}", "n_tokens": 29, "n_pass": [272, 27, 26]}

Minimal simplified code:
void printSubNodes(int depth){printSubNodes();if(columnList){("");(1);}}

