
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/codefollower__Tomcat-Research/java/org/apache/catalina/connector/RequestFacade_getContentLength.java
method_name = getContentLength
method_body = @Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString("requestFacade.nullRequest")); } return request.getContentLength(); }
predict, score, loss = getContentLength, 0.9855533242225647, 0.05418707802891731

Trace of simplified code(s):
{"time": "2021-02-13 22:18:09.781785", "score": "0.9856", "loss": "0.0542", "code": "@Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString(\"requestFacade.nullRequest\")); } return request.getContentLength(); }", "n_tokens": 57, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 22:18:11.514414", "score": "0.987", "loss": "0.0517", "code": "@Override public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 50, "n_pass": [25, 2, 2]}
{"time": "2021-02-13 22:18:13.292453", "score": "0.9864", "loss": "0.0621", "code": "public int getContentLength() { if (request == null) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 47, "n_pass": [50, 3, 3]}
{"time": "2021-02-13 22:18:15.055972", "score": "0.9838", "loss": "0.0792", "code": "public int getContentLength() { if (request ) { throw new IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 43, "n_pass": [56, 4, 4]}
{"time": "2021-02-13 22:18:16.433426", "score": "0.971", "loss": "0.2087", "code": "public int getContentLength() { if (request ) { IllegalStateException(sm.getString); } return request.getContentLength(); }", "n_tokens": 39, "n_pass": [58, 5, 5]}
{"time": "2021-02-13 22:18:19.211998", "score": "0.9897", "loss": "0.0517", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } return request.getContentLength(); }", "n_tokens": 37, "n_pass": [93, 6, 6]}
{"time": "2021-02-13 22:18:20.578972", "score": "0.9631", "loss": "0.223", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } request.getContentLength(); }", "n_tokens": 35, "n_pass": [97, 7, 7]}
{"time": "2021-02-13 22:18:21.947931", "score": "0.9026", "loss": "0.7905", "code": "public int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 33, "n_pass": [98, 8, 8]}
{"time": "2021-02-13 22:18:23.269056", "score": "0.9026", "loss": "0.7905", "code": " int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 32, "n_pass": [102, 9, 9]}
{"time": "2021-02-13 22:18:24.643309", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength() { if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 31, "n_pass": [103, 10, 10]}
{"time": "2021-02-13 22:18:30.502524", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){ if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 30, "n_pass": [151, 11, 11]}
{"time": "2021-02-13 22:18:31.829759", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){if (request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 29, "n_pass": [152, 12, 12]}
{"time": "2021-02-13 22:18:33.194469", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){if(request ) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 28, "n_pass": [154, 13, 13]}
{"time": "2021-02-13 22:18:34.547401", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){if(request) { IllegalStateException(getString); } getContentLength(); }", "n_tokens": 27, "n_pass": [157, 14, 14]}
{"time": "2021-02-13 22:18:35.887040", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){if(request){ IllegalStateException(getString); } getContentLength(); }", "n_tokens": 26, "n_pass": [159, 15, 15]}
{"time": "2021-02-13 22:18:37.234165", "score": "0.9026", "loss": "0.7905", "code": "int getContentLength(){if(request){IllegalStateException(getString); } getContentLength(); }", "n_tokens": 25, "n_pass": [161, 16, 16]}
{"time": "2021-02-13 22:18:38.565679", "score": "0.8572", "loss": "1.335", "code": "int getContentLength(){if(request){(getString); } getContentLength(); }", "n_tokens": 24, "n_pass": [162, 17, 17]}
{"time": "2021-02-13 22:18:39.906806", "score": "0.8572", "loss": "1.335", "code": "int getContentLength(){if(request){(getString);} getContentLength(); }", "n_tokens": 23, "n_pass": [167, 18, 18]}
{"time": "2021-02-13 22:18:41.269780", "score": "0.8572", "loss": "1.335", "code": "int getContentLength(){if(request){(getString);}getContentLength(); }", "n_tokens": 22, "n_pass": [169, 19, 19]}
{"time": "2021-02-13 22:18:42.606862", "score": "0.8572", "loss": "1.335", "code": "int getContentLength(){if(request){(getString);}getContentLength();}", "n_tokens": 21, "n_pass": [174, 20, 20]}

Minimal simplified code:
int getContentLength(){if(request){(getString);}getContentLength();}

