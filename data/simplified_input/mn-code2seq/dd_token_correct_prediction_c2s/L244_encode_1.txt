
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/bcgit__bc-java/core/src/main/java/org/bouncycastle/asn1/ASN1UTCTime_encode.java
method_name = encode
method_body = void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }
predict, score, loss = encode, 0.8389533162117004, 0.21693365275859833

Trace of simplified code(s):
{"time": "2021-02-13 12:32:04.203695", "score": "0.8393", "loss": "0.2143", "code": "void encode(ASN1OutputStream out) throws IOException { out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 93, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 12:32:05.573298", "score": "0.8279", "loss": "0.2267", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (int i = 0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 88, "n_pass": [46, 2, 2]}
{"time": "2021-02-13 12:32:07.302726", "score": "0.8632", "loss": "0.1809", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { out.write((byte) time[i]); } }", "n_tokens": 82, "n_pass": [53, 3, 3]}
{"time": "2021-02-13 12:32:09.020567", "score": "0.8277", "loss": "0.28", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time[i]); } }", "n_tokens": 79, "n_pass": [102, 4, 4]}
{"time": "2021-02-13 12:32:10.348620", "score": "0.8514", "loss": "0.239", "code": "void encode(ASN1OutputStream out){ out.write(BERTags.UTC_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 76, "n_pass": [104, 5, 5]}
{"time": "2021-02-13 12:32:12.055431", "score": "0.6104", "loss": "0.5629", "code": "void encode(ASN1OutputStream out){ out.write(_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 73, "n_pass": [113, 6, 6]}
{"time": "2021-02-13 12:32:17.790240", "score": "0.5493", "loss": "0.8755", "code": "void encode(ASN1OutputStream out){ outwrite(_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 72, "n_pass": [190, 8, 7]}
{"time": "2021-02-13 12:32:19.106768", "score": "0.5834", "loss": "0.7075", "code": "void encode(ASN1OutputStream out){ out(_TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 71, "n_pass": [191, 9, 8]}
{"time": "2021-02-13 12:32:20.435223", "score": "0.5834", "loss": "0.7075", "code": "void encode(ASN1OutputStream out){ out(TIME); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 70, "n_pass": [192, 10, 9]}
{"time": "2021-02-13 12:32:21.761572", "score": "0.6138", "loss": "0.6945", "code": "void encode(ASN1OutputStream out){ out(); int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 69, "n_pass": [193, 11, 10]}
{"time": "2021-02-13 12:32:23.142156", "score": "0.6138", "loss": "0.6945", "code": "void encode(ASN1OutputStream out){ out();int length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 68, "n_pass": [196, 12, 11]}
{"time": "2021-02-13 12:32:24.466154", "score": "0.564", "loss": "0.7697", "code": "void encode(ASN1OutputStream out){ out(); length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 67, "n_pass": [197, 13, 12]}
{"time": "2021-02-13 12:32:25.812680", "score": "0.564", "loss": "0.7697", "code": "void encode(ASN1OutputStream out){ out();length = time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 66, "n_pass": [198, 14, 13]}
{"time": "2021-02-13 12:32:27.144641", "score": "0.564", "loss": "0.7697", "code": "void encode(ASN1OutputStream out){ out();length= time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 65, "n_pass": [200, 15, 14]}
{"time": "2021-02-13 12:32:28.460248", "score": "0.564", "loss": "0.7697", "code": "void encode(ASN1OutputStream out){ out();length=time.length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 64, "n_pass": [202, 16, 15]}
{"time": "2021-02-13 12:32:29.784980", "score": "0.4288", "loss": "1.0404", "code": "void encode(ASN1OutputStream out){ out();length=length; out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 62, "n_pass": [203, 17, 16]}
{"time": "2021-02-13 12:32:31.118487", "score": "0.5999", "loss": "0.6899", "code": "void encode(ASN1OutputStream out){ out();length= out.writeLength(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 60, "n_pass": [204, 18, 17]}
{"time": "2021-02-13 12:32:32.425403", "score": "0.4905", "loss": "1.1311", "code": "void encode(ASN1OutputStream out){ out();length= out(length); for (0; i != length; i++) { ((byte) time); } }", "n_tokens": 58, "n_pass": [206, 19, 18]}
{"time": "2021-02-13 12:32:33.754237", "score": "0.5309", "loss": "0.9529", "code": "void encode(ASN1OutputStream out){ out();length= out(length); for (0; i= length; i++) { ((byte) time); } }", "n_tokens": 56, "n_pass": [213, 20, 19]}
{"time": "2021-02-13 12:32:35.073181", "score": "0.2801", "loss": "1.8291", "code": "void encode(ASN1OutputStream out){ out();length= out(length); for (0; ilength; i++) { ((byte) time); } }", "n_tokens": 54, "n_pass": [214, 21, 20]}
{"time": "2021-02-13 12:32:38.471251", "score": "0.2801", "loss": "1.8291", "code": "void encode(ASNOutputStream out){ out();length= out(length); for (0; ilength; i++) { ((byte) time); } }", "n_tokens": 53, "n_pass": [231, 23, 21]}
{"time": "2021-02-13 12:32:41.107416", "score": "0.2801", "loss": "1.8291", "code": "void encode(ASNOutputStream out){out();length= out(length); for (0; ilength; i++) { ((byte) time); } }", "n_tokens": 52, "n_pass": [237, 25, 22]}
{"time": "2021-02-13 12:32:42.425766", "score": "0.3368", "loss": "1.7211", "code": "void encode(ASNOutputStream out){out();length=(length); for (0; ilength; i++) { ((byte) time); } }", "n_tokens": 50, "n_pass": [244, 26, 23]}
{"time": "2021-02-13 12:32:43.741889", "score": "0.5324", "loss": "1.0869", "code": "void encode(ASNOutputStream out){out();length=(length); for (0;length; i++) { ((byte) time); } }", "n_tokens": 48, "n_pass": [250, 27, 24]}
{"time": "2021-02-13 12:32:45.055449", "score": "0.4546", "loss": "1.1374", "code": "void encode(ASNOutputStream out){out();length=(length); for (0;length; i) { ((byte) time); } }", "n_tokens": 46, "n_pass": [253, 28, 25]}
{"time": "2021-02-13 12:32:51.054585", "score": "0.5422", "loss": "1.0737", "code": "void encode(ASNOutputStream out){out();length=(length); for (0;length;) { ((byte) time); } }", "n_tokens": 44, "n_pass": [284, 32, 26]}
{"time": "2021-02-13 12:32:55.743363", "score": "0.3741", "loss": "2.0692", "code": "void encode(ASNOutputStream out){out();length(length); for (0;length;) { ((byte) time); } }", "n_tokens": 43, "n_pass": [308, 35, 27]}
{"time": "2021-02-13 12:33:00.406745", "score": "0.5358", "loss": "1.4816", "code": "void encode(ASNOutputStream out){out();(length); for (0;length;) { ((byte) time); } }", "n_tokens": 42, "n_pass": [337, 38, 28]}
{"time": "2021-02-13 12:33:03.726086", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length); for (0;length;) { ((byte) time); } }", "n_tokens": 41, "n_pass": [357, 40, 29]}
{"time": "2021-02-13 12:33:09.506609", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for (0;length;) { ((byte) time); } }", "n_tokens": 40, "n_pass": [417, 41, 30]}
{"time": "2021-02-13 12:33:10.812267", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;) { ((byte) time); } }", "n_tokens": 39, "n_pass": [418, 42, 31]}
{"time": "2021-02-13 12:33:14.726152", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;){ ((byte) time); } }", "n_tokens": 38, "n_pass": [425, 45, 32]}
{"time": "2021-02-13 12:33:16.025783", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;){((byte) time); } }", "n_tokens": 37, "n_pass": [427, 46, 33]}
{"time": "2021-02-13 12:33:17.331310", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;){((byte)time); } }", "n_tokens": 36, "n_pass": [432, 47, 34]}
{"time": "2021-02-13 12:33:18.631649", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;){((byte)time);} }", "n_tokens": 35, "n_pass": [436, 48, 35]}
{"time": "2021-02-13 12:33:19.943869", "score": "0.2283", "loss": "3.4604", "code": "void encode(ASN out){out();(length);for(0;length;){((byte)time);}}", "n_tokens": 34, "n_pass": [438, 49, 36]}

Minimal simplified code:
void encode(ASN out){out();(length);for(0;length;){((byte)time);}}

