
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ppamorim__Dragger/dragger/src/main/java/com/github/ppamorim/dragger/ViewDragHelper_checkTouchSlop.java
method_name = checkTouchSlop
method_body = public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) { return false; } final boolean checkHorizontal = (directions & DIRECTION_HORIZONTAL) == DIRECTION_HORIZONTAL; final boolean checkVertical = (directions & DIRECTION_VERTICAL) == DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }
predict, score, loss = checkTouchSlop, 0.9379178285598755, 0.2637920677661896

Trace of simplified code(s):
{"time": "2021-02-13 17:08:09.694990", "score": "0.9246", "loss": "0.318", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) { return false; } final boolean checkHorizontal = (directions & DIRECTION_HORIZONTAL) == DIRECTION_HORIZONTAL; final boolean checkVertical = (directions & DIRECTION_VERTICAL) == DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 229, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 17:08:12.672939", "score": "0.9412", "loss": "0.2422", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) { return false; } final boolean checkHorizontal= DIRECTION_HORIZONTAL; final boolean checkVertical = (directions & DIRECTION_VERTICAL) == DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 215, "n_pass": [47, 2, 2]}
{"time": "2021-02-13 17:08:14.035633", "score": "0.9509", "loss": "0.2156", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) { return false; } final boolean checkHorizontal= DIRECTION_HORIZONTAL; final boolean checkVertical =DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 201, "n_pass": [49, 3, 3]}
{"time": "2021-02-13 17:08:15.416937", "score": "0.968", "loss": "0.1477", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) { return false; } final boolean checkHorizontalDIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 187, "n_pass": [63, 4, 4]}
{"time": "2021-02-13 17:08:16.787106", "score": "0.9614", "loss": "0.1773", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId] - mInitialMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 173, "n_pass": [76, 5, 5]}
{"time": "2021-02-13 17:08:18.196999", "score": "0.9717", "loss": "0.1352", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId] - mInitialMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 166, "n_pass": [115, 6, 6]}
{"time": "2021-02-13 17:08:19.555027", "score": "0.9436", "loss": "0.2523", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dx * dx + dy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 159, "n_pass": [117, 7, 7]}
{"time": "2021-02-13 17:08:20.913165", "score": "0.9381", "loss": "0.2673", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } else if (checkVertical) { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 152, "n_pass": [121, 8, 8]}
{"time": "2021-02-13 17:08:22.267852", "score": "0.9201", "loss": "0.356", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) DIRECTION_VERTICAL; final float dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 144, "n_pass": [128, 9, 9]}
{"time": "2021-02-13 17:08:24.039370", "score": "0.9263", "loss": "0.3217", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL; final float dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 141, "n_pass": [204, 10, 10]}
{"time": "2021-02-13 17:08:25.386957", "score": "0.9025", "loss": "0.4409", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx = mLastMotionX[pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 138, "n_pass": [206, 11, 11]}
{"time": "2021-02-13 17:08:26.749085", "score": "0.9123", "loss": "0.3801", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx [pointerId]; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 135, "n_pass": [208, 12, 12]}
{"time": "2021-02-13 17:08:28.098357", "score": "0.8976", "loss": "0.4509", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx ; final float dy = mLastMotionY[pointerId]; if (checkHorizontal && checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 132, "n_pass": [209, 13, 13]}
{"time": "2021-02-13 17:08:29.445845", "score": "0.8424", "loss": "0.7513", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx ; final float dy = mLastMotionY[pointerId]; if ( checkVertical) { return dxdy * dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 128, "n_pass": [215, 14, 14]}
{"time": "2021-02-13 17:08:30.796292", "score": "0.8332", "loss": "0.8031", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx ; final float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop * mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 124, "n_pass": [218, 15, 15]}
{"time": "2021-02-13 17:08:33.471605", "score": "0.807", "loss": "0.9618", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId))VERTICAL;  dx ; final float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 120, "n_pass": [220, 17, 16]}
{"time": "2021-02-13 17:08:36.908838", "score": "0.8327", "loss": "0.7868", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)) dx ; final float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 117, "n_pass": [244, 19, 17]}
{"time": "2021-02-13 17:08:38.247958", "score": "0.8397", "loss": "0.7579", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); final float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 114, "n_pass": [245, 20, 18]}
{"time": "2021-02-13 17:08:45.015654", "score": "0.8397", "loss": "0.7579", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } else if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 112, "n_pass": [340, 23, 19]}
{"time": "2021-02-13 17:08:48.121080", "score": "0.8224", "loss": "0.8577", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return Math.abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 110, "n_pass": [358, 25, 20]}
{"time": "2021-02-13 17:08:49.838369", "score": "0.8051", "loss": "0.9668", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } return false; }", "n_tokens": 108, "n_pass": [364, 26, 21]}
{"time": "2021-02-13 17:08:52.935037", "score": "0.813", "loss": "0.9263", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; } false; }", "n_tokens": 106, "n_pass": [380, 28, 22]}
{"time": "2021-02-13 17:08:54.300790", "score": "0.8333", "loss": "0.8237", "code": "public boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; }  }", "n_tokens": 104, "n_pass": [381, 29, 23]}
{"time": "2021-02-13 17:08:55.641662", "score": "0.8333", "loss": "0.8237", "code": " boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; }  }", "n_tokens": 103, "n_pass": [383, 30, 24]}
{"time": "2021-02-13 17:08:56.975366", "score": "0.8333", "loss": "0.8237", "code": "boolean checkTouchSlop(int directions, int pointerId) { if (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; }  }", "n_tokens": 102, "n_pass": [384, 31, 25]}
{"time": "2021-02-13 17:08:59.045987", "score": "0.8267", "loss": "0.8838", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); float dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; }  }", "n_tokens": 100, "n_pass": [397, 32, 26]}
{"time": "2021-02-13 17:09:00.380775", "score": "0.8015", "loss": "1.08", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return Math.abs(dy) > mTouchSlop; }  }", "n_tokens": 98, "n_pass": [402, 33, 27]}
{"time": "2021-02-13 17:09:02.846499", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy) > mTouchSlop; }  }", "n_tokens": 96, "n_pass": [432, 34, 28]}
{"time": "2021-02-13 17:09:20.014657", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)> mTouchSlop; }  }", "n_tokens": 95, "n_pass": [576, 36, 29]}
{"time": "2021-02-13 17:09:21.367918", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop; }  }", "n_tokens": 94, "n_pass": [577, 37, 30]}
{"time": "2021-02-13 17:09:22.700210", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}  }", "n_tokens": 93, "n_pass": [580, 38, 31]}
{"time": "2021-02-13 17:09:24.029203", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;} }", "n_tokens": 92, "n_pass": [582, 39, 32]}
{"time": "2021-02-13 17:09:25.374855", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions, int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 91, "n_pass": [583, 40, 33]}
{"time": "2021-02-13 17:09:27.427830", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions,int pointerId) { (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 90, "n_pass": [593, 41, 34]}
{"time": "2021-02-13 17:09:28.760613", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions,int pointerId){ (!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 89, "n_pass": [598, 42, 35]}
{"time": "2021-02-13 17:09:30.089551", "score": "0.7773", "loss": "1.2446", "code": "boolean checkTouchSlop(int directions,int pointerId){(!isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 88, "n_pass": [600, 43, 36]}
{"time": "2021-02-13 17:09:31.423506", "score": "0.8023", "loss": "1.0703", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown(pointerId)); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 87, "n_pass": [602, 44, 37]}
{"time": "2021-02-13 17:09:34.088936", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown()); dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 86, "n_pass": [605, 46, 38]}
{"time": "2021-02-13 17:09:35.420525", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy = mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 85, "n_pass": [609, 47, 39]}
{"time": "2021-02-13 17:09:36.751620", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy= mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 84, "n_pass": [611, 48, 40]}
{"time": "2021-02-13 17:09:38.110431", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId]; if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 83, "n_pass": [613, 49, 41]}
{"time": "2021-02-13 17:09:39.441650", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if ( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 82, "n_pass": [619, 50, 42]}
{"time": "2021-02-13 17:09:40.873402", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if( checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 81, "n_pass": [621, 51, 43]}
{"time": "2021-02-13 17:09:42.188212", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical) { return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 80, "n_pass": [623, 52, 44]}
{"time": "2021-02-13 17:09:43.531240", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){ return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 79, "n_pass": [626, 53, 45]}
{"time": "2021-02-13 17:09:44.878189", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return  dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 78, "n_pass": [628, 54, 46]}
{"time": "2021-02-13 17:09:46.574022", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy > mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 77, "n_pass": [630, 55, 47]}
{"time": "2021-02-13 17:09:48.304099", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy> mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 76, "n_pass": [633, 56, 48]}
{"time": "2021-02-13 17:09:49.629119", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop; } if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 75, "n_pass": [635, 57, 49]}
{"time": "2021-02-13 17:09:50.983862", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;} if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 74, "n_pass": [638, 58, 50]}
{"time": "2021-02-13 17:09:52.312200", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if (checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 73, "n_pass": [640, 59, 51]}
{"time": "2021-02-13 17:09:53.650113", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal) { return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 72, "n_pass": [642, 60, 52]}
{"time": "2021-02-13 17:09:55.004012", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){ return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 71, "n_pass": [646, 61, 53]}
{"time": "2021-02-13 17:09:56.333915", "score": "0.7899", "loss": "1.1662", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return abs(dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 70, "n_pass": [648, 62, 54]}
{"time": "2021-02-13 17:09:58.397036", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx) > mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 69, "n_pass": [651, 63, 55]}
{"time": "2021-02-13 17:09:59.725813", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx)> mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 68, "n_pass": [655, 64, 56]}
{"time": "2021-02-13 17:10:02.402782", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx)>mTouchSlop; } { return abs(dy)>mTouchSlop;}}", "n_tokens": 67, "n_pass": [657, 66, 57]}
{"time": "2021-02-13 17:10:03.722857", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx)>mTouchSlop;} { return abs(dy)>mTouchSlop;}}", "n_tokens": 66, "n_pass": [660, 67, 58]}
{"time": "2021-02-13 17:10:05.050395", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx)>mTouchSlop;}{ return abs(dy)>mTouchSlop;}}", "n_tokens": 65, "n_pass": [662, 68, 59]}
{"time": "2021-02-13 17:10:06.369966", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return (dx)>mTouchSlop;}{return abs(dy)>mTouchSlop;}}", "n_tokens": 64, "n_pass": [664, 69, 60]}
{"time": "2021-02-13 17:10:15.647084", "score": "0.7707", "loss": "1.2828", "code": "boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return(dx)>mTouchSlop;}{return abs(dy)>mTouchSlop;}}", "n_tokens": 63, "n_pass": [720, 74, 61]}

Minimal simplified code:
boolean checkTouchSlop(int directions,int pointerId){(isPointerDown());dy=mLastMotionY[pointerId];if(checkVertical){return dy>mTouchSlop;}if(checkHorizontal){return(dx)>mTouchSlop;}{return abs(dy)>mTouchSlop;}}

