
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/apache__incubator-heron/eco-storm-examples/src/java/org/apache/heron/examples/eco/EvenAndOddBolt_declareOutputFields.java
method_name = declareOutputFields
method_body = @Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream("evens", new Fields("evens")); declarer.declareStream("odds", new Fields("odds")); declarer.declare(new Fields("number")); }
predict, score, loss = declareOutputFields, 0.9997943639755249, 0.0006680437363684177

Trace of simplified code(s):
{"time": "2021-02-14 02:50:22.317781", "score": "0.9998", "loss": "0.0007", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream(\"evens\", new Fields(\"evens\")); declarer.declareStream(\"odds\", new Fields(\"odds\")); declarer.declare(new Fields(\"number\")); }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:50:24.997192", "score": "0.9999", "loss": "0.0004", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream(\"evens\", new Fields(\"evens\")); ; declarer.declare(new Fields(\"number\")); }", "n_tokens": 54, "n_pass": [10, 3, 2]}
{"time": "2021-02-14 02:50:26.336607", "score": "0.9999", "loss": "0.0003", "code": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream(\"evens\", new Fields(\"evens\")).declare(new Fields(\"number\")); }", "n_tokens": 49, "n_pass": [37, 4, 3]}
{"time": "2021-02-14 02:50:27.666311", "score": "0.9991", "loss": "0.0029", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream(\"evens\", new Fields(\"evens\")).declare(new Fields(\"number\")); }", "n_tokens": 45, "n_pass": [41, 5, 4]}
{"time": "2021-02-14 02:50:29.029038", "score": "0.9994", "loss": "0.0018", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream( new Fields(\"evens\")).declare(new Fields(\"number\")); }", "n_tokens": 41, "n_pass": [46, 6, 5]}
{"time": "2021-02-14 02:50:30.354565", "score": "0.9993", "loss": "0.0021", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream( Fields(\"evens\")).declare(new Fields(\"number\")); }", "n_tokens": 39, "n_pass": [74, 7, 6]}
{"time": "2021-02-14 02:50:31.695904", "score": "0.9995", "loss": "0.0016", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream((\"evens\")).declare(new Fields(\"number\")); }", "n_tokens": 37, "n_pass": [75, 8, 7]}
{"time": "2021-02-14 02:50:33.038012", "score": "0.9803", "loss": "0.063", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declarer.declareStream((\"evens\")).declare((\"number\")); }", "n_tokens": 34, "n_pass": [80, 9, 8]}
{"time": "2021-02-14 02:50:35.012060", "score": "0.9909", "loss": "0.0297", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { declareStream((\"evens\")).declare((\"number\")); }", "n_tokens": 32, "n_pass": [90, 10, 9]}
{"time": "2021-02-14 02:50:38.424033", "score": "0.8523", "loss": "0.5936", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { ((\"evens\")).declare((\"number\")); }", "n_tokens": 31, "n_pass": [133, 11, 10]}
{"time": "2021-02-14 02:50:39.794744", "score": "0.991", "loss": "0.033", "code": " void declareOutputFields(OutputFieldsDeclarer declarer) { ((\"\")).declare((\"number\")); }", "n_tokens": 30, "n_pass": [136, 12, 11]}
{"time": "2021-02-14 02:50:41.103973", "score": "0.991", "loss": "0.033", "code": "void declareOutputFields(OutputFieldsDeclarer declarer) { ((\"\")).declare((\"number\")); }", "n_tokens": 29, "n_pass": [148, 13, 12]}
{"time": "2021-02-14 02:50:43.141667", "score": "0.991", "loss": "0.033", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){ ((\"\")).declare((\"number\")); }", "n_tokens": 28, "n_pass": [157, 14, 13]}
{"time": "2021-02-14 02:50:44.469726", "score": "0.991", "loss": "0.033", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){((\"\")).declare((\"number\")); }", "n_tokens": 27, "n_pass": [159, 15, 14]}
{"time": "2021-02-14 02:50:47.194259", "score": "0.9916", "loss": "0.0327", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){((\"\")).declare((\"\")); }", "n_tokens": 26, "n_pass": [192, 16, 15]}
{"time": "2021-02-14 02:50:48.522047", "score": "0.9916", "loss": "0.0327", "code": "void declareOutputFields(OutputFieldsDeclarer declarer){((\"\")).declare((\"\"));}", "n_tokens": 25, "n_pass": [197, 17, 16]}

Minimal simplified code:
void declareOutputFields(OutputFieldsDeclarer declarer){(("")).declare((""));}

