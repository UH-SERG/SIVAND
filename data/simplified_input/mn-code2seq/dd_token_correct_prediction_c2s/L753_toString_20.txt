
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/CogComp__cogcomp-nlp/dataless-classifier/src/main/java/edu/illinois/cs/cogcomp/datalessclassification/classifier/LabelTreeNode_toString.java
method_name = toString
method_body = @Override public String toString() { StringBuilder sb = new StringBuilder(""); sb.append(labelID).append("\t"); sb.append(labelName).append("\t"); sb.append(labelDescription); return sb.toString(); }
predict, score, loss = toString, 0.9865180253982544, 0.03247268125414848

Trace of simplified code(s):
{"time": "2021-02-13 21:26:46.385336", "score": "0.9865", "loss": "0.0325", "code": "@Override public String toString() { StringBuilder sb = new StringBuilder(\"\"); sb.append(labelID).append(\"\\t\"); sb.append(labelName).append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 78, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 21:26:47.745095", "score": "0.9822", "loss": "0.0433", "code": "@Override public String toString() { StringBuilder sb =sb.append(labelID).append(\"\\t\"); sb.append(labelName).append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 68, "n_pass": [22, 2, 2]}
{"time": "2021-02-13 21:26:49.098704", "score": "0.9865", "loss": "0.0333", "code": "@Override public String toString() { StringBuilder sb =sb.append(labelID).append(\"\\t\"); sb.append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 63, "n_pass": [48, 3, 3]}
{"time": "2021-02-13 21:26:50.449748", "score": "0.7777", "loss": "0.7363", "code": " String toString() { StringBuilder sb =sb.append(labelID).append(\"\\t\"); sb.append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 59, "n_pass": [53, 4, 4]}
{"time": "2021-02-13 21:26:51.799839", "score": "0.8411", "loss": "0.4541", "code": " String toString() { sb.append(labelID).append(\"\\t\"); sb.append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 54, "n_pass": [56, 5, 5]}
{"time": "2021-02-13 21:26:53.122905", "score": "0.787", "loss": "0.674", "code": " String toString() { sb(labelID).append(\"\\t\"); sb.append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 52, "n_pass": [91, 6, 6]}
{"time": "2021-02-13 21:26:54.474045", "score": "0.7816", "loss": "0.713", "code": " String toString() { sb(labelID).append(\"\\t\");append(\"\\t\"); sb.append(labelDescription); return sb.toString(); }", "n_tokens": 49, "n_pass": [98, 7, 7]}
{"time": "2021-02-13 21:26:55.802914", "score": "0.8403", "loss": "0.4897", "code": " String toString() { sb(labelID).append(\"\\t\");append(\"\\t\"); (labelDescription); return sb.toString(); }", "n_tokens": 46, "n_pass": [102, 8, 8]}
{"time": "2021-02-13 21:26:57.127626", "score": "0.8321", "loss": "0.6322", "code": " String toString() { sb(labelID).append(\"\\t\");append(\"\\t\"); ; return sb.toString(); }", "n_tokens": 43, "n_pass": [103, 9, 9]}
{"time": "2021-02-13 21:26:58.440642", "score": "0.8885", "loss": "0.4097", "code": " String toString() { sb(labelID).append(\"\\t\");append(\"\\t\");  sb.toString(); }", "n_tokens": 40, "n_pass": [104, 10, 10]}
{"time": "2021-02-13 21:26:59.772763", "score": "0.7789", "loss": "0.9658", "code": " String toString() { sb(labelID).append(\"\\t\");append(\"\\t\"); toString(); }", "n_tokens": 37, "n_pass": [105, 11, 11]}
{"time": "2021-02-13 21:27:03.116781", "score": "0.8963", "loss": "0.3745", "code": " String toString() {(labelID).append(\"\\t\");append(\"\\t\"); toString(); }", "n_tokens": 35, "n_pass": [112, 13, 12]}
{"time": "2021-02-13 21:27:08.507387", "score": "0.8963", "loss": "0.3745", "code": " String toString() {(labelID).append(\"t\");append(\"\\t\"); toString(); }", "n_tokens": 34, "n_pass": [165, 15, 13]}
{"time": "2021-02-13 21:27:09.825075", "score": "0.9197", "loss": "0.3036", "code": " String toString() {(labelID).append(\"\");append(\"\\t\"); toString(); }", "n_tokens": 33, "n_pass": [166, 16, 14]}
{"time": "2021-02-13 21:27:11.158947", "score": "0.8357", "loss": "0.6216", "code": " String toString() {(labelID).append(\"\");(\"\\t\"); toString(); }", "n_tokens": 32, "n_pass": [170, 17, 15]}
{"time": "2021-02-13 21:27:12.488785", "score": "0.8357", "loss": "0.6216", "code": " String toString() {(labelID).append(\"\");(\"t\"); toString(); }", "n_tokens": 31, "n_pass": [173, 18, 16]}
{"time": "2021-02-13 21:27:13.788337", "score": "0.8541", "loss": "0.5658", "code": " String toString() {(labelID).append(\"\");(\"\"); toString(); }", "n_tokens": 30, "n_pass": [174, 19, 17]}
{"time": "2021-02-13 21:27:15.092594", "score": "0.8541", "loss": "0.5658", "code": "String toString() {(labelID).append(\"\");(\"\"); toString(); }", "n_tokens": 29, "n_pass": [180, 20, 18]}
{"time": "2021-02-13 21:27:17.470141", "score": "0.8541", "loss": "0.5658", "code": "String toString(){(labelID).append(\"\");(\"\"); toString(); }", "n_tokens": 28, "n_pass": [186, 21, 19]}
{"time": "2021-02-13 21:27:21.530090", "score": "0.8541", "loss": "0.5658", "code": "String toString(){(labelID).append(\"\");(\"\");toString(); }", "n_tokens": 27, "n_pass": [223, 22, 20]}
{"time": "2021-02-13 21:27:22.849934", "score": "0.8541", "loss": "0.5658", "code": "String toString(){(labelID).append(\"\");(\"\");toString();}", "n_tokens": 26, "n_pass": [228, 23, 21]}

Minimal simplified code:
String toString(){(labelID).append("");("");toString();}

