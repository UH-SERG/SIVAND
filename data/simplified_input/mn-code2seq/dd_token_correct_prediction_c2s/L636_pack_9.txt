
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/dronekit__dronekit-android/dependencyLibs/Mavlink/src/com/MAVLink/common/msg_terrain_report_pack.java
method_name = pack
method_body = public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_TERRAIN_REPORT; packet.payload.putInt(lat); packet.payload.putInt(lon); packet.payload.putFloat(terrain_height); packet.payload.putFloat(current_height); packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }
predict, score, loss = pack, 0.9824085831642151, 0.02445266954600811

Trace of simplified code(s):
{"time": "2021-02-13 19:24:37.394360", "score": "0.9796", "loss": "0.0284", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid = MAVLINK_MSG_ID_TERRAIN_REPORT; packet.payload.putInt(lat); packet.payload.putInt(lon); packet.payload.putFloat(terrain_height); packet.payload.putFloat(current_height); packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 147, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 19:24:39.118969", "score": "0.9806", "loss": "0.0251", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid (lat); packet.payload.putInt(lon); packet.payload.putFloat(terrain_height); packet.payload.putFloat(current_height); packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 129, "n_pass": [23, 2, 2]}
{"time": "2021-02-13 19:24:40.465783", "score": "0.9823", "loss": "0.0212", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid .putFloat(terrain_height); packet.payload.putFloat(current_height); packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 111, "n_pass": [24, 3, 3]}
{"time": "2021-02-13 19:24:41.803156", "score": "0.9645", "loss": "0.0403", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 255; packet.compid = 190; packet.msgid ; packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 92, "n_pass": [25, 4, 4]}
{"time": "2021-02-13 19:24:43.138858", "score": "0.9527", "loss": "0.0535", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 25; packet.payload.putUnsignedShort(spacing); packet.payload.putUnsignedShort(pending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 74, "n_pass": [30, 5, 5]}
{"time": "2021-02-13 19:24:44.499574", "score": "0.9181", "loss": "0.1018", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 25; packet.payload.putUnsignedShort(spacingpending); packet.payload.putUnsignedShort(loaded); return packet; }", "n_tokens": 65, "n_pass": [44, 6, 6]}
{"time": "2021-02-13 19:24:45.823484", "score": "0.8899", "loss": "0.1966", "code": "public MAVLinkPacket pack() { MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 25; packet.payload.putUnsignedShort(spacingloaded); return packet; }", "n_tokens": 55, "n_pass": [45, 7, 7]}
{"time": "2021-02-13 19:24:47.133694", "score": "0.9098", "loss": "0.1467", "code": "public MAVLinkPacket pack() {MAVLinkPacket(MAVLINK_MSG_LENGTH); packet.sysid = 25; packet.payload.putUnsignedShort(spacingloaded); return packet; }", "n_tokens": 46, "n_pass": [48, 8, 8]}
{"time": "2021-02-13 19:24:48.475995", "score": "0.7857", "loss": "0.5091", "code": "public MAVLinkPacket pack() { packet.sysid = 25; packet.payload.putUnsignedShort(spacingloaded); return packet; }", "n_tokens": 37, "n_pass": [49, 9, 9]}
{"time": "2021-02-13 19:24:49.837546", "score": "0.4573", "loss": "1.3717", "code": "public MAVLinkPacket pack() {; packet.payload.putUnsignedShort(spacingloaded); return packet; }", "n_tokens": 28, "n_pass": [50, 10, 10]}
{"time": "2021-02-13 19:24:51.533211", "score": "0.4163", "loss": "1.4096", "code": "public MAVLinkPacket pack() {; packet.putUnsignedShort(spacingloaded); return packet; }", "n_tokens": 26, "n_pass": [80, 11, 11]}
{"time": "2021-02-13 19:24:54.153028", "score": "0.5021", "loss": "1.247", "code": "public MAVLinkPacket pack() {; packet.putUnsignedShort(spacingloaded); ; }", "n_tokens": 23, "n_pass": [84, 13, 12]}
{"time": "2021-02-13 19:24:55.498075", "score": "0.5021", "loss": "1.247", "code": "MAVLinkPacket pack() {; packet.putUnsignedShort(spacingloaded); ; }", "n_tokens": 21, "n_pass": [86, 14, 13]}
{"time": "2021-02-13 19:25:01.170189", "score": "0.5021", "loss": "1.247", "code": "MAVLinkPacket pack(){; packet.putUnsignedShort(spacingloaded); ; }", "n_tokens": 20, "n_pass": [119, 16, 14]}
{"time": "2021-02-13 19:25:02.463497", "score": "0.5021", "loss": "1.247", "code": "MAVLinkPacket pack(){ packet.putUnsignedShort(spacingloaded); ; }", "n_tokens": 19, "n_pass": [121, 17, 15]}
{"time": "2021-02-13 19:25:03.749611", "score": "0.5021", "loss": "1.247", "code": "MAVLinkPacket pack(){packet.putUnsignedShort(spacingloaded); ; }", "n_tokens": 18, "n_pass": [122, 18, 16]}
{"time": "2021-02-13 19:25:05.044599", "score": "0.3973", "loss": "1.2236", "code": "MAVLinkPacket pack(){packetputUnsignedShort(spacingloaded); ; }", "n_tokens": 17, "n_pass": [124, 19, 17]}
{"time": "2021-02-13 19:25:08.965417", "score": "0.73", "loss": "0.3998", "code": "MAVLinkPacket pack(){packetputUnsignedShort(spacing); ; }", "n_tokens": 16, "n_pass": [128, 22, 18]}
{"time": "2021-02-13 19:25:10.257749", "score": "0.73", "loss": "0.3998", "code": "MAVLinkPacket pack(){packetputUnsignedShort(spacing); }", "n_tokens": 14, "n_pass": [130, 23, 19]}
{"time": "2021-02-13 19:25:12.607189", "score": "0.9113", "loss": "0.1393", "code": "MAVLinkPacket pack(){putUnsignedShort(spacing); }", "n_tokens": 13, "n_pass": [138, 24, 20]}
{"time": "2021-02-13 19:25:13.929758", "score": "0.5372", "loss": "0.9816", "code": "MAVLinkPacket pack(){(spacing); }", "n_tokens": 12, "n_pass": [139, 25, 21]}
{"time": "2021-02-13 19:25:16.906732", "score": "0.5372", "loss": "0.9816", "code": "MAVLinkPacket pack(){(spacing);}", "n_tokens": 11, "n_pass": [156, 26, 22]}

Minimal simplified code:
MAVLinkPacket pack(){(spacing);}

