
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/mimno__Mallet/src/cc/mallet/pipe/SelectiveSGML2TokenSequence_writeObject.java
method_name = writeObject
method_body = private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(sgmlPattern); out.writeObject(lexer); out.writeObject(backgroundTag); out.writeObject(allowedTags); }
predict, score, loss = writeObject, 0.979417085647583, 0.049807313829660416

Trace of simplified code(s):
{"time": "2021-02-14 02:03:08.096448", "score": "0.9794", "loss": "0.0498", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(sgmlPattern); out.writeObject(lexer); out.writeObject(backgroundTag); out.writeObject(allowedTags); }", "n_tokens": 62, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:03:09.866947", "score": "0.9779", "loss": "0.0566", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(backgroundTag); out.writeObject(allowedTags); }", "n_tokens": 46, "n_pass": [10, 2, 2]}
{"time": "2021-02-14 02:03:11.537135", "score": "0.9708", "loss": "0.0767", "code": "private void writeObject(ObjectOutputStream out) throws IOException { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(allowedTags); }", "n_tokens": 38, "n_pass": [20, 3, 3]}
{"time": "2021-02-14 02:03:13.247865", "score": "0.9589", "loss": "0.1398", "code": "private void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT_SERIAL_VERSION); out.writeObject(allowedTags); }", "n_tokens": 34, "n_pass": [40, 4, 4]}
{"time": "2021-02-14 02:03:14.605638", "score": "0.9564", "loss": "0.152", "code": "private void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 30, "n_pass": [43, 5, 5]}
{"time": "2021-02-14 02:03:17.998433", "score": "0.9564", "loss": "0.152", "code": " void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 29, "n_pass": [74, 7, 6]}
{"time": "2021-02-14 02:03:19.313498", "score": "0.9564", "loss": "0.152", "code": "void writeObject(ObjectOutputStream out) { out.writeInt(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 28, "n_pass": [75, 8, 7]}
{"time": "2021-02-14 02:03:21.208468", "score": "0.8894", "loss": "0.5053", "code": "void writeObject(ObjectOutputStream out) { out(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 26, "n_pass": [82, 9, 8]}
{"time": "2021-02-14 02:03:24.216056", "score": "0.9031", "loss": "0.479", "code": "void writeObject(ObjectOutputStream out) {(CURRENT); out.writeObject(allowedTags); }", "n_tokens": 24, "n_pass": [95, 11, 9]}
{"time": "2021-02-14 02:03:29.950193", "score": "0.9031", "loss": "0.479", "code": "void writeObject(ObjectOutputStream out) {(CURRENT);out.writeObject(allowedTags); }", "n_tokens": 23, "n_pass": [136, 13, 10]}
{"time": "2021-02-14 02:03:32.622506", "score": "0.9013", "loss": "0.4355", "code": "void writeObject(ObjectOutputStream out) {(CURRENT);out.writeObject(); }", "n_tokens": 22, "n_pass": [140, 15, 11]}
{"time": "2021-02-14 02:03:33.950393", "score": "0.9013", "loss": "0.4355", "code": "void writeObject(ObjectOutputStream out) {(CURRENT);out.writeObject();}", "n_tokens": 21, "n_pass": [143, 16, 12]}
{"time": "2021-02-14 02:03:35.973083", "score": "0.9013", "loss": "0.4355", "code": "void writeObject(ObjectOutputStream out){(CURRENT);out.writeObject();}", "n_tokens": 20, "n_pass": [153, 17, 13]}

Minimal simplified code:
void writeObject(ObjectOutputStream out){(CURRENT);out.writeObject();}

