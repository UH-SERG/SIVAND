
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/ppamorim__Dragger/dragger/src/main/java/com/github/ppamorim/dragger/ViewDragHelper_canScroll.java
method_name = canScroll
method_body = protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x + scrollX >= child.getLeft() && x + scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }
predict, score, loss = canScroll, 0.9805194735527039, 0.08296439051628113

Trace of simplified code(s):
{"time": "2021-02-13 05:48:22.420240", "score": "0.9901", "loss": "0.0362", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (x + scrollX >= child.getLeft() && x + scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 324, "n_pass": [1, 1, 1]}
{"time": "2021-02-13 05:48:23.865132", "score": "0.9884", "loss": "0.0449", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx, dy, x + scrollX - child.getLeft(), y + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 304, "n_pass": [52, 2, 2]}
{"time": "2021-02-13 05:48:25.251593", "score": "0.9529", "loss": "0.1396", "code": "protected boolean canScroll(View v, boolean checkV, int dx, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 283, "n_pass": [56, 3, 3]}
{"time": "2021-02-13 05:48:26.707797", "score": "0.9812", "loss": "0.0734", "code": "protected boolean canScroll(View v, int dy, int x, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 273, "n_pass": [106, 4, 4]}
{"time": "2021-02-13 05:48:28.083770", "score": "0.9797", "loss": "0.0637", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); final int scrollY = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 263, "n_pass": [107, 5, 5]}
{"time": "2021-02-13 05:48:29.487032", "score": "0.9727", "loss": "0.0782", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY >= child.getTop() && y + scrollY < child.getBottom() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 253, "n_pass": [113, 6, 6]}
{"time": "2021-02-13 05:48:30.907285", "score": "0.9869", "loss": "0.0568", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY&& y + scrollY < child.getBottom() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 243, "n_pass": [123, 7, 7]}
{"time": "2021-02-13 05:48:32.290925", "score": "0.9792", "loss": "0.1067", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollY&& y + scrollY <canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 233, "n_pass": [125, 8, 8]}
{"time": "2021-02-13 05:48:33.725374", "score": "0.9516", "loss": "0.1855", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) { final View child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollYcanScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 223, "n_pass": [148, 9, 9]}
{"time": "2021-02-13 05:48:43.450183", "score": "0.9205", "loss": "0.2738", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && y + scrollYcanScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 218, "n_pass": [251, 16, 10]}
{"time": "2021-02-13 05:48:47.577795", "score": "0.9902", "loss": "0.0442", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child, true, dx,+ scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 213, "n_pass": [257, 19, 11]}
{"time": "2021-02-13 05:48:48.949834", "score": "0.9862", "loss": "0.0423", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child, + scrollY - child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 208, "n_pass": [259, 20, 12]}
{"time": "2021-02-13 05:48:50.316663", "score": "0.9825", "loss": "0.0792", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child,  child.getTop())) { return true; } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 203, "n_pass": [260, 21, 13]}
{"time": "2021-02-13 05:48:51.686340", "score": "0.964", "loss": "0.1218", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollX(); getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 198, "n_pass": [263, 22, 14]}
{"time": "2021-02-13 05:48:53.087844", "score": "0.9788", "loss": "0.0734", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; i >= 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 193, "n_pass": [283, 23, 15]}
{"time": "2021-02-13 05:48:54.490292", "score": "0.9826", "loss": "0.0737", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {child = group.getChildAt(i); if (+ scrollX < child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 188, "n_pass": [291, 24, 16]}
{"time": "2021-02-13 05:48:55.868817", "score": "0.9806", "loss": "0.0617", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {child = group; if (+ scrollX < child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 183, "n_pass": [295, 25, 17]}
{"time": "2021-02-13 05:48:57.327444", "score": "0.9759", "loss": "0.0807", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {child = group; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 178, "n_pass": [297, 26, 18]}
{"time": "2021-02-13 05:48:58.755660", "score": "0.9676", "loss": "0.1254", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV && (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 173, "n_pass": [331, 27, 19]}
{"time": "2021-02-13 05:49:00.537956", "score": "0.8836", "loss": "0.4139", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(v, -dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 170, "n_pass": [451, 28, 20]}
{"time": "2021-02-13 05:49:01.896464", "score": "0.904", "loss": "0.3344", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) || ViewCompat.canScrollVertically(v, -dy)); }", "n_tokens": 167, "n_pass": [454, 29, 21]}
{"time": "2021-02-13 05:49:03.255153", "score": "0.9311", "loss": "0.3217", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(v, -dy)); }", "n_tokens": 164, "n_pass": [457, 30, 22]}
{"time": "2021-02-13 05:49:04.619036", "score": "0.9567", "loss": "0.189", "code": "protected boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 161, "n_pass": [459, 31, 23]}
{"time": "2021-02-13 05:49:06.006117", "score": "0.8961", "loss": "0.3979", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { final ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 159, "n_pass": [462, 32, 24]}
{"time": "2021-02-13 05:49:07.782076", "score": "0.9341", "loss": "0.2412", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { ViewGroup group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 157, "n_pass": [477, 33, 25]}
{"time": "2021-02-13 05:49:09.137587", "score": "0.9583", "loss": "0.1921", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; final int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 155, "n_pass": [478, 34, 26]}
{"time": "2021-02-13 05:49:10.495715", "score": "0.9485", "loss": "0.2333", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; int scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 153, "n_pass": [484, 35, 27]}
{"time": "2021-02-13 05:49:11.850585", "score": "0.937", "loss": "0.2547", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v.getScrollY(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 151, "n_pass": [485, 36, 28]}
{"time": "2021-02-13 05:49:13.205864", "score": "0.9662", "loss": "0.1486", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v(); final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 149, "n_pass": [489, 37, 29]}
{"time": "2021-02-13 05:49:14.575178", "score": "0.9706", "loss": "0.1125", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v; final int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 147, "n_pass": [490, 38, 30]}
{"time": "2021-02-13 05:49:15.929417", "score": "0.9592", "loss": "0.1644", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v; int count = group.getChildCount(); for (int i = count - 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 145, "n_pass": [492, 39, 31]}
{"time": "2021-02-13 05:49:17.305697", "score": "0.9654", "loss": "0.1333", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v; int count = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } } return checkV (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 142, "n_pass": [500, 40, 32]}
{"time": "2021-02-13 05:49:18.676063", "score": "0.9004", "loss": "0.3352", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = v; int count = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 139, "n_pass": [518, 41, 33]}
{"time": "2021-02-13 05:49:20.795654", "score": "0.9379", "loss": "0.2927", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX v; int count = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 137, "n_pass": [546, 42, 34]}
{"time": "2021-02-13 05:49:22.139548", "score": "0.9106", "loss": "0.3615", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX; int count = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 135, "n_pass": [547, 43, 35]}
{"time": "2021-02-13 05:49:23.481802", "score": "0.9186", "loss": "0.3214", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollXint count = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 133, "n_pass": [548, 44, 36]}
{"time": "2021-02-13 05:49:24.824218", "score": "0.9171", "loss": "0.2687", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX = group.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 130, "n_pass": [549, 45, 37]}
{"time": "2021-02-13 05:49:26.173841", "score": "0.8295", "loss": "0.6309", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollXgroup.getChildCount(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 127, "n_pass": [550, 46, 38]}
{"time": "2021-02-13 05:49:27.516529", "score": "0.8834", "loss": "0.4447", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) v; scrollX(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 124, "n_pass": [551, 47, 39]}
{"time": "2021-02-13 05:49:29.280538", "score": "0.9145", "loss": "0.3797", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup)  scrollX(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 122, "n_pass": [598, 48, 40]}
{"time": "2021-02-13 05:49:40.729377", "score": "0.9145", "loss": "0.3797", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX(); for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 121, "n_pass": [740, 49, 41]}
{"time": "2021-02-13 05:49:42.089729", "score": "0.9145", "loss": "0.3797", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for (int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 120, "n_pass": [744, 50, 42]}
{"time": "2021-02-13 05:49:43.445476", "score": "0.9145", "loss": "0.3797", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(int i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 119, "n_pass": [746, 51, 43]}
{"time": "2021-02-13 05:49:44.783202", "score": "0.8766", "loss": "0.5518", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for( i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 118, "n_pass": [748, 52, 44]}
{"time": "2021-02-13 05:49:46.124653", "score": "0.8766", "loss": "0.5518", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i =- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 117, "n_pass": [749, 53, 45]}
{"time": "2021-02-13 05:49:47.465520", "score": "0.8766", "loss": "0.5518", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i=- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 116, "n_pass": [751, 54, 46]}
{"time": "2021-02-13 05:49:48.802202", "score": "0.9084", "loss": "0.5716", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i- 1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 115, "n_pass": [752, 55, 47]}
{"time": "2021-02-13 05:49:50.166235", "score": "0.9084", "loss": "0.5716", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1; 0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 114, "n_pass": [754, 56, 48]}
{"time": "2021-02-13 05:49:51.532881", "score": "0.9084", "loss": "0.5716", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;0; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 113, "n_pass": [757, 57, 49]}
{"time": "2021-02-13 05:49:52.873293", "score": "0.9189", "loss": "0.5369", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;; i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 112, "n_pass": [758, 58, 50]}
{"time": "2021-02-13 05:49:54.213173", "score": "0.9189", "loss": "0.5369", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--) {; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 111, "n_pass": [760, 59, 51]}
{"time": "2021-02-13 05:49:55.567854", "score": "0.9189", "loss": "0.5369", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){; if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 110, "n_pass": [765, 60, 52]}
{"time": "2021-02-13 05:49:56.907643", "score": "0.9189", "loss": "0.5369", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){ if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 109, "n_pass": [767, 61, 53]}
{"time": "2021-02-13 05:49:58.242897", "score": "0.9189", "loss": "0.5369", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( child.getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 108, "n_pass": [768, 62, 54]}
{"time": "2021-02-13 05:49:59.594066", "score": "0.903", "loss": "0.6112", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child.getTop())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 106, "n_pass": [771, 63, 55]}
{"time": "2021-02-13 05:50:00.933512", "score": "0.8881", "loss": "0.5894", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child())) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 104, "n_pass": [779, 64, 56]}
{"time": "2021-02-13 05:50:02.261463", "score": "0.9014", "loss": "0.5448", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }  (ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 102, "n_pass": [780, 65, 57]}
{"time": "2021-02-13 05:50:03.621688", "score": "0.9014", "loss": "0.5448", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx) ||canScrollVertically(vdy)); }", "n_tokens": 100, "n_pass": [786, 66, 58]}
{"time": "2021-02-13 05:50:06.304679", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v, int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 98, "n_pass": [791, 68, 59]}
{"time": "2021-02-13 05:50:08.379823", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y) { if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 97, "n_pass": [805, 69, 60]}
{"time": "2021-02-13 05:50:09.709240", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){ if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 96, "n_pass": [810, 70, 61]}
{"time": "2021-02-13 05:50:11.045469", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if (v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 95, "n_pass": [812, 71, 62]}
{"time": "2021-02-13 05:50:12.381194", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup) { group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 94, "n_pass": [814, 72, 63]}
{"time": "2021-02-13 05:50:13.721637", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){ group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 93, "n_pass": [822, 73, 64]}
{"time": "2021-02-13 05:50:15.081070", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group = (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 92, "n_pass": [824, 74, 65]}
{"time": "2021-02-13 05:50:16.412841", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group= (ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 91, "n_pass": [826, 75, 66]}
{"time": "2021-02-13 05:50:17.745522", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup) scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 90, "n_pass": [828, 76, 67]}
{"time": "2021-02-13 05:50:19.080249", "score": "0.8866", "loss": "0.9975", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(i-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 89, "n_pass": [832, 77, 68]}
{"time": "2021-02-13 05:50:20.417968", "score": "0.8951", "loss": "1.0329", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(-1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 88, "n_pass": [839, 78, 69]}
{"time": "2021-02-13 05:50:21.754276", "score": "0.8921", "loss": "0.9919", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(1;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 87, "n_pass": [840, 79, 70]}
{"time": "2021-02-13 05:50:23.086367", "score": "0.8707", "loss": "1.0959", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat.canScrollHorizontally(-dx)|canScrollVertically(vdy)); }", "n_tokens": 86, "n_pass": [841, 80, 71]}
{"time": "2021-02-13 05:50:24.448270", "score": "0.5448", "loss": "2.9791", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy)); }", "n_tokens": 84, "n_pass": [864, 81, 72]}
{"time": "2021-02-13 05:50:34.702502", "score": "0.5448", "loss": "2.9791", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if ( getRight() && canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 83, "n_pass": [979, 85, 73]}
{"time": "2021-02-13 05:50:36.802723", "score": "0.5448", "loss": "2.9791", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if( getRight() && canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 82, "n_pass": [1021, 86, 74]}
{"time": "2021-02-13 05:50:38.134716", "score": "0.5448", "loss": "2.9791", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight() && canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 81, "n_pass": [1023, 87, 75]}
{"time": "2021-02-13 05:50:39.468878", "score": "0.5448", "loss": "2.9791", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&& canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 80, "n_pass": [1027, 88, 76]}
{"time": "2021-02-13 05:50:40.799779", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()& canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 79, "n_pass": [1028, 89, 77]}
{"time": "2021-02-13 05:50:42.155788", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,  child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 78, "n_pass": [1030, 90, 78]}
{"time": "2021-02-13 05:50:43.499795", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child, child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 77, "n_pass": [1035, 91, 79]}
{"time": "2021-02-13 05:50:44.831208", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)) { } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 76, "n_pass": [1036, 92, 80]}
{"time": "2021-02-13 05:50:46.167068", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){ } } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 75, "n_pass": [1040, 93, 81]}
{"time": "2021-02-13 05:50:47.516630", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){} } }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 74, "n_pass": [1042, 94, 82]}
{"time": "2021-02-13 05:50:48.848351", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}} }(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 73, "n_pass": [1044, 95, 83]}
{"time": "2021-02-13 05:50:50.179882", "score": "0.5684", "loss": "2.6846", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}(ViewCompat(-dx)|canScrollVertically(vdy));}", "n_tokens": 72, "n_pass": [1046, 96, 84]}
{"time": "2021-02-13 05:50:51.542351", "score": "0.6402", "loss": "1.7305", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((-dx)|canScrollVertically(vdy));}", "n_tokens": 71, "n_pass": [1049, 97, 85]}
{"time": "2021-02-13 05:50:52.880352", "score": "0.6141", "loss": "1.9515", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((dx)|canScrollVertically(vdy));}", "n_tokens": 70, "n_pass": [1051, 98, 86]}
{"time": "2021-02-13 05:50:54.211798", "score": "0.6773", "loss": "1.5732", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((dx)canScrollVertically(vdy));}", "n_tokens": 69, "n_pass": [1054, 99, 87]}
{"time": "2021-02-13 05:50:56.863621", "score": "0.73", "loss": "1.6916", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((dx)canScrollVertically(dy));}", "n_tokens": 68, "n_pass": [1057, 101, 88]}
{"time": "2021-02-13 05:50:58.182402", "score": "0.6875", "loss": "1.5028", "code": "boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((dx)canScrollVertically());}", "n_tokens": 67, "n_pass": [1058, 102, 89]}

Minimal simplified code:
boolean canScroll(View v,int y){if(v instanceof ViewGroup){group=(ViewGroup)scrollX();for(;;i--){if(getRight()&canScroll(child,child)){}}}((dx)canScrollVertically());}

