
path = /scratch/rabin/data/code2vec/transforms/Methods_Test/java-large/test/MKergall__osmbonuspack/OSMBonusPack/src/main/java/org/osmdroid/bonuspack/clustering/MarkerClusterer_onTouchEvent.java
method_name = onTouchEvent
method_body = @Override public boolean onTouchEvent(final MotionEvent event, final MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }
predict, score, loss = onTouchEvent, 0.9963482022285461, 0.013757300563156605

Trace of simplified code(s):
{"time": "2021-02-14 02:31:57.291074", "score": "0.9963", "loss": "0.0138", "code": "@Override public boolean onTouchEvent(final MotionEvent event, final MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 72, "n_pass": [1, 1, 1]}
{"time": "2021-02-14 02:31:58.630917", "score": "0.993", "loss": "0.0254", "code": "@Override public boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 63, "n_pass": [21, 2, 2]}
{"time": "2021-02-14 02:32:00.013671", "score": "0.942", "loss": "0.2571", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters()) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 59, "n_pass": [54, 3, 3]}
{"time": "2021-02-14 02:32:01.771900", "score": "0.939", "loss": "0.2728", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.getMarker().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 57, "n_pass": [105, 4, 4]}
{"time": "2021-02-14 02:32:03.127877", "score": "0.9372", "loss": "0.2404", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster().onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 55, "n_pass": [110, 5, 5]}
{"time": "2021-02-14 02:32:04.490281", "score": "0.9326", "loss": "0.2741", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } return false; }", "n_tokens": 53, "n_pass": [111, 6, 6]}
{"time": "2021-02-14 02:32:07.199394", "score": "0.9319", "loss": "0.3067", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } ; }", "n_tokens": 50, "n_pass": [118, 8, 7]}
{"time": "2021-02-14 02:32:15.227016", "score": "0.9319", "loss": "0.3067", "code": " boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 48, "n_pass": [185, 10, 8]}
{"time": "2021-02-14 02:32:16.543675", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView) { for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 47, "n_pass": [187, 11, 9]}
{"time": "2021-02-14 02:32:18.785541", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){ for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 46, "n_pass": [196, 12, 10]}
{"time": "2021-02-14 02:32:20.145363", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for (StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 45, "n_pass": [198, 13, 11]}
{"time": "2021-02-14 02:32:21.497784", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster : reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 44, "n_pass": [200, 14, 12]}
{"time": "2021-02-14 02:32:22.838115", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster: reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 43, "n_pass": [205, 15, 13]}
{"time": "2021-02-14 02:32:24.193230", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters) { if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 42, "n_pass": [207, 16, 14]}
{"time": "2021-02-14 02:32:25.603498", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){ if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 41, "n_pass": [210, 17, 15]}
{"time": "2021-02-14 02:32:27.006511", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if (cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 40, "n_pass": [212, 18, 16]}
{"time": "2021-02-14 02:32:28.338827", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event, mapView)) return true; } }", "n_tokens": 39, "n_pass": [214, 19, 17]}
{"time": "2021-02-14 02:32:31.065561", "score": "0.9319", "loss": "0.3067", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event,mapView)) return true; } }", "n_tokens": 38, "n_pass": [222, 21, 18]}
{"time": "2021-02-14 02:32:32.436240", "score": "0.9482", "loss": "0.2713", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event,mapView)) true; } }", "n_tokens": 36, "n_pass": [226, 22, 19]}
{"time": "2021-02-14 02:32:35.877009", "score": "0.9356", "loss": "0.3269", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(eventmapView)) true; } }", "n_tokens": 35, "n_pass": [255, 24, 20]}
{"time": "2021-02-14 02:32:37.208952", "score": "0.9478", "loss": "0.2746", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent(event)) true; } }", "n_tokens": 34, "n_pass": [256, 25, 21]}
{"time": "2021-02-14 02:32:40.592471", "score": "0.9317", "loss": "0.5135", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) true; } }", "n_tokens": 33, "n_pass": [286, 27, 22]}
{"time": "2021-02-14 02:32:45.362301", "score": "0.8755", "loss": "0.8836", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ; } }", "n_tokens": 32, "n_pass": [324, 29, 23]}
{"time": "2021-02-14 02:32:46.693314", "score": "0.8755", "loss": "0.8836", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ;} }", "n_tokens": 31, "n_pass": [325, 30, 24]}
{"time": "2021-02-14 02:32:48.089051", "score": "0.8755", "loss": "0.8836", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){if(cluster.onTouchEvent()) ;}}", "n_tokens": 30, "n_pass": [327, 31, 25]}
{"time": "2021-02-14 02:32:50.212500", "score": "0.9393", "loss": "0.3185", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent()) ;}}", "n_tokens": 29, "n_pass": [347, 32, 26]}
{"time": "2021-02-14 02:32:52.920981", "score": "0.9393", "loss": "0.3185", "code": "boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent());}}", "n_tokens": 28, "n_pass": [355, 34, 27]}

Minimal simplified code:
boolean onTouchEvent(MapView mapView){for(StaticCluster cluster:reversedClusters){(cluster.onTouchEvent());}}

