filename,model,task,filter_type,initial_score,final_score,initial_loss,final_loss,dd_pass,dd_time,initial_program,final_program,initial_tokens,final_tokens,len_initial_tokens,len_final_tokens,len_minimal_tokens,len_initial_chars,len_final_chars,len_minimal_chars,per_removed_chars,per_removed_tokens,attn_nodes,final_nodes,common_nodes,len_attn_nodes,len_final_nodes,len_common_nodes,per_common_tokens,ground_truth
L1_isAllowed_1.txt,code2vec,METHOD_NAME,token_wrong,0.5229,0.3873,14.6202,19.5563,"{'n_total': 436, 'n_valid': 50, 'n_correct': 29}",149.027584,"public boolean isAllowed(SSOToken token, String resourceName, String actionName, Map envParameters) throws SSOException, PolicyException { if (PolicyManager.isMigratedToEntitlementService()) { return isAllowedE(token, resourceName, actionName, envParameters); } return isAllowedO(token, resourceName, actionName, envParameters); }","boolean isAllowed(SSOToken token,Map envParameters)throws PolicyException{if(isMigratedToEntitlementService()){(envParameters);}isAllowedO(resourceName,actionName,envParameters);}","['public', 'boolean', 'isAllowed', '(', 'SSOToken', 'token', ',', 'String', 'resourceName', ',', 'String', 'actionName', ',', 'Map', 'envParameters', ')', 'throws', 'SSOException', ',', 'PolicyException', '{', 'if', '(', 'PolicyManager', '.', 'isMigratedToEntitlementService', '(', ')', ')', '{', 'return', 'isAllowedE', '(', 'token', ',', 'resourceName', ',', 'actionName', ',', 'envParameters', ')', ';', '}', 'return', 'isAllowedO', '(', 'token', ',', 'resourceName', ',', 'actionName', ',', 'envParameters', ')', ';', '}']","['boolean', 'isAllowed', '(', 'SSOToken', 'token', ',', 'Map', 'envParameters', ')', 'throws', 'PolicyException', '{', 'if', '(', 'isMigratedToEntitlementService', '(', ')', ')', '{', '(', 'envParameters', ')', ';', '}', 'isAllowedO', '(', 'resourceName', ',', 'actionName', ',', 'envParameters', ')', ';', '}']",56,34,6,330,179,15,47.93650793650794,44.0,,,,-1,-1,-1,-1,False
L2_countDefaultPartitions_1.txt,code2vec,METHOD_NAME,token_wrong,0.8141,0.6825,22.3375,23.4618,"{'n_total': 287, 'n_valid': 35, 'n_correct': 31}",103.663178,private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = 0; } else { Path path = pathGenDefault(); partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } },void countDefaultPartitions(){if(NaN){}{partitionCount=(path)?1:trimTo(rootLen);}},"['private', 'void', 'countDefaultPartitions', '(', ')', '{', 'if', '(', 'maxTimestamp', '==', 'Numbers', '.', 'LONG_NaN', ')', '{', 'partitionCount', '=', '0', ';', '}', 'else', '{', 'Path', 'path', '=', 'pathGenDefault', '(', ')', ';', 'partitionCount', '=', 'ff', '.', 'exists', '(', 'path', ')', '?', '1', ':', '0', ';', 'path', '.', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']","['void', 'countDefaultPartitions', '(', ')', '{', 'if', '(', 'NaN', ')', '{', '}', '{', 'partitionCount', '=', '(', 'path', ')', '?', '1', ':', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']",51,27,6,206,82,28,69.66292134831461,53.333333333333336,,,,-1,-1,-1,-1,False
L3_endIalertCommonDisplay_1.txt,code2vec,METHOD_NAME,token_wrong,0.3912,0.8852,18.3745,25.7526,"{'n_total': 648, 'n_valid': 92, 'n_correct': 68}",261.263253,"public String endIalertCommonDisplay(ChildContentDisplayEvent event) { TaskModel model = (TaskModel) getModel(); String html = event.getContent(); int idx = html.lastIndexOf(""</div>""); html = html.substring(0, idx + 6) + ""<p>&nbsp;<p><center><div class=\""TtlBtnDiv\"">"" + ""<input name=\""button1\"" type=\""submit\"" "" + """" + ""class=\""Btn1\"" value=\"" "" + model.getLocalizedString(""button.ok"") + "" \"" onmouseover=\""javascript: this.className='Btn1Hov'\"" "" + ""onmouseout=\""javascript: this.className='Btn1'\"" "" + ""onblur=\""javascript: this.className='Btn1'\"" "" + ""onfocus=\""javascript: this.className='Btn1Hov'\"" "" + ""onClick=\""top.location.replace('../task/Home'); return false;\"" "" + ""/></div></center>"" + html.substring(idx + 6); return html; }","String endIalertCommonDisplay(ChildContentDisplayEvent event){model();html=(0)+""""+""""+("""")+""""+""""+(idx);return html;}","['public', 'String', 'endIalertCommonDisplay', '(', 'ChildContentDisplayEvent', 'event', ')', '{', 'TaskModel', 'model', '=', '(', 'TaskModel', ')', 'getModel', '(', ')', ';', 'String', 'html', '=', 'event', '.', 'getContent', '(', ')', ';', 'int', 'idx', '=', 'html', '.', 'lastIndexOf', '(', '""</div>""', ')', ';', 'html', '=', 'html', '.', 'substring', '(', '0', ',', 'idx', '+', '6', ')', '+', '""<p>&nbsp;<p><center><div class=\\""TtlBtnDiv\\"">""', '+', '""<input name=\\""button1\\"" type=\\""submit\\"" ""', '+', '""""', '+', '""class=\\""Btn1\\"" value=\\"" ""', '+', 'model', '.', 'getLocalizedString', '(', '""button.ok""', ')', '+', '"" \\"" onmouseover=\\""javascript: this.className=\'Btn1Hov\'\\"" ""', '+', '""onmouseout=\\""javascript: this.className=\'Btn1\'\\"" ""', '+', '""onblur=\\""javascript: this.className=\'Btn1\'\\"" ""', '+', '""onfocus=\\""javascript: this.className=\'Btn1Hov\'\\"" ""', '+', '""onClick=\\""top.location.replace(\'../task/Home\'); return false;\\"" ""', '+', '""/></div></center>""', '+', 'html', '.', 'substring', '(', 'idx', '+', '6', ')', ';', 'return', 'html', ';', '}']","['String', 'endIalertCommonDisplay', '(', 'ChildContentDisplayEvent', 'event', ')', '{', 'model', '(', ')', ';', 'html', '=', '(', '0', ')', '+', '""""', '+', '""""', '+', '(', '""""', ')', '+', '""""', '+', '""""', '+', '(', 'idx', ')', ';', 'return', 'html', ';', '}']",90,37,6,740,115,28,87.78089887640449,63.095238095238095,,,,-1,-1,-1,-1,False
L4_testFileEscape_1.txt,code2vec,METHOD_NAME,token_wrong,0.7132,0.4235,17.617,16.7223,"{'n_total': 496, 'n_valid': 75, 'n_correct': 40}",208.00866,"@Test public void testFileEscape() { CompilatioReviewServiceImpl compilatioService = new CompilatioReviewServiceImpl(); String someEscaping = compilatioService.escapeFileName(""Practical%203.docx"", ""contentId""); Assert.assertEquals(""Practical_3.docx"", someEscaping); someEscaping = compilatioService.escapeFileName(""Practical%203%.docx"", ""contentId""); Assert.assertEquals(""contentId"", someEscaping); someEscaping = compilatioService.escapeFileName(""Practical3.docx"", ""contentId""); Assert.assertEquals(""Practical3.docx"", someEscaping); }","@Test void testFileEscape(){compilatioService("""","""");Assert("""","""");compilatioService.escapeFileName(""Practicaldocx"");assertEquals(""Practicaldocx"",someEscaping);}","['@', 'Test', 'public', 'void', 'testFileEscape', '(', ')', '{', 'CompilatioReviewServiceImpl', 'compilatioService', '=', 'new', 'CompilatioReviewServiceImpl', '(', ')', ';', 'String', 'someEscaping', '=', 'compilatioService', '.', 'escapeFileName', '(', '""Practical%203.docx""', ',', '""contentId""', ')', ';', 'Assert', '.', 'assertEquals', '(', '""Practical_3.docx""', ',', 'someEscaping', ')', ';', 'someEscaping', '=', 'compilatioService', '.', 'escapeFileName', '(', '""Practical%203%.docx""', ',', '""contentId""', ')', ';', 'Assert', '.', 'assertEquals', '(', '""contentId""', ',', 'someEscaping', ')', ';', 'someEscaping', '=', 'compilatioService', '.', 'escapeFileName', '(', '""Practical3.docx""', ',', '""contentId""', ')', ';', 'Assert', '.', 'assertEquals', '(', '""Practical3.docx""', ',', 'someEscaping', ')', ';', '}']","['@', 'Test', 'void', 'testFileEscape', '(', ')', '{', 'compilatioService', '(', '""""', ',', '""""', ')', ';', 'Assert', '(', '""""', ',', '""""', ')', ';', 'compilatioService', '.', 'escapeFileName', '(', '""Practicaldocx""', ')', ';', 'assertEquals', '(', '""Practicaldocx""', ',', 'someEscaping', ')', ';', '}']",78,36,6,535,161,20,72.62135922330097,58.333333333333336,,,,-1,-1,-1,-1,False
L5_onDatasourceConnectionFail_1.txt,code2vec,METHOD_NAME,token_wrong,0.2385,0.3756,15.6051,16.2086,"{'n_total': 356, 'n_valid': 48, 'n_correct': 31}",136.429634,"@EventListener @Async public void onDatasourceConnectionFail(DatabaseConnectionFailEvent databaseConnectionFailEvent) { String subject = ""Datasource connection fails""; String message = (String) databaseConnectionFailEvent.getSource(); logger.error(""A platform error has occured : "" + message); sendEmailToAdmin(subject, message); }","@Async void onDatasourceConnectionFail(DatabaseConnectionFailEvent databaseConnectionFailEvent){String=""connectionfails"";String().error(""""+message);sendEmailToAdmin();}","['@', 'EventListener', '@', 'Async', 'public', 'void', 'onDatasourceConnectionFail', '(', 'DatabaseConnectionFailEvent', 'databaseConnectionFailEvent', ')', '{', 'String', 'subject', '=', '""Datasource connection fails""', ';', 'String', 'message', '=', '(', 'String', ')', 'databaseConnectionFailEvent', '.', 'getSource', '(', ')', ';', 'logger', '.', 'error', '(', '""A platform error has occured : ""', '+', 'message', ')', ';', 'sendEmailToAdmin', '(', 'subject', ',', 'message', ')', ';', '}']","['@', 'Async', 'void', 'onDatasourceConnectionFail', '(', 'DatabaseConnectionFailEvent', 'databaseConnectionFailEvent', ')', '{', 'String', '=', '""connectionfails""', ';', 'String', '(', ')', '.', 'error', '(', '""""', '+', 'message', ')', ';', 'sendEmailToAdmin', '(', ')', ';', '}']",46,29,6,331,168,32,54.515050167224075,42.5,,,,-1,-1,-1,-1,False
L6_getValidatedColorValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.389,0.4374,20.4907,20.2519,"{'n_total': 280, 'n_valid': 35, 'n_correct': 24}",102.260174,"private String getValidatedColorValue(String componentId) throws Exception { String value = getValueFromFacesContext(componentId).trim(); if ("""".equals(value)) { return value; } if (!COLOR_HEX_PATTERN.matcher(value).matches()) { throw new Exception(""Invalid hex color code.""); } return value; }","String getValidatedColorValue(String componentId)throws Exception{if(equals(value)){return new Exception("""");}}","['private', 'String', 'getValidatedColorValue', '(', 'String', 'componentId', ')', 'throws', 'Exception', '{', 'String', 'value', '=', 'getValueFromFacesContext', '(', 'componentId', ')', '.', 'trim', '(', ')', ';', 'if', '(', '""""', '.', 'equals', '(', 'value', ')', ')', '{', 'return', 'value', ';', '}', 'if', '(', '!', 'COLOR_HEX_PATTERN', '.', 'matcher', '(', 'value', ')', '.', 'matches', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '""Invalid hex color code.""', ')', ';', '}', 'return', 'value', ';', '}']","['String', 'getValidatedColorValue', '(', 'String', 'componentId', ')', 'throws', 'Exception', '{', 'if', '(', 'equals', '(', 'value', ')', ')', '{', 'return', 'new', 'Exception', '(', '""""', ')', ';', '}', '}']",63,26,6,294,111,28,68.796992481203,64.91228070175438,,,,-1,-1,-1,-1,False
L7_getRegistration_1.txt,code2vec,METHOD_NAME,token_wrong,0.2142,0.722,12.8449,16.3506,"{'n_total': 370, 'n_valid': 35, 'n_correct': 22}",93.25473,public FunctionRegistration<?> getRegistration(Object function) { if (function == null || !names.containsKey(function)) { return null; } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); },FunctionRegistration<?>getRegistration(Object function){if(function())new FunctionRegistration<>().name((function)).type((function).getType());},"['public', 'FunctionRegistration', '<', '?', '>', 'getRegistration', '(', 'Object', 'function', ')', '{', 'if', '(', 'function', '==', 'null', '||', '!', 'names', '.', 'containsKey', '(', 'function', ')', ')', '{', 'return', 'null', ';', '}', 'return', 'new', 'FunctionRegistration', '<', '>', '(', 'function', ')', '.', 'name', '(', 'names', '.', 'get', '(', 'function', ')', ')', '.', 'type', '(', 'findType', '(', 'function', ')', '.', 'getType', '(', ')', ')', ';', '}']","['FunctionRegistration', '<', '?', '>', 'getRegistration', '(', 'Object', 'function', ')', '{', 'if', '(', 'function', '(', ')', ')', 'new', 'FunctionRegistration', '<', '>', '(', ')', '.', 'name', '(', '(', 'function', ')', ')', '.', 'type', '(', '(', 'function', ')', '.', 'getType', '(', ')', ')', ';', '}']",62,42,6,244,144,21,44.843049327354265,35.714285714285715,,,,-1,-1,-1,-1,False
L8_initStreams_1.txt,code2vec,METHOD_NAME,token_wrong,0.6817,0.2478,10.6719,10.5035,"{'n_total': 443, 'n_valid': 47, 'n_correct': 35}",135.190747,"private void initStreams() throws IOException { boolean quote = PropUtil.getBooleanProperty(session.getProperties(), ""mail.debug.quote"", false); traceInput = new TraceInputStream(serverSocket.getInputStream(), traceLogger); traceInput.setQuote(quote); traceOutput = new TraceOutputStream(serverSocket.getOutputStream(), traceLogger); traceOutput.setQuote(quote); serverOutput = new BufferedOutputStream(traceOutput); serverInput = new BufferedInputStream(traceInput); lineInputStream = new LineInputStream(serverInput); }","void initStreams(){quote=getBooleanProperty(getProperties(),""quote"",false);TraceInputStream(getInputStream(),traceLogger);(traceLogger);LineInputStream(serverInput);}","['private', 'void', 'initStreams', '(', ')', 'throws', 'IOException', '{', 'boolean', 'quote', '=', 'PropUtil', '.', 'getBooleanProperty', '(', 'session', '.', 'getProperties', '(', ')', ',', '""mail.debug.quote""', ',', 'false', ')', ';', 'traceInput', '=', 'new', 'TraceInputStream', '(', 'serverSocket', '.', 'getInputStream', '(', ')', ',', 'traceLogger', ')', ';', 'traceInput', '.', 'setQuote', '(', 'quote', ')', ';', 'traceOutput', '=', 'new', 'TraceOutputStream', '(', 'serverSocket', '.', 'getOutputStream', '(', ')', ',', 'traceLogger', ')', ';', 'traceOutput', '.', 'setQuote', '(', 'quote', ')', ';', 'serverOutput', '=', 'new', 'BufferedOutputStream', '(', 'traceOutput', ')', ';', 'serverInput', '=', 'new', 'BufferedInputStream', '(', 'traceInput', ')', ';', 'lineInputStream', '=', 'new', 'LineInputStream', '(', 'serverInput', ')', ';', '}']","['void', 'initStreams', '(', ')', '{', 'quote', '=', 'getBooleanProperty', '(', 'getProperties', '(', ')', ',', '""quote""', ',', 'false', ')', ';', 'TraceInputStream', '(', 'getInputStream', '(', ')', ',', 'traceLogger', ')', ';', '(', 'traceLogger', ')', ';', 'LineInputStream', '(', 'serverInput', ')', ';', '}']",93,37,6,521,166,17,70.43650793650794,64.36781609195403,,,,-1,-1,-1,-1,False
L9_scaleImage_1.txt,code2vec,METHOD_NAME,token_wrong,0.458,0.3918,5.5496,10.8525,"{'n_total': 483, 'n_valid': 78, 'n_correct': 45}",227.317095,"public static BufferedImage scaleImage(int w, int h, BufferedImage img, Object interpolation) { BufferedImage bi; bi = new BufferedImage(w, h, img.getType()); Graphics2D g2d = (Graphics2D) bi.createGraphics(); g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, interpolation); g2d.drawImage(img, 0, 0, w, h, null); g2d.dispose(); return bi; }","BufferedImage scaleImage(int h,Object interpolation){BufferedImage();gd=(Graphics)(RenderingHints);gd.drawImage();}","['public', 'static', 'BufferedImage', 'scaleImage', '(', 'int', 'w', ',', 'int', 'h', ',', 'BufferedImage', 'img', ',', 'Object', 'interpolation', ')', '{', 'BufferedImage', 'bi', ';', 'bi', '=', 'new', 'BufferedImage', '(', 'w', ',', 'h', ',', 'img', '.', 'getType', '(', ')', ')', ';', 'Graphics2D', 'g2d', '=', '(', 'Graphics2D', ')', 'bi', '.', 'createGraphics', '(', ')', ';', 'g2d', '.', 'setRenderingHint', '(', 'RenderingHints', '.', 'KEY_INTERPOLATION', ',', 'interpolation', ')', ';', 'g2d', '.', 'drawImage', '(', 'img', ',', '0', ',', '0', ',', 'w', ',', 'h', ',', 'null', ')', ';', 'g2d', '.', 'dispose', '(', ')', ';', 'return', 'bi', ';', '}']","['BufferedImage', 'scaleImage', '(', 'int', 'h', ',', 'Object', 'interpolation', ')', '{', 'BufferedImage', '(', ')', ';', 'gd', '=', '(', 'Graphics', ')', '(', 'RenderingHints', ')', ';', 'gd', '.', 'drawImage', '(', ')', ';', '}']",87,30,6,346,115,16,70.0,70.37037037037037,,,,-1,-1,-1,-1,False
L10_calculateMac_1.txt,code2vec,METHOD_NAME,token_wrong,0.5638,0.4878,8.5166,6.9725,"{'n_total': 377, 'n_valid': 41, 'n_correct': 34}",121.927003,"public byte[] calculateMac(byte[] pwd, byte[] data) throws CRMFException { try { mac.init(new SecretKeySpec(pwd, mac.getAlgorithm())); return mac.doFinal(data); } catch (InvalidKeyException e) { throw new CRMFException(""failure in setup: "" + e.getMessage(), e); } }","byte[]calculateMac(byte data)throws CRMFException{try{mac((getAlgorithm()));doFinal;}catch(InvalidKeyException e){(""""+e);}}","['public', 'byte', '[', ']', 'calculateMac', '(', 'byte', '[', ']', 'pwd', ',', 'byte', '[', ']', 'data', ')', 'throws', 'CRMFException', '{', 'try', '{', 'mac', '.', 'init', '(', 'new', 'SecretKeySpec', '(', 'pwd', ',', 'mac', '.', 'getAlgorithm', '(', ')', ')', ')', ';', 'return', 'mac', '.', 'doFinal', '(', 'data', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'throw', 'new', 'CRMFException', '(', '""failure in setup: ""', '+', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}']","['byte', '[', ']', 'calculateMac', '(', 'byte', 'data', ')', 'throws', 'CRMFException', '{', 'try', '{', 'mac', '(', '(', 'getAlgorithm', '(', ')', ')', ')', ';', 'doFinal', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', '(', '""""', '+', 'e', ')', ';', '}', '}']",70,39,6,265,123,18,57.48987854251012,48.4375,,,,-1,-1,-1,-1,False
L11_testInitialWhitespaceLine_1.txt,code2vec,METHOD_NAME,token_wrong,0.4579,0.4432,17.5636,15.4407,"{'n_total': 502, 'n_valid': 38, 'n_correct': 38}",111.574164,"private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(""Subject"").length); assertEquals(""test"", ih.getHeader(""Subject"")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(""Subject"", h.getName()); assertEquals(""test"", h.getValue()); } }","void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,("""").getHeader("""")[0]);while(e){h("""",getName());assertEquals("""",h);}}","['private', 'void', 'testInitialWhitespaceLine', '(', 'InternetHeaders', 'ih', ')', 'throws', 'Exception', '{', 'assertEquals', '(', '1', ',', 'ih', '.', 'getHeader', '(', '""Subject""', ')', '.', 'length', ')', ';', 'assertEquals', '(', '""test""', ',', 'ih', '.', 'getHeader', '(', '""Subject""', ')', '[', '0', ']', ')', ';', 'Enumeration', '<', 'Header', '>', 'e', '=', 'ih', '.', 'getAllHeaders', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'Header', 'h', '=', 'e', '.', 'nextElement', '(', ')', ';', 'assertEquals', '(', '""Subject""', ',', 'h', '.', 'getName', '(', ')', ')', ';', 'assertEquals', '(', '""test""', ',', 'h', '.', 'getValue', '(', ')', ')', ';', '}', '}']","['void', 'testInitialWhitespaceLine', '(', 'InternetHeaders', 'ih', ')', 'throws', 'Exception', '{', 'assertEquals', '(', '1', ',', '(', '""""', ')', '.', 'getHeader', '(', '""""', ')', '[', '0', ']', ')', ';', 'while', '(', 'e', ')', '{', 'h', '(', '""""', ',', 'getName', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'h', ')', ';', '}', '}']",93,49,6,356,151,31,63.07692307692307,50.57471264367817,,,,-1,-1,-1,-1,False
L12_getSelectedCompressionMethod_1.txt,code2vec,METHOD_NAME,token_wrong,0.2287,0.207,14.3235,14.7817,"{'n_total': 428, 'n_valid': 65, 'n_correct': 32}",182.923774,"public short getSelectedCompressionMethod() throws IOException { short[] compressionMethods = getCompressionMethods(); for (int i = 0; i < compressionMethods.length; ++i) { if (Arrays.contains(offeredCompressionMethods, compressionMethods[i])) { return this.selectedCompressionMethod = compressionMethods[i]; } } throw new TlsFatalAlert(AlertDescription.handshake_failure); }",short getSelectedCompressionMethod()throws IOException{shortcompressionMethods=getCompressionMethods();for(;i<compressionMethods.length;){if(Arrays.contains(offeredCompressionMethods[i])){this[i];}}throw new TlsFatalAlert(AlertDescription.handshakefailure);},"['public', 'short', 'getSelectedCompressionMethod', '(', ')', 'throws', 'IOException', '{', 'short', '[', ']', 'compressionMethods', '=', 'getCompressionMethods', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'compressionMethods', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', 'Arrays', '.', 'contains', '(', 'offeredCompressionMethods', ',', 'compressionMethods', '[', 'i', ']', ')', ')', '{', 'return', 'this', '.', 'selectedCompressionMethod', '=', 'compressionMethods', '[', 'i', ']', ';', '}', '}', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'handshake_failure', ')', ';', '}']","['short', 'getSelectedCompressionMethod', '(', ')', 'throws', 'IOException', '{', 'shortcompressionMethods', '=', 'getCompressionMethods', '(', ')', ';', 'for', '(', ';', 'i', '<', 'compressionMethods', '.', 'length', ';', ')', '{', 'if', '(', 'Arrays', '.', 'contains', '(', 'offeredCompressionMethods', '[', 'i', ']', ')', ')', '{', 'this', '[', 'i', ']', ';', '}', '}', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'handshakefailure', ')', ';', '}']",71,54,6,375,258,34,34.31085043988269,26.153846153846157,,,,-1,-1,-1,-1,False
L13_getPrincipal_1.txt,code2vec,METHOD_NAME,token_wrong,0.3513,0.5793,7.2408,9.1688,"{'n_total': 314, 'n_valid': 43, 'n_correct': 26}",118.331749,@Override public java.security.Principal getPrincipal() { if (UUID != null) { return new OATHPrincipal(UUID); } if (userName != null) { return new OATHPrincipal(userName); } return null; },java.security.Principal getPrincipal(){if(null){(UUID);}if(userName=null){return new OATHPrincipal();}},"['@', 'Override', 'public', 'java', '.', 'security', '.', 'Principal', 'getPrincipal', '(', ')', '{', 'if', '(', 'UUID', '!=', 'null', ')', '{', 'return', 'new', 'OATHPrincipal', '(', 'UUID', ')', ';', '}', 'if', '(', 'userName', '!=', 'null', ')', '{', 'return', 'new', 'OATHPrincipal', '(', 'userName', ')', ';', '}', 'return', 'null', ';', '}']","['java', '.', 'security', '.', 'Principal', 'getPrincipal', '(', ')', '{', 'if', '(', 'null', ')', '{', '(', 'UUID', ')', ';', '}', 'if', '(', 'userName', '=', 'null', ')', '{', 'return', 'new', 'OATHPrincipal', '(', ')', ';', '}', '}']",46,34,6,188,103,18,50.0,30.0,,,,-1,-1,-1,-1,False
L14_testSingeItem_1.txt,code2vec,METHOD_NAME,token_wrong,0.8598,0.3039,16.1617,15.8092,"{'n_total': 531, 'n_valid': 58, 'n_correct': 40}",172.439951,"public void testSingeItem() { Collection c = Arrays.asList(new String[] { ""test"" }); try { formatter.format(writer, emptyLinkable, """", c, """", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(""Single item is rendered"", ""<div class=\""list\""><div class=\""list-title\""></div><blockquote>test</blockquote></div>"", writer.toString()); }","void testSingeItem(){(new String[]{""""});try{formatter(writer);}catch(IOException e){error(getMessage(),e);}assertEquals(""item"",writer);}","['public', 'void', 'testSingeItem', '(', ')', '{', 'Collection', 'c', '=', 'Arrays', '.', 'asList', '(', 'new', 'String', '[', ']', '{', '""test""', '}', ')', ';', 'try', '{', 'formatter', '.', 'format', '(', 'writer', ',', 'emptyLinkable', ',', '""""', ',', 'c', ',', '""""', ',', 'false', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', 'assertEquals', '(', '""Single item is rendered""', ',', '""<div class=\\""list\\""><div class=\\""list-title\\""></div><blockquote>test</blockquote></div>""', ',', 'writer', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'testSingeItem', '(', ')', '{', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'try', '{', 'formatter', '(', 'writer', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'error', '(', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', 'assertEquals', '(', '""item""', ',', 'writer', ')', ';', '}']",76,47,6,360,136,19,65.6891495601173,41.42857142857143,,,,-1,-1,-1,-1,False
L15_setUp_1.txt,code2vec,METHOD_NAME,token_wrong,0.6402,0.6993,1.1635,2.2707,"{'n_total': 320, 'n_valid': 36, 'n_correct': 30}",103.699344,"@Before public void setUp() { codec = new BaseNCodec(0, 0, 0, 0) { @Override protected boolean isInAlphabet(final byte b) { return b == 'O' || b == 'K'; } @Override void encode(final byte[] pArray, final int i, final int length, final Context context) { } @Override void decode(final byte[] pArray, final int i, final int length, final Context context) { } }; }","@Before void setUp(){codec=new BaseNCodec(){decode(byte pArray,int i,int context){}};}","['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'codec', '=', 'new', 'BaseNCodec', '(', '0', ',', '0', ',', '0', ',', '0', ')', '{', '@', 'Override', 'protected', 'boolean', 'isInAlphabet', '(', 'final', 'byte', 'b', ')', '{', 'return', 'b', '==', ""'O'"", '||', 'b', '==', ""'K'"", ';', '}', '@', 'Override', 'void', 'encode', '(', 'final', 'byte', '[', ']', 'pArray', ',', 'final', 'int', 'i', ',', 'final', 'int', 'length', ',', 'final', 'Context', 'context', ')', '{', '}', '@', 'Override', 'void', 'decode', '(', 'final', 'byte', '[', ']', 'pArray', ',', 'final', 'int', 'i', ',', 'final', 'int', 'length', ',', 'final', 'Context', 'context', ')', '{', '}', '}', ';', '}']","['@', 'Before', 'void', 'setUp', '(', ')', '{', 'codec', '=', 'new', 'BaseNCodec', '(', ')', '{', 'decode', '(', 'byte', 'pArray', ',', 'int', 'i', ',', 'int', 'context', ')', '{', '}', '}', ';', '}']",96,30,6,361,86,11,78.57142857142857,73.33333333333333,,,,-1,-1,-1,-1,False
L16_setSentId_1.txt,code2vec,METHOD_NAME,token_wrong,0.2034,0.1887,14.6692,15.0605,"{'n_total': 397, 'n_valid': 54, 'n_correct': 25}",153.78809,"public void setSentId(int addr, int v) { if (featOkTst && casFeat_sentId == null) jcas.throwFeatMissing(""sentId"", ""de.unihd.dbs.uima.types.heideltime.Event""); ll_cas.ll_setIntValue(addr, casFeatCode_sentId, v); }","void setSentId(int addr,int v){if(featOkTst&&sentId==null)jcas.throwFeatMissing(""sentId"",""unihd"");cassetIntValue(addr,v);}","['public', 'void', 'setSentId', '(', 'int', 'addr', ',', 'int', 'v', ')', '{', 'if', '(', 'featOkTst', '&&', 'casFeat_sentId', '==', 'null', ')', 'jcas', '.', 'throwFeatMissing', '(', '""sentId""', ',', '""de.unihd.dbs.uima.types.heideltime.Event""', ')', ';', 'll_cas', '.', 'll_setIntValue', '(', 'addr', ',', 'casFeatCode_sentId', ',', 'v', ')', ';', '}']","['void', 'setSentId', '(', 'int', 'addr', ',', 'int', 'v', ')', '{', 'if', '(', 'featOkTst', '&&', 'sentId', '==', 'null', ')', 'jcas', '.', 'throwFeatMissing', '(', '""sentId""', ',', '""unihd""', ')', ';', 'cassetIntValue', '(', 'addr', ',', 'v', ')', ';', '}']",40,35,6,212,122,15,45.68527918781726,14.705882352941178,,,,-1,-1,-1,-1,False
L17_saveCurrentFeature_1.txt,code2vec,METHOD_NAME,token_wrong,0.1601,0.2012,14.3436,14.3125,"{'n_total': 392, 'n_valid': 73, 'n_correct': 29}",209.70102,"protected void saveCurrentFeature() { mCurrentKmlFeature.mName = eHeader.getText().toString(); mCurrentKmlFeature.mDescription = eDescription.getText().toString(); Object item = sStyleSpinner.getSelectedItem(); if (item != null && !"""".equals(item.toString())) mCurrentKmlFeature.mStyle = item.toString(); else mCurrentKmlFeature.mStyle = null; }",void saveCurrentFeature(){getText().toString();mCurrentKmlFeature.mDescription=eDescription.getTexttoString();if(item!=nullequals(toString()));else mCurrentKmlFeature.mStyle=null;},"['protected', 'void', 'saveCurrentFeature', '(', ')', '{', 'mCurrentKmlFeature', '.', 'mName', '=', 'eHeader', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', 'mCurrentKmlFeature', '.', 'mDescription', '=', 'eDescription', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', 'Object', 'item', '=', 'sStyleSpinner', '.', 'getSelectedItem', '(', ')', ';', 'if', '(', 'item', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'item', '.', 'toString', '(', ')', ')', ')', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'item', '.', 'toString', '(', ')', ';', 'else', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'null', ';', '}']","['void', 'saveCurrentFeature', '(', ')', '{', 'getText', '(', ')', '.', 'toString', '(', ')', ';', 'mCurrentKmlFeature', '.', 'mDescription', '=', 'eDescription', '.', 'getTexttoString', '(', ')', ';', 'if', '(', 'item', '!=', 'nullequals', '(', 'toString', '(', ')', ')', ')', ';', 'else', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'null', ';', '}']",79,43,6,345,180,24,51.4018691588785,49.31506849315068,,,,-1,-1,-1,-1,False
L18_commit_1.txt,code2vec,METHOD_NAME,token_wrong,0.8156,0.5714,9.1483,4.9585,"{'n_total': 246, 'n_valid': 29, 'n_correct': 26}",85.994207,"@Override public boolean commit() throws LoginException { switch(state) { case COMMIT_COMPLETE: return true; case INITIALIZE_COMPLETE: logout0(); return false; case LOGIN_COMPLETE: commit0(); return true; case INITIALIZE_REQUIRED: default: throw new LoginException(""Login module is not initialized""); } }","boolean commit()throws LoginException{switch(state){case COMPLETE:("""");}}","['@', 'Override', 'public', 'boolean', 'commit', '(', ')', 'throws', 'LoginException', '{', 'switch', '(', 'state', ')', '{', 'case', 'COMMIT_COMPLETE', ':', 'return', 'true', ';', 'case', 'INITIALIZE_COMPLETE', ':', 'logout0', '(', ')', ';', 'return', 'false', ';', 'case', 'LOGIN_COMPLETE', ':', 'commit0', '(', ')', ';', 'return', 'true', ';', 'case', 'INITIALIZE_REQUIRED', ':', 'default', ':', 'throw', 'new', 'LoginException', '(', '""Login module is not initialized""', ')', ';', '}', '}']","['boolean', 'commit', '(', ')', 'throws', 'LoginException', '{', 'switch', '(', 'state', ')', '{', 'case', 'COMPLETE', ':', '(', '""""', ')', ';', '}', '}']",55,21,6,304,73,12,79.1095890410959,69.38775510204081,,,,-1,-1,-1,-1,False
L19_disableFollowDataConnection_1.txt,code2vec,METHOD_NAME,token_wrong,0.8249,0.5324,24.3667,22.9339,"{'n_total': 135, 'n_valid': 17, 'n_correct': 12}",48.083252,public void disableFollowDataConnection() { if (followDataConn != null) { followDataConn.disconnect(); } },void disableFollowDataConnection(){if(followDataConn){followDataConn.disconnect();}},"['public', 'void', 'disableFollowDataConnection', '(', ')', '{', 'if', '(', 'followDataConn', '!=', 'null', ')', '{', 'followDataConn', '.', 'disconnect', '(', ')', ';', '}', '}']","['void', 'disableFollowDataConnection', '(', ')', '{', 'if', '(', 'followDataConn', ')', '{', 'followDataConn', '.', 'disconnect', '(', ')', ';', '}', '}']",21,18,6,106,84,33,30.136986301369863,20.0,,,,-1,-1,-1,-1,False
L20_isNeighbor_1.txt,code2vec,METHOD_NAME,token_wrong,0.8878,0.4213,13.1138,16.1901,"{'n_total': 284, 'n_valid': 37, 'n_correct': 21}",107.761288,"@Override public boolean isNeighbor(V v1, V v2) { if (!containsVertex(v1) || !containsVertex(v2)) return false; return getNeighbors(v1).contains(v2); }","boolean isNeighbor(V v,V v){if((2))return getNeighbors.contains(2);}","['@', 'Override', 'public', 'boolean', 'isNeighbor', '(', 'V', 'v1', ',', 'V', 'v2', ')', '{', 'if', '(', '!', 'containsVertex', '(', 'v1', ')', '||', '!', 'containsVertex', '(', 'v2', ')', ')', 'return', 'false', ';', 'return', 'getNeighbors', '(', 'v1', ')', '.', 'contains', '(', 'v2', ')', ';', '}']","['boolean', 'isNeighbor', '(', 'V', 'v', ',', 'V', 'v', ')', '{', 'if', '(', '(', '2', ')', ')', 'return', 'getNeighbors', '.', 'contains', '(', '2', ')', ';', '}']",42,25,6,151,68,16,61.48148148148148,47.22222222222222,,,,-1,-1,-1,-1,False
L21_addPortcomponent_1.txt,code2vec,METHOD_NAME,token_wrong,0.6321,0.5505,18.133,18.0261,"{'n_total': 238, 'n_valid': 22, 'n_correct': 19}",68.76029,"public void addPortcomponent(String serviceendpoint, String portlink) { if (portlink == null) portlink = """"; this.setProperty(serviceendpoint, portlink); }","void addPortcomponent(String serviceendpoint,String portlink){if(null)portlink="""";(serviceendpoint);}","['public', 'void', 'addPortcomponent', '(', 'String', 'serviceendpoint', ',', 'String', 'portlink', ')', '{', 'if', '(', 'portlink', '==', 'null', ')', 'portlink', '=', '""""', ';', 'this', '.', 'setProperty', '(', 'serviceendpoint', ',', 'portlink', ')', ';', '}']","['void', 'addPortcomponent', '(', 'String', 'serviceendpoint', ',', 'String', 'portlink', ')', '{', 'if', '(', 'null', ')', 'portlink', '=', '""""', ';', '(', 'serviceendpoint', ')', ';', '}']",31,23,6,155,101,22,40.6015037593985,32.0,,,,-1,-1,-1,-1,False
L22_getduration_1.txt,code2vec,METHOD_NAME,token_wrong,0.2971,0.2081,17.061,17.3911,"{'n_total': 269, 'n_valid': 57, 'n_correct': 16}",158.176551,"public int getduration(long x, int b) { Long l = Long.valueOf(x); int v = l.intValue() / 3600000; return v; }","int getduration(long x,int b){Long l=(x);int v=l.intValue()/3600000;return v;}","['public', 'int', 'getduration', '(', 'long', 'x', ',', 'int', 'b', ')', '{', 'Long', 'l', '=', 'Long', '.', 'valueOf', '(', 'x', ')', ';', 'int', 'v', '=', 'l', '.', 'intValue', '(', ')', '/', '3600000', ';', 'return', 'v', ';', '}']","['int', 'getduration', '(', 'long', 'x', ',', 'int', 'b', ')', '{', 'Long', 'l', '=', '(', 'x', ')', ';', 'int', 'v', '=', 'l', '.', 'intValue', '(', ')', '/', '3600000', ';', 'return', 'v', ';', '}']",36,32,6,109,78,17,33.69565217391305,13.333333333333334,,,,-1,-1,-1,-1,False
L23_coyoteService_1.txt,code2vec,METHOD_NAME,token_wrong,0.9184,0.6975,21.521,23.116,"{'n_total': 342, 'n_valid': 32, 'n_correct': 32}",99.330387,"private void coyoteService(final HttpRequest httpReq, final HttpResponse httpRes) { RequestData rc = new RequestData(); rc.init(httpReq, httpRes); try { adapter.service(rc.req, rc.res); } catch (Exception e) { e.printStackTrace(); } }","void coyoteService(HttpRequest httpReq,HttpResponse httpRes){rc();try{(res);}catch(Exception e){printStackTrace();}}","['private', 'void', 'coyoteService', '(', 'final', 'HttpRequest', 'httpReq', ',', 'final', 'HttpResponse', 'httpRes', ')', '{', 'RequestData', 'rc', '=', 'new', 'RequestData', '(', ')', ';', 'rc', '.', 'init', '(', 'httpReq', ',', 'httpRes', ')', ';', 'try', '{', 'adapter', '.', 'service', '(', 'rc', '.', 'req', ',', 'rc', '.', 'res', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'coyoteService', '(', 'HttpRequest', 'httpReq', ',', 'HttpResponse', 'httpRes', ')', '{', 'rc', '(', ')', ';', 'try', '{', '(', 'res', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",60,33,6,234,116,19,54.88372093023256,50.0,,,,-1,-1,-1,-1,False
L24_absolutePathDoesntWork_1.txt,code2vec,METHOD_NAME,token_wrong,0.1886,0.2443,15.7984,17.3963,"{'n_total': 300, 'n_valid': 44, 'n_correct': 26}",121.348893,"@Test public void absolutePathDoesntWork() throws IOException { File someFile = setFile(""someFolder/someFile"").toContent(""""); File someFolder = someFile.getParentFile(); fileTree.exclude(someFolder.getAbsolutePath()); Assertions.assertThat(fileTree).containsExactlyInAnyOrder(someFile); }","void absolutePathDoesntWork()throws IOException{someFile(""someFile"").toContent("""");File();}","['@', 'Test', 'public', 'void', 'absolutePathDoesntWork', '(', ')', 'throws', 'IOException', '{', 'File', 'someFile', '=', 'setFile', '(', '""someFolder/someFile""', ')', '.', 'toContent', '(', '""""', ')', ';', 'File', 'someFolder', '=', 'someFile', '.', 'getParentFile', '(', ')', ';', 'fileTree', '.', 'exclude', '(', 'someFolder', '.', 'getAbsolutePath', '(', ')', ')', ';', 'Assertions', '.', 'assertThat', '(', 'fileTree', ')', '.', 'containsExactlyInAnyOrder', '(', 'someFile', ')', ';', '}']","['void', 'absolutePathDoesntWork', '(', ')', 'throws', 'IOException', '{', 'someFile', '(', '""someFile""', ')', '.', 'toContent', '(', '""""', ')', ';', 'File', '(', ')', ';', '}']",56,22,6,288,91,28,75.76923076923077,68.0,,,,-1,-1,-1,-1,False
L25_updateMessageBundleProperty_1.txt,code2vec,METHOD_NAME,token_wrong,0.4274,0.6467,17.129,22.5637,"{'n_total': 181, 'n_valid': 16, 'n_correct': 14}",44.482812,"@Override @Transactional public void updateMessageBundleProperty(MessageBundleProperty mbp) { String key = super.getIndexKeyName(mbp.getBaseName(), mbp.getModuleName(), mbp.getLocale()); super.updateMessageBundleProperty(mbp); cache.remove(key); }",void updateMessageBundleProperty(MessageBundleProperty mbp){(getLocale()).remove();},"['@', 'Override', '@', 'Transactional', 'public', 'void', 'updateMessageBundleProperty', '(', 'MessageBundleProperty', 'mbp', ')', '{', 'String', 'key', '=', 'super', '.', 'getIndexKeyName', '(', 'mbp', '.', 'getBaseName', '(', ')', ',', 'mbp', '.', 'getModuleName', '(', ')', ',', 'mbp', '.', 'getLocale', '(', ')', ')', ';', 'super', '.', 'updateMessageBundleProperty', '(', 'mbp', ')', ';', 'cache', '.', 'remove', '(', 'key', ')', ';', '}']","['void', 'updateMessageBundleProperty', '(', 'MessageBundleProperty', 'mbp', ')', '{', '(', 'getLocale', '(', ')', ')', '.', 'remove', '(', ')', ';', '}']",53,18,6,247,84,33,76.16822429906543,74.46808510638297,,,,-1,-1,-1,-1,False
L26_readInt_1.txt,code2vec,METHOD_NAME,token_wrong,0.3274,0.4314,3.015,5.2413,"{'n_total': 349, 'n_valid': 37, 'n_correct': 31}",110.079639,int readInt() { int res = 0; for (int i = 0; i < 4; i++) { int b0 = data[off++] & 0xFF; res = res << 8 | b0; } return res; },int readInt(){for(;i<4;i++){b=data[off++]&0;}},"['int', 'readInt', '(', ')', '{', 'int', 'res', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'int', 'b0', '=', 'data', '[', 'off', '++', ']', '&', '0xFF', ';', 'res', '=', 'res', '<<', '8', '|', 'b0', ';', '}', 'return', 'res', ';', '}']","['int', 'readInt', '(', ')', '{', 'for', '(', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'b', '=', 'data', '[', 'off', '++', ']', '&', '0', ';', '}', '}']",49,28,6,124,46,13,70.27027027027027,48.837209302325576,,,,-1,-1,-1,-1,False
L27_method_1.txt,code2vec,METHOD_NAME,token_wrong,0.9994,0.9996,16.6229,17.5508,"{'n_total': 247, 'n_valid': 22, 'n_correct': 20}",65.305551,"public Reflect method(String name, Class... types) throws ReflectException { try { return on(exactMethod(name, types)); } catch (NoSuchMethodException e) { throw new ReflectException(e); } }",Reflect method(String types)throws ReflectException{try{(exactMethod());}catch(NoSuchMethodException e){(e);}},"['public', 'Reflect', 'method', '(', 'String', 'name', ',', 'Class', '...', 'types', ')', 'throws', 'ReflectException', '{', 'try', '{', 'return', 'on', '(', 'exactMethod', '(', 'name', ',', 'types', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', 'throw', 'new', 'ReflectException', '(', 'e', ')', ';', '}', '}']","['Reflect', 'method', '(', 'String', 'types', ')', 'throws', 'ReflectException', '{', 'try', '{', '(', 'exactMethod', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",43,30,6,190,110,12,44.9438202247191,35.13513513513514,,,,-1,-1,-1,-1,False
L28_createRawValidator_1.txt,code2vec,METHOD_NAME,token_wrong,0.3009,0.1803,16.3376,14.3721,"{'n_total': 5349, 'n_valid': 1788, 'n_correct': 829}",5286.912629,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsr\u0000\u001ccom.s"" + ""un.msv.grammar.MixedExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"" + ""aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.grammar."" + ""ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.OneOrMor"" + ""eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valu"" + ""exp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0013p\u0000sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u00002com.sun.msv.gra"" + ""mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0012\u0001q"" + ""\u0000~\u0000\u0018sr\u0000\'com.sun.msv.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"" + ""\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003nc2q\u0000~\u0000\u0001xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xpsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bs"" + ""r\u0000#com.sun.msv.grammar.ChoiceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001"" + ""L\u0000\u0003nc2q\u0000~\u0000\u0001xq\u0000~\u0000\u001bsr\u0000&com.sun.msv.grammar.NamespaceNameClass\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIt\u0000\u0012Ljava/lang/String;xq\u0000~\u0000\u001bt\u0000\u0000sq\u0000~\u0000"" + ""!t\u0000\""http://www.w3.org/2000/09/xmldsig#sq\u0000~\u0000!t\u0000+http://java.s"" + ""un.com/jaxb/xjc/dummy-elementssr\u00000com.sun.msv.grammar.Expres"" + ""sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0019q\u0000~\u0000*sq\u0000~\u0000\u0015ppsr\u0000"" + ""\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"" + ""datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"" + ""StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.AnyURITy"" + ""pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"" + ""\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"" + ""amespaceUriq\u0000~\u0000\""L\u0000\btypeNameq\u0000~\u0000\""L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"" + ""/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"" + ""1/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"" + ""rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"" + ""teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Express"" + ""ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv."" + ""util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq\u0000"" + ""~\u0000\""xpq\u0000~\u00007q\u0000~\u00006sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001bt\u0000\tAlgorithm"" + ""q\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0015q\u0000~\u0000\u0013psq\u0000~\u0000,ppsr\u0000\""com.sun.msv.datatype.xs"" + ""d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\u0005QNameq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000=q\u0000~"" + ""\u0000Gq\u0000~\u00006sq\u0000~\u0000?t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"" + ""anceq\u0000~\u0000*sq\u0000~\u0000?t\u0000\fDigestMethodq\u0000~\u0000&sr\u0000\""com.sun.msv.grammar.E"" + ""xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"" + ""xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"" + ""nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"" + ""t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\nq\u0000~\u0000\rq\u0000~"" + ""\u0000\tq\u0000~\u0000\u000fq\u0000~\u0000\u0011q\u0000~\u0000Bx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","DocumentDeclaration createRawValidator(){if(schemaFragment){((""\00""+""""+""""+""""+""""+""ava""+""ChoiceExp""+""exp""+""gra""+""""+""""+""""+""""+""""+""""+""ion""+""""+""""+""""+""XMLSchema""+""anceq""+""""+""""+""""+""""+""""));}returnsun.msvregexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsr\x00\x1ccom.s""', '+', '""un.msv.grammar.MixedExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.Un""', '+', '""aryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.grammar.""', '+', '""ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.OneOrMor""', '+', '""eExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\fsr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valu""', '+', '""exp\x00psq\x00~\x00\x00q\x00~\x00\x13p\x00sr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04ppsr\x002com.sun.msv.gra""', '+', '""mmar.Expression$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x12\x01q""', '+', '""\x00~\x00\x18sr\x00\\\'com.sun.msv.grammar.DifferenceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00""', '+', '""\x03nc1q\x00~\x00\x01L\x00\x03nc2q\x00~\x00\x01xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xpsr\x00 com.sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x1bs""', '+', '""r\x00#com.sun.msv.grammar.ChoiceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01""', '+', '""L\x00\x03nc2q\x00~\x00\x01xq\x00~\x00\x1bsr\x00&com.sun.msv.grammar.NamespaceNameClass\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\fnamespaceURIt\x00\x12Ljava/lang/String;xq\x00~\x00\x1bt\x00\x00sq\x00~\x00""', '+', '""!t\x00\\""http://www.w3.org/2000/09/xmldsig#sq\x00~\x00!t\x00+http://java.s""', '+', '""un.com/jaxb/xjc/dummy-elementssr\x000com.sun.msv.grammar.Expres""', '+', '""sion$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x19q\x00~\x00*sq\x00~\x00\x15ppsr\x00""', '+', '""\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/""', '+', '""datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/""', '+', '""StringPair;xq\x00~\x00\x04q\x00~\x00\x13psr\x00#com.sun.msv.datatype.xsd.AnyURITy""', '+', '""pe\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02""', '+', '""\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fn""', '+', '""amespaceUriq\x00~\x00\\""L\x00\\btypeNameq\x00~\x00\\""L\x00\\nwhiteSpacet\x00.Lcom/sun/msv""', '+', '""/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/200""', '+', '""1/XMLSchemat\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.WhiteSpaceP""', '+', '""rocessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.Whi""', '+', '""teSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Express""', '+', '""ion$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x13psr\x00\x1bcom.sun.msv.""', '+', '""util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq\x00""', '+', '""~\x00\\""xpq\x00~\x007q\x00~\x006sr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1bt\x00\\tAlgorithm""', '+', '""q\x00~\x00$sq\x00~\x00\x0eppsq\x00~\x00\x15q\x00~\x00\x13psq\x00~\x00,ppsr\x00\\""com.sun.msv.datatype.xs""', '+', '""d.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x001q\x00~\x006t\x00\x05QNameq\x00~\x00:q\x00~\x00<sq\x00~\x00=q\x00~""', '+', '""\x00Gq\x00~\x006sq\x00~\x00?t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-inst""', '+', '""anceq\x00~\x00*sq\x00~\x00?t\x00\\fDigestMethodq\x00~\x00&sr\x00\\""com.sun.msv.grammar.E""', '+', '""xpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/E""', '+', '""xpressionPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.Expressio""', '+', '""nPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parent""', '+', '""t\x00$Lcom/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x06\x01pq\x00~\x00\\nq\x00~\x00\\rq\x00~""', '+', '""\x00\\tq\x00~\x00\x0fq\x00~\x00\x11q\x00~\x00Bx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""\\00""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""ava""', '+', '""ChoiceExp""', '+', '""exp""', '+', '""gra""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""ion""', '+', '""""', '+', '""""', '+', '""""', '+', '""XMLSchema""', '+', '""anceq""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'returnsun', '.', 'msvregexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",155,77,6,6509,240,24,96.6692367000771,52.348993288590606,,,,-1,-1,-1,-1,False
L29_getNumVectors_1.txt,code2vec,METHOD_NAME,token_wrong,0.9592,0.2717,18.6342,15.9102,"{'n_total': 207, 'n_valid': 22, 'n_correct': 18}",66.208095,public int getNumVectors() { Enumeration<ObjectVector> allVectors = this.getAllVectors(); int i = 0; while (allVectors.hasMoreElements()) { allVectors.nextElement(); ++i; } return i; },int getNumVectors(){Enumeration<ObjectVector>allVectors;while(allVectors.hasMoreElements){nextElement();}},"['public', 'int', 'getNumVectors', '(', ')', '{', 'Enumeration', '<', 'ObjectVector', '>', 'allVectors', '=', 'this', '.', 'getAllVectors', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'allVectors', '.', 'hasMoreElements', '(', ')', ')', '{', 'allVectors', '.', 'nextElement', '(', ')', ';', '++', 'i', ';', '}', 'return', 'i', ';', '}']","['int', 'getNumVectors', '(', ')', '{', 'Enumeration', '<', 'ObjectVector', '>', 'allVectors', ';', 'while', '(', 'allVectors', '.', 'hasMoreElements', ')', '{', 'nextElement', '(', ')', ';', '}', '}']",46,24,6,184,106,19,47.27272727272727,55.00000000000001,,,,-1,-1,-1,-1,False
L30_removeGalleryImage_1.txt,code2vec,METHOD_NAME,token_wrong,0.3106,0.2453,18.0017,18.2914,"{'n_total': 384, 'n_valid': 40, 'n_correct': 32}",121.71674,"@Override public boolean removeGalleryImage(final GalleryImage galleryImage) { try { getHibernateTemplate().delete(galleryImage); return true; } catch (final Exception e) { log.error(""removeGalleryImage failed. "" + e.getClass() + "": "" + e.getMessage()); return false; } }","boolean removeGalleryImage(GalleryImage galleryImage){try{getHibernateTemplate().delete(galleryImage);return true;}catch(Exception e){("""".getClass()+"""".getMessage());}}","['@', 'Override', 'public', 'boolean', 'removeGalleryImage', '(', 'final', 'GalleryImage', 'galleryImage', ')', '{', 'try', '{', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', 'galleryImage', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', '""removeGalleryImage failed. ""', '+', 'e', '.', 'getClass', '(', ')', '+', '"": ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', 'false', ';', '}', '}']","['boolean', 'removeGalleryImage', '(', 'GalleryImage', 'galleryImage', ')', '{', 'try', '{', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', 'galleryImage', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', '.', 'getClass', '(', ')', '+', '""""', '.', 'getMessage', '(', ')', ')', ';', '}', '}']",59,44,6,271,168,24,41.70040485829959,28.30188679245283,,,,-1,-1,-1,-1,False
L31_removeLink_1.txt,code2vec,METHOD_NAME,token_wrong,0.9626,0.9792,8.6367,16.201,"{'n_total': 125, 'n_valid': 18, 'n_correct': 14}",50.235652,public void removeLink(Link link) { if (link == null) { throw new IllegalArgumentException(NULL_ARG); } getHibernateTemplate().delete(link); },void removeLink(){if(null)delete(link);},"['public', 'void', 'removeLink', '(', 'Link', 'link', ')', '{', 'if', '(', 'link', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'NULL_ARG', ')', ';', '}', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', 'link', ')', ';', '}']","['void', 'removeLink', '(', ')', '{', 'if', '(', 'null', ')', 'delete', '(', 'link', ')', ';', '}']",33,15,6,142,40,16,80.95238095238095,66.66666666666666,,,,-1,-1,-1,-1,False
L32_generateMessageHandle_1.txt,code2vec,METHOD_NAME,token_wrong,0.2279,0.5596,17.326,20.2122,"{'n_total': 299, 'n_valid': 48, 'n_correct': 23}",140.887082,public static String generateMessageHandle() { if (random == null) { return null; } byte[] bytes = new byte[SAML2Constants.ID_LENGTH]; random.nextBytes(bytes); return byteArrayToString(bytes); },String generateMessageHandle(){if(random==null){}byte[]bytes=new byte[2];nextBytes();(bytes);},"['public', 'static', 'String', 'generateMessageHandle', '(', ')', '{', 'if', '(', 'random', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', 'SAML2Constants', '.', 'ID_LENGTH', ']', ';', 'random', '.', 'nextBytes', '(', 'bytes', ')', ';', 'return', 'byteArrayToString', '(', 'bytes', ')', ';', '}']","['String', 'generateMessageHandle', '(', ')', '{', 'if', '(', 'random', '==', 'null', ')', '{', '}', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', '2', ']', ';', 'nextBytes', '(', ')', ';', '(', 'bytes', ')', ';', '}']",45,33,6,194,94,27,59.88023952095808,30.76923076923077,,,,-1,-1,-1,-1,False
L33_deleteSet_1.txt,code2vec,METHOD_NAME,token_wrong,0.6727,0.529,5.1489,2.1059,"{'n_total': 316, 'n_valid': 30, 'n_correct': 25}",86.362746,"public void deleteSet(Set s) { try { PersistenceService.getInstance().getItemFacadeQueries().deleteSet(s); } catch (Exception e) { log.error(e.getMessage(), e); throw new RuntimeException(e); } }","void deleteSet(Set s){try{PersistenceService.deleteSet();}catch(Exception e){log(e(),e);(e);}}","['public', 'void', 'deleteSet', '(', 'Set', 's', ')', '{', 'try', '{', 'PersistenceService', '.', 'getInstance', '(', ')', '.', 'getItemFacadeQueries', '(', ')', '.', 'deleteSet', '(', 's', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['void', 'deleteSet', '(', 'Set', 's', ')', '{', 'try', '{', 'PersistenceService', '.', 'deleteSet', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '(', 'e', '(', ')', ',', 'e', ')', ';', '(', 'e', ')', ';', '}', '}']",54,37,6,195,94,15,56.111111111111114,35.41666666666667,,,,-1,-1,-1,-1,False
L34_put_1.txt,code2vec,METHOD_NAME,token_wrong,0.2268,0.1659,6.1695,7.7631,"{'n_total': 390, 'n_valid': 49, 'n_correct': 24}",138.778089,"void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }","void put(String key,String value){keyValueMap.put();if(1){keyValueList.add(KeyValue());keyValueList.add(new KeyValue());}}","['void', 'put', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'keyValueMap', '.', 'put', '(', 'key', ',', 'value', ')', ';', 'int', 'index', '=', 'removeFromList', '(', 'key', ')', ';', 'if', '(', 'index', '!=', '-', '1', ')', '{', 'keyValueList', '.', 'add', '(', 'index', ',', 'new', 'KeyValue', '(', 'key', ',', 'value', ')', ')', ';', '}', 'else', '{', 'keyValueList', '.', 'add', '(', 'new', 'KeyValue', '(', 'key', ',', 'value', ')', ')', ';', '}', '}']","['void', 'put', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'keyValueMap', '.', 'put', '(', ')', ';', 'if', '(', '1', ')', '{', 'keyValueList', '.', 'add', '(', 'KeyValue', '(', ')', ')', ';', 'keyValueList', '.', 'add', '(', 'new', 'KeyValue', '(', ')', ')', ';', '}', '}']",68,42,6,225,122,9,47.68518518518518,41.935483870967744,,,,-1,-1,-1,-1,False
L35_createInvalidateSessionButton_1.txt,code2vec,METHOD_NAME,token_wrong,0.1964,0.1962,16.0792,16.0763,"{'n_total': 892, 'n_valid': 144, 'n_correct': 47}",410.983847,"private MButton createInvalidateSessionButton() { final MButton invalidateSessionButton = new MButton(getString(""invalidate_session""), INVALIDATE_SESSION_ICON); invalidateSessionButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { final SessionInformations sessionInformations = getTable().getSelectedObject(); if (sessionInformations != null && confirm(getFormattedString(""confirm_invalidate_session""))) { actionInvalidateSession(sessionInformations); } } }); return invalidateSessionButton; }","MButton createInvalidateSessionButton(){invalidateSessionButton((""""),ICON);addActionListener(new ActionListener(){void actionPerformed(ActionEvent e){SessionInformations sessionInformations=getTable().getSelectedObject();if(null&&confirm((""""))){actionInvalidateSession();}}});return invalidateSessionButton;}","['private', 'MButton', 'createInvalidateSessionButton', '(', ')', '{', 'final', 'MButton', 'invalidateSessionButton', '=', 'new', 'MButton', '(', 'getString', '(', '""invalidate_session""', ')', ',', 'INVALIDATE_SESSION_ICON', ')', ';', 'invalidateSessionButton', '.', 'addActionListener', '(', 'new', 'ActionListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'final', 'SessionInformations', 'sessionInformations', '=', 'getTable', '(', ')', '.', 'getSelectedObject', '(', ')', ';', 'if', '(', 'sessionInformations', '!=', 'null', '&&', 'confirm', '(', 'getFormattedString', '(', '""confirm_invalidate_session""', ')', ')', ')', '{', 'actionInvalidateSession', '(', 'sessionInformations', ')', ';', '}', '}', '}', ')', ';', 'return', 'invalidateSessionButton', ';', '}']","['MButton', 'createInvalidateSessionButton', '(', ')', '{', 'invalidateSessionButton', '(', '(', '""""', ')', ',', 'ICON', ')', ';', 'addActionListener', '(', 'new', 'ActionListener', '(', ')', '{', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'SessionInformations', 'sessionInformations', '=', 'getTable', '(', ')', '.', 'getSelectedObject', '(', ')', ';', 'if', '(', 'null', '&&', 'confirm', '(', '(', '""""', ')', ')', ')', '{', 'actionInvalidateSession', '(', ')', ';', '}', '}', '}', ')', ';', 'return', 'invalidateSessionButton', ';', '}']",81,64,6,544,308,35,46.36542239685658,22.666666666666664,,,,-1,-1,-1,-1,False
L36_writeToResponse_1.txt,code2vec,METHOD_NAME,token_wrong,0.4539,0.3647,13.6062,12.7109,"{'n_total': 296, 'n_valid': 35, 'n_correct': 23}",102.784325,protected void writeToResponse(String text) { try { getContext().getResponse().getWriter().write(text); this.rendering = true; } catch (IOException e) { throw new RuntimeException(e); } },void writeToResponse(String text){try{getContext.getWriter(text);this.rendering=true;}catch(IOException e){(e);}},"['protected', 'void', 'writeToResponse', '(', 'String', 'text', ')', '{', 'try', '{', 'getContext', '(', ')', '.', 'getResponse', '(', ')', '.', 'getWriter', '(', ')', '.', 'write', '(', 'text', ')', ';', 'this', '.', 'rendering', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['void', 'writeToResponse', '(', 'String', 'text', ')', '{', 'try', '{', 'getContext', '.', 'getWriter', '(', 'text', ')', ';', 'this', '.', 'rendering', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",49,35,6,187,113,21,44.57831325301205,32.55813953488372,,,,-1,-1,-1,-1,False
L37_getModules_1.txt,code2vec,METHOD_NAME,token_wrong,0.5327,0.6322,15.9806,8.8454,"{'n_total': 181, 'n_valid': 25, 'n_correct': 20}",75.426993,public synchronized List<ModuleDescriptor> getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; },List getModules(){if(moduleDescriptors==null){moduleDescriptors();}},"['public', 'synchronized', 'List', '<', 'ModuleDescriptor', '>', 'getModules', '(', ')', '{', 'if', '(', 'moduleDescriptors', '==', 'null', ')', '{', 'this', '.', 'moduleDescriptors', '=', 'createModuleDescriptor', '(', ')', ';', '}', 'return', 'moduleDescriptors', ';', '}']","['List', 'getModules', '(', ')', '{', 'if', '(', 'moduleDescriptors', '==', 'null', ')', '{', 'moduleDescriptors', '(', ')', ';', '}', '}']",30,18,6,171,68,16,66.45161290322581,50.0,,,,-1,-1,-1,-1,False
L38_repeatWarning_1.txt,code2vec,METHOD_NAME,token_wrong,0.863,0.6504,19.9263,19.0306,"{'n_total': 124, 'n_valid': 14, 'n_correct': 12}",38.873181,"public void repeatWarning() { if (errorId == null || errorId.length() == 0 || errorId.equals(warningParser.getDefaultWarning())) return; handler.removeCallbacks(watchdogCallback); this.handler.postDelayed(watchdogCallback, ERROR_TIMEOUT); }",void repeatWarning(){(null);(TIMEOUT);},"['public', 'void', 'repeatWarning', '(', ')', '{', 'if', '(', 'errorId', '==', 'null', '||', 'errorId', '.', 'length', '(', ')', '==', '0', '||', 'errorId', '.', 'equals', '(', 'warningParser', '.', 'getDefaultWarning', '(', ')', ')', ')', 'return', ';', 'handler', '.', 'removeCallbacks', '(', 'watchdogCallback', ')', ';', 'this', '.', 'handler', '.', 'postDelayed', '(', 'watchdogCallback', ',', 'ERROR_TIMEOUT', ')', ';', '}']","['void', 'repeatWarning', '(', ')', '{', '(', 'null', ')', ';', '(', 'TIMEOUT', ')', ';', '}']",52,14,6,240,39,19,90.9502262443439,82.6086956521739,,,,-1,-1,-1,-1,False
L39_write_1.txt,code2vec,METHOD_NAME,token_wrong,0.3576,0.3469,2.8341,2.3656,"{'n_total': 165, 'n_valid': 18, 'n_correct': 10}",49.64289,"@Override protected void write(IndexedJournal value, ByteBuffer buffer) { buffer.putInt(value.getIndex()); buffer.putLong(value.getJournal().getTxn()); buffer.putLong(value.getJournal().getTxPin()); }","void write(IndexedJournal value,ByteBuffer buffer){buffer.putLong(value.getJournal());}","['@', 'Override', 'protected', 'void', 'write', '(', 'IndexedJournal', 'value', ',', 'ByteBuffer', 'buffer', ')', '{', 'buffer', '.', 'putInt', '(', 'value', '.', 'getIndex', '(', ')', ')', ';', 'buffer', '.', 'putLong', '(', 'value', '.', 'getJournal', '(', ')', '.', 'getTxn', '(', ')', ')', ';', 'buffer', '.', 'putLong', '(', 'value', '.', 'getJournal', '(', ')', '.', 'getTxPin', '(', ')', ')', ';', '}']","['void', 'write', '(', 'IndexedJournal', 'value', ',', 'ByteBuffer', 'buffer', ')', '{', 'buffer', '.', 'putLong', '(', 'value', '.', 'getJournal', '(', ')', ')', ';', '}']",55,22,6,200,87,11,59.78835978835979,67.3469387755102,,,,-1,-1,-1,-1,False
L40_attributeAsClass_1.txt,code2vec,METHOD_NAME,token_wrong,0.4303,0.4987,16.6923,15.8114,"{'n_total': 113, 'n_valid': 12, 'n_correct': 10}",34.329703,public void attributeAsClass() { if (!isPanelSelected()) { return; } getCurrentPanel().attributeAsClass(); },void attributeAsClass(){{}getCurrentPanel().attributeAsClass();},"['public', 'void', 'attributeAsClass', '(', ')', '{', 'if', '(', '!', 'isPanelSelected', '(', ')', ')', '{', 'return', ';', '}', 'getCurrentPanel', '(', ')', '.', 'attributeAsClass', '(', ')', ';', '}']","['void', 'attributeAsClass', '(', ')', '{', '{', '}', 'getCurrentPanel', '(', ')', '.', 'attributeAsClass', '(', ')', ';', '}']",26,16,6,108,64,22,51.162790697674424,50.0,,,,-1,-1,-1,-1,False
L41_getOpcodeByValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.9024,0.9752,21.7995,23.9326,"{'n_total': 249, 'n_valid': 30, 'n_correct': 30}",85.91745,public Opcode getOpcodeByValue(int opcodeValue) { switch(opcodeValue) { case 0x100: return Opcode.PACKED_SWITCH_PAYLOAD; case 0x200: return Opcode.SPARSE_SWITCH_PAYLOAD; case 0x300: return Opcode.ARRAY_PAYLOAD; default: if (opcodeValue >= 0 && opcodeValue < opcodesByValue.length) { return opcodesByValue[opcodeValue]; } return null; } },Opcode getOpcodeByValue(int opcodeValue){switch(opcodeValue){case 0:default:if(opcodeValue){}}},"['public', 'Opcode', 'getOpcodeByValue', '(', 'int', 'opcodeValue', ')', '{', 'switch', '(', 'opcodeValue', ')', '{', 'case', '0x100', ':', 'return', 'Opcode', '.', 'PACKED_SWITCH_PAYLOAD', ';', 'case', '0x200', ':', 'return', 'Opcode', '.', 'SPARSE_SWITCH_PAYLOAD', ';', 'case', '0x300', ':', 'return', 'Opcode', '.', 'ARRAY_PAYLOAD', ';', 'default', ':', 'if', '(', 'opcodeValue', '>=', '0', '&&', 'opcodeValue', '<', 'opcodesByValue', '.', 'length', ')', '{', 'return', 'opcodesByValue', '[', 'opcodeValue', ']', ';', '}', 'return', 'null', ';', '}', '}']","['Opcode', 'getOpcodeByValue', '(', 'int', 'opcodeValue', ')', '{', 'switch', '(', 'opcodeValue', ')', '{', 'case', '0', ':', 'default', ':', 'if', '(', 'opcodeValue', ')', '{', '}', '}', '}']",64,25,6,337,95,22,76.82539682539684,67.24137931034483,,,,-1,-1,-1,-1,False
L42_cosDistance_1.txt,code2vec,METHOD_NAME,token_wrong,0.661,0.5269,20.1205,19.2657,"{'n_total': 454, 'n_valid': 46, 'n_correct': 41}",136.769311,"float cosDistance(Vector v1, Vector v2) { float sum = 0; for (int i = 0; i < v1.data.length; i++) { sum += (v1.data[i] * v2.data[i]); } return sum / (cMap.get(v1.wordIndex) * cMap.get(v1.wordIndex)); }",float cosDistance(Vector v){for(;;){(1[i]*2[i]);}return sum/((wordIndex));},"['float', 'cosDistance', '(', 'Vector', 'v1', ',', 'Vector', 'v2', ')', '{', 'float', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'v1', '.', 'data', '.', 'length', ';', 'i', '++', ')', '{', 'sum', '+=', '(', 'v1', '.', 'data', '[', 'i', ']', '*', 'v2', '.', 'data', '[', 'i', ']', ')', ';', '}', 'return', 'sum', '/', '(', 'cMap', '.', 'get', '(', 'v1', '.', 'wordIndex', ')', '*', 'cMap', '.', 'get', '(', 'v1', '.', 'wordIndex', ')', ')', ';', '}']","['float', 'cosDistance', '(', 'Vector', 'v', ')', '{', 'for', '(', ';', ';', ')', '{', '(', '1', '[', 'i', ']', '*', '2', '[', 'i', ']', ')', ';', '}', 'return', 'sum', '/', '(', '(', 'wordIndex', ')', ')', ';', '}']",77,36,6,201,75,17,68.47826086956522,57.74647887323944,,,,-1,-1,-1,-1,False
L43_digammaDifference_1.txt,code2vec,METHOD_NAME,token_wrong,0.6111,0.6514,23.4244,23.2186,"{'n_total': 267, 'n_valid': 34, 'n_correct': 30}",99.592265,"public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }",double digammaDifference(double n){for(;;){sum();}},"['public', 'static', 'double', 'digammaDifference', '(', 'double', 'x', ',', 'int', 'n', ')', '{', 'double', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'sum', '+=', '1', '/', '(', 'x', '+', 'i', ')', ';', '}', 'return', 'sum', ';', '}']","['double', 'digammaDifference', '(', 'double', 'n', ')', '{', 'for', '(', ';', ';', ')', '{', 'sum', '(', ')', ';', '}', '}']",47,19,6,139,51,23,75.86206896551724,68.29268292682927,,,,-1,-1,-1,-1,False
L44_createRawValidator_2.txt,code2vec,METHOD_NAME,token_wrong,0.2615,0.1456,15.6023,15.6378,"{'n_total': 2002, 'n_valid': 479, 'n_correct': 235}",1317.321532,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000 com.sun.msv.g"" + ""rammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryE"" + ""xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.grammar.Choi"" + ""ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\nsr\u0000\u0011java.lang"" + "".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.Attri"" + ""buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr"" + ""\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"" + ""m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"" + ""~\u0000\u0004q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~"" + ""\u0000\u001at\u0000:com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryElem"" + ""entt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000pp\u0000sq"" + ""\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\nq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"" + ""\u0000\u001dsq\u0000~\u0000\u001et\u00007com.sun.identity.liberty.ws.common.jaxb.ps.IDPEnt"" + ""ryTypeq\u0000~\u0000\""sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.grammar.DataE"" + ""xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"" + ""tq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000"" + ""\""com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.ms"" + ""v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"" + ""atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."" + ""xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeName"" + ""q\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"" + ""cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com."" + ""sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"" + ""xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"" + ""psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"" + ""\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00008q\u0000~\u00007sq\u0000~\u0000\u001et\u0000\u0004type"" + ""t\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\bID"" + ""PEntryt\u0000\u0017urn:liberty:iff:2003-08sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u00000q\u0000~"" + ""\u0000@q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nIDPEntriesq\u0000~\u0000Esr\u0000\""com.sun.msv.grammar.Expre"" + ""ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"" + ""ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"" + ""l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"" + ""com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\n\u0001pq\u0000~\u0000\fq\u0000~\u0000\u0011q\u0000~\u0000\'q\u0000"" + ""~\u0000\u0010q\u0000~\u0000&q\u0000~\u0000$q\u0000~\u0000\tq\u0000~\u0000+q\u0000~\u0000Fq\u0000~\u0000\u000ex"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","DocumentDeclaration createRawValidator(){if(schemaFragment){((""""+"".""+""""+""Lcom""+""0""+""0""+""mmar""+""""+""""+""xp""+""""+""""+""""+""\00""+""ssionPool""+""""+""""+""""+""ex""));}return newsun.msvregexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00 com.sun.msv.g""', '+', '""rammar.OneOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryE""', '+', '""xp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.grammar.Choi""', '+', '""ceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsq\x00~\x00\x00pp\x00sq\x00~\x00\\rppsq\x00~\x00\\nsr\x00\x11java.lang""', '+', '"".BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00 com.sun.msv.grammar.Attri""', '+', '""buteExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x13psr""', '+', '""\x002com.sun.msv.grammar.Expression$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x12\x01q\x00~\x00\x17sr\x00 com.sun.msv.grammar.AnyNameClass\x00\x00\x00""', '+', '""\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000co""', '+', '""m.sun.msv.grammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00""', '+', '""~\x00\x04q\x00~\x00\x18q\x00~\x00\x1dsr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang/String;L\x00\\fnamespaceURIq\x00~\x00\x1fxq\x00~""', '+', '""\x00\x1at\x00:com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryElem""', '+', '""entt\x00+http://java.sun.com/jaxb/xjc/dummy-elementssq\x00~\x00\x00pp\x00sq""', '+', '""\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\rppsq\x00~\x00\\nq\x00~\x00\x13psq\x00~\x00\x14q\x00~\x00\x13pq\x00~\x00\x17q\x00~\x00\x1bq\x00~""', '+', '""\x00\x1dsq\x00~\x00\x1et\x007com.sun.identity.liberty.ws.common.jaxb.ps.IDPEnt""', '+', '""ryTypeq\x00~\x00\\""sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x13psr\x00\x1bcom.sun.msv.grammar.DataE""', '+', '""xp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06excep""', '+', '""tq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04q\x00~\x00\x13psr\x00""', '+', '""\\""com.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.ms""', '+', '""v.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.d""', '+', '""atatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.""', '+', '""xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUriq\x00~\x00\x1fL\x00\\btypeName""', '+', '""q\x00~\x00\x1fL\x00\\nwhiteSpacet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpacePro""', '+', '""cessor;xpt\x00 http://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.""', '+', '""sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00""', '+', '""xr\x00,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00x""', '+', '""psr\x000com.sun.msv.grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x13psr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00""', '+', '""\\tlocalNameq\x00~\x00\x1fL\x00\\fnamespaceURIq\x00~\x00\x1fxpq\x00~\x008q\x00~\x007sq\x00~\x00\x1et\x00\x04type""', '+', '""t\x00)http://www.w3.org/2001/XMLSchema-instanceq\x00~\x00\x1dsq\x00~\x00\x1et\x00\\bID""', '+', '""PEntryt\x00\x17urn:liberty:iff:2003-08sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x13pq\x00~\x000q\x00~""', '+', '""\x00@q\x00~\x00\x1dsq\x00~\x00\x1et\x00\\nIDPEntriesq\x00~\x00Esr\x00\\""com.sun.msv.grammar.Expre""', '+', '""ssionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/Expre""', '+', '""ssionPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.ExpressionPoo""', '+', '""l$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$L""', '+', '""com/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\\n\x01pq\x00~\x00\\fq\x00~\x00\x11q\x00~\x00\\\'q\x00""', '+', '""~\x00\x10q\x00~\x00&q\x00~\x00$q\x00~\x00\\tq\x00~\x00+q\x00~\x00Fq\x00~\x00\x0ex""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '"".""', '+', '""""', '+', '""Lcom""', '+', '""0""', '+', '""0""', '+', '""mmar""', '+', '""""', '+', '""""', '+', '""xp""', '+', '""""', '+', '""""', '+', '""""', '+', '""\\00""', '+', '""ssionPool""', '+', '""""', '+', '""""', '+', '""""', '+', '""ex""', ')', ')', ';', '}', 'return', 'newsun', '.', 'msvregexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",149,64,6,6088,212,24,96.89973614775725,59.44055944055944,,,,-1,-1,-1,-1,False
L45_filterSignupMeetings_1.txt,code2vec,METHOD_NAME,token_wrong,0.7266,0.4137,19.5326,15.9003,"{'n_total': 202, 'n_valid': 26, 'n_correct': 19}",76.185106,public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); },void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){(sMeetingWrps);if(VIEWIMMEDIATE())getImmediateAvailOnes();},"['public', 'void', 'filterSignupMeetings', '(', 'List', '<', 'SignupMeetingWrapper', '>', 'sMeetingWrps', ')', '{', 'if', '(', 'VIEW_MY_SIGNED_UP', '.', 'equals', '(', 'filterChoice', ')', ')', 'getMySignedUpOnes', '(', 'sMeetingWrps', ')', ';', 'else', 'if', '(', 'VIEW_IMMEDIATE_AVAIL', '.', 'equals', '(', 'filterChoice', ')', ')', 'getImmediateAvailOnes', '(', 'sMeetingWrps', ')', ';', '}']","['void', 'filterSignupMeetings', '(', 'List', '<', 'SignupMeetingWrapper', '>', 'sMeetingWrps', ')', '{', '(', 'sMeetingWrps', ')', ';', 'if', '(', 'VIEWIMMEDIATE', '(', ')', ')', 'getImmediateAvailOnes', '(', ')', ';', '}']",41,25,6,243,125,26,54.377880184331794,45.714285714285715,,,,-1,-1,-1,-1,False
L46_banner_1.txt,code2vec,METHOD_NAME,token_wrong,0.6094,0.3844,8.5294,7.6269,"{'n_total': 232, 'n_valid': 48, 'n_correct': 28}",129.046595,"public static void banner() { System.out.println(""* =============================================================== *""); System.out.println(""* Simple Java HTTP Server for Deserialization Lab v0.01 *""); System.out.println(""* https://github.com/joaomatosf/JavaDeserH2HC *""); System.out.println(""* =============================================================== *""); System.out.println(""You can inject java serialized objects in the following formats:""); System.out.println(""\n 1) Binary in HTTP POST (ie \\xAC\\xED). Ex:\n"" + "" $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\n"" + ""\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\n"" + "" $ curl 127.0.0.1:8000 -d \""ViewState=rO0ABXNy...\""\n"" + "" $ curl 127.0.0.1:8000 -d \""ViewState=H4sICAeH...\""\n"" + ""\n 3) Base64 or Gzip+Base64 in cookies. Ex:\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: JSESSIONID=rO0ABXNy...\""\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: JSESSIONID=H4sICAeH...\""\n"" + ""\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: rememberMe=MTIzNDU2Nzg...\""\n"" + ""\n 5) XML for XStream RCE vulnerability/serialization. Ex:\n"" + "" $ curl 127.0.0.1:8000 -d @file.xml\n -H \""Content-Type: application/xml\""""); System.out.println(""OBS: To test gadgets in specific libraries, run with -cp param. Ex:\n"" + ""$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer""); System.out.println(""==================================================================""); }","void banner(){System.println(""githubHC"");println(""*=="");}","['public', 'static', 'void', 'banner', '(', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""* =============================================================== *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* Simple Java HTTP Server for Deserialization Lab v0.01 *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* https://github.com/joaomatosf/JavaDeserH2HC *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* =============================================================== *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""You can inject java serialized objects in the following formats:""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\n 1) Binary in HTTP POST (ie \\\\xAC\\\\xED). Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\\n""', '+', '""\\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -d \\""ViewState=rO0ABXNy...\\""\\n""', '+', '"" $ curl 127.0.0.1:8000 -d \\""ViewState=H4sICAeH...\\""\\n""', '+', '""\\n 3) Base64 or Gzip+Base64 in cookies. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: JSESSIONID=rO0ABXNy...\\""\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: JSESSIONID=H4sICAeH...\\""\\n""', '+', '""\\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: rememberMe=MTIzNDU2Nzg...\\""\\n""', '+', '""\\n 5) XML for XStream RCE vulnerability/serialization. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -d @file.xml\\n -H \\""Content-Type: application/xml\\""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OBS: To test gadgets in specific libraries, run with -cp param. Ex:\\n""', '+', '""$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""==================================================================""', ')', ';', '}']","['void', 'banner', '(', ')', '{', 'System', '.', 'println', '(', '""githubHC""', ')', ';', 'println', '(', '""*==""', ')', ';', '}']",104,18,6,1490,57,12,96.9553450608931,87.75510204081633,,,,-1,-1,-1,-1,False
L47_createDocumentListener_1.txt,code2vec,METHOD_NAME,token_wrong,0.6434,0.3669,16.543,17.7185,"{'n_total': 428, 'n_valid': 44, 'n_correct': 32}",128.293803,private void createDocumentListener() { documentListener = new DocumentListener() { public void insertUpdate(DocumentEvent e) { if (autocompletedtextComp.isCarentAtEndOfTextAtInsertion()) createNewShowingThread(popup.isVisible() ? 0 : POPUP_DELAY_AT_TEXT_INSERTION); } public void removeUpdate(DocumentEvent e) { if (autocompletedtextComp.isCarentAtEndOfTextAtRemoval()) createNewShowingThread(popup.isVisible() ? 0 : POPUP_DELAY_AT_TEXT_DELETION); } public void changedUpdate(DocumentEvent e) { } }; },void createDocumentListener(){documentListener=new DocumentListener(){insertUpdate(DocumentEvent e){}void removeUpdate(DocumentEvent e){(popup?0:DELAYDELETION);}changedUpdate(DocumentEvent e){}};},"['private', 'void', 'createDocumentListener', '(', ')', '{', 'documentListener', '=', 'new', 'DocumentListener', '(', ')', '{', 'public', 'void', 'insertUpdate', '(', 'DocumentEvent', 'e', ')', '{', 'if', '(', 'autocompletedtextComp', '.', 'isCarentAtEndOfTextAtInsertion', '(', ')', ')', 'createNewShowingThread', '(', 'popup', '.', 'isVisible', '(', ')', '?', '0', ':', 'POPUP_DELAY_AT_TEXT_INSERTION', ')', ';', '}', 'public', 'void', 'removeUpdate', '(', 'DocumentEvent', 'e', ')', '{', 'if', '(', 'autocompletedtextComp', '.', 'isCarentAtEndOfTextAtRemoval', '(', ')', ')', 'createNewShowingThread', '(', 'popup', '.', 'isVisible', '(', ')', '?', '0', ':', 'POPUP_DELAY_AT_TEXT_DELETION', ')', ';', '}', 'public', 'void', 'changedUpdate', '(', 'DocumentEvent', 'e', ')', '{', '}', '}', ';', '}']","['void', 'createDocumentListener', '(', ')', '{', 'documentListener', '=', 'new', 'DocumentListener', '(', ')', '{', 'insertUpdate', '(', 'DocumentEvent', 'e', ')', '{', '}', 'void', 'removeUpdate', '(', 'DocumentEvent', 'e', ')', '{', '(', 'popup', '?', '0', ':', 'DELAYDELETION', ')', ';', '}', 'changedUpdate', '(', 'DocumentEvent', 'e', ')', '{', '}', '}', ';', '}']",85,45,6,502,196,28,64.55696202531645,50.63291139240506,,,,-1,-1,-1,-1,False
L48_setup_1.txt,code2vec,METHOD_NAME,token_wrong,0.824,0.4164,1.7725,3.8754,"{'n_total': 279, 'n_valid': 29, 'n_correct': 23}",81.766377,"@SuppressWarnings(""unchecked"") @BeforeMethod public void setup() throws Exception { initMocks(this); filter = new RealmContextFilter(coreWrapper, realmValidator); given(coreWrapper.getOrganization(any(SSOToken.class), eq(ENDPOINT_PATH_ELEMENT))).willThrow(IdRepoException.class); }",void setup()throws Exception{initMocks();(((SSOToken)(ELEMENT))).willThrow(IdRepoException);},"['@', 'SuppressWarnings', '(', '""unchecked""', ')', '@', 'BeforeMethod', 'public', 'void', 'setup', '(', ')', 'throws', 'Exception', '{', 'initMocks', '(', 'this', ')', ';', 'filter', '=', 'new', 'RealmContextFilter', '(', 'coreWrapper', ',', 'realmValidator', ')', ';', 'given', '(', 'coreWrapper', '.', 'getOrganization', '(', 'any', '(', 'SSOToken', '.', 'class', ')', ',', 'eq', '(', 'ENDPOINT_PATH_ELEMENT', ')', ')', ')', '.', 'willThrow', '(', 'IdRepoException', '.', 'class', ')', ';', '}']","['void', 'setup', '(', ')', 'throws', 'Exception', '{', 'initMocks', '(', ')', ';', '(', '(', '(', 'SSOToken', ')', '(', 'ELEMENT', ')', ')', ')', '.', 'willThrow', '(', 'IdRepoException', ')', ';', '}']",58,28,6,281,93,11,69.62962962962963,57.692307692307686,,,,-1,-1,-1,-1,False
L49_createEngineUseSpring_1.txt,code2vec,METHOD_NAME,token_wrong,0.7751,0.9118,16.6195,16.9556,"{'n_total': 199, 'n_valid': 26, 'n_correct': 22}",72.884719,"@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(""applicationContext-test.xml""); ProcessEngineFactoryBean factoryBean = context.getBean(ProcessEngineFactoryBean.class); assertNotNull(factoryBean); RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }",void createEngineUseSpring(){(ProcessEngineFactoryBean.class);bean();},"['@', 'Test', 'public', 'void', 'createEngineUseSpring', '(', ')', '{', 'ClassPathXmlApplicationContext', 'context', '=', 'new', 'ClassPathXmlApplicationContext', '(', '""applicationContext-test.xml""', ')', ';', 'ProcessEngineFactoryBean', 'factoryBean', '=', 'context', '.', 'getBean', '(', 'ProcessEngineFactoryBean', '.', 'class', ')', ';', 'assertNotNull', '(', 'factoryBean', ')', ';', 'RuntimeService', 'bean', '=', 'context', '.', 'getBean', '(', 'RuntimeService', '.', 'class', ')', ';', 'assertNotNull', '(', 'bean', ')', ';', '}']","['void', 'createEngineUseSpring', '(', ')', '{', '(', 'ProcessEngineFactoryBean', '.', 'class', ')', ';', 'bean', '(', ')', ';', '}']",52,16,6,351,70,27,86.72839506172839,78.26086956521739,,,,-1,-1,-1,-1,False
L50_createDocumentFromSource_1.txt,code2vec,METHOD_NAME,token_wrong,0.2783,0.3496,19.0077,18.0973,"{'n_total': 409, 'n_valid': 42, 'n_correct': 32}",132.307501,"private Document createDocumentFromSource(Source source) { try { DOMResult result = new DOMResult(); transformerHelper.transform(source, result); return (Document) result.getNode(); } catch (TransformerException ex) { fail(""Could not transform source to DOMResult"" + ex.getMessage()); return null; } }","Document createDocumentFromSource(Source source){try{DOMResult=DOMResult();transformerHelper(sourceresult);return(Document)getNode();}catch(TransformerException ex){("""".getMessage());}}","['private', 'Document', 'createDocumentFromSource', '(', 'Source', 'source', ')', '{', 'try', '{', 'DOMResult', 'result', '=', 'new', 'DOMResult', '(', ')', ';', 'transformerHelper', '.', 'transform', '(', 'source', ',', 'result', ')', ';', 'return', '(', 'Document', ')', 'result', '.', 'getNode', '(', ')', ';', '}', 'catch', '(', 'TransformerException', 'ex', ')', '{', 'fail', '(', '""Could not transform source to DOMResult""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', '}']","['Document', 'createDocumentFromSource', '(', 'Source', 'source', ')', '{', 'try', '{', 'DOMResult', '=', 'DOMResult', '(', ')', ';', 'transformerHelper', '(', 'sourceresult', ')', ';', 'return', '(', 'Document', ')', 'getNode', '(', ')', ';', '}', 'catch', '(', 'TransformerException', 'ex', ')', '{', '(', '""""', '.', 'getMessage', '(', ')', ')', ';', '}', '}']",60,45,6,301,185,30,42.80442804428044,27.77777777777778,,,,-1,-1,-1,-1,False
L51_showTime_1.txt,code2vec,METHOD_NAME,token_wrong,0.9998,0.9575,24.2518,21.9235,"{'n_total': 224, 'n_valid': 23, 'n_correct': 23}",73.910283,"private void showTime() { if (!isShowTime) { ObjectAnimator.ofFloat(tvTime, ""alpha"", 0, 1).setDuration(300).start(); isShowTime = true; } }","void showTime(){if(isShowTime){ofFloat("""",0);isShowTime=true;}}","['private', 'void', 'showTime', '(', ')', '{', 'if', '(', '!', 'isShowTime', ')', '{', 'ObjectAnimator', '.', 'ofFloat', '(', 'tvTime', ',', '""alpha""', ',', '0', ',', '1', ')', '.', 'setDuration', '(', '300', ')', '.', 'start', '(', ')', ';', 'isShowTime', '=', 'true', ';', '}', '}']","['void', 'showTime', '(', ')', '{', 'if', '(', 'isShowTime', ')', '{', 'ofFloat', '(', '""""', ',', '0', ')', ';', 'isShowTime', '=', 'true', ';', '}', '}']",40,23,6,139,63,14,60.8,50.0,,,,-1,-1,-1,-1,False
L52_protocolConnect_1.txt,code2vec,METHOD_NAME,token_wrong,0.6535,0.4985,25.9184,19.8934,"{'n_total': 252, 'n_valid': 24, 'n_correct': 22}",69.501927,"protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(""mbox does not allow passwords""); return true; }","boolean protocolConnect(String port,String user,String passwd)throws MessagingException{if(null)("""");}","['protected', 'boolean', 'protocolConnect', '(', 'String', 'host', ',', 'int', 'port', ',', 'String', 'user', ',', 'String', 'passwd', ')', 'throws', 'MessagingException', '{', 'if', '(', 'passwd', '!=', 'null', ')', 'throw', 'new', 'AuthenticationFailedException', '(', '""mbox does not allow passwords""', ')', ';', 'return', 'true', ';', '}']","['boolean', 'protocolConnect', '(', 'String', 'port', ',', 'String', 'user', ',', 'String', 'passwd', ')', 'throws', 'MessagingException', '{', 'if', '(', 'null', ')', '(', '""""', ')', ';', '}']",36,24,6,221,102,21,59.5,40.0,,,,-1,-1,-1,-1,False
L53_processActionAddRank_1.txt,code2vec,METHOD_NAME,token_wrong,0.2738,0.3101,15.7181,17.3144,"{'n_total': 275, 'n_valid': 42, 'n_correct': 25}",120.992516,"public String processActionAddRank() { if (log.isDebugEnabled()) log.debug(""processActionAddRank()""); this.setForumRankBean(new ForumRankBean()); this.courseMemberMap = membershipManager.getFilteredCourseMembers(true, null); return ADD_RANK; }","String processActionAddRank(){if(log)("""");setForumRankBean(ForumRankBean());membershipManager();return ADDRANK;}","['public', 'String', 'processActionAddRank', '(', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""processActionAddRank()""', ')', ';', 'this', '.', 'setForumRankBean', '(', 'new', 'ForumRankBean', '(', ')', ')', ';', 'this', '.', 'courseMemberMap', '=', 'membershipManager', '.', 'getFilteredCourseMembers', '(', 'true', ',', 'null', ')', ';', 'return', 'ADD_RANK', ';', '}']","['String', 'processActionAddRank', '(', ')', '{', 'if', '(', 'log', ')', '(', '""""', ')', ';', 'setForumRankBean', '(', 'ForumRankBean', '(', ')', ')', ';', 'membershipManager', '(', ')', ';', 'return', 'ADDRANK', ';', '}']",48,28,6,243,112,26,60.36866359447005,47.61904761904761,,,,-1,-1,-1,-1,False
L54_entryRemoved_1.txt,code2vec,METHOD_NAME,token_wrong,0.9119,0.9434,8.3488,13.6601,"{'n_total': 237, 'n_valid': 27, 'n_correct': 25}",75.752268,"@Override protected void entryRemoved(boolean evicted, Integer key, CachedSegment oldValue, CachedSegment newValue) { if (newValue != null && newValue == oldValue) { return; } oldValue.file.delete(); }","void entryRemoved(boolean key,CachedSegment oldValue,CachedSegment newValue){if(newValue){}}","['@', 'Override', 'protected', 'void', 'entryRemoved', '(', 'boolean', 'evicted', ',', 'Integer', 'key', ',', 'CachedSegment', 'oldValue', ',', 'CachedSegment', 'newValue', ')', '{', 'if', '(', 'newValue', '!=', 'null', '&&', 'newValue', '==', 'oldValue', ')', '{', 'return', ';', '}', 'oldValue', '.', 'file', '.', 'delete', '(', ')', ';', '}']","['void', 'entryRemoved', '(', 'boolean', 'key', ',', 'CachedSegment', 'oldValue', ',', 'CachedSegment', 'newValue', ')', '{', 'if', '(', 'newValue', ')', '{', '}', '}']",42,20,6,201,92,18,59.56284153005464,61.111111111111114,,,,-1,-1,-1,-1,False
L55_getEnvironment_1.txt,code2vec,METHOD_NAME,token_wrong,0.7038,0.9759,10.0184,13.6523,"{'n_total': 459, 'n_valid': 36, 'n_correct': 36}",110.405199,"private Map<String, Set<String>> getEnvironment(String ipAddr, String dns) { Map<String, Set<String>> environment = new HashMap<String, Set<String>>(); Set<String> dnsMask = new HashSet<String>(); dnsMask.add(dns); environment.put(""requestDnsName"", dnsMask); Set<String> ip = new HashSet<String>(); ip.add(ipAddr); environment.put(REQUEST_IP, ip); return environment; }","Map<Set<String>>getEnvironment(String dns){Map<Set<String>>environment=HashMap();new HashSet<>();(dns);environment("""",dnsMask);(ip);}","['private', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'getEnvironment', '(', 'String', 'ipAddr', ',', 'String', 'dns', ')', '{', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'environment', '=', 'new', 'HashMap', '<', 'String', ',', 'Set', '<', 'String', '>', '>', '(', ')', ';', 'Set', '<', 'String', '>', 'dnsMask', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'dnsMask', '.', 'add', '(', 'dns', ')', ';', 'environment', '.', 'put', '(', '""requestDnsName""', ',', 'dnsMask', ')', ';', 'Set', '<', 'String', '>', 'ip', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'ip', '.', 'add', '(', 'ipAddr', ')', ';', 'environment', '.', 'put', '(', 'REQUEST_IP', ',', 'ip', ')', ';', 'return', 'environment', ';', '}']","['Map', '<', 'Set', '<', 'String', '>', '>', 'getEnvironment', '(', 'String', 'dns', ')', '{', 'Map', '<', 'Set', '<', 'String', '>', '>', 'environment', '=', 'HashMap', '(', ')', ';', 'new', 'HashSet', '<', '>', '(', ')', ';', '(', 'dns', ')', ';', 'environment', '(', '""""', ',', 'dnsMask', ')', ';', '(', 'ip', ')', ';', '}']",107,49,6,369,133,20,67.621776504298,57.42574257425742,,,,-1,-1,-1,-1,False
L56_createRawValidator_3.txt,code2vec,METHOD_NAME,token_wrong,0.3066,0.259,15.1137,16.0191,"{'n_total': 1453, 'n_valid': 381, 'n_correct': 209}",1040.952217,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"" + ""n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"" + ""mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"" + ""on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"" + ""expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv."" + ""grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"" + ""type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"" + ""\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun."" + ""msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*co"" + ""m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"" + ""un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"" + ""atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"" + ""/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"" + ""tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"" + ""MLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"" + ""essor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"" + ""paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expressio"" + ""n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.ut"" + ""il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000"" + ""\u0013xpq\u0000~\u0000\u0017q\u0000~\u0000\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"" + ""~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000"" + ""~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003q\u0000~\u0000\u000e"" + ""psq\u0000~\u0000\tq\u0000~\u0000\u000epsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0000xq\u0000~\u0000\u0010q\u0000~\u0000\u0016t\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpa"" + ""ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000\'q\u0000~\u0000\u0016sr"" + ""\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"" + ""q\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006Formatt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Ep"" + ""silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000"" + ""~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\rNameQualifierq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000e"" + ""psq\u0000~\u0000\tppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000"" + ""~\u0000\u0010q\u0000~\u0000\u0016t\u0000\bdateTimeq\u0000~\u0000)q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000=q\u0000~\u0000\u0016sq\u0000~\u0000+t\u0000\fIssueI"" + ""nstantq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\u0005Nonceq\u0000~\u0000/"" + ""q\u0000~\u00001sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"" + ""Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"" + ""-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"" + ""countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"" + ""sionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u00003q\u0000~\u0000\bq\u0000~\u0000 q\u0000~\u0000\u0005q\u0000~\u00007q\u0000~\u0000Aq\u0000~\u0000\u0006q\u0000~\u0000\u0007x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","commsv.DocumentDeclaration createRawValidator(){if(schemaFragment){((""""+""""+""on""+"".""+""""+""""+""""+""""+""""+""""));}REDocumentDeclaration();}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\x1fcom.sun.msv.grammar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.su""', '+', '""n.msv.grammar.BinaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1t\x00 Lcom/sun/msv/gra""', '+', '""mmar/Expression;L\x00\x04exp2q\x00~\x00\x02xr\x00\x1ecom.sun.msv.grammar.Expressi""', '+', '""onø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0b""', '+', '""expandedExpq\x00~\x00\x02xpppsq\x00~\x00\x00ppsq\x00~\x00\x00ppsq\x00~\x00\x00ppsr\x00\x1bcom.sun.msv.""', '+', '""grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Data""', '+', '""type;L\x00\x06exceptq\x00~\x00\x02L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq""', '+', '""\x00~\x00\x03sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00#com.sun.""', '+', '""msv.datatype.xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxr\x00*co""', '+', '""m.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.s""', '+', '""un.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.d""', '+', '""atatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Ljava""', '+', '""/lang/String;L\x00\\btypeNameq\x00~\x00\x13L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/da""', '+', '""tatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001/X""', '+', '""MLSchemat\x00\x06stringsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProc""', '+', '""essor$Preserve\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.WhiteS""', '+', '""paceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xp\x01sr\x000com.sun.msv.grammar.Expressio""', '+', '""n$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x0epsr\x00\x1bcom.sun.msv.ut""', '+', '""il.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x13L\x00\\fnamespaceURIq\x00~\x00""', '+', '""\x13xpq\x00~\x00\x17q\x00~\x00\x16sr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00""', '+', '""~\x00\x01ppsr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00""', '+', '""~\x00\x02L\x00\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xq\x00~\x00\x03q\x00~\x00\x0e""', '+', '""psq\x00~\x00\\tq\x00~\x00\x0epsr\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x00xq\x00~\x00\x10q\x00~\x00\x16t\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.WhiteSpa""', '+', '""ceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x19q\x00~\x00\x1csq\x00~\x00\x1dq\x00~\x00\\\'q\x00~\x00\x16sr""', '+', '""\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalName""', '+', '""q\x00~\x00\x13L\x00\\fnamespaceURIq\x00~\x00\x13xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x06Formatt\x00\x00sr\x000com.sun.msv.grammar.Expression$Ep""', '+', '""silonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03sq\x00~\x00\\r\x01q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00""', '+', '""~\x00\x0epq\x00~\x00\\fsq\x00~\x00+t\x00\\rNameQualifierq\x00~\x00/q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00~\x00\x0e""', '+', '""psq\x00~\x00\\tppsr\x00%com.sun.msv.datatype.xsd.DateTimeType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00)com.sun.msv.datatype.xsd.DateTimeBaseType\x14W\x1a@3¥´å\x02\x00\x00xq\x00""', '+', '""~\x00\x10q\x00~\x00\x16t\x00\\bdateTimeq\x00~\x00)q\x00~\x00\x1csq\x00~\x00\x1dq\x00~\x00=q\x00~\x00\x16sq\x00~\x00+t\x00\\fIssueI""', '+', '""nstantq\x00~\x00/q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00~\x00\x0epq\x00~\x00\\fsq\x00~\x00+t\x00\x05Nonceq\x00~\x00/""', '+', '""q\x00~\x001sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexp""', '+', '""Tablet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00""', '+', '""-com.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05""', '+', '""countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expres""', '+', '""sionPool;xp\x00\x00\x00\\b\x01pq\x00~\x003q\x00~\x00\\bq\x00~\x00 q\x00~\x00\x05q\x00~\x007q\x00~\x00Aq\x00~\x00\x06q\x00~\x00\x07x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['commsv', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""""', '+', '""on""', '+', '"".""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'REDocumentDeclaration', '(', ')', ';', '}']",137,42,6,5476,130,24,98.05575935436536,72.51908396946564,,,,-1,-1,-1,-1,False
L57_getTools_1.txt,code2vec,METHOD_NAME,token_wrong,0.6639,0.3123,11.2253,11.4722,"{'n_total': 216, 'n_valid': 23, 'n_correct': 17}",74.23113,public Collection getTools(String arg0) { if (site != null) { return site.getTools(arg0); } throw new UnsupportedOperationException(); },Collection getTools(String arg){if(site!=null){return getTools(arg);}UnsupportedOperationException();},"['public', 'Collection', 'getTools', '(', 'String', 'arg0', ')', '{', 'if', '(', 'site', '!=', 'null', ')', '{', 'return', 'site', '.', 'getTools', '(', 'arg0', ')', ';', '}', 'throw', 'new', 'UnsupportedOperationException', '(', ')', ';', '}']","['Collection', 'getTools', '(', 'String', 'arg', ')', '{', 'if', '(', 'site', '!=', 'null', ')', '{', 'return', 'getTools', '(', 'arg', ')', ';', '}', 'UnsupportedOperationException', '(', ')', ';', '}']",31,26,6,136,102,14,27.86885245901639,20.0,,,,-1,-1,-1,-1,False
L58_appendToMap_1.txt,code2vec,METHOD_NAME,token_wrong,0.6648,0.6191,22.0786,19.4069,"{'n_total': 445, 'n_valid': 35, 'n_correct': 34}",101.255034,"private void appendToMap(Map<String, SortedSet<String>> map, String key, String value) { SortedSet<String> valueList = map.get(key); if (valueList == null) { valueList = new TreeSet<>(); map.put(key, valueList); } valueList.add(value); }","void appendToMap(Map<String>map,String key,String value){(key);if(null){}add();}","['private', 'void', 'appendToMap', '(', 'Map', '<', 'String', ',', 'SortedSet', '<', 'String', '>', '>', 'map', ',', 'String', 'key', ',', 'String', 'value', ')', '{', 'SortedSet', '<', 'String', '>', 'valueList', '=', 'map', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'valueList', '==', 'null', ')', '{', 'valueList', '=', 'new', 'TreeSet', '<', '>', '(', ')', ';', 'map', '.', 'put', '(', 'key', ',', 'valueList', ')', ';', '}', 'valueList', '.', 'add', '(', 'value', ')', ';', '}']","['void', 'appendToMap', '(', 'Map', '<', 'String', '>', 'map', ',', 'String', 'key', ',', 'String', 'value', ')', '{', '(', 'key', ')', ';', 'if', '(', 'null', ')', '{', '}', 'add', '(', ')', ';', '}']",69,31,6,237,80,17,71.36363636363636,60.317460317460316,,,,-1,-1,-1,-1,False
L59_findSecurityReferences_1.txt,code2vec,METHOD_NAME,token_wrong,0.557,0.809,16.2268,20.2837,"{'n_total': 192, 'n_valid': 17, 'n_correct': 17}",45.334171,@Override public String[] findSecurityReferences() { try { referencesLock.readLock().lock(); String[] results = new String[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } },String[]findSecurityReferences(){try{}finally{readLock().unlock();}},"['@', 'Override', 'public', 'String', '[', ']', 'findSecurityReferences', '(', ')', '{', 'try', '{', 'referencesLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'String', '[', ']', 'results', '=', 'new', 'String', '[', 'references', '.', 'size', '(', ')', ']', ';', 'return', 'references', '.', 'keySet', '(', ')', '.', 'toArray', '(', 'results', ')', ';', '}', 'finally', '{', 'referencesLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']","['String', '[', ']', 'findSecurityReferences', '(', ')', '{', 'try', '{', '}', 'finally', '{', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']",64,22,6,239,68,28,81.04265402843602,72.41379310344827,,,,-1,-1,-1,-1,False
L60_saveText_1.txt,code2vec,METHOD_NAME,token_wrong,0.4245,0.5778,13.4609,15.2102,"{'n_total': 381, 'n_valid': 45, 'n_correct': 36}",129.283215,"public void saveText(Path outRoot) throws IOException { Path file = outRoot.resolve(id + "".ner.model""); List<String> lines = sparseWeights.getKeyList().stream().map(s -> String.format(""%s %.3f"", s, sparseWeights.get(s))).collect(Collectors.toList()); Files.write(file, lines); }","void saveText()throws IOException{Path(""nermodel"");List<String>lines=(s("""",(s))).collect(toList());write();}","['public', 'void', 'saveText', '(', 'Path', 'outRoot', ')', 'throws', 'IOException', '{', 'Path', 'file', '=', 'outRoot', '.', 'resolve', '(', 'id', '+', '"".ner.model""', ')', ';', 'List', '<', 'String', '>', 'lines', '=', 'sparseWeights', '.', 'getKeyList', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 's', '->', 'String', '.', 'format', '(', '""%s %.3f""', ',', 's', ',', 'sparseWeights', '.', 'get', '(', 's', ')', ')', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', 'Files', '.', 'write', '(', 'file', ',', 'lines', ')', ';', '}']","['void', 'saveText', '(', ')', 'throws', 'IOException', '{', 'Path', '(', '""nermodel""', ')', ';', 'List', '<', 'String', '>', 'lines', '=', '(', 's', '(', '""""', ',', '(', 's', ')', ')', ')', '.', 'collect', '(', 'toList', '(', ')', ')', ';', 'write', '(', ')', ';', '}']",78,41,6,278,108,14,64.39393939393939,51.388888888888886,,,,-1,-1,-1,-1,False
L61_performAction_1.txt,code2vec,METHOD_NAME,token_wrong,0.8815,0.6969,2.6015,1.5522,"{'n_total': 381, 'n_valid': 43, 'n_correct': 35}",122.074703,@Override public void performAction() { FileTable activeTable = mainFrame.getActiveTable(); FileTable leftTable = mainFrame.getLeftPanel().getFileTable(); FileTable rightTable = mainFrame.getRightPanel().getFileTable(); if (activeTable == leftTable) rightTable.requestFocus(); else if (activeTable == rightTable) leftTable.requestFocus(); },void performAction(){leftTable().getFileTable();if(activeTable)requestFocus();else if(activeTable)leftTable.requestFocus();},"['@', 'Override', 'public', 'void', 'performAction', '(', ')', '{', 'FileTable', 'activeTable', '=', 'mainFrame', '.', 'getActiveTable', '(', ')', ';', 'FileTable', 'leftTable', '=', 'mainFrame', '.', 'getLeftPanel', '(', ')', '.', 'getFileTable', '(', ')', ';', 'FileTable', 'rightTable', '=', 'mainFrame', '.', 'getRightPanel', '(', ')', '.', 'getFileTable', '(', ')', ';', 'if', '(', 'activeTable', '==', 'leftTable', ')', 'rightTable', '.', 'requestFocus', '(', ')', ';', 'else', 'if', '(', 'activeTable', '==', 'rightTable', ')', 'leftTable', '.', 'requestFocus', '(', ')', ';', '}']","['void', 'performAction', '(', ')', '{', 'leftTable', '(', ')', '.', 'getFileTable', '(', ')', ';', 'if', '(', 'activeTable', ')', 'requestFocus', '(', ')', ';', 'else', 'if', '(', 'activeTable', ')', 'leftTable', '.', 'requestFocus', '(', ')', ';', '}']",69,33,6,340,124,19,67.28971962616822,57.14285714285714,,,,-1,-1,-1,-1,False
L62_subtract_1.txt,code2vec,METHOD_NAME,token_wrong,0.9878,0.9851,10.5529,13.801,"{'n_total': 247, 'n_valid': 31, 'n_correct': 27}",86.919141,"public static void subtract(int[] x, int[] y, int[] z) { int c = Nat224.sub(x, y, z); if (c != 0) { subPInvFrom(z); } }",void subtract(int z){Nat.sub();if(c){}},"['public', 'static', 'void', 'subtract', '(', 'int', '[', ']', 'x', ',', 'int', '[', ']', 'y', ',', 'int', '[', ']', 'z', ')', '{', 'int', 'c', '=', 'Nat224', '.', 'sub', '(', 'x', ',', 'y', ',', 'z', ')', ';', 'if', '(', 'c', '!=', '0', ')', '{', 'subPInvFrom', '(', 'z', ')', ';', '}', '}']","['void', 'subtract', '(', 'int', 'z', ')', '{', 'Nat', '.', 'sub', '(', ')', ';', 'if', '(', 'c', ')', '{', '}', '}']",49,20,6,119,39,14,76.19047619047619,67.44186046511628,,,,-1,-1,-1,-1,False
L63_specialName_1.txt,code2vec,METHOD_NAME,token_wrong,0.8714,0.2432,15.6964,16.2102,"{'n_total': 288, 'n_valid': 36, 'n_correct': 25}",107.089884,"@Test public void specialName() { ProcessEngineConfiguration.createProcessEngineConfigurationFromResourceDefault().setProcessEngineName(""oracleEngine"").setJdbcDriver(""oracle.jdbc.Driver"").setJdbcUrl(""jdbc:oracle:thin:@localhost:1521:XE"").setJdbcUsername(""dbusername"").setJdbcPassword(""password"").setDatabaseType(""oracle"").buildProcessEngine(); ProcessEngine oracleEngine = ProcessEngines.getProcessEngine(""oracleEngine""); assertNotNull(oracleEngine); }","@Test void specialName(){("""").setJdbcUrl("""").oracleEngine.getProcessEngine("""");(oracleEngine);}","['@', 'Test', 'public', 'void', 'specialName', '(', ')', '{', 'ProcessEngineConfiguration', '.', 'createProcessEngineConfigurationFromResourceDefault', '(', ')', '.', 'setProcessEngineName', '(', '""oracleEngine""', ')', '.', 'setJdbcDriver', '(', '""oracle.jdbc.Driver""', ')', '.', 'setJdbcUrl', '(', '""jdbc:oracle:thin:@localhost:1521:XE""', ')', '.', 'setJdbcUsername', '(', '""dbusername""', ')', '.', 'setJdbcPassword', '(', '""password""', ')', '.', 'setDatabaseType', '(', '""oracle""', ')', '.', 'buildProcessEngine', '(', ')', ';', 'ProcessEngine', 'oracleEngine', '=', 'ProcessEngines', '.', 'getProcessEngine', '(', '""oracleEngine""', ')', ';', 'assertNotNull', '(', 'oracleEngine', ')', ';', '}']","['@', 'Test', 'void', 'specialName', '(', ')', '{', '(', '""""', ')', '.', 'setJdbcUrl', '(', '""""', ')', '.', 'oracleEngine', '.', 'getProcessEngine', '(', '""""', ')', ';', '(', 'oracleEngine', ')', ';', '}']",64,28,6,452,95,17,82.06896551724138,62.06896551724138,,,,-1,-1,-1,-1,False
L64_ensureConfig_1.txt,code2vec,METHOD_NAME,token_wrong,0.9744,0.9994,26.0273,25.063,"{'n_total': 184, 'n_valid': 27, 'n_correct': 21}",76.964758,protected LDAPStore ensureConfig() { LDAPStore store = getConfig(); if (store == null) { store = new LDAPStore(); } return store; },LDAPStore ensureConfig(){if(null){}return store;},"['protected', 'LDAPStore', 'ensureConfig', '(', ')', '{', 'LDAPStore', 'store', '=', 'getConfig', '(', ')', ';', 'if', '(', 'store', '==', 'null', ')', '{', 'store', '=', 'new', 'LDAPStore', '(', ')', ';', '}', 'return', 'store', ';', '}']","['LDAPStore', 'ensureConfig', '(', ')', '{', 'if', '(', 'null', ')', '{', '}', 'return', 'store', ';', '}']",32,15,6,131,49,18,72.56637168141593,65.38461538461539,,,,-1,-1,-1,-1,False
L65_setSentenceId_1.txt,code2vec,METHOD_NAME,token_wrong,0.6509,0.1901,14.38,14.7518,"{'n_total': 364, 'n_valid': 38, 'n_correct': 27}",112.290263,"public void setSentenceId(int addr, int v) { if (featOkTst && casFeat_sentenceId == null) jcas.throwFeatMissing(""sentenceId"", ""de.unihd.dbs.uima.types.heideltime.Sentence""); ll_cas.ll_setIntValue(addr, casFeatCode_sentenceId, v); }","void setSentenceId(int addr,int v){if(featOkTst&&sentenceId==null)throwFeatMissing("""","""");setIntValue();}","['public', 'void', 'setSentenceId', '(', 'int', 'addr', ',', 'int', 'v', ')', '{', 'if', '(', 'featOkTst', '&&', 'casFeat_sentenceId', '==', 'null', ')', 'jcas', '.', 'throwFeatMissing', '(', '""sentenceId""', ',', '""de.unihd.dbs.uima.types.heideltime.Sentence""', ')', ';', 'll_cas', '.', 'll_setIntValue', '(', 'addr', ',', 'casFeatCode_sentenceId', ',', 'v', ')', ';', '}']","['void', 'setSentenceId', '(', 'int', 'addr', ',', 'int', 'v', ')', '{', 'if', '(', 'featOkTst', '&&', 'sentenceId', '==', 'null', ')', 'throwFeatMissing', '(', '""""', ',', '""""', ')', ';', 'setIntValue', '(', ')', ';', '}']",40,30,6,231,105,19,59.43396226415094,29.411764705882355,,,,-1,-1,-1,-1,False
L66_postExecute_1.txt,code2vec,METHOD_NAME,token_wrong,0.4209,0.586,20.8451,18.6189,"{'n_total': 666, 'n_valid': 61, 'n_correct': 60}",177.101345,"@Override protected void postExecute() { log(getPluginName() + "" plugin FINISHED"", 1); log(getPluginName() + "" DETECTED "" + apklist.size() + "" .apk files"", 1); for (VirtualFile res : apklist) { log(""\t\t > "" + res.getName(), 2); } this.positiveMatch = apklist.size() > 0; }","void postExecute(){log("""",1);log("""",1);for(VirtualFile res:apklist){log(""""+getName(),2);}}","['@', 'Override', 'protected', 'void', 'postExecute', '(', ')', '{', 'log', '(', 'getPluginName', '(', ')', '+', '"" plugin FINISHED""', ',', '1', ')', ';', 'log', '(', 'getPluginName', '(', ')', '+', '"" DETECTED ""', '+', 'apklist', '.', 'size', '(', ')', '+', '"" .apk files""', ',', '1', ')', ';', 'for', '(', 'VirtualFile', 'res', ':', 'apklist', ')', '{', 'log', '(', '""\\t\\t > ""', '+', 'res', '.', 'getName', '(', ')', ',', '2', ')', ';', '}', 'this', '.', 'positiveMatch', '=', 'apklist', '.', 'size', '(', ')', '>', '0', ';', '}']","['void', 'postExecute', '(', ')', '{', 'log', '(', '""""', ',', '1', ')', ';', 'log', '(', '""""', ',', '1', ')', ';', 'for', '(', 'VirtualFile', 'res', ':', 'apklist', ')', '{', 'log', '(', '""""', '+', 'getName', '(', ')', ',', '2', ')', ';', '}', '}']",73,40,6,273,90,17,71.484375,49.25373134328358,,,,-1,-1,-1,-1,False
L67_displaySiteAlias_1.txt,code2vec,METHOD_NAME,token_wrong,0.5427,0.6147,16.6379,18.662,"{'n_total': 173, 'n_valid': 21, 'n_correct': 14}",63.219611,"public boolean displaySiteAlias() { if (ServerConfigurationService.getBoolean(""wsetup.disable.siteAlias"", false)) { return false; } return true; }","boolean displaySiteAlias(){if(ServerConfigurationService.getBoolean("""")){return false;}}","['public', 'boolean', 'displaySiteAlias', '(', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""wsetup.disable.siteAlias""', ',', 'false', ')', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'displaySiteAlias', '(', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""""', ')', ')', '{', 'return', 'false', ';', '}', '}']",26,20,6,146,88,22,46.774193548387096,30.0,,,,-1,-1,-1,-1,False
L68_sentencesAcceptJson_1.txt,code2vec,METHOD_NAME,token_wrong,0.3528,0.1788,15.4071,15.0138,"{'n_total': 519, 'n_valid': 55, 'n_correct': 32}",162.169064,"@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(""/sentences"")).accept(MediaType.APPLICATION_JSON).build(), String.class); assertThat(result.getBody()).isEqualTo(""[[\""go\"",\""home\""],[\""come\"",\""back\""]]""); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }","@Test void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=rest.exchange((("""")).accept(),String);(result).isEqualTo(""]"");assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo();}","['@', 'Test', 'public', 'void', 'sentencesAcceptJson', '(', ')', 'throws', 'Exception', '{', 'ResponseEntity', '<', 'String', '>', 'result', '=', 'rest', '.', 'exchange', '(', 'RequestEntity', '.', 'get', '(', 'new', 'URI', '(', '""/sentences""', ')', ')', '.', 'accept', '(', 'MediaType', '.', 'APPLICATION_JSON', ')', '.', 'build', '(', ')', ',', 'String', '.', 'class', ')', ';', 'assertThat', '(', 'result', '.', 'getBody', '(', ')', ')', '.', 'isEqualTo', '(', '""[[\\""go\\"",\\""home\\""],[\\""come\\"",\\""back\\""]]""', ')', ';', 'assertThat', '(', 'result', '.', 'getHeaders', '(', ')', '.', 'getContentType', '(', ')', ')', '.', 'isGreaterThanOrEqualTo', '(', 'MediaType', '.', 'APPLICATION_JSON', ')', ';', '}']","['@', 'Test', 'void', 'sentencesAcceptJson', '(', ')', 'throws', 'Exception', '{', 'ResponseEntity', '<', 'String', '>', 'result', '=', 'rest', '.', 'exchange', '(', '(', '(', '""""', ')', ')', '.', 'accept', '(', ')', ',', 'String', ')', ';', '(', 'result', ')', '.', 'isEqualTo', '(', '""]""', ')', ';', 'assertThat', '(', 'result', '.', 'getHeaders', '(', ')', '.', 'getContentType', '(', ')', ')', '.', 'isGreaterThanOrEqualTo', '(', ')', ';', '}']",82,59,6,390,215,25,47.94520547945205,30.263157894736842,,,,-1,-1,-1,-1,False
L69_shouldDeserializeObject_1.txt,code2vec,METHOD_NAME,token_wrong,0.8359,0.5174,17.2113,19.2282,"{'n_total': 269, 'n_valid': 24, 'n_correct': 24}",69.749281,"@Test public void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(""requestBytes""), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO); when(expectationValidator.isValid(""requestBytes"")).thenReturn(""""); Expectation expectation = expectationSerializer.deserialize(""requestBytes""); assertThat(expectation, is(fullExpectation)); }","void shouldDeserializeObject()throws IOException{(((ExpectationDTO))).deserialize(""requestBytes"");(expectation());}","['@', 'Test', 'public', 'void', 'shouldDeserializeObject', '(', ')', 'throws', 'IOException', '{', 'when', '(', 'objectMapper', '.', 'readValue', '(', 'eq', '(', '""requestBytes""', ')', ',', 'same', '(', 'ExpectationDTO', '.', 'class', ')', ')', ')', '.', 'thenReturn', '(', 'fullExpectationDTO', ')', ';', 'when', '(', 'expectationValidator', '.', 'isValid', '(', '""requestBytes""', ')', ')', '.', 'thenReturn', '(', '""""', ')', ';', 'Expectation', 'expectation', '=', 'expectationSerializer', '.', 'deserialize', '(', '""requestBytes""', ')', ';', 'assertThat', '(', 'expectation', ',', 'is', '(', 'fullExpectation', ')', ')', ';', '}']","['void', 'shouldDeserializeObject', '(', ')', 'throws', 'IOException', '{', '(', '(', '(', 'ExpectationDTO', ')', ')', ')', '.', 'deserialize', '(', '""requestBytes""', ')', ';', '(', 'expectation', '(', ')', ')', ';', '}']",71,27,6,365,115,29,74.40476190476191,67.6923076923077,,,,-1,-1,-1,-1,False
L70_unheritPropertyValues_1.txt,code2vec,METHOD_NAME,token_wrong,0.3742,0.2582,15.5592,16.5939,"{'n_total': 500, 'n_valid': 57, 'n_correct': 35}",175.972287,"private static void unheritPropertyValues(AMIdentity group, AMIdentity agent) throws SMSException, SSOException, IdRepoException { Set attributeSchemas = getAttributesSchemaNames(group); Map groupProperties = group.getAttributes(); Map map = new CaseInsensitiveHashMap(); map.putAll(groupProperties); map.putAll(agent.getAttributes()); agent.setAttributes(correctAttributeNames(map, attributeSchemas)); agent.store(); }","void unheritPropertyValues(AMIdentity group,AMIdentity agent)throws SMSException{getAttributes();(groupProperties);(agent());(correctAttributeNames());agent();}","['private', 'static', 'void', 'unheritPropertyValues', '(', 'AMIdentity', 'group', ',', 'AMIdentity', 'agent', ')', 'throws', 'SMSException', ',', 'SSOException', ',', 'IdRepoException', '{', 'Set', 'attributeSchemas', '=', 'getAttributesSchemaNames', '(', 'group', ')', ';', 'Map', 'groupProperties', '=', 'group', '.', 'getAttributes', '(', ')', ';', 'Map', 'map', '=', 'new', 'CaseInsensitiveHashMap', '(', ')', ';', 'map', '.', 'putAll', '(', 'groupProperties', ')', ';', 'map', '.', 'putAll', '(', 'agent', '.', 'getAttributes', '(', ')', ')', ';', 'agent', '.', 'setAttributes', '(', 'correctAttributeNames', '(', 'map', ',', 'attributeSchemas', ')', ')', ';', 'agent', '.', 'store', '(', ')', ';', '}']","['void', 'unheritPropertyValues', '(', 'AMIdentity', 'group', ',', 'AMIdentity', 'agent', ')', 'throws', 'SMSException', '{', 'getAttributes', '(', ')', ';', '(', 'groupProperties', ')', ';', '(', 'agent', '(', ')', ')', ';', '(', 'correctAttributeNames', '(', ')', ')', ';', 'agent', '(', ')', ';', '}']",80,37,6,419,160,27,66.07142857142857,58.108108108108105,,,,-1,-1,-1,-1,False
L71_checkKeyUsage_1.txt,code2vec,METHOD_NAME,token_wrong,0.2368,0.2148,18.999,20.6254,"{'n_total': 449, 'n_valid': 71, 'n_correct': 36}",200.164472,"public void checkKeyUsage(int id, byte[] bytes) throws IOException { X509CertificateHolder certHld = new X509CertificateHolder(bytes); if ((DERBitString.getInstance(certHld.getExtension(Extension.keyUsage).getParsedValue()).getBytes()[0] & 0x01) != 0) { fail(""error generating cert - key usage wrong.""); } }","void checkKeyUsage(int id,byte[]bytes)throws IOException{X certHld=new XCertificateHolder();if((DERBitString.getInstance(getParsedValue())&1)){("""");}}","['public', 'void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X509CertificateHolder', 'certHld', '=', 'new', 'X509CertificateHolder', '(', 'bytes', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'certHld', '.', 'getExtension', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '.', 'getBytes', '(', ')', '[', '0', ']', '&', '0x01', ')', '!=', '0', ')', '{', 'fail', '(', '""error generating cert - key usage wrong.""', ')', ';', '}', '}']","['void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X', 'certHld', '=', 'new', 'XCertificateHolder', '(', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'getParsedValue', '(', ')', ')', '&', '1', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",65,44,6,307,150,19,54.513888888888886,35.59322033898305,,,,-1,-1,-1,-1,False
L72_recordEventAsync_1.txt,code2vec,METHOD_NAME,token_wrong,0.3448,0.1839,20.0928,20.3541,"{'n_total': 173, 'n_valid': 27, 'n_correct': 17}",75.587506,@Override public void recordEventAsync(StramEvent ev) { apexPluginDispatcher.dispatch(new DAGExecutionEvent.StramExecutionEvent(ev)); if (eventBus != null) { eventBus.publishAsync(ev); } },void recordEventAsync(StramEvent ev){apexPluginDispatcher.dispatch(StramExecutionEvent(ev));if(null){}},"['@', 'Override', 'public', 'void', 'recordEventAsync', '(', 'StramEvent', 'ev', ')', '{', 'apexPluginDispatcher', '.', 'dispatch', '(', 'new', 'DAGExecutionEvent', '.', 'StramExecutionEvent', '(', 'ev', ')', ')', ';', 'if', '(', 'eventBus', '!=', 'null', ')', '{', 'eventBus', '.', 'publishAsync', '(', 'ev', ')', ';', '}', '}']","['void', 'recordEventAsync', '(', 'StramEvent', 'ev', ')', '{', 'apexPluginDispatcher', '.', 'dispatch', '(', 'StramExecutionEvent', '(', 'ev', ')', ')', ';', 'if', '(', 'null', ')', '{', '}', '}']",39,24,6,188,103,22,51.204819277108435,45.45454545454545,,,,-1,-1,-1,-1,False
L73_getRpcReceiverManager_1.txt,code2vec,METHOD_NAME,token_wrong,0.8357,0.9691,18.2662,18.6418,"{'n_total': 203, 'n_valid': 23, 'n_correct': 19}",67.21087,RpcReceiverManager getRpcReceiverManager() throws InterruptedException { mLatch.await(); if (mFacadeManager == null) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; },RpcReceiverManager getRpcReceiverManager(){mLatch.await();if(mFacadeManager){getRpcReceiverManagerFactory().get();}},"['RpcReceiverManager', 'getRpcReceiverManager', '(', ')', 'throws', 'InterruptedException', '{', 'mLatch', '.', 'await', '(', ')', ';', 'if', '(', 'mFacadeManager', '==', 'null', ')', '{', 'mFacadeManager', '=', 'mProxy', '.', 'getRpcReceiverManagerFactory', '(', ')', '.', 'getRpcReceiverManagers', '(', ')', '.', 'get', '(', '0', ')', ';', '}', 'return', 'mFacadeManager', ';', '}']","['RpcReceiverManager', 'getRpcReceiverManager', '(', ')', '{', 'mLatch', '.', 'await', '(', ')', ';', 'if', '(', 'mFacadeManager', ')', '{', 'getRpcReceiverManagerFactory', '(', ')', '.', 'get', '(', ')', ';', '}', '}']",42,26,6,233,116,27,56.79611650485437,44.44444444444444,,,,-1,-1,-1,-1,False
L74_shouldStop_1.txt,code2vec,METHOD_NAME,token_wrong,0.2988,0.6038,14.4955,15.0981,"{'n_total': 284, 'n_valid': 27, 'n_correct': 23}",77.137801,"@Test public void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest(""PUT"", ""/stop"", """"); proxyServlet.service(statusRequest, response); assertResponse(response, 501, """"); }","void shouldStop()throws InterruptedException{statusRequest("""","""","""");assertResponse(response,1,"""");}","['@', 'Test', 'public', 'void', 'shouldStop', '(', ')', 'throws', 'InterruptedException', '{', 'MockHttpServletRequest', 'statusRequest', '=', 'buildHttpServletRequest', '(', '""PUT""', ',', '""/stop""', ',', '""""', ')', ';', 'proxyServlet', '.', 'service', '(', 'statusRequest', ',', 'response', ')', ';', 'assertResponse', '(', 'response', ',', '501', ',', '""""', ')', ';', '}']","['void', 'shouldStop', '(', ')', 'throws', 'InterruptedException', '{', 'statusRequest', '(', '""""', ',', '""""', ',', '""""', ')', ';', 'assertResponse', '(', 'response', ',', '1', ',', '""""', ')', ';', '}']",41,26,6,228,100,16,60.37735849056604,42.857142857142854,,,,-1,-1,-1,-1,False
L75_shouldReturnMultipleStrategies_1.txt,code2vec,METHOD_NAME,token_wrong,0.3357,0.3429,16.3792,15.2579,"{'n_total': 346, 'n_valid': 41, 'n_correct': 26}",122.567172,"@Test public void shouldReturnMultipleStrategies() { CoreTokenConfig config = mock(CoreTokenConfig.class); given(config.isTokenEncrypted()).willReturn(true); given(config.isTokenCompressed()).willReturn(true); Collection<BlobStrategy> strategies = factory.getStrategies(config); assertThat(strategies).contains(compression, encryption); }",void shouldReturnMultipleStrategies(){(config()).willReturn();(config);Collection<BlobStrategy>strategies=getStrategies(config).contains(encryption);},"['@', 'Test', 'public', 'void', 'shouldReturnMultipleStrategies', '(', ')', '{', 'CoreTokenConfig', 'config', '=', 'mock', '(', 'CoreTokenConfig', '.', 'class', ')', ';', 'given', '(', 'config', '.', 'isTokenEncrypted', '(', ')', ')', '.', 'willReturn', '(', 'true', ')', ';', 'given', '(', 'config', '.', 'isTokenCompressed', '(', ')', ')', '.', 'willReturn', '(', 'true', ')', ';', 'Collection', '<', 'BlobStrategy', '>', 'strategies', '=', 'factory', '.', 'getStrategies', '(', 'config', ')', ';', 'assertThat', '(', 'strategies', ')', '.', 'contains', '(', 'compression', ',', 'encryption', ')', ';', '}']","['void', 'shouldReturnMultipleStrategies', '(', ')', '{', '(', 'config', '(', ')', ')', '.', 'willReturn', '(', ')', ';', '(', 'config', ')', ';', 'Collection', '<', 'BlobStrategy', '>', 'strategies', '=', 'getStrategies', '(', 'config', ')', '.', 'contains', '(', 'encryption', ')', ';', '}']",72,36,6,338,150,36,62.251655629139066,54.54545454545454,,,,-1,-1,-1,-1,False
L76_setEncryptedAttribute_1.txt,code2vec,METHOD_NAME,token_wrong,0.6404,0.5118,16.6644,19.4989,"{'n_total': 241, 'n_valid': 27, 'n_correct': 23}",82.818567,"@Override public void setEncryptedAttribute(List value) throws SAML2Exception { if (!mutable) { throw new SAML2Exception(SAML2SDKUtils.bundle.getString(""objectImmutable"")); } encAttrs = value; }","void setEncryptedAttribute(List value)throws SAML{if(mutable){(SAML(""""));}}","['@', 'Override', 'public', 'void', 'setEncryptedAttribute', '(', 'List', 'value', ')', 'throws', 'SAML2Exception', '{', 'if', '(', '!', 'mutable', ')', '{', 'throw', 'new', 'SAML2Exception', '(', 'SAML2SDKUtils', '.', 'bundle', '.', 'getString', '(', '""objectImmutable""', ')', ')', ';', '}', 'encAttrs', '=', 'value', ';', '}']","['void', 'setEncryptedAttribute', '(', 'List', 'value', ')', 'throws', 'SAML', '{', 'if', '(', 'mutable', ')', '{', '(', 'SAML', '(', '""""', ')', ')', ';', '}', '}']",38,23,6,194,75,27,71.25748502994011,46.875,,,,-1,-1,-1,-1,False
L77_getGeneratorsForStage_1.txt,code2vec,METHOD_NAME,token_wrong,0.7518,0.6428,19.7745,17.136,"{'n_total': 351, 'n_valid': 29, 'n_correct': 28}",83.583285,public ImmutableCollection<IGenerator> getGeneratorsForStage(GeneratorStage stage) { ArrayList<IGenerator> out = new ArrayList<IGenerator>(); for (IGenerator generator : this.generators.values()) { if (generator.getStage() == stage) { out.add(generator); } } return ImmutableList.copyOf(out); },ImmutableCollection<IGenerator>getGeneratorsForStage(GeneratorStage stage){ArrayList=new ArrayList<>();for(IGenerator generator:values()){if(generator){(generator);}}},"['public', 'ImmutableCollection', '<', 'IGenerator', '>', 'getGeneratorsForStage', '(', 'GeneratorStage', 'stage', ')', '{', 'ArrayList', '<', 'IGenerator', '>', 'out', '=', 'new', 'ArrayList', '<', 'IGenerator', '>', '(', ')', ';', 'for', '(', 'IGenerator', 'generator', ':', 'this', '.', 'generators', '.', 'values', '(', ')', ')', '{', 'if', '(', 'generator', '.', 'getStage', '(', ')', '==', 'stage', ')', '{', 'out', '.', 'add', '(', 'generator', ')', ';', '}', '}', 'return', 'ImmutableList', '.', 'copyOf', '(', 'out', ')', ';', '}']","['ImmutableCollection', '<', 'IGenerator', '>', 'getGeneratorsForStage', '(', 'GeneratorStage', 'stage', ')', '{', 'ArrayList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'IGenerator', 'generator', ':', 'values', '(', ')', ')', '{', 'if', '(', 'generator', ')', '{', '(', 'generator', ')', ';', '}', '}', '}']",68,41,6,294,167,27,47.565543071161045,43.54838709677419,,,,-1,-1,-1,-1,False
L78_fireGameEvent_1.txt,code2vec,METHOD_NAME,token_wrong,0.4367,0.5988,23.4196,23.742,"{'n_total': 118, 'n_valid': 15, 'n_correct': 12}",41.276956,@Override public void fireGameEvent(GameEvent gameEvent) { if (ignoreEvents()) { return; } super.fireGameEvent(gameEvent); getGameEvents().add(gameEvent); },void fireGameEvent(GameEvent gameEvent){if(ignoreEvents())add();},"['@', 'Override', 'public', 'void', 'fireGameEvent', '(', 'GameEvent', 'gameEvent', ')', '{', 'if', '(', 'ignoreEvents', '(', ')', ')', '{', 'return', ';', '}', 'super', '.', 'fireGameEvent', '(', 'gameEvent', ')', ';', 'getGameEvents', '(', ')', '.', 'add', '(', 'gameEvent', ')', ';', '}']","['void', 'fireGameEvent', '(', 'GameEvent', 'gameEvent', ')', '{', 'if', '(', 'ignoreEvents', '(', ')', ')', 'add', '(', ')', ';', '}']",37,18,6,156,65,19,66.42335766423358,61.29032258064516,,,,-1,-1,-1,-1,False
L79_getPluginSchema_1.txt,code2vec,METHOD_NAME,token_wrong,0.1714,0.3497,15.7142,15.2221,"{'n_total': 286, 'n_valid': 41, 'n_correct': 20}",122.665178,"public PluginSchema getPluginSchema(String pluginSchemaName, String interfaceName, String orgName) throws SMSException { SMSEntry.validateToken(token); validate(); return (new PluginSchema(token, serviceName, version, pluginSchemaName, interfaceName, orgName)); }","PluginSchema getPluginSchema(String interfaceName,String orgName){(token);validatereturn(PluginSchema(version,orgName));}","['public', 'PluginSchema', 'getPluginSchema', '(', 'String', 'pluginSchemaName', ',', 'String', 'interfaceName', ',', 'String', 'orgName', ')', 'throws', 'SMSException', '{', 'SMSEntry', '.', 'validateToken', '(', 'token', ')', ';', 'validate', '(', ')', ';', 'return', '(', 'new', 'PluginSchema', '(', 'token', ',', 'serviceName', ',', 'version', ',', 'pluginSchemaName', ',', 'interfaceName', ',', 'orgName', ')', ')', ';', '}']","['PluginSchema', 'getPluginSchema', '(', 'String', 'interfaceName', ',', 'String', 'orgName', ')', '{', '(', 'token', ')', ';', 'validatereturn', '(', 'PluginSchema', '(', 'version', ',', 'orgName', ')', ')', ';', '}']",47,25,6,263,121,21,58.67768595041323,53.65853658536586,,,,-1,-1,-1,-1,False
L80_getStems_1.txt,code2vec,METHOD_NAME,token_wrong,0.2679,0.2859,20.1412,19.9054,"{'n_total': 232, 'n_valid': 27, 'n_correct': 18}",84.19066,"public void getStems(String word) { List<String> stems = wstem.findStems(word, null); for (String s : stems) { System.out.println(s); } }","void getStems(String word){List<String>stems=wstem.findStems(word,null);for(String s:stems){System.out.println();}}","['public', 'void', 'getStems', '(', 'String', 'word', ')', '{', 'List', '<', 'String', '>', 'stems', '=', 'wstem', '.', 'findStems', '(', 'word', ',', 'null', ')', ';', 'for', '(', 'String', 's', ':', 'stems', ')', '{', 'System', '.', 'out', '.', 'println', '(', 's', ')', ';', '}', '}']","['void', 'getStems', '(', 'String', 'word', ')', '{', 'List', '<', 'String', '>', 'stems', '=', 'wstem', '.', 'findStems', '(', 'word', ',', 'null', ')', ';', 'for', '(', 'String', 's', ':', 'stems', ')', '{', 'System', '.', 'out', '.', 'println', '(', ')', ';', '}', '}']",42,40,6,137,115,14,17.88617886178862,5.555555555555555,,,,-1,-1,-1,-1,False
L81_registerInitialization_1.txt,code2vec,METHOD_NAME,token_wrong,0.578,0.2972,17.7672,16.6456,"{'n_total': 223, 'n_valid': 32, 'n_correct': 17}",87.980374,private void registerInitialization() { registerOnRequest(CheckpointManager.RegisterStMgrRequest.newBuilder()); registerOnRequest(CheckpointManager.RegisterTMasterRequest.newBuilder()); registerOnRequest(CheckpointManager.SaveInstanceStateRequest.newBuilder()); registerOnRequest(CheckpointManager.GetInstanceStateRequest.newBuilder()); registerOnRequest(CheckpointManager.CleanStatefulCheckpointRequest.newBuilder()); },void registerInitialization(){registerOnRequest();(newBuilder());registerOnRequest(CheckpointManager.CleanStatefulCheckpointRequest.newBuilder());},"['private', 'void', 'registerInitialization', '(', ')', '{', 'registerOnRequest', '(', 'CheckpointManager', '.', 'RegisterStMgrRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'RegisterTMasterRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'SaveInstanceStateRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'GetInstanceStateRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'CleanStatefulCheckpointRequest', '.', 'newBuilder', '(', ')', ')', ';', '}']","['void', 'registerInitialization', '(', ')', '{', 'registerOnRequest', '(', ')', ';', '(', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'CleanStatefulCheckpointRequest', '.', 'newBuilder', '(', ')', ')', ';', '}']",62,27,6,420,147,28,69.64285714285714,62.5,,,,-1,-1,-1,-1,False
L82_buildClickIntent_1.txt,code2vec,METHOD_NAME,token_wrong,0.4931,0.7351,19.1028,17.0307,"{'n_total': 282, 'n_valid': 31, 'n_correct': 27}",87.223465,"protected Intent buildClickIntent(long taskId, String accountType) { Intent clickIntent = new Intent(Intent.ACTION_VIEW); clickIntent.setData(ContentUris.withAppendedId(Tasks.getContentUri(mAuthority), taskId)); clickIntent.putExtra(EditTaskActivity.EXTRA_DATA_ACCOUNT_TYPE, accountType); return clickIntent; }","Intent buildClickIntent(long taskId,String accountType){clickIntent=(VIEW)(withAppendedId());(EditTaskActivity);}","['protected', 'Intent', 'buildClickIntent', '(', 'long', 'taskId', ',', 'String', 'accountType', ')', '{', 'Intent', 'clickIntent', '=', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ')', ';', 'clickIntent', '.', 'setData', '(', 'ContentUris', '.', 'withAppendedId', '(', 'Tasks', '.', 'getContentUri', '(', 'mAuthority', ')', ',', 'taskId', ')', ')', ';', 'clickIntent', '.', 'putExtra', '(', 'EditTaskActivity', '.', 'EXTRA_DATA_ACCOUNT_TYPE', ',', 'accountType', ')', ';', 'return', 'clickIntent', ';', '}']","['Intent', 'buildClickIntent', '(', 'long', 'taskId', ',', 'String', 'accountType', ')', '{', 'clickIntent', '=', '(', 'VIEW', ')', '(', 'withAppendedId', '(', ')', ')', ';', '(', 'EditTaskActivity', ')', ';', '}']",56,26,6,310,113,22,68.40277777777779,60.0,,,,-1,-1,-1,-1,False
L83_forwardTo_1.txt,code2vec,METHOD_NAME,token_wrong,0.7118,0.6601,1.2803,12.7192,"{'n_total': 178, 'n_valid': 18, 'n_correct': 16}",51.819765,public void forwardTo(RequestContext reqContext) throws NavigationException { String tmp = (String) getPageSessionAttribute(AMAdminConstants.CURRENT_REALM); AuthPropertiesModel m = (AuthPropertiesModel) getModel(); m.setCurrentRealm(tmp); removePageSessionAttribute(AUTH_INSTANCE_TABLE); removePageSessionAttribute(AUTH_CONFIG_TABLE); super.forwardTo(reqContext); },void forwardTo(RequestContext reqContext){String=(String)(AMAdminConstants)(reqContext);},"['public', 'void', 'forwardTo', '(', 'RequestContext', 'reqContext', ')', 'throws', 'NavigationException', '{', 'String', 'tmp', '=', '(', 'String', ')', 'getPageSessionAttribute', '(', 'AMAdminConstants', '.', 'CURRENT_REALM', ')', ';', 'AuthPropertiesModel', 'm', '=', '(', 'AuthPropertiesModel', ')', 'getModel', '(', ')', ';', 'm', '.', 'setCurrentRealm', '(', 'tmp', ')', ';', 'removePageSessionAttribute', '(', 'AUTH_INSTANCE_TABLE', ')', ';', 'removePageSessionAttribute', '(', 'AUTH_CONFIG_TABLE', ')', ';', 'super', '.', 'forwardTo', '(', 'reqContext', ')', ';', '}']","['void', 'forwardTo', '(', 'RequestContext', 'reqContext', ')', '{', 'String', '=', '(', 'String', ')', '(', 'AMAdminConstants', ')', '(', 'reqContext', ')', ';', '}']",58,20,6,365,89,15,78.85714285714286,73.07692307692307,,,,-1,-1,-1,-1,False
L84_writeParameters_1.txt,code2vec,METHOD_NAME,token_wrong,0.2094,0.2478,9.1454,10.4524,"{'n_total': 264, 'n_valid': 35, 'n_correct': 21}",100.355947,public void writeParameters(File parameterFile) throws IOException { if (dmrParameters != null) { PrintStream out = new PrintStream(parameterFile); dmrParameters.print(out); out.close(); } },void writeParameters(File parameterFile){if(dmrParameters){out=newPrintStream();dmrParameters.print(out);close();}},"['public', 'void', 'writeParameters', '(', 'File', 'parameterFile', ')', 'throws', 'IOException', '{', 'if', '(', 'dmrParameters', '!=', 'null', ')', '{', 'PrintStream', 'out', '=', 'new', 'PrintStream', '(', 'parameterFile', ')', ';', 'dmrParameters', '.', 'print', '(', 'out', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', '}']","['void', 'writeParameters', '(', 'File', 'parameterFile', ')', '{', 'if', '(', 'dmrParameters', ')', '{', 'out', '=', 'newPrintStream', '(', ')', ';', 'dmrParameters', '.', 'print', '(', 'out', ')', ';', 'close', '(', ')', ';', '}', '}']",41,31,6,190,115,21,44.37869822485207,28.57142857142857,,,,-1,-1,-1,-1,False
L85_addHit_1.txt,code2vec,METHOD_NAME,token_wrong,0.1756,0.2669,8.3398,11.3887,"{'n_total': 672, 'n_valid': 105, 'n_correct': 62}",313.375099,"void addHit(long networkTime, long domProcessing, long pageRendering) { if (networkTime < 0 || networkTime > ABERRANT_VALUE || domProcessing < 0 || domProcessing > ABERRANT_VALUE || pageRendering < 0 || pageRendering > ABERRANT_VALUE) { return; } networkTimeSum += networkTime; domProcessingSum += domProcessing; pageRenderingSum += pageRendering; hits++; }","void addHit(long networkTime,long domProcessing,long pageRendering){if(0|pageRendering){}networkTimeSum+=domProcessingSum=domProcessing;pageRenderingSum+=hits++;}","['void', 'addHit', '(', 'long', 'networkTime', ',', 'long', 'domProcessing', ',', 'long', 'pageRendering', ')', '{', 'if', '(', 'networkTime', '<', '0', '||', 'networkTime', '>', 'ABERRANT_VALUE', '||', 'domProcessing', '<', '0', '||', 'domProcessing', '>', 'ABERRANT_VALUE', '||', 'pageRendering', '<', '0', '||', 'pageRendering', '>', 'ABERRANT_VALUE', ')', '{', 'return', ';', '}', 'networkTimeSum', '+=', 'networkTime', ';', 'domProcessingSum', '+=', 'domProcessing', ';', 'pageRenderingSum', '+=', 'pageRendering', ';', 'hits', '++', ';', '}']","['void', 'addHit', '(', 'long', 'networkTime', ',', 'long', 'domProcessing', ',', 'long', 'pageRendering', ')', '{', 'if', '(', '0', '|', 'pageRendering', ')', '{', '}', 'networkTimeSum', '+=', 'domProcessingSum', '=', 'domProcessing', ';', 'pageRenderingSum', '+=', 'hits', '++', ';', '}']",59,33,6,357,162,12,56.52173913043478,49.056603773584904,,,,-1,-1,-1,-1,False
L86_rtrim_1.txt,code2vec,METHOD_NAME,token_wrong,0.2606,0.2245,4.3399,4.6566,"{'n_total': 374, 'n_valid': 47, 'n_correct': 27}",135.146844,"public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }","void rtrim(){index=length();while((0)&(text.charAt(1)<=' ')){}text=text.substring(0,index);}","['public', 'void', 'rtrim', '(', ')', '{', 'int', 'index', '=', 'text', '.', 'length', '(', ')', ';', 'while', '(', '(', 'index', '>', '0', ')', '&&', '(', 'text', '.', 'charAt', '(', 'index', '-', '1', ')', '<=', ""' '"", ')', ')', '{', 'index', '--', ';', '}', 'text', '=', 'text', '.', 'substring', '(', '0', ',', 'index', ')', ';', '}']","['void', 'rtrim', '(', ')', '{', 'index', '=', 'length', '(', ')', ';', 'while', '(', '(', '0', ')', '&', '(', 'text', '.', 'charAt', '(', '1', ')', '<=', ""' '"", ')', ')', '{', '}', 'text', '=', 'text', '.', 'substring', '(', '0', ',', 'index', ')', ';', '}']",53,42,6,151,92,11,42.142857142857146,23.404255319148938,,,,-1,-1,-1,-1,False
L87_previousSnake_1.txt,code2vec,METHOD_NAME,token_wrong,0.2072,0.2861,16.9427,19.5593,"{'n_total': 182, 'n_valid': 28, 'n_correct': 18}",84.246181,public final PathNode previousSnake() { if (isBootstrap()) return null; if (!isSnake() && prev != null) return prev.previousSnake(); return this; },PathNode previousSnake(){if(isBootstrap())return null;(null);},"['public', 'final', 'PathNode', 'previousSnake', '(', ')', '{', 'if', '(', 'isBootstrap', '(', ')', ')', 'return', 'null', ';', 'if', '(', '!', 'isSnake', '(', ')', '&&', 'prev', '!=', 'null', ')', 'return', 'prev', '.', 'previousSnake', '(', ')', ';', 'return', 'this', ';', '}']","['PathNode', 'previousSnake', '(', ')', '{', 'if', '(', 'isBootstrap', '(', ')', ')', 'return', 'null', ';', '(', 'null', ')', ';', '}']",38,19,6,147,62,19,66.40625,59.375,,,,-1,-1,-1,-1,False
L88_element_1.txt,code2vec,METHOD_NAME,token_wrong,0.26,0.2691,12.9227,18.0499,"{'n_total': 540, 'n_valid': 59, 'n_correct': 48}",169.002078,"@Override public void element(final Element element, final Context context, final BugList bugs) { if (element.getName().equals(CF.CFCOMPONENT)) { final String name = context.getComponentName(); final String nameAttribute = element.getAttributeValue(CF.NAME); if (nameAttribute != null) { didYouMeanDisplayName(name, element.getSource().getRow(element.getBegin()), context.offset() + element.getBegin(), context, bugs); } } }","@Override void element(Context context,BugList bugs){if((CFCOMPONENT)){name();(CF);if(nameAttribute){(bugs);}}}","['@', 'Override', 'public', 'void', 'element', '(', 'final', 'Element', 'element', ',', 'final', 'Context', 'context', ',', 'final', 'BugList', 'bugs', ')', '{', 'if', '(', 'element', '.', 'getName', '(', ')', '.', 'equals', '(', 'CF', '.', 'CFCOMPONENT', ')', ')', '{', 'final', 'String', 'name', '=', 'context', '.', 'getComponentName', '(', ')', ';', 'final', 'String', 'nameAttribute', '=', 'element', '.', 'getAttributeValue', '(', 'CF', '.', 'NAME', ')', ';', 'if', '(', 'nameAttribute', '!=', 'null', ')', '{', 'didYouMeanDisplayName', '(', 'name', ',', 'element', '.', 'getSource', '(', ')', '.', 'getRow', '(', 'element', '.', 'getBegin', '(', ')', ')', ',', 'context', '.', 'offset', '(', ')', '+', 'element', '.', 'getBegin', '(', ')', ',', 'context', ',', 'bugs', ')', ';', '}', '}', '}']","['@', 'Override', 'void', 'element', '(', 'Context', 'context', ',', 'BugList', 'bugs', ')', '{', 'if', '(', '(', 'CFCOMPONENT', ')', ')', '{', 'name', '(', ')', ';', '(', 'CF', ')', ';', 'if', '(', 'nameAttribute', ')', '{', '(', 'bugs', ')', ';', '}', '}', '}']",104,39,6,424,111,13,76.15571776155717,66.3265306122449,,,,-1,-1,-1,-1,False
L89_trim_1.txt,code2vec,METHOD_NAME,token_wrong,0.5895,0.2743,3.8276,5.0979,"{'n_total': 265, 'n_valid': 33, 'n_correct': 16}",101.814142,"private static int[] trim(int[] a, int length) { int[] result = new int[length]; System.arraycopy(a, 0, result, 0, result.length); return result; }","int[]trim(int[]a,int length){newint[length];System.arraycopy(a,0,result);return result;}","['private', 'static', 'int', '[', ']', 'trim', '(', 'int', '[', ']', 'a', ',', 'int', 'length', ')', '{', 'int', '[', ']', 'result', '=', 'new', 'int', '[', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'a', ',', '0', ',', 'result', ',', '0', ',', 'result', '.', 'length', ')', ';', 'return', 'result', ';', '}']","['int', '[', ']', 'trim', '(', 'int', '[', ']', 'a', ',', 'int', 'length', ')', '{', 'newint', '[', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'a', ',', '0', ',', 'result', ')', ';', 'return', 'result', ';', '}']",48,34,6,147,88,10,43.06569343065693,33.33333333333333,,,,-1,-1,-1,-1,False
L90_convertReferenceUrl_1.txt,code2vec,METHOD_NAME,token_wrong,0.4316,0.24,18.3486,18.4357,"{'n_total': 308, 'n_valid': 55, 'n_correct': 24}",162.620073,protected String convertReferenceUrl(String url) { Reference ref = EntityManager.newReference(url); if (ref.isKnownType()) { String refUrl = ref.getUrl(); if (refUrl != null) { return refUrl; } } return url; },String convertReferenceUrl(String url){Referenceref=EntityManager();if(ref.isKnownType()){if(null){return refUrl;}}return url;},"['protected', 'String', 'convertReferenceUrl', '(', 'String', 'url', ')', '{', 'Reference', 'ref', '=', 'EntityManager', '.', 'newReference', '(', 'url', ')', ';', 'if', '(', 'ref', '.', 'isKnownType', '(', ')', ')', '{', 'String', 'refUrl', '=', 'ref', '.', 'getUrl', '(', ')', ';', 'if', '(', 'refUrl', '!=', 'null', ')', '{', 'return', 'refUrl', ';', '}', '}', 'return', 'url', ';', '}']","['String', 'convertReferenceUrl', '(', 'String', 'url', ')', '{', 'Referenceref', '=', 'EntityManager', '(', ')', ';', 'if', '(', 'ref', '.', 'isKnownType', '(', ')', ')', '{', 'if', '(', 'null', ')', '{', 'return', 'refUrl', ';', '}', '}', 'return', 'url', ';', '}']",52,36,6,209,127,25,44.565217391304344,34.78260869565217,,,,-1,-1,-1,-1,False
L91_setBigDecimal_1.txt,code2vec,METHOD_NAME,token_wrong,0.2751,0.3047,1.9886,2.2916,"{'n_total': 426, 'n_valid': 52, 'n_correct': 23}",159.347567,"@Override public void setBigDecimal(final int parameterIndex, final BigDecimal x) throws SQLException { ParameterCallback callback = new ParameterCallbackAction(parameterIndex, x) { @Override public void call(PreparedStatement preparedStatement) throws SQLException { preparedStatement.setBigDecimal(parameterIndex(), (BigDecimal) getParameter()); } }; addParameterCallback(callback); }","@Override void setBigDecimal(BigDecimal x)throws SQLException{ParameterCallback callback=new ParameterCallbackAction(parameterIndex,x){@Override void call(PreparedStatement preparedStatement)throws SQLException{preparedStatement.setBigDecimal(parameterIndex(),(BigDecimal)getParameter());}};(callback);}","['@', 'Override', 'public', 'void', 'setBigDecimal', '(', 'final', 'int', 'parameterIndex', ',', 'final', 'BigDecimal', 'x', ')', 'throws', 'SQLException', '{', 'ParameterCallback', 'callback', '=', 'new', 'ParameterCallbackAction', '(', 'parameterIndex', ',', 'x', ')', '{', '@', 'Override', 'public', 'void', 'call', '(', 'PreparedStatement', 'preparedStatement', ')', 'throws', 'SQLException', '{', 'preparedStatement', '.', 'setBigDecimal', '(', 'parameterIndex', '(', ')', ',', '(', 'BigDecimal', ')', 'getParameter', '(', ')', ')', ';', '}', '}', ';', 'addParameterCallback', '(', 'callback', ')', ';', '}']","['@', 'Override', 'void', 'setBigDecimal', '(', 'BigDecimal', 'x', ')', 'throws', 'SQLException', '{', 'ParameterCallback', 'callback', '=', 'new', 'ParameterCallbackAction', '(', 'parameterIndex', ',', 'x', ')', '{', '@', 'Override', 'void', 'call', '(', 'PreparedStatement', 'preparedStatement', ')', 'throws', 'SQLException', '{', 'preparedStatement', '.', 'setBigDecimal', '(', 'parameterIndex', '(', ')', ',', '(', 'BigDecimal', ')', 'getParameter', '(', ')', ')', ';', '}', '}', ';', '(', 'callback', ')', ';', '}']",65,57,6,386,303,19,22.615803814713896,13.559322033898304,,,,-1,-1,-1,-1,False
L92_testFetchCommand_1.txt,code2vec,METHOD_NAME,token_wrong,0.9012,0.886,20.2902,20.9139,"{'n_total': 397, 'n_valid': 47, 'n_correct': 39}",129.463925,"@Test public void testFetchCommand() throws URISyntaxException { final String expectedFetchCommand = ""/opt/heron/heron-core/bin/heron-downloader https://heron/topology.tar.gz .""; Config mockConfig = Mockito.mock(Config.class); Mockito.when(mockConfig.getStringValue(Key.DOWNLOADER_BINARY)).thenReturn(""/opt/heron/heron-core/bin/heron-downloader""); Config mockRuntimeConfig = Mockito.mock(Config.class); Mockito.when(mockRuntimeConfig.get(Key.TOPOLOGY_PACKAGE_URI)).thenReturn(new URI(""https://heron/topology.tar.gz"")); Assert.assertEquals(expectedFetchCommand, KubernetesUtils.getFetchCommand(mockConfig, mockRuntimeConfig)); }","void testFetchCommand(){expectedFetchCommand="""".mock("""");(Config).when((Key));(expectedFetchCommand(mockConfig,mockRuntimeConfig));}","['@', 'Test', 'public', 'void', 'testFetchCommand', '(', ')', 'throws', 'URISyntaxException', '{', 'final', 'String', 'expectedFetchCommand', '=', '""/opt/heron/heron-core/bin/heron-downloader https://heron/topology.tar.gz .""', ';', 'Config', 'mockConfig', '=', 'Mockito', '.', 'mock', '(', 'Config', '.', 'class', ')', ';', 'Mockito', '.', 'when', '(', 'mockConfig', '.', 'getStringValue', '(', 'Key', '.', 'DOWNLOADER_BINARY', ')', ')', '.', 'thenReturn', '(', '""/opt/heron/heron-core/bin/heron-downloader""', ')', ';', 'Config', 'mockRuntimeConfig', '=', 'Mockito', '.', 'mock', '(', 'Config', '.', 'class', ')', ';', 'Mockito', '.', 'when', '(', 'mockRuntimeConfig', '.', 'get', '(', 'Key', '.', 'TOPOLOGY_PACKAGE_URI', ')', ')', '.', 'thenReturn', '(', 'new', 'URI', '(', '""https://heron/topology.tar.gz""', ')', ')', ';', 'Assert', '.', 'assertEquals', '(', 'expectedFetchCommand', ',', 'KubernetesUtils', '.', 'getFetchCommand', '(', 'mockConfig', ',', 'mockRuntimeConfig', ')', ')', ';', '}']","['void', 'testFetchCommand', '(', ')', '{', 'expectedFetchCommand', '=', '""""', '.', 'mock', '(', '""""', ')', ';', '(', 'Config', ')', '.', 'when', '(', '(', 'Key', ')', ')', ';', '(', 'expectedFetchCommand', '(', 'mockConfig', ',', 'mockRuntimeConfig', ')', ')', ';', '}']",99,35,6,627,132,22,81.81818181818183,68.81720430107528,,,,-1,-1,-1,-1,False
L93_fromString_1.txt,code2vec,METHOD_NAME,token_wrong,0.5225,0.1744,11.398,13.5101,"{'n_total': 366, 'n_valid': 40, 'n_correct': 27}",114.827078,"public static GradeFields fromString(String field) { try { return GradeFields.valueOf(field); } catch (Exception ex) { log.info(""Gradebook: Could not find the export field : "" + field); return GradeFields.valueOf(""novalue""); } }","GradeFields fromString(String field){try{(field);}catch(Exception ex){log.info(""""+field);GradeFields(""novalue"");}}","['public', 'static', 'GradeFields', 'fromString', '(', 'String', 'field', ')', '{', 'try', '{', 'return', 'GradeFields', '.', 'valueOf', '(', 'field', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'info', '(', '""Gradebook: Could not find the export field : ""', '+', 'field', ')', ';', 'return', 'GradeFields', '.', 'valueOf', '(', '""novalue""', ')', ';', '}', '}']","['GradeFields', 'fromString', '(', 'String', 'field', ')', '{', 'try', '{', '(', 'field', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'info', '(', '""""', '+', 'field', ')', ';', 'GradeFields', '(', '""novalue""', ')', ';', '}', '}']",45,36,6,228,114,16,53.77358490566038,23.076923076923077,,,,-1,-1,-1,-1,False
L94_processPattern_1.txt,code2vec,METHOD_NAME,token_wrong,0.5029,0.272,13.6746,14.1651,"{'n_total': 765, 'n_valid': 89, 'n_correct': 57}",270.392582,"private void processPattern() { String[] p = this.value.split("",""); this.vars = new String[p.length]; this.size = ((((p[0]).trim()).equals("""")) ? 0 : p.length); for (int i = 0; i < this.size; i++) { this.vars[i] = (p[i]).trim(); } }","void processPattern(){String[]p=("""");vars=String[length];thissize=((((p[0])).equals(""""))?0:length);for(;;i++){this[i]=(p[i]).trim();}}","['private', 'void', 'processPattern', '(', ')', '{', 'String', '[', ']', 'p', '=', 'this', '.', 'value', '.', 'split', '(', '"",""', ')', ';', 'this', '.', 'vars', '=', 'new', 'String', '[', 'p', '.', 'length', ']', ';', 'this', '.', 'size', '=', '(', '(', '(', '(', 'p', '[', '0', ']', ')', '.', 'trim', '(', ')', ')', '.', 'equals', '(', '""""', ')', ')', '?', '0', ':', 'p', '.', 'length', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'this', '.', 'size', ';', 'i', '++', ')', '{', 'this', '.', 'vars', '[', 'i', ']', '=', '(', 'p', '[', 'i', ']', ')', '.', 'trim', '(', ')', ';', '}', '}']","['void', 'processPattern', '(', ')', '{', 'String', '[', ']', 'p', '=', '(', '""""', ')', ';', 'vars', '=', 'String', '[', 'length', ']', ';', 'thissize', '=', '(', '(', '(', '(', 'p', '[', '0', ']', ')', ')', '.', 'equals', '(', '""""', ')', ')', '?', '0', ':', 'length', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'this', '[', 'i', ']', '=', '(', 'p', '[', 'i', ']', ')', '.', 'trim', '(', ')', ';', '}', '}']",101,71,6,232,134,20,46.22641509433962,31.57894736842105,,,,-1,-1,-1,-1,False
L95_execute_1.txt,code2vec,METHOD_NAME,token_wrong,0.2063,0.2269,6.3327,6.7635,"{'n_total': 479, 'n_valid': 63, 'n_correct': 40}",188.441642,"public void execute(Writer writer, MacroParameter params) throws IllegalArgumentException, IOException { if (params.getLength() == 1) { AsinServices.getInstance().appendUrl(writer, params.get(""0"")); return; } else { log.warn(""needs an ASIN number as argument""); throw new IllegalArgumentException(Messages.getString(""AsinMacro.4"")); } }","void execute(Writer writer,MacroParameter params)throws IllegalArgumentException,IOException{if(getLength){AsinServices.appendUrl(writer,params.get(""0""));}{("""");((""""));}}","['public', 'void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'if', '(', 'params', '.', 'getLength', '(', ')', '==', '1', ')', '{', 'AsinServices', '.', 'getInstance', '(', ')', '.', 'appendUrl', '(', 'writer', ',', 'params', '.', 'get', '(', '""0""', ')', ')', ';', 'return', ';', '}', 'else', '{', 'log', '.', 'warn', '(', '""needs an ASIN number as argument""', ')', ';', 'throw', 'new', 'IllegalArgumentException', '(', 'Messages', '.', 'getString', '(', '""AsinMacro.4""', ')', ')', ';', '}', '}']","['void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'if', '(', 'getLength', ')', '{', 'AsinServices', '.', 'appendUrl', '(', 'writer', ',', 'params', '.', 'get', '(', '""0""', ')', ')', ';', '}', '{', '(', '""""', ')', ';', '(', '(', '""""', ')', ')', ';', '}', '}']",70,47,6,336,170,13,51.39318885448917,35.9375,,,,-1,-1,-1,-1,False
L96_processServerCredentials_1.txt,code2vec,METHOD_NAME,token_wrong,0.9863,0.9903,20.0273,20.8889,"{'n_total': 309, 'n_valid': 27, 'n_correct': 27}",80.73475,public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) || !(serverCredentials instanceof TlsSignerCredentials)) { throw new TlsFatalAlert(AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; },void processServerCredentials(TlsCredentials serverCredentials){if((SRP)){(error);}(serverCredentials);serverCredentials();},"['public', 'void', 'processServerCredentials', '(', 'TlsCredentials', 'serverCredentials', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'keyExchange', '==', 'KeyExchangeAlgorithm', '.', 'SRP', ')', '||', '!', '(', 'serverCredentials', 'instanceof', 'TlsSignerCredentials', ')', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'processServerCertificate', '(', 'serverCredentials', '.', 'getCertificate', '(', ')', ')', ';', 'this', '.', 'serverCredentials', '=', '(', 'TlsSignerCredentials', ')', 'serverCredentials', ';', '}']","['void', 'processServerCredentials', '(', 'TlsCredentials', 'serverCredentials', ')', '{', 'if', '(', '(', 'SRP', ')', ')', '{', '(', 'error', ')', ';', '}', '(', 'serverCredentials', ')', ';', 'serverCredentials', '(', ')', ';', '}']",57,28,6,387,124,30,73.66946778711485,56.86274509803921,,,,-1,-1,-1,-1,False
L97_moveToInsertRow_1.txt,code2vec,METHOD_NAME,token_wrong,0.7155,0.4113,12.403,14.3512,"{'n_total': 192, 'n_valid': 27, 'n_correct': 22}",81.373815,"public void moveToInsertRow() throws SQLException { if (!canBeInserted) throw new SQLException(exceptionInsertMsg); Arrays.fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }",void moveToInsertRow()throws SQLException{if(canBeInserted)fill();notInsertRowPointer();},"['public', 'void', 'moveToInsertRow', '(', ')', 'throws', 'SQLException', '{', 'if', '(', '!', 'canBeInserted', ')', 'throw', 'new', 'SQLException', '(', 'exceptionInsertMsg', ')', ';', 'Arrays', '.', 'fill', '(', 'parameterHolders', ',', 'null', ')', ';', 'state', '=', 'STATE_INSERT', ';', 'notInsertRowPointer', '=', 'getRowPointer', '(', ')', ';', '}']","['void', 'moveToInsertRow', '(', ')', 'throws', 'SQLException', '{', 'if', '(', 'canBeInserted', ')', 'fill', '(', ')', ';', 'notInsertRowPointer', '(', ')', ';', '}']",40,20,6,215,89,21,64.94845360824742,58.82352941176471,,,,-1,-1,-1,-1,False
L98_testNoRequestPayload_1.txt,code2vec,METHOD_NAME,token_wrong,0.5178,0.4863,17.0665,21.8657,"{'n_total': 328, 'n_valid': 33, 'n_correct': 24}",93.056087,"@Test public void testNoRequestPayload() throws Exception { endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse(""Response message created"", context.hasResponse()); }","void testNoRequestPayload()throws Exception{endpoint();DefaultMessageContext(new MockWebServiceMessage(),MockWebServiceMessageFactory()).invoke("""",context);}","['@', 'Test', 'public', 'void', 'testNoRequestPayload', '(', ')', 'throws', 'Exception', '{', 'endpoint', '=', 'createNoRequestPayloadEndpoint', '(', ')', ';', 'MessageContext', 'context', '=', 'new', 'DefaultMessageContext', '(', 'new', 'MockWebServiceMessage', '(', '(', 'StringBuilder', ')', 'null', ')', ',', 'new', 'MockWebServiceMessageFactory', '(', ')', ')', ';', 'endpoint', '.', 'invoke', '(', 'context', ')', ';', 'assertFalse', '(', '""Response message created""', ',', 'context', '.', 'hasResponse', '(', ')', ')', ';', '}']","['void', 'testNoRequestPayload', '(', ')', 'throws', 'Exception', '{', 'endpoint', '(', ')', ';', 'DefaultMessageContext', '(', 'new', 'MockWebServiceMessage', '(', ')', ',', 'MockWebServiceMessageFactory', '(', ')', ')', '.', 'invoke', '(', '""""', ',', 'context', ')', ';', '}']",56,31,6,333,157,26,57.32899022801303,50.0,,,,-1,-1,-1,-1,False
L99_isHelpOptionPresent_1.txt,code2vec,METHOD_NAME,token_wrong,0.1854,0.6191,16.2599,18.7808,"{'n_total': 310, 'n_valid': 39, 'n_correct': 27}",115.599011,private boolean isHelpOptionPresent(OptionSet options) { boolean helpOptionPresent = false; for (AbstractOptionSpec<?> each : recognizedOptions.toJavaUtilMap().values()) { if (each.isForHelp() && options.has(each)) { helpOptionPresent = true; break; } } return helpOptionPresent; },boolean isHelpOptionPresent(OptionSet options){for(AbstractOptionSpec<?>each:recognizedOptions.toJavaUtilMap().values()){if(each){}}},"['private', 'boolean', 'isHelpOptionPresent', '(', 'OptionSet', 'options', ')', '{', 'boolean', 'helpOptionPresent', '=', 'false', ';', 'for', '(', 'AbstractOptionSpec', '<', '?', '>', 'each', ':', 'recognizedOptions', '.', 'toJavaUtilMap', '(', ')', '.', 'values', '(', ')', ')', '{', 'if', '(', 'each', '.', 'isForHelp', '(', ')', '&&', 'options', '.', 'has', '(', 'each', ')', ')', '{', 'helpOptionPresent', '=', 'true', ';', 'break', ';', '}', '}', 'return', 'helpOptionPresent', ';', '}']","['boolean', 'isHelpOptionPresent', '(', 'OptionSet', 'options', ')', '{', 'for', '(', 'AbstractOptionSpec', '<', '?', '>', 'each', ':', 'recognizedOptions', '.', 'toJavaUtilMap', '(', ')', '.', 'values', '(', ')', ')', '{', 'if', '(', 'each', ')', '{', '}', '}', '}']",60,34,6,281,133,25,57.8125,48.148148148148145,,,,-1,-1,-1,-1,False
L100_init_1.txt,code2vec,METHOD_NAME,token_wrong,0.4141,0.6297,4.2348,19.2851,"{'n_total': 193, 'n_valid': 19, 'n_correct': 14}",56.225448,"public void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) { mergeRequestWrapper.init(builder, project); } }",void init(){checkState();for(GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){(builder);}},"['public', 'void', 'init', '(', ')', '{', 'checkState', '(', ')', ';', 'for', '(', 'GitlabMergeRequestWrapper', 'mergeRequestWrapper', ':', 'mergeRequests', '.', 'values', '(', ')', ')', '{', 'mergeRequestWrapper', '.', 'init', '(', 'builder', ',', 'project', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'checkState', '(', ')', ';', 'for', '(', 'GitlabMergeRequestWrapper', 'mergeRequestWrapper', ':', 'mergeRequests', '.', 'values', '(', ')', ')', '{', '(', 'builder', ')', ';', '}', '}']",33,27,6,161,111,10,33.11258278145696,22.22222222222222,,,,-1,-1,-1,-1,False
L101_assertUnParseable_1.txt,code2vec,METHOD_NAME,token_wrong,0.7516,0.9024,18.41,22.3296,"{'n_total': 253, 'n_valid': 26, 'n_correct': 24}",79.974338,"private void assertUnParseable(DynamicLexiconGraph graph, String... words) { WordAnalyzer parser = new WordAnalyzer(graph); for (String word : words) { List<WordAnalysis> results = parser.analyze(word); Assert.assertTrue(""Unexpected parse for:"" + word + "" parse:"" + results, results.size() == 0); } }","void assertUnParseable(DynamicLexiconGraph graph,String words){for(String word:words){analyze();}}","['private', 'void', 'assertUnParseable', '(', 'DynamicLexiconGraph', 'graph', ',', 'String', '...', 'words', ')', '{', 'WordAnalyzer', 'parser', '=', 'new', 'WordAnalyzer', '(', 'graph', ')', ';', 'for', '(', 'String', 'word', ':', 'words', ')', '{', 'List', '<', 'WordAnalysis', '>', 'results', '=', 'parser', '.', 'analyze', '(', 'word', ')', ';', 'Assert', '.', 'assertTrue', '(', '""Unexpected parse for:""', '+', 'word', '+', '"" parse:""', '+', 'results', ',', 'results', '.', 'size', '(', ')', '==', '0', ')', ';', '}', '}']","['void', 'assertUnParseable', '(', 'DynamicLexiconGraph', 'graph', ',', 'String', 'words', ')', '{', 'for', '(', 'String', 'word', ':', 'words', ')', '{', 'analyze', '(', ')', ';', '}', '}']",65,24,6,300,98,23,72.92418772563177,69.49152542372882,,,,-1,-1,-1,-1,False
L102_sufficientSuccess_1.txt,code2vec,METHOD_NAME,token_wrong,0.6322,0.8421,15.8655,16.9387,"{'n_total': 223, 'n_valid': 28, 'n_correct': 25}",78.942967,"@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }",void sufficientSuccess()throws LoginException{whenLoginReturnTrue();verifyLogin(sufficientDelegate);verifyCommit();},"['@', 'Test', 'public', 'void', 'sufficientSuccess', '(', ')', 'throws', 'LoginException', '{', 'whenLoginReturnTrue', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'whenCommitReturnTrue', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'context', '.', 'login', '(', ')', ';', 'verifyInitialize', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyLogin', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyCommit', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyNoMoreInteractions', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ',', 'optionalDelegate', ')', ';', '}']","['void', 'sufficientSuccess', '(', ')', 'throws', 'LoginException', '{', 'whenLoginReturnTrue', '(', ')', ';', 'verifyLogin', '(', 'sufficientDelegate', ')', ';', 'verifyCommit', '(', ')', ';', '}']",73,21,6,554,116,23,82.48587570621469,77.61194029850746,,,,-1,-1,-1,-1,False
L103_initializeDriverThread_1.txt,code2vec,METHOD_NAME,token_wrong,0.8896,0.9295,20.9783,21.9612,"{'n_total': 223, 'n_valid': 30, 'n_correct': 23}",88.579458,"private void initializeDriverThread() { if (mDriverThread == null || mDriverThread.isInterrupted()) { mDriverThread = new Thread(mDriverRunnable, ""GAC Manager Driver Thread""); mDriverThread.start(); } }","void initializeDriverThread(){if(mDriverThread){("""");mDriverThread.start();}}","['private', 'void', 'initializeDriverThread', '(', ')', '{', 'if', '(', 'mDriverThread', '==', 'null', '||', 'mDriverThread', '.', 'isInterrupted', '(', ')', ')', '{', 'mDriverThread', '=', 'new', 'Thread', '(', 'mDriverRunnable', ',', '""GAC Manager Driver Thread""', ')', ';', 'mDriverThread', '.', 'start', '(', ')', ';', '}', '}']","['void', 'initializeDriverThread', '(', ')', '{', 'if', '(', 'mDriverThread', ')', '{', '(', '""""', ')', ';', 'mDriverThread', '.', 'start', '(', ')', ';', '}', '}']",37,22,6,202,77,28,71.83908045977012,48.38709677419355,,,,-1,-1,-1,-1,False
L104_basic_1.txt,code2vec,METHOD_NAME,token_wrong,0.3724,0.6079,9.9642,11.3736,"{'n_total': 400, 'n_valid': 48, 'n_correct': 39}",135.270808,"@Test public void basic() throws Exception { Source requestPayload = new StringSource(""<customerCountRequest xmlns='http://springframework.org/spring-ws'>"" + ""<customerName>John Doe</customerName>"" + ""</customerCountRequest>""); Source expectedResponsePayload = new StringSource(""<customerCountResponse xmlns='http://springframework.org/spring-ws'>"" + ""<customerCount>42</customerCount>"" + ""</customerCountResponse>""); mockClient.sendRequest(withPayload(requestPayload)).andExpect(payload(expectedResponsePayload)); }","void basic()throws Exception{(""""+"""");expectedResponsePayload(""""+"""");sendRequest(withPayload).andExpect(payload());}","['@', 'Test', 'public', 'void', 'basic', '(', ')', 'throws', 'Exception', '{', 'Source', 'requestPayload', '=', 'new', 'StringSource', '(', '""<customerCountRequest xmlns=\'http://springframework.org/spring-ws\'>""', '+', '""<customerName>John Doe</customerName>""', '+', '""</customerCountRequest>""', ')', ';', 'Source', 'expectedResponsePayload', '=', 'new', 'StringSource', '(', '""<customerCountResponse xmlns=\'http://springframework.org/spring-ws\'>""', '+', '""<customerCount>42</customerCount>""', '+', '""</customerCountResponse>""', ')', ';', 'mockClient', '.', 'sendRequest', '(', 'withPayload', '(', 'requestPayload', ')', ')', '.', 'andExpect', '(', 'payload', '(', 'expectedResponsePayload', ')', ')', ';', '}']","['void', 'basic', '(', ')', 'throws', 'Exception', '{', '(', '""""', '+', '""""', ')', ';', 'expectedResponsePayload', '(', '""""', '+', '""""', ')', ';', 'sendRequest', '(', 'withPayload', ')', '.', 'andExpect', '(', 'payload', '(', ')', ')', ';', '}']",55,33,6,516,115,11,79.40594059405942,44.89795918367347,,,,-1,-1,-1,-1,False
L105_openTxnFile_1.txt,code2vec,METHOD_NAME,token_wrong,0.5787,0.3991,21.9966,21.064,"{'n_total': 405, 'n_valid': 41, 'n_correct': 36}",119.851467,"private ReadWriteMemory openTxnFile() { try { if (ff.exists(path.concat(TableUtils.TXN_FILE_NAME).$())) { return new ReadWriteMemory(ff, path, ff.getPageSize()); } throw CairoException.instance(ff.errno()).put(""Cannot append. File does not exist: "").put(path); } finally { path.trimTo(rootLen); } }","ReadWriteMemory openTxnFile(){try{if(((NAME))){(getPageSize());}(errno()).put("""").put();}finally{path.trimTo();}}","['private', 'ReadWriteMemory', 'openTxnFile', '(', ')', '{', 'try', '{', 'if', '(', 'ff', '.', 'exists', '(', 'path', '.', 'concat', '(', 'TableUtils', '.', 'TXN_FILE_NAME', ')', '.', '$', '(', ')', ')', ')', '{', 'return', 'new', 'ReadWriteMemory', '(', 'ff', ',', 'path', ',', 'ff', '.', 'getPageSize', '(', ')', ')', ';', '}', 'throw', 'CairoException', '.', 'instance', '(', 'ff', '.', 'errno', '(', ')', ')', '.', 'put', '(', '""Cannot append. File does not exist: ""', ')', '.', 'put', '(', 'path', ')', ';', '}', 'finally', '{', 'path', '.', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']","['ReadWriteMemory', 'openTxnFile', '(', ')', '{', 'try', '{', 'if', '(', '(', '(', 'NAME', ')', ')', ')', '{', '(', 'getPageSize', '(', ')', ')', ';', '}', '(', 'errno', '(', ')', ')', '.', 'put', '(', '""""', ')', '.', 'put', '(', ')', ';', '}', 'finally', '{', 'path', '.', 'trimTo', '(', ')', ';', '}', '}']",79,49,6,298,113,17,65.83629893238434,41.0958904109589,,,,-1,-1,-1,-1,False
L106_standardHttpTestCase_1.txt,code2vec,METHOD_NAME,token_wrong,0.2758,0.3692,14.9972,14.2747,"{'n_total': 435, 'n_valid': 57, 'n_correct': 35}",162.405255,"private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new CountDownLatch(1); final IoHandler acceptHandler = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }","void standardHttpTestCase(ResourceAddress address){IoHandler acceptHandler=new IoHandlerAdapter<>(){@Override void doSessionOpened(HttpAcceptSession session)throws Exception{(true);}};(acceptHandler);(latch(4,SECONDS));}","['private', 'void', 'standardHttpTestCase', '(', 'ResourceAddress', 'address', ')', 'throws', 'Exception', '{', 'final', 'CountDownLatch', 'latch', '=', 'new', 'CountDownLatch', '(', '1', ')', ';', 'final', 'IoHandler', 'acceptHandler', '=', 'new', 'IoHandlerAdapter', '<', 'HttpAcceptSession', '>', '(', ')', '{', '@', 'Override', 'protected', 'void', 'doSessionOpened', '(', 'HttpAcceptSession', 'session', ')', 'throws', 'Exception', '{', 'latch', '.', 'countDown', '(', ')', ';', 'session', '.', 'close', '(', 'true', ')', ';', '}', '}', ';', 'acceptor', '.', 'bind', '(', 'address', ',', 'acceptHandler', ')', ';', 'k3po', '.', 'finish', '(', ')', ';', 'assertTrue', '(', 'latch', '.', 'await', '(', '4', ',', 'SECONDS', ')', ')', ';', '}']","['void', 'standardHttpTestCase', '(', 'ResourceAddress', 'address', ')', '{', 'IoHandler', 'acceptHandler', '=', 'new', 'IoHandlerAdapter', '<', '>', '(', ')', '{', '@', 'Override', 'void', 'doSessionOpened', '(', 'HttpAcceptSession', 'session', ')', 'throws', 'Exception', '{', '(', 'true', ')', ';', '}', '}', ';', '(', 'acceptHandler', ')', ';', '(', 'latch', '(', '4', ',', 'SECONDS', ')', ')', ';', '}']",88,49,6,430,220,26,51.98019801980198,47.5609756097561,,,,-1,-1,-1,-1,False
L107_packMissionItem_1.txt,code2vec,METHOD_NAME,token_wrong,0.3826,0.3464,16.8405,16.8683,"{'n_total': 368, 'n_valid': 68, 'n_correct': 37}",201.472706,@Override public List<msg_mission_item> packMissionItem() { List<msg_mission_item> list = super.packMissionItem(); msg_mission_item mavMsg = list.get(0); mavMsg.command = MAV_CMD.MAV_CMD_DO_GRIPPER; mavMsg.param2 = release ? GRIPPER_ACTIONS.GRIPPER_ACTION_RELEASE : GRIPPER_ACTIONS.GRIPPER_ACTION_GRAB; return list; },@Override List<item>packMissionItem(){(0);mavMsg.command=CMD=release?GRIPPER:list;},"['@', 'Override', 'public', 'List', '<', 'msg_mission_item', '>', 'packMissionItem', '(', ')', '{', 'List', '<', 'msg_mission_item', '>', 'list', '=', 'super', '.', 'packMissionItem', '(', ')', ';', 'msg_mission_item', 'mavMsg', '=', 'list', '.', 'get', '(', '0', ')', ';', 'mavMsg', '.', 'command', '=', 'MAV_CMD', '.', 'MAV_CMD_DO_GRIPPER', ';', 'mavMsg', '.', 'param2', '=', 'release', '?', 'GRIPPER_ACTIONS', '.', 'GRIPPER_ACTION_RELEASE', ':', 'GRIPPER_ACTIONS', '.', 'GRIPPER_ACTION_GRAB', ';', 'return', 'list', ';', '}']","['@', 'Override', 'List', '<', 'item', '>', 'packMissionItem', '(', ')', '{', '(', '0', ')', ';', 'mavMsg', '.', 'command', '=', 'CMD', '=', 'release', '?', 'GRIPPER', ':', 'list', ';', '}']",59,27,6,317,83,21,79.05405405405406,60.37735849056604,,,,-1,-1,-1,-1,False
L108_getFirstLabel_1.txt,code2vec,METHOD_NAME,token_wrong,0.3535,0.3209,10.3905,11.3122,"{'n_total': 397, 'n_valid': 52, 'n_correct': 31}",149.752445,"public static String getFirstLabel(TextAnnotation s, String label) { List<Constituent> list = s.getView(ViewNames.SHALLOW_PARSE).getConstituents(); String nounPhrase = """"; for (Constituent c : list) { if (c.getLabel().contains(label)) { nounPhrase = c.getSurfaceForm(); } } return nounPhrase; }","String getFirstLabel(TextAnnotation s,String label){List list=getView().getConstituents();for(Constituent c:list){if(c.contains(label)){}}return nounPhrase;}","['public', 'static', 'String', 'getFirstLabel', '(', 'TextAnnotation', 's', ',', 'String', 'label', ')', '{', 'List', '<', 'Constituent', '>', 'list', '=', 's', '.', 'getView', '(', 'ViewNames', '.', 'SHALLOW_PARSE', ')', '.', 'getConstituents', '(', ')', ';', 'String', 'nounPhrase', '=', '""""', ';', 'for', '(', 'Constituent', 'c', ':', 'list', ')', '{', 'if', '(', 'c', '.', 'getLabel', '(', ')', '.', 'contains', '(', 'label', ')', ')', '{', 'nounPhrase', '=', 'c', '.', 'getSurfaceForm', '(', ')', ';', '}', '}', 'return', 'nounPhrase', ';', '}']","['String', 'getFirstLabel', '(', 'TextAnnotation', 's', ',', 'String', 'label', ')', '{', 'List', 'list', '=', 'getView', '(', ')', '.', 'getConstituents', '(', ')', ';', 'for', '(', 'Constituent', 'c', ':', 'list', ')', '{', 'if', '(', 'c', '.', 'contains', '(', 'label', ')', ')', '{', '}', '}', 'return', 'nounPhrase', ';', '}']",72,45,6,294,157,19,49.81818181818182,40.909090909090914,,,,-1,-1,-1,-1,False
L109_getItemGrading_1.txt,code2vec,METHOD_NAME,token_wrong,0.258,0.1504,16.5616,16.4881,"{'n_total': 444, 'n_valid': 53, 'n_correct': 23}",159.801345,"public ItemGradingData getItemGrading(String itemGradingId) { try { return PersistenceService.getInstance().getAssessmentGradingFacadeQueries().getItemGrading(Long.valueOf(itemGradingId)); } catch (Exception e) { log.error(e.getMessage(), e); throw new Error(e); } }",ItemGradingData getItemGrading(String itemGradingId){try{return getAssessmentGradingFacadeQueries().getItemGrading(Long.valueOf());}catch(Exception e){(e);throwError(e);}},"['public', 'ItemGradingData', 'getItemGrading', '(', 'String', 'itemGradingId', ')', '{', 'try', '{', 'return', 'PersistenceService', '.', 'getInstance', '(', ')', '.', 'getAssessmentGradingFacadeQueries', '(', ')', '.', 'getItemGrading', '(', 'Long', '.', 'valueOf', '(', 'itemGradingId', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', '}']","['ItemGradingData', 'getItemGrading', '(', 'String', 'itemGradingId', ')', '{', 'try', '{', 'return', 'getAssessmentGradingFacadeQueries', '(', ')', '.', 'getItemGrading', '(', 'Long', '.', 'valueOf', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', 'throwError', '(', 'e', ')', ';', '}', '}']",60,41,6,266,171,20,38.61788617886179,35.18518518518518,,,,-1,-1,-1,-1,False
L110_submit_1.txt,code2vec,METHOD_NAME,token_wrong,0.5526,0.7421,6.3986,12.6034,"{'n_total': 635, 'n_valid': 51, 'n_correct': 47}",149.947112,"private <R> R submit(final AsyncCallback<R> callback, Class<?> returnClass) { Future future = submit(new Callable() { @Override public R call() throws Exception { return callback.call(); } }); AsyncCallResult result = new AsyncCallResult(returnClass, future, RpcSystemConfig.SYSTEM_PROPERTY_ASYNC_MESSAGE_CALLBACK_TIMEOUT); R asyncProxy = (R) result.getResult(); return asyncProxy; }","<R>R submit(AsyncCallback<R>callback,Class<?>returnClass){(new Callable(){call(){}});result();(R).getResult();}","['private', '<', 'R', '>', 'R', 'submit', '(', 'final', 'AsyncCallback', '<', 'R', '>', 'callback', ',', 'Class', '<', '?', '>', 'returnClass', ')', '{', 'Future', 'future', '=', 'submit', '(', 'new', 'Callable', '(', ')', '{', '@', 'Override', 'public', 'R', 'call', '(', ')', 'throws', 'Exception', '{', 'return', 'callback', '.', 'call', '(', ')', ';', '}', '}', ')', ';', 'AsyncCallResult', 'result', '=', 'new', 'AsyncCallResult', '(', 'returnClass', ',', 'future', ',', 'RpcSystemConfig', '.', 'SYSTEM_PROPERTY_ASYNC_MESSAGE_CALLBACK_TIMEOUT', ')', ';', 'R', 'asyncProxy', '=', '(', 'R', ')', 'result', '.', 'getResult', '(', ')', ';', 'return', 'asyncProxy', ';', '}']","['<', 'R', '>', 'R', 'submit', '(', 'AsyncCallback', '<', 'R', '>', 'callback', ',', 'Class', '<', '?', '>', 'returnClass', ')', '{', '(', 'new', 'Callable', '(', ')', '{', 'call', '(', ')', '{', '}', '}', ')', ';', 'result', '(', ')', ';', '(', 'R', ')', '.', 'getResult', '(', ')', ';', '}']",83,46,6,383,111,12,73.31536388140162,48.05194805194805,,,,-1,-1,-1,-1,False
L111_parse_1.txt,code2vec,METHOD_NAME,token_wrong,0.4246,0.5291,4.4319,7.2035,"{'n_total': 186, 'n_valid': 23, 'n_correct': 17}",66.457425,public static Integer parse(String str) throws NumberFormatException { if (str == null || str.isEmpty()) return null; return Integer.valueOf(str); },Integer parse(String str)throws NumberFormatException{if(isEmpty())(str);},"['public', 'static', 'Integer', 'parse', '(', 'String', 'str', ')', 'throws', 'NumberFormatException', '{', 'if', '(', 'str', '==', 'null', '||', 'str', '.', 'isEmpty', '(', ')', ')', 'return', 'null', ';', 'return', 'Integer', '.', 'valueOf', '(', 'str', ')', ';', '}']","['Integer', 'parse', '(', 'String', 'str', ')', 'throws', 'NumberFormatException', '{', 'if', '(', 'isEmpty', '(', ')', ')', '(', 'str', ')', ';', '}']",35,20,6,148,74,11,54.01459854014598,51.724137931034484,,,,-1,-1,-1,-1,False
L112_memberShow_1.txt,code2vec,METHOD_NAME,token_wrong,0.1946,0.1533,18.0451,18.3621,"{'n_total': 568, 'n_valid': 81, 'n_correct': 39}",223.018727,"@RequestMapping(value = ""/message/member_show"", method = RequestMethod.GET) public String memberShow(Model model) { Member vo = new Member(); vo.setMid(101L); vo.setName(""啊三""); vo.setAge(9); vo.setSalary(99999.99); vo.setBirthday(new Date()); model.addAttribute(""member"", vo); return ""message/member_show""; }","@RequestMapping(value=""membershow"",method=RequestMethod.GET)String memberShow(Model model){setMid();("""");vo.setAge();vo.setBirthday(Date());model.addAttribute("""",vo);"""";}","['@', 'RequestMapping', '(', 'value', '=', '""/message/member_show""', ',', 'method', '=', 'RequestMethod', '.', 'GET', ')', 'public', 'String', 'memberShow', '(', 'Model', 'model', ')', '{', 'Member', 'vo', '=', 'new', 'Member', '(', ')', ';', 'vo', '.', 'setMid', '(', '101L', ')', ';', 'vo', '.', 'setName', '(', '""啊三""', ')', ';', 'vo', '.', 'setAge', '(', '9', ')', ';', 'vo', '.', 'setSalary', '(', '99999.99', ')', ';', 'vo', '.', 'setBirthday', '(', 'new', 'Date', '(', ')', ')', ';', 'model', '.', 'addAttribute', '(', '""member""', ',', 'vo', ')', ';', 'return', '""message/member_show""', ';', '}']","['@', 'RequestMapping', '(', 'value', '=', '""membershow""', ',', 'method', '=', 'RequestMethod', '.', 'GET', ')', 'String', 'memberShow', '(', 'Model', 'model', ')', '{', 'setMid', '(', ')', ';', '(', '""""', ')', ';', 'vo', '.', 'setAge', '(', ')', ';', 'vo', '.', 'setBirthday', '(', 'Date', '(', ')', ')', ';', 'model', '.', 'addAttribute', '(', '""""', ',', 'vo', ')', ';', '""""', ';', '}']",80,55,6,308,170,16,47.26027397260274,33.78378378378378,,,,-1,-1,-1,-1,False
L113_equals_1.txt,code2vec,METHOD_NAME,token_wrong,0.407,0.2128,1.4671,4.145,"{'n_total': 357, 'n_valid': 52, 'n_correct': 35}",149.140973,"public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(""Cannot compare a Label object with a "" + l.getClass().getName() + "" object.""); }","boolean equals(){if(l){return((Label)).compareTo()==0;}(""""+"""");}","['public', 'boolean', 'equals', '(', 'Object', 'l', ')', '{', 'if', '(', 'l', 'instanceof', 'Label', ')', '{', 'return', '(', '(', 'Label', ')', 'l', ')', '.', 'compareTo', '(', 'this', ')', '==', '0', ';', '}', 'else', 'throw', 'new', 'IllegalArgumentException', '(', '""Cannot compare a Label object with a ""', '+', 'l', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '"" object.""', ')', ';', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'l', ')', '{', 'return', '(', '(', 'Label', ')', ')', '.', 'compareTo', '(', ')', '==', '0', ';', '}', '(', '""""', '+', '""""', ')', ';', '}']",52,31,6,224,64,12,75.47169811320755,45.65217391304348,,,,-1,-1,-1,-1,False
L114_decodeToolState_1.txt,code2vec,METHOD_NAME,token_wrong,0.368,0.8122,16.9615,18.2165,"{'n_total': 226, 'n_valid': 22, 'n_correct': 20}",70.811738,"public String decodeToolState(Map<String, String[]> params, String placementId) { String attrname = computeToolStateParameterName(placementId); String[] attrval = params.get(attrname); return attrval == null ? null : attrval[0]; }",String decodeToolState(Map<String>params){(attrname);return null?null:attrval[0];},"['public', 'String', 'decodeToolState', '(', 'Map', '<', 'String', ',', 'String', '[', ']', '>', 'params', ',', 'String', 'placementId', ')', '{', 'String', 'attrname', '=', 'computeToolStateParameterName', '(', 'placementId', ')', ';', 'String', '[', ']', 'attrval', '=', 'params', '.', 'get', '(', 'attrname', ')', ';', 'return', 'attrval', '==', 'null', '?', 'null', ':', 'attrval', '[', '0', ']', ';', '}']","['String', 'decodeToolState', '(', 'Map', '<', 'String', '>', 'params', ')', '{', '(', 'attrname', ')', ';', 'return', 'null', '?', 'null', ':', 'attrval', '[', '0', ']', ';', '}']",51,25,6,230,82,21,70.81339712918661,57.77777777777777,,,,-1,-1,-1,-1,False
L115_testParagraphTest_1.txt,code2vec,METHOD_NAME,token_wrong,0.4371,0.513,17.9931,17.4538,"{'n_total': 481, 'n_valid': 49, 'n_correct': 43}",138.389171,"public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance(); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(""Some <b class=\""bold\"">Simple</b> Content"", engine.render(""Some __Simple__ Content"", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(""\n <p class=\""paragraph\"">Some</p>\n <p class=\""paragraph\""> <b class=\""bold\"">Simple</b> Content</p>"", engine.render(""Some\n\n __Simple__ Content"", context)); }","void testParagraphTest(){EngineManager();(MockWikiRenderEngine());assertEquals("""",(""""));(MockWikiRenderEngine());assertEquals("""",engine.render("""",context));}","['public', 'void', 'testParagraphTest', '(', ')', '{', 'RenderEngine', 'engine', '=', 'EngineManager', '.', 'getInstance', '(', ')', ';', 'context', '.', 'setRenderEngine', '(', 'new', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""Some <b class=\\""bold\\"">Simple</b> Content""', ',', 'engine', '.', 'render', '(', '""Some __Simple__ Content""', ',', 'context', ')', ')', ';', 'context', '.', 'setRenderEngine', '(', 'new', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""\\n <p class=\\""paragraph\\"">Some</p>\\n <p class=\\""paragraph\\""> <b class=\\""bold\\"">Simple</b> Content</p>""', ',', 'engine', '.', 'render', '(', '""Some\\n\\n __Simple__ Content""', ',', 'context', ')', ')', ';', '}']","['void', 'testParagraphTest', '(', ')', '{', 'EngineManager', '(', ')', ';', '(', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', '(', '""""', ')', ')', ';', '(', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'engine', '.', 'render', '(', '""""', ',', 'context', ')', ')', ';', '}']",64,45,6,476,157,23,70.41942604856513,32.758620689655174,,,,-1,-1,-1,-1,False
L116_processPreparedValues_1.txt,code2vec,METHOD_NAME,token_wrong,0.3159,0.1901,17.7492,17.8879,"{'n_total': 402, 'n_valid': 44, 'n_correct': 25}",126.663396,"private void processPreparedValues(StatementContext context) { Statement statement = context.getStatementWrapper(); if (statement instanceof PreparedStatement) { for (BatchItem batchItem : context.getBaches()) { this.setResolveColumnValues(batchItem, batchItem.getAnalyzeResult()); } } }","void processPreparedValues(StatementContext context){if(statement instanceof PreparedStatement){for(BatchItem batchItem:context()){this.setResolveColumnValues(batchItem,batchItem.getAnalyzeResult);}}}","['private', 'void', 'processPreparedValues', '(', 'StatementContext', 'context', ')', '{', 'Statement', 'statement', '=', 'context', '.', 'getStatementWrapper', '(', ')', ';', 'if', '(', 'statement', 'instanceof', 'PreparedStatement', ')', '{', 'for', '(', 'BatchItem', 'batchItem', ':', 'context', '.', 'getBaches', '(', ')', ')', '{', 'this', '.', 'setResolveColumnValues', '(', 'batchItem', ',', 'batchItem', '.', 'getAnalyzeResult', '(', ')', ')', ';', '}', '}', '}']","['void', 'processPreparedValues', '(', 'StatementContext', 'context', ')', '{', 'if', '(', 'statement', 'instanceof', 'PreparedStatement', ')', '{', 'for', '(', 'BatchItem', 'batchItem', ':', 'context', '(', ')', ')', '{', 'this', '.', 'setResolveColumnValues', '(', 'batchItem', ',', 'batchItem', '.', 'getAnalyzeResult', ')', ';', '}', '}', '}']",52,38,6,287,200,27,33.46153846153846,30.434782608695656,,,,-1,-1,-1,-1,False
L117_validateThenCloseCursor_1.txt,code2vec,METHOD_NAME,token_wrong,0.9674,0.6288,17.8818,16.6039,"{'n_total': 252, 'n_valid': 22, 'n_correct': 21}",68.612462,"static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(""This cursor is null. Did you make sure to register your ContentProvider in the manifest?"", valueCursor); assertTrue(""Empty cursor returned. "" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }","void validateThenCloseCursor(String error,Cursor valueCursor,ContentValues expectedValues){(""""+moveToFirst());validateCurrentRecord();close();}","['static', 'void', 'validateThenCloseCursor', '(', 'String', 'error', ',', 'Cursor', 'valueCursor', ',', 'ContentValues', 'expectedValues', ')', '{', 'assertNotNull', '(', '""This cursor is null. Did you make sure to register your ContentProvider in the manifest?""', ',', 'valueCursor', ')', ';', 'assertTrue', '(', '""Empty cursor returned. ""', '+', 'error', ',', 'valueCursor', '.', 'moveToFirst', '(', ')', ')', ';', 'validateCurrentRecord', '(', 'error', ',', 'valueCursor', ',', 'expectedValues', ')', ';', 'valueCursor', '.', 'close', '(', ')', ';', '}']","['void', 'validateThenCloseCursor', '(', 'String', 'error', ',', 'Cursor', 'valueCursor', ',', 'ContentValues', 'expectedValues', ')', '{', '(', '""""', '+', 'moveToFirst', '(', ')', ')', ';', 'validateCurrentRecord', '(', ')', ';', 'close', '(', ')', ';', '}']",50,30,6,377,143,29,67.24137931034483,45.45454545454545,,,,-1,-1,-1,-1,False
L118_formatHighLows_1.txt,code2vec,METHOD_NAME,token_wrong,0.3695,0.207,16.3081,16.9737,"{'n_total': 350, 'n_valid': 57, 'n_correct': 28}",163.99534,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){long formattedHigh=formatTemperature();String highLowStr=""""+highLowStr;}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'formattedHigh', '=', 'formatTemperature', '(', ')', ';', 'String', 'highLowStr', '=', '""""', '+', 'highLowStr', ';', '}']",68,28,6,356,134,20,66.07142857142857,64.51612903225806,,,,-1,-1,-1,-1,False
L119_lookup_1.txt,code2vec,METHOD_NAME,token_wrong,0.2566,0.658,14.2875,18.0274,"{'n_total': 293, 'n_valid': 38, 'n_correct': 27}",115.856697,public ServiceRegistration lookup(URI serviceURI) { ServiceAuthority serviceAuthority = entries.get(serviceURI.getAuthority()); if (serviceAuthority != null) { ServiceRegistration serviceRegistration = serviceAuthority.lookup(serviceURI); return serviceRegistration; } return null; },ServiceRegistration lookup(URI serviceURI){serviceAuthority();if(serviceAuthority){}},"['public', 'ServiceRegistration', 'lookup', '(', 'URI', 'serviceURI', ')', '{', 'ServiceAuthority', 'serviceAuthority', '=', 'entries', '.', 'get', '(', 'serviceURI', '.', 'getAuthority', '(', ')', ')', ';', 'if', '(', 'serviceAuthority', '!=', 'null', ')', '{', 'ServiceRegistration', 'serviceRegistration', '=', 'serviceAuthority', '.', 'lookup', '(', 'serviceURI', ')', ';', 'return', 'serviceRegistration', ';', '}', 'return', 'null', ';', '}']","['ServiceRegistration', 'lookup', '(', 'URI', 'serviceURI', ')', '{', 'serviceAuthority', '(', ')', ';', 'if', '(', 'serviceAuthority', ')', '{', '}', '}']",47,18,6,283,85,12,73.06273062730627,70.73170731707317,,,,-1,-1,-1,-1,False
L120_checkStatus_1.txt,code2vec,METHOD_NAME,token_wrong,0.4047,0.439,2.913,5.8707,"{'n_total': 351, 'n_valid': 46, 'n_correct': 28}",138.460352,"@Override public void checkStatus(Server server, String status) throws CheckException { if (server.getStatus().name().equalsIgnoreCase(status)) { throw new CheckException(""Error : Server "" + server.getName() + "" is already "" + status + ""ED""); } }","@Override void checkStatus(Server server,String status)throws CheckException{if((status)){CheckException(""Error""+"""");}}","['@', 'Override', 'public', 'void', 'checkStatus', '(', 'Server', 'server', ',', 'String', 'status', ')', 'throws', 'CheckException', '{', 'if', '(', 'server', '.', 'getStatus', '(', ')', '.', 'name', '(', ')', '.', 'equalsIgnoreCase', '(', 'status', ')', ')', '{', 'throw', 'new', 'CheckException', '(', '""Error : Server ""', '+', 'server', '.', 'getName', '(', ')', '+', '"" is already ""', '+', 'status', '+', '""ED""', ')', ';', '}', '}']","['@', 'Override', 'void', 'checkStatus', '(', 'Server', 'server', ',', 'String', 'status', ')', 'throws', 'CheckException', '{', 'if', '(', '(', 'status', ')', ')', '{', 'CheckException', '(', '""Error""', '+', '""""', ')', ';', '}', '}']",54,30,6,246,119,17,55.45851528384279,50.0,,,,-1,-1,-1,-1,False
L121_unloadClient_1.txt,code2vec,METHOD_NAME,token_wrong,0.9503,0.9061,24.1273,20.2761,"{'n_total': 134, 'n_valid': 16, 'n_correct': 12}",45.894688,private void unloadClient(String clientType) { loadedInternalClients.remove(clientType); loadedExternalClients.remove(clientType); loadedClientsMap.remove(clientType); },void unloadClient(String clientType){loadedInternalClients.remove();},"['private', 'void', 'unloadClient', '(', 'String', 'clientType', ')', '{', 'loadedInternalClients', '.', 'remove', '(', 'clientType', ')', ';', 'loadedExternalClients', '.', 'remove', '(', 'clientType', ')', ';', 'loadedClientsMap', '.', 'remove', '(', 'clientType', ')', ';', '}']","['void', 'unloadClient', '(', 'String', 'clientType', ')', '{', 'loadedInternalClients', '.', 'remove', '(', ')', ';', '}']",30,14,6,169,69,18,66.22516556291392,66.66666666666666,,,,-1,-1,-1,-1,False
L122_deleteConfigFile_1.txt,code2vec,METHOD_NAME,token_wrong,0.3838,0.894,20.2873,23.019,"{'n_total': 111, 'n_valid': 14, 'n_correct': 10}",39.00336,@After public void deleteConfigFile() { if (configFile != null) { configFile.delete(); } },@After void deleteConfigFile(){if(null){}},"['@', 'After', 'public', 'void', 'deleteConfigFile', '(', ')', '{', 'if', '(', 'configFile', '!=', 'null', ')', '{', 'configFile', '.', 'delete', '(', ')', ';', '}', '}']","['@', 'After', 'void', 'deleteConfigFile', '(', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",23,14,6,90,42,22,70.58823529411765,52.94117647058824,,,,-1,-1,-1,-1,False
L123_nameOf_1.txt,code2vec,METHOD_NAME,token_wrong,0.5847,0.2742,10.8734,10.149,"{'n_total': 255, 'n_valid': 33, 'n_correct': 22}",93.688385,"public static String nameOf(int columnType) { final int index = typeNameMap.keyIndex(columnType); if (index > -1) { return ""unknown""; } return typeNameMap.valueAt(index); }","String nameOf(int columnType){int index=typeNameMap();if(index){"""";}return(index);}","['public', 'static', 'String', 'nameOf', '(', 'int', 'columnType', ')', '{', 'final', 'int', 'index', '=', 'typeNameMap', '.', 'keyIndex', '(', 'columnType', ')', ';', 'if', '(', 'index', '>', '-', '1', ')', '{', 'return', '""unknown""', ';', '}', 'return', 'typeNameMap', '.', 'valueAt', '(', 'index', ')', ';', '}']","['String', 'nameOf', '(', 'int', 'columnType', ')', '{', 'int', 'index', '=', 'typeNameMap', '(', ')', ';', 'if', '(', 'index', ')', '{', '""""', ';', '}', 'return', '(', 'index', ')', ';', '}']",41,28,6,172,83,12,55.625,37.142857142857146,,,,-1,-1,-1,-1,False
L124_initializeSession_1.txt,code2vec,METHOD_NAME,token_wrong,0.5141,0.6766,7.2556,7.8689,"{'n_total': 200, 'n_valid': 22, 'n_correct': 17}",62.513886,"@Override public void initializeSession(IoSession session, ConnectFuture future) { HttpConnectSession connectSession = (HttpConnectSession) session; connectSession.setMethod(HttpMethod.GET); connectSession.addWriteHeader(HttpHeaders.HEADER_HOST, ""localhost:8000""); }","void initializeSession(IoSession session,ConnectFuture future){(GET);connectSession.addWriteHeader("""");}","['@', 'Override', 'public', 'void', 'initializeSession', '(', 'IoSession', 'session', ',', 'ConnectFuture', 'future', ')', '{', 'HttpConnectSession', 'connectSession', '=', '(', 'HttpConnectSession', ')', 'session', ';', 'connectSession', '.', 'setMethod', '(', 'HttpMethod', '.', 'GET', ')', ';', 'connectSession', '.', 'addWriteHeader', '(', 'HttpHeaders', '.', 'HEADER_HOST', ',', '""localhost:8000""', ')', ';', '}']","['void', 'initializeSession', '(', 'IoSession', 'session', ',', 'ConnectFuture', 'future', ')', '{', '(', 'GET', ')', ';', 'connectSession', '.', 'addWriteHeader', '(', '""""', ')', ';', '}']",42,22,6,266,104,23,66.66666666666666,55.55555555555556,,,,-1,-1,-1,-1,False
L125_setLocationDetails_1.txt,code2vec,METHOD_NAME,token_wrong,0.9563,0.4821,21.9603,18.7442,"{'n_total': 252, 'n_valid': 29, 'n_correct': 24}",85.844827,"public static void setLocationDetails(Context context, double lat, double lon) { SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context); SharedPreferences.Editor editor = sp.edit(); editor.putLong(PREF_COORD_LAT, Double.doubleToRawLongBits(lat)); editor.putLong(PREF_COORD_LONG, Double.doubleToRawLongBits(lon)); editor.apply(); }",void setLocationDetails(double lon){(doubleToRawLongBits());putLong(PREF());apply();},"['public', 'static', 'void', 'setLocationDetails', '(', 'Context', 'context', ',', 'double', 'lat', ',', 'double', 'lon', ')', '{', 'SharedPreferences', 'sp', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'context', ')', ';', 'SharedPreferences', '.', 'Editor', 'editor', '=', 'sp', '.', 'edit', '(', ')', ';', 'editor', '.', 'putLong', '(', 'PREF_COORD_LAT', ',', 'Double', '.', 'doubleToRawLongBits', '(', 'lat', ')', ')', ';', 'editor', '.', 'putLong', '(', 'PREF_COORD_LONG', ',', 'Double', '.', 'doubleToRawLongBits', '(', 'lon', ')', ')', ';', 'editor', '.', 'apply', '(', ')', ';', '}']","['void', 'setLocationDetails', '(', 'double', 'lon', ')', '{', '(', 'doubleToRawLongBits', '(', ')', ')', ';', 'putLong', '(', 'PREF', '(', ')', ')', ';', 'apply', '(', ')', ';', '}']",71,25,6,353,85,24,81.45896656534954,70.76923076923077,,,,-1,-1,-1,-1,False
L126_sendCalibrationAckMessage_1.txt,code2vec,METHOD_NAME,token_wrong,0.3476,0.3798,16.0397,16.0372,"{'n_total': 240, 'n_valid': 65, 'n_correct': 25}",179.249216,"public static void sendCalibrationAckMessage(MavLinkDrone drone, int count) { msg_command_ack msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }",void sendCalibrationAckMessage(MavLinkDrone count){msg.command=msg;drone.getMavClient();},"['public', 'static', 'void', 'sendCalibrationAckMessage', '(', 'MavLinkDrone', 'drone', ',', 'int', 'count', ')', '{', 'msg_command_ack', 'msg', '=', 'new', 'msg_command_ack', '(', ')', ';', 'msg', '.', 'command', '=', 'count', ';', 'msg', '.', 'result', '=', 'MAV_CMD_ACK', '.', 'MAV_CMD_ACK_OK', ';', 'drone', '.', 'getMavClient', '(', ')', '.', 'sendMessage', '(', 'msg', ',', 'null', ')', ';', '}']","['void', 'sendCalibrationAckMessage', '(', 'MavLinkDrone', 'count', ')', '{', 'msg', '.', 'command', '=', 'msg', ';', 'drone', '.', 'getMavClient', '(', ')', ';', '}']",48,20,6,231,89,31,71.0,66.66666666666666,,,,-1,-1,-1,-1,False
L127_visit_1.txt,code2vec,METHOD_NAME,token_wrong,0.6192,0.6888,10.6202,12.3431,"{'n_total': 165, 'n_valid': 18, 'n_correct': 18}",52.806029,"public ModuleMetricsVisitor visit(String moduleName, String methodName) { try { enter(); return visitCriticalSection(moduleName, methodName); } finally { exit(); } }","ModuleMetricsVisitor visit(String moduleName,String methodName){try{(methodName);}finally{}}","['public', 'ModuleMetricsVisitor', 'visit', '(', 'String', 'moduleName', ',', 'String', 'methodName', ')', '{', 'try', '{', 'enter', '(', ')', ';', 'return', 'visitCriticalSection', '(', 'moduleName', ',', 'methodName', ')', ';', '}', 'finally', '{', 'exit', '(', ')', ';', '}', '}']","['ModuleMetricsVisitor', 'visit', '(', 'String', 'moduleName', ',', 'String', 'methodName', ')', '{', 'try', '{', '(', 'methodName', ')', ';', '}', 'finally', '{', '}', '}']",34,21,6,165,92,11,47.4025974025974,46.42857142857143,,,,-1,-1,-1,-1,False
L128_equals_2.txt,code2vec,METHOD_NAME,token_wrong,0.5522,0.203,3.3207,5.6121,"{'n_total': 224, 'n_valid': 41, 'n_correct': 18}",123.461565,"public static boolean equals(final Object a, final Object b) { if (a == null) { return b == null; } else { return a.equals(b); } }",boolean equals(){if(anull){return b==null;}else{return a.equals(b);}},"['public', 'static', 'boolean', 'equals', '(', 'final', 'Object', 'a', ',', 'final', 'Object', 'b', ')', '{', 'if', '(', 'a', '==', 'null', ')', '{', 'return', 'b', '==', 'null', ';', '}', 'else', '{', 'return', 'a', '.', 'equals', '(', 'b', ')', ';', '}', '}']","['boolean', 'equals', '(', ')', '{', 'if', '(', 'anull', ')', '{', 'return', 'b', '==', 'null', ';', '}', 'else', '{', 'return', 'a', '.', 'equals', '(', 'b', ')', ';', '}', '}']",39,28,6,130,69,12,51.69491525423729,33.33333333333333,,,,-1,-1,-1,-1,False
L129_parsers_1.txt,code2vec,METHOD_NAME,token_wrong,0.8804,0.697,10.1761,7.5115,"{'n_total': 380, 'n_valid': 30, 'n_correct': 27}",89.902119,"@Parameterized.Parameters public static Collection<?> parsers() { return asList(new Object[] { new OptionParser() { { posixlyCorrect(true); accepts(""i"").withRequiredArg(); accepts(""j"").withOptionalArg(); accepts(""k""); } } }, new Object[] { new OptionParser(""+i:j::k"") }); }","Collection parsers(){asList(new Object[]{new OptionParser(){{("""");}}},new Object[]{OptionParser(""+"")});}","['@', 'Parameterized', '.', 'Parameters', 'public', 'static', 'Collection', '<', '?', '>', 'parsers', '(', ')', '{', 'return', 'asList', '(', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', ')', '{', '{', 'posixlyCorrect', '(', 'true', ')', ';', 'accepts', '(', '""i""', ')', '.', 'withRequiredArg', '(', ')', ';', 'accepts', '(', '""j""', ')', '.', 'withOptionalArg', '(', ')', ';', 'accepts', '(', '""k""', ')', ';', '}', '}', '}', ',', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', '""+i:j::k""', ')', '}', ')', ';', '}']","['Collection', 'parsers', '(', ')', '{', 'asList', '(', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', ')', '{', '{', '(', '""""', ')', ';', '}', '}', '}', ',', 'new', 'Object', '[', ']', '{', 'OptionParser', '(', '""+""', ')', '}', ')', ';', '}']",74,39,6,273,104,13,65.0,51.470588235294116,,,,-1,-1,-1,-1,False
L130_fromParams_1.txt,code2vec,METHOD_NAME,token_wrong,0.608,0.7796,19.471,19.2296,"{'n_total': 447, 'n_valid': 34, 'n_correct': 32}",101.440689,"@Override public QueryParams fromParams(Class<?> rootType, QuerySpec querySpec) { QueryParams params = new QueryParams(); applyIncludedFields(querySpec, params); applySorting(querySpec, params); applyRelatedFields(querySpec, params); applyPaging(querySpec, params); applyFiltering(querySpec, params); params.setGrouping(new TypedParams<>(Collections.unmodifiableMap(new HashMap<String, GroupingParams>()))); return params; }","QueryParams fromParams(Class<?>rootType,QuerySpec querySpec){(params);applyFiltering(querySpec,new TypedParams<>((new HashMap<>())));}","['@', 'Override', 'public', 'QueryParams', 'fromParams', '(', 'Class', '<', '?', '>', 'rootType', ',', 'QuerySpec', 'querySpec', ')', '{', 'QueryParams', 'params', '=', 'new', 'QueryParams', '(', ')', ';', 'applyIncludedFields', '(', 'querySpec', ',', 'params', ')', ';', 'applySorting', '(', 'querySpec', ',', 'params', ')', ';', 'applyRelatedFields', '(', 'querySpec', ',', 'params', ')', ';', 'applyPaging', '(', 'querySpec', ',', 'params', ')', ';', 'applyFiltering', '(', 'querySpec', ',', 'params', ')', ';', 'params', '.', 'setGrouping', '(', 'new', 'TypedParams', '<', '>', '(', 'Collections', '.', 'unmodifiableMap', '(', 'new', 'HashMap', '<', 'String', ',', 'GroupingParams', '>', '(', ')', ')', ')', ')', ';', 'return', 'params', ';', '}']","['QueryParams', 'fromParams', '(', 'Class', '<', '?', '>', 'rootType', ',', 'QuerySpec', 'querySpec', ')', '{', '(', 'params', ')', ';', 'applyFiltering', '(', 'querySpec', ',', 'new', 'TypedParams', '<', '>', '(', '(', 'new', 'HashMap', '<', '>', '(', ')', ')', ')', ')', ';', '}']",89,38,6,424,134,16,71.07843137254902,61.44578313253012,,,,-1,-1,-1,-1,False
L131_scoresAugmented_1.txt,code2vec,METHOD_NAME,token_wrong,0.4583,0.2398,16.1747,17.764,"{'n_total': 276, 'n_valid': 39, 'n_correct': 20}",110.784287,"public edu.illinois.cs.cogcomp.lbjava.classify.ScoreSet scoresAugmented(java.lang.Object a0, edu.illinois.cs.cogcomp.lbjava.classify.ScoreSet a1) { if (isClone) { loadInstance(); return instance.scoresAugmented(a0, a1); } return super.scoresAugmented(a0, a1); }","lbjava.classify.ScoreSet scoresAugmented(java.lang.ScoreSet a){if(isClone){loadInstance();}scoresAugmented(a,a);}","['public', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'classify', '.', 'ScoreSet', 'scoresAugmented', '(', 'java', '.', 'lang', '.', 'Object', 'a0', ',', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'classify', '.', 'ScoreSet', 'a1', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'instance', '.', 'scoresAugmented', '(', 'a0', ',', 'a1', ')', ';', '}', 'return', 'super', '.', 'scoresAugmented', '(', 'a0', ',', 'a1', ')', ';', '}']","['lbjava', '.', 'classify', '.', 'ScoreSet', 'scoresAugmented', '(', 'java', '.', 'lang', '.', 'ScoreSet', 'a', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', '}', 'scoresAugmented', '(', 'a', ',', 'a', ')', ';', '}']",70,33,6,261,113,21,61.66666666666667,57.8125,,,,-1,-1,-1,-1,False
L132_ungradeStudentPageComments_1.txt,code2vec,METHOD_NAME,token_wrong,0.5434,0.4591,16.0196,15.9363,"{'n_total': 374, 'n_valid': 42, 'n_correct': 28}",130.414613,private void ungradeStudentPageComments(SimplePageItem pageItem) { List<SimpleStudentPage> pages = simplePageToolDao.findStudentPages(pageItem.getId()); for (SimpleStudentPage c : pages) { SimplePageItem comments = findItem(c.getCommentsSection()); comments.setGradebookId(null); comments.setGradebookPoints(null); update(comments); } },void ungradeStudentPageComments(SimplePageItem pageItem){List<SimpleStudentPage>pages=(getId());for(SimpleStudentPage c:pages){comments();comments.setGradebookPoints(null);}},"['private', 'void', 'ungradeStudentPageComments', '(', 'SimplePageItem', 'pageItem', ')', '{', 'List', '<', 'SimpleStudentPage', '>', 'pages', '=', 'simplePageToolDao', '.', 'findStudentPages', '(', 'pageItem', '.', 'getId', '(', ')', ')', ';', 'for', '(', 'SimpleStudentPage', 'c', ':', 'pages', ')', '{', 'SimplePageItem', 'comments', '=', 'findItem', '(', 'c', '.', 'getCommentsSection', '(', ')', ')', ';', 'comments', '.', 'setGradebookId', '(', 'null', ')', ';', 'comments', '.', 'setGradebookPoints', '(', 'null', ')', ';', 'update', '(', 'comments', ')', ';', '}', '}']","['void', 'ungradeStudentPageComments', '(', 'SimplePageItem', 'pageItem', ')', '{', 'List', '<', 'SimpleStudentPage', '>', 'pages', '=', '(', 'getId', '(', ')', ')', ';', 'for', '(', 'SimpleStudentPage', 'c', ':', 'pages', ')', '{', 'comments', '(', ')', ';', 'comments', '.', 'setGradebookPoints', '(', 'null', ')', ';', '}', '}']",66,40,6,336,174,32,53.289473684210535,43.333333333333336,,,,-1,-1,-1,-1,False
L133_encodePlaintext_1.txt,code2vec,METHOD_NAME,token_wrong,0.954,0.9262,20.3766,20.9406,"{'n_total': 569, 'n_valid': 51, 'n_correct': 46}",148.131413,"public byte[] encodePlaintext(long seqNo, short type, byte[] plaintext, int offset, int len) { if (usesNonce) { updateIV(encryptCipher, true, seqNo); } byte[] outBuf = new byte[len + writeMac.getSize()]; encryptCipher.processBytes(plaintext, offset, len, outBuf, 0); byte[] mac = writeMac.calculateMac(seqNo, type, plaintext, offset, len); encryptCipher.processBytes(mac, 0, mac.length, outBuf, len); return outBuf; }","byte[]encodePlaintext(long[]plaintext,int len){if(usesNonce){updateIV();}outBuf[getSize()];encryptCipher();(seqNo);}","['public', 'byte', '[', ']', 'encodePlaintext', '(', 'long', 'seqNo', ',', 'short', 'type', ',', 'byte', '[', ']', 'plaintext', ',', 'int', 'offset', ',', 'int', 'len', ')', '{', 'if', '(', 'usesNonce', ')', '{', 'updateIV', '(', 'encryptCipher', ',', 'true', ',', 'seqNo', ')', ';', '}', 'byte', '[', ']', 'outBuf', '=', 'new', 'byte', '[', 'len', '+', 'writeMac', '.', 'getSize', '(', ')', ']', ';', 'encryptCipher', '.', 'processBytes', '(', 'plaintext', ',', 'offset', ',', 'len', ',', 'outBuf', ',', '0', ')', ';', 'byte', '[', ']', 'mac', '=', 'writeMac', '.', 'calculateMac', '(', 'seqNo', ',', 'type', ',', 'plaintext', ',', 'offset', ',', 'len', ')', ';', 'encryptCipher', '.', 'processBytes', '(', 'mac', ',', '0', ',', 'mac', '.', 'length', ',', 'outBuf', ',', 'len', ')', ';', 'return', 'outBuf', ';', '}']","['byte', '[', ']', 'encodePlaintext', '(', 'long', '[', ']', 'plaintext', ',', 'int', 'len', ')', '{', 'if', '(', 'usesNonce', ')', '{', 'updateIV', '(', ')', ';', '}', 'outBuf', '[', 'getSize', '(', ')', ']', ';', 'encryptCipher', '(', ')', ';', '(', 'seqNo', ')', ';', '}']",112,40,6,417,116,21,76.01010101010101,67.9245283018868,,,,-1,-1,-1,-1,False
L134_isThisItemDistractor_1.txt,code2vec,METHOD_NAME,token_wrong,0.3103,0.3364,17.1123,18.1663,"{'n_total': 344, 'n_valid': 38, 'n_correct': 24}",107.652139,"private boolean isThisItemDistractor(ItemDataIfc item, ItemGradingData thisItemGradingData) { for (ItemTextIfc curItem : item.getItemTextArraySorted()) { if (isDistractor(curItem) && curItem.getId().equals(thisItemGradingData.getPublishedItemTextId())) { return true; } } return false; }","boolean isThisItemDistractor(ItemDataIfc item,ItemGradingData thisItemGradingData){for(ItemTextIfc curItem:item()){if((curItem)&&curItem.getId().equals()){}}}","['private', 'boolean', 'isThisItemDistractor', '(', 'ItemDataIfc', 'item', ',', 'ItemGradingData', 'thisItemGradingData', ')', '{', 'for', '(', 'ItemTextIfc', 'curItem', ':', 'item', '.', 'getItemTextArraySorted', '(', ')', ')', '{', 'if', '(', 'isDistractor', '(', 'curItem', ')', '&&', 'curItem', '.', 'getId', '(', ')', '.', 'equals', '(', 'thisItemGradingData', '.', 'getPublishedItemTextId', '(', ')', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'isThisItemDistractor', '(', 'ItemDataIfc', 'item', ',', 'ItemGradingData', 'thisItemGradingData', ')', '{', 'for', '(', 'ItemTextIfc', 'curItem', ':', 'item', '(', ')', ')', '{', 'if', '(', '(', 'curItem', ')', '&&', 'curItem', '.', 'getId', '(', ')', '.', 'equals', '(', ')', ')', '{', '}', '}', '}']",55,40,6,287,158,26,49.42528735632184,30.612244897959183,,,,-1,-1,-1,-1,False
L135_endElement_1.txt,code2vec,METHOD_NAME,token_wrong,0.7137,0.6685,4.8668,4.6301,"{'n_total': 217, 'n_valid': 38, 'n_correct': 20}",105.839503,"public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print(""</""); out.print(name); out.print('>'); println(); if (out.checkError()) throw new IOException(); }","void endElement(String name){out(""</"");IOException();}","['public', 'void', 'endElement', '(', 'String', 'name', ')', 'throws', 'IOException', '{', 'offset', '-=', 'OFFSET_INCREMENT', ';', 'indent', '(', ')', ';', 'out', '.', 'print', '(', '""</""', ')', ';', 'out', '.', 'print', '(', 'name', ')', ';', 'out', '.', 'print', '(', ""'>'"", ')', ';', 'println', '(', ')', ';', 'if', '(', 'out', '.', 'checkError', '(', ')', ')', 'throw', 'new', 'IOException', '(', ')', ';', '}']","['void', 'endElement', '(', 'String', 'name', ')', '{', 'out', '(', '""</""', ')', ';', 'IOException', '(', ')', ';', '}']",58,17,6,204,54,16,79.7872340425532,78.84615384615384,,,,-1,-1,-1,-1,False
L136_hasDisplayableAttributes_1.txt,code2vec,METHOD_NAME,token_wrong,0.4634,0.476,14.336,16.5873,"{'n_total': 298, 'n_valid': 37, 'n_correct': 32}",109.37287,"public boolean hasDisplayableAttributes(String serviceName) { SchemaType st = SchemaType.USER; if ((getEntityType() != null) && (!getEntityType().equals(""user""))) { st = SchemaType.DYNAMIC; } return hasAttributeSchema(serviceName, st); }",boolean hasDisplayableAttributes(String serviceName){if((getEntityType)&(getEntityType)){}hasAttributeSchema(st);},"['public', 'boolean', 'hasDisplayableAttributes', '(', 'String', 'serviceName', ')', '{', 'SchemaType', 'st', '=', 'SchemaType', '.', 'USER', ';', 'if', '(', '(', 'getEntityType', '(', ')', '!=', 'null', ')', '&&', '(', '!', 'getEntityType', '(', ')', '.', 'equals', '(', '""user""', ')', ')', ')', '{', 'st', '=', 'SchemaType', '.', 'DYNAMIC', ';', '}', 'return', 'hasAttributeSchema', '(', 'serviceName', ',', 'st', ')', ';', '}']","['boolean', 'hasDisplayableAttributes', '(', 'String', 'serviceName', ')', '{', 'if', '(', '(', 'getEntityType', ')', '&', '(', 'getEntityType', ')', ')', '{', '}', 'hasAttributeSchema', '(', 'st', ')', ';', '}']",54,25,6,237,114,30,59.42028985507246,60.416666666666664,,,,-1,-1,-1,-1,False
L137_notifyLocationUpdate_1.txt,code2vec,METHOD_NAME,token_wrong,0.368,0.2439,17.9538,17.3339,"{'n_total': 429, 'n_valid': 49, 'n_correct': 31}",139.903928,"private void notifyLocationUpdate(org.droidplanner.services.android.impl.core.gcs.location.Location location) { if (receivers.isEmpty()) { Timber.d(TAG, ""notifyLocationUpdate(): No receivers""); return; } for (LocationReceiver receiver : receivers.values()) { receiver.onLocationUpdate(location); } }","void notifyLocationUpdate(org location){if(isEmpty()){Timber(TAG,"""");}for(LocationReceiver receiver:receivers.values()){receiver.onLocationUpdate();}}","['private', 'void', 'notifyLocationUpdate', '(', 'org', '.', 'droidplanner', '.', 'services', '.', 'android', '.', 'impl', '.', 'core', '.', 'gcs', '.', 'location', '.', 'Location', 'location', ')', '{', 'if', '(', 'receivers', '.', 'isEmpty', '(', ')', ')', '{', 'Timber', '.', 'd', '(', 'TAG', ',', '""notifyLocationUpdate(): No receivers""', ')', ';', 'return', ';', '}', 'for', '(', 'LocationReceiver', 'receiver', ':', 'receivers', '.', 'values', '(', ')', ')', '{', 'receiver', '.', 'onLocationUpdate', '(', 'location', ')', ';', '}', '}']","['void', 'notifyLocationUpdate', '(', 'org', 'location', ')', '{', 'if', '(', 'isEmpty', '(', ')', ')', '{', 'Timber', '(', 'TAG', ',', '""""', ')', ';', '}', 'for', '(', 'LocationReceiver', 'receiver', ':', 'receivers', '.', 'values', '(', ')', ')', '{', 'receiver', '.', 'onLocationUpdate', '(', ')', ';', '}', '}']",66,42,6,299,150,26,54.57875457875458,40.0,,,,-1,-1,-1,-1,False
L138_beforeCheckpoint_1.txt,code2vec,METHOD_NAME,token_wrong,0.456,0.4173,2.6605,2.4771,"{'n_total': 240, 'n_valid': 25, 'n_correct': 24}",70.65312,"@Override public void beforeCheckpoint(long windowId) { if (checkpointedWindowId == 0) { checkpointedWindowId = windowId; } logger.debug(""{}, windowId={}"", this, Codec.getStringWindowId(windowId)); }","void beforeCheckpoint(long windowId){if(0){}debug("""",(windowId));}","['@', 'Override', 'public', 'void', 'beforeCheckpoint', '(', 'long', 'windowId', ')', '{', 'if', '(', 'checkpointedWindowId', '==', '0', ')', '{', 'checkpointedWindowId', '=', 'windowId', ';', '}', 'logger', '.', 'debug', '(', '""{}, windowId={}""', ',', 'this', ',', 'Codec', '.', 'getStringWindowId', '(', 'windowId', ')', ')', ';', '}']","['void', 'beforeCheckpoint', '(', 'long', 'windowId', ')', '{', 'if', '(', '0', ')', '{', '}', 'debug', '(', '""""', ',', '(', 'windowId', ')', ')', ';', '}']",39,23,6,199,66,22,75.14124293785311,48.484848484848484,,,,-1,-1,-1,-1,False
L139_formatHighLows_2.txt,code2vec,METHOD_NAME,token_wrong,0.3379,0.207,15.9037,16.9737,"{'n_total': 350, 'n_valid': 57, 'n_correct': 28}",173.169536,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){long formattedHigh=formatTemperature();String highLowStr=""""+highLowStr;}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'formattedHigh', '=', 'formatTemperature', '(', ')', ';', 'String', 'highLowStr', '=', '""""', '+', 'highLowStr', ';', '}']",68,28,6,356,134,20,66.07142857142857,64.51612903225806,,,,-1,-1,-1,-1,False
L140_getAttributes_1.txt,code2vec,METHOD_NAME,token_wrong,0.3538,0.4899,7.2521,10.7033,"{'n_total': 170, 'n_valid': 17, 'n_correct': 14}",49.134416,Map getAttributes() { if (!SMSEntry.cacheSMSEntries) { smsEntry.refresh(); } return (SMSUtils.copyAttributes(attributes)); },Map getAttributes(){if(!cacheSMSEntries){smsEntry();}(copyAttributes(attributes));},"['Map', 'getAttributes', '(', ')', '{', 'if', '(', '!', 'SMSEntry', '.', 'cacheSMSEntries', ')', '{', 'smsEntry', '.', 'refresh', '(', ')', ';', '}', 'return', '(', 'SMSUtils', '.', 'copyAttributes', '(', 'attributes', ')', ')', ';', '}']","['Map', 'getAttributes', '(', ')', '{', 'if', '(', '!', 'cacheSMSEntries', ')', '{', 'smsEntry', '(', ')', ';', '}', '(', 'copyAttributes', '(', 'attributes', ')', ')', ';', '}']",31,24,6,124,83,19,39.04761904761905,28.000000000000004,,,,-1,-1,-1,-1,False
L141_onEquip_1.txt,code2vec,METHOD_NAME,token_wrong,0.9705,0.9939,23.4286,23.5621,"{'n_total': 256, 'n_valid': 32, 'n_correct': 27}",89.435139,"public void onEquip(GameContext context, Player player) { if (onEquip != null) { context.getLogic().castSpell(player.getId(), onEquip, getReference(), EntityReference.NONE, false); } }",void onEquip(GameContext player){if(null){context.castSpell();}},"['public', 'void', 'onEquip', '(', 'GameContext', 'context', ',', 'Player', 'player', ')', '{', 'if', '(', 'onEquip', '!=', 'null', ')', '{', 'context', '.', 'getLogic', '(', ')', '.', 'castSpell', '(', 'player', '.', 'getId', '(', ')', ',', 'onEquip', ',', 'getReference', '(', ')', ',', 'EntityReference', '.', 'NONE', ',', 'false', ')', ';', '}', '}']","['void', 'onEquip', '(', 'GameContext', 'player', ')', '{', 'if', '(', 'null', ')', '{', 'context', '.', 'castSpell', '(', ')', ';', '}', '}']",47,20,6,184,64,13,70.17543859649122,65.85365853658537,,,,-1,-1,-1,-1,False
L142_configureClientAuth_1.txt,code2vec,METHOD_NAME,token_wrong,0.5834,0.3779,18.8234,18.1828,"{'n_total': 168, 'n_valid': 14, 'n_correct': 12}",43.747504,protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth); } else { socket.setNeedClientAuth(requireClientAuth); } },void configureClientAuth(SSLServerSocket socket){if(wantClientAuth){setWantClientAuth(wantClientAuth);setNeedClientAuth(requireClientAuth);}},"['protected', 'void', 'configureClientAuth', '(', 'SSLServerSocket', 'socket', ')', '{', 'if', '(', 'wantClientAuth', ')', '{', 'socket', '.', 'setWantClientAuth', '(', 'wantClientAuth', ')', ';', '}', 'else', '{', 'socket', '.', 'setNeedClientAuth', '(', 'requireClientAuth', ')', ';', '}', '}']","['void', 'configureClientAuth', '(', 'SSLServerSocket', 'socket', ')', '{', 'if', '(', 'wantClientAuth', ')', '{', 'setWantClientAuth', '(', 'wantClientAuth', ')', ';', 'setNeedClientAuth', '(', 'requireClientAuth', ')', ';', '}', '}']",32,24,6,182,141,25,26.11464968152866,30.76923076923077,,,,-1,-1,-1,-1,False
L143_bazelJars_1.txt,code2vec,METHOD_NAME,token_wrong,0.2501,0.2168,15.703,17.3949,"{'n_total': 612, 'n_valid': 79, 'n_correct': 34}",217.791702,"private Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileName().toString().endsWith("".jar"")); } catch (IOException e) { throw new RuntimeException(e); } }","Stream<Path>bazelJars(Path bazelGenFiles){try{Path();walk().filter(file->toString().endsWith(""jar""));}catch(IOException e){(e);}}","['private', 'Stream', '<', 'Path', '>', 'bazelJars', '(', 'Path', 'bazelGenFiles', ')', '{', 'try', '{', 'Path', 'target', '=', 'Files', '.', 'readSymbolicLink', '(', 'bazelGenFiles', ')', ';', 'return', 'Files', '.', 'walk', '(', 'target', ')', '.', 'filter', '(', 'file', '->', 'file', '.', 'getFileName', '(', ')', '.', 'toString', '(', ')', '.', 'endsWith', '(', '"".jar""', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['Stream', '<', 'Path', '>', 'bazelJars', '(', 'Path', 'bazelGenFiles', ')', '{', 'try', '{', 'Path', '(', ')', ';', 'walk', '(', ')', '.', 'filter', '(', 'file', '->', 'toString', '(', ')', '.', 'endsWith', '(', '""jar""', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",67,47,6,262,129,15,53.84615384615385,32.78688524590164,,,,-1,-1,-1,-1,False
L144_createRawValidator_4.txt,code2vec,METHOD_NAME,token_wrong,0.2396,0.1399,15.2978,14.8988,"{'n_total': 1674, 'n_valid': 364, 'n_correct': 206}",1042.248003,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.g"" + ""rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.O"" + ""neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005val"" + ""uexp\u0000psq\u0000~\u0000\nq\u0000~\u0000\u0010psq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010psr\u0000 com.s"" + ""un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClas"" + ""sq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStri"" + ""ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.gra"" + ""mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"" + ""s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"" + ""ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.Sim"" + ""pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"" + ""amespaceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000;com.sun.identity.liberty.ws.common."" + ""jaxb.ac.ExtensionElementt\u0000+http://java.sun.com/jaxb/xjc/dumm"" + ""y-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010p"" + ""sq\u0000~\u0000\u0015q\u0000~\u0000\u0010pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008com.sun.identity.liberty"" + "".ws.common.jaxb.ac.ExtensionTypeq\u0000~\u0000#sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psr\u0000"" + ""\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"" + ""datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"" + ""StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000\""com.sun.msv.datatype.xsd.QnameTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"" + ""mespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"" + ""datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"" + ""/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"" + ""cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"" + ""SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"" + ""n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.ut"" + ""il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000"" + "" xpq\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"" + ""a-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\tExtensiont\u0000\u0016urn:liberty:ac:2003-08q\u0000"" + ""~\u0000\u001esq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u000bSwitchAuditq\u0000"" + ""~\u0000Fsr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"" + ""blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"" + ""om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"" + ""untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"" + ""onPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\u000eq\u0000~\u0000\u0014q\u0000~\u0000(q\u0000~\u0000\u0013q\u0000~\u0000\'q\u0000~\u0000\tq\u0000~\u0000%q\u0000~\u0000,"" + ""q\u0000~\u0000Gq\u0000~\u0000\u0011x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com.DocumentDeclaration createRawValidator(){if(schemaFragment){((""0""+"".""+""""+""""+""""+""""+""""+""""+""""+""""+""""+""""+""Expressi""+""onPool""+""x""));}sun.msvregexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.g""', '+', '""rammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.O""', '+', '""neOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05val""', '+', '""uexp\x00psq\x00~\x00\\nq\x00~\x00\x10psq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x10psr\x00 com.s""', '+', '""un.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClas""', '+', '""sq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x10psr\x002com.sun.msv.grammar.Expression$AnyStri""', '+', '""ngExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x0f\x01q\x00~\x00\x18sr\x00 com.sun.msv.gra""', '+', '""mmar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.NameClas""', '+', '""s\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expression$EpsilonExpr""', '+', '""ession\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x19q\x00~\x00\x1esr\x00#com.sun.msv.grammar.Sim""', '+', '""pleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang/String;L\x00\\fn""', '+', '""amespaceURIq\x00~\x00 xq\x00~\x00\x1bt\x00;com.sun.identity.liberty.ws.common.""', '+', '""jaxb.ac.ExtensionElementt\x00+http://java.sun.com/jaxb/xjc/dumm""', '+', '""y-elementssq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x10p""', '+', '""sq\x00~\x00\x15q\x00~\x00\x10pq\x00~\x00\x18q\x00~\x00\x1cq\x00~\x00\x1esq\x00~\x00\x1ft\x008com.sun.identity.liberty""', '+', '"".ws.common.jaxb.ac.ExtensionTypeq\x00~\x00#sq\x00~\x00\\nppsq\x00~\x00\x15q\x00~\x00\x10psr\x00""', '+', '""\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/""', '+', '""datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/""', '+', '""StringPair;xq\x00~\x00\x04q\x00~\x00\x10psr\x00\\""com.sun.msv.datatype.xsd.QnameTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fna""', '+', '""mespaceUriq\x00~\x00 L\x00\\btypeNameq\x00~\x00 L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/""', '+', '""datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001""', '+', '""/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype.xsd.WhiteSpacePro""', '+', '""cessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.White""', '+', '""SpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expressio""', '+', '""n$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x10psr\x00\x1bcom.sun.msv.ut""', '+', '""il.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00 L\x00\\fnamespaceURIq\x00~\x00""', '+', '"" xpq\x00~\x009q\x00~\x008sq\x00~\x00\x1ft\x00\x04typet\x00)http://www.w3.org/2001/XMLSchem""', '+', '""a-instanceq\x00~\x00\x1esq\x00~\x00\x1ft\x00\\tExtensiont\x00\x16urn:liberty:ac:2003-08q\x00""', '+', '""~\x00\x1esq\x00~\x00\\nppsq\x00~\x00\x15q\x00~\x00\x10pq\x00~\x001q\x00~\x00Aq\x00~\x00\x1esq\x00~\x00\x1ft\x00\x0bSwitchAuditq\x00""', '+', '""~\x00Fsr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTa""', '+', '""blet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-c""', '+', '""om.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05co""', '+', '""untB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressi""', '+', '""onPool;xp\x00\x00\x00\x0b\x01pq\x00~\x00\x0bq\x00~\x00\x0eq\x00~\x00\x14q\x00~\x00(q\x00~\x00\x13q\x00~\x00\\\'q\x00~\x00\\tq\x00~\x00%q\x00~\x00,""', '+', '""q\x00~\x00Gq\x00~\x00\x11x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""0""', '+', '"".""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""Expressi""', '+', '""onPool""', '+', '""x""', ')', ')', ';', '}', 'sun', '.', 'msvregexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",151,57,6,6217,184,24,97.4164379137736,64.82758620689654,,,,-1,-1,-1,-1,False
L145_getInstanceNames_1.txt,code2vec,METHOD_NAME,token_wrong,0.4155,0.4721,14.1063,17.7772,"{'n_total': 567, 'n_valid': 56, 'n_correct': 46}",172.939219,"private List getInstanceNames() { AuthPropertiesModel apm = getPropertiesModel(); Set tmp = apm.getAuthInstances(); Set instances = new HashSet(tmp.size() * 2); for (Iterator i = tmp.iterator(); i.hasNext(); ) { AMAuthenticationInstance inst = (AMAuthenticationInstance) i.next(); instances.add(inst.getName()); } return AMFormatUtils.sortItems(instances, apm.getUserLocale()); }",List getInstanceNames(){(size()*2);for(;hasNext();){(getName());}sortItems(apm.getUserLocale);},"['private', 'List', 'getInstanceNames', '(', ')', '{', 'AuthPropertiesModel', 'apm', '=', 'getPropertiesModel', '(', ')', ';', 'Set', 'tmp', '=', 'apm', '.', 'getAuthInstances', '(', ')', ';', 'Set', 'instances', '=', 'new', 'HashSet', '(', 'tmp', '.', 'size', '(', ')', '*', '2', ')', ';', 'for', '(', 'Iterator', 'i', '=', 'tmp', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'AMAuthenticationInstance', 'inst', '=', '(', 'AMAuthenticationInstance', ')', 'i', '.', 'next', '(', ')', ';', 'instances', '.', 'add', '(', 'inst', '.', 'getName', '(', ')', ')', ';', '}', 'return', 'AMFormatUtils', '.', 'sortItems', '(', 'instances', ',', 'apm', '.', 'getUserLocale', '(', ')', ')', ';', '}']","['List', 'getInstanceNames', '(', ')', '{', '(', 'size', '(', ')', '*', '2', ')', ';', 'for', '(', ';', 'hasNext', '(', ')', ';', ')', '{', '(', 'getName', '(', ')', ')', ';', '}', 'sortItems', '(', 'apm', '.', 'getUserLocale', ')', ';', '}']",95,37,6,379,95,22,79.55182072829132,65.1685393258427,,,,-1,-1,-1,-1,False
L146_max_1.txt,code2vec,METHOD_NAME,token_wrong,0.7311,0.2154,2.8087,7.6016,"{'n_total': 360, 'n_valid': 34, 'n_correct': 31}",103.873942,"public double max(int i) { if (i < 0 || i >= sizes.size()) throw new ArrayIndexOutOfBoundsException(""Attempted to access negative index of DVector2D.""); double result = -Double.MAX_VALUE; int size = sizes.get(i); for (int j = 0; j < size; ++j) if (vector[i][j] > result) result = vector[i][j]; return result; }",double max(int i){if(size())for(;j<size;)if(vector[i]>result)vector[i];},"['public', 'double', 'max', '(', 'int', 'i', ')', '{', 'if', '(', 'i', '<', '0', '||', 'i', '>=', 'sizes', '.', 'size', '(', ')', ')', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', '""Attempted to access negative index of DVector2D.""', ')', ';', 'double', 'result', '=', '-', 'Double', '.', 'MAX_VALUE', ';', 'int', 'size', '=', 'sizes', '.', 'get', '(', 'i', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'size', ';', '++', 'j', ')', 'if', '(', 'vector', '[', 'i', ']', '[', 'j', ']', '>', 'result', ')', 'result', '=', 'vector', '[', 'i', ']', '[', 'j', ']', ';', 'return', 'result', ';', '}']","['double', 'max', '(', 'int', 'i', ')', '{', 'if', '(', 'size', '(', ')', ')', 'for', '(', ';', 'j', '<', 'size', ';', ')', 'if', '(', 'vector', '[', 'i', ']', '>', 'result', ')', 'vector', '[', 'i', ']', ';', '}']",87,36,6,310,72,9,79.06976744186046,62.96296296296296,,,,-1,-1,-1,-1,False
L147_otherCompiledFile_1.txt,code2vec,METHOD_NAME,token_wrong,0.247,0.7978,15.9645,19.0425,"{'n_total': 332, 'n_valid': 33, 'n_correct': 23}",93.288645,"@Test public void otherCompiledFile() throws IOException { server.compile(other); List<? extends Location> suggestions = doGoto(file, 28, 24); assertThat(suggestions, contains(hasProperty(""uri"", equalTo(other.toString())))); }","@Test void otherCompiledFile()throws IOException{List<?extends Location>suggestions=(4);assertThat(suggestions,contains(hasProperty("""",(toString()))));}","['@', 'Test', 'public', 'void', 'otherCompiledFile', '(', ')', 'throws', 'IOException', '{', 'server', '.', 'compile', '(', 'other', ')', ';', 'List', '<', '?', 'extends', 'Location', '>', 'suggestions', '=', 'doGoto', '(', 'file', ',', '28', ',', '24', ')', ';', 'assertThat', '(', 'suggestions', ',', 'contains', '(', 'hasProperty', '(', '""uri""', ',', 'equalTo', '(', 'other', '.', 'toString', '(', ')', ')', ')', ')', ')', ';', '}']","['@', 'Test', 'void', 'otherCompiledFile', '(', ')', 'throws', 'IOException', '{', 'List', '<', '?', 'extends', 'Location', '>', 'suggestions', '=', '(', '4', ')', ';', 'assertThat', '(', 'suggestions', ',', 'contains', '(', 'hasProperty', '(', '""""', ',', '(', 'toString', '(', ')', ')', ')', ')', ')', ';', '}']",57,41,6,226,152,23,36.45320197044335,31.372549019607842,,,,-1,-1,-1,-1,False
L148_getCodecProperties_1.txt,code2vec,METHOD_NAME,token_wrong,0.5239,0.699,14.4428,15.5085,"{'n_total': 989, 'n_valid': 152, 'n_correct': 72}",434.16169,"private Map<String, String> getCodecProperties(VideoCodecType type, boolean highProfile) { switch(type) { case VP8: case VP9: return new HashMap<String, String>(); case H264: Map<String, String> properties = new HashMap<>(); properties.put(VideoCodecInfo.H264_FMTP_LEVEL_ASYMMETRY_ALLOWED, ""1""); properties.put(VideoCodecInfo.H264_FMTP_PACKETIZATION_MODE, ""1""); properties.put(VideoCodecInfo.H264_FMTP_PROFILE_LEVEL_ID, highProfile ? VideoCodecInfo.H264_CONSTRAINED_HIGH_3_1 : VideoCodecInfo.H264_CONSTRAINED_BASELINE_3_1); return properties; default: throw new IllegalArgumentException(""Unsupported codec: "" + type); } }","Map<String>getCodecProperties(VideoCodecType type,boolean highProfile){switch(type){case 8:case 4:Map<String>properties=HashMap(ALLOWED,"""");properties(MODE,"""");properties.put(ID,highProfile?VideoCodecInfo:VideoCodecInfo.H);(""""+type);}}","['private', 'Map', '<', 'String', ',', 'String', '>', 'getCodecProperties', '(', 'VideoCodecType', 'type', ',', 'boolean', 'highProfile', ')', '{', 'switch', '(', 'type', ')', '{', 'case', 'VP8', ':', 'case', 'VP9', ':', 'return', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'case', 'H264', ':', 'Map', '<', 'String', ',', 'String', '>', 'properties', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'properties', '.', 'put', '(', 'VideoCodecInfo', '.', 'H264_FMTP_LEVEL_ASYMMETRY_ALLOWED', ',', '""1""', ')', ';', 'properties', '.', 'put', '(', 'VideoCodecInfo', '.', 'H264_FMTP_PACKETIZATION_MODE', ',', '""1""', ')', ';', 'properties', '.', 'put', '(', 'VideoCodecInfo', '.', 'H264_FMTP_PROFILE_LEVEL_ID', ',', 'highProfile', '?', 'VideoCodecInfo', '.', 'H264_CONSTRAINED_HIGH_3_1', ':', 'VideoCodecInfo', '.', 'H264_CONSTRAINED_BASELINE_3_1', ')', ';', 'return', 'properties', ';', 'default', ':', 'throw', 'new', 'IllegalArgumentException', '(', '""Unsupported codec: ""', '+', 'type', ')', ';', '}', '}']","['Map', '<', 'String', '>', 'getCodecProperties', '(', 'VideoCodecType', 'type', ',', 'boolean', 'highProfile', ')', '{', 'switch', '(', 'type', ')', '{', 'case', '8', ':', 'case', '4', ':', 'Map', '<', 'String', '>', 'properties', '=', 'HashMap', '(', 'ALLOWED', ',', '""""', ')', ';', 'properties', '(', 'MODE', ',', '""""', ')', ';', 'properties', '.', 'put', '(', 'ID', ',', 'highProfile', '?', 'VideoCodecInfo', ':', 'VideoCodecInfo', '.', 'H', ')', ';', '(', '""""', '+', 'type', ')', ';', '}', '}']",113,67,6,621,235,24,64.65661641541038,42.99065420560748,,,,-1,-1,-1,-1,False
L149_sendRequest_1.txt,code2vec,METHOD_NAME,token_wrong,0.4263,0.5099,1.6997,9.2968,"{'n_total': 77, 'n_valid': 15, 'n_correct': 11}",40.009197,"public MessageCallBack sendRequest(MessageRequest request) { MessageCallBack callBack = new MessageCallBack(request); mapCallBack.put(request.getMessageId(), callBack); channel.writeAndFlush(request); return callBack; }",MessageCallBack sendRequest(MessageRequest request){;},"['public', 'MessageCallBack', 'sendRequest', '(', 'MessageRequest', 'request', ')', '{', 'MessageCallBack', 'callBack', '=', 'new', 'MessageCallBack', '(', 'request', ')', ';', 'mapCallBack', '.', 'put', '(', 'request', '.', 'getMessageId', '(', ')', ',', 'callBack', ')', ';', 'channel', '.', 'writeAndFlush', '(', 'request', ')', ';', 'return', 'callBack', ';', '}']","['MessageCallBack', 'sendRequest', '(', 'MessageRequest', 'request', ')', '{', ';', '}']",41,9,6,219,54,17,81.68316831683168,91.42857142857143,,,,-1,-1,-1,-1,False
L150_shouldCopyToken_1.txt,code2vec,METHOD_NAME,token_wrong,0.1427,0.9992,14.8247,27.7843,"{'n_total': 325, 'n_valid': 50, 'n_correct': 33}",138.667165,"@Test public void shouldCopyToken() { Token token = new Token(""badger"", TokenType.SAML2); token.setAttribute(CoreTokenField.INTEGER_ONE, 1234); token.setAttribute(CoreTokenField.STRING_ONE, ""Weasel""); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }","void shouldCopyToken(){TokenToken("""","""");(CoreTokenField());result();}","['@', 'Test', 'public', 'void', 'shouldCopyToken', '(', ')', '{', 'Token', 'token', '=', 'new', 'Token', '(', '""badger""', ',', 'TokenType', '.', 'SAML2', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'INTEGER_ONE', ',', '1234', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'STRING_ONE', ',', '""Weasel""', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'DATE_ONE', ',', 'Calendar', '.', 'getInstance', '(', ')', ')', ';', 'Token', 'result', '=', 'new', 'Token', '(', 'token', ')', ';', 'TokenTestUtils', '.', 'assertTokenEquals', '(', 'result', ',', 'token', ')', ';', '}']","['void', 'shouldCopyToken', '(', ')', '{', 'TokenToken', '(', '""""', ',', '""""', ')', ';', '(', 'CoreTokenField', '(', ')', ')', ';', 'result', '(', ')', ';', '}']",77,23,6,353,70,21,85.2409638554217,76.05633802816901,,,,-1,-1,-1,-1,False
L151_getLexiconLocation_1.txt,code2vec,METHOD_NAME,token_wrong,0.3427,0.3941,15.1671,15.5927,"{'n_total': 237, 'n_valid': 39, 'n_correct': 16}",105.922907,public java.net.URL getLexiconLocation() { if (isClone) { loadInstance(); return instance.getLexiconLocation(); } return super.getLexiconLocation(); },java.net.URL getLexiconLocation(){if(isClone){loadInstance();return getLexiconLocation;}super.getLexiconLocation();},"['public', 'java', '.', 'net', '.', 'URL', 'getLexiconLocation', '(', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'instance', '.', 'getLexiconLocation', '(', ')', ';', '}', 'return', 'super', '.', 'getLexiconLocation', '(', ')', ';', '}']","['java', '.', 'net', '.', 'URL', 'getLexiconLocation', '(', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'getLexiconLocation', ';', '}', 'super', '.', 'getLexiconLocation', '(', ')', ';', '}']",35,29,6,150,116,24,26.984126984126984,20.689655172413794,,,,-1,-1,-1,-1,False
L152_getAbsolutePath_1.txt,code2vec,METHOD_NAME,token_wrong,0.3993,0.301,2.7246,10.085,"{'n_total': 154, 'n_valid': 21, 'n_correct': 16}",66.31201,@Override public String getAbsolutePath() { if (isDirectory() && !absPath.endsWith(SEPARATOR)) return absPath + SEPARATOR; return absPath; },@Override String getAbsolutePath(){((SEPARATOR));},"['@', 'Override', 'public', 'String', 'getAbsolutePath', '(', ')', '{', 'if', '(', 'isDirectory', '(', ')', '&&', '!', 'absPath', '.', 'endsWith', '(', 'SEPARATOR', ')', ')', 'return', 'absPath', '+', 'SEPARATOR', ';', 'return', 'absPath', ';', '}']","['@', 'Override', 'String', 'getAbsolutePath', '(', ')', '{', '(', '(', 'SEPARATOR', ')', ')', ';', '}']",31,14,6,140,50,21,75.63025210084034,68.0,,,,-1,-1,-1,-1,False
L153_beforeDisplayUser_1.txt,code2vec,METHOD_NAME,token_wrong,0.493,0.8032,21.6746,24.3269,"{'n_total': 328, 'n_valid': 38, 'n_correct': 35}",107.476377,"private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) { AttributeSchema as = (AttributeSchema) iter.next(); String name = as.getName(); if (name.equals(namingAttribute) || name.equals(""ChangePassword"")) { iter.remove(); } } }","void beforeDisplayUser(){for(iterator();;){if((namingAttribute)(""ChangePassword"")){remove();}}}","['private', 'void', 'beforeDisplayUser', '(', 'Set', 'attributeSchemas', ')', '{', 'for', '(', 'Iterator', 'iter', '=', 'attributeSchemas', '.', 'iterator', '(', ')', ';', 'iter', '.', 'hasNext', '(', ')', ';', ')', '{', 'AttributeSchema', 'as', '=', '(', 'AttributeSchema', ')', 'iter', '.', 'next', '(', ')', ';', 'String', 'name', '=', 'as', '.', 'getName', '(', ')', ';', 'if', '(', 'name', '.', 'equals', '(', 'namingAttribute', ')', '||', 'name', '.', 'equals', '(', '""ChangePassword""', ')', ')', '{', 'iter', '.', 'remove', '(', ')', ';', '}', '}', '}']","['void', 'beforeDisplayUser', '(', ')', '{', 'for', '(', 'iterator', '(', ')', ';', ';', ')', '{', 'if', '(', '(', 'namingAttribute', ')', '(', '""ChangePassword""', ')', ')', '{', 'remove', '(', ')', ';', '}', '}', '}']",74,31,6,294,95,23,73.43173431734317,63.23529411764706,,,,-1,-1,-1,-1,False
L154_cancelDelays_1.txt,code2vec,METHOD_NAME,token_wrong,0.3413,0.8336,19.9754,20.9642,"{'n_total': 274, 'n_valid': 32, 'n_correct': 24}",97.928771,"public static void cancelDelays(String resource, String event) { org.sakaiproject.event.api.EventTrackingService service = getInstance(); if (service == null) return; service.cancelDelays(resource, event); }","void cancelDelays(String resource,String event){service();if(service)(resource);}","['public', 'static', 'void', 'cancelDelays', '(', 'String', 'resource', ',', 'String', 'event', ')', '{', 'org', '.', 'sakaiproject', '.', 'event', '.', 'api', '.', 'EventTrackingService', 'service', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', '==', 'null', ')', 'return', ';', 'service', '.', 'cancelDelays', '(', 'resource', ',', 'event', ')', ';', '}']","['void', 'cancelDelays', '(', 'String', 'resource', ',', 'String', 'event', ')', '{', 'service', '(', ')', ';', 'if', '(', 'service', ')', '(', 'resource', ')', ';', '}']",45,23,6,207,81,18,66.66666666666666,56.41025641025641,,,,-1,-1,-1,-1,False
L155_matchCriteria_1.txt,code2vec,METHOD_NAME,token_wrong,0.7013,0.1641,18.6414,15.0613,"{'n_total': 493, 'n_valid': 65, 'n_correct': 43}",182.312175,"@SuppressWarnings(""unchecked"") protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator i = target.iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }","boolean matchCriteria(Set criteria,Set target){if((null)|(criteria))for(;hasNext();){t.nextif(criteria());}false;}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'protected', 'boolean', 'matchCriteria', '(', 'Set', 'criteria', ',', 'Set', 'target', ')', '{', 'if', '(', '(', 'criteria', '==', 'null', ')', '||', '(', 'criteria', '.', 'isEmpty', '(', ')', ')', ')', 'return', 'true', ';', 'for', '(', 'Iterator', 'i', '=', 'target', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'String', 't', '=', '(', 'String', ')', 'i', '.', 'next', '(', ')', ';', 'if', '(', 'criteria', '.', 'contains', '(', 't', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'matchCriteria', '(', 'Set', 'criteria', ',', 'Set', 'target', ')', '{', 'if', '(', '(', 'null', ')', '|', '(', 'criteria', ')', ')', 'for', '(', ';', 'hasNext', '(', ')', ';', ')', '{', 't', '.', 'nextif', '(', 'criteria', '(', ')', ')', ';', '}', 'false', ';', '}']",83,42,6,292,114,19,65.2014652014652,53.246753246753244,,,,-1,-1,-1,-1,False
L156_newTimeRange_1.txt,code2vec,METHOD_NAME,token_wrong,0.66,0.9127,17.5106,18.3737,"{'n_total': 255, 'n_valid': 43, 'n_correct': 22}",125.411213,"private TimeRange newTimeRange(String start, String length) { Instant beginning = Instant.parse(start); Duration duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }","TimeRange newTimeRange(String length){duration.parse();returntimeService(toEpochMilli(),duration);}","['private', 'TimeRange', 'newTimeRange', '(', 'String', 'start', ',', 'String', 'length', ')', '{', 'Instant', 'beginning', '=', 'Instant', '.', 'parse', '(', 'start', ')', ';', 'Duration', 'duration', '=', 'Duration', '.', 'parse', '(', 'length', ')', ';', 'return', 'timeService', '.', 'newTimeRange', '(', 'beginning', '.', 'toEpochMilli', '(', ')', ',', 'duration', '.', 'toMillis', '(', ')', ')', ';', '}']","['TimeRange', 'newTimeRange', '(', 'String', 'length', ')', '{', 'duration', '.', 'parse', '(', ')', ';', 'returntimeService', '(', 'toEpochMilli', '(', ')', ',', 'duration', ')', ';', '}']",50,23,6,229,99,18,61.61137440758294,61.36363636363637,,,,-1,-1,-1,-1,False
L157_shouldAddTimeoutParameter_1.txt,code2vec,METHOD_NAME,token_wrong,0.1546,0.1559,14.3177,14.688,"{'n_total': 364, 'n_valid': 55, 'n_correct': 23}",153.209237,"@Test public void shouldAddTimeoutParameter() throws Exception { IdleTimeoutExtension extension = new IdleTimeoutExtension(requested, extensionHelper, 1234L); assertEquals(extensionName, extension.getExtensionHeader().getExtensionToken()); assertEquals(Long.toString(1234L), extension.getExtensionHeader().getParameters().get(0).getValue()); }","@Test void shouldAddTimeoutParameter()throws Exception{IdleTimeoutExtension(L);assertEquals(extensionName,extension);assertEquals(Long.toString(4L),extension.getExtensionHeader().getParameters().get(0).getValue());}","['@', 'Test', 'public', 'void', 'shouldAddTimeoutParameter', '(', ')', 'throws', 'Exception', '{', 'IdleTimeoutExtension', 'extension', '=', 'new', 'IdleTimeoutExtension', '(', 'requested', ',', 'extensionHelper', ',', '1234L', ')', ';', 'assertEquals', '(', 'extensionName', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getExtensionToken', '(', ')', ')', ';', 'assertEquals', '(', 'Long', '.', 'toString', '(', '1234L', ')', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getParameters', '(', ')', '.', 'get', '(', '0', ')', '.', 'getValue', '(', ')', ')', ';', '}']","['@', 'Test', 'void', 'shouldAddTimeoutParameter', '(', ')', 'throws', 'Exception', '{', 'IdleTimeoutExtension', '(', 'L', ')', ';', 'assertEquals', '(', 'extensionName', ',', 'extension', ')', ';', 'assertEquals', '(', 'Long', '.', 'toString', '(', '4L', ')', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getParameters', '(', ')', '.', 'get', '(', '0', ')', '.', 'getValue', '(', ')', ')', ';', '}']",68,51,6,343,215,31,41.02564102564102,27.419354838709676,,,,-1,-1,-1,-1,False
L158_destroy_1.txt,code2vec,METHOD_NAME,token_wrong,0.5382,0.6369,3.7517,4.7192,"{'n_total': 172, 'n_valid': 17, 'n_correct': 14}",54.127354,@Override public void destroy() { for (DefaultRegistry c : clients.values()) { c.shutdownGracefully(); } },@Override void destroy(){for(DefaultRegistry c:clients){shutdownGracefully();}},"['@', 'Override', 'public', 'void', 'destroy', '(', ')', '{', 'for', '(', 'DefaultRegistry', 'c', ':', 'clients', '.', 'values', '(', ')', ')', '{', 'c', '.', 'shutdownGracefully', '(', ')', ';', '}', '}']","['@', 'Override', 'void', 'destroy', '(', ')', '{', 'for', '(', 'DefaultRegistry', 'c', ':', 'clients', ')', '{', 'shutdownGracefully', '(', ')', ';', '}', '}']",28,21,6,106,79,13,29.03225806451613,31.818181818181817,,,,-1,-1,-1,-1,False
L159_streamBinaryData_1.txt,code2vec,METHOD_NAME,token_wrong,0.3903,0.3649,20.6283,21.3965,"{'n_total': 447, 'n_valid': 57, 'n_correct': 37}",169.097458,"public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }","BinaryData streamBinaryData(Path p,String mimeType){try{(p);return new BinaryData(dataStream);}catch(IOException ex){(ex);}}","['public', 'static', 'BinaryData', 'streamBinaryData', '(', 'Path', 'p', ',', 'String', 'mimeType', ')', '{', 'try', '{', 'final', 'long', 'size', '=', 'Files', '.', 'size', '(', 'p', ')', ';', 'final', 'InputStream', 'dataStream', '=', 'Files', '.', 'newInputStream', '(', 'p', ')', ';', 'return', 'new', 'BinaryData', '(', 'dataStream', ',', 'size', ',', 'mimeType', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'ex', ')', ';', '}', '}']","['BinaryData', 'streamBinaryData', '(', 'Path', 'p', ',', 'String', 'mimeType', ')', '{', 'try', '{', '(', 'p', ')', ';', 'return', 'new', 'BinaryData', '(', 'dataStream', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', '(', 'ex', ')', ';', '}', '}']",63,36,6,277,124,22,60.0,47.368421052631575,,,,-1,-1,-1,-1,False
L160_shouldBuildCorrectObject_1.txt,code2vec,METHOD_NAME,token_wrong,0.6196,0.4023,16.3528,17.8425,"{'n_total': 337, 'n_valid': 30, 'n_correct': 26}",87.404248,"@Test public void shouldBuildCorrectObject() { byte[] body = DatatypeConverter.parseBase64Binary(""some_body""); BinaryBody binaryBody = new BinaryBodyDTO(new BinaryBody(body)).buildObject(); assertThat(binaryBody.getValue(), is(body)); assertThat(binaryBody.getType(), is(Body.Type.BINARY)); }","void shouldBuildCorrectObject(){byte[]body=("""");(BinaryBody(body)).buildObject();assertThat(getValue().getType(),(BINARY));}","['@', 'Test', 'public', 'void', 'shouldBuildCorrectObject', '(', ')', '{', 'byte', '[', ']', 'body', '=', 'DatatypeConverter', '.', 'parseBase64Binary', '(', '""some_body""', ')', ';', 'BinaryBody', 'binaryBody', '=', 'new', 'BinaryBodyDTO', '(', 'new', 'BinaryBody', '(', 'body', ')', ')', '.', 'buildObject', '(', ')', ';', 'assertThat', '(', 'binaryBody', '.', 'getValue', '(', ')', ',', 'is', '(', 'body', ')', ')', ';', 'assertThat', '(', 'binaryBody', '.', 'getType', '(', ')', ',', 'is', '(', 'Body', '.', 'Type', '.', 'BINARY', ')', ')', ';', '}']","['void', 'shouldBuildCorrectObject', '(', ')', '{', 'byte', '[', ']', 'body', '=', '(', '""""', ')', ';', '(', 'BinaryBody', '(', 'body', ')', ')', '.', 'buildObject', '(', ')', ';', 'assertThat', '(', 'getValue', '(', ')', '.', 'getType', '(', ')', ',', '(', 'BINARY', ')', ')', ';', '}']",70,41,6,292,124,30,64.12213740458014,45.3125,,,,-1,-1,-1,-1,False
L161_loadPersonalInfo_1.txt,code2vec,METHOD_NAME,token_wrong,0.3222,0.6021,18.0426,21.1106,"{'n_total': 279, 'n_valid': 33, 'n_correct': 19}",93.248385,"@Override public void loadPersonalInfo() { iProfileView.showProgress(); Observable.timer(2, TimeUnit.SECONDS).compose(rxSchedulersAbs.getIOToMainTransformer()).subscribe(aLong -> { iProfileView.hideProgress(); iProfileView.showError(); }, throwable -> { }); }","@Override void loadPersonalInfo(){iProfileView.showProgress;Observable.timer(rxSchedulersAbs()).subscribe(aLong->{},throwable->{});}","['@', 'Override', 'public', 'void', 'loadPersonalInfo', '(', ')', '{', 'iProfileView', '.', 'showProgress', '(', ')', ';', 'Observable', '.', 'timer', '(', '2', ',', 'TimeUnit', '.', 'SECONDS', ')', '.', 'compose', '(', 'rxSchedulersAbs', '.', 'getIOToMainTransformer', '(', ')', ')', '.', 'subscribe', '(', 'aLong', '->', '{', 'iProfileView', '.', 'hideProgress', '(', ')', ';', 'iProfileView', '.', 'showError', '(', ')', ';', '}', ',', 'throwable', '->', '{', '}', ')', ';', '}']","['@', 'Override', 'void', 'loadPersonalInfo', '(', ')', '{', 'iProfileView', '.', 'showProgress', ';', 'Observable', '.', 'timer', '(', 'rxSchedulersAbs', '(', ')', ')', '.', 'subscribe', '(', 'aLong', '->', '{', '}', ',', 'throwable', '->', '{', '}', ')', ';', '}']",60,34,6,259,132,22,53.58649789029536,48.148148148148145,,,,-1,-1,-1,-1,False
L162_getProbePoints_1.txt,code2vec,METHOD_NAME,token_wrong,0.5936,0.2728,16.3526,18.8152,"{'n_total': 840, 'n_valid': 126, 'n_correct': 63}",366.615927,public String[] getProbePoints() { ArrayList probePointList = new ArrayList(); for (int i = 0; i < grammarInfos.length; i++) { String[] points = grammarInfos[i].getProbePoints(); for (int j = 0; j < points.length; j++) { probePointList.add(points[j]); } } return (String[]) probePointList.toArray(new String[probePointList.size()]); },String[]getProbePoints(){probePointList();for(i;i<grammarInfos.length;i++){points[i].getProbePoints();for(;;j++){(points[j]);}}toArray(String[size()]);},"['public', 'String', '[', ']', 'getProbePoints', '(', ')', '{', 'ArrayList', 'probePointList', '=', 'new', 'ArrayList', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'grammarInfos', '.', 'length', ';', 'i', '++', ')', '{', 'String', '[', ']', 'points', '=', 'grammarInfos', '[', 'i', ']', '.', 'getProbePoints', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'points', '.', 'length', ';', 'j', '++', ')', '{', 'probePointList', '.', 'add', '(', 'points', '[', 'j', ']', ')', ';', '}', '}', 'return', '(', 'String', '[', ']', ')', 'probePointList', '.', 'toArray', '(', 'new', 'String', '[', 'probePointList', '.', 'size', '(', ')', ']', ')', ';', '}']","['String', '[', ']', 'getProbePoints', '(', ')', '{', 'probePointList', '(', ')', ';', 'for', '(', 'i', ';', 'i', '<', 'grammarInfos', '.', 'length', ';', 'i', '++', ')', '{', 'points', '[', 'i', ']', '.', 'getProbePoints', '(', ')', ';', 'for', '(', ';', ';', 'j', '++', ')', '{', '(', 'points', '[', 'j', ']', ')', ';', '}', '}', 'toArray', '(', 'String', '[', 'size', '(', ')', ']', ')', ';', '}']",98,62,6,334,152,20,57.961783439490446,39.130434782608695,,,,-1,-1,-1,-1,False
L163_getHeader_1.txt,code2vec,METHOD_NAME,token_wrong,0.3556,0.3968,2.3111,7.537,"{'n_total': 356, 'n_valid': 31, 'n_correct': 25}",91.20672,"public String getHeader(String name, String delimiter) throws MessagingException { if (folder != null) ((MboxFolder) folder).checkOpen(); if (isExpunged()) throw new MessageRemovedException(""mbox message expunged""); return super.getHeader(name, delimiter); }","String getHeader(String name,String delimiter)throws MessagingException{if(null)((MboxFolder)).checkOpen();if(isExpunged)("""");getHeader(delimiter);}","['public', 'String', 'getHeader', '(', 'String', 'name', ',', 'String', 'delimiter', ')', 'throws', 'MessagingException', '{', 'if', '(', 'folder', '!=', 'null', ')', '(', '(', 'MboxFolder', ')', 'folder', ')', '.', 'checkOpen', '(', ')', ';', 'if', '(', 'isExpunged', '(', ')', ')', 'throw', 'new', 'MessageRemovedException', '(', '""mbox message expunged""', ')', ';', 'return', 'super', '.', 'getHeader', '(', 'name', ',', 'delimiter', ')', ';', '}']","['String', 'getHeader', '(', 'String', 'name', ',', 'String', 'delimiter', ')', 'throws', 'MessagingException', '{', 'if', '(', 'null', ')', '(', '(', 'MboxFolder', ')', ')', '.', 'checkOpen', '(', ')', ';', 'if', '(', 'isExpunged', ')', '(', '""""', ')', ';', 'getHeader', '(', 'delimiter', ')', ';', '}']",54,40,6,258,148,15,45.267489711934154,29.166666666666668,,,,-1,-1,-1,-1,False
L164_createTask_1.txt,code2vec,METHOD_NAME,token_wrong,0.3115,0.5285,5.4868,12.0736,"{'n_total': 297, 'n_valid': 41, 'n_correct': 27}",116.44202,"@Before public void createTask() { Project project = ProjectBuilder.builder().build(); checkTask = project.getTasks().create(""checkTaskUnderTest"", SpotlessTask.class); checkTask.setCheck(); applyTask = project.getTasks().create(""applyTaskUnderTest"", SpotlessTask.class); applyTask.setApply(); }","void createTask(){Projectbuild();create("""",SpotlessTask);checkTask.setCheck();create("""",SpotlessTask);}","['@', 'Before', 'public', 'void', 'createTask', '(', ')', '{', 'Project', 'project', '=', 'ProjectBuilder', '.', 'builder', '(', ')', '.', 'build', '(', ')', ';', 'checkTask', '=', 'project', '.', 'getTasks', '(', ')', '.', 'create', '(', '""checkTaskUnderTest""', ',', 'SpotlessTask', '.', 'class', ')', ';', 'checkTask', '.', 'setCheck', '(', ')', ';', 'applyTask', '=', 'project', '.', 'getTasks', '(', ')', '.', 'create', '(', '""applyTaskUnderTest""', ',', 'SpotlessTask', '.', 'class', ')', ';', 'applyTask', '.', 'setApply', '(', ')', ';', '}']","['void', 'createTask', '(', ')', '{', 'Projectbuild', '(', ')', ';', 'create', '(', '""""', ',', 'SpotlessTask', ')', ';', 'checkTask', '.', 'setCheck', '(', ')', ';', 'create', '(', '""""', ',', 'SpotlessTask', ')', ';', '}']",68,30,6,294,103,16,68.70503597122301,61.29032258064516,,,,-1,-1,-1,-1,False
L165_closeContext_1.txt,code2vec,METHOD_NAME,token_wrong,0.2043,0.2156,3.7057,3.6405,"{'n_total': 310, 'n_valid': 47, 'n_correct': 21}",132.415979,"private void closeContext() { if (this.app != null) { Expression parsed = new SpelExpressionParser().parseExpression(""close()""); parsed.getValue(this.app); this.app = null; } }","void closeContext(){if(this!=null){Expression parsed=newSpelExpressionParser().parseExpression(""close"");parsed.getValue(this.app);this.app=null;}}","['private', 'void', 'closeContext', '(', ')', '{', 'if', '(', 'this', '.', 'app', '!=', 'null', ')', '{', 'Expression', 'parsed', '=', 'new', 'SpelExpressionParser', '(', ')', '.', 'parseExpression', '(', '""close()""', ')', ';', 'parsed', '.', 'getValue', '(', 'this', '.', 'app', ')', ';', 'this', '.', 'app', '=', 'null', ';', '}', '}']","['void', 'closeContext', '(', ')', '{', 'if', '(', 'this', '!=', 'null', ')', '{', 'Expression', 'parsed', '=', 'newSpelExpressionParser', '(', ')', '.', 'parseExpression', '(', '""close""', ')', ';', 'parsed', '.', 'getValue', '(', 'this', '.', 'app', ')', ';', 'this', '.', 'app', '=', 'null', ';', '}', '}']",45,41,6,176,146,18,18.9873417721519,10.256410256410255,,,,-1,-1,-1,-1,False
L166_getNewProtocol_1.txt,code2vec,METHOD_NAME,token_wrong,0.8446,0.5915,17.2616,17.8611,"{'n_total': 131, 'n_valid': 19, 'n_correct': 14}",55.248941,"private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol = new MasterProtocol(urlParser, globalInfo, proxy.lock); newProtocol.setProxy(proxy); return newProtocol; }","MasterProtocol getNewProtocol(FailoverProxy proxy,UrlParser urlParser){return newProtocol;}","['private', 'static', 'MasterProtocol', 'getNewProtocol', '(', 'FailoverProxy', 'proxy', ',', 'final', 'GlobalStateInfo', 'globalInfo', ',', 'UrlParser', 'urlParser', ')', '{', 'MasterProtocol', 'newProtocol', '=', 'new', 'MasterProtocol', '(', 'urlParser', ',', 'globalInfo', ',', 'proxy', '.', 'lock', ')', ';', 'newProtocol', '.', 'setProxy', '(', 'proxy', ')', ';', 'return', 'newProtocol', ';', '}']","['MasterProtocol', 'getNewProtocol', '(', 'FailoverProxy', 'proxy', ',', 'UrlParser', 'urlParser', ')', '{', 'return', 'newProtocol', ';', '}']",42,14,6,257,91,20,70.042194092827,77.77777777777779,,,,-1,-1,-1,-1,False
L167_relevanceOfEntity_1.txt,code2vec,METHOD_NAME,token_wrong,0.2364,0.2216,16.0056,18.478,"{'n_total': 270, 'n_valid': 35, 'n_correct': 19}",98.663917,"public static EntityRelevanceJudgment relevanceOfEntity(CharSequence entity, ArrayList<EntityRelevanceJudgment> judgments) throws UnsupportedEncodingException { for (EntityRelevanceJudgment ju : judgments) { if (entity.equals(ju.id)) return ju; } return notFound; }",EntityRelevanceJudgment relevanceOfEntity(ArrayList<EntityRelevanceJudgment>judgments){for(EntityRelevanceJudgment ju:judgments){if(entity.equals(ju.id))return ju;}},"['public', 'static', 'EntityRelevanceJudgment', 'relevanceOfEntity', '(', 'CharSequence', 'entity', ',', 'ArrayList', '<', 'EntityRelevanceJudgment', '>', 'judgments', ')', 'throws', 'UnsupportedEncodingException', '{', 'for', '(', 'EntityRelevanceJudgment', 'ju', ':', 'judgments', ')', '{', 'if', '(', 'entity', '.', 'equals', '(', 'ju', '.', 'id', ')', ')', 'return', 'ju', ';', '}', 'return', 'notFound', ';', '}']","['EntityRelevanceJudgment', 'relevanceOfEntity', '(', 'ArrayList', '<', 'EntityRelevanceJudgment', '>', 'judgments', ')', '{', 'for', '(', 'EntityRelevanceJudgment', 'ju', ':', 'judgments', ')', '{', 'if', '(', 'entity', '.', 'equals', '(', 'ju', '.', 'id', ')', ')', 'return', 'ju', ';', '}', '}']",44,34,6,265,165,23,41.32231404958678,26.31578947368421,,,,-1,-1,-1,-1,False
L168_resetIsValidDate_1.txt,code2vec,METHOD_NAME,token_wrong,0.1909,0.4236,16.1854,21.9052,"{'n_total': 234, 'n_valid': 57, 'n_correct': 24}",160.394155,public void resetIsValidDate() { this.isValidStartDate = true; this.isValidDueDate = true; this.isValidRetractDate = true; this.isValidFeedbackDate = true; },void resetIsValidDate(){isValidStartDate=truethis.isValidDueDate=this;isValidFeedbackDate=true;},"['public', 'void', 'resetIsValidDate', '(', ')', '{', 'this', '.', 'isValidStartDate', '=', 'true', ';', 'this', '.', 'isValidDueDate', '=', 'true', ';', 'this', '.', 'isValidRetractDate', '=', 'true', ';', 'this', '.', 'isValidFeedbackDate', '=', 'true', ';', '}']","['void', 'resetIsValidDate', '(', ')', '{', 'isValidStartDate', '=', 'truethis', '.', 'isValidDueDate', '=', 'this', ';', 'isValidFeedbackDate', '=', 'true', ';', '}']",31,18,6,157,96,22,45.18518518518518,52.0,,,,-1,-1,-1,-1,False
L169_performAction_2.txt,code2vec,METHOD_NAME,token_wrong,0.9797,0.8228,11.3268,14.4466,"{'n_total': 124, 'n_valid': 11, 'n_correct': 11}",32.557814,@Override public void performAction(FileSet files) { TransferableFileSet tfs = new TransferableFileSet(files); tfs.setJavaFileListDataFlavorSupported(false); tfs.setTextUriFlavorSupported(false); tfs.setFileSetDataFlavorSupported(false); ClipboardSupport.setClipboardContents(tfs); },void performAction(FileSet files){(files);(tfs);},"['@', 'Override', 'public', 'void', 'performAction', '(', 'FileSet', 'files', ')', '{', 'TransferableFileSet', 'tfs', '=', 'new', 'TransferableFileSet', '(', 'files', ')', ';', 'tfs', '.', 'setJavaFileListDataFlavorSupported', '(', 'false', ')', ';', 'tfs', '.', 'setTextUriFlavorSupported', '(', 'false', ')', ';', 'tfs', '.', 'setFileSetDataFlavorSupported', '(', 'false', ')', ';', 'ClipboardSupport', '.', 'setClipboardContents', '(', 'tfs', ')', ';', '}']","['void', 'performAction', '(', 'FileSet', 'files', ')', '{', '(', 'files', ')', ';', '(', 'tfs', ')', ';', '}']",48,16,6,283,49,19,88.63636363636364,76.19047619047619,,,,-1,-1,-1,-1,False
L170_supppliesFluxStreamString_1.txt,code2vec,METHOD_NAME,token_wrong,0.665,0.3721,13.8371,14.0607,"{'n_total': 510, 'n_valid': 46, 'n_correct': 27}",151.629734,"@Test public void supppliesFluxStreamString() { CompiledFunctionFactory<Supplier<Flux<String>>> compiled = new SupplierCompiler<Flux<String>>(String.class.getName()).compile(""foos"", ""() -> Flux.interval(Duration.ofMillis(1000)).map(Object::toString)"", ""Flux<String>""); assertThat(FunctionFactoryUtils.isFluxSupplier(compiled.getFactoryMethod())).isTrue(); assertThat(compiled.getResult().get().blockFirst()).isEqualTo(""0""); }","@Test void supppliesFluxStreamString(){CompiledFunctionFactory<Supplier<Flux<String>>>compiled=new SupplierCompiler<>(getName()).compile("""","""");(FunctionFactoryUtils(compiled)).isTrue();assertThat(compiled.get().blockFirst()).isEqualTo(""0"");}","['@', 'Test', 'public', 'void', 'supppliesFluxStreamString', '(', ')', '{', 'CompiledFunctionFactory', '<', 'Supplier', '<', 'Flux', '<', 'String', '>', '>', '>', 'compiled', '=', 'new', 'SupplierCompiler', '<', 'Flux', '<', 'String', '>', '>', '(', 'String', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'compile', '(', '""foos""', ',', '""() -> Flux.interval(Duration.ofMillis(1000)).map(Object::toString)""', ',', '""Flux<String>""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'compiled', '.', 'getFactoryMethod', '(', ')', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'compiled', '.', 'getResult', '(', ')', '.', 'get', '(', ')', '.', 'blockFirst', '(', ')', ')', '.', 'isEqualTo', '(', '""0""', ')', ';', '}']","['@', 'Test', 'void', 'supppliesFluxStreamString', '(', ')', '{', 'CompiledFunctionFactory', '<', 'Supplier', '<', 'Flux', '<', 'String', '>', '>', '>', 'compiled', '=', 'new', 'SupplierCompiler', '<', '>', '(', 'getName', '(', ')', ')', '.', 'compile', '(', '""""', ',', '""""', ')', ';', '(', 'FunctionFactoryUtils', '(', 'compiled', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'compiled', '.', 'get', '(', ')', '.', 'blockFirst', '(', ')', ')', '.', 'isEqualTo', '(', '""0""', ')', ';', '}']",88,66,6,425,242,31,46.44670050761421,26.82926829268293,,,,-1,-1,-1,-1,False
L171_prepareStmtInoutParam_1.txt,code2vec,METHOD_NAME,token_wrong,0.4867,0.2422,16.6493,15.442,"{'n_total': 202, 'n_valid': 35, 'n_correct': 14}",97.999526,"@Test public void prepareStmtInoutParam() throws SQLException { Assume.assumeTrue(sharedUsePrepare()); PreparedStatement preparedStatement = sharedConnection.prepareStatement(""{call inOutParam(?)}""); preparedStatement.setInt(1, 1); preparedStatement.execute(); }",@Test void prepareStmtInoutParam()throws SQLException{PreparedStatement preparedStatement=setInt();preparedStatement.execute();},"['@', 'Test', 'public', 'void', 'prepareStmtInoutParam', '(', ')', 'throws', 'SQLException', '{', 'Assume', '.', 'assumeTrue', '(', 'sharedUsePrepare', '(', ')', ')', ';', 'PreparedStatement', 'preparedStatement', '=', 'sharedConnection', '.', 'prepareStatement', '(', '""{call inOutParam(?)}""', ')', ';', 'preparedStatement', '.', 'setInt', '(', '1', ',', '1', ')', ';', 'preparedStatement', '.', 'execute', '(', ')', ';', '}']","['@', 'Test', 'void', 'prepareStmtInoutParam', '(', ')', 'throws', 'SQLException', '{', 'PreparedStatement', 'preparedStatement', '=', 'setInt', '(', ')', ';', 'preparedStatement', '.', 'execute', '(', ')', ';', '}']",45,23,6,262,128,27,57.02127659574469,56.41025641025641,,,,-1,-1,-1,-1,False
L172_addVerDriver_1.txt,code2vec,METHOD_NAME,token_wrong,0.6808,0.6686,20.6891,21.4455,"{'n_total': 224, 'n_valid': 27, 'n_correct': 25}",73.497359,"private void addVerDriver() { View divider = new View(getContext()); divider.setBackgroundResource(R.color.divider_black_menu); addView(divider, LayoutParams.MATCH_PARENT, 1); divider = new View(getContext()); divider.setBackgroundResource(R.color.divider_gray_menu); addView(divider, LayoutParams.MATCH_PARENT, 1); }",void addVerDriver(){(getContext()).View(getContext());setBackgroundResource();},"['private', 'void', 'addVerDriver', '(', ')', '{', 'View', 'divider', '=', 'new', 'View', '(', 'getContext', '(', ')', ')', ';', 'divider', '.', 'setBackgroundResource', '(', 'R', '.', 'color', '.', 'divider_black_menu', ')', ';', 'addView', '(', 'divider', ',', 'LayoutParams', '.', 'MATCH_PARENT', ',', '1', ')', ';', 'divider', '=', 'new', 'View', '(', 'getContext', '(', ')', ')', ';', 'divider', '.', 'setBackgroundResource', '(', 'R', '.', 'color', '.', 'divider_gray_menu', ')', ';', 'addView', '(', 'divider', ',', 'LayoutParams', '.', 'MATCH_PARENT', ',', '1', ')', ';', '}']","['void', 'addVerDriver', '(', ')', '{', '(', 'getContext', '(', ')', ')', '.', 'View', '(', 'getContext', '(', ')', ')', ';', 'setBackgroundResource', '(', ')', ';', '}']",72,23,6,317,79,18,79.59866220735786,74.24242424242425,,,,-1,-1,-1,-1,False
L173_testEidFallthrough_1.txt,code2vec,METHOD_NAME,token_wrong,0.2642,0.2159,19.5672,17.9637,"{'n_total': 494, 'n_valid': 56, 'n_correct': 32}",157.974846,"@Test public void testEidFallthrough() throws UserNotDefinedException { Mockito.when(uds.getUserByAid(Mockito.anyString())).thenThrow(UserNotDefinedException.class); Mockito.when(uds.getUser(""1234"")).thenReturn(user); Mockito.when(dhs.getConfigurationSetting(""user.explicit.id.only"", false)).thenReturn(false); Assert.assertEquals(user, provider.getUserByIdEid(""1234"")); }","@Test void testEidFallthrough()throws UserNotDefinedException{((anyString())).thenThrow(UserNotDefinedException);Mockito.when(getUser(""234"")).thenReturn();Mockito(dhs("""",false)).thenReturn(false);((""""));}","['@', 'Test', 'public', 'void', 'testEidFallthrough', '(', ')', 'throws', 'UserNotDefinedException', '{', 'Mockito', '.', 'when', '(', 'uds', '.', 'getUserByAid', '(', 'Mockito', '.', 'anyString', '(', ')', ')', ')', '.', 'thenThrow', '(', 'UserNotDefinedException', '.', 'class', ')', ';', 'Mockito', '.', 'when', '(', 'uds', '.', 'getUser', '(', '""1234""', ')', ')', '.', 'thenReturn', '(', 'user', ')', ';', 'Mockito', '.', 'when', '(', 'dhs', '.', 'getConfigurationSetting', '(', '""user.explicit.id.only""', ',', 'false', ')', ')', '.', 'thenReturn', '(', 'false', ')', ';', 'Assert', '.', 'assertEquals', '(', 'user', ',', 'provider', '.', 'getUserByIdEid', '(', '""1234""', ')', ')', ';', '}']","['@', 'Test', 'void', 'testEidFallthrough', '(', ')', 'throws', 'UserNotDefinedException', '{', '(', '(', 'anyString', '(', ')', ')', ')', '.', 'thenThrow', '(', 'UserNotDefinedException', ')', ';', 'Mockito', '.', 'when', '(', 'getUser', '(', '""234""', ')', ')', '.', 'thenReturn', '(', ')', ';', 'Mockito', '(', 'dhs', '(', '""""', ',', 'false', ')', ')', '.', 'thenReturn', '(', 'false', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",84,58,6,372,204,24,48.275862068965516,33.33333333333333,,,,-1,-1,-1,-1,False
L174_getOwner_1.txt,code2vec,METHOD_NAME,token_wrong,0.3316,0.903,2.0484,14.0048,"{'n_total': 140, 'n_valid': 26, 'n_correct': 14}",75.003112,@Override public String getOwner() { LOGGER.trace(getDebugString()); lag(); return super.getOwner(); },String getOwner(){LOGGER.trace(getDebugString);},"['@', 'Override', 'public', 'String', 'getOwner', '(', ')', '{', 'LOGGER', '.', 'trace', '(', 'getDebugString', '(', ')', ')', ';', 'lag', '(', ')', ';', 'return', 'super', '.', 'getOwner', '(', ')', ';', '}']","['String', 'getOwner', '(', ')', '{', 'LOGGER', '.', 'trace', '(', 'getDebugString', ')', ';', '}']",29,13,6,102,48,14,61.36363636363637,69.56521739130434,,,,-1,-1,-1,-1,False
L175_patchObjects_1.txt,code2vec,METHOD_NAME,token_wrong,0.5545,0.6874,16.2974,15.2861,"{'n_total': 665, 'n_valid': 62, 'n_correct': 47}",189.547187,"@PATCH public void patchObjects(List<APIPatch<String>> patches) throws GuacamoleException { for (APIPatch<String> patch : patches) { if (patch.getOp() != APIPatch.Operation.remove) throw new GuacamoleUnsupportedException(""Only the \""remove\"" "" + ""operation is supported.""); String path = patch.getPath(); if (!path.startsWith(""/"")) throw new GuacamoleClientException(""Patch paths must start with \""/\"".""); directory.remove(path.substring(1)); } }","void patchObjects(List<APIPatch<String>>patches)throws GuacamoleException{for(APIPatch<String>patch:patches){if(patch()!=Operation)throw new GuacamoleUnsupportedException(""""+"""");if((""""))("""").remove();}}","['@', 'PATCH', 'public', 'void', 'patchObjects', '(', 'List', '<', 'APIPatch', '<', 'String', '>', '>', 'patches', ')', 'throws', 'GuacamoleException', '{', 'for', '(', 'APIPatch', '<', 'String', '>', 'patch', ':', 'patches', ')', '{', 'if', '(', 'patch', '.', 'getOp', '(', ')', '!=', 'APIPatch', '.', 'Operation', '.', 'remove', ')', 'throw', 'new', 'GuacamoleUnsupportedException', '(', '""Only the \\""remove\\"" ""', '+', '""operation is supported.""', ')', ';', 'String', 'path', '=', 'patch', '.', 'getPath', '(', ')', ';', 'if', '(', '!', 'path', '.', 'startsWith', '(', '""/""', ')', ')', 'throw', 'new', 'GuacamoleClientException', '(', '""Patch paths must start with \\""/\\"".""', ')', ';', 'directory', '.', 'remove', '(', 'path', '.', 'substring', '(', '1', ')', ')', ';', '}', '}']","['void', 'patchObjects', '(', 'List', '<', 'APIPatch', '<', 'String', '>', '>', 'patches', ')', 'throws', 'GuacamoleException', '{', 'for', '(', 'APIPatch', '<', 'String', '>', 'patch', ':', 'patches', ')', '{', 'if', '(', 'patch', '(', ')', '!=', 'Operation', ')', 'throw', 'new', 'GuacamoleUnsupportedException', '(', '""""', '+', '""""', ')', ';', 'if', '(', '(', '""""', ')', ')', '(', '""""', ')', '.', 'remove', '(', ')', ';', '}', '}']",92,59,6,446,202,18,57.009345794392516,38.372093023255815,,,,-1,-1,-1,-1,False
L176_shouldMatchEqualsSearch_1.txt,code2vec,METHOD_NAME,token_wrong,0.982,0.5888,20.6954,16.4819,"{'n_total': 343, 'n_valid': 36, 'n_correct': 25}",107.757708,"@Test public void shouldMatchEqualsSearch() { QueryFilter<String> queryFilter = equalTo(""param1"", ""value1""); boolean result = queryFilter.accept(filterVisitor, serviceConfig); assertThat(result).isTrue(); }","void shouldMatchEqualsSearch(){QueryFilter<String>queryFilter=equalTo("""","""");result.accept(filterVisitor,serviceConfig);(result);}","['@', 'Test', 'public', 'void', 'shouldMatchEqualsSearch', '(', ')', '{', 'QueryFilter', '<', 'String', '>', 'queryFilter', '=', 'equalTo', '(', '""param1""', ',', '""value1""', ')', ';', 'boolean', 'result', '=', 'queryFilter', '.', 'accept', '(', 'filterVisitor', ',', 'serviceConfig', ')', ';', 'assertThat', '(', 'result', ')', '.', 'isTrue', '(', ')', ';', '}']","['void', 'shouldMatchEqualsSearch', '(', ')', '{', 'QueryFilter', '<', 'String', '>', 'queryFilter', '=', 'equalTo', '(', '""""', ',', '""""', ')', ';', 'result', '.', 'accept', '(', 'filterVisitor', ',', 'serviceConfig', ')', ';', '(', 'result', ')', ';', '}']",43,32,6,206,130,29,42.93785310734463,29.72972972972973,,,,-1,-1,-1,-1,False
L177_reset_1.txt,code2vec,METHOD_NAME,token_wrong,0.2181,0.2368,8.3357,10.4941,"{'n_total': 229, 'n_valid': 29, 'n_correct': 20}",87.18813,public void reset(ToolConfiguration configuration) { for (Iterator i = renderServices.iterator(); i.hasNext(); ) { ToolRenderService trs = (ToolRenderService) i.next(); trs.reset(configuration); } },void reset(ToolConfiguration configuration){for(iterator();;){trs.reset();}},"['public', 'void', 'reset', '(', 'ToolConfiguration', 'configuration', ')', '{', 'for', '(', 'Iterator', 'i', '=', 'renderServices', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'ToolRenderService', 'trs', '=', '(', 'ToolRenderService', ')', 'i', '.', 'next', '(', ')', ';', 'trs', '.', 'reset', '(', 'configuration', ')', ';', '}', '}']","['void', 'reset', '(', 'ToolConfiguration', 'configuration', ')', '{', 'for', '(', 'iterator', '(', ')', ';', ';', ')', '{', 'trs', '.', 'reset', '(', ')', ';', '}', '}']",48,24,6,198,76,11,65.24064171122996,57.14285714285714,,,,-1,-1,-1,-1,False
L178_modify_1.txt,code2vec,METHOD_NAME,token_wrong,0.4654,0.9931,14.8113,21.3608,"{'n_total': 229, 'n_valid': 26, 'n_correct': 22}",76.548056,public void modify(JavaProcessBuilder builder) { if (flags != null) { for (String flag : flags) { builder.getFlags().add(flag); } } },void modify(JavaProcessBuilder builder){if(null){for(String flag:flags){builder.getFlags();}}},"['public', 'void', 'modify', '(', 'JavaProcessBuilder', 'builder', ')', '{', 'if', '(', 'flags', '!=', 'null', ')', '{', 'for', '(', 'String', 'flag', ':', 'flags', ')', '{', 'builder', '.', 'getFlags', '(', ')', '.', 'add', '(', 'flag', ')', ';', '}', '}', '}']","['void', 'modify', '(', 'JavaProcessBuilder', 'builder', ')', '{', 'if', '(', 'null', ')', '{', 'for', '(', 'String', 'flag', ':', 'flags', ')', '{', 'builder', '.', 'getFlags', '(', ')', ';', '}', '}', '}']",37,29,6,133,94,12,32.231404958677686,25.806451612903224,,,,-1,-1,-1,-1,False
L179_toInteger_1.txt,code2vec,METHOD_NAME,token_wrong,0.3165,0.4283,5.4886,7.3863,"{'n_total': 176, 'n_valid': 19, 'n_correct': 19}",58.570994,private static int toInteger(int[] digits) { int result = 0; for (int x : digits) result = result * 10 + x; return result; },int toInteger(int[]digits){for(int x:digits);},"['private', 'static', 'int', 'toInteger', '(', 'int', '[', ']', 'digits', ')', '{', 'int', 'result', '=', '0', ';', 'for', '(', 'int', 'x', ':', 'digits', ')', 'result', '=', 'result', '*', '10', '+', 'x', ';', 'return', 'result', ';', '}']","['int', 'toInteger', '(', 'int', '[', ']', 'digits', ')', '{', 'for', '(', 'int', 'x', ':', 'digits', ')', ';', '}']",35,18,6,124,46,15,71.55963302752293,58.620689655172406,,,,-1,-1,-1,-1,False
L180_init_2.txt,code2vec,METHOD_NAME,token_wrong,0.2171,0.2171,4.625,4.625,"{'n_total': 179, 'n_valid': 28, 'n_correct': 13}",77.315693,"private void init() { if (debug == null) { debug = Debug.getInstance(""amMonitoring""); } }","void init(){if(debug==null){debug=Debug.getInstance(""amMonitoring"");}}","['private', 'void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']",24,23,6,89,70,10,24.050632911392405,5.555555555555555,,,,-1,-1,-1,-1,False
L181_addExcludedServiceProviders_1.txt,code2vec,METHOD_NAME,token_wrong,0.2,0.7598,14.7093,17.1861,"{'n_total': 332, 'n_valid': 46, 'n_correct': 33}",128.370642,"private void addExcludedServiceProviders() { excludedServiceSingletons.put(SchemaType.GLOBAL, CollectionUtils.<Function<String, Boolean>>asSet()); excludedServiceSingletons.put(SchemaType.ORGANIZATION, asSet(AUTHENTICATION_MODULE_HANDLES_FUNCTION)); excludedServiceCollections.put(SchemaType.GLOBAL, asSet(AUTHENTICATION_MODULE_HANDLES_FUNCTION)); excludedServiceCollections.put(SchemaType.ORGANIZATION, CollectionUtils.<Function<String, Boolean>>asSet()); }",void addExcludedServiceProviders(){(asSet());((AUTHENTICATION));put(SchemaType());(SchemaType);},"['private', 'void', 'addExcludedServiceProviders', '(', ')', '{', 'excludedServiceSingletons', '.', 'put', '(', 'SchemaType', '.', 'GLOBAL', ',', 'CollectionUtils', '.', '<', 'Function', '<', 'String', ',', 'Boolean', '>', '>', 'asSet', '(', ')', ')', ';', 'excludedServiceSingletons', '.', 'put', '(', 'SchemaType', '.', 'ORGANIZATION', ',', 'asSet', '(', 'AUTHENTICATION_MODULE_HANDLES_FUNCTION', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', 'SchemaType', '.', 'GLOBAL', ',', 'asSet', '(', 'AUTHENTICATION_MODULE_HANDLES_FUNCTION', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', 'SchemaType', '.', 'ORGANIZATION', ',', 'CollectionUtils', '.', '<', 'Function', '<', 'String', ',', 'Boolean', '>', '>', 'asSet', '(', ')', ')', ';', '}']","['void', 'addExcludedServiceProviders', '(', ')', '{', '(', 'asSet', '(', ')', ')', ';', '(', '(', 'AUTHENTICATION', ')', ')', ';', 'put', '(', 'SchemaType', '(', ')', ')', ';', '(', 'SchemaType', ')', ';', '}']",81,29,6,458,96,33,85.1764705882353,69.33333333333334,,,,-1,-1,-1,-1,False
L182_getPermissionsString_1.txt,code2vec,METHOD_NAME,token_wrong,0.17,0.237,17.9565,18.1825,"{'n_total': 230, 'n_valid': 33, 'n_correct': 19}",103.755903,@Override public String getPermissionsString() { if (!getPermissionsStringSet) { getPermissionsString = file.getPermissionsString(); getPermissionsStringSet = true; } return getPermissionsString; },@Override String getPermissionsString(){if(getPermissionsStringSet){getPermissionsString();}return getPermissionsString;},"['@', 'Override', 'public', 'String', 'getPermissionsString', '(', ')', '{', 'if', '(', '!', 'getPermissionsStringSet', ')', '{', 'getPermissionsString', '=', 'file', '.', 'getPermissionsString', '(', ')', ';', 'getPermissionsStringSet', '=', 'true', ';', '}', 'return', 'getPermissionsString', ';', '}']","['@', 'Override', 'String', 'getPermissionsString', '(', ')', '{', 'if', '(', 'getPermissionsStringSet', ')', '{', 'getPermissionsString', '(', ')', ';', '}', 'return', 'getPermissionsString', ';', '}']",31,21,6,197,121,26,44.44444444444444,40.0,,,,-1,-1,-1,-1,False
L183_nextResume_1.txt,code2vec,METHOD_NAME,token_wrong,0.4882,0.4896,19.0956,21.0653,"{'n_total': 260, 'n_valid': 30, 'n_correct': 25}",87.545982,private Optional<WatchRequest> nextResume() { WatcherImpl pendingWatcher = this.pendingWatchers.peek(); if (pendingWatcher != null) { return Optional.of(this.toWatchCreateRequest(pendingWatcher)); } return Optional.empty(); },Optional<WatchRequest>nextResume(){pendingWatcher=this.peek;if(null){(this);}},"['private', 'Optional', '<', 'WatchRequest', '>', 'nextResume', '(', ')', '{', 'WatcherImpl', 'pendingWatcher', '=', 'this', '.', 'pendingWatchers', '.', 'peek', '(', ')', ';', 'if', '(', 'pendingWatcher', '!=', 'null', ')', '{', 'return', 'Optional', '.', 'of', '(', 'this', '.', 'toWatchCreateRequest', '(', 'pendingWatcher', ')', ')', ';', '}', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}']","['Optional', '<', 'WatchRequest', '>', 'nextResume', '(', ')', '{', 'pendingWatcher', '=', 'this', '.', 'peek', ';', 'if', '(', 'null', ')', '{', '(', 'this', ')', ';', '}', '}']",49,25,6,225,78,16,70.33492822966507,55.81395348837209,,,,-1,-1,-1,-1,False
L184_init_3.txt,code2vec,METHOD_NAME,token_wrong,0.4945,0.413,6.4896,8.2666,"{'n_total': 166, 'n_valid': 18, 'n_correct': 14}",51.534097,public void init() { dbVendor = getDbVendor(); autoDdl = getAutoDdl(); if (autoDdl) { } },void init(){dbVendor=getDbVendor();autoDdl();if(autoDdl){}},"['public', 'void', 'init', '(', ')', '{', 'dbVendor', '=', 'getDbVendor', '(', ')', ';', 'autoDdl', '=', 'getAutoDdl', '(', ')', ';', 'if', '(', 'autoDdl', ')', '{', '}', '}']","['void', 'init', '(', ')', '{', 'dbVendor', '=', 'getDbVendor', '(', ')', ';', 'autoDdl', '(', ')', ';', 'if', '(', 'autoDdl', ')', '{', '}', '}']",25,22,6,89,59,10,37.9746835443038,15.789473684210526,,,,-1,-1,-1,-1,False
L185_defaultRoad_1.txt,code2vec,METHOD_NAME,token_wrong,0.9859,0.9899,19.9326,22.1378,"{'n_total': 151, 'n_valid': 18, 'n_correct': 17}",49.700191,protected Road[] defaultRoad(ArrayList<GeoPoint> waypoints) { Road[] roads = new Road[1]; roads[0] = new Road(waypoints); return roads; },Road[]defaultRoad(ArrayList waypoints){Road[]roads=roads;},"['protected', 'Road', '[', ']', 'defaultRoad', '(', 'ArrayList', '<', 'GeoPoint', '>', 'waypoints', ')', '{', 'Road', '[', ']', 'roads', '=', 'new', 'Road', '[', '1', ']', ';', 'roads', '[', '0', ']', '=', 'new', 'Road', '(', 'waypoints', ')', ';', 'return', 'roads', ';', '}']","['Road', '[', ']', 'defaultRoad', '(', 'ArrayList', 'waypoints', ')', '{', 'Road', '[', ']', 'roads', '=', 'roads', ';', '}']",39,17,6,137,58,17,65.83333333333333,66.66666666666666,,,,-1,-1,-1,-1,False
L186_toString_1.txt,code2vec,METHOD_NAME,token_wrong,0.1347,0.2072,9.0372,9.0112,"{'n_total': 224, 'n_valid': 45, 'n_correct': 19}",125.206856,public String toString() { if (this.iso8601TimeInterval == null) { this.createIso8601TimeInterval(); } return this.iso8601TimeInterval; },String toString(){if(this.isoTimeInterval==null){this.TimeInterval();}return this.isoTimeInterval;},"['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'iso8601TimeInterval', '==', 'null', ')', '{', 'this', '.', 'createIso8601TimeInterval', '(', ')', ';', '}', 'return', 'this', '.', 'iso8601TimeInterval', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'isoTimeInterval', '==', 'null', ')', '{', 'this', '.', 'TimeInterval', '(', ')', ';', '}', 'return', 'this', '.', 'isoTimeInterval', ';', '}']",28,27,6,137,99,14,30.89430894308943,4.545454545454546,,,,-1,-1,-1,-1,False
L187_replaceString_1.txt,code2vec,METHOD_NAME,token_wrong,0.2668,0.2956,6.8912,8.581,"{'n_total': 468, 'n_valid': 41, 'n_correct': 37}",121.171991,"public static String replaceString(String originalString, String token, String newString) { int lenToken = token.length(); int idx = originalString.indexOf(token); while (idx != -1) { originalString = originalString.substring(0, idx) + newString + originalString.substring(idx + lenToken); idx = originalString.indexOf(token, idx + lenToken); } return originalString; }","String replaceString(String token,String newString){lenToken();(token);while(1){originalString(0,lenToken);}}","['public', 'static', 'String', 'replaceString', '(', 'String', 'originalString', ',', 'String', 'token', ',', 'String', 'newString', ')', '{', 'int', 'lenToken', '=', 'token', '.', 'length', '(', ')', ';', 'int', 'idx', '=', 'originalString', '.', 'indexOf', '(', 'token', ')', ';', 'while', '(', 'idx', '!=', '-', '1', ')', '{', 'originalString', '=', 'originalString', '.', 'substring', '(', '0', ',', 'idx', ')', '+', 'newString', '+', 'originalString', '.', 'substring', '(', 'idx', '+', 'lenToken', ')', ';', 'idx', '=', 'originalString', '.', 'indexOf', '(', 'token', ',', 'idx', '+', 'lenToken', ')', ';', '}', 'return', 'originalString', ';', '}']","['String', 'replaceString', '(', 'String', 'token', ',', 'String', 'newString', ')', '{', 'lenToken', '(', ')', ';', '(', 'token', ')', ';', 'while', '(', '1', ')', '{', 'originalString', '(', '0', ',', 'lenToken', ')', ';', '}', '}']",82,32,6,369,109,19,74.28571428571429,65.78947368421053,,,,-1,-1,-1,-1,False
L188_createPropertyModel_1.txt,code2vec,METHOD_NAME,token_wrong,0.5268,0.4955,16.4002,16.0676,"{'n_total': 372, 'n_valid': 42, 'n_correct': 36}",126.267181,"protected void createPropertyModel() { retrieveCommonProperties(); if (isHosted()) { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2PEPHosted.xml"")); } else { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2PEPRemote.xml"")); } psModel.clear(); }","void createPropertyModel(){if(isHosted){psModel=AMPropertySheetModel(getResourceAsStream(""""));}{((""""));}psModel.clear();}","['protected', 'void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', '(', ')', ')', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2PEPHosted.xml""', ')', ')', ';', '}', 'else', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2PEPRemote.xml""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']","['void', 'createPropertyModel', '(', ')', '{', 'if', '(', 'isHosted', ')', '{', 'psModel', '=', 'AMPropertySheetModel', '(', 'getResourceAsStream', '(', '""""', ')', ')', ';', '}', '{', '(', '(', '""""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']",66,36,6,396,121,25,74.12398921832884,50.0,,,,-1,-1,-1,-1,False
L189_setAccessorList_1.txt,code2vec,METHOD_NAME,token_wrong,0.9914,0.9534,22.0057,18.0845,"{'n_total': 273, 'n_valid': 23, 'n_correct': 23}",66.223814,"public void setAccessorList(ArrayList accessorList) { if (log.isDebugEnabled()) { log.debug(""setAccessorList(List"" + accessorList + "")""); } forum.getActorPermissions().setAccessors(forumManager.decodeAccessorsList(accessorList)); }","void setAccessorList(ArrayList accessorList){if(isDebugEnabled()){(""""+"""");}((accessorList));}","['public', 'void', 'setAccessorList', '(', 'ArrayList', 'accessorList', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""setAccessorList(List""', '+', 'accessorList', '+', '"")""', ')', ';', '}', 'forum', '.', 'getActorPermissions', '(', ')', '.', 'setAccessors', '(', 'forumManager', '.', 'decodeAccessorsList', '(', 'accessorList', ')', ')', ';', '}']","['void', 'setAccessorList', '(', 'ArrayList', 'accessorList', ')', '{', 'if', '(', 'isDebugEnabled', '(', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', '(', '(', 'accessorList', ')', ')', ';', '}']",46,28,6,231,93,21,65.71428571428571,45.0,,,,-1,-1,-1,-1,False
L190_checkPreconditions_1.txt,code2vec,METHOD_NAME,token_wrong,0.998,0.7921,20.0739,17.7114,"{'n_total': 352, 'n_valid': 32, 'n_correct': 32}",99.677468,"private static void checkPreconditions(JsonNode command, boolean nonTransactional) throws CommandExecutionException { if (!DbHelper.isConnectedAsAdmin(false)) { throw new CommandExecutionException(command, ""non authorized""); } if (nonTransactional && DbHelper.isInTransaction()) { throw new CommandExecutionException(command, ""cannot alter collections during transaction""); } }","void checkPreconditions(JsonNode command,boolean nonTransactional){{CommandExecutionException(command,"""");}if(nonTransactional&DbHelper){CommandExecutionException(command,"""");}}","['private', 'static', 'void', 'checkPreconditions', '(', 'JsonNode', 'command', ',', 'boolean', 'nonTransactional', ')', 'throws', 'CommandExecutionException', '{', 'if', '(', '!', 'DbHelper', '.', 'isConnectedAsAdmin', '(', 'false', ')', ')', '{', 'throw', 'new', 'CommandExecutionException', '(', 'command', ',', '""non authorized""', ')', ';', '}', 'if', '(', 'nonTransactional', '&&', 'DbHelper', '.', 'isInTransaction', '(', ')', ')', '{', 'throw', 'new', 'CommandExecutionException', '(', 'command', ',', '""cannot alter collections during transaction""', ')', ';', '}', '}']","['void', 'checkPreconditions', '(', 'JsonNode', 'command', ',', 'boolean', 'nonTransactional', ')', '{', '{', 'CommandExecutionException', '(', 'command', ',', '""""', ')', ';', '}', 'if', '(', 'nonTransactional', '&', 'DbHelper', ')', '{', 'CommandExecutionException', '(', 'command', ',', '""""', ')', ';', '}', '}']",57,35,6,377,177,24,56.657223796033996,43.13725490196079,,,,-1,-1,-1,-1,False
L191_reset_2.txt,code2vec,METHOD_NAME,token_wrong,0.766,0.5238,5.9238,7.5804,"{'n_total': 329, 'n_valid': 33, 'n_correct': 29}",100.394282,public void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key : getInternalMap().keySet()) { request.removeAttribute(key); } } },void reset(){request();if(request){for(String key:keySet()){request.removeAttribute();}}},"['public', 'void', 'reset', '(', ')', '{', 'getInternalMap', '(', ')', '.', 'clear', '(', ')', ';', 'HttpServletRequest', 'request', '=', 'requestGetter', '.', 'getRequest', '(', ')', ';', 'if', '(', 'request', '!=', 'null', ')', '{', 'for', '(', 'String', 'key', ':', 'getInternalMap', '(', ')', '.', 'keySet', '(', ')', ')', '{', 'request', '.', 'removeAttribute', '(', 'key', ')', ';', '}', '}', '}']","['void', 'reset', '(', ')', '{', 'request', '(', ')', ';', 'if', '(', 'request', ')', '{', 'for', '(', 'String', 'key', ':', 'keySet', '(', ')', ')', '{', 'request', '.', 'removeAttribute', '(', ')', ';', '}', '}', '}']",54,33,6,210,89,11,60.80402010050251,43.75,,,,-1,-1,-1,-1,False
L192_setRelation_1.txt,code2vec,METHOD_NAME,token_wrong,0.6637,0.9183,13.6245,13.2183,"{'n_total': 368, 'n_valid': 33, 'n_correct': 26}",98.183152,"@JsonApiSetRelation public void setRelation(Project project, Long taskId, String fieldName) { Task task = taskRepository.findOne(taskId, null); try { PropertyUtils.setProperty(project, fieldName, task); } catch (Exception e) { throw new RuntimeException(e); } projectRepository.save(project); }","void setRelation(Project project,Long taskId,String fieldName){(taskId);try{(project);}catch(Exception e){(e);}projectRepository.save();}","['@', 'JsonApiSetRelation', 'public', 'void', 'setRelation', '(', 'Project', 'project', ',', 'Long', 'taskId', ',', 'String', 'fieldName', ')', '{', 'Task', 'task', '=', 'taskRepository', '.', 'findOne', '(', 'taskId', ',', 'null', ')', ';', 'try', '{', 'PropertyUtils', '.', 'setProperty', '(', 'project', ',', 'fieldName', ',', 'task', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'projectRepository', '.', 'save', '(', 'project', ')', ';', '}']","['void', 'setRelation', '(', 'Project', 'project', ',', 'Long', 'taskId', ',', 'String', 'fieldName', ')', '{', '(', 'taskId', ')', ';', 'try', '{', '(', 'project', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', '}', 'projectRepository', '.', 'save', '(', ')', ';', '}']",64,42,6,294,137,17,56.678700361010826,37.93103448275862,,,,-1,-1,-1,-1,False
L193_onAssimilate_1.txt,code2vec,METHOD_NAME,token_wrong,0.1913,0.2867,15.035,16.5954,"{'n_total': 504, 'n_valid': 65, 'n_correct': 40}",194.626243,"@Override protected void onAssimilate(MultiblockControllerBase otherMachine) { if (!(otherMachine instanceof MultiblockTurbine)) { BRLog.warning(""[%s] Turbine @ %s is attempting to assimilate a non-Turbine machine! That machine's data will be lost!"", worldObj.isRemote ? ""CLIENT"" : ""SERVER"", getReferenceCoord()); return; } MultiblockTurbine otherTurbine = (MultiblockTurbine) otherMachine; setRotorEnergy(Math.max(rotorEnergy, otherTurbine.rotorEnergy)); }","@Override void onAssimilate(MultiblockControllerBase otherMachine){if((otherMachine instanceof MultiblockTurbine)){BRLog.warning("""",isRemote?"""":"""",getReferenceCoord());}otherTurbine=(MultiblockTurbine)setRotorEnergy((rotorEnergy));}","['@', 'Override', 'protected', 'void', 'onAssimilate', '(', 'MultiblockControllerBase', 'otherMachine', ')', '{', 'if', '(', '!', '(', 'otherMachine', 'instanceof', 'MultiblockTurbine', ')', ')', '{', 'BRLog', '.', 'warning', '(', '""[%s] Turbine @ %s is attempting to assimilate a non-Turbine machine! That machine\'s data will be lost!""', ',', 'worldObj', '.', 'isRemote', '?', '""CLIENT""', ':', '""SERVER""', ',', 'getReferenceCoord', '(', ')', ')', ';', 'return', ';', '}', 'MultiblockTurbine', 'otherTurbine', '=', '(', 'MultiblockTurbine', ')', 'otherMachine', ';', 'setRotorEnergy', '(', 'Math', '.', 'max', '(', 'rotorEnergy', ',', 'otherTurbine', '.', 'rotorEnergy', ')', ')', ';', '}']","['@', 'Override', 'void', 'onAssimilate', '(', 'MultiblockControllerBase', 'otherMachine', ')', '{', 'if', '(', '(', 'otherMachine', 'instanceof', 'MultiblockTurbine', ')', ')', '{', 'BRLog', '.', 'warning', '(', '""""', ',', 'isRemote', '?', '""""', ':', '""""', ',', 'getReferenceCoord', '(', ')', ')', ';', '}', 'otherTurbine', '=', '(', 'MultiblockTurbine', ')', 'setRotorEnergy', '(', '(', 'rotorEnergy', ')', ')', ';', '}']",65,49,6,457,232,18,51.252847380410024,27.11864406779661,,,,-1,-1,-1,-1,False
L194_computeSingleSIze_1.txt,code2vec,METHOD_NAME,token_wrong,0.3554,0.5012,17.733,16.4469,"{'n_total': 233, 'n_valid': 28, 'n_correct': 25}",82.952428,private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; },void computeSingleSIze(){for(;;i++)singleSize=product;},"['private', 'void', 'computeSingleSIze', '(', ')', '{', 'int', 'product', '=', '1', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'sizes', '.', 'length', ';', 'i', '++', ')', '{', 'int', 'size', '=', 'sizes', '[', 'i', ']', ';', 'product', '*=', 'size', ';', '}', 'singleSize', '=', 'product', ';', '}']","['void', 'computeSingleSIze', '(', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', 'singleSize', '=', 'product', ';', '}']",46,17,6,156,55,23,75.93984962406014,72.5,,,,-1,-1,-1,-1,False
L195_generateConstructorParamValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.9344,0.9229,24.0477,27.2353,"{'n_total': 171, 'n_valid': 22, 'n_correct': 22}",62.519721,private Object generateConstructorParamValue(Property property) { if (property.hasRelationFunction() && processor != null) { return property.getValue(processor); } else { return property.getValue(); } },Object generateConstructorParamValue(Property property){if(property){}{}},"['private', 'Object', 'generateConstructorParamValue', '(', 'Property', 'property', ')', '{', 'if', '(', 'property', '.', 'hasRelationFunction', '(', ')', '&&', 'processor', '!=', 'null', ')', '{', 'return', 'property', '.', 'getValue', '(', 'processor', ')', ';', '}', 'else', '{', 'return', 'property', '.', 'getValue', '(', ')', ';', '}', '}']","['Object', 'generateConstructorParamValue', '(', 'Property', 'property', ')', '{', 'if', '(', 'property', ')', '{', '}', '{', '}', '}']",41,16,6,202,73,35,77.24550898203593,71.42857142857143,,,,-1,-1,-1,-1,False
L196_notifyFolderRenamedListeners_1.txt,code2vec,METHOD_NAME,token_wrong,0.4864,0.4841,16.7669,17.4006,"{'n_total': 344, 'n_valid': 38, 'n_correct': 23}",110.164784,"protected void notifyFolderRenamedListeners(Folder oldF, Folder newF) { if (folderListeners == null) return; FolderEvent e = new FolderEvent(this, oldF, newF, FolderEvent.RENAMED); queueEvent(e, folderListeners); }","void notifyFolderRenamedListeners(Folder oldF,Folder newF){(null);FolderEvent(oldF,FolderEvent.RENAMED);(e);}","['protected', 'void', 'notifyFolderRenamedListeners', '(', 'Folder', 'oldF', ',', 'Folder', 'newF', ')', '{', 'if', '(', 'folderListeners', '==', 'null', ')', 'return', ';', 'FolderEvent', 'e', '=', 'new', 'FolderEvent', '(', 'this', ',', 'oldF', ',', 'newF', ',', 'FolderEvent', '.', 'RENAMED', ')', ';', 'queueEvent', '(', 'e', ',', 'folderListeners', ')', ';', '}']","['void', 'notifyFolderRenamedListeners', '(', 'Folder', 'oldF', ',', 'Folder', 'newF', ')', '{', '(', 'null', ')', ';', 'FolderEvent', '(', 'oldF', ',', 'FolderEvent', '.', 'RENAMED', ')', ';', '(', 'e', ')', ';', '}']",44,28,6,214,109,34,58.333333333333336,42.10526315789473,,,,-1,-1,-1,-1,False
L197_getSubmitOverrides_1.txt,code2vec,METHOD_NAME,token_wrong,0.3432,0.2965,18.1876,18.9052,"{'n_total': 423, 'n_valid': 47, 'n_correct': 35}",133.569998,"private static Map<String, String> getSubmitOverrides(FormDataMultiPart form) { final Map<String, String> overrides = new HashMap<>(); for (String key : form.getFields().keySet()) { if (!SUBMIT_TOPOLOGY_PARAMS.contains(key)) { overrides.put(key, Forms.getString(form, key)); } } return overrides; }","Map<String>getSubmitOverrides(FormDataMultiPart form){Map<String,String>overrides=new HashMap();for(String key:form){if((key)){overrides(keygetString());}}overrides;}","['private', 'static', 'Map', '<', 'String', ',', 'String', '>', 'getSubmitOverrides', '(', 'FormDataMultiPart', 'form', ')', '{', 'final', 'Map', '<', 'String', ',', 'String', '>', 'overrides', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'form', '.', 'getFields', '(', ')', '.', 'keySet', '(', ')', ')', '{', 'if', '(', '!', 'SUBMIT_TOPOLOGY_PARAMS', '.', 'contains', '(', 'key', ')', ')', '{', 'overrides', '.', 'put', '(', 'key', ',', 'Forms', '.', 'getString', '(', 'form', ',', 'key', ')', ')', ';', '}', '}', 'return', 'overrides', ';', '}']","['Map', '<', 'String', '>', 'getSubmitOverrides', '(', 'FormDataMultiPart', 'form', ')', '{', 'Map', '<', 'String', ',', 'String', '>', 'overrides', '=', 'new', 'HashMap', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'form', ')', '{', 'if', '(', '(', 'key', ')', ')', '{', 'overrides', '(', 'keygetString', '(', ')', ')', ';', '}', '}', 'overrides', ';', '}']",79,50,6,298,166,24,48.175182481751825,39.726027397260275,,,,-1,-1,-1,-1,False
L198_getNewLeaf_1.txt,code2vec,METHOD_NAME,token_wrong,0.5378,0.414,17.4719,21.9947,"{'n_total': 282, 'n_valid': 44, 'n_correct': 21}",125.771536,public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels - 1; l++) { node = node.addChild(); } return node; },NCRPNode getNewLeaf(){NCRPNode nodethis;for(int level;;l++){addChild();}},"['public', 'NCRPNode', 'getNewLeaf', '(', ')', '{', 'NCRPNode', 'node', '=', 'this', ';', 'for', '(', 'int', 'l', '=', 'level', ';', 'l', '<', 'numLevels', '-', '1', ';', 'l', '++', ')', '{', 'node', '=', 'node', '.', 'addChild', '(', ')', ';', '}', 'return', 'node', ';', '}']","['NCRPNode', 'getNewLeaf', '(', ')', '{', 'NCRPNode', 'nodethis', ';', 'for', '(', 'int', 'level', ';', ';', 'l', '++', ')', '{', 'addChild', '(', ')', ';', '}', '}']",41,24,6,139,73,16,53.65853658536586,48.57142857142857,,,,-1,-1,-1,-1,False
L199_isDateNormalized_1.txt,code2vec,METHOD_NAME,token_wrong,0.3147,0.4137,16.9366,20.5218,"{'n_total': 187, 'n_valid': 31, 'n_correct': 19}",89.709183,public static boolean isDateNormalized(long millisSinceEpoch) { boolean isDateNormalized = false; if (millisSinceEpoch % DAY_IN_MILLIS == 0) { isDateNormalized = true; } return isDateNormalized; },boolean isDateNormalized(long millisSinceEpoch){false;if(millisSinceEpoch%DAYMILLIS==0){}},"['public', 'static', 'boolean', 'isDateNormalized', '(', 'long', 'millisSinceEpoch', ')', '{', 'boolean', 'isDateNormalized', '=', 'false', ';', 'if', '(', 'millisSinceEpoch', '%', 'DAY_IN_MILLIS', '==', '0', ')', '{', 'isDateNormalized', '=', 'true', ';', '}', 'return', 'isDateNormalized', ';', '}']","['boolean', 'isDateNormalized', '(', 'long', 'millisSinceEpoch', ')', '{', 'false', ';', 'if', '(', 'millisSinceEpoch', '%', 'DAYMILLIS', '==', '0', ')', '{', '}', '}']",32,20,6,196,90,22,60.91954022988506,46.15384615384615,,,,-1,-1,-1,-1,False
L200_getInstance_1.txt,code2vec,METHOD_NAME,token_wrong,0.7017,0.5597,10.2107,14.001,"{'n_total': 267, 'n_valid': 32, 'n_correct': 28}",91.597361,"private synchronized static ResourceResultCache getInstance() { if ((resourceResultCache == null) && debug.warningEnabled()) { debug.warning(""ResourceResultCache.getInstance():"" + ""ResourceResultCache has not been created:"" + ""returning null""); } return resourceResultCache; }","ResourceResultCache getInstance(){if((resourceResultCache)warningEnabled()){(""""+""""+"""");}}","['private', 'synchronized', 'static', 'ResourceResultCache', 'getInstance', '(', ')', '{', 'if', '(', '(', 'resourceResultCache', '==', 'null', ')', '&&', 'debug', '.', 'warningEnabled', '(', ')', ')', '{', 'debug', '.', 'warning', '(', '""ResourceResultCache.getInstance():""', '+', '""ResourceResultCache has not been created:""', '+', '""returning null""', ')', ';', '}', 'return', 'resourceResultCache', ';', '}']","['ResourceResultCache', 'getInstance', '(', ')', '{', 'if', '(', '(', 'resourceResultCache', ')', 'warningEnabled', '(', ')', ')', '{', '(', '""""', '+', '""""', '+', '""""', ')', ';', '}', '}']",39,25,6,276,89,17,72.2007722007722,42.42424242424242,,,,-1,-1,-1,-1,False
L201_delete_1.txt,code2vec,METHOD_NAME,token_wrong,0.9282,0.987,23.39,36.5425,"{'n_total': 265, 'n_valid': 40, 'n_correct': 25}",112.450404,"@Override @Transactional public void delete(ContentReviewItem item) { Objects.requireNonNull(item, ""item cannot be null""); Objects.requireNonNull(item.getId(), ""Id cannot be null""); Objects.requireNonNull(item.getProviderId(), ""providerId cannot be null""); itemDao.delete(item); }","void delete(ContentReviewItem item){Objects(item,""itemcannotbenull"");requireNonNull(item,"""");}","['@', 'Override', '@', 'Transactional', 'public', 'void', 'delete', '(', 'ContentReviewItem', 'item', ')', '{', 'Objects', '.', 'requireNonNull', '(', 'item', ',', '""item cannot be null""', ')', ';', 'Objects', '.', 'requireNonNull', '(', 'item', '.', 'getId', '(', ')', ',', '""Id cannot be null""', ')', ';', 'Objects', '.', 'requireNonNull', '(', 'item', '.', 'getProviderId', '(', ')', ',', '""providerId cannot be null""', ')', ';', 'itemDao', '.', 'delete', '(', 'item', ')', ';', '}']","['void', 'delete', '(', 'ContentReviewItem', 'item', ')', '{', 'Objects', '(', 'item', ',', '""itemcannotbenull""', ')', ';', 'requireNonNull', '(', 'item', ',', '""""', ')', ';', '}']",55,22,6,280,94,12,69.40298507462687,67.3469387755102,,,,-1,-1,-1,-1,False
L202_save_1.txt,code2vec,METHOD_NAME,token_wrong,0.4419,0.3905,4.7917,7.3082,"{'n_total': 364, 'n_valid': 37, 'n_correct': 31}",105.88611,public void save(String file) { OutFile out = new OutFile(file); out.println(String.valueOf(dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); },void save(String file){out=(file)println();for(String w:keySet()){outprintln((get()));}},"['public', 'void', 'save', '(', 'String', 'file', ')', '{', 'OutFile', 'out', '=', 'new', 'OutFile', '(', 'file', ')', ';', 'out', '.', 'println', '(', 'String', '.', 'valueOf', '(', 'dim', ')', ')', ';', 'for', '(', 'String', 'w', ':', 'wordToFid', '.', 'keySet', '(', ')', ')', '{', 'out', '.', 'println', '(', 'w', ')', ';', 'out', '.', 'println', '(', 'String', '.', 'valueOf', '(', 'wordToFid', '.', 'get', '(', 'w', ')', ')', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', '}']","['void', 'save', '(', 'String', 'file', ')', '{', 'out', '=', '(', 'file', ')', 'println', '(', ')', ';', 'for', '(', 'String', 'w', ':', 'keySet', '(', ')', ')', '{', 'outprintln', '(', '(', 'get', '(', ')', ')', ')', ';', '}', '}']",73,37,6,216,88,10,62.13592233009708,53.73134328358209,,,,-1,-1,-1,-1,False
L203_editItemUrl_1.txt,code2vec,METHOD_NAME,token_wrong,0.2361,0.2221,16.7277,17.4029,"{'n_total': 249, 'n_valid': 44, 'n_correct': 27}",129.384936,"public String editItemUrl(SimplePageBean bean) { String tool = bean.getCurrentTool(""sakai.assignment.grades""); if (tool == null) return null; return ServerConfigurationService.getToolUrl() + ""/"" + tool + ""?assignmentId=/assignment/a/"" + bean.getCurrentSiteId() + ""/"" + id + ""&panel=Main&sakai_action=doEdit_assignment""; }","String editItemUrl(SimplePageBean bean){("""");if(tool=null)return ServerConfigurationService+""doEditassignment"";}","['public', 'String', 'editItemUrl', '(', 'SimplePageBean', 'bean', ')', '{', 'String', 'tool', '=', 'bean', '.', 'getCurrentTool', '(', '""sakai.assignment.grades""', ')', ';', 'if', '(', 'tool', '==', 'null', ')', 'return', 'null', ';', 'return', 'ServerConfigurationService', '.', 'getToolUrl', '(', ')', '+', '""/""', '+', 'tool', '+', '""?assignmentId=/assignment/a/""', '+', 'bean', '.', 'getCurrentSiteId', '(', ')', '+', '""/""', '+', 'id', '+', '""&panel=Main&sakai_action=doEdit_assignment""', ';', '}']","['String', 'editItemUrl', '(', 'SimplePageBean', 'bean', ')', '{', '(', '""""', ')', ';', 'if', '(', 'tool', '=', 'null', ')', 'return', 'ServerConfigurationService', '+', '""doEditassignment""', ';', '}']",53,23,6,321,112,17,68.75,63.829787234042556,,,,-1,-1,-1,-1,False
L204_setValuesAndHashcode_1.txt,code2vec,METHOD_NAME,token_wrong,0.2565,0.1943,17.2034,16.7395,"{'n_total': 332, 'n_valid': 51, 'n_correct': 21}",146.013057,"final void setValuesAndHashcode(@Nonnull String name, @Nonnull String desc, @Nonnegative int hashCodeMultiplier) { this.name = name; this.desc = desc; setHashCode(hashCodeMultiplier * name.hashCode() * desc.hashCode()); }","void setValuesAndHashcode(String name,@Nonnull String desc,@Nonnegative int hashCodeMultiplier){this.name=name;this.desc=desc;setHashCode(hashCodeMultiplier*desc);}","['final', 'void', 'setValuesAndHashcode', '(', '@', 'Nonnull', 'String', 'name', ',', '@', 'Nonnull', 'String', 'desc', ',', '@', 'Nonnegative', 'int', 'hashCodeMultiplier', ')', '{', 'this', '.', 'name', '=', 'name', ';', 'this', '.', 'desc', '=', 'desc', ';', 'setHashCode', '(', 'hashCodeMultiplier', '*', 'name', '.', 'hashCode', '(', ')', '*', 'desc', '.', 'hashCode', '(', ')', ')', ';', '}']","['void', 'setValuesAndHashcode', '(', 'String', 'name', ',', '@', 'Nonnull', 'String', 'desc', ',', '@', 'Nonnegative', 'int', 'hashCodeMultiplier', ')', '{', 'this', '.', 'name', '=', 'name', ';', 'this', '.', 'desc', '=', 'desc', ';', 'setHashCode', '(', 'hashCodeMultiplier', '*', 'desc', ')', ';', '}']",50,37,6,221,164,26,29.230769230769234,29.545454545454547,,,,-1,-1,-1,-1,False
L205_testClose_1.txt,code2vec,METHOD_NAME,token_wrong,0.9327,0.2478,4.072,5.4958,"{'n_total': 237, 'n_valid': 32, 'n_correct': 18}",87.167335,"@Test public void testClose() throws Exception { Namespace ns = mock(Namespace.class); when(nsBuilder.build()).thenReturn(ns); uploader.initialize(config); uploader.close(); verify(ns, times(1)).close(); }",void testClose()throws Exception{(Namespaceclass).thenReturn(ns);uploaderclose(times(1)).close();},"['@', 'Test', 'public', 'void', 'testClose', '(', ')', 'throws', 'Exception', '{', 'Namespace', 'ns', '=', 'mock', '(', 'Namespace', '.', 'class', ')', ';', 'when', '(', 'nsBuilder', '.', 'build', '(', ')', ')', '.', 'thenReturn', '(', 'ns', ')', ';', 'uploader', '.', 'initialize', '(', 'config', ')', ';', 'uploader', '.', 'close', '(', ')', ';', 'verify', '(', 'ns', ',', 'times', '(', '1', ')', ')', '.', 'close', '(', ')', ';', '}']","['void', 'testClose', '(', ')', 'throws', 'Exception', '{', '(', 'Namespaceclass', ')', '.', 'thenReturn', '(', 'ns', ')', ';', 'uploaderclose', '(', 'times', '(', '1', ')', ')', '.', 'close', '(', ')', ';', '}']",62,29,6,205,98,15,56.315789473684205,58.92857142857143,,,,-1,-1,-1,-1,False
L206_updateAltitude_1.txt,code2vec,METHOD_NAME,token_wrong,0.1759,0.305,14.5311,16.4406,"{'n_total': 267, 'n_valid': 37, 'n_correct': 19}",108.540512,"protected void updateAltitude() { TextView altitudeTextView = (TextView) findViewById(R.id.altitudeValueTextView); Altitude droneAltitude = this.drone.getAttribute(AttributeType.ALTITUDE); altitudeTextView.setText(String.format(""%3.1f"", droneAltitude.getAltitude()) + ""m""); }","void updateAltitude(){findViewById();getAttribute(AttributeType.ALTITUDE);altitudeTextView.setText(("""".getAltitude())+""m"");}","['protected', 'void', 'updateAltitude', '(', ')', '{', 'TextView', 'altitudeTextView', '=', '(', 'TextView', ')', 'findViewById', '(', 'R', '.', 'id', '.', 'altitudeValueTextView', ')', ';', 'Altitude', 'droneAltitude', '=', 'this', '.', 'drone', '.', 'getAttribute', '(', 'AttributeType', '.', 'ALTITUDE', ')', ';', 'altitudeTextView', '.', 'setText', '(', 'String', '.', 'format', '(', '""%3.1f""', ',', 'droneAltitude', '.', 'getAltitude', '(', ')', ')', '+', '""m""', ')', ';', '}']","['void', 'updateAltitude', '(', ')', '{', 'findViewById', '(', ')', ';', 'getAttribute', '(', 'AttributeType', '.', 'ALTITUDE', ')', ';', 'altitudeTextView', '.', 'setText', '(', '(', '""""', '.', 'getAltitude', '(', ')', ')', '+', '""m""', ')', ';', '}']",56,32,6,275,124,20,59.21568627450981,48.0,,,,-1,-1,-1,-1,False
L207_listOptions_1.txt,code2vec,METHOD_NAME,token_wrong,0.9319,0.4293,6.6237,2.458,"{'n_total': 366, 'n_valid': 46, 'n_correct': 31}",125.430121,"@Override public Enumeration<Option> listOptions() { Vector result = new Vector(); OptionUtils.add(result, super.listOptions()); OptionUtils.addOption(result, exporterTipText(), getDefaultExporter().getClass().getName(), ""base""); return OptionUtils.toEnumeration(result); }","Enumeration<Option>listOptions(){(result());OptionUtils.addOption(result,exporterTipText(),getDefaultExporter,"""");}","['@', 'Override', 'public', 'Enumeration', '<', 'Option', '>', 'listOptions', '(', ')', '{', 'Vector', 'result', '=', 'new', 'Vector', '(', ')', ';', 'OptionUtils', '.', 'add', '(', 'result', ',', 'super', '.', 'listOptions', '(', ')', ')', ';', 'OptionUtils', '.', 'addOption', '(', 'result', ',', 'exporterTipText', '(', ')', ',', 'getDefaultExporter', '(', ')', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ',', '""base""', ')', ';', 'return', 'OptionUtils', '.', 'toEnumeration', '(', 'result', ')', ';', '}']","['Enumeration', '<', 'Option', '>', 'listOptions', '(', ')', '{', '(', 'result', '(', ')', ')', ';', 'OptionUtils', '.', 'addOption', '(', 'result', ',', 'exporterTipText', '(', ')', ',', 'getDefaultExporter', ',', '""""', ')', ';', '}']",66,30,6,273,115,17,61.71875,60.0,,,,-1,-1,-1,-1,False
L208_hasDuplicates_1.txt,code2vec,METHOD_NAME,token_wrong,0.197,0.2671,8.9055,13.4322,"{'n_total': 387, 'n_valid': 40, 'n_correct': 30}",117.162347,"public static boolean hasDuplicates(final List<GbGradingSchemaEntry> schemaList) { final List<String> letterGrades = schemaList.stream().map(GbGradingSchemaEntry::getGrade).collect(Collectors.toList()); return !letterGrades.stream().filter(i -> Collections.frequency(letterGrades, i) > 1).collect(Collectors.toSet()).isEmpty(); }",boolean hasDuplicates(List<GbGradingSchemaEntry>schemaList){List<String>letterGrades=stream().map().collect(Collectors());returnstream().filter((letterGrades)).collect();},"['public', 'static', 'boolean', 'hasDuplicates', '(', 'final', 'List', '<', 'GbGradingSchemaEntry', '>', 'schemaList', ')', '{', 'final', 'List', '<', 'String', '>', 'letterGrades', '=', 'schemaList', '.', 'stream', '(', ')', '.', 'map', '(', 'GbGradingSchemaEntry', '::', 'getGrade', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', 'return', '!', 'letterGrades', '.', 'stream', '(', ')', '.', 'filter', '(', 'i', '->', 'Collections', '.', 'frequency', '(', 'letterGrades', ',', 'i', ')', '>', '1', ')', '.', 'collect', '(', 'Collectors', '.', 'toSet', '(', ')', ')', '.', 'isEmpty', '(', ')', ';', '}']","['boolean', 'hasDuplicates', '(', 'List', '<', 'GbGradingSchemaEntry', '>', 'schemaList', ')', '{', 'List', '<', 'String', '>', 'letterGrades', '=', 'stream', '(', ')', '.', 'map', '(', ')', '.', 'collect', '(', 'Collectors', '(', ')', ')', ';', 'returnstream', '(', ')', '.', 'filter', '(', '(', 'letterGrades', ')', ')', '.', 'collect', '(', ')', ';', '}']",80,47,6,329,171,19,50.967741935483865,44.5945945945946,,,,-1,-1,-1,-1,False
L209_getRequiredLicenses_1.txt,code2vec,METHOD_NAME,token_wrong,0.4472,0.4695,25.9719,27.9309,"{'n_total': 296, 'n_valid': 36, 'n_correct': 21}",105.662941,"public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = new PersistentLicense(log, license, username); licenses.add(persistentLicense); } return new LicenseSet(licenses); }",LicenseSet getRequiredLicenses(){licenses=new ArrayList<>();for(License license:delegate.getRequiredLicenses()){}return new LicenseSet(licenses);},"['public', 'LicenseSet', 'getRequiredLicenses', '(', ')', '{', 'List', '<', 'License', '>', 'licenses', '=', 'new', 'ArrayList', '<', 'License', '>', '(', ')', ';', 'for', '(', 'License', 'license', ':', 'delegate', '.', 'getRequiredLicenses', '(', ')', ')', '{', 'License', 'persistentLicense', '=', 'new', 'PersistentLicense', '(', 'log', ',', 'license', ',', 'username', ')', ';', 'licenses', '.', 'add', '(', 'persistentLicense', ')', ';', '}', 'return', 'new', 'LicenseSet', '(', 'licenses', ')', ';', '}']","['LicenseSet', 'getRequiredLicenses', '(', ')', '{', 'licenses', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'License', 'license', ':', 'delegate', '.', 'getRequiredLicenses', '(', ')', ')', '{', '}', 'return', 'new', 'LicenseSet', '(', 'licenses', ')', ';', '}']",61,35,6,294,146,25,55.01858736059479,47.27272727272727,,,,-1,-1,-1,-1,False
L210_getDayNumber_1.txt,code2vec,METHOD_NAME,token_wrong,0.1713,0.3954,16.8721,16.2114,"{'n_total': 219, 'n_valid': 34, 'n_correct': 21}",96.769602,public static long getDayNumber(long date) { TimeZone tz = TimeZone.getDefault(); long gmtOffset = tz.getOffset(date); return (date + gmtOffset) / DAY_IN_MILLIS; },long getDayNumber(long date){(date);return(date+gmtOffset)/DAYMILLIS;},"['public', 'static', 'long', 'getDayNumber', '(', 'long', 'date', ')', '{', 'TimeZone', 'tz', '=', 'TimeZone', '.', 'getDefault', '(', ')', ';', 'long', 'gmtOffset', '=', 'tz', '.', 'getOffset', '(', 'date', ')', ';', 'return', '(', 'date', '+', 'gmtOffset', ')', '/', 'DAY_IN_MILLIS', ';', '}']","['long', 'getDayNumber', '(', 'long', 'date', ')', '{', '(', 'date', ')', ';', 'return', '(', 'date', '+', 'gmtOffset', ')', '/', 'DAYMILLIS', ';', '}']",38,21,6,163,70,18,64.13793103448275,53.125,,,,-1,-1,-1,-1,False
L211_print_1.txt,code2vec,METHOD_NAME,token_wrong,0.5914,0.4445,5.8447,8.3815,"{'n_total': 170, 'n_valid': 16, 'n_correct': 16}",47.638163,"public void print(Writer out) throws IOException { if (tag == null) System.out.println(tag); out.write(token + ""\t"" + tag + ""\n""); }","void print(Writer out)throws IOException{(""""+"""");}","['public', 'void', 'print', '(', 'Writer', 'out', ')', 'throws', 'IOException', '{', 'if', '(', 'tag', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', 'tag', ')', ';', 'out', '.', 'write', '(', 'token', '+', '""\\t""', '+', 'tag', '+', '""\\n""', ')', ';', '}']","['void', 'print', '(', 'Writer', 'out', ')', 'throws', 'IOException', '{', '(', '""""', '+', '""""', ')', ';', '}']",39,16,6,132,50,11,67.76859504132231,69.6969696969697,,,,-1,-1,-1,-1,False
L212_addSave_1.txt,code2vec,METHOD_NAME,token_wrong,0.262,0.9834,18.5084,23.7196,"{'n_total': 354, 'n_valid': 30, 'n_correct': 30}",91.732827,"public void addSave(Forum forum) { RoleManager roleManager = this.userSession.getRoleManager(); if (roleManager.isAdministrator() || roleManager.isCategoryAllowed(forum.getCategory().getId())) { this.forumService.add(forum); this.result.include(""forum"", forum); } this.result.redirectTo(this).list(); }","void addSave(){userSession();if(isAdministrator()|(getCategory().getId())){include("""",forum);}list();}","['public', 'void', 'addSave', '(', 'Forum', 'forum', ')', '{', 'RoleManager', 'roleManager', '=', 'this', '.', 'userSession', '.', 'getRoleManager', '(', ')', ';', 'if', '(', 'roleManager', '.', 'isAdministrator', '(', ')', '||', 'roleManager', '.', 'isCategoryAllowed', '(', 'forum', '.', 'getCategory', '(', ')', '.', 'getId', '(', ')', ')', ')', '{', 'this', '.', 'forumService', '.', 'add', '(', 'forum', ')', ';', 'this', '.', 'result', '.', 'include', '(', '""forum""', ',', 'forum', ')', ';', '}', 'this', '.', 'result', '.', 'redirectTo', '(', 'this', ')', '.', 'list', '(', ')', ';', '}']","['void', 'addSave', '(', ')', '{', 'userSession', '(', ')', ';', 'if', '(', 'isAdministrator', '(', ')', '|', '(', 'getCategory', '(', ')', '.', 'getId', '(', ')', ')', ')', '{', 'include', '(', '""""', ',', 'forum', ')', ';', '}', 'list', '(', ')', ';', '}']",78,39,6,302,102,13,69.20415224913495,54.166666666666664,,,,-1,-1,-1,-1,False
L213_addToFirstScaled_1.txt,code2vec,METHOD_NAME,token_wrong,0.256,0.2563,17.364,17.3425,"{'n_total': 417, 'n_valid': 42, 'n_correct': 29}",132.328086,"public static void addToFirstScaled(float[] first, float[] second, float scale) { validateArrays(first, second); for (int i = 0; i < first.length; i++) { first[i] = first[i] + second[i] * scale; } }","void addToFirstScaled(float[]first,float[]second,float scale){validateArrays(first,second);for(int i;;i++){first[i]=first[i]+second*scale;}}","['public', 'static', 'void', 'addToFirstScaled', '(', 'float', '[', ']', 'first', ',', 'float', '[', ']', 'second', ',', 'float', 'scale', ')', '{', 'validateArrays', '(', 'first', ',', 'second', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'first', '.', 'length', ';', 'i', '++', ')', '{', 'first', '[', 'i', ']', '=', 'first', '[', 'i', ']', '+', 'second', '[', 'i', ']', '*', 'scale', ';', '}', '}']","['void', 'addToFirstScaled', '(', 'float', '[', ']', 'first', ',', 'float', '[', ']', 'second', ',', 'float', 'scale', ')', '{', 'validateArrays', '(', 'first', ',', 'second', ')', ';', 'for', '(', 'int', 'i', ';', ';', 'i', '++', ')', '{', 'first', '[', 'i', ']', '=', 'first', '[', 'i', ']', '+', 'second', '*', 'scale', ';', '}', '}']",62,50,6,198,140,22,32.95454545454545,21.428571428571427,,,,-1,-1,-1,-1,False
L214_logging_1.txt,code2vec,METHOD_NAME,token_wrong,0.2896,0.3493,4.6397,3.0149,"{'n_total': 214, 'n_valid': 26, 'n_correct': 19}",76.613201,"@Override public void logging(final IStatus status, final String plugin) { if (!status.isOK()) { errors.add(status.getMessage()); } }","@Override void logging(IStatus status,String plugin){if(isOK()){errors();}}","['@', 'Override', 'public', 'void', 'logging', '(', 'final', 'IStatus', 'status', ',', 'final', 'String', 'plugin', ')', '{', 'if', '(', '!', 'status', '.', 'isOK', '(', ')', ')', '{', 'errors', '.', 'add', '(', 'status', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['@', 'Override', 'void', 'logging', '(', 'IStatus', 'status', ',', 'String', 'plugin', ')', '{', 'if', '(', 'isOK', '(', ')', ')', '{', 'errors', '(', ')', ';', '}', '}']",38,25,6,133,75,13,48.333333333333336,40.625,,,,-1,-1,-1,-1,False
L215_getDefaultExecutor_1.txt,code2vec,METHOD_NAME,token_wrong,0.5056,0.8961,14.3969,13.8736,"{'n_total': 200, 'n_valid': 18, 'n_correct': 17}",56.196317,"public static TimePointExecutor getDefaultExecutor(DataSetExecutor dataSetExecutor, RobotExecutorFactory robotExecutorFactory) { TimePointExecutor executor = new SimpleTimePointExecutor(); executor.setSettings(dataSetExecutor, robotExecutorFactory); return executor; }","TimePointExecutor getDefaultExecutor(DataSetExecutor dataSetExecutor,RobotExecutorFactory robotExecutorFactory){SimpleTimePointExecutor();(dataSetExecutor);}","['public', 'static', 'TimePointExecutor', 'getDefaultExecutor', '(', 'DataSetExecutor', 'dataSetExecutor', ',', 'RobotExecutorFactory', 'robotExecutorFactory', ')', '{', 'TimePointExecutor', 'executor', '=', 'new', 'SimpleTimePointExecutor', '(', ')', ';', 'executor', '.', 'setSettings', '(', 'dataSetExecutor', ',', 'robotExecutorFactory', ')', ';', 'return', 'executor', ';', '}']","['TimePointExecutor', 'getDefaultExecutor', '(', 'DataSetExecutor', 'dataSetExecutor', ',', 'RobotExecutorFactory', 'robotExecutorFactory', ')', '{', 'SimpleTimePointExecutor', '(', ')', ';', '(', 'dataSetExecutor', ')', ';', '}']",33,19,6,268,157,24,45.49180327868852,51.85185185185185,,,,-1,-1,-1,-1,False
L216_setDefaultCommandChild_1.txt,code2vec,METHOD_NAME,token_wrong,0.2963,0.4013,17.4824,18.009,"{'n_total': 298, 'n_valid': 34, 'n_correct': 22}",99.516923,"public void setDefaultCommandChild(String name) { try { ViewBean vb = getParentViewBean(); String value = (String) vb.getDisplayFieldValue(name); setValue(""action"", value); } catch (JspException ex) { setValue(""action"", name); } }","void setDefaultCommandChild(String name){try{ViewBean value=(String)vb(""action"",value);}catch(JspException ex){setValue();}}","['public', 'void', 'setDefaultCommandChild', '(', 'String', 'name', ')', '{', 'try', '{', 'ViewBean', 'vb', '=', 'getParentViewBean', '(', ')', ';', 'String', 'value', '=', '(', 'String', ')', 'vb', '.', 'getDisplayFieldValue', '(', 'name', ')', ';', 'setValue', '(', '""action""', ',', 'value', ')', ';', '}', 'catch', '(', 'JspException', 'ex', ')', '{', 'setValue', '(', '""action""', ',', 'name', ')', ';', '}', '}']","['void', 'setDefaultCommandChild', '(', 'String', 'name', ')', '{', 'try', '{', 'ViewBean', 'value', '=', '(', 'String', ')', 'vb', '(', '""action""', ',', 'value', ')', ';', '}', 'catch', '(', 'JspException', 'ex', ')', '{', 'setValue', '(', ')', ';', '}', '}']",53,35,6,230,124,28,52.475247524752476,38.297872340425535,,,,-1,-1,-1,-1,False
L217_getSubjectTypeManager_1.txt,code2vec,METHOD_NAME,token_wrong,0.8801,0.5275,20.7579,20.8197,"{'n_total': 149, 'n_valid': 21, 'n_correct': 13}",61.651916,public SubjectTypeManager getSubjectTypeManager() { if (stm == null) { stm = new SubjectTypeManager(this); } return (stm); },SubjectTypeManager getSubjectTypeManager(){if(stm=null){}return(stm);},"['public', 'SubjectTypeManager', 'getSubjectTypeManager', '(', ')', '{', 'if', '(', 'stm', '==', 'null', ')', '{', 'stm', '=', 'new', 'SubjectTypeManager', '(', 'this', ')', ';', '}', 'return', '(', 'stm', ')', ';', '}']","['SubjectTypeManager', 'getSubjectTypeManager', '(', ')', '{', 'if', '(', 'stm', '=', 'null', ')', '{', '}', 'return', '(', 'stm', ')', ';', '}']",28,19,6,124,70,27,55.670103092783506,40.909090909090914,,,,-1,-1,-1,-1,False
L218_induceFeaturesFor_1.txt,code2vec,METHOD_NAME,token_wrong,0.6361,0.3297,20.7837,20.347,"{'n_total': 403, 'n_valid': 52, 'n_correct': 35}",146.056933,"public void induceFeaturesFor(InstanceList instances) { instances.setFeatureSelection(this.globalFeatureSelection); for (int i = 0; i < featureInducers.size(); i++) { FeatureInducer klfi = featureInducers.get(i); klfi.induceFeaturesFor(instances, false, false); } }",void induceFeaturesFor(InstanceList instances){(this);for(;i();){FeatureInducer();(instances);}},"['public', 'void', 'induceFeaturesFor', '(', 'InstanceList', 'instances', ')', '{', 'instances', '.', 'setFeatureSelection', '(', 'this', '.', 'globalFeatureSelection', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'featureInducers', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'FeatureInducer', 'klfi', '=', 'featureInducers', '.', 'get', '(', 'i', ')', ';', 'klfi', '.', 'induceFeaturesFor', '(', 'instances', ',', 'false', ',', 'false', ')', ';', '}', '}']","['void', 'induceFeaturesFor', '(', 'InstanceList', 'instances', ')', '{', '(', 'this', ')', ';', 'for', '(', ';', 'i', '(', ')', ';', ')', '{', 'FeatureInducer', '(', ')', ';', '(', 'instances', ')', ';', '}', '}']",59,30,6,265,96,23,69.83471074380165,54.71698113207547,,,,-1,-1,-1,-1,False
L219_isDeleted_1.txt,code2vec,METHOD_NAME,token_wrong,0.5198,0.5243,8.028,10.6984,"{'n_total': 236, 'n_valid': 28, 'n_correct': 22}",80.041828,"public static boolean isDeleted(IndexReader indexReader, int docID) { Bits liveDocs = MultiFields.getLiveDocs(indexReader); if (!liveDocs.get(docID)) { return true; } else return false; }","boolean isDeleted(IndexReader indexReader,int docID){Bits=MultiFields();if((docID)){}}","['public', 'static', 'boolean', 'isDeleted', '(', 'IndexReader', 'indexReader', ',', 'int', 'docID', ')', '{', 'Bits', 'liveDocs', '=', 'MultiFields', '.', 'getLiveDocs', '(', 'indexReader', ')', ';', 'if', '(', '!', 'liveDocs', '.', 'get', '(', 'docID', ')', ')', '{', 'return', 'true', ';', '}', 'else', 'return', 'false', ';', '}']","['boolean', 'isDeleted', '(', 'IndexReader', 'indexReader', ',', 'int', 'docID', ')', '{', 'Bits', '=', 'MultiFields', '(', ')', ';', 'if', '(', '(', 'docID', ')', ')', '{', '}', '}']",42,25,6,187,86,15,58.720930232558146,47.22222222222222,,,,-1,-1,-1,-1,False
L220_parseQuitely_1.txt,code2vec,METHOD_NAME,token_wrong,0.4813,0.9062,23.9833,27.6231,"{'n_total': 209, 'n_valid': 16, 'n_correct': 16}",53.552207,public static RouteRule parseQuitely(Route route) { try { return parse(route); } catch (ParseException e) { throw new RuntimeException(e); } },RouteRule parseQuitely(Route route){try{(route);}catch(ParseException e){(e);}},"['public', 'static', 'RouteRule', 'parseQuitely', '(', 'Route', 'route', ')', '{', 'try', '{', 'return', 'parse', '(', 'route', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['RouteRule', 'parseQuitely', '(', 'Route', 'route', ')', '{', 'try', '{', '(', 'route', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",33,26,6,142,79,18,50.806451612903224,25.925925925925924,,,,-1,-1,-1,-1,False
L221_printModelStatus_1.txt,code2vec,METHOD_NAME,token_wrong,0.9191,0.9086,17.8537,25.4122,"{'n_total': 378, 'n_valid': 38, 'n_correct': 30}",117.619248,"public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println(""Model status: "" + status); if (status == GRB.INFEASIBLE) { System.out.println(""INFEASIBLE""); } }","void printModelStatus()throws GRBException{(GRB).println("""");if(status.INFEASIBLE){println();}}","['public', 'void', 'printModelStatus', '(', ')', 'throws', 'GRBException', '{', 'int', 'status', '=', 'model', '.', 'get', '(', 'GRB', '.', 'IntAttr', '.', 'Status', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Model status: ""', '+', 'status', ')', ';', 'if', '(', 'status', '==', 'GRB', '.', 'INFEASIBLE', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""INFEASIBLE""', ')', ';', '}', '}']","['void', 'printModelStatus', '(', ')', 'throws', 'GRBException', '{', '(', 'GRB', ')', '.', 'println', '(', '""""', ')', ';', 'if', '(', 'status', '.', 'INFEASIBLE', ')', '{', 'println', '(', ')', ';', '}', '}']",53,29,6,213,95,22,61.78010471204188,51.06382978723404,,,,-1,-1,-1,-1,False
L222_processClientCredentials_1.txt,code2vec,METHOD_NAME,token_wrong,0.3203,0.9919,15.3923,20.6481,"{'n_total': 192, 'n_valid': 22, 'n_correct': 19}",62.241549,public void processClientCredentials(TlsCredentials clientCredentials) throws IOException { if (keyExchange == KeyExchangeAlgorithm.ECDH_anon) { throw new TlsFatalAlert(AlertDescription.internal_error); } if (clientCredentials instanceof TlsCredentialedAgreement) { this.agreementCredentials = (TlsCredentialedAgreement) clientCredentials; } else { throw new TlsFatalAlert(AlertDescription.internal_error); } },void processClientCredentials(TlsCredentials clientCredentials)throws IOException{if(keyExchange){TlsFatalAlert();}},"['public', 'void', 'processClientCredentials', '(', 'TlsCredentials', 'clientCredentials', ')', 'throws', 'IOException', '{', 'if', '(', 'keyExchange', '==', 'KeyExchangeAlgorithm', '.', 'ECDH_anon', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'if', '(', 'clientCredentials', 'instanceof', 'TlsCredentialedAgreement', ')', '{', 'this', '.', 'agreementCredentials', '=', '(', 'TlsCredentialedAgreement', ')', 'clientCredentials', ';', '}', 'else', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', '}']","['void', 'processClientCredentials', '(', 'TlsCredentials', 'clientCredentials', ')', 'throws', 'IOException', '{', 'if', '(', 'keyExchange', ')', '{', 'TlsFatalAlert', '(', ')', ';', '}', '}']",59,20,6,410,116,30,77.36842105263158,73.58490566037736,,,,-1,-1,-1,-1,False
L223_retrieveAssets_1.txt,code2vec,METHOD_NAME,token_wrong,0.7938,0.4976,17.2507,19.738,"{'n_total': 330, 'n_valid': 42, 'n_correct': 32}",120.177291,"@Override public void retrieveAssets() { for (InteractiveActor a : actors) { if (a instanceof SpriteActor) ((AssetConsumer) a).retrieveAssets(); } cam = new SceneCamera(); cam.create(World.getInstance().getWidth(), World.getInstance().getHeight()); disposed = false; }","@Override void retrieveAssets(){{(SpriteActor);}cam();cam(getWidth,getHeight());}","['@', 'Override', 'public', 'void', 'retrieveAssets', '(', ')', '{', 'for', '(', 'InteractiveActor', 'a', ':', 'actors', ')', '{', 'if', '(', 'a', 'instanceof', 'SpriteActor', ')', '(', '(', 'AssetConsumer', ')', 'a', ')', '.', 'retrieveAssets', '(', ')', ';', '}', 'cam', '=', 'new', 'SceneCamera', '(', ')', ';', 'cam', '.', 'create', '(', 'World', '.', 'getInstance', '(', ')', '.', 'getWidth', '(', ')', ',', 'World', '.', 'getInstance', '(', ')', '.', 'getHeight', '(', ')', ')', ';', 'disposed', '=', 'false', ';', '}']","['@', 'Override', 'void', 'retrieveAssets', '(', ')', '{', '{', '(', 'SpriteActor', ')', ';', '}', 'cam', '(', ')', ';', 'cam', '(', 'getWidth', ',', 'getHeight', '(', ')', ')', ';', '}']",71,27,6,268,81,20,75.40322580645162,67.6923076923077,,,,-1,-1,-1,-1,False
L224_getSerializable_1.txt,code2vec,METHOD_NAME,token_wrong,0.418,0.4057,8.5485,6.3468,"{'n_total': 374, 'n_valid': 46, 'n_correct': 24}",125.396946,"@Test public void getSerializable() { assertTrue(mCacheUtils1.getSerializable(""serializable1"").equals(mSerializableTest)); assertTrue(mCacheUtils1.getSerializable(""serializable1"", null).equals(mSerializableTest)); assertNull(mCacheUtils1.getSerializable(""parcelable2"", null)); assertTrue(mCacheUtils2.getSerializable(""serializable2"").equals(mSerializableTest)); assertTrue(mCacheUtils2.getSerializable(""serializable2"", null).equals(mSerializableTest)); assertNull(mCacheUtils2.getSerializable(""parcelable1"", null)); }","void getSerializable(){assertTrue(mCacheUtils.getSerializable(mSerializableTest));(mCacheUtilsgetSerializable("""",null).equals());assertNull(mCacheUtils.getSerializable("""",null));}","['@', 'Test', 'public', 'void', 'getSerializable', '(', ')', '{', 'assertTrue', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""serializable1""', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""serializable1""', ',', 'null', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertNull', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""parcelable2""', ',', 'null', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""serializable2""', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""serializable2""', ',', 'null', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertNull', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""parcelable1""', ',', 'null', ')', ')', ';', '}']","['void', 'getSerializable', '(', ')', '{', 'assertTrue', '(', 'mCacheUtils', '.', 'getSerializable', '(', 'mSerializableTest', ')', ')', ';', '(', 'mCacheUtilsgetSerializable', '(', '""""', ',', 'null', ')', '.', 'equals', '(', ')', ')', ';', 'assertNull', '(', 'mCacheUtils', '.', 'getSerializable', '(', '""""', ',', 'null', ')', ')', ';', '}']",97,41,6,517,179,21,68.14516129032258,61.53846153846154,,,,-1,-1,-1,-1,False
L225_toList_1.txt,code2vec,METHOD_NAME,token_wrong,0.6181,0.8667,10.0822,8.7725,"{'n_total': 384, 'n_valid': 32, 'n_correct': 31}",90.039115,"@Override public <T> List<T> toList(String json, Class<T> type) { try { return mapper.readValue(json, mapper.getTypeFactory().constructCollectionLikeType(ArrayList.class, type)); } catch (Exception e) { throw new IllegalArgumentException(""Cannot convert JSON"", e); } }","<T>List<T>toList(String json,Class<T>type){try{readValue(getTypeFactory().constructCollectionLikeType());}catch(Exception e){("""");}}","['@', 'Override', 'public', '<', 'T', '>', 'List', '<', 'T', '>', 'toList', '(', 'String', 'json', ',', 'Class', '<', 'T', '>', 'type', ')', '{', 'try', '{', 'return', 'mapper', '.', 'readValue', '(', 'json', ',', 'mapper', '.', 'getTypeFactory', '(', ')', '.', 'constructCollectionLikeType', '(', 'ArrayList', '.', 'class', ',', 'type', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Cannot convert JSON""', ',', 'e', ')', ';', '}', '}']","['<', 'T', '>', 'List', '<', 'T', '>', 'toList', '(', 'String', 'json', ',', 'Class', '<', 'T', '>', 'type', ')', '{', 'try', '{', 'readValue', '(', 'getTypeFactory', '(', ')', '.', 'constructCollectionLikeType', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",65,45,6,268,132,12,53.125,33.89830508474576,,,,-1,-1,-1,-1,False
L226_requestProducts_1.txt,code2vec,METHOD_NAME,token_wrong,0.3282,0.184,16.2606,16.4749,"{'n_total': 403, 'n_valid': 58, 'n_correct': 39}",162.458258,"public void requestProducts() { if (null != m_productListListener) { if (m_enableDebugLogging) { Log.i(LOG_TAG, ""requestProducts m_productListListener is valid""); } ouyaFacade.requestProductList(PRODUCT_IDENTIFIER_LIST, m_productListListener); } else { Log.i(LOG_TAG, ""requestProducts m_productListListener is null""); } }","void requestProducts(){if(null!=productListListener){if(m){i("""");}requestProductList(PRODUCTIDENTIFIERLIST,productListListener);}else{Log(LOGTAG,"" "");}}","['public', 'void', 'requestProducts', '(', ')', '{', 'if', '(', 'null', '!=', 'm_productListListener', ')', '{', 'if', '(', 'm_enableDebugLogging', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""requestProducts m_productListListener is valid""', ')', ';', '}', 'ouyaFacade', '.', 'requestProductList', '(', 'PRODUCT_IDENTIFIER_LIST', ',', 'm_productListListener', ')', ';', '}', 'else', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""requestProducts m_productListListener is null""', ')', ';', '}', '}']","['void', 'requestProducts', '(', ')', '{', 'if', '(', 'null', '!=', 'productListListener', ')', '{', 'if', '(', 'm', ')', '{', 'i', '(', '""""', ')', ';', '}', 'requestProductList', '(', 'PRODUCTIDENTIFIERLIST', ',', 'productListListener', ')', ';', '}', 'else', '{', 'Log', '(', 'LOGTAG', ',', '"" ""', ')', ';', '}', '}']",51,42,6,321,152,21,56.333333333333336,20.0,,,,-1,-1,-1,-1,False
L227_toolGroupIsSelected_1.txt,code2vec,METHOD_NAME,token_wrong,0.2786,0.1753,16.7401,16.302,"{'n_total': 406, 'n_valid': 48, 'n_correct': 28}",145.630036,"public boolean toolGroupIsSelected(String groupName, String toolId) { List<String> selList = m_toolGroupSelected.get(groupName); if (selList == null) { return false; } else { int result = selList.indexOf(toolId); return result >= 0; } }","boolean toolGroupIsSelected(String groupName,String toolId){List<String>selList;if(selList==null){}else{result=selList(toolId);return result>0;}}","['public', 'boolean', 'toolGroupIsSelected', '(', 'String', 'groupName', ',', 'String', 'toolId', ')', '{', 'List', '<', 'String', '>', 'selList', '=', 'm_toolGroupSelected', '.', 'get', '(', 'groupName', ')', ';', 'if', '(', 'selList', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'int', 'result', '=', 'selList', '.', 'indexOf', '(', 'toolId', ')', ';', 'return', 'result', '>=', '0', ';', '}', '}']","['boolean', 'toolGroupIsSelected', '(', 'String', 'groupName', ',', 'String', 'toolId', ')', '{', 'List', '<', 'String', '>', 'selList', ';', 'if', '(', 'selList', '==', 'null', ')', '{', '}', 'else', '{', 'result', '=', 'selList', '(', 'toolId', ')', ';', 'return', 'result', '>', '0', ';', '}', '}']",54,40,6,236,145,25,43.127962085308056,29.166666666666668,,,,-1,-1,-1,-1,False
L228_onClick_1.txt,code2vec,METHOD_NAME,token_wrong,0.4006,0.5127,1.381,9.2778,"{'n_total': 214, 'n_valid': 25, 'n_correct': 18}",70.40509,"@Override public void onClick(String weatherForDay) { Context context = this; Class destinationClass = DetailActivity.class; Intent intentToStartDetailActivity = new Intent(context, destinationClass); intentToStartDetailActivity.putExtra(Intent.EXTRA_TEXT, weatherForDay); startActivity(intentToStartDetailActivity); }",void onClick(String weatherForDay){(context);intentToStartDetailActivity.putExtra();},"['@', 'Override', 'public', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'context', '=', 'this', ';', 'Class', 'destinationClass', '=', 'DetailActivity', '.', 'class', ';', 'Intent', 'intentToStartDetailActivity', '=', 'new', 'Intent', '(', 'context', ',', 'destinationClass', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', 'weatherForDay', ')', ';', 'startActivity', '(', 'intentToStartDetailActivity', ')', ';', '}']","['void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', '(', 'context', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', ')', ';', '}']",50,18,6,318,85,13,76.39344262295083,72.72727272727273,,,,-1,-1,-1,-1,False
L229_setActivityResultCallback_1.txt,code2vec,METHOD_NAME,token_wrong,0.4449,0.4942,17.4231,17.0713,"{'n_total': 207, 'n_valid': 32, 'n_correct': 22}",90.606911,"@Override public void setActivityResultCallback(CordovaPlugin plugin) { if (activityResultCallback != null) { activityResultCallback.onActivityResult(activityResultRequestCode, Activity.RESULT_CANCELED, null); } activityResultCallback = plugin; }",void setActivityResultCallback(){if(activityResultCallback!=null){activityResultCallback(null);}},"['@', 'Override', 'public', 'void', 'setActivityResultCallback', '(', 'CordovaPlugin', 'plugin', ')', '{', 'if', '(', 'activityResultCallback', '!=', 'null', ')', '{', 'activityResultCallback', '.', 'onActivityResult', '(', 'activityResultRequestCode', ',', 'Activity', '.', 'RESULT_CANCELED', ',', 'null', ')', ';', '}', 'activityResultCallback', '=', 'plugin', ';', '}']","['void', 'setActivityResultCallback', '(', ')', '{', 'if', '(', 'activityResultCallback', '!=', 'null', ')', '{', 'activityResultCallback', '(', 'null', ')', ';', '}', '}']",36,19,6,246,97,31,69.30232558139535,56.666666666666664,,,,-1,-1,-1,-1,False
L230_initSpyManager_1.txt,code2vec,METHOD_NAME,token_wrong,0.9806,0.3972,23.2383,22.3628,"{'n_total': 288, 'n_valid': 35, 'n_correct': 29}",101.274317,"private static LocalFileSystemStateManager initSpyManager(String rootPath, boolean initTree) { Config config = Config.newBuilder().put(Key.STATEMGR_ROOT_PATH, rootPath).put(LocalFileSystemKey.IS_INITIALIZE_FILE_TREE.value(), initTree).build(); LocalFileSystemStateManager manager = spy(new LocalFileSystemStateManager()); manager.initialize(config); return manager; }","LocalFileSystemStateManager initSpyManager(String rootPath,boolean initTree){Config=(initTree)(LocalFileSystemStateManager());initialize(config);}","['private', 'static', 'LocalFileSystemStateManager', 'initSpyManager', '(', 'String', 'rootPath', ',', 'boolean', 'initTree', ')', '{', 'Config', 'config', '=', 'Config', '.', 'newBuilder', '(', ')', '.', 'put', '(', 'Key', '.', 'STATEMGR_ROOT_PATH', ',', 'rootPath', ')', '.', 'put', '(', 'LocalFileSystemKey', '.', 'IS_INITIALIZE_FILE_TREE', '.', 'value', '(', ')', ',', 'initTree', ')', '.', 'build', '(', ')', ';', 'LocalFileSystemStateManager', 'manager', '=', 'spy', '(', 'new', 'LocalFileSystemStateManager', '(', ')', ')', ';', 'manager', '.', 'initialize', '(', 'config', ')', ';', 'return', 'manager', ';', '}']","['LocalFileSystemStateManager', 'initSpyManager', '(', 'String', 'rootPath', ',', 'boolean', 'initTree', ')', '{', 'Config', '=', '(', 'initTree', ')', '(', 'LocalFileSystemStateManager', '(', ')', ')', ';', 'initialize', '(', 'config', ')', ';', '}']",69,27,6,367,146,20,63.68876080691642,66.66666666666666,,,,-1,-1,-1,-1,False
L231_expand_1.txt,code2vec,METHOD_NAME,token_wrong,0.2164,0.2164,10.5865,10.5865,"{'n_total': 164, 'n_valid': 27, 'n_correct': 12}",80.911432,void expand() { if (detailPanel == null || !detailPanel.isVisible()) { onClick(); } },void expand(){if(detailPanel==null||!detailPanel.isVisible()){onClick();}},"['void', 'expand', '(', ')', '{', 'if', '(', 'detailPanel', '==', 'null', '||', '!', 'detailPanel', '.', 'isVisible', '(', ')', ')', '{', 'onClick', '(', ')', ';', '}', '}']","['void', 'expand', '(', ')', '{', 'if', '(', 'detailPanel', '==', 'null', '||', '!', 'detailPanel', '.', 'isVisible', '(', ')', ')', '{', 'onClick', '(', ')', ';', '}', '}']",25,25,6,85,74,12,15.068493150684931,0.0,,,,-1,-1,-1,-1,False
L232_partialFlush_1.txt,code2vec,METHOD_NAME,token_wrong,0.3287,0.4208,17.912,16.5687,"{'n_total': 280, 'n_valid': 30, 'n_correct': 25}",86.121648,"private void partialFlush(boolean isLast) throws IOException { if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out.write(partialBuffer, 0, partialBufferLength); } partialOffset = 0; }",void partialFlush(boolean isLast){if(isLast){write(partialBuffer);}{(0|partialPower);}},"['private', 'void', 'partialFlush', '(', 'boolean', 'isLast', ')', 'throws', 'IOException', '{', 'if', '(', 'isLast', ')', '{', 'writeNewPacketLength', '(', 'partialOffset', ')', ';', 'out', '.', 'write', '(', 'partialBuffer', ',', '0', ',', 'partialOffset', ')', ';', '}', 'else', '{', 'out', '.', 'write', '(', '0xE0', '|', 'partialPower', ')', ';', 'out', '.', 'write', '(', 'partialBuffer', ',', '0', ',', 'partialBufferLength', ')', ';', '}', 'partialOffset', '=', '0', ';', '}']","['void', 'partialFlush', '(', 'boolean', 'isLast', ')', '{', 'if', '(', 'isLast', ')', '{', 'write', '(', 'partialBuffer', ')', ';', '}', '{', '(', '0', '|', 'partialPower', ')', ';', '}', '}']",60,27,6,271,87,18,72.72727272727273,61.111111111111114,,,,-1,-1,-1,-1,False
L233_onInputSizeChanged_1.txt,code2vec,METHOD_NAME,token_wrong,0.5918,0.3279,22.4756,17.2513,"{'n_total': 261, 'n_valid': 30, 'n_correct': 26}",89.756532,"public void onInputSizeChanged(final int width, final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() { @Override public void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }",void onInputSizeChanged(){(width);runOnDraw(new Runnable(){{((float)height);}});},"['public', 'void', 'onInputSizeChanged', '(', 'final', 'int', 'width', ',', 'final', 'int', 'height', ')', '{', 'super', '.', 'onInputSizeChanged', '(', 'width', ',', 'height', ')', ';', 'runOnDraw', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'GLES20', '.', 'glUniform1f', '(', 'mTexelWidthUniformLocation', ',', '(', 'float', ')', 'width', ')', ';', 'GLES20', '.', 'glUniform1f', '(', 'mTexelHeightUniformLocation', ',', '(', 'float', ')', 'height', ')', ';', '}', '}', ')', ';', '}']","['void', 'onInputSizeChanged', '(', ')', '{', '(', 'width', ')', ';', 'runOnDraw', '(', 'new', 'Runnable', '(', ')', '{', '{', '(', '(', 'float', ')', 'height', ')', ';', '}', '}', ')', ';', '}']",66,29,6,301,81,24,79.42238267148014,61.66666666666667,,,,-1,-1,-1,-1,False
L234_getInstance_2.txt,code2vec,METHOD_NAME,token_wrong,0.7769,0.4021,2.9449,1.3135,"{'n_total': 429, 'n_valid': 39, 'n_correct': 32}",122.744684,public static DirectoryClassLoader getInstance(final File dir) throws GuacamoleException { try { return AccessController.doPrivileged(new PrivilegedExceptionAction<DirectoryClassLoader>() { @Override public DirectoryClassLoader run() throws GuacamoleException { return new DirectoryClassLoader(dir); } }); } catch (PrivilegedActionException e) { throw (GuacamoleException) e.getException(); } },DirectoryClassLoader getInstance(File dir){try{(new PrivilegedExceptionAction<DirectoryClassLoader>(){run()throws GuacamoleException{DirectoryClassLoader(dir);}});}catch(PrivilegedActionException e){throw(GuacamoleException)getException();}},"['public', 'static', 'DirectoryClassLoader', 'getInstance', '(', 'final', 'File', 'dir', ')', 'throws', 'GuacamoleException', '{', 'try', '{', 'return', 'AccessController', '.', 'doPrivileged', '(', 'new', 'PrivilegedExceptionAction', '<', 'DirectoryClassLoader', '>', '(', ')', '{', '@', 'Override', 'public', 'DirectoryClassLoader', 'run', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'DirectoryClassLoader', '(', 'dir', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'PrivilegedActionException', 'e', ')', '{', 'throw', '(', 'GuacamoleException', ')', 'e', '.', 'getException', '(', ')', ';', '}', '}']","['DirectoryClassLoader', 'getInstance', '(', 'File', 'dir', ')', '{', 'try', '{', '(', 'new', 'PrivilegedExceptionAction', '<', 'DirectoryClassLoader', '>', '(', ')', '{', 'run', '(', ')', 'throws', 'GuacamoleException', '{', 'DirectoryClassLoader', '(', 'dir', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'PrivilegedActionException', 'e', ')', '{', 'throw', '(', 'GuacamoleException', ')', 'getException', '(', ')', ';', '}', '}']",67,50,6,394,241,17,40.58355437665783,27.86885245901639,,,,-1,-1,-1,-1,False
L235_build_1.txt,code2vec,METHOD_NAME,token_wrong,0.2359,0.225,3.2157,3.3615,"{'n_total': 216, 'n_valid': 29, 'n_correct': 15}",84.28476,public RuntimeReplFactory build() { return new RuntimeReplFactory() { @Override public RuntimeRepl newInstance() { return new JsRuntimeRepl(initJsScope()); } }; },RuntimeReplFactory build(){return new RuntimeReplFactory(){@Override RuntimeRepl newInstance(){(initJsScope());}};},"['public', 'RuntimeReplFactory', 'build', '(', ')', '{', 'return', 'new', 'RuntimeReplFactory', '(', ')', '{', '@', 'Override', 'public', 'RuntimeRepl', 'newInstance', '(', ')', '{', 'return', 'new', 'JsRuntimeRepl', '(', 'initJsScope', '(', ')', ')', ';', '}', '}', ';', '}']","['RuntimeReplFactory', 'build', '(', ')', '{', 'return', 'new', 'RuntimeReplFactory', '(', ')', '{', '@', 'Override', 'RuntimeRepl', 'newInstance', '(', ')', '{', '(', 'initJsScope', '(', ')', ')', ';', '}', '}', ';', '}']",33,28,6,162,115,11,31.125827814569533,18.51851851851852,,,,-1,-1,-1,-1,False
L236_translate_1.txt,code2vec,METHOD_NAME,token_wrong,0.6798,0.4745,11.1621,10.1725,"{'n_total': 338, 'n_valid': 36, 'n_correct': 31}",105.145303,"public Importable translate(Node resourceNode, Document descriptor, String contextPath, String archiveBasePath) { Assessment rv = new Assessment(); Document stylesheet = readDocument(xsl); rv.setQti(transformDocument(descriptor, stylesheet)); rv.setVersion(""1.2""); rv.setLegacyGroup(Blackboard6FileParser.ASSESSMENT_GROUP); return rv; }","Importable translate(Node resourceNode,Document descriptor,String contextPath,String archiveBasePath){Assessment((descriptor));("""");(GROUP);}","['public', 'Importable', 'translate', '(', 'Node', 'resourceNode', ',', 'Document', 'descriptor', ',', 'String', 'contextPath', ',', 'String', 'archiveBasePath', ')', '{', 'Assessment', 'rv', '=', 'new', 'Assessment', '(', ')', ';', 'Document', 'stylesheet', '=', 'readDocument', '(', 'xsl', ')', ';', 'rv', '.', 'setQti', '(', 'transformDocument', '(', 'descriptor', ',', 'stylesheet', ')', ')', ';', 'rv', '.', 'setVersion', '(', '""1.2""', ')', ';', 'rv', '.', 'setLegacyGroup', '(', 'Blackboard6FileParser', '.', 'ASSESSMENT_GROUP', ')', ';', 'return', 'rv', ';', '}']","['Importable', 'translate', '(', 'Node', 'resourceNode', ',', 'Document', 'descriptor', ',', 'String', 'contextPath', ',', 'String', 'archiveBasePath', ')', '{', 'Assessment', '(', '(', 'descriptor', ')', ')', ';', '(', '""""', ')', ';', '(', 'GROUP', ')', ';', '}']",65,32,6,336,141,15,60.747663551401864,55.932203389830505,,,,-1,-1,-1,-1,False
L237_testMule_1.txt,code2vec,METHOD_NAME,token_wrong,0.5893,0.9993,16.843,23.5821,"{'n_total': 491, 'n_valid': 62, 'n_correct': 47}",174.196592,"@Test public void testMule() throws Exception { MuleContext muleContext = new DefaultMuleContextFactory().createMuleContext(""mule/mule-standlone-config.xml""); muleContext.start(); MuleClient muleClient = new DefaultLocalMuleClient(muleContext); Integer days = 5; MuleMessage message = muleClient.send(""vm://helloMule"", new DefaultMuleMessage(days, muleContext)); assertNotNull(message.getPayload()); Boolean result = (Boolean) message.getPayload(); assertTrue(result); }","void testMule()throws Exception{("""");muleContext("""",DefaultMuleMessage());(message());result=(Boolean)getPayload;}","['@', 'Test', 'public', 'void', 'testMule', '(', ')', 'throws', 'Exception', '{', 'MuleContext', 'muleContext', '=', 'new', 'DefaultMuleContextFactory', '(', ')', '.', 'createMuleContext', '(', '""mule/mule-standlone-config.xml""', ')', ';', 'muleContext', '.', 'start', '(', ')', ';', 'MuleClient', 'muleClient', '=', 'new', 'DefaultLocalMuleClient', '(', 'muleContext', ')', ';', 'Integer', 'days', '=', '5', ';', 'MuleMessage', 'message', '=', 'muleClient', '.', 'send', '(', '""vm://helloMule""', ',', 'new', 'DefaultMuleMessage', '(', 'days', ',', 'muleContext', ')', ')', ';', 'assertNotNull', '(', 'message', '.', 'getPayload', '(', ')', ')', ';', 'Boolean', 'result', '=', '(', 'Boolean', ')', 'message', '.', 'getPayload', '(', ')', ';', 'assertTrue', '(', 'result', ')', ';', '}']","['void', 'testMule', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'muleContext', '(', '""""', ',', 'DefaultMuleMessage', '(', ')', ')', ';', '(', 'message', '(', ')', ')', ';', 'result', '=', '(', 'Boolean', ')', 'getPayload', ';', '}']",88,34,6,470,114,14,78.0701754385965,65.85365853658537,,,,-1,-1,-1,-1,False
L238_releasePrepareStatement_1.txt,code2vec,METHOD_NAME,token_wrong,0.6815,0.3707,17.6604,17.7122,"{'n_total': 219, 'n_valid': 20, 'n_correct': 17}",61.58461,@Override public void releasePrepareStatement(ServerPrepareResult serverPrepareResult) throws SQLException { serverPrepareResult.decrementShareCounter(); if (serverPrepareResult.canBeDeallocate()) { forceReleasePrepareStatement(serverPrepareResult.getStatementId()); } },void releasePrepareStatement(ServerPrepareResult serverPrepareResult)throws SQLException{decrementShareCounter();if(canBeDeallocate()){(serverPrepareResult);}},"['@', 'Override', 'public', 'void', 'releasePrepareStatement', '(', 'ServerPrepareResult', 'serverPrepareResult', ')', 'throws', 'SQLException', '{', 'serverPrepareResult', '.', 'decrementShareCounter', '(', ')', ';', 'if', '(', 'serverPrepareResult', '.', 'canBeDeallocate', '(', ')', ')', '{', 'forceReleasePrepareStatement', '(', 'serverPrepareResult', '.', 'getStatementId', '(', ')', ')', ';', '}', '}']","['void', 'releasePrepareStatement', '(', 'ServerPrepareResult', 'serverPrepareResult', ')', 'throws', 'SQLException', '{', 'decrementShareCounter', '(', ')', ';', 'if', '(', 'canBeDeallocate', '(', ')', ')', '{', '(', 'serverPrepareResult', ')', ';', '}', '}']",38,26,6,270,159,29,46.058091286307054,37.5,,,,-1,-1,-1,-1,False
L239_withRequiredArg_1.txt,code2vec,METHOD_NAME,token_wrong,0.246,0.3937,18.0576,17.5999,"{'n_total': 214, 'n_valid': 29, 'n_correct': 17}",84.336338,"public ArgumentAcceptingOptionSpec<String> withRequiredArg() { ArgumentAcceptingOptionSpec<String> newSpec = new RequiredArgumentOptionSpec<>(options(), description()); parser.recognize(newSpec); return newSpec; }",ArgumentAcceptingOptionSpec<String>withRequiredArg(){ArgumentAcceptingOptionSpec<String>newSpec=new RequiredArgumentOptionSpec(description());parser.recognize();return newSpec;},"['public', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'withRequiredArg', '(', ')', '{', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'newSpec', '=', 'new', 'RequiredArgumentOptionSpec', '<', '>', '(', 'options', '(', ')', ',', 'description', '(', ')', ')', ';', 'parser', '.', 'recognize', '(', 'newSpec', ')', ';', 'return', 'newSpec', ';', '}']","['ArgumentAcceptingOptionSpec', '<', 'String', '>', 'withRequiredArg', '(', ')', '{', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'newSpec', '=', 'new', 'RequiredArgumentOptionSpec', '(', 'description', '(', ')', ')', ';', 'parser', '.', 'recognize', '(', ')', ';', 'return', 'newSpec', ';', '}']",40,32,6,213,177,21,18.75,23.52941176470588,,,,-1,-1,-1,-1,False
L240_skip_1.txt,code2vec,METHOD_NAME,token_wrong,0.3158,0.9617,1.7246,9.9486,"{'n_total': 156, 'n_valid': 30, 'n_correct': 19}",83.59859,private int skip() { int i = cursor; int ch = temp[i + 1]; cursor = i + 2; return ch; },int skip(){i=cursor;temp[1]=i;},"['private', 'int', 'skip', '(', ')', '{', 'int', 'i', '=', 'cursor', ';', 'int', 'ch', '=', 'temp', '[', 'i', '+', '1', ']', ';', 'cursor', '=', 'i', '+', '2', ';', 'return', 'ch', ';', '}']","['int', 'skip', '(', ')', '{', 'i', '=', 'cursor', ';', 'temp', '[', '1', ']', '=', 'i', ';', '}']",31,17,6,87,31,10,72.72727272727273,56.00000000000001,,,,-1,-1,-1,-1,False
L241_notifyHandshakeComplete_1.txt,code2vec,METHOD_NAME,token_wrong,0.265,0.4541,15.9978,14.8848,"{'n_total': 357, 'n_valid': 52, 'n_correct': 36}",146.117024,"public void notifyHandshakeComplete() throws IOException { super.notifyHandshakeComplete(); byte[] pskIdentity = context.getSecurityParameters().getPSKIdentity(); if (pskIdentity != null) { String name = Strings.fromUTF8ByteArray(pskIdentity); System.out.println(""TLS-PSK server completed handshake for PSK identity: "" + name); } }","void notifyHandshakeComplete()throws IOException{super.notifyHandshakeComplete();byte pskIdentity=context();if(pskIdentity){(""""+name);}}","['public', 'void', 'notifyHandshakeComplete', '(', ')', 'throws', 'IOException', '{', 'super', '.', 'notifyHandshakeComplete', '(', ')', ';', 'byte', '[', ']', 'pskIdentity', '=', 'context', '.', 'getSecurityParameters', '(', ')', '.', 'getPSKIdentity', '(', ')', ';', 'if', '(', 'pskIdentity', '!=', 'null', ')', '{', 'String', 'name', '=', 'Strings', '.', 'fromUTF8ByteArray', '(', 'pskIdentity', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""TLS-PSK server completed handshake for PSK identity: ""', '+', 'name', ')', ';', '}', '}']","['void', 'notifyHandshakeComplete', '(', ')', 'throws', 'IOException', '{', 'super', '.', 'notifyHandshakeComplete', '(', ')', ';', 'byte', 'pskIdentity', '=', 'context', '(', ')', ';', 'if', '(', 'pskIdentity', ')', '{', '(', '""""', '+', 'name', ')', ';', '}', '}']",59,33,6,331,136,29,64.56953642384106,49.056603773584904,,,,-1,-1,-1,-1,False
L242_canFireCondition_1.txt,code2vec,METHOD_NAME,token_wrong,0.6334,0.4531,19.2647,21.9312,"{'n_total': 182, 'n_valid': 26, 'n_correct': 23}",72.647812,public boolean canFireCondition(GameEvent event) { if (primaryTrigger.canFireCondition(event) || (secondaryTrigger != null && secondaryTrigger.canFireCondition(event))) { return true; } return false; },boolean canFireCondition(GameEvent event){if(((event))){}},"['public', 'boolean', 'canFireCondition', '(', 'GameEvent', 'event', ')', '{', 'if', '(', 'primaryTrigger', '.', 'canFireCondition', '(', 'event', ')', '||', '(', 'secondaryTrigger', '!=', 'null', '&&', 'secondaryTrigger', '.', 'canFireCondition', '(', 'event', ')', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'canFireCondition', '(', 'GameEvent', 'event', ')', '{', 'if', '(', '(', '(', 'event', ')', ')', ')', '{', '}', '}']",39,18,6,201,58,22,79.88826815642457,63.63636363636363,,,,-1,-1,-1,-1,False
L243_setup_2.txt,code2vec,METHOD_NAME,token_wrong,0.994,0.9004,8.6673,11.8984,"{'n_total': 340, 'n_valid': 24, 'n_correct': 24}",66.487985,"@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, ""store.adapter.postgresql""); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named(""store.adapter.postgresql"")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(""user.storage.postgresql"")).toInstance(""postgresql"".equals(true)); }","void setup(Binder binder){buildConfigObject(JDBCConfig,"""").bind(booleanclass).annotatedWith(("""")).toInstance("""".equals());}","['@', 'Override', 'protected', 'void', 'setup', '(', 'Binder', 'binder', ')', '{', 'JDBCConfig', 'config', '=', 'buildConfigObject', '(', 'JDBCConfig', '.', 'class', ',', '""store.adapter.postgresql""', ')', ';', 'binder', '.', 'bind', '(', 'JDBCPoolDataSource', '.', 'class', ')', '.', 'annotatedWith', '(', 'Names', '.', 'named', '(', '""store.adapter.postgresql""', ')', ')', '.', 'toInstance', '(', 'JDBCPoolDataSource', '.', 'getOrCreateDataSource', '(', 'config', ')', ')', ';', 'binder', '.', 'bind', '(', 'PostgresqlQueryExecutor', '.', 'class', ')', '.', 'in', '(', 'Scopes', '.', 'SINGLETON', ')', ';', 'binder', '.', 'bind', '(', 'UserStorage', '.', 'class', ')', '.', 'to', '(', 'AbstractPostgresqlUserStorage', '.', 'class', ')', '.', 'in', '(', 'Scopes', '.', 'SINGLETON', ')', ';', 'binder', '.', 'bind', '(', 'boolean', '.', 'class', ')', '.', 'annotatedWith', '(', 'Names', '.', 'named', '(', '""user.storage.postgresql""', ')', ')', '.', 'toInstance', '(', '""postgresql""', '.', 'equals', '(', 'true', ')', ')', ';', '}']","['void', 'setup', '(', 'Binder', 'binder', ')', '{', 'buildConfigObject', '(', 'JDBCConfig', ',', '""""', ')', '.', 'bind', '(', 'booleanclass', ')', '.', 'annotatedWith', '(', '(', '""""', ')', ')', '.', 'toInstance', '(', '""""', '.', 'equals', '(', ')', ')', ';', '}']",120,36,6,567,123,11,79.85611510791367,73.68421052631578,,,,-1,-1,-1,-1,False
L244_ensureSize_1.txt,code2vec,METHOD_NAME,token_wrong,0.7144,0.6713,3.1295,3.9869,"{'n_total': 323, 'n_valid': 30, 'n_correct': 27}",93.029948,"public void ensureSize(ArrayList<DenseFloatMatrix1D> list, int size) { int lSize = list.size(); if (size <= lSize) return; for (int i = lSize; i < size; i++) list.add(null); }","void ensureSize(ArrayList<D>list,int size){lSize.size();if(size)for(;;i++);}","['public', 'void', 'ensureSize', '(', 'ArrayList', '<', 'DenseFloatMatrix1D', '>', 'list', ',', 'int', 'size', ')', '{', 'int', 'lSize', '=', 'list', '.', 'size', '(', ')', ';', 'if', '(', 'size', '<=', 'lSize', ')', 'return', ';', 'for', '(', 'int', 'i', '=', 'lSize', ';', 'i', '<', 'size', ';', 'i', '++', ')', 'list', '.', 'add', '(', 'null', ')', ';', '}']","['void', 'ensureSize', '(', 'ArrayList', '<', 'D', '>', 'list', ',', 'int', 'size', ')', '{', 'lSize', '.', 'size', '(', ')', ';', 'if', '(', 'size', ')', 'for', '(', ';', ';', 'i', '++', ')', ';', '}']",53,32,6,175,76,16,62.264150943396224,44.680851063829785,,,,-1,-1,-1,-1,False
L245_asStream_1.txt,code2vec,METHOD_NAME,token_wrong,0.9339,0.9949,13.9859,18.9931,"{'n_total': 199, 'n_valid': 17, 'n_correct': 17}",44.955722,"@Timed(""snapshot_apply"") @Override public Stream<Op> asStream(Snapshot snapshot) { requireNonNull(snapshot); LOG.info(""Restoring snapshot.""); return snapshotFields.stream().flatMap(field -> field.streamFrom(snapshot)); }","Stream<Op>asStream(Snapshot snapshot){("""").flatMap((snapshot));}","['@', 'Timed', '(', '""snapshot_apply""', ')', '@', 'Override', 'public', 'Stream', '<', 'Op', '>', 'asStream', '(', 'Snapshot', 'snapshot', ')', '{', 'requireNonNull', '(', 'snapshot', ')', ';', 'LOG', '.', 'info', '(', '""Restoring snapshot.""', ')', ';', 'return', 'snapshotFields', '.', 'stream', '(', ')', '.', 'flatMap', '(', 'field', '->', 'field', '.', 'streamFrom', '(', 'snapshot', ')', ')', ';', '}']","['Stream', '<', 'Op', '>', 'asStream', '(', 'Snapshot', 'snapshot', ')', '{', '(', '""""', ')', '.', 'flatMap', '(', '(', 'snapshot', ')', ')', ';', '}']",50,22,6,220,64,14,75.72815533980582,63.63636363636363,,,,-1,-1,-1,-1,False
L246_transfer_1.txt,code2vec,METHOD_NAME,token_wrong,0.8671,0.5407,7.7636,6.5987,"{'n_total': 267, 'n_valid': 28, 'n_correct': 26}",80.962782,"private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); int fromLimit = from.limit(); from.limit(from.position() + max); to.put(from); from.limit(fromLimit); }","void transfer(ByteBuffer from,ByteBuffer to){max=(from)limit();}","['private', 'void', 'transfer', '(', 'ByteBuffer', 'from', ',', 'ByteBuffer', 'to', ')', '{', 'int', 'max', '=', 'Math', '.', 'min', '(', 'from', '.', 'remaining', '(', ')', ',', 'to', '.', 'remaining', '(', ')', ')', ';', 'int', 'fromLimit', '=', 'from', '.', 'limit', '(', ')', ';', 'from', '.', 'limit', '(', 'from', '.', 'position', '(', ')', '+', 'max', ')', ';', 'to', '.', 'put', '(', 'from', ')', ';', 'from', '.', 'limit', '(', 'fromLimit', ')', ';', '}']","['void', 'transfer', '(', 'ByteBuffer', 'from', ',', 'ByteBuffer', 'to', ')', '{', 'max', '=', '(', 'from', ')', 'limit', '(', ')', ';', '}']",68,20,6,213,64,14,74.87437185929649,77.41935483870968,,,,-1,-1,-1,-1,False
L247_unlockCheck_1.txt,code2vec,METHOD_NAME,token_wrong,0.1954,0.1631,16.225,16.3559,"{'n_total': 376, 'n_valid': 41, 'n_correct': 25}",120.57547,"protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }","boolean unlockCheck(List<String>resource){Iterator<String>locksIterator=locks();while(locksIterator()){if(securityService.unlock(locksIterator.next(),resource))return true;}}","['protected', 'boolean', 'unlockCheck', '(', 'List', '<', 'String', '>', 'locks', ',', 'String', 'resource', ')', '{', 'Iterator', '<', 'String', '>', 'locksIterator', '=', 'locks', '.', 'iterator', '(', ')', ';', 'while', '(', 'locksIterator', '.', 'hasNext', '(', ')', ')', '{', 'if', '(', 'securityService', '(', ')', '.', 'unlock', '(', 'locksIterator', '.', 'next', '(', ')', ',', 'resource', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'unlockCheck', '(', 'List', '<', 'String', '>', 'resource', ')', '{', 'Iterator', '<', 'String', '>', 'locksIterator', '=', 'locks', '(', ')', ';', 'while', '(', 'locksIterator', '(', ')', ')', '{', 'if', '(', 'securityService', '.', 'unlock', '(', 'locksIterator', '.', 'next', '(', ')', ',', 'resource', ')', ')', 'return', 'true', ';', '}', '}']",60,47,6,246,174,17,31.4410480349345,24.074074074074073,,,,-1,-1,-1,-1,False
L248_toggle_1.txt,code2vec,METHOD_NAME,token_wrong,0.7958,0.7145,12.4086,10.2371,"{'n_total': 144, 'n_valid': 20, 'n_correct': 17}",55.377337,public static void toggle() { if (level == Application.LOG_DEBUG) level = Application.LOG_ERROR; else level = Application.LOG_DEBUG; Gdx.app.setLogLevel(level); },void toggle(){if(level)Gdx.setLogLevel();},"['public', 'static', 'void', 'toggle', '(', ')', '{', 'if', '(', 'level', '==', 'Application', '.', 'LOG_DEBUG', ')', 'level', '=', 'Application', '.', 'LOG_ERROR', ';', 'else', 'level', '=', 'Application', '.', 'LOG_DEBUG', ';', 'Gdx', '.', 'app', '.', 'setLogLevel', '(', 'level', ')', ';', '}']","['void', 'toggle', '(', ')', '{', 'if', '(', 'level', ')', 'Gdx', '.', 'setLogLevel', '(', ')', ';', '}']",38,16,6,162,42,12,80.0,68.75,,,,-1,-1,-1,-1,False
L249_isPageRestorable_1.txt,code2vec,METHOD_NAME,token_wrong,0.1913,0.3645,15.6849,17.9731,"{'n_total': 446, 'n_valid': 61, 'n_correct': 34}",169.215556,"private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION.getName().equals(request.getParameter(RequestHelper.ACTION))) return false; if (""GET"".equalsIgnoreCase(request.getMethod())) return true; return false; }","boolean isPageRestorable(HttpServletRequest request){(RequestHelper.PANEL(getParameter()));if(WikiPageAction.PUBLICVIEW(request.getParameter(RequestHelper.ACTION)))("""".equalsIgnoreCase());}","['private', 'boolean', 'isPageRestorable', '(', 'HttpServletRequest', 'request', ')', '{', 'if', '(', 'RequestHelper', '.', 'TITLE_PANEL', '.', 'equals', '(', 'request', '.', 'getParameter', '(', 'RequestHelper', '.', 'PANEL', ')', ')', ')', 'return', 'false', ';', 'if', '(', 'WikiPageAction', '.', 'PUBLICVIEW_ACTION', '.', 'getName', '(', ')', '.', 'equals', '(', 'request', '.', 'getParameter', '(', 'RequestHelper', '.', 'ACTION', ')', ')', ')', 'return', 'false', ';', 'if', '(', '""GET""', '.', 'equalsIgnoreCase', '(', 'request', '.', 'getMethod', '(', ')', ')', ')', 'return', 'true', ';', 'return', 'false', ';', '}']","['boolean', 'isPageRestorable', '(', 'HttpServletRequest', 'request', ')', '{', '(', 'RequestHelper', '.', 'PANEL', '(', 'getParameter', '(', ')', ')', ')', ';', 'if', '(', 'WikiPageAction', '.', 'PUBLICVIEW', '(', 'request', '.', 'getParameter', '(', 'RequestHelper', '.', 'ACTION', ')', ')', ')', '(', '""""', '.', 'equalsIgnoreCase', '(', ')', ')', ';', '}']",74,43,6,348,189,22,48.77300613496933,45.588235294117645,,,,-1,-1,-1,-1,False
L250_createSessionInfo_1.txt,code2vec,METHOD_NAME,token_wrong,0.6973,0.5309,11.5443,12.4903,"{'n_total': 308, 'n_valid': 33, 'n_correct': 24}",94.017419,"private byte[] createSessionInfo(int algorithm, byte[] keyBytes) { byte[] sessionInfo = new byte[keyBytes.length + 3]; sessionInfo[0] = (byte) algorithm; System.arraycopy(keyBytes, 0, sessionInfo, 1, keyBytes.length); addCheckSum(sessionInfo); return sessionInfo; }","byte[]createSessionInfo(int algorithm,byte[]keyBytes){byte[]sessionInfo=new byte[3];arraycopy();addCheckSum(sessionInfo);}","['private', 'byte', '[', ']', 'createSessionInfo', '(', 'int', 'algorithm', ',', 'byte', '[', ']', 'keyBytes', ')', '{', 'byte', '[', ']', 'sessionInfo', '=', 'new', 'byte', '[', 'keyBytes', '.', 'length', '+', '3', ']', ';', 'sessionInfo', '[', '0', ']', '=', '(', 'byte', ')', 'algorithm', ';', 'System', '.', 'arraycopy', '(', 'keyBytes', ',', '0', ',', 'sessionInfo', ',', '1', ',', 'keyBytes', '.', 'length', ')', ';', 'addCheckSum', '(', 'sessionInfo', ')', ';', 'return', 'sessionInfo', ';', '}']","['byte', '[', ']', 'createSessionInfo', '(', 'int', 'algorithm', ',', 'byte', '[', ']', 'keyBytes', ')', '{', 'byte', '[', ']', 'sessionInfo', '=', 'new', 'byte', '[', '3', ']', ';', 'arraycopy', '(', ')', ';', 'addCheckSum', '(', 'sessionInfo', ')', ';', '}']",66,35,6,265,122,23,59.09090909090909,51.66666666666667,,,,-1,-1,-1,-1,False
L251_setup_3.txt,code2vec,METHOD_NAME,token_wrong,0.4024,0.2587,8.0676,7.5458,"{'n_total': 609, 'n_valid': 93, 'n_correct': 61}",258.376645,"@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(""CREATE TABLE IF NOT EXISTS api_key ("" + "" id SERIAL NOT NULL,\n"" + "" project VARCHAR(255) NOT NULL,\n"" + "" read_key VARCHAR(255) NOT NULL,\n"" + "" write_key VARCHAR(255) NOT NULL,\n"" + "" master_key VARCHAR(255) NOT NULL,\n"" + "" created_at TIMESTAMP default current_timestamp NOT NULL,"" + ""PRIMARY KEY (id)\n"" + "" )""); } catch (SQLException e) { throw new RuntimeException(e); } }","void setup(){try(Connection connection=getConnection()){(""""+""""+""""+""""+""""+""""+"" )"");}{(e);}}","['@', 'Override', 'public', 'void', 'setup', '(', ')', '{', 'try', '(', 'Connection', 'connection', '=', 'connectionPool', '.', 'getConnection', '(', ')', ')', '{', 'Statement', 'statement', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'statement', '.', 'execute', '(', '""CREATE TABLE IF NOT EXISTS api_key (""', '+', '"" id SERIAL NOT NULL,\\n""', '+', '"" project VARCHAR(255) NOT NULL,\\n""', '+', '"" read_key VARCHAR(255) NOT NULL,\\n""', '+', '"" write_key VARCHAR(255) NOT NULL,\\n""', '+', '"" master_key VARCHAR(255) NOT NULL,\\n""', '+', '"" created_at TIMESTAMP default current_timestamp NOT NULL,""', '+', '""PRIMARY KEY (id)\\n""', '+', '"" )""', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['void', 'setup', '(', ')', '{', 'try', '(', 'Connection', 'connection', '=', 'getConnection', '(', ')', ')', '{', '(', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '"" )""', ')', ';', '}', '{', '(', 'e', ')', ';', '}', '}']",68,39,6,544,89,11,85.36585365853658,46.774193548387096,,,,-1,-1,-1,-1,False
L252_disconnect_1.txt,code2vec,METHOD_NAME,token_wrong,0.6195,0.6863,2.1015,4.5619,"{'n_total': 173, 'n_valid': 18, 'n_correct': 14}",57.18283,@Override public synchronized void disconnect() { setConnected(false); try { close(); } catch (Exception x) { } },@Override void disconnect(){try{close();}catch(Exception x){}},"['@', 'Override', 'public', 'synchronized', 'void', 'disconnect', '(', ')', '{', 'setConnected', '(', 'false', ')', ';', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'void', 'disconnect', '(', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",29,22,6,113,62,16,52.57731958762887,30.434782608695656,,,,-1,-1,-1,-1,False
L253_graphType_1.txt,code2vec,METHOD_NAME,token_wrong,0.2846,0.2282,6.2352,5.8406,"{'n_total': 472, 'n_valid': 51, 'n_correct': 30}",150.56255,"public Map<Integer, Integer> graphType() { Map<Integer, Integer> result; result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }","Map<Integer,Integer>graphType(){Map<Integer>result;result=new HashMap<>();if(getClassifier()!=null){if(getClassifier()instanceof Drawable){result.put(0,((Drawable)getClassifier()).graphType());}}return result;}","['public', 'Map', '<', 'Integer', ',', 'Integer', '>', 'graphType', '(', ')', '{', 'Map', '<', 'Integer', ',', 'Integer', '>', 'result', ';', 'result', '=', 'new', 'HashMap', '<', 'Integer', ',', 'Integer', '>', '(', ')', ';', 'if', '(', 'getClassifier', '(', ')', '!=', 'null', ')', '{', 'if', '(', 'getClassifier', '(', ')', 'instanceof', 'Drawable', ')', '{', 'result', '.', 'put', '(', '0', ',', '(', '(', 'Drawable', ')', 'getClassifier', '(', ')', ')', '.', 'graphType', '(', ')', ')', ';', '}', '}', 'return', 'result', ';', '}']","['Map', '<', 'Integer', ',', 'Integer', '>', 'graphType', '(', ')', '{', 'Map', '<', 'Integer', '>', 'result', ';', 'result', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'if', '(', 'getClassifier', '(', ')', '!=', 'null', ')', '{', 'if', '(', 'getClassifier', '(', ')', 'instanceof', 'Drawable', ')', '{', 'result', '.', 'put', '(', '0', ',', '(', '(', 'Drawable', ')', 'getClassifier', '(', ')', ')', '.', 'graphType', '(', ')', ')', ';', '}', '}', 'return', 'result', ';', '}']",75,69,6,266,210,15,22.31075697211155,8.695652173913043,,,,-1,-1,-1,-1,False
L254_getAttributeValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.5988,0.9795,3.956,11.9052,"{'n_total': 304, 'n_valid': 31, 'n_correct': 28}",89.860853,"static String getAttributeValue(Map attrs, String attrName) { String answer = null; Set set = (Set) attrs.get(attrName); if (set != null && set.size() == 1) { answer = (String) set.iterator().next(); } return (answer); }","String getAttributeValue(Map attrs,String attrName){set=(Set)(attrName);if(1){}(answer);}","['static', 'String', 'getAttributeValue', '(', 'Map', 'attrs', ',', 'String', 'attrName', ')', '{', 'String', 'answer', '=', 'null', ';', 'Set', 'set', '=', '(', 'Set', ')', 'attrs', '.', 'get', '(', 'attrName', ')', ';', 'if', '(', 'set', '!=', 'null', '&&', 'set', '.', 'size', '(', ')', '==', '1', ')', '{', 'answer', '=', '(', 'String', ')', 'set', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ';', '}', 'return', '(', 'answer', ')', ';', '}']","['String', 'getAttributeValue', '(', 'Map', 'attrs', ',', 'String', 'attrName', ')', '{', 'set', '=', '(', 'Set', ')', '(', 'attrName', ')', ';', 'if', '(', '1', ')', '{', '}', '(', 'answer', ')', ';', '}']",66,30,6,220,89,23,66.49746192893402,60.0,,,,-1,-1,-1,-1,False
L255_checkKeyUsage_2.txt,code2vec,METHOD_NAME,token_wrong,0.2368,0.2148,18.999,20.6254,"{'n_total': 449, 'n_valid': 71, 'n_correct': 36}",195.728471,"public void checkKeyUsage(int id, byte[] bytes) throws IOException { X509CertificateHolder certHld = new X509CertificateHolder(bytes); if ((DERBitString.getInstance(certHld.getExtension(Extension.keyUsage).getParsedValue()).getBytes()[0] & 0x01) != 0) { fail(""error generating cert - key usage wrong.""); } }","void checkKeyUsage(int id,byte[]bytes)throws IOException{X certHld=new XCertificateHolder();if((DERBitString.getInstance(getParsedValue())&1)){("""");}}","['public', 'void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X509CertificateHolder', 'certHld', '=', 'new', 'X509CertificateHolder', '(', 'bytes', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'certHld', '.', 'getExtension', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '.', 'getBytes', '(', ')', '[', '0', ']', '&', '0x01', ')', '!=', '0', ')', '{', 'fail', '(', '""error generating cert - key usage wrong.""', ')', ';', '}', '}']","['void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X', 'certHld', '=', 'new', 'XCertificateHolder', '(', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'getParsedValue', '(', ')', ')', '&', '1', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",65,44,6,307,150,19,54.513888888888886,35.59322033898305,,,,-1,-1,-1,-1,False
L256_importPoint_1.txt,code2vec,METHOD_NAME,token_wrong,0.7141,0.7616,21.8622,17.2746,"{'n_total': 744, 'n_valid': 95, 'n_correct': 59}",267.135293,"public ECPoint importPoint(ECPoint p) { if (this != p.getCurve() && this.getCoordinateSystem() == ECCurve.COORD_JACOBIAN && !p.isInfinity()) { switch(p.getCurve().getCoordinateSystem()) { case ECCurve.COORD_JACOBIAN: case ECCurve.COORD_JACOBIAN_CHUDNOVSKY: case ECCurve.COORD_JACOBIAN_MODIFIED: return new ECPoint.Fp(this, fromBigInteger(p.x.toBigInteger()), fromBigInteger(p.y.toBigInteger()), new ECFieldElement[] { fromBigInteger(p.zs[0].toBigInteger()) }, p.withCompression); default: break; } } return super.importPoint(p); }","ECPoint importPoint(ECPoint p){if(p()){switch(p().getCoordinateSystem){case ECCurve.CHUDNOVSKY:case MODIFIED:return ECPoint(this,fromBigInteger(toBigInteger()),new ECFieldElement[]{(toBigInteger())},withCompression);}}}","['public', 'ECPoint', 'importPoint', '(', 'ECPoint', 'p', ')', '{', 'if', '(', 'this', '!=', 'p', '.', 'getCurve', '(', ')', '&&', 'this', '.', 'getCoordinateSystem', '(', ')', '==', 'ECCurve', '.', 'COORD_JACOBIAN', '&&', '!', 'p', '.', 'isInfinity', '(', ')', ')', '{', 'switch', '(', 'p', '.', 'getCurve', '(', ')', '.', 'getCoordinateSystem', '(', ')', ')', '{', 'case', 'ECCurve', '.', 'COORD_JACOBIAN', ':', 'case', 'ECCurve', '.', 'COORD_JACOBIAN_CHUDNOVSKY', ':', 'case', 'ECCurve', '.', 'COORD_JACOBIAN_MODIFIED', ':', 'return', 'new', 'ECPoint', '.', 'Fp', '(', 'this', ',', 'fromBigInteger', '(', 'p', '.', 'x', '.', 'toBigInteger', '(', ')', ')', ',', 'fromBigInteger', '(', 'p', '.', 'y', '.', 'toBigInteger', '(', ')', ')', ',', 'new', 'ECFieldElement', '[', ']', '{', 'fromBigInteger', '(', 'p', '.', 'zs', '[', '0', ']', '.', 'toBigInteger', '(', ')', ')', '}', ',', 'p', '.', 'withCompression', ')', ';', 'default', ':', 'break', ';', '}', '}', 'return', 'super', '.', 'importPoint', '(', 'p', ')', ';', '}']","['ECPoint', 'importPoint', '(', 'ECPoint', 'p', ')', '{', 'if', '(', 'p', '(', ')', ')', '{', 'switch', '(', 'p', '(', ')', '.', 'getCoordinateSystem', ')', '{', 'case', 'ECCurve', '.', 'CHUDNOVSKY', ':', 'case', 'MODIFIED', ':', 'return', 'ECPoint', '(', 'this', ',', 'fromBigInteger', '(', 'toBigInteger', '(', ')', ')', ',', 'new', 'ECFieldElement', '[', ']', '{', '(', 'toBigInteger', '(', ')', ')', '}', ',', 'withCompression', ')', ';', '}', '}', '}']",134,61,6,530,219,17,60.62378167641326,57.03125,,,,-1,-1,-1,-1,False
L257_run_1.txt,code2vec,METHOD_NAME,token_wrong,0.4077,0.3034,4.8895,9.4461,"{'n_total': 211, 'n_valid': 38, 'n_correct': 21}",106.027996,"public void run() { PublishedAssessmentService assessmentService = new PublishedAssessmentService(); log.debug(""** remove assessmentId= "" + this.assessmentId); assessmentService.removeAssessment(this.assessmentId, this.action); }","void run(){PublishedAssessmentService assessmentService=new log(""* ""+assessmentId);removeAssessment();}","['public', 'void', 'run', '(', ')', '{', 'PublishedAssessmentService', 'assessmentService', '=', 'new', 'PublishedAssessmentService', '(', ')', ';', 'log', '.', 'debug', '(', '""** remove assessmentId= ""', '+', 'this', '.', 'assessmentId', ')', ';', 'assessmentService', '.', 'removeAssessment', '(', 'this', '.', 'assessmentId', ',', 'this', '.', 'action', ')', ';', '}']","['void', 'run', '(', ')', '{', 'PublishedAssessmentService', 'assessmentService', '=', 'new', 'log', '(', '""* ""', '+', 'assessmentId', ')', ';', 'removeAssessment', '(', ')', ';', '}']",39,21,6,229,103,9,57.27272727272727,54.54545454545454,,,,-1,-1,-1,-1,False
L258_givenRegisteredBroadcastReceiver_1.txt,code2vec,METHOD_NAME,token_wrong,0.2189,0.4648,13.8715,15.1433,"{'n_total': 233, 'n_valid': 22, 'n_correct': 20}",60.474141,"private ArgumentCaptor<ConnectivityReceiver> givenRegisteredBroadcastReceiver() { given(androidVersion.isLollipopOrHigher()).willReturn(false); connectivityChangesRegister.register(connectivityChangesNotifier); ArgumentCaptor<ConnectivityReceiver> argumentCaptor = ArgumentCaptor.forClass(ConnectivityReceiver.class); verify(context).registerReceiver(argumentCaptor.capture(), refEq(new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION))); return argumentCaptor; }","ArgumentCaptor<ConnectivityReceiver>givenRegisteredBroadcastReceiver(){given();(context).registerReceiver(argumentCaptor,refEq(IntentFilter()));}","['private', 'ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'givenRegisteredBroadcastReceiver', '(', ')', '{', 'given', '(', 'androidVersion', '.', 'isLollipopOrHigher', '(', ')', ')', '.', 'willReturn', '(', 'false', ')', ';', 'connectivityChangesRegister', '.', 'register', '(', 'connectivityChangesNotifier', ')', ';', 'ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'argumentCaptor', '=', 'ArgumentCaptor', '.', 'forClass', '(', 'ConnectivityReceiver', '.', 'class', ')', ';', 'verify', '(', 'context', ')', '.', 'registerReceiver', '(', 'argumentCaptor', '.', 'capture', '(', ')', ',', 'refEq', '(', 'new', 'IntentFilter', '(', 'ConnectivityManager', '.', 'CONNECTIVITY_ACTION', ')', ')', ')', ';', 'return', 'argumentCaptor', ';', '}']","['ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'givenRegisteredBroadcastReceiver', '(', ')', '{', 'given', '(', ')', ';', '(', 'context', ')', '.', 'registerReceiver', '(', 'argumentCaptor', ',', 'refEq', '(', 'IntentFilter', '(', ')', ')', ')', ';', '}']",74,29,6,468,145,38,75.11627906976744,66.17647058823529,,,,-1,-1,-1,-1,False
L259_modifyMaxMana_1.txt,code2vec,METHOD_NAME,token_wrong,0.5514,0.4765,16.293,16.0004,"{'n_total': 476, 'n_valid': 58, 'n_correct': 42}",163.032856,"public void modifyMaxMana(Player player, int delta) { log(""Maximum mana was changed by {} for {}"", delta, player.getName()); int maxMana = MathUtils.clamp(player.getMaxMana() + delta, 0, GameLogic.MAX_MANA); player.setMaxMana(maxMana); if (delta < 0 && player.getMana() > player.getMaxMana()) { modifyCurrentMana(player.getId(), delta); } }","void modifyMaxMana(Player delta){log(""Maximummana"",getName());maxMana();if(getMaxMana()){(player);}}","['public', 'void', 'modifyMaxMana', '(', 'Player', 'player', ',', 'int', 'delta', ')', '{', 'log', '(', '""Maximum mana was changed by {} for {}""', ',', 'delta', ',', 'player', '.', 'getName', '(', ')', ')', ';', 'int', 'maxMana', '=', 'MathUtils', '.', 'clamp', '(', 'player', '.', 'getMaxMana', '(', ')', '+', 'delta', ',', '0', ',', 'GameLogic', '.', 'MAX_MANA', ')', ';', 'player', '.', 'setMaxMana', '(', 'maxMana', ')', ';', 'if', '(', 'delta', '<', '0', '&&', 'player', '.', 'getMana', '(', ')', '>', 'player', '.', 'getMaxMana', '(', ')', ')', '{', 'modifyCurrentMana', '(', 'player', '.', 'getId', '(', ')', ',', 'delta', ')', ';', '}', '}']","['void', 'modifyMaxMana', '(', 'Player', 'delta', ')', '{', 'log', '(', '""Maximummana""', ',', 'getName', '(', ')', ')', ';', 'maxMana', '(', ')', ';', 'if', '(', 'getMaxMana', '(', ')', ')', '{', '(', 'player', ')', ';', '}', '}']",85,33,6,340,100,19,74.76635514018692,65.82278481012658,,,,-1,-1,-1,-1,False
L260_init_4.txt,code2vec,METHOD_NAME,token_wrong,0.2171,0.2171,4.625,4.625,"{'n_total': 179, 'n_valid': 28, 'n_correct': 13}",79.345276,"private void init() { if (debug == null) { debug = Debug.getInstance(""amMonitoring""); } }","void init(){if(debug==null){debug=Debug.getInstance(""amMonitoring"");}}","['private', 'void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']",24,23,6,89,70,10,24.050632911392405,5.555555555555555,,,,-1,-1,-1,-1,False
L261_validate_1.txt,code2vec,METHOD_NAME,token_wrong,0.6111,0.6684,7.9397,10.1812,"{'n_total': 264, 'n_valid': 37, 'n_correct': 27}",107.753373,protected boolean validate(String input) { if (input == null || input.trim().length() < 1) { mErrorText.setVisibility(View.VISIBLE); mErrorText.setText(R.string.task_list_name_dialog_error); return false; } mErrorText.setVisibility(View.INVISIBLE); return true; },boolean validate(String input){if(input){(View);}mErrorText.setVisibility();},"['protected', 'boolean', 'validate', '(', 'String', 'input', ')', '{', 'if', '(', 'input', '==', 'null', '||', 'input', '.', 'trim', '(', ')', '.', 'length', '(', ')', '<', '1', ')', '{', 'mErrorText', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', 'mErrorText', '.', 'setText', '(', 'R', '.', 'string', '.', 'task_list_name_dialog_error', ')', ';', 'return', 'false', ';', '}', 'mErrorText', '.', 'setVisibility', '(', 'View', '.', 'INVISIBLE', ')', ';', 'return', 'true', ';', '}']","['boolean', 'validate', '(', 'String', 'input', ')', '{', 'if', '(', 'input', ')', '{', '(', 'View', ')', ';', '}', 'mErrorText', '.', 'setVisibility', '(', ')', ';', '}']",64,24,6,263,77,14,74.69879518072288,68.96551724137932,,,,-1,-1,-1,-1,False
L262_suiteSetup_1.txt,code2vec,METHOD_NAME,token_wrong,0.2417,0.1963,14.7788,15.0914,"{'n_total': 819, 'n_valid': 78, 'n_correct': 48}",222.534264,"@Parameters({ ""parent-realms"" }) @BeforeSuite(groups = { ""api"" }) public void suiteSetup(String realms) throws SSOException, SMSException { Object[] params = { realms }; entering(""suiteSetup"", params); StringTokenizer st = new StringTokenizer(realms, "",""); while (st.hasMoreElements()) { String realm = st.nextToken().trim(); createSubRealm(getAdminSSOToken(), realm); } exiting(""suiteSetup""); }","@Parameters({""""})@BeforeSuite(groups={""api""})void suiteSetup(String realms)throws SSOException,SMSException{Object[]params={realms};entering(""suiteSetup"",params);st();while(st){(realm);}("""");}","['@', 'Parameters', '(', '{', '""parent-realms""', '}', ')', '@', 'BeforeSuite', '(', 'groups', '=', '{', '""api""', '}', ')', 'public', 'void', 'suiteSetup', '(', 'String', 'realms', ')', 'throws', 'SSOException', ',', 'SMSException', '{', 'Object', '[', ']', 'params', '=', '{', 'realms', '}', ';', 'entering', '(', '""suiteSetup""', ',', 'params', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'realms', ',', '"",""', ')', ';', 'while', '(', 'st', '.', 'hasMoreElements', '(', ')', ')', '{', 'String', 'realm', '=', 'st', '.', 'nextToken', '(', ')', '.', 'trim', '(', ')', ';', 'createSubRealm', '(', 'getAdminSSOToken', '(', ')', ',', 'realm', ')', ';', '}', 'exiting', '(', '""suiteSetup""', ')', ';', '}']","['@', 'Parameters', '(', '{', '""""', '}', ')', '@', 'BeforeSuite', '(', 'groups', '=', '{', '""api""', '}', ')', 'void', 'suiteSetup', '(', 'String', 'realms', ')', 'throws', 'SSOException', ',', 'SMSException', '{', 'Object', '[', ']', 'params', '=', '{', 'realms', '}', ';', 'entering', '(', '""suiteSetup""', ',', 'params', ')', ';', 'st', '(', ')', ';', 'while', '(', 'st', ')', '{', '(', 'realm', ')', ';', '}', '(', '""""', ')', ';', '}']",93,62,6,395,192,16,53.562005277044854,35.63218390804598,,,,-1,-1,-1,-1,False
L263_writeExecutableCode_1.txt,code2vec,METHOD_NAME,token_wrong,0.5534,0.871,19.3268,21.4938,"{'n_total': 200, 'n_valid': 24, 'n_correct': 20}",66.757618,"private void writeExecutableCode(@Nonnull LineParser lineParser) { String formattedLine = lineCoverageFormatter.format(lineParser, lineCoverageData); output.write("" <td>""); output.write(formattedLine); output.println(""</td>""); }","void writeExecutableCode(LineParser lineParser){("""");("""");}","['private', 'void', 'writeExecutableCode', '(', '@', 'Nonnull', 'LineParser', 'lineParser', ')', '{', 'String', 'formattedLine', '=', 'lineCoverageFormatter', '.', 'format', '(', 'lineParser', ',', 'lineCoverageData', ')', ';', 'output', '.', 'write', '(', '"" <td>""', ')', ';', 'output', '.', 'write', '(', 'formattedLine', ')', ';', 'output', '.', 'println', '(', '""</td>""', ')', ';', '}']","['void', 'writeExecutableCode', '(', 'LineParser', 'lineParser', ')', '{', '(', '""""', ')', ';', '(', '""""', ')', ';', '}']",44,16,6,228,59,25,83.2512315270936,73.68421052631578,,,,-1,-1,-1,-1,False
L264_disablePlayerBar_1.txt,code2vec,METHOD_NAME,token_wrong,0.8762,0.6519,16.2415,17.4648,"{'n_total': 275, 'n_valid': 29, 'n_correct': 24}",89.349797,private void disablePlayerBar() { playPauseButton.setPlaying(false); playerThumbnailIV.setImageResource(R.drawable.ic_launcher_square); playerProgramNameTV.setText(R.string.app_name); if (slidingUpPanelLayout.collapsePanel()) { slidingUpPanelLayout.setSlidingEnabled(false); } },void disablePlayerBar(){(false);setImageResource();(name);if(slidingUpPanelLayout.collapsePanel()){setSlidingEnabled(false);}},"['private', 'void', 'disablePlayerBar', '(', ')', '{', 'playPauseButton', '.', 'setPlaying', '(', 'false', ')', ';', 'playerThumbnailIV', '.', 'setImageResource', '(', 'R', '.', 'drawable', '.', 'ic_launcher_square', ')', ';', 'playerProgramNameTV', '.', 'setText', '(', 'R', '.', 'string', '.', 'app_name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '.', 'collapsePanel', '(', ')', ')', '{', 'slidingUpPanelLayout', '.', 'setSlidingEnabled', '(', 'false', ')', ';', '}', '}']","['void', 'disablePlayerBar', '(', ')', '{', '(', 'false', ')', ';', 'setImageResource', '(', ')', ';', '(', 'name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '.', 'collapsePanel', '(', ')', ')', '{', 'setSlidingEnabled', '(', 'false', ')', ';', '}', '}']",53,33,6,278,126,22,59.375,42.5531914893617,,,,-1,-1,-1,-1,False
L265_reset_3.txt,code2vec,METHOD_NAME,token_wrong,0.6201,0.8989,5.0755,8.1627,"{'n_total': 132, 'n_valid': 12, 'n_correct': 11}",33.929624,"public void reset(String realm, String config) { configData = null; xmlValue = null; initialize(realm, config); }","void reset(String realm,String config){initialize();}","['public', 'void', 'reset', '(', 'String', 'realm', ',', 'String', 'config', ')', '{', 'configData', '=', 'null', ';', 'xmlValue', '=', 'null', ';', 'initialize', '(', 'realm', ',', 'config', ')', ';', '}']","['void', 'reset', '(', 'String', 'realm', ',', 'String', 'config', ')', '{', 'initialize', '(', ')', ';', '}']",27,15,6,113,53,11,58.82352941176471,57.14285714285714,,,,-1,-1,-1,-1,False
L266_testWithKeyTransformer_1.txt,code2vec,METHOD_NAME,token_wrong,0.1689,0.1338,14.3466,14.1577,"{'n_total': 598, 'n_valid': 97, 'n_correct': 43}",269.352587,"@Test public void testWithKeyTransformer() { String json = ""{\""abc\"":{\""de.f\"":123}}""; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(""{\""abc.de_f\"":123}"", jf.flatten()); }","void testWithKeyTransformer(){String=""\""abcf\"""";jf=(json)withFlattenMode().withKeyTransformer(new KeyTransformer(){String transform(String key){return key.replace('.','_');}});assertEquals(""abcdef"",jf.flatten);}","['@', 'Test', 'public', 'void', 'testWithKeyTransformer', '(', ')', '{', 'String', 'json', '=', '""{\\""abc\\"":{\\""de.f\\"":123}}""', ';', 'JsonFlattener', 'jf', '=', 'new', 'JsonFlattener', '(', 'json', ')', '.', 'withFlattenMode', '(', 'FlattenMode', '.', 'MONGODB', ')', '.', 'withKeyTransformer', '(', 'new', 'KeyTransformer', '(', ')', '{', '@', 'Override', 'public', 'String', 'transform', '(', 'String', 'key', ')', '{', 'return', 'key', '.', 'replace', '(', ""'.'"", ',', ""'_'"", ')', ';', '}', '}', ')', ';', 'assertEquals', '(', '""{\\""abc.de_f\\"":123}""', ',', 'jf', '.', 'flatten', '(', ')', ')', ';', '}']","['void', 'testWithKeyTransformer', '(', ')', '{', 'String', '=', '""\\""abcf\\""""', ';', 'jf', '=', '(', 'json', ')', 'withFlattenMode', '(', ')', '.', 'withKeyTransformer', '(', 'new', 'KeyTransformer', '(', ')', '{', 'String', 'transform', '(', 'String', 'key', ')', '{', 'return', 'key', '.', 'replace', '(', ""'.'"", ',', ""'_'"", ')', ';', '}', '}', ')', ';', 'assertEquals', '(', '""abcdef""', ',', 'jf', '.', 'flatten', ')', ';', '}']",72,56,6,344,211,28,42.08860759493671,24.242424242424242,,,,-1,-1,-1,-1,False
L267_cleanup_1.txt,code2vec,METHOD_NAME,token_wrong,0.454,0.6134,2.3816,3.325,"{'n_total': 179, 'n_valid': 21, 'n_correct': 15}",62.680762,@Override public void cleanup() { if (windowManager != null) { windowManager.shutdown(); } bolt.cleanup(); },@Override void cleanup(){if(null){}cleanup();},"['@', 'Override', 'public', 'void', 'cleanup', '(', ')', '{', 'if', '(', 'windowManager', '!=', 'null', ')', '{', 'windowManager', '.', 'shutdown', '(', ')', ';', '}', 'bolt', '.', 'cleanup', '(', ')', ';', '}']","['@', 'Override', 'void', 'cleanup', '(', ')', '{', 'if', '(', 'null', ')', '{', '}', 'cleanup', '(', ')', ';', '}']",29,18,6,108,46,13,65.26315789473685,47.82608695652174,,,,-1,-1,-1,-1,False
L268_printable_1.txt,code2vec,METHOD_NAME,token_wrong,0.4017,0.8532,7.4763,9.9799,"{'n_total': 139, 'n_valid': 12, 'n_correct': 12}",35.881076,"protected static final String printable(char ch) { StringBuffer retval = new StringBuffer(); addPrintable(retval, ch); return retval.toString(); }",String printable(char ch){(retval);toString();},"['protected', 'static', 'final', 'String', 'printable', '(', 'char', 'ch', ')', '{', 'StringBuffer', 'retval', '=', 'new', 'StringBuffer', '(', ')', ';', 'addPrintable', '(', 'retval', ',', 'ch', ')', ';', 'return', 'retval', '.', 'toString', '(', ')', ';', '}']","['String', 'printable', '(', 'char', 'ch', ')', '{', '(', 'retval', ')', ';', 'toString', '(', ')', ';', '}']",33,16,6,146,47,15,75.57251908396947,62.96296296296296,,,,-1,-1,-1,-1,False
L269_onChildNodeRemoved_1.txt,code2vec,METHOD_NAME,token_wrong,0.3482,0.2615,16.126,15.4121,"{'n_total': 255, 'n_valid': 48, 'n_correct': 19}",139.215797,"public void onChildNodeRemoved(int parentNodeId, int nodeId) { ChildNodeRemovedEvent removedEvent = acquireChildNodeRemovedEvent(); removedEvent.parentNodeId = parentNodeId; removedEvent.nodeId = nodeId; mPeerManager.sendNotificationToPeers(""DOM.childNodeRemoved"", removedEvent); releaseChildNodeRemovedEvent(removedEvent); }","void onChildNodeRemoved(int parentNodeId,int nodeId){ChildNodeRemovedEvent removedEvent=removedEvent;sendNotificationToPeers(""DOMchildNodeRemoved"",removedEvent);}","['public', 'void', 'onChildNodeRemoved', '(', 'int', 'parentNodeId', ',', 'int', 'nodeId', ')', '{', 'ChildNodeRemovedEvent', 'removedEvent', '=', 'acquireChildNodeRemovedEvent', '(', ')', ';', 'removedEvent', '.', 'parentNodeId', '=', 'parentNodeId', ';', 'removedEvent', '.', 'nodeId', '=', 'nodeId', ';', 'mPeerManager', '.', 'sendNotificationToPeers', '(', '""DOM.childNodeRemoved""', ',', 'removedEvent', ')', ';', 'releaseChildNodeRemovedEvent', '(', 'removedEvent', ')', ';', '}']","['void', 'onChildNodeRemoved', '(', 'int', 'parentNodeId', ',', 'int', 'nodeId', ')', '{', 'ChildNodeRemovedEvent', 'removedEvent', '=', 'removedEvent', ';', 'sendNotificationToPeers', '(', '""DOMchildNodeRemoved""', ',', 'removedEvent', ')', ';', '}']",45,23,6,325,162,24,54.15282392026578,56.41025641025641,,,,-1,-1,-1,-1,False
L270_complete_1.txt,code2vec,METHOD_NAME,token_wrong,0.5769,0.6981,7.6135,12.0107,"{'n_total': 229, 'n_valid': 23, 'n_correct': 22}",67.403156,"public void complete(Leave leave, Boolean saveEntity, String taskId, Map<String, Object> variables) { if (saveEntity) { leaveManager.save(leave); } taskService.complete(taskId, variables); }","void complete(Leave saveEntity,Map<Object>variables){if(saveEntity){save();}complete();}","['public', 'void', 'complete', '(', 'Leave', 'leave', ',', 'Boolean', 'saveEntity', ',', 'String', 'taskId', ',', 'Map', '<', 'String', ',', 'Object', '>', 'variables', ')', '{', 'if', '(', 'saveEntity', ')', '{', 'leaveManager', '.', 'save', '(', 'leave', ')', ';', '}', 'taskService', '.', 'complete', '(', 'taskId', ',', 'variables', ')', ';', '}']","['void', 'complete', '(', 'Leave', 'saveEntity', ',', 'Map', '<', 'Object', '>', 'variables', ')', '{', 'if', '(', 'saveEntity', ')', '{', 'save', '(', ')', ';', '}', 'complete', '(', ')', ';', '}']",45,28,6,190,88,14,57.95454545454546,43.58974358974359,,,,-1,-1,-1,-1,False
L271_getTextAnnotation_1.txt,code2vec,METHOD_NAME,token_wrong,0.1419,0.2214,15.5801,19.945,"{'n_total': 234, 'n_valid': 22, 'n_correct': 21}",63.85124,"public TextAnnotation getTextAnnotation(String corpusId, String textId, String text) throws ServiceUnavailableException, AnnotationFailedException, TException, SocketException { Record record = getRecord(text); final Labeling tokensLabeling = record.getLabelViews().get(ViewNames.TOKENS); final Labeling sentenceLabeling = record.getLabelViews().get(ViewNames.SENTENCE); return CuratorDataStructureInterface.getTextAnnotationFromRecord(corpusId, textId, record, tokensLabeling, sentenceLabeling); }","TextAnnotation getTextAnnotation(String corpusId,String textId,String text)throws ServiceUnavailableException,TException{(corpusId);}","['public', 'TextAnnotation', 'getTextAnnotation', '(', 'String', 'corpusId', ',', 'String', 'textId', ',', 'String', 'text', ')', 'throws', 'ServiceUnavailableException', ',', 'AnnotationFailedException', ',', 'TException', ',', 'SocketException', '{', 'Record', 'record', '=', 'getRecord', '(', 'text', ')', ';', 'final', 'Labeling', 'tokensLabeling', '=', 'record', '.', 'getLabelViews', '(', ')', '.', 'get', '(', 'ViewNames', '.', 'TOKENS', ')', ';', 'final', 'Labeling', 'sentenceLabeling', '=', 'record', '.', 'getLabelViews', '(', ')', '.', 'get', '(', 'ViewNames', '.', 'SENTENCE', ')', ';', 'return', 'CuratorDataStructureInterface', '.', 'getTextAnnotationFromRecord', '(', 'corpusId', ',', 'textId', ',', 'record', ',', 'tokensLabeling', ',', 'sentenceLabeling', ')', ';', '}']","['TextAnnotation', 'getTextAnnotation', '(', 'String', 'corpusId', ',', 'String', 'textId', ',', 'String', 'text', ')', 'throws', 'ServiceUnavailableException', ',', 'TException', '{', '(', 'corpusId', ')', ';', '}']",81,22,6,498,133,23,76.84210526315789,78.66666666666666,,,,-1,-1,-1,-1,False
L272_init_5.txt,code2vec,METHOD_NAME,token_wrong,0.3266,0.8332,5.0409,8.5433,"{'n_total': 231, 'n_valid': 26, 'n_correct': 17}",76.524687,"@Override public void init() throws Exception { LindenSchema schema = new LindenSchema().setId(""id""); schema.addToFields(new LindenFieldSchema().setName(""intValue"").setType(LindenType.INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }","void init()throws Exception{(LindenFieldSchema().setName("""".INTEGER));lindenConfig.setSchema();}","['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'Exception', '{', 'LindenSchema', 'schema', '=', 'new', 'LindenSchema', '(', ')', '.', 'setId', '(', '""id""', ')', ';', 'schema', '.', 'addToFields', '(', 'new', 'LindenFieldSchema', '(', ')', '.', 'setName', '(', '""intValue""', ')', '.', 'setType', '(', 'LindenType', '.', 'INTEGER', ')', '.', 'setDocValues', '(', 'true', ')', ')', ';', 'lindenConfig', '.', 'setSchema', '(', 'schema', ')', ';', '}']","['void', 'init', '(', ')', 'throws', 'Exception', '{', '(', 'LindenFieldSchema', '(', ')', '.', 'setName', '(', '""""', '.', 'INTEGER', ')', ')', ';', 'lindenConfig', '.', 'setSchema', '(', ')', ';', '}']",58,27,6,247,96,10,63.71308016877637,59.61538461538461,,,,-1,-1,-1,-1,False
L273_desc_1.txt,code2vec,METHOD_NAME,token_wrong,0.3253,0.3373,11.3276,16.0482,"{'n_total': 134, 'n_valid': 16, 'n_correct': 13}",47.292016,final public void desc(Archive arc) throws ParseException { String s; jj_consume_token(DESC); s = string(); arc.setDesc(s); },void desc(Archive arc)throws ParseException{arc();},"['final', 'public', 'void', 'desc', '(', 'Archive', 'arc', ')', 'throws', 'ParseException', '{', 'String', 's', ';', 'jj_consume_token', '(', 'DESC', ')', ';', 's', '=', 'string', '(', ')', ';', 'arc', '.', 'setDesc', '(', 's', ')', ';', '}']","['void', 'desc', '(', 'Archive', 'arc', ')', 'throws', 'ParseException', '{', 'arc', '(', ')', ';', '}']",33,14,6,125,51,10,64.34782608695652,70.37037037037037,,,,-1,-1,-1,-1,False
L274_beforeGetParameter_1.txt,code2vec,METHOD_NAME,token_wrong,0.2039,0.2039,17.315,17.315,"{'n_total': 156, 'n_valid': 19, 'n_correct': 13}",56.381148,private void beforeGetParameter() throws IOException { if (!parametersAreComplete) { completeParameters(); parametersAreComplete = true; } },void beforeGetParameter()throws IOException{if(!parametersAreComplete){completeParameters();parametersAreComplete=true;}},"['private', 'void', 'beforeGetParameter', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'parametersAreComplete', ')', '{', 'completeParameters', '(', ')', ';', 'parametersAreComplete', '=', 'true', ';', '}', '}']","['void', 'beforeGetParameter', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'parametersAreComplete', ')', '{', 'completeParameters', '(', ')', ';', 'parametersAreComplete', '=', 'true', ';', '}', '}']",24,23,6,140,121,24,16.379310344827587,5.555555555555555,,,,-1,-1,-1,-1,False
L275_classFileSignature_1.txt,code2vec,METHOD_NAME,token_wrong,0.2339,0.2177,14.3853,14.5682,"{'n_total': 457, 'n_valid': 49, 'n_correct': 28}",138.919174,"@Test public void classFileSignature() { PubApi sig = test.classSignature(""com.example.Signatures"").get(); assertThat(sig.types.get(""com.example.Signatures"").pubApi.methods.keySet(), hasItems(""void voidMethod()"", ""java.lang.String stringMethod()"")); assertThat(sig.types.get(""com.example.Signatures"").pubApi.methods.keySet(), not(hasItems(""void privateMethod()""))); assertThat(sig.types.get(""com.example.Signatures"").pubApi.types.keySet(), hasItems(""com.example.Signatures$RegularInnerClass"", ""com.example.Signatures$StaticInnerClass"")); }","@Test void classFileSignature(){PubApi.classSignature("""").get();assertThat(sigget("")"",""""));assertThat(("""").keySet(),(""""));}","['@', 'Test', 'public', 'void', 'classFileSignature', '(', ')', '{', 'PubApi', 'sig', '=', 'test', '.', 'classSignature', '(', '""com.example.Signatures""', ')', '.', 'get', '(', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'methods', '.', 'keySet', '(', ')', ',', 'hasItems', '(', '""void voidMethod()""', ',', '""java.lang.String stringMethod()""', ')', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'methods', '.', 'keySet', '(', ')', ',', 'not', '(', 'hasItems', '(', '""void privateMethod()""', ')', ')', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'types', '.', 'keySet', '(', ')', ',', 'hasItems', '(', '""com.example.Signatures$RegularInnerClass""', ',', '""com.example.Signatures$StaticInnerClass""', ')', ')', ';', '}']","['@', 'Test', 'void', 'classFileSignature', '(', ')', '{', 'PubApi', '.', 'classSignature', '(', '""""', ')', '.', 'get', '(', ')', ';', 'assertThat', '(', 'sigget', '(', '"")""', ',', '""""', ')', ')', ';', 'assertThat', '(', '(', '""""', ')', '.', 'keySet', '(', ')', ',', '(', '""""', ')', ')', ';', '}']",105,44,6,539,123,24,80.7766990291262,61.61616161616161,,,,-1,-1,-1,-1,False
L276_countFactors_1.txt,code2vec,METHOD_NAME,token_wrong,0.2272,0.3631,17.4565,15.7416,"{'n_total': 200, 'n_valid': 26, 'n_correct': 19}",76.525243,"private static int countFactors(int n, int p) { if (n == 0) return 0; else return n / p + countFactors(n / p, p); }","int countFactors(int p){if(0)return n+countFactors(n/p,p);}","['private', 'static', 'int', 'countFactors', '(', 'int', 'n', ',', 'int', 'p', ')', '{', 'if', '(', 'n', '==', '0', ')', 'return', '0', ';', 'else', 'return', 'n', '/', 'p', '+', 'countFactors', '(', 'n', '/', 'p', ',', 'p', ')', ';', '}']","['int', 'countFactors', '(', 'int', 'p', ')', '{', 'if', '(', '0', ')', 'return', 'n', '+', 'countFactors', '(', 'n', '/', 'p', ',', 'p', ')', ';', '}']",37,24,6,115,59,18,57.73195876288659,41.935483870967744,,,,-1,-1,-1,-1,False
L277_addLoggingHandler_1.txt,code2vec,METHOD_NAME,token_wrong,0.3669,0.5875,18.7741,19.3675,"{'n_total': 269, 'n_valid': 36, 'n_correct': 28}",98.978354,"public void addLoggingHandler(ChannelHandlerContext ctx) { if (ctx.pipeline().get(LoggingHandler.class) != null) { ctx.pipeline().remove(LoggingHandler.class); } if (ctx.pipeline().get(SslHandler.class) != null) { ctx.pipeline().addAfter(""SslHandler#0"", ""LoggingHandler#0"", this); } else { ctx.pipeline().addFirst(this); } }","void addLoggingHandler(ChannelHandlerContext ctx){if(null){ctx.addAfter("""",""LoggingHandler"",this);}{}}","['public', 'void', 'addLoggingHandler', '(', 'ChannelHandlerContext', 'ctx', ')', '{', 'if', '(', 'ctx', '.', 'pipeline', '(', ')', '.', 'get', '(', 'LoggingHandler', '.', 'class', ')', '!=', 'null', ')', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'remove', '(', 'LoggingHandler', '.', 'class', ')', ';', '}', 'if', '(', 'ctx', '.', 'pipeline', '(', ')', '.', 'get', '(', 'SslHandler', '.', 'class', ')', '!=', 'null', ')', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'addAfter', '(', '""SslHandler#0""', ',', '""LoggingHandler#0""', ',', 'this', ')', ';', '}', 'else', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'addFirst', '(', 'this', ')', ';', '}', '}']","['void', 'addLoggingHandler', '(', 'ChannelHandlerContext', 'ctx', ')', '{', 'if', '(', 'null', ')', '{', 'ctx', '.', 'addAfter', '(', '""""', ',', '""LoggingHandler""', ',', 'this', ')', ';', '}', '{', '}', '}']",89,27,6,324,102,23,73.75415282392026,74.69879518072288,,,,-1,-1,-1,-1,False
L278_trainOnAll_1.txt,code2vec,METHOD_NAME,token_wrong,0.3253,0.3207,16.9288,18.4967,"{'n_total': 510, 'n_valid': 100, 'n_correct': 54}",277.072442,"public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + "".lc"", modelName + "".lex""); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + ""/allData.txt"", ""train""); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }","void trainOnAll(){("""");trainReader("""","""");trainer();trainer();}","['public', 'void', 'trainOnAll', '(', ')', '{', 'QuantitiesClassifier', 'classifier', '=', 'new', 'QuantitiesClassifier', '(', 'modelName', '+', '"".lc""', ',', 'modelName', '+', '"".lex""', ')', ';', 'QuantitiesDataReader', 'trainReader', '=', 'new', 'QuantitiesDataReader', '(', 'dataDir', '+', '""/allData.txt""', ',', '""train""', ')', ';', 'BatchTrainer', 'trainer', '=', 'new', 'BatchTrainer', '(', 'classifier', ',', 'trainReader', ')', ';', 'trainer', '.', 'train', '(', '45', ')', ';', 'classifier', '.', 'save', '(', ')', ';', '}']","['void', 'trainOnAll', '(', ')', '{', '(', '""""', ')', ';', 'trainReader', '(', '""""', ',', '""""', ')', ';', 'trainer', '(', ')', ';', 'trainer', '(', ')', ';', '}']",59,25,6,327,63,16,84.88745980707395,64.15094339622641,,,,-1,-1,-1,-1,False
L279_validateInputSizeMax_1.txt,code2vec,METHOD_NAME,token_wrong,0.2881,0.5421,16.9927,16.2021,"{'n_total': 452, 'n_valid': 50, 'n_correct': 41}",151.957511,"public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + "" : "" + field); } }","void validateInputSizeMax(String field,String message,int size)throws CheckException{if(trim()>size){messageTranslated(message,Locale);(field);}}","['public', 'static', 'void', 'validateInputSizeMax', '(', 'String', 'field', ',', 'String', 'message', ',', 'int', 'size', ')', 'throws', 'CheckException', '{', 'if', '(', 'field', '==', 'null', '||', 'field', '.', 'trim', '(', ')', '.', 'length', '(', ')', '==', '0', '||', 'field', '.', 'length', '(', ')', '>', 'size', ')', '{', 'String', 'messageTranslated', '=', 'messageSource', '.', 'getMessage', '(', 'message', ',', 'null', ',', 'Locale', '.', 'ENGLISH', ')', ';', 'throw', 'new', 'CheckException', '(', 'messageTranslated', '+', '"" : ""', '+', 'field', ')', ';', '}', '}']","['void', 'validateInputSizeMax', '(', 'String', 'field', ',', 'String', 'message', ',', 'int', 'size', ')', 'throws', 'CheckException', '{', 'if', '(', 'trim', '(', ')', '>', 'size', ')', '{', 'messageTranslated', '(', 'message', ',', 'Locale', ')', ';', '(', 'field', ')', ';', '}', '}']",73,37,6,328,145,26,60.59602649006622,53.73134328358209,,,,-1,-1,-1,-1,False
L280_blockForHandshake_1.txt,code2vec,METHOD_NAME,token_wrong,0.9697,0.7167,15.4773,17.9977,"{'n_total': 310, 'n_valid': 34, 'n_correct': 27}",101.734483,protected void blockForHandshake() throws IOException { if (blocking) { while (this.connection_state != CS_END) { if (this.closed) { throw new TlsFatalAlert(AlertDescription.internal_error); } safeReadRecord(); } } },void blockForHandshake(){if(blocking){while(this!=CSEND){if(closed){TlsFatalAlert();}}}},"['protected', 'void', 'blockForHandshake', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'blocking', ')', '{', 'while', '(', 'this', '.', 'connection_state', '!=', 'CS_END', ')', '{', 'if', '(', 'this', '.', 'closed', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'safeReadRecord', '(', ')', ';', '}', '}', '}']","['void', 'blockForHandshake', '(', ')', '{', 'if', '(', 'blocking', ')', '{', 'while', '(', 'this', '!=', 'CSEND', ')', '{', 'if', '(', 'closed', ')', '{', 'TlsFatalAlert', '(', ')', ';', '}', '}', '}', '}']",46,30,6,216,88,23,66.32124352331607,40.0,,,,-1,-1,-1,-1,False
L281_getQuestionMarks_1.txt,code2vec,METHOD_NAME,token_wrong,0.8713,0.2978,19.3122,20.4564,"{'n_total': 428, 'n_valid': 55, 'n_correct': 32}",159.324521,"public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (int i = 0; i < count; i++) { if (i > 0) { sb.append(','); } sb.append('?'); } return sb.toString(); }","String getQuestionMarks(int count){StringBuilder sb=new StringBuilder(count);for(;i<count;){if(i){(',');}}toString();}","['public', 'static', 'String', 'getQuestionMarks', '(', 'int', 'count', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 'count', '*', '2', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'if', '(', 'i', '>', '0', ')', '{', 'sb', '.', 'append', '(', ""','"", ')', ';', '}', 'sb', '.', 'append', '(', ""'?'"", ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']","['String', 'getQuestionMarks', '(', 'int', 'count', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 'count', ')', ';', 'for', '(', ';', 'i', '<', 'count', ';', ')', '{', 'if', '(', 'i', ')', '{', '(', ""','"", ')', ';', '}', '}', 'toString', '(', ')', ';', '}']",66,41,6,206,118,22,47.82608695652174,41.66666666666667,,,,-1,-1,-1,-1,False
L282_shouldAllowRequest_1.txt,code2vec,METHOD_NAME,token_wrong,0.2646,0.3652,15.5758,17.7266,"{'n_total': 262, 'n_valid': 38, 'n_correct': 24}",108.748987,@Override public Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { return true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; },Boolean shouldAllowRequest(String url){if(Boolean()){return true;}if(allowedRequests.isUrlWhiteListed()){}},"['@', 'Override', 'public', 'Boolean', 'shouldAllowRequest', '(', 'String', 'url', ')', '{', 'if', '(', 'Boolean', '.', 'TRUE', '==', 'shouldAllowNavigation', '(', 'url', ')', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'allowedRequests', '.', 'isUrlWhiteListed', '(', 'url', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'null', ';', '}']","['Boolean', 'shouldAllowRequest', '(', 'String', 'url', ')', '{', 'if', '(', 'Boolean', '(', ')', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'allowedRequests', '.', 'isUrlWhiteListed', '(', ')', ')', '{', '}', '}']",44,29,6,197,107,24,52.02312138728323,39.473684210526315,,,,-1,-1,-1,-1,False
L283_getContext_1.txt,code2vec,METHOD_NAME,token_wrong,0.1827,0.2331,12.1147,11.3347,"{'n_total': 499, 'n_valid': 77, 'n_correct': 35}",226.049803,"@SuppressWarnings({ ""rawtypes"", ""unchecked"" }) private TopologyContext getContext(final Fields fields) { TopologyBuilder builder = new TopologyBuilder(); return new TopologyContextImpl(new Config(), builder.createTopology().setConfig(new Config()).setName(""test"").setState(TopologyAPI.TopologyState.RUNNING).getTopology(), new HashMap(), 1, null) { @Override public Fields getComponentOutputFields(String componentId, String streamId) { return fields; } }; }","TopologyContext getContext(Fields fields){TopologyBuilder builder=TopologyBuilder();return new TopologyContextImpl((Config()).setName(""""),1,null){Fields getComponentOutputFields(){}};}","['@', 'SuppressWarnings', '(', '{', '""rawtypes""', ',', '""unchecked""', '}', ')', 'private', 'TopologyContext', 'getContext', '(', 'final', 'Fields', 'fields', ')', '{', 'TopologyBuilder', 'builder', '=', 'new', 'TopologyBuilder', '(', ')', ';', 'return', 'new', 'TopologyContextImpl', '(', 'new', 'Config', '(', ')', ',', 'builder', '.', 'createTopology', '(', ')', '.', 'setConfig', '(', 'new', 'Config', '(', ')', ')', '.', 'setName', '(', '""test""', ')', '.', 'setState', '(', 'TopologyAPI', '.', 'TopologyState', '.', 'RUNNING', ')', '.', 'getTopology', '(', ')', ',', 'new', 'HashMap', '(', ')', ',', '1', ',', 'null', ')', '{', '@', 'Override', 'public', 'Fields', 'getComponentOutputFields', '(', 'String', 'componentId', ',', 'String', 'streamId', ')', '{', 'return', 'fields', ';', '}', '}', ';', '}']","['TopologyContext', 'getContext', '(', 'Fields', 'fields', ')', '{', 'TopologyBuilder', 'builder', '=', 'TopologyBuilder', '(', ')', ';', 'return', 'new', 'TopologyContextImpl', '(', '(', 'Config', '(', ')', ')', '.', 'setName', '(', '""""', ')', ',', '1', ',', 'null', ')', '{', 'Fields', 'getComponentOutputFields', '(', ')', '{', '}', '}', ';', '}']",97,43,6,458,184,16,61.990950226244344,59.34065934065934,,,,-1,-1,-1,-1,False
L284_shouldGetAllCountries_1.txt,code2vec,METHOD_NAME,token_wrong,0.3963,0.4313,16.7264,16.6446,"{'n_total': 276, 'n_valid': 47, 'n_correct': 21}",133.33167,"@Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession.selectList(""selectAll""); assertEquals(183, list.size()); } finally { sqlSession.close(); } }","void shouldGetAllCountries(){SqlSession sqlSession=MybatisHelper.getSqlSession();try{sqlSession(183,size());}finally{}}","['@', 'Test', 'public', 'void', 'shouldGetAllCountries', '(', ')', '{', 'SqlSession', 'sqlSession', '=', 'MybatisHelper', '.', 'getSqlSession', '(', ')', ';', 'try', '{', 'List', '<', 'Country', '>', 'list', '=', 'sqlSession', '.', 'selectList', '(', '""selectAll""', ')', ';', 'assertEquals', '(', '183', ',', 'list', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'sqlSession', '.', 'close', '(', ')', ';', '}', '}']","['void', 'shouldGetAllCountries', '(', ')', '{', 'SqlSession', 'sqlSession', '=', 'MybatisHelper', '.', 'getSqlSession', '(', ')', ';', 'try', '{', 'sqlSession', '(', '183', ',', 'size', '(', ')', ')', ';', '}', 'finally', '{', '}', '}']",54,30,6,229,119,27,54.45544554455446,50.0,,,,-1,-1,-1,-1,False
L285_getHtmlFileIntent_1.txt,code2vec,METHOD_NAME,token_wrong,0.2885,0.3838,17.85,18.423,"{'n_total': 452, 'n_valid': 75, 'n_correct': 34}",211.839583,"public static Intent getHtmlFileIntent(String param) { Uri uri = Uri.parse(param).buildUpon().encodedAuthority(""com.android.htmlfileprovider"").scheme(""content"").encodedPath(param).build(); Intent intent = new Intent(""android.intent.action.VIEW""); intent.setDataAndType(uri, ""text/html""); return intent; }","Intent getHtmlFileIntent(String param){uri().buildUpon().encodedAuthority("""").scheme().build();Intent intent=Intent(""androidintentactionVIEW"");intent(uri,"""");}","['public', 'static', 'Intent', 'getHtmlFileIntent', '(', 'String', 'param', ')', '{', 'Uri', 'uri', '=', 'Uri', '.', 'parse', '(', 'param', ')', '.', 'buildUpon', '(', ')', '.', 'encodedAuthority', '(', '""com.android.htmlfileprovider""', ')', '.', 'scheme', '(', '""content""', ')', '.', 'encodedPath', '(', 'param', ')', '.', 'build', '(', ')', ';', 'Intent', 'intent', '=', 'new', 'Intent', '(', '""android.intent.action.VIEW""', ')', ';', 'intent', '.', 'setDataAndType', '(', 'uri', ',', '""text/html""', ')', ';', 'return', 'intent', ';', '}']","['Intent', 'getHtmlFileIntent', '(', 'String', 'param', ')', '{', 'uri', '(', ')', '.', 'buildUpon', '(', ')', '.', 'encodedAuthority', '(', '""""', ')', '.', 'scheme', '(', ')', '.', 'build', '(', ')', ';', 'Intent', 'intent', '=', 'Intent', '(', '""androidintentactionVIEW""', ')', ';', 'intent', '(', 'uri', ',', '""""', ')', ';', '}']",64,44,6,304,159,23,51.60142348754449,34.48275862068966,,,,-1,-1,-1,-1,False
L286_testVirtualColumn_1.txt,code2vec,METHOD_NAME,token_wrong,0.3456,0.2111,14.4765,14.4529,"{'n_total': 569, 'n_valid': 131, 'n_correct': 66}",376.548876,"@Test public void testVirtualColumn() throws Exception { final String expected = ""str\tboo\tcol0\tf\td\tcol1\n"" + ""BZ\ttrue\t1.673692762852\t0.6235\t1.050231933594\tfalse\n"" + ""XX\tfalse\t567.512389898300\t0.7780\t566.734375000000\tfalse\n"" + ""KK\tfalse\t0.550908231392\t0.5509\t0.000013792171\tfalse\n"" + ""AX\tfalse\t0.020375759351\t0.0204\t0.000000567185\tfalse\n"" + ""AX\ttrue\t-511.515212714672\t0.4848\t-512.000000000000\tfalse\n"" + ""AX\ttrue\t0.972335502505\t0.2969\t0.675451681018\ttrue\n"" + ""BZ\tfalse\t0.904826603830\t0.5725\t0.332301996648\ttrue\n"" + ""BZ\ttrue\t0.596724832495\t0.5967\t0.000001752813\tfalse\n"" + ""AX\tfalse\t0.161007094177\t0.1609\t0.000076281818\ttrue\n"" + ""BZ\tfalse\t0.350913291764\t0.3509\t0.000000005555\ttrue\n"" + ""XX\tfalse\t0.727417677178\t0.7274\t0.000002473130\tfalse\n"" + ""KK\tfalse\t633.483788669109\t0.5619\t632.921875000000\tfalse\n"" + ""AX\tfalse\t0.543259224330\t0.5433\t0.000000020896\tfalse\n"" + ""BZ\tfalse\t0.551534552826\t0.5442\t0.007371325744\tfalse\n"" + ""XX\ttrue\t0.674562766890\t0.6746\t0.000000014643\tfalse\n"" + ""AX\ttrue\t512.821699082851\t0.8217\t512.000000000000\tfalse\n"" + ""XX\ttrue\t864.359103977680\t0.3591\t864.000000000000\ttrue\n"" + ""AX\ttrue\t0.682714500508\t0.6827\t0.000000157437\ttrue\n"" + ""BZ\tfalse\t-841.883159995079\t0.1168\t-842.000000000000\tfalse\n"" + ""BZ\tfalse\t0.496688359286\t0.4967\t0.000032060649\tfalse\n""; assertThat(expected, ""select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc"", true); assertThat(expected, ""select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'"", true); }","@Test void testVirtualColumn()throws Exception{String expected=""""+""tfalse""+""AXn""+""tfalse""+""BZn"";assertThat(expected,""strabc"",true);}","['@', 'Test', 'public', 'void', 'testVirtualColumn', '(', ')', 'throws', 'Exception', '{', 'final', 'String', 'expected', '=', '""str\\tboo\\tcol0\\tf\\td\\tcol1\\n""', '+', '""BZ\\ttrue\\t1.673692762852\\t0.6235\\t1.050231933594\\tfalse\\n""', '+', '""XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n""', '+', '""KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n""', '+', '""AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n""', '+', '""AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n""', '+', '""AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n""', '+', '""BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n""', '+', '""BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n""', '+', '""AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n""', '+', '""BZ\\tfalse\\t0.350913291764\\t0.3509\\t0.000000005555\\ttrue\\n""', '+', '""XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n""', '+', '""KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n""', '+', '""AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n""', '+', '""BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n""', '+', '""XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n""', '+', '""AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n""', '+', '""XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n""', '+', '""AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n""', '+', '""BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n""', '+', '""BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n""', ';', 'assertThat', '(', 'expected', ',', '""select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc""', ',', 'true', ')', ';', 'assertThat', '(', 'expected', ',', '""select str, boo, f+d, f, d , prev(boo) over (partition by str) from \'*!*abc\'""', ',', 'true', ')', ';', '}']","['@', 'Test', 'void', 'testVirtualColumn', '(', ')', 'throws', 'Exception', '{', 'String', 'expected', '=', '""""', '+', '""tfalse""', '+', '""AXn""', '+', '""tfalse""', '+', '""BZn""', ';', 'assertThat', '(', 'expected', ',', '""strabc""', ',', 'true', ')', ';', '}']",75,32,6,1599,132,23,93.08375634517766,62.31884057971014,,,,-1,-1,-1,-1,False
L287_beginDisplay_1.txt,code2vec,METHOD_NAME,token_wrong,0.9036,0.9245,18.5488,21.2953,"{'n_total': 571, 'n_valid': 45, 'n_correct': 43}",146.519158,public void beginDisplay(DisplayEvent event) throws ModelControlException { super.beginDisplay(event); if (populateValues) { int index = Integer.parseInt((String) getPageSessionAttribute(PGATTR_INDEX)); Map mapAttrs = (Map) getPageSessionAttribute(WSPersonalProfileServiceViewBean.PROPERTY_ATTRIBUTE); OrderedSet set = (OrderedSet) mapAttrs.get(WSPersonalProfileServiceModelImpl.ATTRIBUTE_NAME_SUPPPORTED_CONTAINERS); setValues((String) set.get(index)); } },void beginDisplay(DisplayEvent event)throws ModelControlException{beginDisplay();if(populateValues){((String)(PGATTR));(ATTRIBUTE);set=(OrderedSet)(CONTAINERS)((index));}},"['public', 'void', 'beginDisplay', '(', 'DisplayEvent', 'event', ')', 'throws', 'ModelControlException', '{', 'super', '.', 'beginDisplay', '(', 'event', ')', ';', 'if', '(', 'populateValues', ')', '{', 'int', 'index', '=', 'Integer', '.', 'parseInt', '(', '(', 'String', ')', 'getPageSessionAttribute', '(', 'PGATTR_INDEX', ')', ')', ';', 'Map', 'mapAttrs', '=', '(', 'Map', ')', 'getPageSessionAttribute', '(', 'WSPersonalProfileServiceViewBean', '.', 'PROPERTY_ATTRIBUTE', ')', ';', 'OrderedSet', 'set', '=', '(', 'OrderedSet', ')', 'mapAttrs', '.', 'get', '(', 'WSPersonalProfileServiceModelImpl', '.', 'ATTRIBUTE_NAME_SUPPPORTED_CONTAINERS', ')', ';', 'setValues', '(', '(', 'String', ')', 'set', '.', 'get', '(', 'index', ')', ')', ';', '}', '}']","['void', 'beginDisplay', '(', 'DisplayEvent', 'event', ')', 'throws', 'ModelControlException', '{', 'beginDisplay', '(', ')', ';', 'if', '(', 'populateValues', ')', '{', '(', '(', 'String', ')', '(', 'PGATTR', ')', ')', ';', '(', 'ATTRIBUTE', ')', ';', 'set', '=', '(', 'OrderedSet', ')', '(', 'CONTAINERS', ')', '(', '(', 'index', ')', ')', ';', '}', '}']",81,47,6,457,171,18,65.14806378132118,45.33333333333333,,,,-1,-1,-1,-1,False
L288_next_1.txt,code2vec,METHOD_NAME,token_wrong,0.4941,0.2348,5.0392,5.6147,"{'n_total': 166, 'n_valid': 22, 'n_correct': 12}",62.207627,@Override public Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe().getLong(readAddress - 8); return record; },Record next(){record.of(readAddress);readAddress.getUnsafe().getLong(readAddress);},"['@', 'Override', 'public', 'Record', 'next', '(', ')', '{', 'record', '.', 'of', '(', 'readAddress', ')', ';', 'readAddress', '=', 'Unsafe', '.', 'getUnsafe', '(', ')', '.', 'getLong', '(', 'readAddress', '-', '8', ')', ';', 'return', 'record', ';', '}']","['Record', 'next', '(', ')', '{', 'record', '.', 'of', '(', 'readAddress', ')', ';', 'readAddress', '.', 'getUnsafe', '(', ')', '.', 'getLong', '(', 'readAddress', ')', ';', '}']",34,24,6,132,83,10,40.16393442622951,35.714285714285715,,,,-1,-1,-1,-1,False
L289_setRevisionNumber_1.txt,code2vec,METHOD_NAME,token_wrong,0.6591,0.3257,10.0585,6.1287,"{'n_total': 275, 'n_valid': 34, 'n_correct': 20}",96.113675,"void setRevisionNumber(int revisionNumber) throws SMSException, SSOException { this.revisionNumber = revisionNumber; Node schemaNode = XMLUtils.getRootNode(getDocument(), SMSUtils.SCHEMA); ((Element) schemaNode).setAttribute(SMSUtils.REVISION_NUMBER, Integer.toString(revisionNumber)); }",void setRevisionNumber(int revisionNumber){revisionNumber=revisionNumber=getRootNode(getDocument());((Element)).setAttribute(toString());},"['void', 'setRevisionNumber', '(', 'int', 'revisionNumber', ')', 'throws', 'SMSException', ',', 'SSOException', '{', 'this', '.', 'revisionNumber', '=', 'revisionNumber', ';', 'Node', 'schemaNode', '=', 'XMLUtils', '.', 'getRootNode', '(', 'getDocument', '(', ')', ',', 'SMSUtils', '.', 'SCHEMA', ')', ';', '(', '(', 'Element', ')', 'schemaNode', ')', '.', 'setAttribute', '(', 'SMSUtils', '.', 'REVISION_NUMBER', ',', 'Integer', '.', 'toString', '(', 'revisionNumber', ')', ')', ';', '}']","['void', 'setRevisionNumber', '(', 'int', 'revisionNumber', ')', '{', 'revisionNumber', '=', 'revisionNumber', '=', 'getRootNode', '(', 'getDocument', '(', ')', ')', ';', '(', '(', 'Element', ')', ')', '.', 'setAttribute', '(', 'toString', '(', ')', ')', ';', '}']",55,32,6,287,138,23,56.439393939393945,46.93877551020408,,,,-1,-1,-1,-1,False
L290_removeHighlight_1.txt,code2vec,METHOD_NAME,token_wrong,0.319,0.9826,8.407,23.6859,"{'n_total': 188, 'n_valid': 15, 'n_correct': 12}",49.16808,@Override void removeHighlight(View view) { for (ColorDrawable drawable : mHighlightDrawables) { view.getOverlay().remove(drawable); } },@Override void removeHighlight(View view){for(ColorDrawable drawable:mHighlightDrawables){(drawable);}},"['@', 'Override', 'void', 'removeHighlight', '(', 'View', 'view', ')', '{', 'for', '(', 'ColorDrawable', 'drawable', ':', 'mHighlightDrawables', ')', '{', 'view', '.', 'getOverlay', '(', ')', '.', 'remove', '(', 'drawable', ')', ';', '}', '}']","['@', 'Override', 'void', 'removeHighlight', '(', 'View', 'view', ')', '{', 'for', '(', 'ColorDrawable', 'drawable', ':', 'mHighlightDrawables', ')', '{', '(', 'drawable', ')', ';', '}', '}']",30,23,6,136,103,21,28.695652173913043,29.166666666666668,,,,-1,-1,-1,-1,False
L291_zeroExpectations_1.txt,code2vec,METHOD_NAME,token_wrong,0.273,0.1732,17.4743,14.6583,"{'n_total': 225, 'n_valid': 23, 'n_correct': 17}",66.221535,public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor : constraints.values()) { cursor.value.expectation = new double[map.getNumLabels()]; } },void zeroExpectations(){for(ObjectCursor<OneLabelGEConstraint>cursor:values()){cursor.expectation=new double[map()];}},"['public', 'void', 'zeroExpectations', '(', ')', '{', 'for', '(', 'ObjectCursor', '<', 'OneLabelGEConstraint', '>', 'cursor', ':', 'constraints', '.', 'values', '(', ')', ')', '{', 'cursor', '.', 'value', '.', 'expectation', '=', 'new', 'double', '[', 'map', '.', 'getNumLabels', '(', ')', ']', ';', '}', '}']","['void', 'zeroExpectations', '(', ')', '{', 'for', '(', 'ObjectCursor', '<', 'OneLabelGEConstraint', '>', 'cursor', ':', 'values', '(', ')', ')', '{', 'cursor', '.', 'expectation', '=', 'new', 'double', '[', 'map', '(', ')', ']', ';', '}', '}']",39,32,6,168,118,22,34.24657534246575,21.21212121212121,,,,-1,-1,-1,-1,False
L292_apply_1.txt,code2vec,METHOD_NAME,token_wrong,0.5223,0.4609,14.3595,15.3276,"{'n_total': 301, 'n_valid': 28, 'n_correct': 20}",81.801215,"@Override protected void apply(View view, final TypedArray typedArray) { view.setOnTouchListener(new OnTouchListener() { @Override public boolean onTouch(View v, MotionEvent event) { return onAction(typedArray.getString(R.styleable.OnTouchDecorator_decorOnTouch)); } }); }","void apply(View view,TypedArray typedArray){view.setOnTouchListener(new OnTouchListener(){boolean onTouch(View event){((decorOnTouch));}});}","['@', 'Override', 'protected', 'void', 'apply', '(', 'View', 'view', ',', 'final', 'TypedArray', 'typedArray', ')', '{', 'view', '.', 'setOnTouchListener', '(', 'new', 'OnTouchListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onTouch', '(', 'View', 'v', ',', 'MotionEvent', 'event', ')', '{', 'return', 'onAction', '(', 'typedArray', '.', 'getString', '(', 'R', '.', 'styleable', '.', 'OnTouchDecorator_decorOnTouch', ')', ')', ';', '}', '}', ')', ';', '}']","['void', 'apply', '(', 'View', 'view', ',', 'TypedArray', 'typedArray', ')', '{', 'view', '.', 'setOnTouchListener', '(', 'new', 'OnTouchListener', '(', ')', '{', 'boolean', 'onTouch', '(', 'View', 'event', ')', '{', '(', '(', 'decorOnTouch', ')', ')', ';', '}', '}', ')', ';', '}']",56,37,6,272,140,11,50.57471264367817,38.0,,,,-1,-1,-1,-1,False
L293_init_6.txt,code2vec,METHOD_NAME,token_wrong,0.4449,0.2752,5.8495,11.927,"{'n_total': 171, 'n_valid': 41, 'n_correct': 22}",112.268652,private void init(String string) { this.string = string; beginIndex = currentIndex = 0; currentLine = currentColumn = beginLine = beginColumn = endLine = endColumn = 1; },void init(){currentColumn=beginLine;},"['private', 'void', 'init', '(', 'String', 'string', ')', '{', 'this', '.', 'string', '=', 'string', ';', 'beginIndex', '=', 'currentIndex', '=', '0', ';', 'currentLine', '=', 'currentColumn', '=', 'beginLine', '=', 'beginColumn', '=', 'endLine', '=', 'endColumn', '=', '1', ';', '}']","['void', 'init', '(', ')', '{', 'currentColumn', '=', 'beginLine', ';', '}']",35,10,6,170,37,10,83.125,86.20689655172413,,,,-1,-1,-1,-1,False
L294_executeDoubleWordStore_1.txt,code2vec,METHOD_NAME,token_wrong,0.5166,0.4805,15.1989,17.3635,"{'n_total': 187, 'n_valid': 31, 'n_correct': 18}",87.455974,"private void executeDoubleWordStore(@Nonnegative int arg) { pop(1); int type1 = pop(); set(arg, type1); set(arg + 1, TOP); executeStore(arg); }","void executeDoubleWordStore(int arg){pop;set(+1,TOP);(arg);}","['private', 'void', 'executeDoubleWordStore', '(', '@', 'Nonnegative', 'int', 'arg', ')', '{', 'pop', '(', '1', ')', ';', 'int', 'type1', '=', 'pop', '(', ')', ';', 'set', '(', 'arg', ',', 'type1', ')', ';', 'set', '(', 'arg', '+', '1', ',', 'TOP', ')', ';', 'executeStore', '(', 'arg', ')', ';', '}']","['void', 'executeDoubleWordStore', '(', 'int', 'arg', ')', '{', 'pop', ';', 'set', '(', '+', '1', ',', 'TOP', ')', ';', '(', 'arg', ')', ';', '}']",44,22,6,143,60,28,72.17391304347827,57.89473684210527,,,,-1,-1,-1,-1,False
L295_returnsHeaders_1.txt,code2vec,METHOD_NAME,token_wrong,0.5755,0.4304,17.3561,18.5282,"{'n_total': 2077, 'n_valid': 221, 'n_correct': 79}",636.477071,"@Test public void returnsHeaders() { assertEquals(new Header(""name"", ""value""), new HttpResponse().withHeaders(new Header(""name"", ""value"")).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value""), new HttpResponse().withHeaders(Arrays.asList(new Header(""name"", ""value""))).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value""), new HttpRequest().withHeader(new Header(""name"", ""value"")).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value_one"", ""value_two""), new HttpRequest().withHeader(new Header(""name"", ""value_one"")).withHeader(new Header(""name"", ""value_two"")).getHeaderList().get(0)); }","void returnsHeaders(){assertEquals(Header("""",""""),(Header("""","""")).getHeaderList().get());assertEquals(Header("""",""""),(((""""))).get());assertEquals(Header("""",""""),(Header()).getHeaderList.get());assertEquals(Header("""",""""),(Header("""","""")).withHeader(Header("""","""")).getHeaderList().get());}","['@', 'Test', 'public', 'void', 'returnsHeaders', '(', ')', '{', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpResponse', '(', ')', '.', 'withHeaders', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpResponse', '(', ')', '.', 'withHeaders', '(', 'Arrays', '.', 'asList', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpRequest', '(', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value_one""', ',', '""value_two""', ')', ',', 'new', 'HttpRequest', '(', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value_one""', ')', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value_two""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', '}']","['void', 'returnsHeaders', '(', ')', '{', 'assertEquals', '(', 'Header', '(', '""""', ',', '""""', ')', ',', '(', 'Header', '(', '""""', ',', '""""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', ')', ')', ';', 'assertEquals', '(', 'Header', '(', '""""', ',', '""""', ')', ',', '(', '(', '(', '""""', ')', ')', ')', '.', 'get', '(', ')', ')', ';', 'assertEquals', '(', 'Header', '(', '""""', ',', '""""', ')', ',', '(', 'Header', '(', ')', ')', '.', 'getHeaderList', '.', 'get', '(', ')', ')', ';', 'assertEquals', '(', 'Header', '(', '""""', ',', '""""', ')', ',', '(', 'Header', '(', '""""', ',', '""""', ')', ')', '.', 'withHeader', '(', 'Header', '(', '""""', ',', '""""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', ')', ')', ';', '}']",171,114,6,622,283,20,56.31229235880399,34.54545454545455,,,,-1,-1,-1,-1,False
L296_valueOf_1.txt,code2vec,METHOD_NAME,token_wrong,0.7938,0.5425,5.167,3.668,"{'n_total': 262, 'n_valid': 41, 'n_correct': 22}",120.830877,public static BigInteger valueOf(long val) { if (val >= 0 && val < SMALL_CONSTANTS.length) { return SMALL_CONSTANTS[(int) val]; } return createValueOf(val); },BigInteger valueOf(long val){if(val&&length){CONSTANTS[(int)val];}return createValueOf;},"['public', 'static', 'BigInteger', 'valueOf', '(', 'long', 'val', ')', '{', 'if', '(', 'val', '>=', '0', '&&', 'val', '<', 'SMALL_CONSTANTS', '.', 'length', ')', '{', 'return', 'SMALL_CONSTANTS', '[', '(', 'int', ')', 'val', ']', ';', '}', 'return', 'createValueOf', '(', 'val', ')', ';', '}']","['BigInteger', 'valueOf', '(', 'long', 'val', ')', '{', 'if', '(', 'val', '&&', 'length', ')', '{', 'CONSTANTS', '[', '(', 'int', ')', 'val', ']', ';', '}', 'return', 'createValueOf', ';', '}']",39,27,6,158,88,13,48.275862068965516,36.36363636363637,,,,-1,-1,-1,-1,False
L297_insertFakeData_1.txt,code2vec,METHOD_NAME,token_wrong,0.8442,0.7008,15.7215,18.7933,"{'n_total': 671, 'n_valid': 49, 'n_correct': 49}",154.597147,"public static void insertFakeData(Context context) { long today = SunshineDateUtils.normalizeDate(System.currentTimeMillis()); List<ContentValues> fakeValues = new ArrayList<ContentValues>(); for (int i = 0; i < 7; i++) { fakeValues.add(FakeDataUtils.createTestWeatherContentValues(today + TimeUnit.DAYS.toMillis(i))); } context.getContentResolver().bulkInsert(WeatherContract.WeatherEntry.CONTENT_URI, fakeValues.toArray(new ContentValues[7])); }",void insertFakeData(Context context){(System);List<ContentValues>fakeValues=new ArrayList<>();for(;;){(((i)));}getContentResolver().bulkInsert((ContentValues[7]));},"['public', 'static', 'void', 'insertFakeData', '(', 'Context', 'context', ')', '{', 'long', 'today', '=', 'SunshineDateUtils', '.', 'normalizeDate', '(', 'System', '.', 'currentTimeMillis', '(', ')', ')', ';', 'List', '<', 'ContentValues', '>', 'fakeValues', '=', 'new', 'ArrayList', '<', 'ContentValues', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '7', ';', 'i', '++', ')', '{', 'fakeValues', '.', 'add', '(', 'FakeDataUtils', '.', 'createTestWeatherContentValues', '(', 'today', '+', 'TimeUnit', '.', 'DAYS', '.', 'toMillis', '(', 'i', ')', ')', ')', ';', '}', 'context', '.', 'getContentResolver', '(', ')', '.', 'bulkInsert', '(', 'WeatherContract', '.', 'WeatherEntry', '.', 'CONTENT_URI', ',', 'fakeValues', '.', 'toArray', '(', 'new', 'ContentValues', '[', '7', ']', ')', ')', ';', '}']","['void', 'insertFakeData', '(', 'Context', 'context', ')', '{', '(', 'System', ')', ';', 'List', '<', 'ContentValues', '>', 'fakeValues', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', '(', 'i', ')', ')', ')', ';', '}', 'getContentResolver', '(', ')', '.', 'bulkInsert', '(', '(', 'ContentValues', '[', '7', ']', ')', ')', ';', '}']",101,54,6,447,164,20,66.27634660421545,49.473684210526315,,,,-1,-1,-1,-1,False
L298_throwIfLeaked_1.txt,code2vec,METHOD_NAME,token_wrong,0.7919,0.319,20.8502,18.9208,"{'n_total': 109, 'n_valid': 12, 'n_correct': 11}",33.870938,private void throwIfLeaked() { if (mLeaked) { throw new IllegalStateException(); } },void throwIfLeaked(){if(mLeaked){IllegalStateException();}},"['private', 'void', 'throwIfLeaked', '(', ')', '{', 'if', '(', 'mLeaked', ')', '{', 'throw', 'new', 'IllegalStateException', '(', ')', ';', '}', '}']","['void', 'throwIfLeaked', '(', ')', '{', 'if', '(', 'mLeaked', ')', '{', 'IllegalStateException', '(', ')', ';', '}', '}']",19,16,6,84,59,19,38.46153846153847,23.076923076923077,,,,-1,-1,-1,-1,False
L299_getContentsMap_1.txt,code2vec,METHOD_NAME,token_wrong,0.3944,0.3903,19.0417,19.32,"{'n_total': 491, 'n_valid': 52, 'n_correct': 41}",151.049626,"private Map<Pattern, File> getContentsMap(List<Content> contents) { Map<Pattern, File> contentsMap = new HashMap<Pattern, File>(); for (Content content : contents) { contentsMap.put(Pattern.compile("".*\\Q${inject.content."" + content.getId() + ""}\\E.*""), content.getFile()); } return contentsMap; }","Map<Pattern>getContentsMap(List<Content>contents){Map<File>contentsMap=new HashMap<>();for(Content content:contents){contentsMap.put(Pattern(""""+""\\""),getFile());}return contentsMap;}","['private', 'Map', '<', 'Pattern', ',', 'File', '>', 'getContentsMap', '(', 'List', '<', 'Content', '>', 'contents', ')', '{', 'Map', '<', 'Pattern', ',', 'File', '>', 'contentsMap', '=', 'new', 'HashMap', '<', 'Pattern', ',', 'File', '>', '(', ')', ';', 'for', '(', 'Content', 'content', ':', 'contents', ')', '{', 'contentsMap', '.', 'put', '(', 'Pattern', '.', 'compile', '(', '"".*\\\\Q${inject.content.""', '+', 'content', '.', 'getId', '(', ')', '+', '""}\\\\E.*""', ')', ',', 'content', '.', 'getFile', '(', ')', ')', ';', '}', 'return', 'contentsMap', ';', '}']","['Map', '<', 'Pattern', '>', 'getContentsMap', '(', 'List', '<', 'Content', '>', 'contents', ')', '{', 'Map', '<', 'File', '>', 'contentsMap', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'Content', 'content', ':', 'contents', ')', '{', 'contentsMap', '.', 'put', '(', 'Pattern', '(', '""""', '+', '""\\\\""', ')', ',', 'getFile', '(', ')', ')', ';', '}', 'return', 'contentsMap', ';', '}']",73,55,6,297,182,20,41.51624548736462,26.865671641791046,,,,-1,-1,-1,-1,False
L300_formatMillisecondsAsTimestamp_1.txt,code2vec,METHOD_NAME,token_wrong,0.9593,0.4818,26.8595,23.2281,"{'n_total': 233, 'n_valid': 31, 'n_correct': 16}",88.615647,"public static String formatMillisecondsAsTimestamp(long creationDate) { SimpleDateFormat sdf = new SimpleDateFormat(VERSION_TIMESTAMP_FORMAT); sdf.setTimeZone(TimeZone.getTimeZone(""GMT"")); return sdf.format(creationDate); }","String formatMillisecondsAsTimestamp(long creationDate){SimpleDateFormat();(TimeZone.getTimeZone(""GMT""));return sdf(creationDate);}","['public', 'static', 'String', 'formatMillisecondsAsTimestamp', '(', 'long', 'creationDate', ')', '{', 'SimpleDateFormat', 'sdf', '=', 'new', 'SimpleDateFormat', '(', 'VERSION_TIMESTAMP_FORMAT', ')', ';', 'sdf', '.', 'setTimeZone', '(', 'TimeZone', '.', 'getTimeZone', '(', '""GMT""', ')', ')', ';', 'return', 'sdf', '.', 'format', '(', 'creationDate', ')', ';', '}']","['String', 'formatMillisecondsAsTimestamp', '(', 'long', 'creationDate', ')', '{', 'SimpleDateFormat', '(', ')', ';', '(', 'TimeZone', '.', 'getTimeZone', '(', '""GMT""', ')', ')', ';', 'return', 'sdf', '(', 'creationDate', ')', ';', '}']",39,27,6,223,131,35,48.93617021276596,36.36363636363637,,,,-1,-1,-1,-1,False
L301_asAttributeArray_1.txt,code2vec,METHOD_NAME,token_wrong,0.6889,0.398,17.7225,18.8751,"{'n_total': 561, 'n_valid': 47, 'n_correct': 45}",139.19684,"public static Attribute[] asAttributeArray(Map<String, Set<String>> attributes) { List<Attribute> attributesArray = new ArrayList<>(); if (attributes != null) { for (Map.Entry<String, Set<String>> attribute : attributes.entrySet()) { attributesArray.add(new Attribute(attribute.getKey(), attribute.getValue().toArray(new String[0]))); } } return attributesArray.toArray(new Attribute[0]); }",Attribute[]asAttributeArray(Map<Set<String>>attributes){List<Attribute>attributesArray=ArrayList;if(null){for(Entry<Set<String>>attribute:attributes){(Attribute());}}(Attribute[0]);},"['public', 'static', 'Attribute', '[', ']', 'asAttributeArray', '(', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'attributes', ')', '{', 'List', '<', 'Attribute', '>', 'attributesArray', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'if', '(', 'attributes', '!=', 'null', ')', '{', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'attribute', ':', 'attributes', '.', 'entrySet', '(', ')', ')', '{', 'attributesArray', '.', 'add', '(', 'new', 'Attribute', '(', 'attribute', '.', 'getKey', '(', ')', ',', 'attribute', '.', 'getValue', '(', ')', '.', 'toArray', '(', 'new', 'String', '[', '0', ']', ')', ')', ')', ';', '}', '}', 'return', 'attributesArray', '.', 'toArray', '(', 'new', 'Attribute', '[', '0', ']', ')', ';', '}']","['Attribute', '[', ']', 'asAttributeArray', '(', 'Map', '<', 'Set', '<', 'String', '>', '>', 'attributes', ')', '{', 'List', '<', 'Attribute', '>', 'attributesArray', '=', 'ArrayList', ';', 'if', '(', 'null', ')', '{', 'for', '(', 'Entry', '<', 'Set', '<', 'String', '>', '>', 'attribute', ':', 'attributes', ')', '{', '(', 'Attribute', '(', ')', ')', ';', '}', '}', '(', 'Attribute', '[', '0', ']', ')', ';', '}']",106,58,6,390,182,22,56.52173913043478,48.0,,,,-1,-1,-1,-1,False
L302_getAllVectors_1.txt,code2vec,METHOD_NAME,token_wrong,0.9467,0.484,20.3139,19.3258,"{'n_total': 229, 'n_valid': 28, 'n_correct': 23}",76.829705,public Enumeration<ObjectVector> getAllVectors() { try { getIndexInput().seek(0); getIndexInput().readString(); } catch (IOException e) { e.printStackTrace(); } return new VectorEnumeration(getIndexInput()); },Enumeration<ObjectVector>getAllVectors(){try{}catch(IOException e){}VectorEnumeration(getIndexInput);},"['public', 'Enumeration', '<', 'ObjectVector', '>', 'getAllVectors', '(', ')', '{', 'try', '{', 'getIndexInput', '(', ')', '.', 'seek', '(', '0', ')', ';', 'getIndexInput', '(', ')', '.', 'readString', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'new', 'VectorEnumeration', '(', 'getIndexInput', '(', ')', ')', ';', '}']","['Enumeration', '<', 'ObjectVector', '>', 'getAllVectors', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'VectorEnumeration', '(', 'getIndexInput', ')', ';', '}']",52,24,6,209,102,19,56.315789473684205,60.86956521739131,,,,-1,-1,-1,-1,False
L303_normalizeDeploymentSubPath_1.txt,code2vec,METHOD_NAME,token_wrong,0.3809,0.4665,16.6022,18.9325,"{'n_total': 357, 'n_valid': 44, 'n_correct': 37}",124.894487,"protected String normalizeDeploymentSubPath(String deploymentSubPath) { if (deploymentSubPath.endsWith(AMSTSConstants.FORWARD_SLASH)) { return deploymentSubPath.substring(0, deploymentSubPath.lastIndexOf(AMSTSConstants.FORWARD_SLASH)); } if (deploymentSubPath.startsWith(AMSTSConstants.FORWARD_SLASH)) { return deploymentSubPath.substring(1, deploymentSubPath.length()); } return deploymentSubPath; }",String normalizeDeploymentSubPath(){if(deploymentSubPath()){deploymentSubPath((SLASH));}if((AMSTSConstants)){substring();}},"['protected', 'String', 'normalizeDeploymentSubPath', '(', 'String', 'deploymentSubPath', ')', '{', 'if', '(', 'deploymentSubPath', '.', 'endsWith', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', '{', 'return', 'deploymentSubPath', '.', 'substring', '(', '0', ',', 'deploymentSubPath', '.', 'lastIndexOf', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', ';', '}', 'if', '(', 'deploymentSubPath', '.', 'startsWith', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', '{', 'return', 'deploymentSubPath', '.', 'substring', '(', '1', ',', 'deploymentSubPath', '.', 'length', '(', ')', ')', ';', '}', 'return', 'deploymentSubPath', ';', '}']","['String', 'normalizeDeploymentSubPath', '(', ')', '{', 'if', '(', 'deploymentSubPath', '(', ')', ')', '{', 'deploymentSubPath', '(', '(', 'SLASH', ')', ')', ';', '}', 'if', '(', '(', 'AMSTSConstants', ')', ')', '{', 'substring', '(', ')', ';', '}', '}']",69,33,6,400,123,32,75.27173913043478,57.14285714285714,,,,-1,-1,-1,-1,False
L304_testSpecialBranches_1.txt,code2vec,METHOD_NAME,token_wrong,0.9547,0.9805,19.616,23.6226,"{'n_total': 643, 'n_valid': 44, 'n_correct': 44}",139.043525,"@Test public void testSpecialBranches() { this.encodeAll(new String[] { ""Kobwick"" }, ""CABWAC""); this.encodeAll(new String[] { ""Kocher"" }, ""CACAR""); this.encodeAll(new String[] { ""Fesca"" }, ""FASC""); this.encodeAll(new String[] { ""Shom"" }, ""SAN""); this.encodeAll(new String[] { ""Ohlo"" }, ""OL""); this.encodeAll(new String[] { ""Uhu"" }, ""UH""); this.encodeAll(new String[] { ""Um"" }, ""UN""); }","void testSpecialBranches(){encodeAll(new String[]{""""},"""").encodeAll(new String[]{""""},"""");encodeAll(new String[]{""""},"""").encodeAll(new String[]{""""},"""");encodeAll(new String[]{""""},"""");}","['@', 'Test', 'public', 'void', 'testSpecialBranches', '(', ')', '{', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Kobwick""', '}', ',', '""CABWAC""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Kocher""', '}', ',', '""CACAR""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Fesca""', '}', ',', '""FASC""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Shom""', '}', ',', '""SAN""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Ohlo""', '}', ',', '""OL""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Uhu""', '}', ',', '""UH""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Um""', '}', ',', '""UN""', ')', ';', '}']","['void', 'testSpecialBranches', '(', ')', '{', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', ';', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', ';', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', ';', '}']",114,71,6,385,183,25,56.111111111111114,39.81481481481482,,,,-1,-1,-1,-1,False
L305_getNDocs_1.txt,code2vec,METHOD_NAME,token_wrong,0.2324,0.4176,14.9838,20.2816,"{'n_total': 313, 'n_valid': 53, 'n_correct': 17}",144.392628,"@Override public int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(), termFilter(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }",int getNDocs(){CountResponse response=client.prepareCount(indexName).setQuery((matchAllQuery())).execute().actionGet();return response.getCount();},"['@', 'Override', 'public', 'int', 'getNDocs', '(', ')', '{', 'assureIndex', '(', ')', ';', 'CountResponse', 'response', '=', 'client', '.', 'prepareCount', '(', 'indexName', ')', '.', 'setQuery', '(', 'filteredQuery', '(', 'matchAllQuery', '(', ')', ',', 'termFilter', '(', 'SearchService', '.', 'FIELD_INDEXED', ',', 'true', ')', ')', ')', '.', 'execute', '(', ')', '.', 'actionGet', '(', ')', ';', 'return', '(', 'int', ')', 'response', '.', 'getCount', '(', ')', ';', '}']","['int', 'getNDocs', '(', ')', '{', 'CountResponse', 'response', '=', 'client', '.', 'prepareCount', '(', 'indexName', ')', '.', 'setQuery', '(', '(', 'matchAllQuery', '(', ')', ')', ')', '.', 'execute', '(', ')', '.', 'actionGet', '(', ')', ';', 'return', 'response', '.', 'getCount', '(', ')', ';', '}']",60,40,6,251,147,14,43.88185654008439,37.03703703703704,,,,-1,-1,-1,-1,False
L306_loadLocalFlags_1.txt,code2vec,METHOD_NAME,token_wrong,0.7099,0.1763,16.4747,15.9188,"{'n_total': 350, 'n_valid': 38, 'n_correct': 23}",108.930098,"private void loadLocalFlags(final String defaultFlagsFileName) { String jsonResponse = readJSONFromAsset(defaultFlagsFileName); Type listType = new TypeToken<List<Flag>>() { }.getType(); flags = gson.fromJson(jsonResponse, listType); preferences.edit().putString(FLAGS_PREF_KEY, jsonResponse).apply(); }","void loadLocalFlags(String defaultFlagsFileName){new TypeToken<List<Flag>>.getType();flags=gson(jsonResponse,listType);(jsonResponse).apply();}","['private', 'void', 'loadLocalFlags', '(', 'final', 'String', 'defaultFlagsFileName', ')', '{', 'String', 'jsonResponse', '=', 'readJSONFromAsset', '(', 'defaultFlagsFileName', ')', ';', 'Type', 'listType', '=', 'new', 'TypeToken', '<', 'List', '<', 'Flag', '>', '>', '(', ')', '{', '}', '.', 'getType', '(', ')', ';', 'flags', '=', 'gson', '.', 'fromJson', '(', 'jsonResponse', ',', 'listType', ')', ';', 'preferences', '.', 'edit', '(', ')', '.', 'putString', '(', 'FLAGS_PREF_KEY', ',', 'jsonResponse', ')', '.', 'apply', '(', ')', ';', '}']","['void', 'loadLocalFlags', '(', 'String', 'defaultFlagsFileName', ')', '{', 'new', 'TypeToken', '<', 'List', '<', 'Flag', '>', '>', '.', 'getType', '(', ')', ';', 'flags', '=', 'gson', '(', 'jsonResponse', ',', 'listType', ')', ';', '(', 'jsonResponse', ')', '.', 'apply', '(', ')', ';', '}']",66,38,6,303,143,20,56.53710247349824,46.666666666666664,,,,-1,-1,-1,-1,False
L307_setKey_1.txt,code2vec,METHOD_NAME,token_wrong,0.2903,0.3741,13.5676,13.8286,"{'n_total': 356, 'n_valid': 31, 'n_correct': 24}",90.783673,"public void setKey(byte[] key, int keyOff, int keyLen) { try { mac.init(new SecretKeySpec(key, keyOff, keyLen, algorithm)); } catch (InvalidKeyException e) { e.printStackTrace(); } }","void setKey(byte[]key,int keyOff,int keyLen){try{mac.init((keyLen));}catch(InvalidKeyException e){}}","['public', 'void', 'setKey', '(', 'byte', '[', ']', 'key', ',', 'int', 'keyOff', ',', 'int', 'keyLen', ')', '{', 'try', '{', 'mac', '.', 'init', '(', 'new', 'SecretKeySpec', '(', 'key', ',', 'keyOff', ',', 'keyLen', ',', 'algorithm', ')', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'setKey', '(', 'byte', '[', ']', 'key', ',', 'int', 'keyOff', ',', 'int', 'keyLen', ')', '{', 'try', '{', 'mac', '.', 'init', '(', '(', 'keyLen', ')', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', '}', '}']",50,35,6,182,100,12,48.23529411764706,34.090909090909086,,,,-1,-1,-1,-1,False
L308_generateTrunkFruit_1.txt,code2vec,METHOD_NAME,token_wrong,0.9993,0.9665,28.8422,26.1475,"{'n_total': 384, 'n_valid': 41, 'n_correct': 40}",122.84558,"private void generateTrunkFruit(World world, int age, BlockPos pos, EnumFacing direction) { if (this.trunkFruit == Blocks.COCOA.getDefaultState()) { this.setBlockAndNotifyAdequately(world, pos, this.trunkFruit.withProperty(BlockCocoa.AGE, Integer.valueOf(age)).withProperty(BlockCocoa.FACING, direction)); } else { this.setBlockAndNotifyAdequately(world, pos, this.trunkFruit.withProperty(BlockCocoa.FACING, direction)); } }","void generateTrunkFruit(World age,EnumFacing direction){if(Blocks){setBlockAndNotifyAdequately(((age)).withProperty());}{((direction));}}","['private', 'void', 'generateTrunkFruit', '(', 'World', 'world', ',', 'int', 'age', ',', 'BlockPos', 'pos', ',', 'EnumFacing', 'direction', ')', '{', 'if', '(', 'this', '.', 'trunkFruit', '==', 'Blocks', '.', 'COCOA', '.', 'getDefaultState', '(', ')', ')', '{', 'this', '.', 'setBlockAndNotifyAdequately', '(', 'world', ',', 'pos', ',', 'this', '.', 'trunkFruit', '.', 'withProperty', '(', 'BlockCocoa', '.', 'AGE', ',', 'Integer', '.', 'valueOf', '(', 'age', ')', ')', '.', 'withProperty', '(', 'BlockCocoa', '.', 'FACING', ',', 'direction', ')', ')', ';', '}', 'else', '{', 'this', '.', 'setBlockAndNotifyAdequately', '(', 'world', ',', 'pos', ',', 'this', '.', 'trunkFruit', '.', 'withProperty', '(', 'BlockCocoa', '.', 'FACING', ',', 'direction', ')', ')', ';', '}', '}']","['void', 'generateTrunkFruit', '(', 'World', 'age', ',', 'EnumFacing', 'direction', ')', '{', 'if', '(', 'Blocks', ')', '{', 'setBlockAndNotifyAdequately', '(', '(', '(', 'age', ')', ')', '.', 'withProperty', '(', ')', ')', ';', '}', '{', '(', '(', 'direction', ')', ')', ';', '}', '}']",95,38,6,424,137,24,71.75,64.04494382022472,,,,-1,-1,-1,-1,False
L309_getArticleFragment_1.txt,code2vec,METHOD_NAME,token_wrong,0.5813,0.4921,24.6127,25.8007,"{'n_total': 186, 'n_valid': 34, 'n_correct': 13}",95.61876,"public static ArticleFragment getArticleFragment(HSActivityParent activity, HSKBItem kbItem) { ArticleFragment sectionFragment = new ArticleFragment(); sectionFragment.kbItem = kbItem; return sectionFragment; }","ArticleFragment getArticleFragment(HSActivityParent activity,HSKBItem kbItem){ArticleFragment sectionFragment=new ArticleFragment();return sectionFragment;}","['public', 'static', 'ArticleFragment', 'getArticleFragment', '(', 'HSActivityParent', 'activity', ',', 'HSKBItem', 'kbItem', ')', '{', 'ArticleFragment', 'sectionFragment', '=', 'new', 'ArticleFragment', '(', ')', ';', 'sectionFragment', '.', 'kbItem', '=', 'kbItem', ';', 'return', 'sectionFragment', ';', '}']","['ArticleFragment', 'getArticleFragment', '(', 'HSActivityParent', 'activity', ',', 'HSKBItem', 'kbItem', ')', '{', 'ArticleFragment', 'sectionFragment', '=', 'new', 'ArticleFragment', '(', ')', ';', 'return', 'sectionFragment', ';', '}']",30,22,6,210,156,24,29.03225806451613,33.33333333333333,,,,-1,-1,-1,-1,False
L310_notifyCallback_1.txt,code2vec,METHOD_NAME,token_wrong,0.5607,0.9015,12.8962,10.976,"{'n_total': 135, 'n_valid': 13, 'n_correct': 11}",38.000478,private void notifyCallback(int event) { if (callback != null) { callback.onEvent(event); } },void notifyCallback(int event){if(callback){onEvent();}},"['private', 'void', 'notifyCallback', '(', 'int', 'event', ')', '{', 'if', '(', 'callback', '!=', 'null', ')', '{', 'callback', '.', 'onEvent', '(', 'event', ')', ';', '}', '}']","['void', 'notifyCallback', '(', 'int', 'event', ')', '{', 'if', '(', 'callback', ')', '{', 'onEvent', '(', ')', ';', '}', '}']",24,18,6,93,56,20,50.68493150684932,33.33333333333333,,,,-1,-1,-1,-1,False
L311_resetThreads_1.txt,code2vec,METHOD_NAME,token_wrong,0.9329,0.4726,19.538,16.7326,"{'n_total': 206, 'n_valid': 23, 'n_correct': 21}",67.801362,public void resetThreads() { if (threads != null) { threads.clear(); } else { threads = new Vector<>(); } },void resetThreads(){if(threads=null){clear();}{threads();}},"['public', 'void', 'resetThreads', '(', ')', '{', 'if', '(', 'threads', '!=', 'null', ')', '{', 'threads', '.', 'clear', '(', ')', ';', '}', 'else', '{', 'threads', '=', 'new', 'Vector', '<', '>', '(', ')', ';', '}', '}']","['void', 'resetThreads', '(', ')', '{', 'if', '(', 'threads', '=', 'null', ')', '{', 'clear', '(', ')', ';', '}', '{', 'threads', '(', ')', ';', '}', '}']",33,24,6,107,59,18,53.93258426966292,33.33333333333333,,,,-1,-1,-1,-1,False
L312_httpAddress_1.txt,code2vec,METHOD_NAME,token_wrong,0.2019,0.1812,15.1891,15.4432,"{'n_total': 229, 'n_valid': 56, 'n_correct': 21}",155.449691,"private static ResourceAddress httpAddress() { ResourceAddressFactory addressFactory = ResourceAddressFactory.newResourceAddressFactory(); String address = ""http://localhost:8000/index.html""; return addressFactory.newResourceAddress(address); }","ResourceAddress httpAddress(){ResourceAddressFactory();String address=""httplocalhostindexhtml"";addressFactory(address);}","['private', 'static', 'ResourceAddress', 'httpAddress', '(', ')', '{', 'ResourceAddressFactory', 'addressFactory', '=', 'ResourceAddressFactory', '.', 'newResourceAddressFactory', '(', ')', ';', 'String', 'address', '=', '""http://localhost:8000/index.html""', ';', 'return', 'addressFactory', '.', 'newResourceAddress', '(', 'address', ')', ';', '}']","['ResourceAddress', 'httpAddress', '(', ')', '{', 'ResourceAddressFactory', '(', ')', ';', 'String', 'address', '=', '""httplocalhostindexhtml""', ';', 'addressFactory', '(', 'address', ')', ';', '}']",30,20,6,244,120,17,54.62555066079295,41.66666666666667,,,,-1,-1,-1,-1,False
L313_defineSuccessorSuffixes_1.txt,code2vec,METHOD_NAME,token_wrong,0.1936,0.1979,17.0248,17.4979,"{'n_total': 577, 'n_valid': 78, 'n_correct': 39}",219.439353,"public SuffixData[] defineSuccessorSuffixes(DictionaryItem item) { SuffixData original = new SuffixData(); SuffixData modified = new SuffixData(); PrimaryPos primaryPos = item.primaryPos; switch(primaryPos) { case Noun: getForNoun(item, original, modified); break; default: throw new UnsupportedOperationException(""In this class only some noun morphemes exist.""); } return new SuffixData[] { original, modified }; }","SuffixData[]defineSuccessorSuffixes(DictionaryItem item){SuffixData();primaryPos=primaryPos;switch(primaryPos){case Noun:getForNoun(original,modified);default:throw new UnsupportedOperationException(""Inthis"");}new SuffixData[]{};}","['public', 'SuffixData', '[', ']', 'defineSuccessorSuffixes', '(', 'DictionaryItem', 'item', ')', '{', 'SuffixData', 'original', '=', 'new', 'SuffixData', '(', ')', ';', 'SuffixData', 'modified', '=', 'new', 'SuffixData', '(', ')', ';', 'PrimaryPos', 'primaryPos', '=', 'item', '.', 'primaryPos', ';', 'switch', '(', 'primaryPos', ')', '{', 'case', 'Noun', ':', 'getForNoun', '(', 'item', ',', 'original', ',', 'modified', ')', ';', 'break', ';', 'default', ':', 'throw', 'new', 'UnsupportedOperationException', '(', '""In this class only some noun morphemes exist.""', ')', ';', '}', 'return', 'new', 'SuffixData', '[', ']', '{', 'original', ',', 'modified', '}', ';', '}']","['SuffixData', '[', ']', 'defineSuccessorSuffixes', '(', 'DictionaryItem', 'item', ')', '{', 'SuffixData', '(', ')', ';', 'primaryPos', '=', 'primaryPos', ';', 'switch', '(', 'primaryPos', ')', '{', 'case', 'Noun', ':', 'getForNoun', '(', 'original', ',', 'modified', ')', ';', 'default', ':', 'throw', 'new', 'UnsupportedOperationException', '(', '""Inthis""', ')', ';', '}', 'new', 'SuffixData', '[', ']', '{', '}', ';', '}']",74,50,6,415,230,29,47.92746113989637,35.294117647058826,,,,-1,-1,-1,-1,False
L314_testKillUnknownTask_1.txt,code2vec,METHOD_NAME,token_wrong,0.6033,0.416,19.5169,17.4529,"{'n_total': 133, 'n_valid': 16, 'n_correct': 12}",47.915785,"@Test public void testKillUnknownTask() { String unknownTask = ""unknown""; driver.killTask(unknownTask); control.replay(); changeState(unknownTask, RUNNING); }",@Test void testKillUnknownTask(){control();changeState(unknownTask);},"['@', 'Test', 'public', 'void', 'testKillUnknownTask', '(', ')', '{', 'String', 'unknownTask', '=', '""unknown""', ';', 'driver', '.', 'killTask', '(', 'unknownTask', ')', ';', 'control', '.', 'replay', '(', ')', ';', 'changeState', '(', 'unknownTask', ',', 'RUNNING', ')', ';', '}']","['@', 'Test', 'void', 'testKillUnknownTask', '(', ')', '{', 'control', '(', ')', ';', 'changeState', '(', 'unknownTask', ')', ';', '}']",34,17,6,158,69,25,66.9172932330827,60.71428571428571,,,,-1,-1,-1,-1,False
L315_assertNoMoreTokens_1.txt,code2vec,METHOD_NAME,token_wrong,0.409,0.5137,17.8793,19.9464,"{'n_total': 177, 'n_valid': 20, 'n_correct': 11}",56.581152,private void assertNoMoreTokens(OptionSpecTokenizer lexer) { assertFalse(lexer.hasMore()); thrown.expect(NoSuchElementException.class); lexer.next(); },void assertNoMoreTokens(OptionSpecTokenizer lexer){assertFalse();thrown.expect();lexer.next();},"['private', 'void', 'assertNoMoreTokens', '(', 'OptionSpecTokenizer', 'lexer', ')', '{', 'assertFalse', '(', 'lexer', '.', 'hasMore', '(', ')', ')', ';', 'thrown', '.', 'expect', '(', 'NoSuchElementException', '.', 'class', ')', ';', 'lexer', '.', 'next', '(', ')', ';', '}']","['void', 'assertNoMoreTokens', '(', 'OptionSpecTokenizer', 'lexer', ')', '{', 'assertFalse', '(', ')', ';', 'thrown', '.', 'expect', '(', ')', ';', 'lexer', '.', 'next', '(', ')', ';', '}']",33,24,6,151,95,24,44.09448818897638,33.33333333333333,,,,-1,-1,-1,-1,False
L316_testLong_1.txt,code2vec,METHOD_NAME,token_wrong,0.2676,0.1987,7.7342,7.8733,"{'n_total': 1478, 'n_valid': 432, 'n_correct': 174}",1242.008892,"@Test public void testLong() throws Exception { final String expected = ""8920866532787660373\tBZ\tBZ\t2016-05-01T10:21:00.000Z\t-6253307669002054137\n"" + ""-6943924477733600060\tXX\tBZ\t2016-05-01T10:22:00.000Z\t-7387846268299105911\n"" + ""-6856503215590263904\tKK\tXX\t2016-05-01T10:23:00.000Z\t7122109662042058469\n"" + ""8416773233910814357\tAX\tXX\t2016-05-01T10:24:00.000Z\t7199909180655756830\n"" + ""7199909180655756830\tAX\tXX\t2016-05-01T10:25:00.000Z\t6270672455202306717\n"" + ""6270672455202306717\tAX\tBZ\t2016-05-01T10:26:00.000Z\t-7316123607359392486\n"" + ""-6253307669002054137\tBZ\tXX\t2016-05-01T10:27:00.000Z\t7392877322819819290\n"" + ""7392877322819819290\tBZ\tKK\t2016-05-01T10:28:00.000Z\t-3107239868490395663\n"" + ""-7316123607359392486\tAX\tKK\t2016-05-01T10:29:00.000Z\t-6626590012581323602\n"" + ""-3107239868490395663\tBZ\tAX\t2016-05-01T10:30:00.000Z\t8611582118025429627\n"" + ""-7387846268299105911\tXX\tKK\t2016-05-01T10:31:00.000Z\t-8082754367165748693\n"" + ""7122109662042058469\tKK\tAX\t2016-05-01T10:32:00.000Z\tNaN\n"" + ""-6626590012581323602\tAX\tAX\t2016-05-01T10:33:00.000Z\t6574958665733670985\n"" + ""8611582118025429627\tBZ\tBZ\t2016-05-01T10:34:00.000Z\t8152044974329490473\n"" + ""-8082754367165748693\tXX\tAX\t2016-05-01T10:35:00.000Z\t3446015290144635451\n"" + ""6574958665733670985\tAX\tAX\t2016-05-01T10:36:00.000Z\t8889492928577876455\n"" + ""3446015290144635451\tXX\tKK\t2016-05-01T10:37:00.000Z\tNaN\n"" + ""8889492928577876455\tAX\tAX\t2016-05-01T10:38:00.000Z\tNaN\n"" + ""8152044974329490473\tBZ\tBZ\t2016-05-01T10:39:00.000Z\t-6071768268784020226\n"" + ""-6071768268784020226\tBZ\tAX\t2016-05-01T10:40:00.000Z\tNaN\n""; assertThat(expected, ""select l, str, sym, timestamp , next(l) over (partition by str) from abc""); assertThat(expected, ""select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'""); }","@Test void testLong()throws Exception{String expected=""""+""""+""""+""""+""-63""+""tAX""+""085""+""8673""+""""+""5\\""+""tNaN""+""tNaN"";("""");assertThat(""selectabc"");}","['@', 'Test', 'public', 'void', 'testLong', '(', ')', 'throws', 'Exception', '{', 'final', 'String', 'expected', '=', '""8920866532787660373\\tBZ\\tBZ\\t2016-05-01T10:21:00.000Z\\t-6253307669002054137\\n""', '+', '""-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n""', '+', '""-6856503215590263904\\tKK\\tXX\\t2016-05-01T10:23:00.000Z\\t7122109662042058469\\n""', '+', '""8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n""', '+', '""7199909180655756830\\tAX\\tXX\\t2016-05-01T10:25:00.000Z\\t6270672455202306717\\n""', '+', '""6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n""', '+', '""-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n""', '+', '""7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n""', '+', '""-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n""', '+', '""-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n""', '+', '""-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n""', '+', '""7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n""', '+', '""-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n""', '+', '""8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n""', '+', '""-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n""', '+', '""6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n""', '+', '""3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n""', '+', '""8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n""', '+', '""8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n""', '+', '""-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n""', ';', 'assertThat', '(', 'expected', ',', '""select l, str, sym, timestamp , next(l) over (partition by str) from abc""', ')', ';', 'assertThat', '(', 'expected', ',', '""select l, str, sym, timestamp , next(l) over (partition by str) from \'*!*abc\'""', ')', ';', '}']","['@', 'Test', 'void', 'testLong', '(', ')', 'throws', 'Exception', '{', 'String', 'expected', '=', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""-63""', '+', '""tAX""', '+', '""085""', '+', '""8673""', '+', '""""', '+', '""5\\\\""', '+', '""tNaN""', '+', '""tNaN""', ';', '(', '""""', ')', ';', 'assertThat', '(', '""selectabc""', ')', ';', '}']",69,46,6,1845,144,14,92.9000546149645,36.507936507936506,,,,-1,-1,-1,-1,False
L317_createPropertyModel_2.txt,code2vec,METHOD_NAME,token_wrong,0.5268,0.4955,16.4002,16.0676,"{'n_total': 372, 'n_valid': 42, 'n_correct': 36}",121.856691,"protected void createPropertyModel() { retrieveCommonProperties(); if (isHosted()) { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2IDPAdvancedHosted.xml"")); } else { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2IDPAdvancedRemote.xml"")); } psModel.clear(); }","void createPropertyModel(){if(isHosted){psModel=AMPropertySheetModel(getResourceAsStream(""""));}{((""""));}psModel.clear();}","['protected', 'void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', '(', ')', ')', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2IDPAdvancedHosted.xml""', ')', ')', ';', '}', 'else', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2IDPAdvancedRemote.xml""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']","['void', 'createPropertyModel', '(', ')', '{', 'if', '(', 'isHosted', ')', '{', 'psModel', '=', 'AMPropertySheetModel', '(', 'getResourceAsStream', '(', '""""', ')', ')', ';', '}', '{', '(', '(', '""""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']",66,36,6,412,121,25,75.1937984496124,50.0,,,,-1,-1,-1,-1,False
L318_createRawValidator_5.txt,code2vec,METHOD_NAME,token_wrong,0.2166,0.1221,15.6102,14.8269,"{'n_total': 1626, 'n_valid': 404, 'n_correct': 194}",1101.712903,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.g"" + ""rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.A"" + ""ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011"" + ""java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.gram"" + ""mar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype"" + "";L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004"" + ""ppsr\u0000*com.sun.msv.datatype.xsd.DatatypeFactory$1\u00a1\u00f3\u000b\u00e3`rj\u000e\u0002\u0000\u0000x"" + ""r\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lc"" + ""om/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datat"" + ""ype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lan"" + ""g/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dataty"" + ""pe/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSc"" + ""hemat\u0000\u0006IDREFSsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"" + ""r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"" + ""Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000\'com.sun.msv.datatype.xsd.MinLength"" + ""Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLengthxr\u00009com.sun.msv.datatype.xsd.Dat"" + ""aTypeWithValueConstraintFacet\""\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.data"" + ""type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"" + ""alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"" + ""datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0000\u0000sr"" + ""\u0000!com.sun.msv.datatype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypeq\u0000~"" + ""\u0000\u0016xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017"" + ""ppq\u0000~\u0000\u001fsr\u0000\""com.sun.msv.datatype.xsd.IDREFType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#"" + ""com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\""com.sun.ms"" + ""v.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."" + ""xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dat"" + ""atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000\u001bt\u0000\u0005IDREFq\u0000~"" + ""\u0000\u001f\u0000q\u0000~\u0000\'t\u0000\tminLength\u0000\u0000\u0000\u0001sr\u00000com.sun.msv.grammar.Expression$N"" + ""ullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u000fppsr\u0000#com.sun.msv.gram"" + ""mar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceU"" + ""RIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0011desc"" + ""riptionIDRefst\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonEx"" + ""pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u000e\u0001q\u0000~\u00008sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u000fpsq\u0000"" + ""~\u0000\u0010q\u0000~\u0000\u000fpsr\u0000\""com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"" + ""\u0000~\u0000,q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u00001sr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"" + ""\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000?q\u0000~\u0000\u001bsq"" + ""\u0000~\u00002t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u00008"" + ""sq\u0000~\u00002t\u0000\u001aAuthenticateSessionContextt\u0000\u0019urn:liberty:disco:2003"" + ""-08sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"" + ""blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"" + ""om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"" + ""untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"" + ""onPool;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\tq\u0000~\u0000:x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com.DocumentDeclaration createRawValidator(){if(schemaFragment){((""\00""+""00.""+""""+""mmar""+""""+""""+""""+""""+""\\u""+""instanceq""+""""+""""+""om""+""Expressi""+""x""));}sun.msvregexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.g""', '+', '""rammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.A""', '+', '""ttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04sr\x00\x11""', '+', '""java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\x1bcom.sun.msv.gram""', '+', '""mar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype""', '+', '"";L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04""', '+', '""ppsr\x00*com.sun.msv.datatype.xsd.DatatypeFactory$1¡ó\x0bã`rj\x0e\x02\x00\x00x""', '+', '""r\x00\x1ecom.sun.msv.datatype.xsd.Proxy\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bbaseTypet\x00)Lc""', '+', '""om/sun/msv/datatype/xsd/XSDatatypeImpl;xr\x00\\\'com.sun.msv.datat""', '+', '""ype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Ljava/lan""', '+', '""g/String;L\x00\\btypeNameq\x00~\x00\x18L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/dataty""', '+', '""pe/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001/XMLSc""', '+', '""hemat\x00\x06IDREFSsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProcesso""', '+', '""r$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.WhiteSpace""', '+', '""Processor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x00\\\'com.sun.msv.datatype.xsd.MinLength""', '+', '""Facet\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01I\x00\\tminLengthxr\x009com.sun.msv.datatype.xsd.Dat""', '+', '""aTypeWithValueConstraintFacet\\""§RoÊÇ\x8aT\x02\x00\x00xr\x00*com.sun.msv.data""', '+', '""type.xsd.DataTypeWithFacet\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x05Z\x00\\fisFacetFixedZ\x00\x12needV""', '+', '""alueCheckFlagL\x00\\bbaseTypeq\x00~\x00\x16L\x00\\fconcreteTypet\x00\\\'Lcom/sun/msv/""', '+', '""datatype/xsd/ConcreteType;L\x00\\tfacetNameq\x00~\x00\x18xq\x00~\x00\x17ppq\x00~\x00\x1f\x00\x00sr""', '+', '""\x00!com.sun.msv.datatype.xsd.ListType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bitemTypeq\x00~""', '+', '""\x00\x16xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x17""', '+', '""ppq\x00~\x00\x1fsr\x00\\""com.sun.msv.datatype.xsd.IDREFType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#""', '+', '""com.sun.msv.datatype.xsd.NcnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\""com.sun.ms""', '+', '""v.datatype.xsd.TokenType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datatype.""', '+', '""xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxr\x00*com.sun.msv.dat""', '+', '""atype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00&q\x00~\x00\x1bt\x00\x05IDREFq\x00~""', '+', '""\x00\x1f\x00q\x00~\x00\\\'t\x00\\tminLength\x00\x00\x00\x01sr\x000com.sun.msv.grammar.Expression$N""', '+', '""ullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x0fppsr\x00#com.sun.msv.gram""', '+', '""mar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceU""', '+', '""RIq\x00~\x00\x18xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x11desc""', '+', '""riptionIDRefst\x00\x00sr\x000com.sun.msv.grammar.Expression$EpsilonEx""', '+', '""pression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x0e\x01q\x00~\x008sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x0fpsq\x00""', '+', '""~\x00\x10q\x00~\x00\x0fpsr\x00\\""com.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq""', '+', '""\x00~\x00,q\x00~\x00\x1bt\x00\x05QNameq\x00~\x00\x1fq\x00~\x001sr\x00\x1bcom.sun.msv.util.StringPairÐt""', '+', '""\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceURIq\x00~\x00\x18xpq\x00~\x00?q\x00~\x00\x1bsq""', '+', '""\x00~\x002t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-instanceq\x00~\x008""', '+', '""sq\x00~\x002t\x00\x1aAuthenticateSessionContextt\x00\x19urn:liberty:disco:2003""', '+', '""-08sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTa""', '+', '""blet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-c""', '+', '""om.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05co""', '+', '""untB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressi""', '+', '""onPool;xp\x00\x00\x00\x03\x01pq\x00~\x00\x0bq\x00~\x00\\tq\x00~\x00:x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""\\00""', '+', '""00.""', '+', '""""', '+', '""mmar""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""\\\\u""', '+', '""instanceq""', '+', '""""', '+', '""""', '+', '""om""', '+', '""Expressi""', '+', '""x""', ')', ')', ';', '}', 'sun', '.', 'msvregexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",159,57,6,6545,200,24,97.30102744977765,66.66666666666666,,,,-1,-1,-1,-1,False
L319_createQueryString_1.txt,code2vec,METHOD_NAME,token_wrong,0.6767,0.7372,2.6435,3.266,"{'n_total': 309, 'n_valid': 45, 'n_correct': 25}",137.676651,"@Override public StringBuilder createQueryString(String command) { StringBuilder buffer = super.createQueryString(command); if (path != null && idle != null) { buffer.append(""&idle=""); buffer.append(this.idle); } return buffer; }","StringBuilder createQueryString(String command){StringBuilder buffer=super.createQueryString(command);if(path=null){("""");(this);}}","['@', 'Override', 'public', 'StringBuilder', 'createQueryString', '(', 'String', 'command', ')', '{', 'StringBuilder', 'buffer', '=', 'super', '.', 'createQueryString', '(', 'command', ')', ';', 'if', '(', 'path', '!=', 'null', '&&', 'idle', '!=', 'null', ')', '{', 'buffer', '.', 'append', '(', '""&idle=""', ')', ';', 'buffer', '.', 'append', '(', 'this', '.', 'idle', ')', ';', '}', 'return', 'buffer', ';', '}']","['StringBuilder', 'createQueryString', '(', 'String', 'command', ')', '{', 'StringBuilder', 'buffer', '=', 'super', '.', 'createQueryString', '(', 'command', ')', ';', 'if', '(', 'path', '=', 'null', ')', '{', '(', '""""', ')', ';', '(', 'this', ')', ';', '}', '}']",52,34,6,229,130,23,48.05825242718447,39.130434782608695,,,,-1,-1,-1,-1,False
L320_dataNodeAlive_1.txt,code2vec,METHOD_NAME,token_wrong,0.4536,0.4364,16.7818,18.3506,"{'n_total': 597, 'n_valid': 94, 'n_correct': 43}",264.600635,"public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(""DataNode ["" + dataNode.getId() + ""] is not in the check list !!""); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }","boolean dataNodeAlive(DataNode dataNode){if(dataNode()==null)return true;if(dataNodeAliveMap()){(""""+"""");}return dataNodeAliveMap.get(dataNode()).get();}","['public', 'static', 'boolean', 'dataNodeAlive', '(', 'DataNode', 'dataNode', ')', '{', 'if', '(', 'dataNode', '==', 'null', '||', 'dataNode', '.', 'getId', '(', ')', '==', 'null', ')', 'return', 'true', ';', 'if', '(', '!', 'dataNodeAliveMap', '.', 'containsKey', '(', 'dataNode', '.', 'getId', '(', ')', ')', ')', '{', 'logger', '.', 'error', '(', '""DataNode [""', '+', 'dataNode', '.', 'getId', '(', ')', '+', '""] is not in the check list !!""', ')', ';', 'return', 'true', ';', '}', 'return', 'dataNodeAliveMap', '.', 'get', '(', 'dataNode', '.', 'getId', '(', ')', ')', '.', 'get', '(', ')', ';', '}']","['boolean', 'dataNodeAlive', '(', 'DataNode', 'dataNode', ')', '{', 'if', '(', 'dataNode', '(', ')', '==', 'null', ')', 'return', 'true', ';', 'if', '(', 'dataNodeAliveMap', '(', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'return', 'dataNodeAliveMap', '.', 'get', '(', 'dataNode', '(', ')', ')', '.', 'get', '(', ')', ';', '}']",77,47,6,325,152,19,56.5359477124183,42.25352112676056,,,,-1,-1,-1,-1,False
L321_shouldFindVets_1.txt,code2vec,METHOD_NAME,token_wrong,0.4635,0.3741,14.0203,14.4727,"{'n_total': 476, 'n_valid': 38, 'n_correct': 28}",112.640526,"@Test public void shouldFindVets() { Collection<Vet> vets = this.clinicService.findVets(); Vet vet = EntityUtils.getById(vets, Vet.class, 3); assertThat(vet.getLastName()).isEqualTo(""Douglas""); assertThat(vet.getNrOfSpecialties()).isEqualTo(2); assertThat(vet.getSpecialties().get(0).getName()).isEqualTo(""dentistry""); assertThat(vet.getSpecialties().get(1).getName()).isEqualTo(""surgery""); }","void shouldFindVets(){Collection<Vet>vets=(getLastName()).isEqualTo("""");(vet).isEqualTo();assertThat(vet.getName()).isEqualTo("""");(vet().getName()).isEqualTo(""surgery"");}","['@', 'Test', 'public', 'void', 'shouldFindVets', '(', ')', '{', 'Collection', '<', 'Vet', '>', 'vets', '=', 'this', '.', 'clinicService', '.', 'findVets', '(', ')', ';', 'Vet', 'vet', '=', 'EntityUtils', '.', 'getById', '(', 'vets', ',', 'Vet', '.', 'class', ',', '3', ')', ';', 'assertThat', '(', 'vet', '.', 'getLastName', '(', ')', ')', '.', 'isEqualTo', '(', '""Douglas""', ')', ';', 'assertThat', '(', 'vet', '.', 'getNrOfSpecialties', '(', ')', ')', '.', 'isEqualTo', '(', '2', ')', ';', 'assertThat', '(', 'vet', '.', 'getSpecialties', '(', ')', '.', 'get', '(', '0', ')', '.', 'getName', '(', ')', ')', '.', 'isEqualTo', '(', '""dentistry""', ')', ';', 'assertThat', '(', 'vet', '.', 'getSpecialties', '(', ')', '.', 'get', '(', '1', ')', '.', 'getName', '(', ')', ')', '.', 'isEqualTo', '(', '""surgery""', ')', ';', '}']","['void', 'shouldFindVets', '(', ')', '{', 'Collection', '<', 'Vet', '>', 'vets', '=', '(', 'getLastName', '(', ')', ')', '.', 'isEqualTo', '(', '""""', ')', ';', '(', 'vet', ')', '.', 'isEqualTo', '(', ')', ';', 'assertThat', '(', 'vet', '.', 'getName', '(', ')', ')', '.', 'isEqualTo', '(', '""""', ')', ';', '(', 'vet', '(', ')', '.', 'getName', '(', ')', ')', '.', 'isEqualTo', '(', '""surgery""', ')', ';', '}']",113,60,6,392,170,20,59.67741935483871,49.532710280373834,,,,-1,-1,-1,-1,False
L322_onClick_2.txt,code2vec,METHOD_NAME,token_wrong,0.4006,0.5127,1.381,9.2778,"{'n_total': 214, 'n_valid': 25, 'n_correct': 18}",71.527057,"@Override public void onClick(String weatherForDay) { Context context = this; Class destinationClass = DetailActivity.class; Intent intentToStartDetailActivity = new Intent(context, destinationClass); intentToStartDetailActivity.putExtra(Intent.EXTRA_TEXT, weatherForDay); startActivity(intentToStartDetailActivity); }",void onClick(String weatherForDay){(context);intentToStartDetailActivity.putExtra();},"['@', 'Override', 'public', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'context', '=', 'this', ';', 'Class', 'destinationClass', '=', 'DetailActivity', '.', 'class', ';', 'Intent', 'intentToStartDetailActivity', '=', 'new', 'Intent', '(', 'context', ',', 'destinationClass', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', 'weatherForDay', ')', ';', 'startActivity', '(', 'intentToStartDetailActivity', ')', ';', '}']","['void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', '(', 'context', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', ')', ';', '}']",50,18,6,318,85,13,76.39344262295083,72.72727272727273,,,,-1,-1,-1,-1,False
L323_testOther_1.txt,code2vec,METHOD_NAME,token_wrong,0.3958,0.4994,14.0637,15.6147,"{'n_total': 127, 'n_valid': 19, 'n_correct': 9}",57.137059,@Test public void testOther() { TestObjectWithConstructor value = new TestObjectWithConstructor(); value.value = 12; MetaPrimitiveType type = new MetaPrimitiveType(); type.setImplementationType(TestObjectWithConstructor.class); },@Test void testOther(){TestObjectWithConstructor();type.setImplementationType(TestObjectWithConstructor.class);},"['@', 'Test', 'public', 'void', 'testOther', '(', ')', '{', 'TestObjectWithConstructor', 'value', '=', 'new', 'TestObjectWithConstructor', '(', ')', ';', 'value', '.', 'value', '=', '12', ';', 'MetaPrimitiveType', 'type', '=', 'new', 'MetaPrimitiveType', '(', ')', ';', 'type', '.', 'setImplementationType', '(', 'TestObjectWithConstructor', '.', 'class', ')', ';', '}']","['@', 'Test', 'void', 'testOther', '(', ')', '{', 'TestObjectWithConstructor', '(', ')', ';', 'type', '.', 'setImplementationType', '(', 'TestObjectWithConstructor', '.', 'class', ')', ';', '}']",40,21,6,229,112,15,54.67289719626168,55.88235294117647,,,,-1,-1,-1,-1,False
L324_subList_1.txt,code2vec,METHOD_NAME,token_wrong,0.4727,0.2856,12.9862,15.3586,"{'n_total': 648, 'n_valid': 76, 'n_correct': 42}",219.913284,"public InstanceList subList(double proportion) { if (proportion > 1.0) throw new IllegalArgumentException(""proportion must by <= 1.0""); InstanceList other = (InstanceList) clone(); other.shuffle(new java.util.Random()); proportion *= other.size(); for (int i = 0; i < proportion; i++) other.add(get(i)); return other; }","InstanceList subList(double proportion){if(proportion>0)("""");InstanceList other=(InstanceList)clone();other.shuffle(java());size();for(;;i++)(get);}","['public', 'InstanceList', 'subList', '(', 'double', 'proportion', ')', '{', 'if', '(', 'proportion', '>', '1.0', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""proportion must by <= 1.0""', ')', ';', 'InstanceList', 'other', '=', '(', 'InstanceList', ')', 'clone', '(', ')', ';', 'other', '.', 'shuffle', '(', 'new', 'java', '.', 'util', '.', 'Random', '(', ')', ')', ';', 'proportion', '*=', 'other', '.', 'size', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'proportion', ';', 'i', '++', ')', 'other', '.', 'add', '(', 'get', '(', 'i', ')', ')', ';', 'return', 'other', ';', '}']","['InstanceList', 'subList', '(', 'double', 'proportion', ')', '{', 'if', '(', 'proportion', '>', '0', ')', '(', '""""', ')', ';', 'InstanceList', 'other', '=', '(', 'InstanceList', ')', 'clone', '(', ')', ';', 'other', '.', 'shuffle', '(', 'java', '(', ')', ')', ';', 'size', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '(', 'get', ')', ';', '}']",81,52,6,319,148,13,55.88235294117647,38.666666666666664,,,,-1,-1,-1,-1,False
L325_getTopicSelectItems_1.txt,code2vec,METHOD_NAME,token_wrong,0.3765,0.3193,16.6574,15.766,"{'n_total': 665, 'n_valid': 68, 'n_correct': 53}",210.992767,"public List getTopicSelectItems() { List f = getTopics(); int num = (f == null) ? 0 : f.size(); List retSort = new ArrayList(); for (int i = 1; i <= num; i++) { Integer index = Integer.valueOf(i); retSort.add(new SelectItem(index, index.toString())); } return retSort; }",List getTopicSelectItems(){f();num=(null)?0:size();for(;;i++){(i);retSort((toString()));}},"['public', 'List', 'getTopicSelectItems', '(', ')', '{', 'List', 'f', '=', 'getTopics', '(', ')', ';', 'int', 'num', '=', '(', 'f', '==', 'null', ')', '?', '0', ':', 'f', '.', 'size', '(', ')', ';', 'List', 'retSort', '=', 'new', 'ArrayList', '(', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'num', ';', 'i', '++', ')', '{', 'Integer', 'index', '=', 'Integer', '.', 'valueOf', '(', 'i', ')', ';', 'retSort', '.', 'add', '(', 'new', 'SelectItem', '(', 'index', ',', 'index', '.', 'toString', '(', ')', ')', ')', ';', '}', 'return', 'retSort', ';', '}']","['List', 'getTopicSelectItems', '(', ')', '{', 'f', '(', ')', ';', 'num', '=', '(', 'null', ')', '?', '0', ':', 'size', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', 'i', ')', ';', 'retSort', '(', '(', 'toString', '(', ')', ')', ')', ';', '}', '}']",85,44,6,270,90,25,73.46938775510205,51.89873417721519,,,,-1,-1,-1,-1,False
L326_getSegmentResult_1.txt,code2vec,METHOD_NAME,token_wrong,0.2971,0.2026,16.2357,16.5739,"{'n_total': 265, 'n_valid': 44, 'n_correct': 22}",129.549625,"@Test public void getSegmentResult() throws Exception { String sentence = ""什么是球体和服装？一个伟大的国家，中国，电脑病毒会传染给人吗？""; List<Word> lists = Tokenizer.segment(sentence); System.out.println(lists); }","void getSegmentResult()throws Exception{String="""";List<Word>lists=Tokenizer.segment(sentence);Systemout.println();}","['@', 'Test', 'public', 'void', 'getSegmentResult', '(', ')', 'throws', 'Exception', '{', 'String', 'sentence', '=', '""什么是球体和服装？一个伟大的国家，中国，电脑病毒会传染给人吗？""', ';', 'List', '<', 'Word', '>', 'lists', '=', 'Tokenizer', '.', 'segment', '(', 'sentence', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'lists', ')', ';', '}']","['void', 'getSegmentResult', '(', ')', 'throws', 'Exception', '{', 'String', '=', '""""', ';', 'List', '<', 'Word', '>', 'lists', '=', 'Tokenizer', '.', 'segment', '(', 'sentence', ')', ';', 'Systemout', '.', 'println', '(', ')', ';', '}']",38,31,6,185,115,22,42.944785276073624,21.875,,,,-1,-1,-1,-1,False
L327_setUp_2.txt,code2vec,METHOD_NAME,token_wrong,0.2741,0.3294,1.5308,5.265,"{'n_total': 238, 'n_valid': 49, 'n_correct': 23}",134.851173,"@Before public void setUp() { fixed = Clock.fixed(Instant.EPOCH, ZoneOffset.UTC); BasicTimeService timeService = new BasicTimeService(); timeService.setUserLocaleService(userLocaleService); timeService.setUserTimeService(userTimeService); timeService.setClock(fixed); timeService.init(); this.timeService = timeService; }",void setUp(){fixed=setUserLocaleService(userLocaleService);timeService.setUserTimeService.setClock();},"['@', 'Before', 'public', 'void', 'setUp', '(', ')', '{', 'fixed', '=', 'Clock', '.', 'fixed', '(', 'Instant', '.', 'EPOCH', ',', 'ZoneOffset', '.', 'UTC', ')', ';', 'BasicTimeService', 'timeService', '=', 'new', 'BasicTimeService', '(', ')', ';', 'timeService', '.', 'setUserLocaleService', '(', 'userLocaleService', ')', ';', 'timeService', '.', 'setUserTimeService', '(', 'userTimeService', ')', ';', 'timeService', '.', 'setClock', '(', 'fixed', ')', ';', 'timeService', '.', 'init', '(', ')', ';', 'this', '.', 'timeService', '=', 'timeService', ';', '}']","['void', 'setUp', '(', ')', '{', 'fixed', '=', 'setUserLocaleService', '(', 'userLocaleService', ')', ';', 'timeService', '.', 'setUserTimeService', '.', 'setClock', '(', ')', ';', '}']",65,21,6,321,102,11,70.64516129032258,74.57627118644068,,,,-1,-1,-1,-1,False
L328_registerMediaProvider_1.txt,code2vec,METHOD_NAME,token_wrong,0.2291,0.2199,16.5233,16.8612,"{'n_total': 300, 'n_valid': 31, 'n_correct': 25}",89.569638,"public static void registerMediaProvider(IMediaProvider handler) { findCC(); if (computerCraft_registerMediaProvider != null) { try { computerCraft_registerMediaProvider.invoke(null, handler); } catch (Exception e) { } } }",void registerMediaProvider(IMediaProvider handler){findCC();if(null){try{(handler);}catch(Exception e){}}},"['public', 'static', 'void', 'registerMediaProvider', '(', 'IMediaProvider', 'handler', ')', '{', 'findCC', '(', ')', ';', 'if', '(', 'computerCraft_registerMediaProvider', '!=', 'null', ')', '{', 'try', '{', 'computerCraft_registerMediaProvider', '.', 'invoke', '(', 'null', ',', 'handler', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']","['void', 'registerMediaProvider', '(', 'IMediaProvider', 'handler', ')', '{', 'findCC', '(', ')', ';', 'if', '(', 'null', ')', '{', 'try', '{', '(', 'handler', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}']",41,32,6,222,106,27,59.48717948717949,25.71428571428571,,,,-1,-1,-1,-1,False
L329_process_1.txt,code2vec,METHOD_NAME,token_wrong,0.4144,0.2715,6.9408,6.398,"{'n_total': 391, 'n_valid': 47, 'n_correct': 29}",134.514154,"private void process(byte[] res, byte[] a, byte[] b) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }","void process(byte[]ab){for(;ilength;){res[i]=(byte)(a[i]^b[i]);}engine.processBlock(res,res,0);}","['private', 'void', 'process', '(', 'byte', '[', ']', 'res', ',', 'byte', '[', ']', 'a', ',', 'byte', '[', ']', 'b', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '!=', 'res', '.', 'length', ';', 'i', '++', ')', '{', 'res', '[', 'i', ']', '=', '(', 'byte', ')', '(', 'a', '[', 'i', ']', '^', 'b', '[', 'i', ']', ')', ';', '}', 'engine', '.', 'processBlock', '(', 'res', ',', '0', ',', 'res', ',', '0', ')', ';', '}']","['void', 'process', '(', 'byte', '[', ']', 'ab', ')', '{', 'for', '(', ';', 'ilength', ';', ')', '{', 'res', '[', 'i', ']', '=', '(', 'byte', ')', '(', 'a', '[', 'i', ']', '^', 'b', '[', 'i', ']', ')', ';', '}', 'engine', '.', 'processBlock', '(', 'res', ',', 'res', ',', '0', ')', ';', '}']",72,49,6,166,96,13,45.751633986928105,34.84848484848485,,,,-1,-1,-1,-1,False
L330_recordHasPart_1.txt,code2vec,METHOD_NAME,token_wrong,0.3675,0.4307,18.2067,18.3251,"{'n_total': 249, 'n_valid': 26, 'n_correct': 22}",83.736619,"private boolean recordHasPart(org.osid.shared.Id partStructureId, MatchItem item) { if (this.getPartPair(partStructureId, item) == null) { return false; } else { return true; } }","boolean recordHasPart(Id partStructureId,MatchItem item){if(getPartPair(partStructureId,item)==null){}{}}","['private', 'boolean', 'recordHasPart', '(', 'org', '.', 'osid', '.', 'shared', '.', 'Id', 'partStructureId', ',', 'MatchItem', 'item', ')', '{', 'if', '(', 'this', '.', 'getPartPair', '(', 'partStructureId', ',', 'item', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'true', ';', '}', '}']","['boolean', 'recordHasPart', '(', 'Id', 'partStructureId', ',', 'MatchItem', 'item', ')', '{', 'if', '(', 'getPartPair', '(', 'partStructureId', ',', 'item', ')', '==', 'null', ')', '{', '}', '{', '}', '}']",42,26,6,178,105,19,45.911949685534594,44.44444444444444,,,,-1,-1,-1,-1,False
L331_displayConnectionError_1.txt,code2vec,METHOD_NAME,token_wrong,0.9321,0.286,16.6715,16.5965,"{'n_total': 426, 'n_valid': 59, 'n_correct': 39}",165.402735,"private void displayConnectionError() { RegistrationActivity.this.runOnUiThread(new Runnable() { @Override public void run() { alertDialog = CommonDialogUtils.getAlertDialogWithOneButtonAndTitle(context, getResources().getString(R.string.title_head_connection_error), getResources().getString(R.string.error_internal_server), getResources().getString(R.string.button_ok), registrationFailedOKBtnClickListerner); } }); }","void displayConnectionError(){RegistrationActivity.runOnUiThread(new Runnable(){void run(){alertDialog=CommonDialogUtils(context(),(R)(R));}});}","['private', 'void', 'displayConnectionError', '(', ')', '{', 'RegistrationActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'alertDialog', '=', 'CommonDialogUtils', '.', 'getAlertDialogWithOneButtonAndTitle', '(', 'context', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'title_head_connection_error', ')', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'error_internal_server', ')', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'button_ok', ')', ',', 'registrationFailedOKBtnClickListerner', ')', ';', '}', '}', ')', ';', '}']","['void', 'displayConnectionError', '(', ')', '{', 'RegistrationActivity', '.', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', 'void', 'run', '(', ')', '{', 'alertDialog', '=', 'CommonDialogUtils', '(', 'context', '(', ')', ',', '(', 'R', ')', '(', 'R', ')', ')', ';', '}', '}', ')', ';', '}']",80,40,6,419,144,28,70.33248081841433,54.054054054054056,,,,-1,-1,-1,-1,False
L332_isMySignupEvents_1.txt,code2vec,METHOD_NAME,token_wrong,0.4989,0.9086,21.6969,25.4269,"{'n_total': 125, 'n_valid': 16, 'n_correct': 16}",44.678772,public boolean isMySignupEvents() { if (myStartTime != null && myEndTime != null) return true; else return false; },boolean isMySignupEvents(){(myStartTime);},"['public', 'boolean', 'isMySignupEvents', '(', ')', '{', 'if', '(', 'myStartTime', '!=', 'null', '&&', 'myEndTime', '!=', 'null', ')', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']","['boolean', 'isMySignupEvents', '(', ')', '{', '(', 'myStartTime', ')', ';', '}']",24,10,6,115,42,22,78.49462365591397,77.77777777777779,,,,-1,-1,-1,-1,False
L333_createRawValidator_6.txt,code2vec,METHOD_NAME,token_wrong,0.2508,0.1464,15.0183,14.1514,"{'n_total': 1536, 'n_valid': 376, 'n_correct': 186}",1078.885028,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001dcom.sun.msv.gra"" + ""mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000 com.sun.msv.gra"" + ""mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~"" + ""\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.ms"" + ""v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"" + ""tatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"" + ""xq\u0000~\u0000\u0004ppsr\u0000\""com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"" + ""*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"" + ""m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"" + ""v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lj"" + ""ava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"" + ""/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"" + ""1/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"" + ""ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"" + ""eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"" + ""on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.u"" + ""til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~"" + ""\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.gra"" + ""mmar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/"" + ""XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsilon"" + ""Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\f\u0001q\u0000~\u0000(sq\u0000~\u0000\""t\u0000\u001cRequireSigna"" + ""tureConfirmationt\u00009http://docs.oasis-open.org/ws-sx/ws-secur"" + ""itypolicy/200512sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Close"" + ""dHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0"" + ""N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gra"" + ""mmar/ExpressionPool;xp\u0000\u0000\u0000\u0001\u0001pq\u0000~\u0000\tx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com.DocumentDeclaration createRawValidator(){if(schemaFragment==null){schemaFragment=com.sun.deserialize((""uac""+""\00""+""fcontentModelt""+""msvLj""+""""+""mmar""+""u""+""tilgra""+""""+""cRequireSigna""+""tureConfirmationt""+""""));}(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1dcom.sun.msv.gra""', '+', '""mmar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00 com.sun.msv.gra""', '+', '""mmar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~""', '+', '""\x00\x04sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\x1bcom.sun.ms""', '+', '""v.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Da""', '+', '""tatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;""', '+', '""xq\x00~\x00\x04ppsr\x00\\""com.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00""', '+', '""*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%co""', '+', '""m.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.ms""', '+', '""v.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Lj""', '+', '""ava/lang/String;L\x00\\btypeNameq\x00~\x00\x16L\x00\\nwhiteSpacet\x00.Lcom/sun/msv""', '+', '""/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/200""', '+', '""1/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype.xsd.WhiteSpacePr""', '+', '""ocessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.Whit""', '+', '""eSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expressi""', '+', '""on$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\\rpsr\x00\x1bcom.sun.msv.u""', '+', '""til.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x16L\x00\\fnamespaceURIq\x00~""', '+', '""\x00\x16xpq\x00~\x00\x1aq\x00~\x00\x19sr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x16L\x00\\fnamespaceURIq\x00~\x00\x16xr\x00\x1dcom.sun.msv.gra""', '+', '""mmar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x04typet\x00)http://www.w3.org/2001/""', '+', '""XMLSchema-instancesr\x000com.sun.msv.grammar.Expression$Epsilon""', '+', '""Expression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\\f\x01q\x00~\x00(sq\x00~\x00\\""t\x00\x1cRequireSigna""', '+', '""tureConfirmationt\x009http://docs.oasis-open.org/ws-sx/ws-secur""', '+', '""itypolicy/200512sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/ExpressionPool$Close""', '+', '""dHash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$ClosedHash×jÐ""', '+', '""Nïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/gra""', '+', '""mmar/ExpressionPool;xp\x00\x00\x00\x01\x01pq\x00~\x00\\tx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'deserialize', '(', '(', '""uac""', '+', '""\\00""', '+', '""fcontentModelt""', '+', '""msvLj""', '+', '""""', '+', '""mmar""', '+', '""u""', '+', '""tilgra""', '+', '""""', '+', '""cRequireSigna""', '+', '""tureConfirmationt""', '+', '""""', ')', ')', ';', '}', '(', 'schemaFragment', ')', ';', '}']",127,55,6,4383,229,24,95.29708648772655,59.50413223140496,,,,-1,-1,-1,-1,False
L334_service_1.txt,code2vec,METHOD_NAME,token_wrong,0.5018,0.6215,0.8514,6.94,"{'n_total': 474, 'n_valid': 55, 'n_correct': 48}",155.123548,"@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(""text/html; charset="" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(""<!DOCTYPE HTML PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EN\"" \""http://www.w3.org/TR/html4/loose.dtd\"">""); writer.println(""<html><head><title>JSP Chat</title></head><body bgcolor=\""#FFFFFF\"">""); writer.println(""Chat example only supports Comet processing. ""); writer.println(""Configure a connector that supports Comet and try again.""); writer.println(""</body></html>""); }","void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{(""""+CHARSET);writer=("""");("""");("""");("""");}","['@', 'Override', 'protected', 'void', 'service', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'response', '.', 'setContentType', '(', '""text/html; charset=""', '+', 'CHARSET', ')', ';', 'PrintWriter', 'writer', '=', 'response', '.', 'getWriter', '(', ')', ';', 'writer', '.', 'println', '(', '""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.01 Transitional//EN\\"" \\""http://www.w3.org/TR/html4/loose.dtd\\"">""', ')', ';', 'writer', '.', 'println', '(', '""<html><head><title>JSP Chat</title></head><body bgcolor=\\""#FFFFFF\\"">""', ')', ';', 'writer', '.', 'println', '(', '""Chat example only supports Comet processing. ""', ')', ';', 'writer', '.', 'println', '(', '""Configure a connector that supports Comet and try again.""', ')', ';', 'writer', '.', 'println', '(', '""</body></html>""', ')', ';', '}']","['void', 'service', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'ServletException', '{', '(', '""""', '+', 'CHARSET', ')', ';', 'writer', '=', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '(', '""""', ')', ';', '}']",71,37,6,621,134,13,80.09868421052632,52.307692307692314,,,,-1,-1,-1,-1,False
L335_importData_1.txt,code2vec,METHOD_NAME,token_wrong,0.3657,0.3224,13.4996,12.7534,"{'n_total': 386, 'n_valid': 52, 'n_correct': 36}",154.432397,"public void importData(ThemeData data) { int i; for (i = 0; i < COLOR_COUNT; i++) setColor(i, data.colors[i]); for (i = 0; i < FONT_COUNT; i++) setFont(i, data.fonts[i]); }",void importData(ThemeData data){for(;;i++)setColor(data);for(;i<FONTCOUNT;)setFont(i[i]);},"['public', 'void', 'importData', '(', 'ThemeData', 'data', ')', '{', 'int', 'i', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'COLOR_COUNT', ';', 'i', '++', ')', 'setColor', '(', 'i', ',', 'data', '.', 'colors', '[', 'i', ']', ')', ';', 'for', '(', 'i', '=', '0', ';', 'i', '<', 'FONT_COUNT', ';', 'i', '++', ')', 'setFont', '(', 'i', ',', 'data', '.', 'fonts', '[', 'i', ']', ')', ';', '}']","['void', 'importData', '(', 'ThemeData', 'data', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', 'setColor', '(', 'data', ')', ';', 'for', '(', ';', 'i', '<', 'FONTCOUNT', ';', ')', 'setFont', '(', 'i', '[', 'i', ']', ')', ';', '}']",62,36,6,172,90,16,52.56410256410257,46.42857142857143,,,,-1,-1,-1,-1,False
L336_mergeTypes_1.txt,code2vec,METHOD_NAME,token_wrong,0.9838,0.9887,6.5146,6.9367,"{'n_total': 512, 'n_valid': 50, 'n_correct': 49}",149.958372,"public static PubApi mergeTypes(PubApi api1, PubApi api2) { Assert.check(api1.methods.isEmpty(), ""Can only merge types.""); Assert.check(api2.methods.isEmpty(), ""Can only merge types.""); Assert.check(api1.variables.isEmpty(), ""Can only merge types.""); Assert.check(api2.variables.isEmpty(), ""Can only merge types.""); PubApi merged = new PubApi(); merged.types.putAll(api1.types); merged.types.putAll(api2.types); return merged; }","PubApi mergeTypes(PubApi api){Assert(api(),"""").check(variables(),"""").check(isEmpty(),"""");putAll();}","['public', 'static', 'PubApi', 'mergeTypes', '(', 'PubApi', 'api1', ',', 'PubApi', 'api2', ')', '{', 'Assert', '.', 'check', '(', 'api1', '.', 'methods', '.', 'isEmpty', '(', ')', ',', '""Can only merge types.""', ')', ';', 'Assert', '.', 'check', '(', 'api2', '.', 'methods', '.', 'isEmpty', '(', ')', ',', '""Can only merge types.""', ')', ';', 'Assert', '.', 'check', '(', 'api1', '.', 'variables', '.', 'isEmpty', '(', ')', ',', '""Can only merge types.""', ')', ';', 'Assert', '.', 'check', '(', 'api2', '.', 'variables', '.', 'isEmpty', '(', ')', ',', '""Can only merge types.""', ')', ';', 'PubApi', 'merged', '=', 'new', 'PubApi', '(', ')', ';', 'merged', '.', 'types', '.', 'putAll', '(', 'api1', '.', 'types', ')', ';', 'merged', '.', 'types', '.', 'putAll', '(', 'api2', '.', 'types', ')', ';', 'return', 'merged', ';', '}']","['PubApi', 'mergeTypes', '(', 'PubApi', 'api', ')', '{', 'Assert', '(', 'api', '(', ')', ',', '""""', ')', '.', 'check', '(', 'variables', '(', ')', ',', '""""', ')', '.', 'check', '(', 'isEmpty', '(', ')', ',', '""""', ')', ';', 'putAll', '(', ')', ';', '}']",106,39,6,428,99,16,79.85436893203884,67.0,,,,-1,-1,-1,-1,False
L337_setSessions_1.txt,code2vec,METHOD_NAME,token_wrong,0.567,0.7981,3.5453,8.0575,"{'n_total': 209, 'n_valid': 25, 'n_correct': 22}",72.804117,public void setSessions(SessionList sessions) { mSessions = sessions; if (sessions != null) { sessions.addCallback(this); sessions.addTitleChangedListener(this); } else { onUpdate(); } },void setSessions(SessionList sessions){mSessions sessions;if(null){addCallback();}{}},"['public', 'void', 'setSessions', '(', 'SessionList', 'sessions', ')', '{', 'mSessions', '=', 'sessions', ';', 'if', '(', 'sessions', '!=', 'null', ')', '{', 'sessions', '.', 'addCallback', '(', 'this', ')', ';', 'sessions', '.', 'addTitleChangedListener', '(', 'this', ')', ';', '}', 'else', '{', 'onUpdate', '(', ')', ';', '}', '}']","['void', 'setSessions', '(', 'SessionList', 'sessions', ')', '{', 'mSessions', 'sessions', ';', 'if', '(', 'null', ')', '{', 'addCallback', '(', ')', ';', '}', '{', '}', '}']",42,23,6,186,85,17,59.76331360946746,52.77777777777778,,,,-1,-1,-1,-1,False
L338_createPageTitleModel_1.txt,code2vec,METHOD_NAME,token_wrong,0.3938,0.3855,13.7294,14.1454,"{'n_total': 246, 'n_valid': 29, 'n_correct': 23}",83.549172,"private void createPageTitleModel() { ptModel = new CCPageTitleModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/twoBtnsPageTitle.xml"")); ptModel.setValue(""button1"", ""button.create""); ptModel.setValue(""button2"", ""button.cancel""); }","void createPageTitleModel(){(getClass());setValue("""",""buttoncreate"","""");}","['private', 'void', 'createPageTitleModel', '(', ')', '{', 'ptModel', '=', 'new', 'CCPageTitleModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/twoBtnsPageTitle.xml""', ')', ')', ';', 'ptModel', '.', 'setValue', '(', '""button1""', ',', '""button.create""', ')', ';', 'ptModel', '.', 'setValue', '(', '""button2""', ',', '""button.cancel""', ')', ';', '}']","['void', 'createPageTitleModel', '(', ')', '{', '(', 'getClass', '(', ')', ')', ';', 'setValue', '(', '""""', ',', '""buttoncreate""', ',', '""""', ')', ';', '}']",44,21,6,261,73,26,80.0,60.526315789473685,,,,-1,-1,-1,-1,False
L339_getImportedRowCount_1.txt,code2vec,METHOD_NAME,token_wrong,0.276,0.2494,18.5807,18.5769,"{'n_total': 211, 'n_valid': 31, 'n_correct': 18}",96.959596,public long getImportedRowCount() { try { return writer.size() - _size; } catch (JournalException e) { throw new JournalRuntimeException(e); } },long getImportedRowCount(){try{return writer-size;}catch(JournalException e){throw new JournalRuntimeException(e);}},"['public', 'long', 'getImportedRowCount', '(', ')', '{', 'try', '{', 'return', 'writer', '.', 'size', '(', ')', '-', '_size', ';', '}', 'catch', '(', 'JournalException', 'e', ')', '{', 'throw', 'new', 'JournalRuntimeException', '(', 'e', ')', ';', '}', '}']","['long', 'getImportedRowCount', '(', ')', '{', 'try', '{', 'return', 'writer', '-', 'size', ';', '}', 'catch', '(', 'JournalException', 'e', ')', '{', 'throw', 'new', 'JournalRuntimeException', '(', 'e', ')', ';', '}', '}']",33,28,6,144,116,25,23.52941176470588,18.51851851851852,,,,-1,-1,-1,-1,False
L340_construct_1.txt,code2vec,METHOD_NAME,token_wrong,0.445,0.2255,15.542,15.5597,"{'n_total': 255, 'n_valid': 33, 'n_correct': 23}",94.731776,"@Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }",Query construct(LindenQuery config)throws IOException{if(isSetWildcardQuery()){return new WildcardQuery(Term());}},"['@', 'Override', 'protected', 'Query', 'construct', '(', 'LindenQuery', 'lindenQuery', ',', 'LindenConfig', 'config', ')', 'throws', 'IOException', '{', 'if', '(', 'lindenQuery', '.', 'isSetWildcardQuery', '(', ')', ')', '{', 'LindenWildcardQuery', 'lindenWildcardQuery', '=', 'lindenQuery', '.', 'getWildcardQuery', '(', ')', ';', 'return', 'new', 'WildcardQuery', '(', 'new', 'Term', '(', 'lindenWildcardQuery', '.', 'getField', '(', ')', ',', 'lindenWildcardQuery', '.', 'getQuery', '(', ')', ')', ')', ';', '}', 'return', 'null', ';', '}']","['Query', 'construct', '(', 'LindenQuery', 'config', ')', 'throws', 'IOException', '{', 'if', '(', 'isSetWildcardQuery', '(', ')', ')', '{', 'return', 'new', 'WildcardQuery', '(', 'Term', '(', ')', ')', ';', '}', '}']",59,27,6,333,114,15,68.86792452830188,60.37735849056604,,,,-1,-1,-1,-1,False
L341_testDefaultStrategies_1.txt,code2vec,METHOD_NAME,token_wrong,0.6849,0.8599,17.6934,18.16,"{'n_total': 254, 'n_valid': 28, 'n_correct': 23}",85.375939,"@Test public void testDefaultStrategies() throws ServletException { servlet.setContextClass(StaticWebApplicationContext.class); servlet.init(config); MessageDispatcher messageDispatcher = (MessageDispatcher) servlet.getMessageReceiver(); Assert.assertNotNull(""No messageDispatcher created"", messageDispatcher); }","void testDefaultStrategies()throws ServletException{(config);messageDispatcher();Assert("""",messageDispatcher);}","['@', 'Test', 'public', 'void', 'testDefaultStrategies', '(', ')', 'throws', 'ServletException', '{', 'servlet', '.', 'setContextClass', '(', 'StaticWebApplicationContext', '.', 'class', ')', ';', 'servlet', '.', 'init', '(', 'config', ')', ';', 'MessageDispatcher', 'messageDispatcher', '=', '(', 'MessageDispatcher', ')', 'servlet', '.', 'getMessageReceiver', '(', ')', ';', 'Assert', '.', 'assertNotNull', '(', '""No messageDispatcher created""', ',', 'messageDispatcher', ')', ';', '}']","['void', 'testDefaultStrategies', '(', ')', 'throws', 'ServletException', '{', '(', 'config', ')', ';', 'messageDispatcher', '(', ')', ';', 'Assert', '(', '""""', ',', 'messageDispatcher', ')', ';', '}']",48,23,6,312,111,27,70.52631578947368,59.523809523809526,,,,-1,-1,-1,-1,False
L342_getLong_1.txt,code2vec,METHOD_NAME,token_wrong,0.1236,0.1857,6.8291,8.7935,"{'n_total': 514, 'n_valid': 105, 'n_correct': 41}",304.064153,@Override public long getLong(Record rec) { long l = lhs.getInt(rec); long r = rhs.getLong(rec); return l == Integer.MIN_VALUE || r == Long.MIN_VALUE ? Long.MIN_VALUE : r + Dates.DAY_MILLIS * l; },long getLong(Record rec){(rec);r=rhs.getLong;return l=VALUE=VALUE?VALUE:r+Dates.DAYMILLIS*l;},"['@', 'Override', 'public', 'long', 'getLong', '(', 'Record', 'rec', ')', '{', 'long', 'l', '=', 'lhs', '.', 'getInt', '(', 'rec', ')', ';', 'long', 'r', '=', 'rhs', '.', 'getLong', '(', 'rec', ')', ';', 'return', 'l', '==', 'Integer', '.', 'MIN_VALUE', '||', 'r', '==', 'Long', '.', 'MIN_VALUE', '?', 'Long', '.', 'MIN_VALUE', ':', 'r', '+', 'Dates', '.', 'DAY_MILLIS', '*', 'l', ';', '}']","['long', 'getLong', '(', 'Record', 'rec', ')', '{', '(', 'rec', ')', ';', 'r', '=', 'rhs', '.', 'getLong', ';', 'return', 'l', '=', 'VALUE', '=', 'VALUE', '?', 'VALUE', ':', 'r', '+', 'Dates', '.', 'DAYMILLIS', '*', 'l', ';', '}']",56,35,6,196,93,13,56.284153005464475,42.0,,,,-1,-1,-1,-1,False
L343_nextPage_1.txt,code2vec,METHOD_NAME,token_wrong,0.5385,0.5611,6.1414,20.159,"{'n_total': 248, 'n_valid': 40, 'n_correct': 29}",118.724381,public void nextPage() { if (m_ascending) { this.firstItem = this.firstItem + m_pageSize; } else { this.firstItem = this.firstItem - m_pageSize; } setIndexes(); },void nextPage(){if(mascending){}{}},"['public', 'void', 'nextPage', '(', ')', '{', 'if', '(', 'm_ascending', ')', '{', 'this', '.', 'firstItem', '=', 'this', '.', 'firstItem', '+', 'm_pageSize', ';', '}', 'else', '{', 'this', '.', 'firstItem', '=', 'this', '.', 'firstItem', '-', 'm_pageSize', ';', '}', 'setIndexes', '(', ')', ';', '}']","['void', 'nextPage', '(', ')', '{', 'if', '(', 'mascending', ')', '{', '}', '{', '}', '}']",40,14,6,162,35,14,85.8108108108108,76.47058823529412,,,,-1,-1,-1,-1,False
L344_engineIsCertificateEntry_1.txt,code2vec,METHOD_NAME,token_wrong,0.5807,0.3272,6.3637,6.8709,"{'n_total': 261, 'n_valid': 28, 'n_correct': 23}",80.608913,public boolean engineIsCertificateEntry(String alias) { ObjectData ent = (ObjectData) entries.get(alias); if (ent != null) { return ent.getType().equals(CERTIFICATE); } return false; },boolean engineIsCertificateEntry(String alias){ent=(ObjectData)(alias);if(ent){}},"['public', 'boolean', 'engineIsCertificateEntry', '(', 'String', 'alias', ')', '{', 'ObjectData', 'ent', '=', '(', 'ObjectData', ')', 'entries', '.', 'get', '(', 'alias', ')', ';', 'if', '(', 'ent', '!=', 'null', ')', '{', 'return', 'ent', '.', 'getType', '(', ')', '.', 'equals', '(', 'CERTIFICATE', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'engineIsCertificateEntry', '(', 'String', 'alias', ')', '{', 'ent', '=', '(', 'ObjectData', ')', '(', 'alias', ')', ';', 'if', '(', 'ent', ')', '{', '}', '}']",45,23,6,184,81,30,66.88311688311688,56.41025641025641,,,,-1,-1,-1,-1,False
L345_createMiddleware_1.txt,code2vec,METHOD_NAME,token_wrong,0.2435,0.4806,15.5296,19.043,"{'n_total': 331, 'n_valid': 36, 'n_correct': 27}",101.857437,"private Middleware<State> createMiddleware(final String identifier) { return new Middleware<State>() { @Override public Object dispatch(Store<State> store, Dispatcher next, Object action) { callOrderResult.add(identifier); return next.dispatch(action); } }; }","Middleware<State>createMiddleware(String identifier){new Middleware(){dispatch(Store<State>store,Dispatcher action){(action);}};}","['private', 'Middleware', '<', 'State', '>', 'createMiddleware', '(', 'final', 'String', 'identifier', ')', '{', 'return', 'new', 'Middleware', '<', 'State', '>', '(', ')', '{', '@', 'Override', 'public', 'Object', 'dispatch', '(', 'Store', '<', 'State', '>', 'store', ',', 'Dispatcher', 'next', ',', 'Object', 'action', ')', '{', 'callOrderResult', '.', 'add', '(', 'identifier', ')', ';', 'return', 'next', '.', 'dispatch', '(', 'action', ')', ';', '}', '}', ';', '}']","['Middleware', '<', 'State', '>', 'createMiddleware', '(', 'String', 'identifier', ')', '{', 'new', 'Middleware', '(', ')', '{', 'dispatch', '(', 'Store', '<', 'State', '>', 'store', ',', 'Dispatcher', 'action', ')', '{', '(', 'action', ')', ';', '}', '}', ';', '}']",59,35,6,259,129,22,54.85232067510548,45.28301886792453,,,,-1,-1,-1,-1,False
L346_delete_2.txt,code2vec,METHOD_NAME,token_wrong,0.232,0.2733,8.8911,3.8089,"{'n_total': 334, 'n_valid': 35, 'n_correct': 27}",103.277395,"@Transactional(readOnly = false) public void delete(Site site, Boolean isRe) { site.setDelFlag(isRe != null && isRe ? Site.DEL_FLAG_NORMAL : Site.DEL_FLAG_DELETE); super.delete(site); CmsUtils.removeCache(""site_"" + site.getId()); CmsUtils.removeCache(""siteList""); }","@Transactional()void delete(Site site,Boolean isRe){(isRe?NORMAL:DELETE).delete();CmsUtils.removeCache("""");("""");}","['@', 'Transactional', '(', 'readOnly', '=', 'false', ')', 'public', 'void', 'delete', '(', 'Site', 'site', ',', 'Boolean', 'isRe', ')', '{', 'site', '.', 'setDelFlag', '(', 'isRe', '!=', 'null', '&&', 'isRe', '?', 'Site', '.', 'DEL_FLAG_NORMAL', ':', 'Site', '.', 'DEL_FLAG_DELETE', ')', ';', 'super', '.', 'delete', '(', 'site', ')', ';', 'CmsUtils', '.', 'removeCache', '(', '""site_""', '+', 'site', '.', 'getId', '(', ')', ')', ';', 'CmsUtils', '.', 'removeCache', '(', '""siteList""', ')', ';', '}']","['@', 'Transactional', '(', ')', 'void', 'delete', '(', 'Site', 'site', ',', 'Boolean', 'isRe', ')', '{', '(', 'isRe', '?', 'NORMAL', ':', 'DELETE', ')', '.', 'delete', '(', ')', ';', 'CmsUtils', '.', 'removeCache', '(', '""""', ')', ';', '(', '""""', ')', ';', '}']",65,38,6,265,113,12,60.079051383399204,45.76271186440678,,,,-1,-1,-1,-1,False
L347_testNosuffix_1.txt,code2vec,METHOD_NAME,token_wrong,0.9937,0.4447,21.6863,15.0102,"{'n_total': 159, 'n_valid': 18, 'n_correct': 12}",49.970659,"@Test public void testNosuffix() { Tester tester = new Tester(""göbek""); tester.assertHasParses(""göbek""); tester.assertUnParseable(""göbeğ""); }","void testNosuffix(){Tester(""göbek"").assertHasParses();tester(""göbeğ"");}","['@', 'Test', 'public', 'void', 'testNosuffix', '(', ')', '{', 'Tester', 'tester', '=', 'new', 'Tester', '(', '""göbek""', ')', ';', 'tester', '.', 'assertHasParses', '(', '""göbek""', ')', ';', 'tester', '.', 'assertUnParseable', '(', '""göbeğ""', ')', ';', '}']","['void', 'testNosuffix', '(', ')', '{', 'Tester', '(', '""göbek""', ')', '.', 'assertHasParses', '(', ')', ';', 'tester', '(', '""göbeğ""', ')', ';', '}']",32,20,6,141,71,18,56.91056910569105,46.15384615384615,,,,-1,-1,-1,-1,False
L348_createStdBuilder_1.txt,code2vec,METHOD_NAME,token_wrong,0.5626,0.5153,18.0932,17.5128,"{'n_total': 424, 'n_valid': 50, 'n_correct': 42}",147.784723,"private X500NameBuilder createStdBuilder() { X500NameBuilder builder = new X500NameBuilder(BCStyle.INSTANCE); builder.addRDN(BCStyle.C, ""AU""); builder.addRDN(BCStyle.O, ""The Legion of the Bouncy Castle""); builder.addRDN(BCStyle.L, ""Melbourne""); builder.addRDN(BCStyle.ST, ""Victoria""); builder.addRDN(BCStyle.E, ""feedback-crypto@bouncycastle.org""); return builder; }","XNameBuilder createStdBuilder(){("""");builder(BCStyle,"""");addRDN();builder(BCStyle,"""");}","['private', 'X500NameBuilder', 'createStdBuilder', '(', ')', '{', 'X500NameBuilder', 'builder', '=', 'new', 'X500NameBuilder', '(', 'BCStyle', '.', 'INSTANCE', ')', ';', 'builder', '.', 'addRDN', '(', 'BCStyle', '.', 'C', ',', '""AU""', ')', ';', 'builder', '.', 'addRDN', '(', 'BCStyle', '.', 'O', ',', '""The Legion of the Bouncy Castle""', ')', ';', 'builder', '.', 'addRDN', '(', 'BCStyle', '.', 'L', ',', '""Melbourne""', ')', ';', 'builder', '.', 'addRDN', '(', 'BCStyle', '.', 'ST', ',', '""Victoria""', ')', ';', 'builder', '.', 'addRDN', '(', 'BCStyle', '.', 'E', ',', '""feedback-crypto@bouncycastle.org""', ')', ';', 'return', 'builder', ';', '}']","['XNameBuilder', 'createStdBuilder', '(', ')', '{', '(', '""""', ')', ';', 'builder', '(', 'BCStyle', ',', '""""', ')', ';', 'addRDN', '(', ')', ';', 'builder', '(', 'BCStyle', ',', '""""', ')', ';', '}']",76,28,6,365,87,22,81.04956268221575,68.57142857142857,,,,-1,-1,-1,-1,False
L349_transform_1.txt,code2vec,METHOD_NAME,token_wrong,0.5954,0.5094,20.8547,20.9525,"{'n_total': 471, 'n_valid': 40, 'n_correct': 35}",123.490283,"@Override public Map<String, String> transform(Set<String> values, Class<?> parameterType) { Map<String, String> localeStrings = new HashMap<>(); for (String value : values) { String[] parts = value.split(""\\|""); localeStrings.put(parts[0], parts[1]); } return localeStrings; }","Map<String>transform(Set<String>parameterType){Map<String>localeStrings=new HashMap<>();for(String value:values){("""");localeStrings(parts[0],parts[1]);}return localeStrings;}","['@', 'Override', 'public', 'Map', '<', 'String', ',', 'String', '>', 'transform', '(', 'Set', '<', 'String', '>', 'values', ',', 'Class', '<', '?', '>', 'parameterType', ')', '{', 'Map', '<', 'String', ',', 'String', '>', 'localeStrings', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'value', ':', 'values', ')', '{', 'String', '[', ']', 'parts', '=', 'value', '.', 'split', '(', '""\\\\|""', ')', ';', 'localeStrings', '.', 'put', '(', 'parts', '[', '0', ']', ',', 'parts', '[', '1', ']', ')', ';', '}', 'return', 'localeStrings', ';', '}']","['Map', '<', 'String', '>', 'transform', '(', 'Set', '<', 'String', '>', 'parameterType', ')', '{', 'Map', '<', 'String', '>', 'localeStrings', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'value', ':', 'values', ')', '{', '(', '""""', ')', ';', 'localeStrings', '(', 'parts', '[', '0', ']', ',', 'parts', '[', '1', ']', ')', ';', '}', 'return', 'localeStrings', ';', '}']",79,56,6,277,174,15,39.31297709923664,31.506849315068493,,,,-1,-1,-1,-1,False
L350_checkResult_1.txt,code2vec,METHOD_NAME,token_wrong,0.4811,0.4373,13.1707,12.5626,"{'n_total': 284, 'n_valid': 21, 'n_correct': 20}",63.675501,"private void checkResult(boolean expectFailure, Promise<?, ResourceException> promise) { if (expectFailure) { assertThat(promise).failedWithException().isInstanceOf(NotSupportedException.class); } else { assertThat(promise).succeeded(); } }","void checkResult(boolean expectFailure,Promise<?,ResourceException>promise){if(expectFailure){(promise).isInstanceOf();}{(promise).succeeded();}}","['private', 'void', 'checkResult', '(', 'boolean', 'expectFailure', ',', 'Promise', '<', '?', ',', 'ResourceException', '>', 'promise', ')', '{', 'if', '(', 'expectFailure', ')', '{', 'assertThat', '(', 'promise', ')', '.', 'failedWithException', '(', ')', '.', 'isInstanceOf', '(', 'NotSupportedException', '.', 'class', ')', ';', '}', 'else', '{', 'assertThat', '(', 'promise', ')', '.', 'succeeded', '(', ')', ';', '}', '}']","['void', 'checkResult', '(', 'boolean', 'expectFailure', ',', 'Promise', '<', '?', ',', 'ResourceException', '>', 'promise', ')', '{', 'if', '(', 'expectFailure', ')', '{', '(', 'promise', ')', '.', 'isInstanceOf', '(', ')', ';', '}', '{', '(', 'promise', ')', '.', 'succeeded', '(', ')', ';', '}', '}']",51,40,6,240,145,17,42.600896860986545,24.444444444444443,,,,-1,-1,-1,-1,False
L351_addAcademicSession_1.txt,code2vec,METHOD_NAME,token_wrong,0.9406,0.9758,19.3286,20.7689,"{'n_total': 407, 'n_valid': 31, 'n_correct': 30}",88.540166,"protected void addAcademicSession(Element element) { String eid = element.getChildText(""eid""); if (log.isDebugEnabled()) log.debug(""Adding AcademicSession + "" + eid); String title = element.getChildText(""title""); String description = element.getChildText(""description""); Date startDate = getDate(element.getChildText(""start-date"")); Date endDate = getDate(element.getChildText(""end-date"")); cmAdmin.createAcademicSession(eid, title, description, startDate, endDate); }","void addAcademicSession(Element element){("""");if(isDebugEnabled())((""""));(getChildText());(eid);}","['protected', 'void', 'addAcademicSession', '(', 'Element', 'element', ')', '{', 'String', 'eid', '=', 'element', '.', 'getChildText', '(', '""eid""', ')', ';', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""Adding AcademicSession + ""', '+', 'eid', ')', ';', 'String', 'title', '=', 'element', '.', 'getChildText', '(', '""title""', ')', ';', 'String', 'description', '=', 'element', '.', 'getChildText', '(', '""description""', ')', ';', 'Date', 'startDate', '=', 'getDate', '(', 'element', '.', 'getChildText', '(', '""start-date""', ')', ')', ';', 'Date', 'endDate', '=', 'getDate', '(', 'element', '.', 'getChildText', '(', '""end-date""', ')', ')', ';', 'cmAdmin', '.', 'createAcademicSession', '(', 'eid', ',', 'title', ',', 'description', ',', 'startDate', ',', 'endDate', ')', ';', '}']","['void', 'addAcademicSession', '(', 'Element', 'element', ')', '{', '(', '""""', ')', ';', 'if', '(', 'isDebugEnabled', '(', ')', ')', '(', '(', '""""', ')', ')', ';', '(', 'getChildText', '(', ')', ')', ';', '(', 'eid', ')', ';', '}']",97,34,6,468,97,24,83.55855855855856,69.23076923076923,,,,-1,-1,-1,-1,False
L352_getTrackedResources_1.txt,code2vec,METHOD_NAME,token_wrong,0.6373,0.4018,17.4531,17.5522,"{'n_total': 329, 'n_valid': 29, 'n_correct': 19}",86.305682,public List<String> getTrackedResources() { List<String> result = new ArrayList<>(trackedResources.size()); for (TrackedWebResource resource : trackedResources) { result.add(resource.toString()); } return result; },List<String>getTrackedResources(){List<String>result=new ArrayList<>(size());for(TrackedWebResource resource:trackedResources){add(resource.toString());}return result;},"['public', 'List', '<', 'String', '>', 'getTrackedResources', '(', ')', '{', 'List', '<', 'String', '>', 'result', '=', 'new', 'ArrayList', '<', '>', '(', 'trackedResources', '.', 'size', '(', ')', ')', ';', 'for', '(', 'TrackedWebResource', 'resource', ':', 'trackedResources', ')', '{', 'result', '.', 'add', '(', 'resource', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', ';', '}']","['List', '<', 'String', '>', 'getTrackedResources', '(', ')', '{', 'List', '<', 'String', '>', 'result', '=', 'new', 'ArrayList', '<', '>', '(', 'size', '(', ')', ')', ';', 'for', '(', 'TrackedWebResource', 'resource', ':', 'trackedResources', ')', '{', 'add', '(', 'resource', '.', 'toString', '(', ')', ')', ';', '}', 'return', 'result', ';', '}']",51,46,6,214,168,25,24.33862433862434,11.11111111111111,,,,-1,-1,-1,-1,False
L353_createRawValidator_7.txt,code2vec,METHOD_NAME,token_wrong,0.3207,0.1328,16.4854,15.0383,"{'n_total': 4900, 'n_valid': 1837, 'n_correct': 679}",5174.446531,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""q\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bpps"" + ""q\u0000~\u0000\rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0011"" + ""p\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"" + ""\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~"" + ""\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"" + ""\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Expres"" + ""sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001asr\u0000 com"" + "".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"" + ""mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"" + ""$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv"" + "".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"" + ""/String;L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001dt\u00005com.sun.identity.wsfede"" + ""ration.jaxb.wsu.CreatedElementt\u0000+http://java.sun.com/jaxb/xj"" + ""c/dummy-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014"" + ""q\u0000~\u0000\u0011psq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00009com.sun.identity.w"" + ""sfederation.jaxb.wsu.AttributedDateTimeq\u0000~\u0000%sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000"" + ""~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"" + ""elaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/ms"" + ""v/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\""com.sun.msv.datatype.xsd.Qname"" + ""Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"" + ""\fnamespaceUriq\u0000~\u0000\""L\u0000\btypeNameq\u0000~\u0000\""L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"" + ""sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"" + ""001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"" + ""Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"" + ""iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"" + ""sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv"" + "".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq"" + ""\u0000~\u0000\""xpq\u0000~\u0000;q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSc"" + ""hema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0007Createdt\u0000Rhttp://docs.oasis-open."" + ""org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsdq"" + ""\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000"" + ""~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00005com.sun.identity.wsfederati"" + ""on.jaxb.wsu.ExpiresElementq\u0000~\u0000%sq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp"" + ""\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000-q"" + ""\u0000~\u0000%sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0007Expiresq\u0000~\u0000H"" + ""q\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0017ppq\u0000~\u0000\u001asr\u0000\'com.s"" + ""un.msv.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003n"" + ""c2q\u0000~\u0000\u0001xq\u0000~\u0000\u001dq\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.ChoiceNameClass\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003nc2q\u0000~\u0000\u0001xq\u0000~\u0000\u001dsr\u0000&com.sun.msv.grammar."" + ""NamespaceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001dt\u0000\u0000sq"" + ""\u0000~\u0000dq\u0000~\u0000Hsq\u0000~\u0000dq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u00000ppsr\u0000\u001fcom"" + "".sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"" + ""ype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\""com.sun.msv.datatype.xsd.To"" + ""kenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00005q\u0000~\u0000:t\u0000\u0002IDq\u0000~\u0000>\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~"" + ""\u0000qq\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0002Idq\u0000~\u0000Hq\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u00003q\u0000~\u0000Cq\u0000"" + ""~\u0000 sq\u0000~\u0000!t\u0000\tTimestampq\u0000~\u0000Hsr\u0000\""com.sun.msv.grammar.Expression"" + ""Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"" + ""Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"" + ""sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"" + ""un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0018\u0001pq\u0000~\u0000\'q\u0000~\u0000Rq\u0000~\u0000.q\u0000~\u0000Xq\u0000"" + ""~\u0000iq\u0000~\u0000uq\u0000~\u0000\tq\u0000~\u0000\u0013q\u0000~\u0000)q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000\\q\u0000~\u0000]q\u0000~\u0000\u0016q\u0000~\u0000*q\u0000~\u0000Mq\u0000"" + ""~\u0000Uq\u0000~\u0000\u000bq\u0000~\u0000\nq\u0000~\u0000\fq\u0000~\u0000\u000eq\u0000~\u0000Iq\u0000~\u0000\u000fq\u0000~\u0000Jx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msvverifier createRawValidator(){if(schemaFragment){((""""+""""+""""+""""+""Lj""+""ava""+""mmar""+""""+""Expression""+""""+"".""+""jaxbxj""+""""+""""+""""+""""+""""+""xsdWhiteSpace""+""""+""un""+""\u0000000""+""0""+""""));}returncom();}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""q\x00~\x00\x07ppsr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bpps""', '+', '""q\x00~\x00\\rsr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psq\x00~\x00\x00q\x00~\x00\x11""', '+', '""p\x00sq\x00~\x00\\rppsr\x00 com.sun.msv.grammar.OneOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00""', '+', '""\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04q\x00~""', '+', '""\x00\x11psr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00""', '+', '""\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x11psr\x002com.sun.msv.grammar.Expres""', '+', '""sion$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x10\x01q\x00~\x00\x1asr\x00 com""', '+', '"".sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.gram""', '+', '""mar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expression""', '+', '""$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x1bq\x00~\x00 sr\x00#com.sun.msv""', '+', '"".grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang""', '+', '""/String;L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1dt\x005com.sun.identity.wsfede""', '+', '""ration.jaxb.wsu.CreatedElementt\x00+http://java.sun.com/jaxb/xj""', '+', '""c/dummy-elementssq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\rppsq\x00~\x00\x14""', '+', '""q\x00~\x00\x11psq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!t\x009com.sun.identity.w""', '+', '""sfederation.jaxb.wsu.AttributedDateTimeq\x00~\x00%sq\x00~\x00\\rppsq\x00~\x00\x17q\x00""', '+', '""~\x00\x11psr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/r""', '+', '""elaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/ms""', '+', '""v/util/StringPair;xq\x00~\x00\x04ppsr\x00\\""com.sun.msv.datatype.xsd.Qname""', '+', '""Type\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00""', '+', '""\\fnamespaceUriq\x00~\x00\\""L\x00\\btypeNameq\x00~\x00\\""L\x00\\nwhiteSpacet\x00.Lcom/sun/m""', '+', '""sv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2""', '+', '""001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype.xsd.WhiteSpace""', '+', '""Processor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.Wh""', '+', '""iteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expres""', '+', '""sion$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x11psr\x00\x1bcom.sun.msv""', '+', '"".util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq""', '+', '""\x00~\x00\\""xpq\x00~\x00;q\x00~\x00:sq\x00~\x00!t\x00\x04typet\x00)http://www.w3.org/2001/XMLSc""', '+', '""hema-instanceq\x00~\x00 sq\x00~\x00!t\x00\x07Createdt\x00Rhttp://docs.oasis-open.""', '+', '""org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsdq""', '+', '""\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\\rq\x00~\x00\x11psq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00""', '+', '""~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!t\x005com.sun.identity.wsfederati""', '+', '""on.jaxb.wsu.ExpiresElementq\x00~\x00%sq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp""', '+', '""\x00sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!q\x00~\x00-q""', '+', '""\x00~\x00%sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x003q\x00~\x00Cq\x00~\x00 sq\x00~\x00!t\x00\x07Expiresq\x00~\x00H""', '+', '""q\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x17ppq\x00~\x00\x1asr\x00\\\'com.s""', '+', '""un.msv.grammar.DifferenceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01L\x00\x03n""', '+', '""c2q\x00~\x00\x01xq\x00~\x00\x1dq\x00~\x00\x1esr\x00#com.sun.msv.grammar.ChoiceNameClass\x00\x00\x00""', '+', '""\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01L\x00\x03nc2q\x00~\x00\x01xq\x00~\x00\x1dsr\x00&com.sun.msv.grammar.""', '+', '""NamespaceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1dt\x00\x00sq""', '+', '""\x00~\x00dq\x00~\x00Hsq\x00~\x00dq\x00~\x00%q\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11psq\x00~\x000ppsr\x00\x1fcom""', '+', '"".sun.msv.datatype.xsd.IDType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datat""', '+', '""ype.xsd.NcnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\""com.sun.msv.datatype.xsd.To""', '+', '""kenType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datatype.xsd.StringType\x00\x00\x00""', '+', '""\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxq\x00~\x005q\x00~\x00:t\x00\x02IDq\x00~\x00>\x00q\x00~\x00@sq\x00~\x00Aq\x00~""', '+', '""\x00qq\x00~\x00:sq\x00~\x00!t\x00\x02Idq\x00~\x00Hq\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x003q\x00~\x00Cq\x00""', '+', '""~\x00 sq\x00~\x00!t\x00\\tTimestampq\x00~\x00Hsr\x00\\""com.sun.msv.grammar.Expression""', '+', '""Pool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/Expression""', '+', '""Pool$ClosedHash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$Clo""', '+', '""sedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/s""', '+', '""un/msv/grammar/ExpressionPool;xp\x00\x00\x00\x18\x01pq\x00~\x00\\\'q\x00~\x00Rq\x00~\x00.q\x00~\x00Xq\x00""', '+', '""~\x00iq\x00~\x00uq\x00~\x00\\tq\x00~\x00\x13q\x00~\x00)q\x00~\x00Lq\x00~\x00Tq\x00~\x00\\\\q\x00~\x00]q\x00~\x00\x16q\x00~\x00*q\x00~\x00Mq\x00""', '+', '""~\x00Uq\x00~\x00\x0bq\x00~\x00\\nq\x00~\x00\\fq\x00~\x00\x0eq\x00~\x00Iq\x00~\x00\x0fq\x00~\x00Jx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msvverifier', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""Lj""', '+', '""ava""', '+', '""mmar""', '+', '""""', '+', '""Expression""', '+', '""""', '+', '"".""', '+', '""jaxbxj""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""xsdWhiteSpace""', '+', '""""', '+', '""un""', '+', '""\x00000""', '+', '""0""', '+', '""""', ')', ')', ';', '}', 'returncom', '(', ')', ';', '}']",185,66,6,8928,190,24,98.13566936208446,66.4804469273743,,,,-1,-1,-1,-1,False
L354_processClientKeyExchange_1.txt,code2vec,METHOD_NAME,token_wrong,0.3412,0.3337,16.1816,16.7541,"{'n_total': 434, 'n_valid': 58, 'n_correct': 30}",174.053883,"public void processClientKeyExchange(InputStream input) throws IOException { try { this.srpPeerCredentials = SRP6Util.validatePublicValue(srpGroup.getN(), TlsSRPUtils.readSRPParameter(input)); } catch (CryptoException e) { throw new TlsFatalAlert(AlertDescription.illegal_parameter, e); } context.getSecurityParameters().srpIdentity = Arrays.clone(identity); }",void processClientKeyExchange(InputStream input)throws IOException{try{validatePublicValue(readSRPParameter(input));}catch(CryptoException e){new TlsFatalAlert(AlertDescription.illegalparameter);}context=Arrays(identity);},"['public', 'void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'try', '{', 'this', '.', 'srpPeerCredentials', '=', 'SRP6Util', '.', 'validatePublicValue', '(', 'srpGroup', '.', 'getN', '(', ')', ',', 'TlsSRPUtils', '.', 'readSRPParameter', '(', 'input', ')', ')', ';', '}', 'catch', '(', 'CryptoException', 'e', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'illegal_parameter', ',', 'e', ')', ';', '}', 'context', '.', 'getSecurityParameters', '(', ')', '.', 'srpIdentity', '=', 'Arrays', '.', 'clone', '(', 'identity', ')', ';', '}']","['void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'try', '{', 'validatePublicValue', '(', 'readSRPParameter', '(', 'input', ')', ')', ';', '}', 'catch', '(', 'CryptoException', 'e', ')', '{', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'illegalparameter', ')', ';', '}', 'context', '=', 'Arrays', '(', 'identity', ')', ';', '}']",69,43,6,360,222,30,41.81818181818181,41.269841269841265,,,,-1,-1,-1,-1,False
L355_checkNonPredefined_1.txt,code2vec,METHOD_NAME,token_wrong,0.4482,0.3418,16.5402,16.5391,"{'n_total': 404, 'n_valid': 42, 'n_correct': 30}",120.53225,"private void checkNonPredefined(TypeOfBiometricData type, ASN1ObjectIdentifier value) { if (type.isPredefined()) { fail(""predefined type found when not expected.""); } if (!type.getBiometricDataOid().equals(value)) { fail(""data oid does not match.""); } }","void checkNonPredefined(TypeOfBiometricData type,ASN value){if(type()){fail(""predefined"");}if(getBiometricDataOid().equals){fail(""not"");}}","['private', 'void', 'checkNonPredefined', '(', 'TypeOfBiometricData', 'type', ',', 'ASN1ObjectIdentifier', 'value', ')', '{', 'if', '(', 'type', '.', 'isPredefined', '(', ')', ')', '{', 'fail', '(', '""predefined type found when not expected.""', ')', ';', '}', 'if', '(', '!', 'type', '.', 'getBiometricDataOid', '(', ')', '.', 'equals', '(', 'value', ')', ')', '{', 'fail', '(', '""data oid does not match.""', ')', ';', '}', '}']","['void', 'checkNonPredefined', '(', 'TypeOfBiometricData', 'type', ',', 'ASN', 'value', ')', '{', 'if', '(', 'type', '(', ')', ')', '{', 'fail', '(', '""predefined""', ')', ';', '}', 'if', '(', 'getBiometricDataOid', '(', ')', '.', 'equals', ')', '{', 'fail', '(', '""not""', ')', ';', '}', '}']",48,39,6,253,138,24,50.21834061135371,21.428571428571427,,,,-1,-1,-1,-1,False
L356_createRawValidator_8.txt,code2vec,METHOD_NAME,token_wrong,0.2789,0.1658,14.7527,14.7325,"{'n_total': 1665, 'n_valid': 369, 'n_correct': 191}",1002.098916,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "" + ""Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"" + ""grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"" + ""\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"" + ""pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"" + ""Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"" + ""sun/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"" + ""\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com"" + "".sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceU"" + ""rit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0010L\u0000\nwhiteSpacet\u0000.Lcom/"" + ""sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."" + ""org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.Whit"" + ""eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."" + ""xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar."" + ""Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000\u001bcom.s"" + ""un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespa"" + ""ceURIq\u0000~\u0000\u0010xpq\u0000~\u0000\u0014q\u0000~\u0000\u0013sr\u0000#com.sun.msv.grammar.SimpleNameClas"" + ""s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespaceURIq\u0000~\u0000\u0010xr\u0000\u001dcom.sun"" + "".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0015governingAgreementReft"" + ""\u0000\u0000sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"" + ""let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"" + ""m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"" + ""ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"" + ""nPool;xp\u0000\u0000\u0000\u0000\u0001px"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","DocumentDeclaration createRawValidator(){if(schemaFragment){((""""+""""+""""+""bexpandedEx""+""f""+""""+""""+""""+"".""+""""+""""+""""+""""+""""+"".""+""bexpTab""+""letcou""+""Expressio""+""nPool""));}regexp(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expt\x00 ""', '+', '""Lcom/sun/msv/grammar/Expression;L\x00\\tnameClasst\x00\x1fLcom/sun/msv/""', '+', '""grammar/NameClass;xr\x00\x1ecom.sun.msv.grammar.Expressionø\x18\x82èN5~O""', '+', '""\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0bexpandedEx""', '+', '""pq\x00~\x00\x01xpppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1f""', '+', '""Lorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x01L\x00\x04namet\x00\x1dLcom/""', '+', '""sun/msv/util/StringPair;xq\x00~\x00\x03sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02""', '+', '""\x00\x01Z\x00\x05valuexp\x00psr\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com""', '+', '"".sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceU""', '+', '""rit\x00\x12Ljava/lang/String;L\x00\\btypeNameq\x00~\x00\x10L\x00\\nwhiteSpacet\x00.Lcom/""', '+', '""sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.""', '+', '""org/2001/XMLSchemat\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.Whit""', '+', '""eSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.""', '+', '""xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.""', '+', '""Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x0bpsr\x00\x1bcom.s""', '+', '""un.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x10L\x00\\fnamespa""', '+', '""ceURIq\x00~\x00\x10xpq\x00~\x00\x14q\x00~\x00\x13sr\x00#com.sun.msv.grammar.SimpleNameClas""', '+', '""s\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x10L\x00\\fnamespaceURIq\x00~\x00\x10xr\x00\x1dcom.sun""', '+', '"".msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x15governingAgreementReft""', '+', '""\x00\x00sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTab""', '+', '""let\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-co""', '+', '""m.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05cou""', '+', '""ntB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressio""', '+', '""nPool;xp\x00\x00\x00\x00\x01px""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""""', '+', '""""', '+', '""bexpandedEx""', '+', '""f""', '+', '""""', '+', '""""', '+', '""""', '+', '"".""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '"".""', '+', '""bexpTab""', '+', '""letcou""', '+', '""Expressio""', '+', '""nPool""', ')', ')', ';', '}', 'regexp', '(', 'schemaFragment', ')', ';', '}']",111,59,6,3321,187,24,95.05611161662118,49.523809523809526,,,,-1,-1,-1,-1,False
L357_createPropertyModel_3.txt,code2vec,METHOD_NAME,token_wrong,0.2937,0.3064,15.1527,17.067,"{'n_total': 383, 'n_valid': 55, 'n_correct': 32}",157.548412,"private void createPropertyModel() { RMRealmModel model = (RMRealmModel) getModel(); try { propertySheetModel = new AMPropertySheetModel(model.getCreateRealmPropertyXML()); propertySheetModel.clear(); } catch (AMConsoleException e) { setInlineAlertMessage(CCAlert.TYPE_ERROR, ""message.error"", e.getMessage()); } }","void createPropertyModel(){RMRealmModel=(RMRealmModel)getModel();try{propertySheetModel();}catch(AMConsoleException e){setInlineAlertMessage(CCAlert.ERROR,""messageerror"",e);}}","['private', 'void', 'createPropertyModel', '(', ')', '{', 'RMRealmModel', 'model', '=', '(', 'RMRealmModel', ')', 'getModel', '(', ')', ';', 'try', '{', 'propertySheetModel', '=', 'new', 'AMPropertySheetModel', '(', 'model', '.', 'getCreateRealmPropertyXML', '(', ')', ')', ';', 'propertySheetModel', '.', 'clear', '(', ')', ';', '}', 'catch', '(', 'AMConsoleException', 'e', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'TYPE_ERROR', ',', '""message.error""', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['void', 'createPropertyModel', '(', ')', '{', 'RMRealmModel', '=', '(', 'RMRealmModel', ')', 'getModel', '(', ')', ';', 'try', '{', 'propertySheetModel', '(', ')', ';', '}', 'catch', '(', 'AMConsoleException', 'e', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'ERROR', ',', '""messageerror""', ',', 'e', ')', ';', '}', '}']",60,40,6,313,175,25,47.91666666666667,37.03703703703704,,,,-1,-1,-1,-1,False
L358_setActions_1.txt,code2vec,METHOD_NAME,token_wrong,0.2924,0.409,10.0245,12.1805,"{'n_total': 164, 'n_valid': 18, 'n_correct': 10}",50.593708,public void setActions(HumanActionOptions options) { getChildren().removeAll(existingButtons); existingButtons.clear(); Collection<Node> buttons = createActionButtons(options); existingButtons.addAll(buttons); getChildren().addAll(buttons); setVisible(true); },void setActions(HumanActionOptions options){getChildren().getChildren().addAll(buttons);setVisible();},"['public', 'void', 'setActions', '(', 'HumanActionOptions', 'options', ')', '{', 'getChildren', '(', ')', '.', 'removeAll', '(', 'existingButtons', ')', ';', 'existingButtons', '.', 'clear', '(', ')', ';', 'Collection', '<', 'Node', '>', 'buttons', '=', 'createActionButtons', '(', 'options', ')', ';', 'existingButtons', '.', 'addAll', '(', 'buttons', ')', ';', 'getChildren', '(', ')', '.', 'addAll', '(', 'buttons', ')', ';', 'setVisible', '(', 'true', ')', ';', '}']","['void', 'setActions', '(', 'HumanActionOptions', 'options', ')', '{', 'getChildren', '(', ')', '.', 'getChildren', '(', ')', '.', 'addAll', '(', 'buttons', ')', ';', 'setVisible', '(', ')', ';', '}']",56,25,6,260,102,16,64.75409836065575,62.0,,,,-1,-1,-1,-1,False
L359_getAllSignupMeetings_1.txt,code2vec,METHOD_NAME,token_wrong,0.3585,0.1675,16.1763,15.2994,"{'n_total': 526, 'n_valid': 86, 'n_correct': 45}",241.461071,"public List<SignupMeetingWrapper> getAllSignupMeetings() { try { loadMeetings(VIEW_ALL, null); } catch (Exception e) { log.error(Utilities.rb.getString(""failed.fetch_allEvents_from_db"") + "" - "" + e.getMessage()); Utilities.addErrorMessage(Utilities.rb.getString(""failed.fetch_allEvents_from_db"")); } return signupMeetings; }","List<SignupMeetingWrapper>getAllSignupMeetings(){try{loadMeetings(null);}catch(Exception e){error(("""")+""""+e);Utilities(Utilities(""faileddb""));}}","['public', 'List', '<', 'SignupMeetingWrapper', '>', 'getAllSignupMeetings', '(', ')', '{', 'try', '{', 'loadMeetings', '(', 'VIEW_ALL', ',', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'Utilities', '.', 'rb', '.', 'getString', '(', '""failed.fetch_allEvents_from_db""', ')', '+', '"" - ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'Utilities', '.', 'addErrorMessage', '(', 'Utilities', '.', 'rb', '.', 'getString', '(', '""failed.fetch_allEvents_from_db""', ')', ')', ';', '}', 'return', 'signupMeetings', ';', '}']","['List', '<', 'SignupMeetingWrapper', '>', 'getAllSignupMeetings', '(', ')', '{', 'try', '{', 'loadMeetings', '(', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'error', '(', '(', '""""', ')', '+', '""""', '+', 'e', ')', ';', 'Utilities', '(', 'Utilities', '(', '""faileddb""', ')', ')', ';', '}', '}']",66,43,6,324,144,26,60.40268456375839,38.333333333333336,,,,-1,-1,-1,-1,False
L360_release_1.txt,code2vec,METHOD_NAME,token_wrong,0.4547,0.6395,9.8406,13.5138,"{'n_total': 186, 'n_valid': 30, 'n_correct': 20}",83.835537,private boolean release() { if (!isAlive()) { return false; } mPaused = true; mReleasing = true; mHandler.sendEmptyMessage(PLAYBACK_RELEASE); return true; },boolean release(){if(isAlive){}mPaused=true;},"['private', 'boolean', 'release', '(', ')', '{', 'if', '(', '!', 'isAlive', '(', ')', ')', '{', 'return', 'false', ';', '}', 'mPaused', '=', 'true', ';', 'mReleasing', '=', 'true', ';', 'mHandler', '.', 'sendEmptyMessage', '(', 'PLAYBACK_RELEASE', ')', ';', 'return', 'true', ';', '}']","['boolean', 'release', '(', ')', '{', 'if', '(', 'isAlive', ')', '{', '}', 'mPaused', '=', 'true', ';', '}']",37,16,6,156,45,13,77.62237762237763,67.74193548387096,,,,-1,-1,-1,-1,False
L361_process_2.txt,code2vec,METHOD_NAME,token_wrong,0.9978,0.9998,8.0959,12.1397,"{'n_total': 357, 'n_valid': 40, 'n_correct': 40}",120.694044,"@Override public boolean process(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException { String pathInfo = request.getPathInfo(); if (pathInfo != null && pathInfo.startsWith(""/"" + GitlabWebhooks.URLNAME + ""/"")) { chain.doFilter(request, response); return true; } return false; }","boolean process(HttpServletRequest request,HttpServletResponse response,FilterChain chain){if((""""+"""")){doFilter();}}","['@', 'Override', 'public', 'boolean', 'process', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ',', 'FilterChain', 'chain', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'String', 'pathInfo', '=', 'request', '.', 'getPathInfo', '(', ')', ';', 'if', '(', 'pathInfo', '!=', 'null', '&&', 'pathInfo', '.', 'startsWith', '(', '""/""', '+', 'GitlabWebhooks', '.', 'URLNAME', '+', '""/""', ')', ')', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'process', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ',', 'FilterChain', 'chain', ')', '{', 'if', '(', '(', '""""', '+', '""""', ')', ')', '{', 'doFilter', '(', ')', ';', '}', '}']",66,28,6,338,116,13,68.3076923076923,63.33333333333333,,,,-1,-1,-1,-1,False
L362_rebalance_1.txt,code2vec,METHOD_NAME,token_wrong,0.1676,0.1538,13.895,13.9242,"{'n_total': 347, 'n_valid': 72, 'n_correct': 28}",203.913181,"@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, ""Cannot rebalance if state is not active (a ZK connection"" + "" is necessary).""); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }","@Override void rebalance(int newTaskIndex,int newTotalNumTasks){checkState(active,""Cannotconnection""+""isnecessary"");this.taskIndex=newTaskIndex;this.totalNumTasks=newTotalNumTasks;bootstrapStateFromZookeeper();}","['@', 'Override', 'public', 'void', 'rebalance', '(', 'final', 'int', 'newTaskIndex', ',', 'final', 'int', 'newTotalNumTasks', ')', '{', 'checkState', '(', 'active', ',', '""Cannot rebalance if state is not active (a ZK connection""', '+', '"" is necessary).""', ')', ';', 'this', '.', 'taskIndex', '=', 'newTaskIndex', ';', 'this', '.', 'totalNumTasks', '=', 'newTotalNumTasks', ';', 'commitShardStates', '(', ')', ';', 'bootstrapStateFromZookeeper', '(', ')', ';', '}']","['@', 'Override', 'void', 'rebalance', '(', 'int', 'newTaskIndex', ',', 'int', 'newTotalNumTasks', ')', '{', 'checkState', '(', 'active', ',', '""Cannotconnection""', '+', '""isnecessary""', ')', ';', 'this', '.', 'taskIndex', '=', 'newTaskIndex', ';', 'this', '.', 'totalNumTasks', '=', 'newTotalNumTasks', ';', 'bootstrapStateFromZookeeper', '(', ')', ';', '}']",45,38,6,309,211,15,33.33333333333333,17.94871794871795,,,,-1,-1,-1,-1,False
L363_isEmpty_1.txt,code2vec,METHOD_NAME,token_wrong,0.3811,0.4581,2.0093,4.7953,"{'n_total': 220, 'n_valid': 40, 'n_correct': 22}",112.629066,public static boolean isEmpty(Collection<?> c) { if (c == null || c.size() == 0) { return true; } else { return false; } },boolean isEmpty(Collection<?>c){if(c){return true;}else{return false;}},"['public', 'static', 'boolean', 'isEmpty', '(', 'Collection', '<', '?', '>', 'c', ')', '{', 'if', '(', 'c', '==', 'null', '||', 'c', '.', 'size', '(', ')', '==', '0', ')', '{', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']","['boolean', 'isEmpty', '(', 'Collection', '<', '?', '>', 'c', ')', '{', 'if', '(', 'c', ')', '{', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']",38,26,6,122,71,13,46.788990825688074,37.5,,,,-1,-1,-1,-1,False
L364_getMutableConfig_1.txt,code2vec,METHOD_NAME,token_wrong,0.5233,0.44,23.6799,21.3637,"{'n_total': 138, 'n_valid': 22, 'n_correct': 13}",62.843816,public Properties getMutableConfig() { Properties rv = new Properties(); rv.putAll(m_mutableConfig); return rv; },Properties getMutableConfig(){Properties=Properties().putAll;return rv;},"['public', 'Properties', 'getMutableConfig', '(', ')', '{', 'Properties', 'rv', '=', 'new', 'Properties', '(', ')', ';', 'rv', '.', 'putAll', '(', 'm_mutableConfig', ')', ';', 'return', 'rv', ';', '}']","['Properties', 'getMutableConfig', '(', ')', '{', 'Properties', '=', 'Properties', '(', ')', '.', 'putAll', ';', 'return', 'rv', ';', '}']",25,17,6,113,72,22,45.05494505494506,42.10526315789473,,,,-1,-1,-1,-1,False
L365_usage_1.txt,code2vec,METHOD_NAME,token_wrong,0.4611,0.4247,4.7354,2.2847,"{'n_total': 260, 'n_valid': 42, 'n_correct': 27}",125.136841,"public static void usage() { println(""java Agent <nb_traps>""); println(""where""); println("" -nb_traps: "" + ""number of traps the SNMP agent will send.""); println("" "" + ""If not specified, the agent will send traps continuously.""); }","void usage(){("""");println(""willsend"");println(""""+""continuously"");}","['public', 'static', 'void', 'usage', '(', ')', '{', 'println', '(', '""java Agent <nb_traps>""', ')', ';', 'println', '(', '""where""', ')', ';', 'println', '(', '"" -nb_traps: ""', '+', '""number of traps the SNMP agent will send.""', ')', ';', 'println', '(', '"" ""', '+', '""If not specified, the agent will send traps continuously.""', ')', ';', '}']","['void', 'usage', '(', ')', '{', '(', '""""', ')', ';', 'println', '(', '""willsend""', ')', ';', 'println', '(', '""""', '+', '""continuously""', ')', ';', '}']",32,22,6,229,66,11,74.77064220183486,38.46153846153847,,,,-1,-1,-1,-1,False
L366_onParameterReceived_1.txt,code2vec,METHOD_NAME,token_wrong,0.5925,0.2821,17.0984,14.8577,"{'n_total': 301, 'n_valid': 30, 'n_correct': 23}",90.750728,"@Override public void onParameterReceived(Parameter parameter, int index, int count) { if (connectedApps.isEmpty()) { return; } for (DroneApi droneEventsListener : connectedApps.values()) { droneEventsListener.onParameterReceived(parameter, index, count); } }",void onParameterReceived(int count){if(isEmpty()){}for(DroneApi droneEventsListener:values()){droneEventsListener.onParameterReceived(parameter);}},"['@', 'Override', 'public', 'void', 'onParameterReceived', '(', 'Parameter', 'parameter', ',', 'int', 'index', ',', 'int', 'count', ')', '{', 'if', '(', 'connectedApps', '.', 'isEmpty', '(', ')', ')', '{', 'return', ';', '}', 'for', '(', 'DroneApi', 'droneEventsListener', ':', 'connectedApps', '.', 'values', '(', ')', ')', '{', 'droneEventsListener', '.', 'onParameterReceived', '(', 'parameter', ',', 'index', ',', 'count', ')', ';', '}', '}']","['void', 'onParameterReceived', '(', 'int', 'count', ')', '{', 'if', '(', 'isEmpty', '(', ')', ')', '{', '}', 'for', '(', 'DroneApi', 'droneEventsListener', ':', 'values', '(', ')', ')', '{', 'droneEventsListener', '.', 'onParameterReceived', '(', 'parameter', ')', ';', '}', '}']",53,34,6,259,147,25,47.863247863247864,40.42553191489361,,,,-1,-1,-1,-1,False
L367_initializeReader_1.txt,code2vec,METHOD_NAME,token_wrong,0.4471,0.4874,19.7452,17.5898,"{'n_total': 180, 'n_valid': 21, 'n_correct': 17}",62.476271,@Override protected void initializeReader() { this.fileList = new ArrayList<>(); this.fileListPosition = new AtomicInteger(0); this.currentTextAnnotation = new AtomicReference<>(); },@Override void initializeReader(){fileListPosition();currentTextAnnotation=new AtomicReference<>();},"['@', 'Override', 'protected', 'void', 'initializeReader', '(', ')', '{', 'this', '.', 'fileList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'this', '.', 'fileListPosition', '=', 'new', 'AtomicInteger', '(', '0', ')', ';', 'this', '.', 'currentTextAnnotation', '=', 'new', 'AtomicReference', '<', '>', '(', ')', ';', '}']","['@', 'Override', 'void', 'initializeReader', '(', ')', '{', 'fileListPosition', '(', ')', ';', 'currentTextAnnotation', '=', 'new', 'AtomicReference', '<', '>', '(', ')', ';', '}']",41,21,6,182,100,22,51.24999999999999,57.14285714285714,,,,-1,-1,-1,-1,False
L368_isFluxConsumer_1.txt,code2vec,METHOD_NAME,token_wrong,0.2177,0.3303,15.3996,15.0377,"{'n_total': 405, 'n_valid': 56, 'n_correct': 22}",158.802991,"@Test public void isFluxConsumer() { Method method = ReflectionUtils.findMethod(FunctionFactoryUtilsTests.class, ""fluxConsumer""); assertThat(FunctionFactoryUtils.isFluxConsumer(method)).isTrue(); assertThat(FunctionFactoryUtils.isFluxSupplier(method)).isFalse(); assertThat(FunctionFactoryUtils.isFluxFunction(method)).isFalse(); }","@Test void isFluxConsumer(){Method method=ReflectionUtils(FunctionFactoryUtilsTests,"""");(FunctionFactoryUtils()).isTrue();(FunctionFactoryUtils()).isFalse();assertThat(FunctionFactoryUtils.isFluxFunction(method)).isFalse();}","['@', 'Test', 'public', 'void', 'isFluxConsumer', '(', ')', '{', 'Method', 'method', '=', 'ReflectionUtils', '.', 'findMethod', '(', 'FunctionFactoryUtilsTests', '.', 'class', ',', '""fluxConsumer""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxConsumer', '(', 'method', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxFunction', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', '}']","['@', 'Test', 'void', 'isFluxConsumer', '(', ')', '{', 'Method', 'method', '=', 'ReflectionUtils', '(', 'FunctionFactoryUtilsTests', ',', '""""', ')', ';', '(', 'FunctionFactoryUtils', '(', ')', ')', '.', 'isTrue', '(', ')', ';', '(', 'FunctionFactoryUtils', '(', ')', ')', '.', 'isFalse', '(', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxFunction', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', '}']",65,52,6,331,224,20,34.40514469453376,22.033898305084744,,,,-1,-1,-1,-1,False
L369_beginDisplay_2.txt,code2vec,METHOD_NAME,token_wrong,0.8531,0.6164,17.9183,17.385,"{'n_total': 209, 'n_valid': 25, 'n_correct': 15}",73.590703,public void beginDisplay(DisplayEvent event) throws ModelControlException { super.beginDisplay(event); SAMLv2Model model = (SAMLv2Model) getModelInternal(); populateValue(); },void beginDisplay(DisplayEvent event)throws ModelControlException{super.beginDisplay(event);model=(SAMLv);populateValue();},"['public', 'void', 'beginDisplay', '(', 'DisplayEvent', 'event', ')', 'throws', 'ModelControlException', '{', 'super', '.', 'beginDisplay', '(', 'event', ')', ';', 'SAMLv2Model', 'model', '=', '(', 'SAMLv2Model', ')', 'getModelInternal', '(', ')', ';', 'populateValue', '(', ')', ';', '}']","['void', 'beginDisplay', '(', 'DisplayEvent', 'event', ')', 'throws', 'ModelControlException', '{', 'super', '.', 'beginDisplay', '(', 'event', ')', ';', 'model', '=', '(', 'SAMLv', ')', ';', 'populateValue', '(', ')', ';', '}']",32,27,6,175,123,18,33.12101910828025,19.230769230769234,,,,-1,-1,-1,-1,False
L370_dialogValidated_1.txt,code2vec,METHOD_NAME,token_wrong,0.9892,0.9987,23.7425,26.3592,"{'n_total': 161, 'n_valid': 15, 'n_correct': 14}",45.111523,@Override public void dialogValidated() { try { portSpinner.commitEdit(); } catch (ParseException e) { } updateValues(); },void dialogValidated(){try{portSpinner.commitEdit();}catch(ParseException e){}},"['@', 'Override', 'public', 'void', 'dialogValidated', '(', ')', '{', 'try', '{', 'portSpinner', '.', 'commitEdit', '(', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '}', 'updateValues', '(', ')', ';', '}']","['void', 'dialogValidated', '(', ')', '{', 'try', '{', 'portSpinner', '.', 'commitEdit', '(', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '}', '}']",29,22,6,122,79,21,42.57425742574257,30.434782608695656,,,,-1,-1,-1,-1,False
L371_valuesParams_1.txt,code2vec,METHOD_NAME,token_wrong,0.8265,0.2926,18.8149,17.8474,"{'n_total': 514, 'n_valid': 60, 'n_correct': 50}",177.885989,"protected String valuesParams(String[] fields) { if ((fields == null) || (fields.length == 0)) return """"; StringBuilder buf = new StringBuilder(); for (int i = 0; i < fields.length; i++) { buf.append("" ?,""); } return buf.toString(); }","String valuesParams(String[]fields){if((fields=null)|(0))for(i;i<length;){("""");}toString();}","['protected', 'String', 'valuesParams', '(', 'String', '[', ']', 'fields', ')', '{', 'if', '(', '(', 'fields', '==', 'null', ')', '||', '(', 'fields', '.', 'length', '==', '0', ')', ')', 'return', '""""', ';', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fields', '.', 'length', ';', 'i', '++', ')', '{', 'buf', '.', 'append', '(', '"" ?,""', ')', ';', '}', 'return', 'buf', '.', 'toString', '(', ')', ';', '}']","['String', 'valuesParams', '(', 'String', '[', ']', 'fields', ')', '{', 'if', '(', '(', 'fields', '=', 'null', ')', '|', '(', '0', ')', ')', 'for', '(', 'i', ';', 'i', '<', 'length', ';', ')', '{', '(', '""""', ')', ';', '}', 'toString', '(', ')', ';', '}']",70,41,6,234,92,18,65.74074074074075,45.3125,,,,-1,-1,-1,-1,False
L372_isAllowed_2.txt,code2vec,METHOD_NAME,token_wrong,0.8471,0.6314,18.7576,23.4746,"{'n_total': 398, 'n_valid': 41, 'n_correct': 40}",116.453105,"private void isAllowed(Avatar avatar) { this.applyCommonConstraints(avatar); boolean allowGallery = this.config.getBoolean(ConfigKeys.AVATAR_ALLOW_GALLERY); boolean allowUpload = this.config.getBoolean(ConfigKeys.AVATAR_ALLOW_UPLOAD); if (avatar.getAvatarType() == AvatarType.AVATAR_UPLOAD && !allowUpload || avatar.getAvatarType() == AvatarType.AVATAR_GALLERY && !allowGallery) { throw new ValidationException(avatar.getAvatarType() + ""is not allowed!""); } }","void isAllowed(Avatar avatar){(avatar);if(allowGallery){(avatar()+"""");}}","['private', 'void', 'isAllowed', '(', 'Avatar', 'avatar', ')', '{', 'this', '.', 'applyCommonConstraints', '(', 'avatar', ')', ';', 'boolean', 'allowGallery', '=', 'this', '.', 'config', '.', 'getBoolean', '(', 'ConfigKeys', '.', 'AVATAR_ALLOW_GALLERY', ')', ';', 'boolean', 'allowUpload', '=', 'this', '.', 'config', '.', 'getBoolean', '(', 'ConfigKeys', '.', 'AVATAR_ALLOW_UPLOAD', ')', ';', 'if', '(', 'avatar', '.', 'getAvatarType', '(', ')', '==', 'AvatarType', '.', 'AVATAR_UPLOAD', '&&', '!', 'allowUpload', '||', 'avatar', '.', 'getAvatarType', '(', ')', '==', 'AvatarType', '.', 'AVATAR_GALLERY', '&&', '!', 'allowGallery', ')', '{', 'throw', 'new', 'ValidationException', '(', 'avatar', '.', 'getAvatarType', '(', ')', '+', '""is not allowed!""', ')', ';', '}', '}']","['void', 'isAllowed', '(', 'Avatar', 'avatar', ')', '{', '(', 'avatar', ')', ';', 'if', '(', 'allowGallery', ')', '{', '(', 'avatar', '(', ')', '+', '""""', ')', ';', '}', '}']",87,26,6,459,72,15,87.16216216216216,75.30864197530865,,,,-1,-1,-1,-1,False
L373_copyFrom_1.txt,code2vec,METHOD_NAME,token_wrong,0.3833,0.7546,8.3293,16.2995,"{'n_total': 331, 'n_valid': 41, 'n_correct': 24}",120.855778,"public void copyFrom(QueryTreeNode node) throws StandardException { super.copyFrom(node); JavaToSQLValueNode other = (JavaToSQLValueNode) node; this.javaNode = (JavaValueNode) getNodeFactory().copyNode(other.javaNode, getParserContext()); }",void copyFrom(QueryTreeNode node)throws StandardException{copyFrom();JavaToSQLValueNode(JavaToSQLValueNode);javaNode=(JavaValueNode)(getParserContext());},"['public', 'void', 'copyFrom', '(', 'QueryTreeNode', 'node', ')', 'throws', 'StandardException', '{', 'super', '.', 'copyFrom', '(', 'node', ')', ';', 'JavaToSQLValueNode', 'other', '=', '(', 'JavaToSQLValueNode', ')', 'node', ';', 'this', '.', 'javaNode', '=', '(', 'JavaValueNode', ')', 'getNodeFactory', '(', ')', '.', 'copyNode', '(', 'other', '.', 'javaNode', ',', 'getParserContext', '(', ')', ')', ';', '}']","['void', 'copyFrom', '(', 'QueryTreeNode', 'node', ')', 'throws', 'StandardException', '{', 'copyFrom', '(', ')', ';', 'JavaToSQLValueNode', '(', 'JavaToSQLValueNode', ')', ';', 'javaNode', '=', '(', 'JavaValueNode', ')', '(', 'getParserContext', '(', ')', ')', ';', '}']",48,30,6,240,154,14,38.05309734513274,42.857142857142854,,,,-1,-1,-1,-1,False
L374_handlePrivilegeDeleted_1.txt,code2vec,METHOD_NAME,token_wrong,0.5356,0.4327,17.5309,20.6341,"{'n_total': 484, 'n_valid': 67, 'n_correct': 41}",192.275394,"private void handlePrivilegeDeleted(HttpServletRequest req) { String privilegeName = req.getParameter(ATTR_NAME); String realm = req.getParameter(ATTR_REALM_NAME); PrivilegeIndexStore pis = PrivilegeIndexStore.getInstance(PolicyConstants.SUPER_ADMIN_SUBJECT, realm); try { pis.delete(privilegeName, false); } catch (EntitlementException e) { } DataStore.getInstance().clearIndexCount(realm, false); }",void handlePrivilegeDeleted(HttpServletRequest req){req();PrivilegeIndexStore();try{pis.delete(privilegeName);}catch(EntitlementException e){}getInstance();},"['private', 'void', 'handlePrivilegeDeleted', '(', 'HttpServletRequest', 'req', ')', '{', 'String', 'privilegeName', '=', 'req', '.', 'getParameter', '(', 'ATTR_NAME', ')', ';', 'String', 'realm', '=', 'req', '.', 'getParameter', '(', 'ATTR_REALM_NAME', ')', ';', 'PrivilegeIndexStore', 'pis', '=', 'PrivilegeIndexStore', '.', 'getInstance', '(', 'PolicyConstants', '.', 'SUPER_ADMIN_SUBJECT', ',', 'realm', ')', ';', 'try', '{', 'pis', '.', 'delete', '(', 'privilegeName', ',', 'false', ')', ';', '}', 'catch', '(', 'EntitlementException', 'e', ')', '{', '}', 'DataStore', '.', 'getInstance', '(', ')', '.', 'clearIndexCount', '(', 'realm', ',', 'false', ')', ';', '}']","['void', 'handlePrivilegeDeleted', '(', 'HttpServletRequest', 'req', ')', '{', 'req', '(', ')', ';', 'PrivilegeIndexStore', '(', ')', ';', 'try', '{', 'pis', '.', 'delete', '(', 'privilegeName', ')', ';', '}', 'catch', '(', 'EntitlementException', 'e', ')', '{', '}', 'getInstance', '(', ')', ';', '}']",75,37,6,400,157,28,65.32258064516128,55.072463768115945,,,,-1,-1,-1,-1,False
L375_doLs_1.txt,code2vec,METHOD_NAME,token_wrong,0.3093,0.3647,21.2182,24.6634,"{'n_total': 258, 'n_valid': 36, 'n_correct': 24}",108.635193,"private void doLs(PrintStream writer) throws DumpUsageException { File baseDir = getBaseDir(mContext); if (baseDir.isDirectory()) { printDirectoryText(baseDir, """", writer); } }",void doLs(PrintStream writer)throws DumpUsageException{baseDir();if(baseDir){(writer);}},"['private', 'void', 'doLs', '(', 'PrintStream', 'writer', ')', 'throws', 'DumpUsageException', '{', 'File', 'baseDir', '=', 'getBaseDir', '(', 'mContext', ')', ';', 'if', '(', 'baseDir', '.', 'isDirectory', '(', ')', ')', '{', 'printDirectoryText', '(', 'baseDir', ',', '""""', ',', 'writer', ')', ';', '}', '}']","['void', 'doLs', '(', 'PrintStream', 'writer', ')', 'throws', 'DumpUsageException', '{', 'baseDir', '(', ')', ';', 'if', '(', 'baseDir', ')', '{', '(', 'writer', ')', ';', '}', '}']",38,24,6,176,88,10,53.01204819277109,43.75,,,,-1,-1,-1,-1,False
L376_testSecurityExceptionHandling_1.txt,code2vec,METHOD_NAME,token_wrong,0.3205,0.297,14.8197,16.0356,"{'n_total': 260, 'n_valid': 32, 'n_correct': 18}",89.554591,@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.class); resolver = new PropertiesFileResolver(env); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(new SecurityException()); assertNull(resolver.findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); },@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);when(env.getSystemProperty(PROPERTY)).thenThrow();(env).getSystemProperty(PROPERTY);},"['@', 'Test', 'public', 'void', 'testSecurityExceptionHandling', '(', ')', '{', 'env', '=', 'mock', '(', 'PassthroughEnvironmentAccessor', '.', 'class', ')', ';', 'resolver', '=', 'new', 'PropertiesFileResolver', '(', 'env', ')', ';', 'when', '(', 'env', '.', 'getSystemProperty', '(', 'LocalConfigConnector', '.', 'PROPERTIES_FILE_PROPERTY', ')', ')', '.', 'thenThrow', '(', 'new', 'SecurityException', '(', ')', ')', ';', 'assertNull', '(', 'resolver', '.', 'findCloudPropertiesFileFromSystem', '(', ')', ')', ';', 'verify', '(', 'env', ')', '.', 'getSystemProperty', '(', 'LocalConfigConnector', '.', 'PROPERTIES_FILE_PROPERTY', ')', ';', '}']","['@', 'Test', 'void', 'testSecurityExceptionHandling', '(', ')', '{', '(', 'PassthroughEnvironmentAccessor', ')', ';', 'when', '(', 'env', '.', 'getSystemProperty', '(', 'PROPERTY', ')', ')', '.', 'thenThrow', '(', ')', ';', '(', 'env', ')', '.', 'getSystemProperty', '(', 'PROPERTY', ')', ';', '}']",67,35,6,394,161,35,64.9025069637883,52.459016393442624,,,,-1,-1,-1,-1,False
L377_decode_1.txt,code2vec,METHOD_NAME,token_wrong,0.6475,0.2027,4.228,4.3262,"{'n_total': 585, 'n_valid': 86, 'n_correct': 41}",247.374814,"@Override public Object decode(JsonIterator iter) throws IOException { if (IterImpl.nextToken(iter) != '""') { throw iter.reportError(""decode number map key"", ""expect \""""); } Object key = decoder.decode(iter); if (IterImpl.nextToken(iter) != '""') { throw iter.reportError(""decode number map key"", ""expect \""""); } return key; }","Object decode(JsonIterator iter)throws IOException{if(IterImpl(iter)!='""'){reportError(""decodemapkey"","""");}key=decode(iter);if(IterImpl.nextToken!='""'){throw reportError(""decode"");}}","['@', 'Override', 'public', 'Object', 'decode', '(', 'JsonIterator', 'iter', ')', 'throws', 'IOException', '{', 'if', '(', 'IterImpl', '.', 'nextToken', '(', 'iter', ')', '!=', '\'""\'', ')', '{', 'throw', 'iter', '.', 'reportError', '(', '""decode number map key""', ',', '""expect \\""""', ')', ';', '}', 'Object', 'key', '=', 'decoder', '.', 'decode', '(', 'iter', ')', ';', 'if', '(', 'IterImpl', '.', 'nextToken', '(', 'iter', ')', '!=', '\'""\'', ')', '{', 'throw', 'iter', '.', 'reportError', '(', '""decode number map key""', ',', '""expect \\""""', ')', ';', '}', 'return', 'key', ';', '}']","['Object', 'decode', '(', 'JsonIterator', 'iter', ')', 'throws', 'IOException', '{', 'if', '(', 'IterImpl', '(', 'iter', ')', '!=', '\'""\'', ')', '{', 'reportError', '(', '""decodemapkey""', ',', '""""', ')', ';', '}', 'key', '=', 'decode', '(', 'iter', ')', ';', 'if', '(', 'IterImpl', '.', 'nextToken', '!=', '\'""\'', ')', '{', 'throw', 'reportError', '(', '""decode""', ')', ';', '}', '}']",72,51,6,325,182,12,45.68690095846645,31.818181818181817,,,,-1,-1,-1,-1,False
L378_getCalculatedDigest_1.txt,code2vec,METHOD_NAME,token_wrong,0.9999,0.9995,26.0261,27.9751,"{'n_total': 168, 'n_valid': 15, 'n_correct': 15}",40.769007,public byte[] getCalculatedDigest() { if (calculatedDigest != null) { return Arrays.clone(calculatedDigest); } return null; },byte[]getCalculatedDigest(){if(null){(calculatedDigest);}},"['public', 'byte', '[', ']', 'getCalculatedDigest', '(', ')', '{', 'if', '(', 'calculatedDigest', '!=', 'null', ')', '{', 'return', 'Arrays', '.', 'clone', '(', 'calculatedDigest', ')', ';', '}', 'return', 'null', ';', '}']","['byte', '[', ']', 'getCalculatedDigest', '(', ')', '{', 'if', '(', 'null', ')', '{', '(', 'calculatedDigest', ')', ';', '}', '}']",28,18,6,125,58,25,67.0,45.45454545454545,,,,-1,-1,-1,-1,False
L379_next_2.txt,code2vec,METHOD_NAME,token_wrong,0.5596,0.4828,4.1519,11.066,"{'n_total': 199, 'n_valid': 37, 'n_correct': 19}",105.404538,"public Instance next() { Instance carrier = new Instance(nextGroup, null, ""parengroup"" + (groupIdx++), null); nextGroup = getNextGroup(); return carrier; }","Instance next(){Instance((groupIdx),null);return carrier;}","['public', 'Instance', 'next', '(', ')', '{', 'Instance', 'carrier', '=', 'new', 'Instance', '(', 'nextGroup', ',', 'null', ',', '""parengroup""', '+', '(', 'groupIdx', '++', ')', ',', 'null', ')', ';', 'nextGroup', '=', 'getNextGroup', '(', ')', ';', 'return', 'carrier', ';', '}']","['Instance', 'next', '(', ')', '{', 'Instance', '(', '(', 'groupIdx', ')', ',', 'null', ')', ';', 'return', 'carrier', ';', '}']",36,18,6,155,58,10,66.89655172413794,60.0,,,,-1,-1,-1,-1,False
L380_createChild_1.txt,code2vec,METHOD_NAME,token_wrong,0.8427,0.4237,10.9723,5.9695,"{'n_total': 254, 'n_valid': 29, 'n_correct': 22}",89.378041,"protected View createChild(String name) { View view = null; if (name.equals(PGTITLE_TWO_BTNS)) { view = new CCPageTitle(this, ptModel, name); } else { view = super.createChild(name); } return view; }",View createChild(String name){if(name()){createChild(name);}return view;},"['protected', 'View', 'createChild', '(', 'String', 'name', ')', '{', 'View', 'view', '=', 'null', ';', 'if', '(', 'name', '.', 'equals', '(', 'PGTITLE_TWO_BTNS', ')', ')', '{', 'view', '=', 'new', 'CCPageTitle', '(', 'this', ',', 'ptModel', ',', 'name', ')', ';', '}', 'else', '{', 'view', '=', 'super', '.', 'createChild', '(', 'name', ')', ';', '}', 'return', 'view', ';', '}']","['View', 'createChild', '(', 'String', 'name', ')', '{', 'if', '(', 'name', '(', ')', ')', '{', 'createChild', '(', 'name', ')', ';', '}', 'return', 'view', ';', '}']",52,24,6,199,73,17,69.23076923076923,60.86956521739131,,,,-1,-1,-1,-1,False
L381_createRawValidator_9.txt,code2vec,METHOD_NAME,token_wrong,0.2293,0.245,15.0827,15.6408,"{'n_total': 1342, 'n_valid': 301, 'n_correct': 170}",810.175443,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\t"" + ""nameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004"" + ""namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Bool"" + ""ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\""com.sun.msv.datatype.xsd.Qname"" + ""Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"" + ""\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSp"" + ""acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"" + ""p://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"" + ""e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"" + "".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"" + ""v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0013"" + ""psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018"" + ""L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.Simp"" + ""leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018x"" + ""r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\rAuthorityKin"" + ""dt\u0000\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.AnyURIT"" + ""ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006anyURIq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""q\u0000~\u0000-q\u0000~\u0000\u001b"" + ""sq\u0000~\u0000$t\u0000\u0007Bindingq\u0000~\u0000(sq\u0000~\u0000\fppq\u0000~\u0000*sq\u0000~\u0000$t\u0000\bLocationq\u0000~\u0000(sr\u0000\u001d"" + ""com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\fq\u0000~\u0000\u0013p"" + ""q\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"" + ""cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0012\u0001q\u0000~\u0000;sq\u0000~\u0000$t\u0000\u0010AuthorityBindingt\u0000%urn:oasis"" + "":names:tc:SAML:1.0:assertionsr\u0000\""com.sun.msv.grammar.Expressi"" + ""onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"" + ""onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"" + ""losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"" + ""/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001pq\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u0000\u000bq\u0000~\u00005"" + ""x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","commsv.DocumentDeclaration createRawValidator(){if(schemaFragment){((""""+""""+""""+""mmar""+""""+""""+""""+""""+""losedHash""+""/""+""x""));}com(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""r\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\t""', '+', '""nameClassq\x00~\x00\x01xq\x00~\x00\x04ppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04""', '+', '""namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04sr\x00\x11java.lang.Bool""', '+', '""eanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\\""com.sun.msv.datatype.xsd.Qname""', '+', '""Type\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00""', '+', '""\\fnamespaceUrit\x00\x12Ljava/lang/String;L\x00\\btypeNameq\x00~\x00\x18L\x00\\nwhiteSp""', '+', '""acet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 htt""', '+', '""p://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatyp""', '+', '""e.xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv""', '+', '"".datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.ms""', '+', '""v.grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x13""', '+', '""psr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18""', '+', '""L\x00\\fnamespaceURIq\x00~\x00\x18xpq\x00~\x00\x1cq\x00~\x00\x1bsr\x00#com.sun.msv.grammar.Simp""', '+', '""leNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceURIq\x00~\x00\x18x""', '+', '""r\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\\rAuthorityKin""', '+', '""dt\x00\x00sq\x00~\x00\\fppsq\x00~\x00\x0eq\x00~\x00\x13psr\x00#com.sun.msv.datatype.xsd.AnyURIT""', '+', '""ype\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x15q\x00~\x00\x1bt\x00\x06anyURIq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""q\x00~\x00-q\x00~\x00\x1b""', '+', '""sq\x00~\x00$t\x00\x07Bindingq\x00~\x00(sq\x00~\x00\\fppq\x00~\x00*sq\x00~\x00$t\x00\\bLocationq\x00~\x00(sr\x00\x1d""', '+', '""com.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsq\x00~\x00\\fq\x00~\x00\x13p""', '+', '""q\x00~\x00\x11sq\x00~\x00$t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-instan""', '+', '""cesr\x000com.sun.msv.grammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x12\x01q\x00~\x00;sq\x00~\x00$t\x00\x10AuthorityBindingt\x00%urn:oasis""', '+', '"":names:tc:SAML:1.0:assertionsr\x00\\""com.sun.msv.grammar.Expressi""', '+', '""onPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/Expressi""', '+', '""onPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$C""', '+', '""losedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom""', '+', '""/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x04\x01pq\x00~\x00\\tq\x00~\x00\\nq\x00~\x00\x0bq\x00~\x005""', '+', '""x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['commsv', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""""', '+', '""""', '+', '""mmar""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""losedHash""', '+', '""/""', '+', '""x""', ')', ')', ';', '}', 'com', '(', 'schemaFragment', ')', ';', '}']",137,45,6,5170,141,24,97.72638942868247,70.22900763358778,,,,-1,-1,-1,-1,False
L382_execute_2.txt,code2vec,METHOD_NAME,token_wrong,0.3474,0.9883,5.5011,7.6765,"{'n_total': 374, 'n_valid': 36, 'n_correct': 30}",108.481221,"public void execute(Writer writer, MacroParameter params) throws IllegalArgumentException, IOException { writer.write(""<pre>""); if (params.getContent() != null) { writer.write(params.getContent()); } writer.write(""</pre>""); }","void execute(Writer writer,MacroParameter params)throws IOException{("""");if(getContent()){(params);}write(""pre"");}","['public', 'void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'writer', '.', 'write', '(', '""<pre>""', ')', ';', 'if', '(', 'params', '.', 'getContent', '(', ')', '!=', 'null', ')', '{', 'writer', '.', 'write', '(', 'params', '.', 'getContent', '(', ')', ')', ';', '}', 'writer', '.', 'write', '(', '""</pre>""', ')', ';', '}']","['void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IOException', '{', '(', '""""', ')', ';', 'if', '(', 'getContent', '(', ')', ')', '{', '(', 'params', ')', ';', '}', 'write', '(', '""pre""', ')', ';', '}']",53,34,6,225,114,13,52.358490566037744,40.42553191489361,,,,-1,-1,-1,-1,False
L383_logLicenseAccepted_1.txt,code2vec,METHOD_NAME,token_wrong,0.5206,0.9776,17.9145,27.0748,"{'n_total': 181, 'n_valid': 25, 'n_correct': 20}",68.462402,"public void logLicenseAccepted(License license, String user, Date acceptedDate) { Properties log = loadLogFile(license, true); String acceptedDateStr = DateUtils.toUTCDateFormat(acceptedDate); log.setProperty(user, acceptedDateStr); saveLogFile(license, log); }",void logLicenseAccepted(License acceptedDate){log=loadLogFile();saveLogFile();},"['public', 'void', 'logLicenseAccepted', '(', 'License', 'license', ',', 'String', 'user', ',', 'Date', 'acceptedDate', ')', '{', 'Properties', 'log', '=', 'loadLogFile', '(', 'license', ',', 'true', ')', ';', 'String', 'acceptedDateStr', '=', 'DateUtils', '.', 'toUTCDateFormat', '(', 'acceptedDate', ')', ';', 'log', '.', 'setProperty', '(', 'user', ',', 'acceptedDateStr', ')', ';', 'saveLogFile', '(', 'license', ',', 'log', ')', ';', '}']","['void', 'logLicenseAccepted', '(', 'License', 'acceptedDate', ')', '{', 'log', '=', 'loadLogFile', '(', ')', ';', 'saveLogFile', '(', ')', ';', '}']",51,18,6,261,79,24,76.79324894514767,73.33333333333333,,,,-1,-1,-1,-1,False
L384_doSomeChange_1.txt,code2vec,METHOD_NAME,token_wrong,0.4564,0.1981,19.3738,19.0734,"{'n_total': 371, 'n_valid': 31, 'n_correct': 30}",92.479004,"private void doSomeChange(final int left, final int right, final String original, final String change) { while (leftLineNum < left) { appendLine(objectifiedLeft[leftLineNum++], original); } while (rightLineNum < right) { appendLine(objectifiedRight[rightLineNum++], change); } }","void doSomeChange(int left,String original,String change){while(left){appendLine(objectifiedLeft[leftLineNum],original);}while(rightLineNum){(objectifiedRight[rightLineNum++]);}}","['private', 'void', 'doSomeChange', '(', 'final', 'int', 'left', ',', 'final', 'int', 'right', ',', 'final', 'String', 'original', ',', 'final', 'String', 'change', ')', '{', 'while', '(', 'leftLineNum', '<', 'left', ')', '{', 'appendLine', '(', 'objectifiedLeft', '[', 'leftLineNum', '++', ']', ',', 'original', ')', ';', '}', 'while', '(', 'rightLineNum', '<', 'right', ')', '{', 'appendLine', '(', 'objectifiedRight', '[', 'rightLineNum', '++', ']', ',', 'change', ')', ';', '}', '}']","['void', 'doSomeChange', '(', 'int', 'left', ',', 'String', 'original', ',', 'String', 'change', ')', '{', 'while', '(', 'left', ')', '{', 'appendLine', '(', 'objectifiedLeft', '[', 'leftLineNum', ']', ',', 'original', ')', ';', '}', 'while', '(', 'rightLineNum', ')', '{', '(', 'objectifiedRight', '[', 'rightLineNum', '++', ']', ')', ';', '}', '}']",60,44,6,278,178,18,38.46153846153847,29.629629629629626,,,,-1,-1,-1,-1,False
L385_setRubricRow_1.txt,code2vec,METHOD_NAME,token_wrong,0.3053,0.2872,17.4243,17.8576,"{'n_total': 349, 'n_valid': 45, 'n_correct': 23}",130.546098,"public void setRubricRow(String rubricRow) { this.rubricRow = rubricRow; if (rubricRows == null) { rubricRows = new HashMap<>(); } rubricRows.put(rubricRows.size(), rubricRow); }","void setRubricRow(String rubricRow){this.rubricRow=rubricRow;if(rubricRows){HashMap;}put(rubricRows.size(),rubricRow);}","['public', 'void', 'setRubricRow', '(', 'String', 'rubricRow', ')', '{', 'this', '.', 'rubricRow', '=', 'rubricRow', ';', 'if', '(', 'rubricRows', '==', 'null', ')', '{', 'rubricRows', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', '}', 'rubricRows', '.', 'put', '(', 'rubricRows', '.', 'size', '(', ')', ',', 'rubricRow', ')', ';', '}']","['void', 'setRubricRow', '(', 'String', 'rubricRow', ')', '{', 'this', '.', 'rubricRow', '=', 'rubricRow', ';', 'if', '(', 'rubricRows', ')', '{', 'HashMap', ';', '}', 'put', '(', 'rubricRows', '.', 'size', '(', ')', ',', 'rubricRow', ')', ';', '}']",45,33,6,178,119,18,36.875,30.76923076923077,,,,-1,-1,-1,-1,False
L386_createRawValidator_10.txt,code2vec,METHOD_NAME,token_wrong,0.2945,0.1604,16.2874,14.9315,"{'n_total': 5313, 'n_valid': 1915, 'n_correct': 657}",5397.679492,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u000fppsr\u0000 com.sun.msv.grammar.OneO"" + ""rMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"" + ""\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"" + ""p\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"" + ""\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expres"" + ""sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0016\u0001q\u0000~\u0000\u001bsr\u0000 com"" + "".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"" + ""mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"" + ""$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun.msv"" + "".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"" + ""/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000Bcom.sun.identity.diagno"" + ""stic.base.core.jaxbgen.TypeofserviceElementt\u0000+http://java.su"" + ""n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000"" + ""\u000fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000?com.sun.i"" + ""dentity.diagnostic.base.core.jaxbgen.TypeofserviceTypeq\u0000~\u0000&s"" + ""q\u0000~\u0000\u000fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004nam"" + ""et\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\""com.sun.msv.dat"" + ""atype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.B"" + ""uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"" + ""reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"" + ""pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhiteSpa"" + ""cet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http"" + ""://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype"" + "".xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."" + ""datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv"" + "".grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001b"" + ""com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fna"" + ""mespaceURIq\u0000~\u0000#xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000\""t\u0000\u0004typet\u0000)http://www.w3.org"" + ""/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\rtypeofservicet\u0000\u0000sq\u0000~\u0000\u000f"" + ""ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"" + ""\u0000~\u0000\""t\u0000@com.sun.identity.diagnostic.base.core.jaxbgen.Realiza"" + ""tionElementq\u0000~\u0000&sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0013q\u0000~\u0000"" + ""\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000=com.sun.identity.diagn"" + ""ostic.base.core.jaxbgen.RealizationTypeq\u0000~\u0000&sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0018q\u0000"" + ""~\u0000\u0017pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\u000brealizationq\u0000~\u0000Isq\u0000~\u0000\u000fppsq\u0000~\u0000\u0000pp"" + ""\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000<com"" + "".sun.identity.diagnostic.base.core.jaxbgen.RuntimeElementq\u0000~"" + ""\u0000&sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p"" + ""q\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u00009com.sun.identity.diagnostic.base.cor"" + ""e.jaxbgen.RuntimeTypeq\u0000~\u0000&sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000"" + ""!sq\u0000~\u0000\""t\u0000\u0007runtimeq\u0000~\u0000Isq\u0000~\u0000\u0018ppsq\u0000~\u00001q\u0000~\u0000\u0017psr\u0000#com.sun.msv.da"" + ""tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00006q\u0000~\u0000;t"" + ""\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"" + ""serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>\u0001q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000tq\u0000~\u0000;sq\u0000~\u0000\""t\u0000\u0005clazzq\u0000"" + ""~\u0000Isq\u0000~\u0000\u0018ppq\u0000~\u0000qsq\u0000~\u0000\""t\u0000\u0002idq\u0000~\u0000Isq\u0000~\u0000\u0018ppq\u0000~\u0000qsq\u0000~\u0000\""t\u0000\u0004nameq\u0000"" + ""~\u0000Isq\u0000~\u0000\u000fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\u0007serviceq\u0000~\u0000Is"" + ""r\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"" + ""\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"" + ""un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB"" + ""\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPo"" + ""ol;xp\u0000\u0000\u0000\u001c\u0001pq\u0000~\u0000\nq\u0000~\u0000\tq\u0000~\u0000\fq\u0000~\u0000(q\u0000~\u0000Rq\u0000~\u0000\u000eq\u0000~\u0000eq\u0000~\u0000\rq\u0000~\u0000\u0015q\u0000~\u0000"" + ""+q\u0000~\u0000Mq\u0000~\u0000Uq\u0000~\u0000`q\u0000~\u0000hq\u0000~\u0000\u000bq\u0000~\u0000\u0012q\u0000~\u0000*q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000_q\u0000~\u0000gq\u0000~\u0000"" + ""/q\u0000~\u0000Yq\u0000~\u0000lq\u0000~\u0000\u0080q\u0000~\u0000\u0010q\u0000~\u0000Jq\u0000~\u0000]x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragment=null){((""""+""""+""""+""""+""msvgra""+""""+""pps""+""q""+""""+""""+""uiltinAtomicType""+""reteType""+""tionElementq""+""""+""""+""""+""Is""+""bexpTablet""+""""+""un""+""""+""olxp""+""""));}return comregexp.REDocumentDeclaration();}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""q\x00~\x00\x07ppsq\x00~\x00\x07ppsq\x00~\x00\x07ppsr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00""', '+', '""\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsq\x00~\x00\x00pp\x00sq\x00~\x00\x0fppsr\x00 com.sun.msv.grammar.OneO""', '+', '""rMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02""', '+', '""\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuex""', '+', '""p\x00psr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00""', '+', '""\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x17psr\x002com.sun.msv.grammar.Expres""', '+', '""sion$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x16\x01q\x00~\x00\x1bsr\x00 com""', '+', '"".sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.gram""', '+', '""mar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expression""', '+', '""$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x1cq\x00~\x00!sr\x00#com.sun.msv""', '+', '"".grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang""', '+', '""/String;L\x00\\fnamespaceURIq\x00~\x00#xq\x00~\x00\x1et\x00Bcom.sun.identity.diagno""', '+', '""stic.base.core.jaxbgen.TypeofserviceElementt\x00+http://java.su""', '+', '""n.com/jaxb/xjc/dummy-elementssq\x00~\x00\x00pp\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00""', '+', '""\x0fppsq\x00~\x00\x13q\x00~\x00\x17psq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x00?com.sun.i""', '+', '""dentity.diagnostic.base.core.jaxbgen.TypeofserviceTypeq\x00~\x00&s""', '+', '""q\x00~\x00\x0fppsq\x00~\x00\x18q\x00~\x00\x17psr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04nam""', '+', '""et\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04ppsr\x00\\""com.sun.msv.dat""', '+', '""atype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.B""', '+', '""uiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.Conc""', '+', '""reteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeIm""', '+', '""pl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUriq\x00~\x00#L\x00\\btypeNameq\x00~\x00#L\x00\\nwhiteSpa""', '+', '""cet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http""', '+', '""://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype""', '+', '"".xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.""', '+', '""datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv""', '+', '"".grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04ppsr\x00\x1b""', '+', '""com.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00#L\x00\\fna""', '+', '""mespaceURIq\x00~\x00#xpq\x00~\x00<q\x00~\x00;sq\x00~\x00\\""t\x00\x04typet\x00)http://www.w3.org""', '+', '""/2001/XMLSchema-instanceq\x00~\x00!sq\x00~\x00\\""t\x00\\rtypeofservicet\x00\x00sq\x00~\x00\x0f""', '+', '""ppsq\x00~\x00\x00pp\x00sq\x00~\x00\x0fppsq\x00~\x00\x13q\x00~\x00\x17psq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq""', '+', '""\x00~\x00\\""t\x00@com.sun.identity.diagnostic.base.core.jaxbgen.Realiza""', '+', '""tionElementq\x00~\x00&sq\x00~\x00\x00pp\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\x0fppsq\x00~\x00\x13q\x00~\x00""', '+', '""\x17psq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x00=com.sun.identity.diagn""', '+', '""ostic.base.core.jaxbgen.RealizationTypeq\x00~\x00&sq\x00~\x00\x0fppsq\x00~\x00\x18q\x00""', '+', '""~\x00\x17pq\x00~\x004q\x00~\x00Dq\x00~\x00!sq\x00~\x00\\""t\x00\x0brealizationq\x00~\x00Isq\x00~\x00\x0fppsq\x00~\x00\x00pp""', '+', '""\x00sq\x00~\x00\x0fppsq\x00~\x00\x13q\x00~\x00\x17psq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x00<com""', '+', '"".sun.identity.diagnostic.base.core.jaxbgen.RuntimeElementq\x00~""', '+', '""\x00&sq\x00~\x00\x00pp\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\x0fppsq\x00~\x00\x13q\x00~\x00\x17psq\x00~\x00\x18q\x00~\x00\x17p""', '+', '""q\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x009com.sun.identity.diagnostic.base.cor""', '+', '""e.jaxbgen.RuntimeTypeq\x00~\x00&sq\x00~\x00\x0fppsq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x004q\x00~\x00Dq\x00~\x00""', '+', '""!sq\x00~\x00\\""t\x00\x07runtimeq\x00~\x00Isq\x00~\x00\x18ppsq\x00~\x001q\x00~\x00\x17psr\x00#com.sun.msv.da""', '+', '""tatype.xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxq\x00~\x006q\x00~\x00;t""', '+', '""\x00\x06stringsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre""', '+', '""serve\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00>\x01q\x00~\x00Asq\x00~\x00Bq\x00~\x00tq\x00~\x00;sq\x00~\x00\\""t\x00\x05clazzq\x00""', '+', '""~\x00Isq\x00~\x00\x18ppq\x00~\x00qsq\x00~\x00\\""t\x00\x02idq\x00~\x00Isq\x00~\x00\x18ppq\x00~\x00qsq\x00~\x00\\""t\x00\x04nameq\x00""', '+', '""~\x00Isq\x00~\x00\x0fppsq\x00~\x00\x18q\x00~\x00\x17pq\x00~\x004q\x00~\x00Dq\x00~\x00!sq\x00~\x00\\""t\x00\x07serviceq\x00~\x00Is""', '+', '""r\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet""', '+', '""\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-com.s""', '+', '""un.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB""', '+', '""\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/ExpressionPo""', '+', '""ol;xp\x00\x00\x00\x1c\x01pq\x00~\x00\\nq\x00~\x00\\tq\x00~\x00\\fq\x00~\x00(q\x00~\x00Rq\x00~\x00\x0eq\x00~\x00eq\x00~\x00\\rq\x00~\x00\x15q\x00~\x00""', '+', '""+q\x00~\x00Mq\x00~\x00Uq\x00~\x00`q\x00~\x00hq\x00~\x00\x0bq\x00~\x00\x12q\x00~\x00*q\x00~\x00Lq\x00~\x00Tq\x00~\x00_q\x00~\x00gq\x00~\x00""', '+', '""/q\x00~\x00Yq\x00~\x00lq\x00~\x00\x80q\x00~\x00\x10q\x00~\x00Jq\x00~\x00]x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '=', 'null', ')', '{', '(', '(', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""msvgra""', '+', '""""', '+', '""pps""', '+', '""q""', '+', '""""', '+', '""""', '+', '""uiltinAtomicType""', '+', '""reteType""', '+', '""tionElementq""', '+', '""""', '+', '""""', '+', '""""', '+', '""Is""', '+', '""bexpTablet""', '+', '""""', '+', '""un""', '+', '""""', '+', '""olxp""', '+', '""""', ')', ')', ';', '}', 'return', 'comregexp', '.', 'REDocumentDeclaration', '(', ')', ';', '}']",185,75,6,8802,258,24,97.33424470266576,61.452513966480446,,,,-1,-1,-1,-1,False
L387_canReviseOwn_1.txt,code2vec,METHOD_NAME,token_wrong,0.3496,0.378,16.8298,17.9693,"{'n_total': 425, 'n_valid': 56, 'n_correct': 42}",167.917826,"public boolean canReviseOwn() { boolean canReviseOwn = false; try { Site site = siteService.getSite(toolManager.getCurrentPlacement().getContext()); canReviseOwn = securityService.unlock(ContentHostingService.AUTH_RESOURCE_WRITE_OWN, site.getReference()); } catch (IdUnusedException e) { log.debug(""ResourcesAction.canReviseOwn: cannot find current site""); } return canReviseOwn; }","boolean canReviseOwn(){try{site();canReviseOwn=securityService.unlock(getReference());}catch(IdUnusedException e){("""");}}","['public', 'boolean', 'canReviseOwn', '(', ')', '{', 'boolean', 'canReviseOwn', '=', 'false', ';', 'try', '{', 'Site', 'site', '=', 'siteService', '.', 'getSite', '(', 'toolManager', '.', 'getCurrentPlacement', '(', ')', '.', 'getContext', '(', ')', ')', ';', 'canReviseOwn', '=', 'securityService', '.', 'unlock', '(', 'ContentHostingService', '.', 'AUTH_RESOURCE_WRITE_OWN', ',', 'site', '.', 'getReference', '(', ')', ')', ';', '}', 'catch', '(', 'IdUnusedException', 'e', ')', '{', 'log', '.', 'debug', '(', '""ResourcesAction.canReviseOwn: cannot find current site""', ')', ';', '}', 'return', 'canReviseOwn', ';', '}']","['boolean', 'canReviseOwn', '(', ')', '{', 'try', '{', 'site', '(', ')', ';', 'canReviseOwn', '=', 'securityService', '.', 'unlock', '(', 'getReference', '(', ')', ')', ';', '}', 'catch', '(', 'IdUnusedException', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",67,35,6,381,121,18,71.62534435261708,52.459016393442624,,,,-1,-1,-1,-1,False
L388_setAlbumsModifiedCb_1.txt,code2vec,METHOD_NAME,token_wrong,0.2757,0.2629,18.0239,17.6283,"{'n_total': 216, 'n_valid': 37, 'n_correct': 25}",104.90832,public void setAlbumsModifiedCb(AlbumsModifiedCb AlbumsModifiedCb) { if (!mIsInitiated) return; this.mAlbumsModifiedCb = AlbumsModifiedCb; nativeSetMediaUpdatedCbFlag(AlbumsModifiedCb == null ? 0 : FLAG_MEDIA_UPDATED_AUDIO_EMPTY); },void setAlbumsModifiedCb(AlbumsModifiedCb AlbumsModifiedCb){(mIsInitiated);this.mAlbumsModifiedCb=(AlbumsModifiedCb?0:EMPTY);},"['public', 'void', 'setAlbumsModifiedCb', '(', 'AlbumsModifiedCb', 'AlbumsModifiedCb', ')', '{', 'if', '(', '!', 'mIsInitiated', ')', 'return', ';', 'this', '.', 'mAlbumsModifiedCb', '=', 'AlbumsModifiedCb', ';', 'nativeSetMediaUpdatedCbFlag', '(', 'AlbumsModifiedCb', '==', 'null', '?', '0', ':', 'FLAG_MEDIA_UPDATED_AUDIO_EMPTY', ')', ';', '}']","['void', 'setAlbumsModifiedCb', '(', 'AlbumsModifiedCb', 'AlbumsModifiedCb', ')', '{', '(', 'mIsInitiated', ')', ';', 'this', '.', 'mAlbumsModifiedCb', '=', '(', 'AlbumsModifiedCb', '?', '0', ':', 'EMPTY', ')', ';', '}']",33,24,6,232,126,25,51.20772946859904,33.33333333333333,,,,-1,-1,-1,-1,False
L389_saveLexicon_1.txt,code2vec,METHOD_NAME,token_wrong,0.8333,0.9999,17.3523,26.9208,"{'n_total': 128, 'n_valid': 19, 'n_correct': 16}",57.480772,public void saveLexicon() { if (isClone) { loadInstance(); instance.saveLexicon(); return; } super.saveLexicon(); },void saveLexicon(){{loadInstance;}},"['public', 'void', 'saveLexicon', '(', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'instance', '.', 'saveLexicon', '(', ')', ';', 'return', ';', '}', 'super', '.', 'saveLexicon', '(', ')', ';', '}']","['void', 'saveLexicon', '(', ')', '{', '{', 'loadInstance', ';', '}', '}']",31,10,6,115,35,17,81.63265306122449,84.0,,,,-1,-1,-1,-1,False
L390_processBytes_1.txt,code2vec,METHOD_NAME,token_wrong,0.2688,0.9005,9.6914,14.0841,"{'n_total': 173, 'n_valid': 22, 'n_correct': 16}",63.028948,"@NotNull public static IptcDirectory processBytes(@NotNull String filePath) throws IOException { Metadata metadata = new Metadata(); byte[] bytes = FileUtil.readBytes(filePath); new IptcReader().extract(new SequentialByteArrayReader(bytes), metadata, bytes.length); IptcDirectory directory = metadata.getFirstDirectoryOfType(IptcDirectory.class); assertNotNull(directory); return directory; }",IptcDirectory processBytes(@NotNull String filePath)throws IOException{getFirstDirectoryOfType(IptcDirectory.class);},"['@', 'NotNull', 'public', 'static', 'IptcDirectory', 'processBytes', '(', '@', 'NotNull', 'String', 'filePath', ')', 'throws', 'IOException', '{', 'Metadata', 'metadata', '=', 'new', 'Metadata', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'FileUtil', '.', 'readBytes', '(', 'filePath', ')', ';', 'new', 'IptcReader', '(', ')', '.', 'extract', '(', 'new', 'SequentialByteArrayReader', '(', 'bytes', ')', ',', 'metadata', ',', 'bytes', '.', 'length', ')', ';', 'IptcDirectory', 'directory', '=', 'metadata', '.', 'getFirstDirectoryOfType', '(', 'IptcDirectory', '.', 'class', ')', ';', 'assertNotNull', '(', 'directory', ')', ';', 'return', 'directory', ';', '}']","['IptcDirectory', 'processBytes', '(', '@', 'NotNull', 'String', 'filePath', ')', 'throws', 'IOException', '{', 'getFirstDirectoryOfType', '(', 'IptcDirectory', '.', 'class', ')', ';', '}']",76,19,6,392,117,18,73.52941176470588,81.42857142857143,,,,-1,-1,-1,-1,False
L391_terminate_1.txt,code2vec,METHOD_NAME,token_wrong,0.444,0.3237,3.6942,6.431,"{'n_total': 116, 'n_valid': 19, 'n_correct': 12}",55.735518,public synchronized void terminate() { shouldTerminate = true; needReturn = false; this.notify(); },void terminate(){needReturn=false;notify();},"['public', 'synchronized', 'void', 'terminate', '(', ')', '{', 'shouldTerminate', '=', 'true', ';', 'needReturn', '=', 'false', ';', 'this', '.', 'notify', '(', ')', ';', '}']","['void', 'terminate', '(', ')', '{', 'needReturn', '=', 'false', ';', 'notify', '(', ')', ';', '}']",22,14,6,99,44,15,65.47619047619048,50.0,,,,-1,-1,-1,-1,False
L392_generateUnboxing_1.txt,code2vec,METHOD_NAME,token_wrong,0.2936,0.781,16.5137,21.5371,"{'n_total': 365, 'n_valid': 60, 'n_correct': 29}",175.970823,"private static void generateUnboxing(@Nonnull MethodVisitor mv, @Nonnull PrimitiveType primitiveType) { String owner = primitiveType.getWrapperTypeDesc(); String methodName = primitiveType.getClassName() + ""Value""; String methodDesc = ""()"" + primitiveType.getTypeCode(); mv.visitMethodInsn(INVOKEVIRTUAL, owner, methodName, methodDesc, false); }","void generateUnboxing(@Nonnull MethodVisitor mv,PrimitiveType primitiveType){methodName=mv(INVOKEVIRTUAL,false);}","['private', 'static', 'void', 'generateUnboxing', '(', '@', 'Nonnull', 'MethodVisitor', 'mv', ',', '@', 'Nonnull', 'PrimitiveType', 'primitiveType', ')', '{', 'String', 'owner', '=', 'primitiveType', '.', 'getWrapperTypeDesc', '(', ')', ';', 'String', 'methodName', '=', 'primitiveType', '.', 'getClassName', '(', ')', '+', '""Value""', ';', 'String', 'methodDesc', '=', '""()""', '+', 'primitiveType', '.', 'getTypeCode', '(', ')', ';', 'mv', '.', 'visitMethodInsn', '(', 'INVOKEVIRTUAL', ',', 'owner', ',', 'methodName', ',', 'methodDesc', ',', 'false', ')', ';', '}']","['void', 'generateUnboxing', '(', '@', 'Nonnull', 'MethodVisitor', 'mv', ',', 'PrimitiveType', 'primitiveType', ')', '{', 'methodName', '=', 'mv', '(', 'INVOKEVIRTUAL', ',', 'false', ')', ';', '}']",63,22,6,345,113,22,71.8266253869969,71.9298245614035,,,,-1,-1,-1,-1,False
L393_setColumnEnabled_1.txt,code2vec,METHOD_NAME,token_wrong,0.1632,0.1632,14.6837,14.6837,"{'n_total': 380, 'n_valid': 55, 'n_correct': 18}",155.278682,"public void setColumnEnabled(Column column, boolean enabled) { FileTableColumnModel columnModel = getFileTableColumnModel(); columnModel.setColumnEnabled(column, enabled); updateColumnsVisibility(); if (sortInfo.getCriterion() == column && !columnModel.isColumnVisible(column)) sortBy(Column.NAME); }","void setColumnEnabled(Column column,boolean enabled){FileTableColumnModel columnModel=getFileTableColumnModel();columnModel.setColumnEnabled(column,enabled);updateColumnsVisibility();if(sortInfo.getCriterion()==column&&!columnModel.isColumnVisible(column))sortBy(Column.NAME);}","['public', 'void', 'setColumnEnabled', '(', 'Column', 'column', ',', 'boolean', 'enabled', ')', '{', 'FileTableColumnModel', 'columnModel', '=', 'getFileTableColumnModel', '(', ')', ';', 'columnModel', '.', 'setColumnEnabled', '(', 'column', ',', 'enabled', ')', ';', 'updateColumnsVisibility', '(', ')', ';', 'if', '(', 'sortInfo', '.', 'getCriterion', '(', ')', '==', 'column', '&&', '!', 'columnModel', '.', 'isColumnVisible', '(', 'column', ')', ')', 'sortBy', '(', 'Column', '.', 'NAME', ')', ';', '}']","['void', 'setColumnEnabled', '(', 'Column', 'column', ',', 'boolean', 'enabled', ')', '{', 'FileTableColumnModel', 'columnModel', '=', 'getFileTableColumnModel', '(', ')', ';', 'columnModel', '.', 'setColumnEnabled', '(', 'column', ',', 'enabled', ')', ';', 'updateColumnsVisibility', '(', ')', ';', 'if', '(', 'sortInfo', '.', 'getCriterion', '(', ')', '==', 'column', '&&', '!', 'columnModel', '.', 'isColumnVisible', '(', 'column', ')', ')', 'sortBy', '(', 'Column', '.', 'NAME', ')', ';', '}']",57,56,6,300,277,22,8.273381294964029,1.9607843137254901,,,,-1,-1,-1,-1,False
L394_createStub_1.txt,code2vec,METHOD_NAME,token_wrong,0.6438,0.2423,11.0502,11.1037,"{'n_total': 227, 'n_valid': 42, 'n_correct': 14}",117.636817,"@Override public <T> T createStub(Class<T> interfaceClass) { ServiceUrlProvider serviceUrlProvider = context.getServiceUrlProvider(); String serviceUrl = serviceUrlProvider.getUrl(); WebTarget target = client.target(serviceUrl); return WebResourceFactory.newResource(interfaceClass, target); }","T createStub(Class<T>interfaceClass){WebTarget target=client.target(serviceUrl);return WebResourceFactory.newResource(interfaceClass,target);}","['@', 'Override', 'public', '<', 'T', '>', 'T', 'createStub', '(', 'Class', '<', 'T', '>', 'interfaceClass', ')', '{', 'ServiceUrlProvider', 'serviceUrlProvider', '=', 'context', '.', 'getServiceUrlProvider', '(', ')', ';', 'String', 'serviceUrl', '=', 'serviceUrlProvider', '.', 'getUrl', '(', ')', ';', 'WebTarget', 'target', '=', 'client', '.', 'target', '(', 'serviceUrl', ')', ';', 'return', 'WebResourceFactory', '.', 'newResource', '(', 'interfaceClass', ',', 'target', ')', ';', '}']","['T', 'createStub', '(', 'Class', '<', 'T', '>', 'interfaceClass', ')', '{', 'WebTarget', 'target', '=', 'client', '.', 'target', '(', 'serviceUrl', ')', ';', 'return', 'WebResourceFactory', '.', 'newResource', '(', 'interfaceClass', ',', 'target', ')', ';', '}']",55,31,6,293,142,16,54.51263537906137,48.97959183673469,,,,-1,-1,-1,-1,False
L395_generatePathIndexes_1.txt,code2vec,METHOD_NAME,token_wrong,0.3728,0.6113,18.0979,18.1162,"{'n_total': 458, 'n_valid': 38, 'n_correct': 38}",124.901913,"private Set<String> generatePathIndexes(ISaveIndex saveImpl, Set<String> resourceNames) throws Exception { Set<String> ret = new HashSet<String>(1); if (resourceNames != null) { for (String resourceName : resourceNames) { ret.addAll(saveImpl.getIndexes(resourceName).getPathIndexes()); } } return ret; }","Set generatePathIndexes(ISaveIndex saveImpl,Set resourceNames)throws Exception{Set<String>ret=(1);if(resourceNames){for(String resourceName:resourceNames){(getPathIndexes());}}}","['private', 'Set', '<', 'String', '>', 'generatePathIndexes', '(', 'ISaveIndex', 'saveImpl', ',', 'Set', '<', 'String', '>', 'resourceNames', ')', 'throws', 'Exception', '{', 'Set', '<', 'String', '>', 'ret', '=', 'new', 'HashSet', '<', 'String', '>', '(', '1', ')', ';', 'if', '(', 'resourceNames', '!=', 'null', ')', '{', 'for', '(', 'String', 'resourceName', ':', 'resourceNames', ')', '{', 'ret', '.', 'addAll', '(', 'saveImpl', '.', 'getIndexes', '(', 'resourceName', ')', '.', 'getPathIndexes', '(', ')', ')', ';', '}', '}', 'return', 'ret', ';', '}']","['Set', 'generatePathIndexes', '(', 'ISaveIndex', 'saveImpl', ',', 'Set', 'resourceNames', ')', 'throws', 'Exception', '{', 'Set', '<', 'String', '>', 'ret', '=', '(', '1', ')', ';', 'if', '(', 'resourceNames', ')', '{', 'for', '(', 'String', 'resourceName', ':', 'resourceNames', ')', '{', '(', 'getPathIndexes', '(', ')', ')', ';', '}', '}', '}']",71,44,6,303,177,25,45.32374100719424,41.53846153846154,,,,-1,-1,-1,-1,False
L396_discreteValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.2624,0.3498,15.7588,19.2959,"{'n_total': 452, 'n_valid': 59, 'n_correct': 38}",165.992586,"public String discreteValue(Object __example) { if (!(__example instanceof Token)) { String type = __example == null ? ""null"" : __example.getClass().getName(); System.err.println(""Classifier 'labelTwoBeforeU(Token)' defined on line 48 of POSUnknown.lbj received '"" + type + ""' as input.""); new Exception().printStackTrace(); System.exit(1); } return cachedFeatureValue(__example).getStringValue(); }","String discreteValue(Object example){if((example instanceof Token)){String=println(""""+"""");System(1);}(_).getStringValue();}","['public', 'String', 'discreteValue', '(', 'Object', '__example', ')', '{', 'if', '(', '!', '(', '__example', 'instanceof', 'Token', ')', ')', '{', 'String', 'type', '=', '__example', '==', 'null', '?', '""null""', ':', '__example', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', '""Classifier \'labelTwoBeforeU(Token)\' defined on line 48 of POSUnknown.lbj received \'""', '+', 'type', '+', '""\' as input.""', ')', ';', 'new', 'Exception', '(', ')', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'return', 'cachedFeatureValue', '(', '__example', ')', '.', 'getStringValue', '(', ')', ';', '}']","['String', 'discreteValue', '(', 'Object', 'example', ')', '{', 'if', '(', '(', 'example', 'instanceof', 'Token', ')', ')', '{', 'String', '=', 'println', '(', '""""', '+', '""""', ')', ';', 'System', '(', '1', ')', ';', '}', '(', '_', ')', '.', 'getStringValue', '(', ')', ';', '}']",78,40,6,399,123,19,72.63157894736842,52.77777777777778,,,,-1,-1,-1,-1,False
L397_shutdown_1.txt,code2vec,METHOD_NAME,token_wrong,0.8426,0.9991,3.894,10.517,"{'n_total': 235, 'n_valid': 23, 'n_correct': 19}",67.402933,"public final void shutdown() { synchronized (waitMonitor) { if (!destroyed) { destroyed = true; LOG.info(""Shutting down application""); shutdownRegistry.execute(); waitMonitor.notifyAll(); } } }",void shutdown(){synchronized(waitMonitor){if(destroyed){waitMonitor.notifyAll();}}},"['public', 'final', 'void', 'shutdown', '(', ')', '{', 'synchronized', '(', 'waitMonitor', ')', '{', 'if', '(', '!', 'destroyed', ')', '{', 'destroyed', '=', 'true', ';', 'LOG', '.', 'info', '(', '""Shutting down application""', ')', ';', 'shutdownRegistry', '.', 'execute', '(', ')', ';', 'waitMonitor', '.', 'notifyAll', '(', ')', ';', '}', '}', '}']","['void', 'shutdown', '(', ')', '{', 'synchronized', '(', 'waitMonitor', ')', '{', 'if', '(', 'destroyed', ')', '{', 'waitMonitor', '.', 'notifyAll', '(', ')', ';', '}', '}', '}']",44,24,6,193,83,14,61.452513966480446,52.63157894736842,,,,-1,-1,-1,-1,False
L398_getOpposite_1.txt,code2vec,METHOD_NAME,token_wrong,0.9201,0.3232,12.1426,10.1717,"{'n_total': 241, 'n_valid': 26, 'n_correct': 23}",74.816982,"@Override public V getOpposite(V vertex, E edge) { if (!containsVertex(vertex) || !containsEdge(edge)) return null; Pair<V> endpoints = edge_vpairs.get(edge); V v1 = endpoints.getFirst(); V v2 = endpoints.getSecond(); return v1.equals(vertex) ? v2 : v1; }","V getOpposite(V vertex,E edge){if(containsVertex(vertex)|(edge))return endpoints?v:1;}","['@', 'Override', 'public', 'V', 'getOpposite', '(', 'V', 'vertex', ',', 'E', 'edge', ')', '{', 'if', '(', '!', 'containsVertex', '(', 'vertex', ')', '||', '!', 'containsEdge', '(', 'edge', ')', ')', 'return', 'null', ';', 'Pair', '<', 'V', '>', 'endpoints', '=', 'edge_vpairs', '.', 'get', '(', 'edge', ')', ';', 'V', 'v1', '=', 'endpoints', '.', 'getFirst', '(', ')', ';', 'V', 'v2', '=', 'endpoints', '.', 'getSecond', '(', ')', ';', 'return', 'v1', '.', 'equals', '(', 'vertex', ')', '?', 'v2', ':', 'v1', ';', '}']","['V', 'getOpposite', '(', 'V', 'vertex', ',', 'E', 'edge', ')', '{', 'if', '(', 'containsVertex', '(', 'vertex', ')', '|', '(', 'edge', ')', ')', 'return', 'endpoints', '?', 'v', ':', '1', ';', '}']",74,29,6,255,86,17,71.00840336134453,66.17647058823529,,,,-1,-1,-1,-1,False
L399_setE_1.txt,code2vec,METHOD_NAME,token_wrong,0.32,0.3378,17.9818,20.1601,"{'n_total': 283, 'n_valid': 39, 'n_correct': 31}",112.611108,public void setE(int n) { if (n < 0) { m_V = true; m_E = -n; } else { m_E = n; } },void setE(int n){if(n<0){V=-n;}{}},"['public', 'void', 'setE', '(', 'int', 'n', ')', '{', 'if', '(', 'n', '<', '0', ')', '{', 'm_V', '=', 'true', ';', 'm_E', '=', '-', 'n', ';', '}', 'else', '{', 'm_E', '=', 'n', ';', '}', '}']","['void', 'setE', '(', 'int', 'n', ')', '{', 'if', '(', 'n', '<', '0', ')', '{', 'V', '=', '-', 'n', ';', '}', '{', '}', '}']",33,23,6,82,34,10,66.66666666666666,37.03703703703704,,,,-1,-1,-1,-1,False
L400_updatePerson_1.txt,code2vec,METHOD_NAME,token_wrong,0.9202,0.973,6.6738,11.4966,"{'n_total': 589, 'n_valid': 53, 'n_correct': 46}",153.96733,"@Produces({ MediaType.APPLICATION_JSON }) @Path(""/{email}"") @PUT public Person updatePerson(@PathParam(""email"") final String email, @FormParam(""firstName"") final String firstName, @FormParam(""lastName"") final String lastName) { final Person person = peopleService.getByEmail(email); if (firstName != null) { person.setFirstName(firstName); } if (lastName != null) { person.setLastName(lastName); } return person; }","@Produces({})@Path("""")Person updatePerson(@PathParam("""")String email,@FormParam("""")String lastName){person=peopleService.getByEmail();if(firstName){(firstName);}if(lastName){}}","['@', 'Produces', '(', '{', 'MediaType', '.', 'APPLICATION_JSON', '}', ')', '@', 'Path', '(', '""/{email}""', ')', '@', 'PUT', 'public', 'Person', 'updatePerson', '(', '@', 'PathParam', '(', '""email""', ')', 'final', 'String', 'email', ',', '@', 'FormParam', '(', '""firstName""', ')', 'final', 'String', 'firstName', ',', '@', 'FormParam', '(', '""lastName""', ')', 'final', 'String', 'lastName', ')', '{', 'final', 'Person', 'person', '=', 'peopleService', '.', 'getByEmail', '(', 'email', ')', ';', 'if', '(', 'firstName', '!=', 'null', ')', '{', 'person', '.', 'setFirstName', '(', 'firstName', ')', ';', '}', 'if', '(', 'lastName', '!=', 'null', ')', '{', 'person', '.', 'setLastName', '(', 'lastName', ')', ';', '}', 'return', 'person', ';', '}']","['@', 'Produces', '(', '{', '}', ')', '@', 'Path', '(', '""""', ')', 'Person', 'updatePerson', '(', '@', 'PathParam', '(', '""""', ')', 'String', 'email', ',', '@', 'FormParam', '(', '""""', ')', 'String', 'lastName', ')', '{', 'person', '=', 'peopleService', '.', 'getByEmail', '(', ')', ';', 'if', '(', 'firstName', ')', '{', '(', 'firstName', ')', ';', '}', 'if', '(', 'lastName', ')', '{', '}', '}']",93,56,6,414,176,18,60.1010101010101,42.5287356321839,,,,-1,-1,-1,-1,False
L401_removeReferencePrefix_1.txt,code2vec,METHOD_NAME,token_wrong,0.4724,0.4876,18.3192,17.8932,"{'n_total': 282, 'n_valid': 38, 'n_correct': 25}",116.183413,"private String removeReferencePrefix(String referenceId) { if (referenceId.startsWith(REF_PREFIX)) { referenceId = referenceId.replaceFirst(REF_PREFIX, """"); } return referenceId; }","String removeReferencePrefix(String referenceId){if((REFPREFIX)){("""");}}","['private', 'String', 'removeReferencePrefix', '(', 'String', 'referenceId', ')', '{', 'if', '(', 'referenceId', '.', 'startsWith', '(', 'REF_PREFIX', ')', ')', '{', 'referenceId', '=', 'referenceId', '.', 'replaceFirst', '(', 'REF_PREFIX', ',', '""""', ')', ';', '}', 'return', 'referenceId', ';', '}']","['String', 'removeReferencePrefix', '(', 'String', 'referenceId', ')', '{', 'if', '(', '(', 'REFPREFIX', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",34,20,6,180,72,27,70.58823529411765,50.0,,,,-1,-1,-1,-1,False
L402_cancelFromNative_1.txt,code2vec,METHOD_NAME,token_wrong,0.372,0.9609,19.9959,24.921,"{'n_total': 340, 'n_valid': 37, 'n_correct': 26}",105.981298,"@SuppressWarnings(""unused"") private static void cancelFromNative(final Dialog dialog) { sHandler.post(new Runnable() { @Override public void run() { if (dialog instanceof IdDialog) ((IdDialog) dialog).dismiss(); if (sCallbacks != null && dialog != null) sCallbacks.onCanceled(dialog); } }); }",@SuppressWarnings()void cancelFromNative(Dialog dialog){(new Runnable(){run(){if(dialog&&dialog!=null)sCallbacks.onCanceled(dialog);}});},"['@', 'SuppressWarnings', '(', '""unused""', ')', 'private', 'static', 'void', 'cancelFromNative', '(', 'final', 'Dialog', 'dialog', ')', '{', 'sHandler', '.', 'post', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'if', '(', 'dialog', 'instanceof', 'IdDialog', ')', '(', '(', 'IdDialog', ')', 'dialog', ')', '.', 'dismiss', '(', ')', ';', 'if', '(', 'sCallbacks', '!=', 'null', '&&', 'dialog', '!=', 'null', ')', 'sCallbacks', '.', 'onCanceled', '(', 'dialog', ')', ';', '}', '}', ')', ';', '}']","['@', 'SuppressWarnings', '(', ')', 'void', 'cancelFromNative', '(', 'Dialog', 'dialog', ')', '{', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'if', '(', 'dialog', '&&', 'dialog', '!=', 'null', ')', 'sCallbacks', '.', 'onCanceled', '(', 'dialog', ')', ';', '}', '}', ')', ';', '}']",71,41,6,292,137,22,57.407407407407405,46.15384615384615,,,,-1,-1,-1,-1,False
L403_checkConstruction_1.txt,code2vec,METHOD_NAME,token_wrong,0.7166,0.2681,13.3649,13.6753,"{'n_total': 322, 'n_valid': 39, 'n_correct': 27}",114.023246,"private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }","void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);(ASNString);restrictiongetInstance(str);checkValues();}","['private', 'void', 'checkConstruction', '(', 'Restriction', 'restriction', ',', 'DirectoryString', 'res', ')', 'throws', 'IOException', '{', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', 'restriction', '=', 'Restriction', '.', 'getInstance', '(', 'restriction', ')', ';', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', 'ASN1InputStream', 'aIn', '=', 'new', 'ASN1InputStream', '(', 'restriction', '.', 'toASN1Primitive', '(', ')', '.', 'getEncoded', '(', ')', ')', ';', 'ASN1String', 'str', '=', '(', 'ASN1String', ')', 'aIn', '.', 'readObject', '(', ')', ';', 'restriction', '=', 'Restriction', '.', 'getInstance', '(', 'str', ')', ';', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', '}']","['void', 'checkConstruction', '(', 'Restriction', 'restriction', ',', 'DirectoryString', 'res', ')', '{', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', '(', 'ASNString', ')', ';', 'restrictiongetInstance', '(', 'str', ')', ';', 'checkValues', '(', ')', ';', '}']",82,31,6,423,152,23,67.75,67.10526315789474,,,,-1,-1,-1,-1,False
L404_checkSize_1.txt,code2vec,METHOD_NAME,token_wrong,0.8452,0.2936,9.9065,11.9813,"{'n_total': 659, 'n_valid': 67, 'n_correct': 55}",204.378602,"protected void checkSize(final int maxLength, final String message, final Context context, final int atLine, final int atOffset, final int linesLength, final BugList bugs) { final String lengthThreshold = context.getConfiguration().getParameter(this, ""length""); int length = maxLength; if (lengthThreshold != null) { length = Integer.parseInt(lengthThreshold); } if (linesLength > length) { context.addMessage(message, Integer.toString(linesLength), this, atLine, atOffset); } }","void checkSize(int maxLength,String message,Context context,int atLine,int atOffset,int linesLength,BugList bugs){lengthThreshold().getParameter(this,"""");if(lengthThreshold){(lengthThreshold);}if(length){(atOffset);}}","['protected', 'void', 'checkSize', '(', 'final', 'int', 'maxLength', ',', 'final', 'String', 'message', ',', 'final', 'Context', 'context', ',', 'final', 'int', 'atLine', ',', 'final', 'int', 'atOffset', ',', 'final', 'int', 'linesLength', ',', 'final', 'BugList', 'bugs', ')', '{', 'final', 'String', 'lengthThreshold', '=', 'context', '.', 'getConfiguration', '(', ')', '.', 'getParameter', '(', 'this', ',', '""length""', ')', ';', 'int', 'length', '=', 'maxLength', ';', 'if', '(', 'lengthThreshold', '!=', 'null', ')', '{', 'length', '=', 'Integer', '.', 'parseInt', '(', 'lengthThreshold', ')', ';', '}', 'if', '(', 'linesLength', '>', 'length', ')', '{', 'context', '.', 'addMessage', '(', 'message', ',', 'Integer', '.', 'toString', '(', 'linesLength', ')', ',', 'this', ',', 'atLine', ',', 'atOffset', ')', ';', '}', '}']","['void', 'checkSize', '(', 'int', 'maxLength', ',', 'String', 'message', ',', 'Context', 'context', ',', 'int', 'atLine', ',', 'int', 'atOffset', ',', 'int', 'linesLength', ',', 'BugList', 'bugs', ')', '{', 'lengthThreshold', '(', ')', '.', 'getParameter', '(', 'this', ',', '""""', ')', ';', 'if', '(', 'lengthThreshold', ')', '{', '(', 'lengthThreshold', ')', ';', '}', 'if', '(', 'length', ')', '{', '(', 'atOffset', ')', ';', '}', '}']",101,57,6,478,217,15,56.371490280777536,46.31578947368421,,,,-1,-1,-1,-1,False
L405_beforeAll_1.txt,code2vec,METHOD_NAME,token_wrong,0.4474,0.7452,3.1928,4.1837,"{'n_total': 278, 'n_valid': 28, 'n_correct': 20}",80.306785,@Override public void beforeAll(@Nonnull ExtensionContext context) { if (isRegularTestClass(context)) { @Nullable Class<?> testClass = context.getTestClass().orElse(null); savePointForTestClass = new SavePoint(); TestRun.setCurrentTestClass(testClass); } },void beforeAll(@Nonnull ExtensionContext context){{@Nullable Class<?>testClass=context();savePointForTestClass();TestRun.setCurrentTestClass();}},"['@', 'Override', 'public', 'void', 'beforeAll', '(', '@', 'Nonnull', 'ExtensionContext', 'context', ')', '{', 'if', '(', 'isRegularTestClass', '(', 'context', ')', ')', '{', '@', 'Nullable', 'Class', '<', '?', '>', 'testClass', '=', 'context', '.', 'getTestClass', '(', ')', '.', 'orElse', '(', 'null', ')', ';', 'savePointForTestClass', '=', 'new', 'SavePoint', '(', ')', ';', 'TestRun', '.', 'setCurrentTestClass', '(', 'testClass', ')', ';', '}', '}']","['void', 'beforeAll', '(', '@', 'Nonnull', 'ExtensionContext', 'context', ')', '{', '{', '@', 'Nullable', 'Class', '<', '?', '>', 'testClass', '=', 'context', '(', ')', ';', 'savePointForTestClass', '(', ')', ';', 'TestRun', '.', 'setCurrentTestClass', '(', ')', ';', '}', '}']",55,34,6,256,145,15,46.058091286307054,42.857142857142854,,,,-1,-1,-1,-1,False
L406_connectivityCallbacks_1.txt,code2vec,METHOD_NAME,token_wrong,0.9389,0.323,21.7567,19.7254,"{'n_total': 244, 'n_valid': 27, 'n_correct': 27}",79.69071,"private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangesNotifier, connectivityChangeEventExtractor); } return connectivityCallbacks; }",ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacks();}},"['private', 'ConnectivityCallbacks', 'connectivityCallbacks', '(', 'MerlinService', '.', 'ConnectivityChangesNotifier', 'connectivityChangesNotifier', ')', '{', 'if', '(', 'connectivityCallbacks', '==', 'null', ')', '{', 'connectivityCallbacks', '=', 'new', 'ConnectivityCallbacks', '(', 'connectivityChangesNotifier', ',', 'connectivityChangeEventExtractor', ')', ';', '}', 'return', 'connectivityCallbacks', ';', '}']","['ConnectivityCallbacks', 'connectivityCallbacks', '(', 'MerlinService', 'connectivityChangesNotifier', ')', '{', 'if', '(', 'connectivityCallbacks', ')', '{', 'connectivityCallbacks', '(', ')', ';', '}', '}']",32,18,6,309,139,27,60.28368794326241,53.84615384615385,,,,-1,-1,-1,-1,False
L407_initTest_1.txt,code2vec,METHOD_NAME,token_wrong,0.4903,0.3919,9.3051,10.0988,"{'n_total': 458, 'n_valid': 52, 'n_correct': 39}",146.671336,"@BeforeClass(alwaysRun = true, groups = { Constants.MobileDeviceManagement.MOBILE_DEVICE_MANAGEMENT_GROUP }) public void initTest() throws Exception { super.init(TestUserMode.SUPER_TENANT_ADMIN); String accessTokenString = ""Bearer "" + OAuthUtil.getOAuthToken(backendHTTPSURL, backendHTTPSURL); this.client = new MDMHttpClient(backendHTTPSURL, Constants.APPLICATION_JSON, accessTokenString); }","@BeforeClass(alwaysRun=true,groups={})void initTest()throws Exception{(ADMIN);accessTokenString=""""+OAuthUtil();thisclient=MDMHttpClient(JSON,accessTokenString);}","['@', 'BeforeClass', '(', 'alwaysRun', '=', 'true', ',', 'groups', '=', '{', 'Constants', '.', 'MobileDeviceManagement', '.', 'MOBILE_DEVICE_MANAGEMENT_GROUP', '}', ')', 'public', 'void', 'initTest', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'init', '(', 'TestUserMode', '.', 'SUPER_TENANT_ADMIN', ')', ';', 'String', 'accessTokenString', '=', '""Bearer ""', '+', 'OAuthUtil', '.', 'getOAuthToken', '(', 'backendHTTPSURL', ',', 'backendHTTPSURL', ')', ';', 'this', '.', 'client', '=', 'new', 'MDMHttpClient', '(', 'backendHTTPSURL', ',', 'Constants', '.', 'APPLICATION_JSON', ',', 'accessTokenString', ')', ';', '}']","['@', 'BeforeClass', '(', 'alwaysRun', '=', 'true', ',', 'groups', '=', '{', '}', ')', 'void', 'initTest', '(', ')', 'throws', 'Exception', '{', '(', 'ADMIN', ')', ';', 'accessTokenString', '=', '""""', '+', 'OAuthUtil', '(', ')', ';', 'thisclient', '=', 'MDMHttpClient', '(', 'JSON', ',', 'accessTokenString', ')', ';', '}']",65,41,6,392,161,14,61.111111111111114,40.67796610169492,,,,-1,-1,-1,-1,False
L408_checkUidSig_1.txt,code2vec,METHOD_NAME,token_wrong,0.9308,0.7956,19.6084,18.0858,"{'n_total': 562, 'n_valid': 40, 'n_correct': 40}",134.62791,"private void checkUidSig(PGPPublicKey pk, String uid) throws Exception { Iterator<PGPSignature> sigit = pk.getSignaturesForID(uid); while (sigit.hasNext()) { PGPSignature sig = (PGPSignature) sigit.next(); if (!isGoodUIDSignature(sig, pk, uid)) { fail(""Bad self-signature found for '"" + uid + ""'""); } } }","void checkUidSig(PGPPublicKey pk,String uid)throws Exception{Iterator<PGPSignature>sigit=(uid);while(hasNext()){next();if((pk)){(""""+"""");}}}","['private', 'void', 'checkUidSig', '(', 'PGPPublicKey', 'pk', ',', 'String', 'uid', ')', 'throws', 'Exception', '{', 'Iterator', '<', 'PGPSignature', '>', 'sigit', '=', 'pk', '.', 'getSignaturesForID', '(', 'uid', ')', ';', 'while', '(', 'sigit', '.', 'hasNext', '(', ')', ')', '{', 'PGPSignature', 'sig', '=', '(', 'PGPSignature', ')', 'sigit', '.', 'next', '(', ')', ';', 'if', '(', '!', 'isGoodUIDSignature', '(', 'sig', ',', 'pk', ',', 'uid', ')', ')', '{', 'fail', '(', '""Bad self-signature found for \'""', '+', 'uid', '+', '""\'""', ')', ';', '}', '}', '}']","['void', 'checkUidSig', '(', 'PGPPublicKey', 'pk', ',', 'String', 'uid', ')', 'throws', 'Exception', '{', 'Iterator', '<', 'PGPSignature', '>', 'sigit', '=', '(', 'uid', ')', ';', 'while', '(', 'hasNext', '(', ')', ')', '{', 'next', '(', ')', ';', 'if', '(', '(', 'pk', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', '}', '}']",72,49,6,304,139,17,57.491289198606275,34.84848484848485,,,,-1,-1,-1,-1,False
L409_initializeTokens_1.txt,code2vec,METHOD_NAME,token_wrong,0.2773,0.2903,14.8873,14.8238,"{'n_total': 245, 'n_valid': 35, 'n_correct': 21}",99.601003,"private void initializeTokens() { if (tokens == null) { tokens = textAnnotation.getTokensInSpan(this.getStartSpan(), this.getEndSpan()); } }","void initializeTokens(){if(tokens){tokens=textAnnotation.getTokensInSpan(this.getStartSpan(),getEndSpan);}}","['private', 'void', 'initializeTokens', '(', ')', '{', 'if', '(', 'tokens', '==', 'null', ')', '{', 'tokens', '=', 'textAnnotation', '.', 'getTokensInSpan', '(', 'this', '.', 'getStartSpan', '(', ')', ',', 'this', '.', 'getEndSpan', '(', ')', ')', ';', '}', '}']","['void', 'initializeTokens', '(', ')', '{', 'if', '(', 'tokens', ')', '{', 'tokens', '=', 'textAnnotation', '.', 'getTokensInSpan', '(', 'this', '.', 'getStartSpan', '(', ')', ',', 'getEndSpan', ')', ';', '}', '}']",34,27,6,140,107,22,27.966101694915253,25.0,,,,-1,-1,-1,-1,False
L410_setEnabled_1.txt,code2vec,METHOD_NAME,token_wrong,0.6709,0.578,1.4077,5.3912,"{'n_total': 200, 'n_valid': 29, 'n_correct': 23}",83.216033,public void setEnabled(boolean enable) { enabled = enable; if (!enable) { lock.abortRemove(); last = first = null; } },void setEnabled(boolean enable){if(enable){}},"['public', 'void', 'setEnabled', '(', 'boolean', 'enable', ')', '{', 'enabled', '=', 'enable', ';', 'if', '(', '!', 'enable', ')', '{', 'lock', '.', 'abortRemove', '(', ')', ';', 'last', '=', 'first', '=', 'null', ';', '}', '}']","['void', 'setEnabled', '(', 'boolean', 'enable', ')', '{', 'if', '(', 'enable', ')', '{', '}', '}']",32,14,6,118,45,16,71.56862745098039,69.23076923076923,,,,-1,-1,-1,-1,False
L411_pruneNearZeroWeights_1.txt,code2vec,METHOD_NAME,token_wrong,0.2236,0.2978,15.1689,17.0936,"{'n_total': 504, 'n_valid': 55, 'n_correct': 32}",167.58557,"void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) { float w = data.get(key); if (Math.abs(w) > epsilon) { pruned.set(key, w); } } this.data = pruned; }",void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data){(key);if(epsilon){pruned.set(keyw);}}},"['void', 'pruneNearZeroWeights', '(', ')', '{', 'FloatValueMap', '<', 'String', '>', 'pruned', '=', 'new', 'FloatValueMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'data', ')', '{', 'float', 'w', '=', 'data', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'Math', '.', 'abs', '(', 'w', ')', '>', 'epsilon', ')', '{', 'pruned', '.', 'set', '(', 'key', ',', 'w', ')', ';', '}', '}', 'this', '.', 'data', '=', 'pruned', ';', '}']","['void', 'pruneNearZeroWeights', '(', ')', '{', 'pruned', '=', 'new', 'FloatValueMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'data', ')', '{', '(', 'key', ')', ';', 'if', '(', 'epsilon', ')', '{', 'pruned', '.', 'set', '(', 'keyw', ')', ';', '}', '}', '}']",66,41,6,209,116,26,50.81967213114754,41.66666666666667,,,,-1,-1,-1,-1,False
L412_browseDir_1.txt,code2vec,METHOD_NAME,token_wrong,0.5157,0.9654,17.2181,21.4995,"{'n_total': 375, 'n_valid': 39, 'n_correct': 30}",121.327135,"public static ActionListener browseDir(final Component component, final File dir, final boolean create) { return new ActionListener() { @Override public void actionPerformed(ActionEvent e) { if (create) { dir.mkdirs(); } SwingHelper.browseDir(dir, component); } }; }","ActionListener browseDir(Component component,File dir,boolean create){new ActionListener(){void actionPerformed(ActionEvent e){if(create){}SwingHelper.browseDir();}};}","['public', 'static', 'ActionListener', 'browseDir', '(', 'final', 'Component', 'component', ',', 'final', 'File', 'dir', ',', 'final', 'boolean', 'create', ')', '{', 'return', 'new', 'ActionListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'if', '(', 'create', ')', '{', 'dir', '.', 'mkdirs', '(', ')', ';', '}', 'SwingHelper', '.', 'browseDir', '(', 'dir', ',', 'component', ')', ';', '}', '}', ';', '}']","['ActionListener', 'browseDir', '(', 'Component', 'component', ',', 'File', 'dir', ',', 'boolean', 'create', ')', '{', 'new', 'ActionListener', '(', ')', '{', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'if', '(', 'create', ')', '{', '}', 'SwingHelper', '.', 'browseDir', '(', ')', ';', '}', '}', ';', '}']",59,41,6,266,167,15,39.44223107569721,33.9622641509434,,,,-1,-1,-1,-1,False
L413_getReviewRenderBean_1.txt,code2vec,METHOD_NAME,token_wrong,0.267,0.4436,15.5872,18.1744,"{'n_total': 366, 'n_valid': 35, 'n_correct': 34}",101.142987,"public RenderBean getReviewRenderBean() { String key = ""reviewRenderBean""; if (map.get(key) == null) { RenderBean rb = new RenderBean(getReviewHelperBean().getMock(), toolRenderService, objectService, getWithBreadcrumbs()); map.put(key, rb); } return (RenderBean) map.get(key); }","RenderBean getReviewRenderBean(){"""";if(null){rb(getReviewHelperBean().getMock(),getWithBreadcrumbs);(key);}(key);}","['public', 'RenderBean', 'getReviewRenderBean', '(', ')', '{', 'String', 'key', '=', '""reviewRenderBean""', ';', 'if', '(', 'map', '.', 'get', '(', 'key', ')', '==', 'null', ')', '{', 'RenderBean', 'rb', '=', 'new', 'RenderBean', '(', 'getReviewHelperBean', '(', ')', '.', 'getMock', '(', ')', ',', 'toolRenderService', ',', 'objectService', ',', 'getWithBreadcrumbs', '(', ')', ')', ';', 'map', '.', 'put', '(', 'key', ',', 'rb', ')', ';', '}', 'return', '(', 'RenderBean', ')', 'map', '.', 'get', '(', 'key', ')', ';', '}']","['RenderBean', 'getReviewRenderBean', '(', ')', '{', '""""', ';', 'if', '(', 'null', ')', '{', 'rb', '(', 'getReviewHelperBean', '(', ')', '.', 'getMock', '(', ')', ',', 'getWithBreadcrumbs', ')', ';', '(', 'key', ')', ';', '}', '(', 'key', ')', ';', '}']",68,35,6,279,114,25,64.96062992125984,53.2258064516129,,,,-1,-1,-1,-1,False
L414_testUnderTerminatedOver_1.txt,code2vec,METHOD_NAME,token_wrong,0.6287,0.8924,20.2642,19.4728,"{'n_total': 266, 'n_valid': 29, 'n_correct': 24}",84.170581,"@Test public void testUnderTerminatedOver() { try { parser.parse(""select a,b, f(c) my over (partition by b order by ts from xyz""); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }","void testUnderTerminatedOver(){try{parser.parse(""select"");}catch(ParserException e){assertEquals();}}","['@', 'Test', 'public', 'void', 'testUnderTerminatedOver', '(', ')', '{', 'try', '{', 'parser', '.', 'parse', '(', '""select a,b, f(c) my over (partition by b order by ts from xyz""', ')', ';', 'Assert', '.', 'fail', '(', ')', ';', '}', 'catch', '(', 'ParserException', 'e', ')', '{', 'Assert', '.', 'assertEquals', '(', '53', ',', 'QueryError', '.', 'getPosition', '(', ')', ')', ';', '}', '}']","['void', 'testUnderTerminatedOver', '(', ')', '{', 'try', '{', 'parser', '.', 'parse', '(', '""select""', ')', ';', '}', 'catch', '(', 'ParserException', 'e', ')', '{', 'assertEquals', '(', ')', ';', '}', '}']",45,27,6,230,101,29,64.17910447761194,46.15384615384615,,,,-1,-1,-1,-1,False
L415_getPrettyName_1.txt,code2vec,METHOD_NAME,token_wrong,0.9754,0.4234,13.5673,15.3014,"{'n_total': 220, 'n_valid': 23, 'n_correct': 23}",69.326389,"public String getPrettyName() { if (isArray()) { return ""ARRAY<"" + getArrayElementType().toString() + "">""; } if (isMap()) { return ""MAP<STRING, "" + getMapValueType().toString() + "">""; } return toString(); }",String getPrettyName(){if(isArray()){}if(isMap()){}},"['public', 'String', 'getPrettyName', '(', ')', '{', 'if', '(', 'isArray', '(', ')', ')', '{', 'return', '""ARRAY<""', '+', 'getArrayElementType', '(', ')', '.', 'toString', '(', ')', '+', '"">""', ';', '}', 'if', '(', 'isMap', '(', ')', ')', '{', 'return', '""MAP<STRING, ""', '+', 'getMapValueType', '(', ')', '.', 'toString', '(', ')', '+', '"">""', ';', '}', 'return', 'toString', '(', ')', ';', '}']","['String', 'getPrettyName', '(', ')', '{', 'if', '(', 'isArray', '(', ')', ')', '{', '}', 'if', '(', 'isMap', '(', ')', ')', '{', '}', '}']",54,22,6,206,52,19,82.35294117647058,66.66666666666666,,,,-1,-1,-1,-1,False
L416_testGetMatchPositions_1.txt,code2vec,METHOD_NAME,token_wrong,0.9027,0.9653,19.6437,20.7857,"{'n_total': 364, 'n_valid': 34, 'n_correct': 23}",100.8091,"@Test public void testGetMatchPositions() { for (Tree<String> p : foundPatterns) { TreeGrep<String> matcher = new TreeGrep<>(p); boolean result = matcher.matches(tree); assertEquals(true, result); } }",@Test void testGetMatchPositions(){for(Tree<String>p:foundPatterns){matcher=new TreeGrep<>();boolean result=(true);}},"['@', 'Test', 'public', 'void', 'testGetMatchPositions', '(', ')', '{', 'for', '(', 'Tree', '<', 'String', '>', 'p', ':', 'foundPatterns', ')', '{', 'TreeGrep', '<', 'String', '>', 'matcher', '=', 'new', 'TreeGrep', '<', '>', '(', 'p', ')', ';', 'boolean', 'result', '=', 'matcher', '.', 'matches', '(', 'tree', ')', ';', 'assertEquals', '(', 'true', ',', 'result', ')', ';', '}', '}']","['@', 'Test', 'void', 'testGetMatchPositions', '(', ')', '{', 'for', '(', 'Tree', '<', 'String', '>', 'p', ':', 'foundPatterns', ')', '{', 'matcher', '=', 'new', 'TreeGrep', '<', '>', '(', ')', ';', 'boolean', 'result', '=', '(', 'true', ')', ';', '}', '}']",52,36,6,200,117,27,47.97687861271676,34.78260869565217,,,,-1,-1,-1,-1,False
L417_deleteProject_1.txt,code2vec,METHOD_NAME,token_wrong,0.5347,0.9199,11.284,14.3624,"{'n_total': 167, 'n_valid': 18, 'n_correct': 13}",56.227775,@Override public void deleteProject(String project) { collections.remove(project); apiKeyService.revokeAllKeys(project); super.onDeleteProject(project); },@Override void deleteProject(String project){(project);revokeAllKeys();},"['@', 'Override', 'public', 'void', 'deleteProject', '(', 'String', 'project', ')', '{', 'collections', '.', 'remove', '(', 'project', ')', ';', 'apiKeyService', '.', 'revokeAllKeys', '(', 'project', ')', ';', 'super', '.', 'onDeleteProject', '(', 'project', ')', ';', '}']","['@', 'Override', 'void', 'deleteProject', '(', 'String', 'project', ')', '{', '(', 'project', ')', ';', 'revokeAllKeys', '(', ')', ';', '}']",32,18,6,154,72,19,60.74074074074074,53.84615384615385,,,,-1,-1,-1,-1,False
L418_stripIndexReferences_1.txt,code2vec,METHOD_NAME,token_wrong,0.5971,0.5976,19.3744,26.4529,"{'n_total': 245, 'n_valid': 27, 'n_correct': 22}",77.601698,"public static String stripIndexReferences(String label) { if (label.indexOf(""="") <= 0) return label; else return label.substring(0, label.indexOf(""="")); }","String stripIndexReferences(String label){if(("""")<=0)return label(0,(""""));}","['public', 'static', 'String', 'stripIndexReferences', '(', 'String', 'label', ')', '{', 'if', '(', 'label', '.', 'indexOf', '(', '""=""', ')', '<=', '0', ')', 'return', 'label', ';', 'else', 'return', 'label', '.', 'substring', '(', '0', ',', 'label', '.', 'indexOf', '(', '""=""', ')', ')', ';', '}']","['String', 'stripIndexReferences', '(', 'String', 'label', ')', '{', 'if', '(', '(', '""""', ')', '<=', '0', ')', 'return', 'label', '(', '0', ',', '(', '""""', ')', ')', ';', '}']",40,26,6,154,75,26,61.71875,41.17647058823529,,,,-1,-1,-1,-1,False
L419_computeSerializable_1.txt,code2vec,METHOD_NAME,token_wrong,0.3276,0.3423,16.9906,17.9866,"{'n_total': 405, 'n_valid': 43, 'n_correct': 34}",133.083058,"private boolean computeSerializable(HttpSession session, List<String> attributeNames) { for (final String attributeName : attributeNames) { final Object attributeValue = session.getAttribute(attributeName); if (!(attributeValue == null || attributeValue instanceof Serializable)) { return false; } } return true; }","boolean computeSerializable(HttpSession session,List attributeNames){for(String attributeName:attributeNames){Object();if((Serializable)){}}return true;}","['private', 'boolean', 'computeSerializable', '(', 'HttpSession', 'session', ',', 'List', '<', 'String', '>', 'attributeNames', ')', '{', 'for', '(', 'final', 'String', 'attributeName', ':', 'attributeNames', ')', '{', 'final', 'Object', 'attributeValue', '=', 'session', '.', 'getAttribute', '(', 'attributeName', ')', ';', 'if', '(', '!', '(', 'attributeValue', '==', 'null', '||', 'attributeValue', 'instanceof', 'Serializable', ')', ')', '{', 'return', 'false', ';', '}', '}', 'return', 'true', ';', '}']","['boolean', 'computeSerializable', '(', 'HttpSession', 'session', ',', 'List', 'attributeNames', ')', '{', 'for', '(', 'String', 'attributeName', ':', 'attributeNames', ')', '{', 'Object', '(', ')', ';', 'if', '(', '(', 'Serializable', ')', ')', '{', '}', '}', 'return', 'true', ';', '}']",57,35,6,314,153,25,55.70934256055363,43.13725490196079,,,,-1,-1,-1,-1,False
L420_setExcludeList_1.txt,code2vec,METHOD_NAME,token_wrong,0.2716,0.3533,6.7404,5.3717,"{'n_total': 371, 'n_valid': 33, 'n_correct': 25}",96.073054,"public void setExcludeList(String l) { String[] split = l.split("",""); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }","void setExcludeList(String l){("""");excludeList.clear();for(;;)excludeList.add(split[i]);}","['public', 'void', 'setExcludeList', '(', 'String', 'l', ')', '{', 'String', '[', ']', 'split', '=', 'l', '.', 'split', '(', '"",""', ')', ';', 'excludeList', '.', 'clear', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'split', '.', 'length', ';', 'i', '++', ')', 'excludeList', '.', 'add', '(', 'split', '[', 'i', ']', '.', 'trim', '(', ')', ')', ';', '}']","['void', 'setExcludeList', '(', 'String', 'l', ')', '{', '(', '""""', ')', ';', 'excludeList', '.', 'clear', '(', ')', ';', 'for', '(', ';', ';', ')', 'excludeList', '.', 'add', '(', 'split', '[', 'i', ']', ')', ';', '}']",57,33,6,165,89,20,52.41379310344828,47.05882352941176,,,,-1,-1,-1,-1,False
L421_renderStartForm_1.txt,code2vec,METHOD_NAME,token_wrong,0.3918,0.5014,19.7227,21.3579,"{'n_total': 167, 'n_valid': 30, 'n_correct': 19}",85.57955,"@Override public Object renderStartForm(StartFormData startForm) { javax.swing.JButton jButton = new javax.swing.JButton(); jButton.setName(""My Start Form Button""); return jButton; }","Object renderStartForm(StartFormData startForm){("""");return jButton;}","['@', 'Override', 'public', 'Object', 'renderStartForm', '(', 'StartFormData', 'startForm', ')', '{', 'javax', '.', 'swing', '.', 'JButton', 'jButton', '=', 'new', 'javax', '.', 'swing', '.', 'JButton', '(', ')', ';', 'jButton', '.', 'setName', '(', '""My Start Form Button""', ')', ';', 'return', 'jButton', ';', '}']","['Object', 'renderStartForm', '(', 'StartFormData', 'startForm', ')', '{', '(', '""""', ')', ';', 'return', 'jButton', ';', '}']",37,15,6,182,69,21,70.1863354037267,70.96774193548387,,,,-1,-1,-1,-1,False
L422_getServerProperties_1.txt,code2vec,METHOD_NAME,token_wrong,0.717,0.3656,14.6882,14.8571,"{'n_total': 376, 'n_valid': 40, 'n_correct': 26}",116.367215,public AmqpTable getServerProperties() { AmqpTable table = new AmqpTable(); List<AmqpTableEntry> tableEntries = serverProperties.getEntries(); List<AmqpTableEntry> entries = new ArrayList<>(); entries.addAll(tableEntries); table.setEntries(entries); return table; },AmqpTable getServerProperties(){table();getEntries();List=new ArrayList<>();(tableEntries);(entries);},"['public', 'AmqpTable', 'getServerProperties', '(', ')', '{', 'AmqpTable', 'table', '=', 'new', 'AmqpTable', '(', ')', ';', 'List', '<', 'AmqpTableEntry', '>', 'tableEntries', '=', 'serverProperties', '.', 'getEntries', '(', ')', ';', 'List', '<', 'AmqpTableEntry', '>', 'entries', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'entries', '.', 'addAll', '(', 'tableEntries', ')', ';', 'table', '.', 'setEntries', '(', 'entries', ')', ';', 'return', 'table', ';', '}']","['AmqpTable', 'getServerProperties', '(', ')', '{', 'table', '(', ')', ';', 'getEntries', '(', ')', ';', 'List', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', '(', 'tableEntries', ')', ';', '(', 'entries', ')', ';', '}']",57,31,6,265,102,25,67.91666666666667,50.98039215686274,,,,-1,-1,-1,-1,False
L423_getCapDiameter_1.txt,code2vec,METHOD_NAME,token_wrong,0.6449,0.2639,17.5893,16.8905,"{'n_total': 297, 'n_valid': 31, 'n_correct': 27}",92.553867,"public int getCapDiameter(int y, int height) { switch(this) { case BROWN: return 7; case RED: default: return (y < (height - 1)) ? 5 : 3; } }",int getCapDiameter(int height){switch(this){case BROWN:return(y<(height))?5:3;}},"['public', 'int', 'getCapDiameter', '(', 'int', 'y', ',', 'int', 'height', ')', '{', 'switch', '(', 'this', ')', '{', 'case', 'BROWN', ':', 'return', '7', ';', 'case', 'RED', ':', 'default', ':', 'return', '(', 'y', '<', '(', 'height', '-', '1', ')', ')', '?', '5', ':', '3', ';', '}', '}']","['int', 'getCapDiameter', '(', 'int', 'height', ')', '{', 'switch', '(', 'this', ')', '{', 'case', 'BROWN', ':', 'return', '(', 'y', '<', '(', 'height', ')', ')', '?', '5', ':', '3', ';', '}', '}']",44,30,6,141,80,20,50.413223140495866,36.84210526315789,,,,-1,-1,-1,-1,False
L424_convertIntArray_1.txt,code2vec,METHOD_NAME,token_wrong,0.224,0.3878,19.5087,17.5536,"{'n_total': 516, 'n_valid': 54, 'n_correct': 34}",161.313862,public static byte[] convertIntArray(int[] in) { byte[] out = new byte[in.length]; for (int i = 0; i < in.length; i++) { out[i] = (byte) in[i]; } return out; },byte[]convertIntArray(int[]in){byte[]out=newbyte[in.length];for(;;i++){in[i];}return out;},"['public', 'static', 'byte', '[', ']', 'convertIntArray', '(', 'int', '[', ']', 'in', ')', '{', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'in', '.', 'length', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'in', '.', 'length', ';', 'i', '++', ')', '{', 'out', '[', 'i', ']', '=', '(', 'byte', ')', 'in', '[', 'i', ']', ';', '}', 'return', 'out', ';', '}']","['byte', '[', ']', 'convertIntArray', '(', 'int', '[', ']', 'in', ')', '{', 'byte', '[', ']', 'out', '=', 'newbyte', '[', 'in', '.', 'length', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'in', '[', 'i', ']', ';', '}', 'return', 'out', ';', '}']",61,41,6,159,90,21,50.0,36.36363636363637,,,,-1,-1,-1,-1,False
L425_formatHighLows_3.txt,code2vec,METHOD_NAME,token_wrong,0.4151,0.207,16.03,16.9737,"{'n_total': 350, 'n_valid': 57, 'n_correct': 28}",163.787141,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){long formattedHigh=formatTemperature();String highLowStr=""""+highLowStr;}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'formattedHigh', '=', 'formatTemperature', '(', ')', ';', 'String', 'highLowStr', '=', '""""', '+', 'highLowStr', ';', '}']",68,28,6,356,134,20,66.07142857142857,64.51612903225806,,,,-1,-1,-1,-1,False
L426_startLoadMore_1.txt,code2vec,METHOD_NAME,token_wrong,0.6041,0.9996,5.5264,16.2213,"{'n_total': 331, 'n_valid': 62, 'n_correct': 35}",169.391149,protected void startLoadMore() { if (mEnablePullLoad && mFooterView.getBottomMargin() > PULL_LOAD_MORE_DELTA && !mPullLoading) { mPullLoading = true; mFooterView.setState(XListViewFooter.STATE_LOADING); if (mLoadMore != null) { mLoadMore.onLoadMore(); } } },void startLoadMore(){if(mEnablePullLoad.PULLLOADMOREDELTA&mPullLoading){setState();if(mLoadMore){}}},"['protected', 'void', 'startLoadMore', '(', ')', '{', 'if', '(', 'mEnablePullLoad', '&&', 'mFooterView', '.', 'getBottomMargin', '(', ')', '>', 'PULL_LOAD_MORE_DELTA', '&&', '!', 'mPullLoading', ')', '{', 'mPullLoading', '=', 'true', ';', 'mFooterView', '.', 'setState', '(', 'XListViewFooter', '.', 'STATE_LOADING', ')', ';', 'if', '(', 'mLoadMore', '!=', 'null', ')', '{', 'mLoadMore', '.', 'onLoadMore', '(', ')', ';', '}', '}', '}']","['void', 'startLoadMore', '(', ')', '{', 'if', '(', 'mEnablePullLoad', '.', 'PULLLOADMOREDELTA', '&', 'mPullLoading', ')', '{', 'setState', '(', ')', ';', 'if', '(', 'mLoadMore', ')', '{', '}', '}', '}']",51,26,6,257,100,19,65.96638655462185,55.55555555555556,,,,-1,-1,-1,-1,False
L427_shouldSplitScope_1.txt,code2vec,METHOD_NAME,token_wrong,0.8554,0.9568,17.622,18.2674,"{'n_total': 197, 'n_valid': 16, 'n_correct': 16}",56.268869,"@Test public void shouldSplitScope() { Set<String> expectedScope = new HashSet<String>(); expectedScope.add(""a""); expectedScope.add(""b""); expectedScope.add(""c""); assertEquals(Utils.splitScope(""a b c""), expectedScope); }","void shouldSplitScope(){Set<String>expectedScope;assertEquals((""""),expectedScope);}","['@', 'Test', 'public', 'void', 'shouldSplitScope', '(', ')', '{', 'Set', '<', 'String', '>', 'expectedScope', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'expectedScope', '.', 'add', '(', '""a""', ')', ';', 'expectedScope', '.', 'add', '(', '""b""', ')', ';', 'expectedScope', '.', 'add', '(', '""c""', ')', ';', 'assertEquals', '(', 'Utils', '.', 'splitScope', '(', '""a b c""', ')', ',', 'expectedScope', ')', ';', '}']","['void', 'shouldSplitScope', '(', ')', '{', 'Set', '<', 'String', '>', 'expectedScope', ';', 'assertEquals', '(', '(', '""""', ')', ',', 'expectedScope', ')', ';', '}']",56,21,6,219,83,22,69.03553299492386,70.0,,,,-1,-1,-1,-1,False
L428_next_3.txt,code2vec,METHOD_NAME,token_wrong,0.8466,0.435,5.5476,2.6227,"{'n_total': 385, 'n_valid': 49, 'n_correct': 36}",146.325243,"public Object next() { String line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split(""\\s+""); }","Object next(){line();(line);if(line()==0)String[0];line("""");}","['public', 'Object', 'next', '(', ')', '{', 'String', 'line', '=', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', 'return', 'null', ';', 'if', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', 'return', 'new', 'String', '[', '0', ']', ';', 'return', 'line', '.', 'split', '(', '""\\\\s+""', ')', ';', '}']","['Object', 'next', '(', ')', '{', 'line', '(', ')', ';', '(', 'line', ')', ';', 'if', '(', 'line', '(', ')', '==', '0', ')', 'String', '[', '0', ']', ';', 'line', '(', '""""', ')', ';', '}']",48,32,6,154,61,10,64.58333333333334,38.095238095238095,,,,-1,-1,-1,-1,False
L429_realValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.4888,0.6602,17.666,16.3393,"{'n_total': 235, 'n_valid': 26, 'n_correct': 19}",72.458866,"public double realValue(int[] a0, double[] a1) { if (isClone) { loadInstance(); return instance.realValue(a0, a1); } return super.realValue(a0, a1); }",double realValue(int[]a){if(isClone){loadInstance();}super.realValue();},"['public', 'double', 'realValue', '(', 'int', '[', ']', 'a0', ',', 'double', '[', ']', 'a1', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'instance', '.', 'realValue', '(', 'a0', ',', 'a1', ')', ';', '}', 'return', 'super', '.', 'realValue', '(', 'a0', ',', 'a1', ')', ';', '}']","['double', 'realValue', '(', 'int', '[', ']', 'a', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', '}', 'super', '.', 'realValue', '(', ')', ';', '}']",46,26,6,150,72,15,57.77777777777777,50.0,,,,-1,-1,-1,-1,False
L430_isSpecialSite_1.txt,code2vec,METHOD_NAME,token_wrong,0.6868,0.2094,15.9465,16.8641,"{'n_total': 265, 'n_valid': 53, 'n_correct': 27}",148.206522,public static boolean isSpecialSite(java.lang.String param0) { org.sakaiproject.site.api.SiteService service = getInstance(); if (service == null) return false; return service.isSpecialSite(param0); },boolean isSpecialSite(String param){SiteServiceservice();(service);service.isSpecialSite();},"['public', 'static', 'boolean', 'isSpecialSite', '(', 'java', '.', 'lang', '.', 'String', 'param0', ')', '{', 'org', '.', 'sakaiproject', '.', 'site', '.', 'api', '.', 'SiteService', 'service', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', '==', 'null', ')', 'return', 'false', ';', 'return', 'service', '.', 'isSpecialSite', '(', 'param0', ')', ';', '}']","['boolean', 'isSpecialSite', '(', 'String', 'param', ')', '{', 'SiteServiceservice', '(', ')', ';', '(', 'service', ')', ';', 'service', '.', 'isSpecialSite', '(', ')', ';', '}']",46,22,6,200,92,19,59.66850828729282,60.0,,,,-1,-1,-1,-1,False
L431_getKeys_1.txt,code2vec,METHOD_NAME,token_wrong,0.188,0.1524,3.4056,3.6301,"{'n_total': 327, 'n_valid': 40, 'n_correct': 23}",111.126044,public synchronized List<ByteSequence> getKeys() { if (keys == null) { keys = getResponse().getKeysList().stream().map(byteStrings -> ByteSequence.fromBytes(byteStrings.toByteArray())).collect(Collectors.toList()); } return keys; },List<ByteSequence>getKeys(){if(keys){keys.getKeysList().stream().map(byteStrings->ByteSequence.fromBytes(byteStrings.toByteArray())).collect();}},"['public', 'synchronized', 'List', '<', 'ByteSequence', '>', 'getKeys', '(', ')', '{', 'if', '(', 'keys', '==', 'null', ')', '{', 'keys', '=', 'getResponse', '(', ')', '.', 'getKeysList', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 'byteStrings', '->', 'ByteSequence', '.', 'fromBytes', '(', 'byteStrings', '.', 'toByteArray', '(', ')', ')', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', '}', 'return', 'keys', ';', '}']","['List', '<', 'ByteSequence', '>', 'getKeys', '(', ')', '{', 'if', '(', 'keys', ')', '{', 'keys', '.', 'getKeysList', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 'byteStrings', '->', 'ByteSequence', '.', 'fromBytes', '(', 'byteStrings', '.', 'toByteArray', '(', ')', ')', ')', '.', 'collect', '(', ')', ';', '}', '}']",61,45,6,231,145,13,39.44954128440367,29.09090909090909,,,,-1,-1,-1,-1,False
L432_init_7.txt,code2vec,METHOD_NAME,token_wrong,0.3803,0.4172,6.4054,7.4435,"{'n_total': 168, 'n_valid': 15, 'n_correct': 14}",42.945037,"public void init() { if (!isEnabled()) { log.info(""ElasticSearch is not enabled. Set search.enable=true to change that.""); return; } initializeElasticSearch(); }","void init(){if(!isEnabled()){("""");}initializeElasticSearch();}","['public', 'void', 'init', '(', ')', '{', 'if', '(', '!', 'isEnabled', '(', ')', ')', '{', 'log', '.', 'info', '(', '""ElasticSearch is not enabled. Set search.enable=true to change that.""', ')', ';', 'return', ';', '}', 'initializeElasticSearch', '(', ')', ';', '}']","['void', 'init', '(', ')', '{', 'if', '(', '!', 'isEnabled', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'initializeElasticSearch', '(', ')', ';', '}']",29,23,6,161,62,10,65.56291390728477,26.08695652173913,,,,-1,-1,-1,-1,False
L433_supplierCatalog_1.txt,code2vec,METHOD_NAME,token_wrong,0.5386,0.7011,15.8473,18.63,"{'n_total': 228, 'n_valid': 30, 'n_correct': 21}",82.347967,@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer.initialize(); Flux<?> result = Flux.from(initializer.apply(Flux.empty())); assertThat(result.blockFirst()).isInstanceOf(Bar.class); },@Test void supplierCatalog(){initializer=(SupplierConfig).from((Flux)).isInstanceOf();},"['@', 'Test', 'public', 'void', 'supplierCatalog', '(', ')', '{', 'initializer', '=', 'new', 'SpringFunctionInitializer', '(', 'SupplierConfig', '.', 'class', ')', ';', 'initializer', '.', 'initialize', '(', ')', ';', 'Flux', '<', '?', '>', 'result', '=', 'Flux', '.', 'from', '(', 'initializer', '.', 'apply', '(', 'Flux', '.', 'empty', '(', ')', ')', ')', ';', 'assertThat', '(', 'result', '.', 'blockFirst', '(', ')', ')', '.', 'isInstanceOf', '(', 'Bar', '.', 'class', ')', ';', '}']","['@', 'Test', 'void', 'supplierCatalog', '(', ')', '{', 'initializer', '=', '(', 'SupplierConfig', ')', '.', 'from', '(', '(', 'Flux', ')', ')', '.', 'isInstanceOf', '(', ')', ';', '}']",63,25,6,250,87,21,71.17903930131004,66.66666666666666,,,,-1,-1,-1,-1,False
L434_setLabelLexicon_1.txt,code2vec,METHOD_NAME,token_wrong,0.4422,0.7382,17.2741,15.8033,"{'n_total': 187, 'n_valid': 21, 'n_correct': 19}",59.688488,public void setLabelLexicon(edu.illinois.cs.cogcomp.lbjava.learn.Lexicon a0) { if (isClone) { loadInstance(); instance.setLabelLexicon(a0); return; } super.setLabelLexicon(a0); },void setLabelLexicon(edu a){if(isClone){loadInstance;}setLabelLexicon();},"['public', 'void', 'setLabelLexicon', '(', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'learn', '.', 'Lexicon', 'a0', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'instance', '.', 'setLabelLexicon', '(', 'a0', ')', ';', 'return', ';', '}', 'super', '.', 'setLabelLexicon', '(', 'a0', ')', ';', '}']","['void', 'setLabelLexicon', '(', 'edu', 'a', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', ';', '}', 'setLabelLexicon', '(', ')', ';', '}']",47,20,6,178,73,21,66.87898089171973,65.85365853658537,,,,-1,-1,-1,-1,False
L435_async_1.txt,code2vec,METHOD_NAME,token_wrong,0.2657,0.4102,2.3266,2.5322,"{'n_total': 405, 'n_valid': 43, 'n_correct': 36}",124.117711,public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); },void async(Callback callback){executor=Executors(new Runnable(){run(){if(callback){onResult();}}});shutdown();},"['public', 'void', 'async', '(', '@', 'Nullable', 'final', 'Callback', '<', 'T', '>', 'callback', ')', '{', 'ExecutorService', 'executor', '=', 'Executors', '.', 'newSingleThreadExecutor', '(', ')', ';', 'executor', '.', 'execute', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'T', 'result', '=', 'execute', '(', ')', ';', 'if', '(', 'callback', '!=', 'null', ')', '{', 'callback', '.', 'onResult', '(', 'result', ')', ';', '}', '}', '}', ')', ';', 'executor', '.', 'shutdown', '(', ')', ';', '}']","['void', 'async', '(', 'Callback', 'callback', ')', '{', 'executor', '=', 'Executors', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'if', '(', 'callback', ')', '{', 'onResult', '(', ')', ';', '}', '}', '}', ')', ';', 'shutdown', '(', ')', ';', '}']",73,39,6,289,111,11,64.02877697841727,50.74626865671642,,,,-1,-1,-1,-1,False
L436_justLikeFalseTest_1.txt,code2vec,METHOD_NAME,token_wrong,0.9427,0.925,20.7475,26.0822,"{'n_total': 245, 'n_valid': 20, 'n_correct': 19}",60.42639,"@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(""meyve""); tester.expectFalse(""meyvemsi"", matchesTailLex(""P1sg + JustLike + Adj"")); tester.expectFalse(""meyvesi"", matchesTailLex(""A3sg + JustLike + Adj"")); }","void justLikeFalseTest(){AnalysisTester("""",matchesTailLex());expectFalse("""",(""""));}","['@', 'Test', 'public', 'void', 'justLikeFalseTest', '(', ')', '{', 'AnalysisTester', 'tester', '=', 'getTester', '(', '""meyve""', ')', ';', 'tester', '.', 'expectFalse', '(', '""meyvemsi""', ',', 'matchesTailLex', '(', '""P1sg + JustLike + Adj""', ')', ')', ';', 'tester', '.', 'expectFalse', '(', '""meyvesi""', ',', 'matchesTailLex', '(', '""A3sg + JustLike + Adj""', ')', ')', ';', '}']","['void', 'justLikeFalseTest', '(', ')', '{', 'AnalysisTester', '(', '""""', ',', 'matchesTailLex', '(', ')', ')', ';', 'expectFalse', '(', '""""', ',', '(', '""""', ')', ')', ';', '}']",41,24,6,230,83,23,71.01449275362319,48.57142857142857,,,,-1,-1,-1,-1,False
L437_getClassPrior_1.txt,code2vec,METHOD_NAME,token_wrong,0.6713,0.6335,17.096,18.3684,"{'n_total': 289, 'n_valid': 35, 'n_correct': 28}",104.02878,public double getClassPrior(int classIndex) { double sum = 0; for (int i = 0; i < numClasses; i++) { sum += values[classIndex][i]; } return sum / classifications.size(); },double getClassPrior(int classIndex){for(;;i++){}return sum/size();},"['public', 'double', 'getClassPrior', '(', 'int', 'classIndex', ')', '{', 'double', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numClasses', ';', 'i', '++', ')', '{', 'sum', '+=', 'values', '[', 'classIndex', ']', '[', 'i', ']', ';', '}', 'return', 'sum', '/', 'classifications', '.', 'size', '(', ')', ';', '}']","['double', 'getClassPrior', '(', 'int', 'classIndex', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', '}', 'return', 'sum', '/', 'size', '(', ')', ';', '}']",49,24,6,171,68,19,67.76315789473685,58.139534883720934,,,,-1,-1,-1,-1,False
L438_processPvtMsgCancel_1.txt,code2vec,METHOD_NAME,token_wrong,0.2914,0.2914,19.3708,19.3708,"{'n_total': 246, 'n_valid': 48, 'n_correct': 20}",135.783819,"public String processPvtMsgCancel() { log.debug(""processPvtMsgCancel()""); if (isMessagesandForums()) { return MAIN_PG; } else { return MESSAGE_HOME_PG; } }","String processPvtMsgCancel(){log.debug(""processPvtMsgCancel"");if(isMessagesandForums()){return MAINPG;}else{return HOMEPG;}}","['public', 'String', 'processPvtMsgCancel', '(', ')', '{', 'log', '.', 'debug', '(', '""processPvtMsgCancel()""', ')', ';', 'if', '(', 'isMessagesandForums', '(', ')', ')', '{', 'return', 'MAIN_PG', ';', '}', 'else', '{', 'return', 'MESSAGE_HOME_PG', ';', '}', '}']","['String', 'processPvtMsgCancel', '(', ')', '{', 'log', '.', 'debug', '(', '""processPvtMsgCancel""', ')', ';', 'if', '(', 'isMessagesandForums', '(', ')', ')', '{', 'return', 'MAINPG', ';', '}', 'else', '{', 'return', 'HOMEPG', ';', '}', '}']",31,30,6,155,124,25,23.846153846153847,4.0,,,,-1,-1,-1,-1,False
L439_engineAliases_1.txt,code2vec,METHOD_NAME,token_wrong,0.6045,0.396,7.629,5.9145,"{'n_total': 258, 'n_valid': 31, 'n_correct': 25}",90.376748,public Enumeration engineAliases() { final Iterator it = new HashSet(entries.keySet()).iterator(); return new Enumeration() { public boolean hasMoreElements() { return it.hasNext(); } public Object nextElement() { return it.next(); } }; },Enumeration engineAliases(){it=newHashSet();new Enumeration(){{}};},"['public', 'Enumeration', 'engineAliases', '(', ')', '{', 'final', 'Iterator', 'it', '=', 'new', 'HashSet', '(', 'entries', '.', 'keySet', '(', ')', ')', '.', 'iterator', '(', ')', ';', 'return', 'new', 'Enumeration', '(', ')', '{', 'public', 'boolean', 'hasMoreElements', '(', ')', '{', 'return', 'it', '.', 'hasNext', '(', ')', ';', '}', 'public', 'Object', 'nextElement', '(', ')', '{', 'return', 'it', '.', 'next', '(', ')', ';', '}', '}', ';', '}']","['Enumeration', 'engineAliases', '(', ')', '{', 'it', '=', 'newHashSet', '(', ')', ';', 'new', 'Enumeration', '(', ')', '{', '{', '}', '}', ';', '}']",61,21,6,238,67,19,78.08219178082192,72.72727272727273,,,,-1,-1,-1,-1,False
L440_getOrder_1.txt,code2vec,METHOD_NAME,token_wrong,0.4172,0.6356,13.4842,13.7408,"{'n_total': 318, 'n_valid': 33, 'n_correct': 23}",95.159854,private String getOrder(Set<WebXml> ordered) { StringBuilder sb = new StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); },String getOrder(Set<WebXml>ordered){sb=(size());for(WebXml webXml:ordered){sb.append(webXml.getName());}},"['private', 'String', 'getOrder', '(', 'Set', '<', 'WebXml', '>', 'ordered', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 'ordered', '.', 'size', '(', ')', ')', ';', 'for', '(', 'WebXml', 'webXml', ':', 'ordered', ')', '{', 'sb', '.', 'append', '(', 'webXml', '.', 'getName', '(', ')', ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']","['String', 'getOrder', '(', 'Set', '<', 'WebXml', '>', 'ordered', ')', '{', 'sb', '=', '(', 'size', '(', ')', ')', ';', 'for', '(', 'WebXml', 'webXml', ':', 'ordered', ')', '{', 'sb', '.', 'append', '(', 'webXml', '.', 'getName', '(', ')', ')', ';', '}', '}']",52,39,6,187,105,14,47.398843930635834,28.26086956521739,,,,-1,-1,-1,-1,False
L441_seed_1.txt,code2vec,METHOD_NAME,token_wrong,0.9003,0.6252,15.2519,14.8419,"{'n_total': 263, 'n_valid': 30, 'n_correct': 22}",87.994832,"public void seed(int fromIndex, int count, long value) { int capacity = fromIndex + count; ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }","void seed(int count,long value){(capacity);Arrays.fill();}","['public', 'void', 'seed', '(', 'int', 'fromIndex', ',', 'int', 'count', ',', 'long', 'value', ')', '{', 'int', 'capacity', '=', 'fromIndex', '+', 'count', ';', 'ensureCapacity', '(', 'capacity', ')', ';', 'pos', '=', 'capacity', ';', 'Arrays', '.', 'fill', '(', 'buffer', ',', 'fromIndex', ',', 'capacity', ',', 'value', ')', ';', '}']","['void', 'seed', '(', 'int', 'count', ',', 'long', 'value', ')', '{', '(', 'capacity', ')', ';', 'Arrays', '.', 'fill', '(', ')', ';', '}']",44,21,6,183,58,10,72.25433526011561,60.526315789473685,,,,-1,-1,-1,-1,False
L442_logGammaDifference_1.txt,code2vec,METHOD_NAME,token_wrong,0.1344,0.3159,16.3604,16.5376,"{'n_total': 355, 'n_valid': 60, 'n_correct': 27}",179.815209,"public static double logGammaDifference(double z, int n) { double result = 0.0; for (int i = 0; i < n; i++) { result += Math.log(z + i); } return result; }","double logGammaDifference(double z,int n){double result=.0;for(int i;;i++){result+=Math.log(zi);}}","['public', 'static', 'double', 'logGammaDifference', '(', 'double', 'z', ',', 'int', 'n', ')', '{', 'double', 'result', '=', '0.0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'result', '+=', 'Math', '.', 'log', '(', 'z', '+', 'i', ')', ';', '}', 'return', 'result', ';', '}']","['double', 'logGammaDifference', '(', 'double', 'z', ',', 'int', 'n', ')', '{', 'double', 'result', '=', '.0', ';', 'for', '(', 'int', 'i', ';', ';', 'i', '++', ')', '{', 'result', '+=', 'Math', '.', 'log', '(', 'zi', ')', ';', '}', '}']",48,36,6,155,98,24,43.51145038167939,28.57142857142857,,,,-1,-1,-1,-1,False
L443_commit_2.txt,code2vec,METHOD_NAME,token_wrong,0.2767,0.4191,9.9831,14.381,"{'n_total': 661, 'n_valid': 102, 'n_correct': 57}",290.807489,"@Override protected void commit() { for (int i = 0, sz = symbolTables.size(); i < sz; i++) { MMappedSymbolTable tab = symbolTables.getQuick(i); int oldSize = symbolTableSizes.getQuick(i); tab.getDataColumn().commit(); tab.alignSize(); tab.updateIndex(oldSize, tab.size()); tab.commit(); } }",void commit(){for(i();;i++){tab();tab.alignSize();(size());commit();}},"['@', 'Override', 'protected', 'void', 'commit', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'sz', '=', 'symbolTables', '.', 'size', '(', ')', ';', 'i', '<', 'sz', ';', 'i', '++', ')', '{', 'MMappedSymbolTable', 'tab', '=', 'symbolTables', '.', 'getQuick', '(', 'i', ')', ';', 'int', 'oldSize', '=', 'symbolTableSizes', '.', 'getQuick', '(', 'i', ')', ';', 'tab', '.', 'getDataColumn', '(', ')', '.', 'commit', '(', ')', ';', 'tab', '.', 'alignSize', '(', ')', ';', 'tab', '.', 'updateIndex', '(', 'oldSize', ',', 'tab', '.', 'size', '(', ')', ')', ';', 'tab', '.', 'commit', '(', ')', ';', '}', '}']","['void', 'commit', '(', ')', '{', 'for', '(', 'i', '(', ')', ';', ';', 'i', '++', ')', '{', 'tab', '(', ')', ';', 'tab', '.', 'alignSize', '(', ')', ';', '(', 'size', '(', ')', ')', ';', 'commit', '(', ')', ';', '}', '}']",88,38,6,290,70,12,79.13669064748201,60.97560975609756,,,,-1,-1,-1,-1,False
L444_tableInfoMap_1.txt,code2vec,METHOD_NAME,token_wrong,0.401,0.3478,19.0299,22.2664,"{'n_total': 397, 'n_valid': 42, 'n_correct': 41}",134.693869,"private static Map<String, TableInfo> tableInfoMap(Collection<TableInfo> tableInfos) { Iterator<TableInfo> iterator = tableInfos.iterator(); Map<String, TableInfo> results = new HashMap<String, TableInfo>(tableInfos.size()); while (iterator.hasNext()) { TableInfo itemInfo = iterator.next(); results.put(itemInfo.getName().toUpperCase(), itemInfo); } return results; }",Map<TableInfo>tableInfoMap(Collection tableInfos){Iterator<TableInfo>iterator;Map<TableInfo>results=(size());while(iterator){(itemInfo);}},"['private', 'static', 'Map', '<', 'String', ',', 'TableInfo', '>', 'tableInfoMap', '(', 'Collection', '<', 'TableInfo', '>', 'tableInfos', ')', '{', 'Iterator', '<', 'TableInfo', '>', 'iterator', '=', 'tableInfos', '.', 'iterator', '(', ')', ';', 'Map', '<', 'String', ',', 'TableInfo', '>', 'results', '=', 'new', 'HashMap', '<', 'String', ',', 'TableInfo', '>', '(', 'tableInfos', '.', 'size', '(', ')', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', '{', 'TableInfo', 'itemInfo', '=', 'iterator', '.', 'next', '(', ')', ';', 'results', '.', 'put', '(', 'itemInfo', '.', 'getName', '(', ')', '.', 'toUpperCase', '(', ')', ',', 'itemInfo', ')', ';', '}', 'return', 'results', ';', '}']","['Map', '<', 'TableInfo', '>', 'tableInfoMap', '(', 'Collection', 'tableInfos', ')', '{', 'Iterator', '<', 'TableInfo', '>', 'iterator', ';', 'Map', '<', 'TableInfo', '>', 'results', '=', '(', 'size', '(', ')', ')', ';', 'while', '(', 'iterator', ')', '{', '(', 'itemInfo', ')', ';', '}', '}']",92,39,6,368,138,18,65.71428571428571,61.627906976744185,,,,-1,-1,-1,-1,False
L445_add_1.txt,code2vec,METHOD_NAME,token_wrong,0.2384,0.1831,14.6507,17.422,"{'n_total': 218, 'n_valid': 39, 'n_correct': 15}",108.371211,"private void add(ReferralPrivilege referral) throws EntitlementException { Subject adminSubject = getAdminSubject(); String realm = getRealm(); ReferralPrivilege clone = (ReferralPrivilege) referral.clone(); clone.canonicalizeResources(adminSubject, DNMapper.orgNameToRealmName(realm)); dataStore.addReferral(adminSubject, realm, clone); }","void add(ReferralPrivilege referral)throws EntitlementException{Subject adminSubject;clone.canonicalizeResources(adminSubject,DNMapper.adminSubject,realm,clone);}","['private', 'void', 'add', '(', 'ReferralPrivilege', 'referral', ')', 'throws', 'EntitlementException', '{', 'Subject', 'adminSubject', '=', 'getAdminSubject', '(', ')', ';', 'String', 'realm', '=', 'getRealm', '(', ')', ';', 'ReferralPrivilege', 'clone', '=', '(', 'ReferralPrivilege', ')', 'referral', '.', 'clone', '(', ')', ';', 'clone', '.', 'canonicalizeResources', '(', 'adminSubject', ',', 'DNMapper', '.', 'orgNameToRealmName', '(', 'realm', ')', ')', ';', 'dataStore', '.', 'addReferral', '(', 'adminSubject', ',', 'realm', ',', 'clone', ')', ';', '}']","['void', 'add', '(', 'ReferralPrivilege', 'referral', ')', 'throws', 'EntitlementException', '{', 'Subject', 'adminSubject', ';', 'clone', '.', 'canonicalizeResources', '(', 'adminSubject', ',', 'DNMapper', '.', 'adminSubject', ',', 'realm', ',', 'clone', ')', ';', '}']",62,28,6,339,162,9,53.63636363636364,60.71428571428571,,,,-1,-1,-1,-1,False
L446_createCachedContextHolder_1.txt,code2vec,METHOD_NAME,token_wrong,0.4689,0.8303,18.8163,15.9651,"{'n_total': 436, 'n_valid': 56, 'n_correct': 34}",162.553726,@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize.class); when(cacheSize.getDesiredCacheSize()).thenReturn(5); final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); },void createCachedContextHolder(){cacheSize();(cacheSize);createCachedContextHolder();(cachedContext).isNotNull();(cachedContext.getCacheKey()).isNotNull();},"['@', 'Test', 'public', 'void', 'createCachedContextHolder', '(', ')', '{', 'final', 'ContextCacheSize', 'cacheSize', '=', 'mock', '(', 'ContextCacheSize', '.', 'class', ')', ';', 'when', '(', 'cacheSize', '.', 'getDesiredCacheSize', '(', ')', ')', '.', 'thenReturn', '(', '5', ')', ';', 'final', 'ContextHolderCache', 'cache', '=', 'new', 'ContextHolderCache', '(', 'cacheSize', ')', ';', 'final', 'ContextHolder', 'cachedContext', '=', 'cache', '.', 'createCachedContextHolder', '(', ')', ';', 'assertThat', '(', 'cachedContext', ')', '.', 'isNotNull', '(', ')', ';', 'assertThat', '(', 'cachedContext', '.', 'getCacheKey', '(', ')', ')', '.', 'isNotNull', '(', ')', ';', '}']","['void', 'createCachedContextHolder', '(', ')', '{', 'cacheSize', '(', ')', ';', '(', 'cacheSize', ')', ';', 'createCachedContextHolder', '(', ')', ';', '(', 'cachedContext', ')', '.', 'isNotNull', '(', ')', ';', '(', 'cachedContext', '.', 'getCacheKey', '(', ')', ')', '.', 'isNotNull', '(', ')', ';', '}']",76,38,6,398,156,31,65.9400544959128,54.285714285714285,,,,-1,-1,-1,-1,False
L447_newInstance_1.txt,code2vec,METHOD_NAME,token_wrong,0.7503,0.494,9.7918,12.0324,"{'n_total': 394, 'n_valid': 46, 'n_correct': 30}",142.247046,"@Override public Function newInstance(ObjList<Function> args, int position, CairoConfiguration configuration) { final double left = args.getQuick(0).getDouble(null); if (Double.isNaN(left)) { return new BooleanConstant(position, false); } return new FuncCV(position, left, args.getQuick(1)); }","Function newInstance(ObjList<Function>args,int position,CairoConfiguration configuration){left().getDouble;if(Double.isNaN()){BooleanConstant(position,false);}return new FuncCV();}","['@', 'Override', 'public', 'Function', 'newInstance', '(', 'ObjList', '<', 'Function', '>', 'args', ',', 'int', 'position', ',', 'CairoConfiguration', 'configuration', ')', '{', 'final', 'double', 'left', '=', 'args', '.', 'getQuick', '(', '0', ')', '.', 'getDouble', '(', 'null', ')', ';', 'if', '(', 'Double', '.', 'isNaN', '(', 'left', ')', ')', '{', 'return', 'new', 'BooleanConstant', '(', 'position', ',', 'false', ')', ';', '}', 'return', 'new', 'FuncCV', '(', 'position', ',', 'left', ',', 'args', '.', 'getQuick', '(', '1', ')', ')', ';', '}']","['Function', 'newInstance', '(', 'ObjList', '<', 'Function', '>', 'args', ',', 'int', 'position', ',', 'CairoConfiguration', 'configuration', ')', '{', 'left', '(', ')', '.', 'getDouble', ';', 'if', '(', 'Double', '.', 'isNaN', '(', ')', ')', '{', 'BooleanConstant', '(', 'position', ',', 'false', ')', ';', '}', 'return', 'new', 'FuncCV', '(', ')', ';', '}']",72,46,6,293,180,17,40.94202898550724,39.39393939393939,,,,-1,-1,-1,-1,False
L448_userDefaultName_1.txt,code2vec,METHOD_NAME,token_wrong,0.877,0.8853,17.3077,17.7688,"{'n_total': 211, 'n_valid': 30, 'n_correct': 19}",84.986484,"@Test public void userDefaultName() { ProcessEngine processEngine = ProcessEngineConfiguration.createStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(""default"", processEngine.getName()); }","void userDefaultName(){createStandaloneInMemProcessEngineConfiguration.buildProcessEngine();(hashCode());assertEquals("""",processEngine);}","['@', 'Test', 'public', 'void', 'userDefaultName', '(', ')', '{', 'ProcessEngine', 'processEngine', '=', 'ProcessEngineConfiguration', '.', 'createStandaloneInMemProcessEngineConfiguration', '(', ')', '.', 'buildProcessEngine', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'processEngine', '.', 'hashCode', '(', ')', ')', ';', 'assertEquals', '(', '""default""', ',', 'processEngine', '.', 'getName', '(', ')', ')', ';', '}']","['void', 'userDefaultName', '(', ')', '{', 'createStandaloneInMemProcessEngineConfiguration', '.', 'buildProcessEngine', '(', ')', ';', '(', 'hashCode', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'processEngine', ')', ';', '}']",46,25,6,264,137,21,52.2633744855967,52.5,,,,-1,-1,-1,-1,False
L449_selectCurve_1.txt,code2vec,METHOD_NAME,token_wrong,0.1811,0.1803,15.7881,14.6493,"{'n_total': 319, 'n_valid': 30, 'n_correct': 21}",85.528224,"@Override protected int selectCurve(int minimumCurveBits) { if (clientSupportedGroups == null) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }",int selectCurve(int minimumCurveBits){if(null){(minimumCurveBits);}boolean isFips=getContext().isFips();getServerSelectedCurve();},"['@', 'Override', 'protected', 'int', 'selectCurve', '(', 'int', 'minimumCurveBits', ')', '{', 'if', '(', 'clientSupportedGroups', '==', 'null', ')', '{', 'return', 'selectDefaultCurve', '(', 'minimumCurveBits', ')', ';', '}', 'boolean', 'isFips', '=', 'manager', '.', 'getContext', '(', ')', '.', 'isFips', '(', ')', ';', 'return', 'SupportedGroups', '.', 'getServerSelectedCurve', '(', 'isFips', ',', 'minimumCurveBits', ',', 'clientSupportedGroups', ')', ';', '}']","['int', 'selectCurve', '(', 'int', 'minimumCurveBits', ')', '{', 'if', '(', 'null', ')', '{', '(', 'minimumCurveBits', ')', ';', '}', 'boolean', 'isFips', '=', 'getContext', '(', ')', '.', 'isFips', '(', ')', ';', 'getServerSelectedCurve', '(', ')', ';', '}']",50,33,6,289,130,17,58.45588235294118,38.63636363636363,,,,-1,-1,-1,-1,False
L450_addDefaultProbes_1.txt,code2vec,METHOD_NAME,token_wrong,0.3938,0.5717,18.3235,17.8504,"{'n_total': 293, 'n_valid': 34, 'n_correct': 24}",95.771501,private void addDefaultProbes() { probes.add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes.add(new BooleanProbe()); },void addDefaultProbes(){(IntProbe());(LongProbe());probes(DoubleProbe());(BooleanProbe());},"['private', 'void', 'addDefaultProbes', '(', ')', '{', 'probes', '.', 'add', '(', 'new', 'IntProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'LongProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'DoubleProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'BooleanProbe', '(', ')', ')', ';', '}']","['void', 'addDefaultProbes', '(', ')', '{', '(', 'IntProbe', '(', ')', ')', ';', '(', 'LongProbe', '(', ')', ')', ';', 'probes', '(', 'DoubleProbe', '(', ')', ')', ';', '(', 'BooleanProbe', '(', ')', ')', ';', '}']",47,31,6,155,91,22,48.1203007518797,39.02439024390244,,,,-1,-1,-1,-1,False
L451_acquireLock_1.txt,code2vec,METHOD_NAME,token_wrong,0.6396,0.4521,20.9106,24.1621,"{'n_total': 555, 'n_valid': 57, 'n_correct': 44}",161.636657,"@Override protected int acquireLock(Connection connection, int logIndex, int workerId) { LOGGER.info(""Worker {} writes to log {}"", workerId, logIndex); try (PreparedStatement statement = connection.prepareStatement(""select pg_advisory_lock(?)"")) { statement.setInt(1, logIndex); statement.executeQuery(); } catch (SQLException e) { LOGGER.error(""Worker {} failed with this message: {}"", workerId, e.getMessage()); } return logIndex; }","int acquireLock(int workerId){LOGGER("""",logIndex);try(PreparedStatement statement=("""")){executeQuery();}catch(SQLException e){("""".getMessage());}return logIndex;}","['@', 'Override', 'protected', 'int', 'acquireLock', '(', 'Connection', 'connection', ',', 'int', 'logIndex', ',', 'int', 'workerId', ')', '{', 'LOGGER', '.', 'info', '(', '""Worker {} writes to log {}""', ',', 'workerId', ',', 'logIndex', ')', ';', 'try', '(', 'PreparedStatement', 'statement', '=', 'connection', '.', 'prepareStatement', '(', '""select pg_advisory_lock(?)""', ')', ')', '{', 'statement', '.', 'setInt', '(', '1', ',', 'logIndex', ')', ';', 'statement', '.', 'executeQuery', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'LOGGER', '.', 'error', '(', '""Worker {} failed with this message: {}""', ',', 'workerId', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'return', 'logIndex', ';', '}']","['int', 'acquireLock', '(', 'int', 'workerId', ')', '{', 'LOGGER', '(', '""""', ',', 'logIndex', ')', ';', 'try', '(', 'PreparedStatement', 'statement', '=', '(', '""""', ')', ')', '{', 'executeQuery', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', '(', '""""', '.', 'getMessage', '(', ')', ')', ';', '}', 'return', 'logIndex', ';', '}']",82,48,6,434,162,17,65.22781774580336,44.73684210526316,,,,-1,-1,-1,-1,False
L452_setLastModifiedTime_1.txt,code2vec,METHOD_NAME,token_wrong,0.773,0.778,8.3156,7.5419,"{'n_total': 145, 'n_valid': 15, 'n_correct': 13}",43.073232,private void setLastModifiedTime() { if (isEntryExpirationEnabled()) { lastModifiedTime = System.currentTimeMillis(); } },void setLastModifiedTime(){if(isEntryExpirationEnabled){lastModifiedTime=currentTimeMillis();}},"['private', 'void', 'setLastModifiedTime', '(', ')', '{', 'if', '(', 'isEntryExpirationEnabled', '(', ')', ')', '{', 'lastModifiedTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', '}', '}']","['void', 'setLastModifiedTime', '(', ')', '{', 'if', '(', 'isEntryExpirationEnabled', ')', '{', 'lastModifiedTime', '=', 'currentTimeMillis', '(', ')', ';', '}', '}']",23,18,6,121,95,25,27.083333333333332,29.411764705882355,,,,-1,-1,-1,-1,False
L453_releaseExternalResources_1.txt,code2vec,METHOD_NAME,token_wrong,0.9239,0.7173,4.7598,7.7929,"{'n_total': 144, 'n_valid': 15, 'n_correct': 15}",45.944329,@Override public void releaseExternalResources() { if (referenceCount.decrementAndGet() <= 0) { shutdown(); ExecutorUtil.terminate(workerExecutor); } },void releaseExternalResources(){if(0){(workerExecutor);}},"['@', 'Override', 'public', 'void', 'releaseExternalResources', '(', ')', '{', 'if', '(', 'referenceCount', '.', 'decrementAndGet', '(', ')', '<=', '0', ')', '{', 'shutdown', '(', ')', ';', 'ExecutorUtil', '.', 'terminate', '(', 'workerExecutor', ')', ';', '}', '}']","['void', 'releaseExternalResources', '(', ')', '{', 'if', '(', '0', ')', '{', '(', 'workerExecutor', ')', ';', '}', '}']",32,16,6,151,57,30,77.68595041322314,61.53846153846154,,,,-1,-1,-1,-1,False
L454_setControlRodInsertion_1.txt,code2vec,METHOD_NAME,token_wrong,0.919,0.5402,23.045,16.4355,"{'n_total': 415, 'n_valid': 43, 'n_correct': 37}",129.339801,"public void setControlRodInsertion(short newInsertion) { if (newInsertion > maxInsertion || newInsertion < minInsertion || newInsertion == controlRodInsertion) { return; } if (!isConnected()) { return; } this.controlRodInsertion = (short) Math.max(Math.min(newInsertion, maxInsertion), minInsertion); this.sendControlRodUpdate(); }",void setControlRodInsertion(){if(maxInsertion|newInsertion==controlRodInsertion)if(!isConnected()){}this.max((maxInsertion));sendControlRodUpdate();},"['public', 'void', 'setControlRodInsertion', '(', 'short', 'newInsertion', ')', '{', 'if', '(', 'newInsertion', '>', 'maxInsertion', '||', 'newInsertion', '<', 'minInsertion', '||', 'newInsertion', '==', 'controlRodInsertion', ')', '{', 'return', ';', '}', 'if', '(', '!', 'isConnected', '(', ')', ')', '{', 'return', ';', '}', 'this', '.', 'controlRodInsertion', '=', '(', 'short', ')', 'Math', '.', 'max', '(', 'Math', '.', 'min', '(', 'newInsertion', ',', 'maxInsertion', ')', ',', 'minInsertion', ')', ';', 'this', '.', 'sendControlRodUpdate', '(', ')', ';', '}']","['void', 'setControlRodInsertion', '(', ')', '{', 'if', '(', 'maxInsertion', '|', 'newInsertion', '==', 'controlRodInsertion', ')', 'if', '(', '!', 'isConnected', '(', ')', ')', '{', '}', 'this', '.', 'max', '(', '(', 'maxInsertion', ')', ')', ';', 'sendControlRodUpdate', '(', ')', ';', '}']",67,36,6,331,149,28,60.066006600660074,50.81967213114754,,,,-1,-1,-1,-1,False
L455_setupCallbackOnFailure_1.txt,code2vec,METHOD_NAME,token_wrong,0.3759,0.3669,14.803,18.2996,"{'n_total': 397, 'n_valid': 49, 'n_correct': 33}",147.79149,"private void setupCallbackOnFailure(com.naef.jnlua.LuaState luaState) { try { luaState.checkType(m_luaStackIndexOnFailure, com.naef.jnlua.LuaType.FUNCTION); } catch (Exception ex) { ex.printStackTrace(); return; } luaState.pushValue(m_luaStackIndexOnFailure); m_luaReferenceKeyOnFailure = luaState.ref(com.naef.jnlua.LuaState.REGISTRYINDEX); }",void setupCallbackOnFailure(LuaState luaState){try{luaState.checkType();}catch(Exception ex){}pushValue();(com);},"['private', 'void', 'setupCallbackOnFailure', '(', 'com', '.', 'naef', '.', 'jnlua', '.', 'LuaState', 'luaState', ')', '{', 'try', '{', 'luaState', '.', 'checkType', '(', 'm_luaStackIndexOnFailure', ',', 'com', '.', 'naef', '.', 'jnlua', '.', 'LuaType', '.', 'FUNCTION', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'return', ';', '}', 'luaState', '.', 'pushValue', '(', 'm_luaStackIndexOnFailure', ')', ';', 'm_luaReferenceKeyOnFailure', '=', 'luaState', '.', 'ref', '(', 'com', '.', 'naef', '.', 'jnlua', '.', 'LuaState', '.', 'REGISTRYINDEX', ')', ';', '}']","['void', 'setupCallbackOnFailure', '(', 'LuaState', 'luaState', ')', '{', 'try', '{', 'luaState', '.', 'checkType', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '}', 'pushValue', '(', ')', ';', '(', 'com', ')', ';', '}']",74,32,6,343,113,28,73.01587301587301,61.76470588235294,,,,-1,-1,-1,-1,False
L456_delay_1.txt,code2vec,METHOD_NAME,token_wrong,0.9942,0.5187,8.4018,5.4789,"{'n_total': 215, 'n_valid': 23, 'n_correct': 23}",70.415222,protected void delay(int miliseconds) { if (miliseconds > 0) { try { Thread.sleep(miliseconds); } catch (InterruptedException e1) { } } },void delay(){if(miliseconds){try{(miliseconds);}catch(InterruptedException e){}}},"['protected', 'void', 'delay', '(', 'int', 'miliseconds', ')', '{', 'if', '(', 'miliseconds', '>', '0', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'miliseconds', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e1', ')', '{', '}', '}', '}']","['void', 'delay', '(', ')', '{', 'if', '(', 'miliseconds', ')', '{', 'try', '{', '(', 'miliseconds', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}']",34,26,6,137,81,11,44.44444444444444,28.57142857142857,,,,-1,-1,-1,-1,False
L457_getAssessment_1.txt,code2vec,METHOD_NAME,token_wrong,0.2355,0.2836,15.581,17.2624,"{'n_total': 292, 'n_valid': 26, 'n_correct': 25}",76.897867,public AssessmentIfc getAssessment() throws DataFacadeException { try { this.data = (SectionDataIfc) section.getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); },AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex);}(this.getAssessment);},"['public', 'AssessmentIfc', 'getAssessment', '(', ')', 'throws', 'DataFacadeException', '{', 'try', '{', 'this', '.', 'data', '=', '(', 'SectionDataIfc', ')', 'section', '.', 'getData', '(', ')', ';', '}', 'catch', '(', 'AssessmentException', 'ex', ')', '{', 'throw', 'new', 'DataFacadeException', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', '}', 'return', 'new', 'AssessmentFacade', '(', 'this', '.', 'data', '.', 'getAssessment', '(', ')', ')', ';', '}']","['AssessmentIfc', 'getAssessment', '(', ')', 'throws', 'DataFacadeException', '{', 'try', '{', 'getData', '(', ')', ';', '}', 'catch', '(', 'AssessmentException', 'ex', ')', '{', '(', 'ex', ')', ';', '}', '(', 'this', '.', 'getAssessment', ')', ';', '}']",56,32,6,262,129,19,54.73251028806584,48.0,,,,-1,-1,-1,-1,False
L458_processClientKeyExchange_2.txt,code2vec,METHOD_NAME,token_wrong,0.9799,0.8265,28.3566,19.6778,"{'n_total': 185, 'n_valid': 24, 'n_correct': 21}",68.562427,"public void processClientKeyExchange(InputStream input) throws IOException { if (ecdhPeerCertificate != null) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }",void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){}TlsUtils;processEphemeral();},"['public', 'void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'if', '(', 'ecdhPeerCertificate', '!=', 'null', ')', '{', 'return', ';', '}', 'byte', '[', ']', 'point', '=', 'TlsUtils', '.', 'readOpaque8', '(', 'input', ')', ';', 'processEphemeral', '(', 'serverECPointFormats', ',', 'point', ')', ';', '}']","['void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', '{', 'if', '(', 'ecdhPeerCertificate', ')', '{', '}', 'TlsUtils', ';', 'processEphemeral', '(', ')', ';', '}']",40,20,6,214,103,30,60.32608695652174,58.82352941176471,,,,-1,-1,-1,-1,False
L459_filterSimpleOperation_1.txt,code2vec,METHOD_NAME,token_wrong,0.306,0.4173,16.5246,16.4791,"{'n_total': 554, 'n_valid': 51, 'n_correct': 39}",151.795908,"private P filterSimpleOperation(FilterSpec fs, MetaDataObject rootMeta) { Object value = fs.getValue(); if (value instanceof Set) { Set<?> set = (Set<?>) value; value = new ArrayList<Object>(set); } MetaAttributePath path = rootMeta.resolvePath(fs.getAttributePath(), attributeFinder); path = enhanceAttributePath(path, value); return backend.buildPredicate(fs.getOperator(), path, value); }","P filterSimpleOperation(FilterSpec rootMeta){value();if(value instanceof Set){set=(Set<?>)(set);}(attributeFinder);enhanceAttributePath();return backend.buildPredicate(getOperator(),value);}","['private', 'P', 'filterSimpleOperation', '(', 'FilterSpec', 'fs', ',', 'MetaDataObject', 'rootMeta', ')', '{', 'Object', 'value', '=', 'fs', '.', 'getValue', '(', ')', ';', 'if', '(', 'value', 'instanceof', 'Set', ')', '{', 'Set', '<', '?', '>', 'set', '=', '(', 'Set', '<', '?', '>', ')', 'value', ';', 'value', '=', 'new', 'ArrayList', '<', 'Object', '>', '(', 'set', ')', ';', '}', 'MetaAttributePath', 'path', '=', 'rootMeta', '.', 'resolvePath', '(', 'fs', '.', 'getAttributePath', '(', ')', ',', 'attributeFinder', ')', ';', 'path', '=', 'enhanceAttributePath', '(', 'path', ',', 'value', ')', ';', 'return', 'backend', '.', 'buildPredicate', '(', 'fs', '.', 'getOperator', '(', ')', ',', 'path', ',', 'value', ')', ';', '}']","['P', 'filterSimpleOperation', '(', 'FilterSpec', 'rootMeta', ')', '{', 'value', '(', ')', ';', 'if', '(', 'value', 'instanceof', 'Set', ')', '{', 'set', '=', '(', 'Set', '<', '?', '>', ')', '(', 'set', ')', ';', '}', '(', 'attributeFinder', ')', ';', 'enhanceAttributePath', '(', ')', ';', 'return', 'backend', '.', 'buildPredicate', '(', 'getOperator', '(', ')', ',', 'value', ')', ';', '}']",95,52,6,391,190,27,55.219780219780226,48.31460674157304,,,,-1,-1,-1,-1,False
L460_match_1.txt,code2vec,METHOD_NAME,token_wrong,0.7749,0.2457,8.7422,4.0214,"{'n_total': 148, 'n_valid': 22, 'n_correct': 13}",61.502837,"@Test public void match() throws IOException { adaptee.match(message); replay(message, adaptee); adapter.match(null, message); verify(message, adaptee); }",@Test void match()throws IOException{adaptee.match(message);verify(adaptee);},"['@', 'Test', 'public', 'void', 'match', '(', ')', 'throws', 'IOException', '{', 'adaptee', '.', 'match', '(', 'message', ')', ';', 'replay', '(', 'message', ',', 'adaptee', ')', ';', 'adapter', '.', 'match', '(', 'null', ',', 'message', ')', ';', 'verify', '(', 'message', ',', 'adaptee', ')', ';', '}']","['@', 'Test', 'void', 'match', '(', ')', 'throws', 'IOException', '{', 'adaptee', '.', 'match', '(', 'message', ')', ';', 'verify', '(', 'adaptee', ')', ';', '}']",41,22,6,154,77,11,53.84615384615385,54.285714285714285,,,,-1,-1,-1,-1,False
L461_testNone_1.txt,code2vec,METHOD_NAME,token_wrong,0.8048,0.6012,16.6313,13.8716,"{'n_total': 300, 'n_valid': 40, 'n_correct': 26}",116.789052,"@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }","void testNone()throws Exception{(((Long)));assertThat(instanceData,ContentValuesWithLong(TaskContract.Instances.SORTING,(Long)));(instanceData);}","['@', 'Test', 'public', 'void', 'testNone', '(', ')', 'throws', 'Exception', '{', 'ContentValues', 'instanceData', '=', 'new', 'StartDated', '(', 'absent', '(', ')', ',', 'ContentValues', '::', 'new', ')', '.', 'value', '(', ')', ';', 'assertThat', '(', 'instanceData', ',', 'new', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'Instances', '.', 'INSTANCE_START', ',', 'nullValue', '(', 'Long', '.', 'class', ')', ')', ')', ';', 'assertThat', '(', 'instanceData', ',', 'new', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'Instances', '.', 'INSTANCE_START_SORTING', ',', 'nullValue', '(', 'Long', '.', 'class', ')', ')', ')', ';', 'assertThat', '(', 'instanceData', '.', 'size', '(', ')', ',', 'is', '(', '0', ')', ')', ';', '}']","['void', 'testNone', '(', ')', 'throws', 'Exception', '{', '(', '(', '(', 'Long', ')', ')', ')', ';', 'assertThat', '(', 'instanceData', ',', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'Instances', '.', 'SORTING', ',', '(', 'Long', ')', ')', ')', ';', '(', 'instanceData', ')', ';', '}']",88,38,6,410,145,14,66.91919191919192,60.97560975609756,,,,-1,-1,-1,-1,False
L462_isUserInSession_1.txt,code2vec,METHOD_NAME,token_wrong,0.1715,0.1716,18.5391,18.7517,"{'n_total': 329, 'n_valid': 37, 'n_correct': 20}",110.119857,public UserSession isUserInSession(int userId) { for (UserSession us : loggedSessions.values()) { if (us.getUser().getId() == userId) { return us; } } return null; },UserSession isUserInSession(int userId){for(UserSession us:loggedSessions.values()){if(getUser().getId()==userId){return us;}}},"['public', 'UserSession', 'isUserInSession', '(', 'int', 'userId', ')', '{', 'for', '(', 'UserSession', 'us', ':', 'loggedSessions', '.', 'values', '(', ')', ')', '{', 'if', '(', 'us', '.', 'getUser', '(', ')', '.', 'getId', '(', ')', '==', 'userId', ')', '{', 'return', 'us', ';', '}', '}', 'return', 'null', ';', '}']","['UserSession', 'isUserInSession', '(', 'int', 'userId', ')', '{', 'for', '(', 'UserSession', 'us', ':', 'loggedSessions', '.', 'values', '(', ')', ')', '{', 'if', '(', 'getUser', '(', ')', '.', 'getId', '(', ')', '==', 'userId', ')', '{', 'return', 'us', ';', '}', '}', '}']",44,38,6,165,127,21,26.38888888888889,15.789473684210526,,,,-1,-1,-1,-1,False
L463_lookup_2.txt,code2vec,METHOD_NAME,token_wrong,0.8899,0.7463,6.0623,11.1208,"{'n_total': 275, 'n_valid': 31, 'n_correct': 31}",96.178982,"@Nullable public synchronized HttpHandler lookup(String path) { for (int i = 0, N = mPathMatchers.size(); i < N; i++) { if (mPathMatchers.get(i).match(path)) { return mHttpHandlers.get(i); } } return null; }",HttpHandler lookup(String path){for(;;){if((i)){}}},"['@', 'Nullable', 'public', 'synchronized', 'HttpHandler', 'lookup', '(', 'String', 'path', ')', '{', 'for', '(', 'int', 'i', '=', '0', ',', 'N', '=', 'mPathMatchers', '.', 'size', '(', ')', ';', 'i', '<', 'N', ';', 'i', '++', ')', '{', 'if', '(', 'mPathMatchers', '.', 'get', '(', 'i', ')', '.', 'match', '(', 'path', ')', ')', '{', 'return', 'mHttpHandlers', '.', 'get', '(', 'i', ')', ';', '}', '}', 'return', 'null', ';', '}']","['HttpHandler', 'lookup', '(', 'String', 'path', ')', '{', 'for', '(', ';', ';', ')', '{', 'if', '(', '(', 'i', ')', ')', '{', '}', '}', '}']",63,23,6,207,51,12,80.0,70.17543859649122,,,,-1,-1,-1,-1,False
L464_unmap_1.txt,code2vec,METHOD_NAME,token_wrong,0.4147,0.6912,13.8618,21.4606,"{'n_total': 376, 'n_valid': 48, 'n_correct': 42}",141.952342,"private RelatedEntity unmap(RelatedEntity merged) { if (merged != null) { RelatedEntity related = em.find(RelatedEntity.class, merged.getId()); if (related == null) { related = new RelatedEntity(); related.setId(merged.getId()); } related.setStringValue(merged.getStringValue()); return related; } else { return null; } }",RelatedEntity unmap(){if(null){RelatedEntity(merged);if(related){RelatedEntity();related();}(merged);}{}},"['private', 'RelatedEntity', 'unmap', '(', 'RelatedEntity', 'merged', ')', '{', 'if', '(', 'merged', '!=', 'null', ')', '{', 'RelatedEntity', 'related', '=', 'em', '.', 'find', '(', 'RelatedEntity', '.', 'class', ',', 'merged', '.', 'getId', '(', ')', ')', ';', 'if', '(', 'related', '==', 'null', ')', '{', 'related', '=', 'new', 'RelatedEntity', '(', ')', ';', 'related', '.', 'setId', '(', 'merged', '.', 'getId', '(', ')', ')', ';', '}', 'related', '.', 'setStringValue', '(', 'merged', '.', 'getStringValue', '(', ')', ')', ';', 'return', 'related', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']","['RelatedEntity', 'unmap', '(', ')', '{', 'if', '(', 'null', ')', '{', 'RelatedEntity', '(', 'merged', ')', ';', 'if', '(', 'related', ')', '{', 'RelatedEntity', '(', ')', ';', 'related', '(', ')', ';', '}', '(', 'merged', ')', ';', '}', '{', '}', '}']",81,37,6,321,105,11,69.6774193548387,58.666666666666664,,,,-1,-1,-1,-1,False
L465_initialize_1.txt,code2vec,METHOD_NAME,token_wrong,0.9647,1.0,3.4226,13.4769,"{'n_total': 286, 'n_valid': 33, 'n_correct': 31}",97.326246,"public void initialize(KeyProvider keyProvider) { if (keyProvider == null) { SAMLUtilsCommon.debug.error(""Key Provider is null""); } else { keystore = keyProvider; if (keystore instanceof JKSKeyProvider) { isJKSKeyStore = true; } } }","void initialize(KeyProvider keyProvider){if(keyProvider){("""");}{if(JKSKeyProvider){}}}","['public', 'void', 'initialize', '(', 'KeyProvider', 'keyProvider', ')', '{', 'if', '(', 'keyProvider', '==', 'null', ')', '{', 'SAMLUtilsCommon', '.', 'debug', '.', 'error', '(', '""Key Provider is null""', ')', ';', '}', 'else', '{', 'keystore', '=', 'keyProvider', ';', 'if', '(', 'keystore', 'instanceof', 'JKSKeyProvider', ')', '{', 'isJKSKeyStore', '=', 'true', ';', '}', '}', '}']","['void', 'initialize', '(', 'KeyProvider', 'keyProvider', ')', '{', 'if', '(', 'keyProvider', ')', '{', '(', '""""', ')', ';', '}', '{', 'if', '(', 'JKSKeyProvider', ')', '{', '}', '}', '}']",45,26,6,232,86,16,67.5925925925926,48.717948717948715,,,,-1,-1,-1,-1,False
L466_shouldExecuteTokenQuery_1.txt,code2vec,METHOD_NAME,token_wrong,0.8273,0.3785,19.5249,16.4179,"{'n_total': 299, 'n_valid': 27, 'n_correct': 17}",77.651448,"@Test public void shouldExecuteTokenQuery() throws Exception { given(mockAdapter.query(mockConnection, mockTokenFilter)).willReturn(new ArrayList<Token>()); task.execute(mockConnection, mockAdapter); verify(mockResultHandler).processResults(any(ArrayList.class)); }","void shouldExecuteTokenQuery()throws Exception{given(mockAdapter(mockConnection,mockTokenFilter)).willReturn(new ArrayList<>());task(mockConnection,(ArrayList));}","['@', 'Test', 'public', 'void', 'shouldExecuteTokenQuery', '(', ')', 'throws', 'Exception', '{', 'given', '(', 'mockAdapter', '.', 'query', '(', 'mockConnection', ',', 'mockTokenFilter', ')', ')', '.', 'willReturn', '(', 'new', 'ArrayList', '<', 'Token', '>', '(', ')', ')', ';', 'task', '.', 'execute', '(', 'mockConnection', ',', 'mockAdapter', ')', ';', 'verify', '(', 'mockResultHandler', ')', '.', 'processResults', '(', 'any', '(', 'ArrayList', '.', 'class', ')', ')', ';', '}']","['void', 'shouldExecuteTokenQuery', '(', ')', 'throws', 'Exception', '{', 'given', '(', 'mockAdapter', '(', 'mockConnection', ',', 'mockTokenFilter', ')', ')', '.', 'willReturn', '(', 'new', 'ArrayList', '<', '>', '(', ')', ')', ';', 'task', '(', 'mockConnection', ',', '(', 'ArrayList', ')', ')', ';', '}']",58,37,6,265,162,29,43.64406779661017,40.38461538461539,,,,-1,-1,-1,-1,False
L467_validate_2.txt,code2vec,METHOD_NAME,token_wrong,0.8608,0.9185,2.7119,7.2429,"{'n_total': 294, 'n_valid': 36, 'n_correct': 24}",104.398015,"@Override public void validate(String name, Number value) throws ParameterException { if (value.longValue() <= 0) { throw new ParameterException(String.format(""%s must be positive"", name)); } }","void validate(String value)throws ParameterException{if(longValue()<0){(String(""smustbepositive"",name));}}","['@', 'Override', 'public', 'void', 'validate', '(', 'String', 'name', ',', 'Number', 'value', ')', 'throws', 'ParameterException', '{', 'if', '(', 'value', '.', 'longValue', '(', ')', '<=', '0', ')', '{', 'throw', 'new', 'ParameterException', '(', 'String', '.', 'format', '(', '""%s must be positive""', ',', 'name', ')', ')', ';', '}', '}']","['void', 'validate', '(', 'String', 'value', ')', 'throws', 'ParameterException', '{', 'if', '(', 'longValue', '(', ')', '<', '0', ')', '{', '(', 'String', '(', '""smustbepositive""', ',', 'name', ')', ')', ';', '}', '}']",42,29,6,193,106,14,48.60335195530726,36.11111111111111,,,,-1,-1,-1,-1,False
L468_copyPool_1.txt,code2vec,METHOD_NAME,token_wrong,0.3204,0.176,15.9891,16.1573,"{'n_total': 407, 'n_valid': 44, 'n_correct': 31}",130.420314,"public void copyPool(Tree tree, String agentId, Long sourceId, Long destId, String prependString1, String prependString2) { try { QuestionPoolService service = new QuestionPoolService(); service.copyPool(tree, agentId, sourceId, destId, prependString1, prependString2); } catch (Exception ex) { throw new QuestionPoolServiceException(ex); } }","void copyPool(Tree tree,String agentId,Long sourceId,Long destId,String prependString,String prependString){try{service.copyPool(sourceId,destId,prependString);}catch(Exception ex){(ex);}}","['public', 'void', 'copyPool', '(', 'Tree', 'tree', ',', 'String', 'agentId', ',', 'Long', 'sourceId', ',', 'Long', 'destId', ',', 'String', 'prependString1', ',', 'String', 'prependString2', ')', '{', 'try', '{', 'QuestionPoolService', 'service', '=', 'new', 'QuestionPoolService', '(', ')', ';', 'service', '.', 'copyPool', '(', 'tree', ',', 'agentId', ',', 'sourceId', ',', 'destId', ',', 'prependString1', ',', 'prependString2', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'throw', 'new', 'QuestionPoolServiceException', '(', 'ex', ')', ';', '}', '}']","['void', 'copyPool', '(', 'Tree', 'tree', ',', 'String', 'agentId', ',', 'Long', 'sourceId', ',', 'Long', 'destId', ',', 'String', 'prependString', ',', 'String', 'prependString', ')', '{', 'try', '{', 'service', '.', 'copyPool', '(', 'sourceId', ',', 'destId', ',', 'prependString', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', 'ex', ')', ';', '}', '}']",66,48,6,342,188,14,46.95121951219512,30.0,,,,-1,-1,-1,-1,False
L469_findLongestChain_1.txt,code2vec,METHOD_NAME,token_wrong,0.6452,0.9385,17.6311,21.3628,"{'n_total': 528, 'n_valid': 60, 'n_correct': 54}",178.447827,"public int findLongestChain(int[][] pairs) { Arrays.sort(pairs, (o1, o2) -> o1[1] - o2[1]); int result = 0; int n = pairs.length; int i = -1; while (++i < n) { result++; int curEnd = pairs[i][1]; while (i + 1 < n && pairs[i + 1][0] <= curEnd) { i++; } } return result; }",int findLongestChain(int[]pairs){Arrays.sort(pairs()[1]);while(n){while(i&pairs[1]<curEnd){}}},"['public', 'int', 'findLongestChain', '(', 'int', '[', ']', '[', ']', 'pairs', ')', '{', 'Arrays', '.', 'sort', '(', 'pairs', ',', '(', 'o1', ',', 'o2', ')', '->', 'o1', '[', '1', ']', '-', 'o2', '[', '1', ']', ')', ';', 'int', 'result', '=', '0', ';', 'int', 'n', '=', 'pairs', '.', 'length', ';', 'int', 'i', '=', '-', '1', ';', 'while', '(', '++', 'i', '<', 'n', ')', '{', 'result', '++', ';', 'int', 'curEnd', '=', 'pairs', '[', 'i', ']', '[', '1', ']', ';', 'while', '(', 'i', '+', '1', '<', 'n', '&&', 'pairs', '[', 'i', '+', '1', ']', '[', '0', ']', '<=', 'curEnd', ')', '{', 'i', '++', ';', '}', '}', 'return', 'result', ';', '}']","['int', 'findLongestChain', '(', 'int', '[', ']', 'pairs', ')', '{', 'Arrays', '.', 'sort', '(', 'pairs', '(', ')', '[', '1', ']', ')', ';', 'while', '(', 'n', ')', '{', 'while', '(', 'i', '&', 'pairs', '[', '1', ']', '<', 'curEnd', ')', '{', '}', '}', '}']",105,41,6,270,94,22,70.96774193548387,64.64646464646465,,,,-1,-1,-1,-1,False
L470_processResults_1.txt,code2vec,METHOD_NAME,token_wrong,0.2807,0.3611,11.5831,9.6452,"{'n_total': 656, 'n_valid': 58, 'n_correct': 45}",175.24738,"@Override public void processResults(Collection<PartialToken> results) { String tokenId = null; for (PartialToken result : results) { try { tokenId = result.getValue(CoreTokenField.TOKEN_ID); taskDispatcher.delete(tokenId, resultHandlerFactory.getDeleteHandler()); } catch (CoreTokenException ex) { debug.error(String.format(""Unable to submit delete task for token ID {0}"", tokenId), ex); } } }","@Override void processResults(Collection<PartialToken>results){for(PartialToken result:results){try{(getDeleteHandler());}catch(CoreTokenException ex){error(String("""",tokenId),ex);}}}","['@', 'Override', 'public', 'void', 'processResults', '(', 'Collection', '<', 'PartialToken', '>', 'results', ')', '{', 'String', 'tokenId', '=', 'null', ';', 'for', '(', 'PartialToken', 'result', ':', 'results', ')', '{', 'try', '{', 'tokenId', '=', 'result', '.', 'getValue', '(', 'CoreTokenField', '.', 'TOKEN_ID', ')', ';', 'taskDispatcher', '.', 'delete', '(', 'tokenId', ',', 'resultHandlerFactory', '.', 'getDeleteHandler', '(', ')', ')', ';', '}', 'catch', '(', 'CoreTokenException', 'ex', ')', '{', 'debug', '.', 'error', '(', 'String', '.', 'format', '(', '""Unable to submit delete task for token ID {0}""', ',', 'tokenId', ')', ',', 'ex', ')', ';', '}', '}', '}']","['@', 'Override', 'void', 'processResults', '(', 'Collection', '<', 'PartialToken', '>', 'results', ')', '{', 'for', '(', 'PartialToken', 'result', ':', 'results', ')', '{', 'try', '{', '(', 'getDeleteHandler', '(', ')', ')', ';', '}', 'catch', '(', 'CoreTokenException', 'ex', ')', '{', 'error', '(', 'String', '(', '""""', ',', 'tokenId', ')', ',', 'ex', ')', ';', '}', '}', '}']",78,50,6,394,183,20,56.417112299465245,38.88888888888889,,,,-1,-1,-1,-1,False
L471_encodeContentShared_1.txt,code2vec,METHOD_NAME,token_wrong,0.6792,0.2413,16.5307,16.2255,"{'n_total': 1114, 'n_valid': 260, 'n_correct': 80}",734.53569,"@Test public void encodeContentShared() throws Exception { ProtocolCodecSessionEx session = new ProtocolCodecSessionEx(); IoBufferAllocatorEx<?> allocator = session.getBufferAllocator(); ProtocolEncoder encoder = new HttpResponseEncoder(allocator); HttpBufferAllocator httpAllocator = new HttpBufferAllocator(allocator); IoBufferEx data = httpAllocator.wrap(ByteBuffer.wrap(""Hello, world"".getBytes()), FLAG_SHARED); HttpContentMessage httpContent = new HttpContentMessage(data, true); encoder.encode(session, httpContent, session.getEncoderOutput()); IoBufferEx buf = (IoBufferEx) session.getEncoderOutputQueue().poll(); assertEquals(""Hello, world"", buf.getString(Charset.forName(""UTF-8"").newDecoder())); assertSame(data.array(), buf.array()); }","@Test void encodeContentShared()throws Exception{session.getBufferAllocator();encoder();((getBytes));(session);assertEquals(""world"",getString(("""").newDecoder()));assertSame(data(),buf());}","['@', 'Test', 'public', 'void', 'encodeContentShared', '(', ')', 'throws', 'Exception', '{', 'ProtocolCodecSessionEx', 'session', '=', 'new', 'ProtocolCodecSessionEx', '(', ')', ';', 'IoBufferAllocatorEx', '<', '?', '>', 'allocator', '=', 'session', '.', 'getBufferAllocator', '(', ')', ';', 'ProtocolEncoder', 'encoder', '=', 'new', 'HttpResponseEncoder', '(', 'allocator', ')', ';', 'HttpBufferAllocator', 'httpAllocator', '=', 'new', 'HttpBufferAllocator', '(', 'allocator', ')', ';', 'IoBufferEx', 'data', '=', 'httpAllocator', '.', 'wrap', '(', 'ByteBuffer', '.', 'wrap', '(', '""Hello, world""', '.', 'getBytes', '(', ')', ')', ',', 'FLAG_SHARED', ')', ';', 'HttpContentMessage', 'httpContent', '=', 'new', 'HttpContentMessage', '(', 'data', ',', 'true', ')', ';', 'encoder', '.', 'encode', '(', 'session', ',', 'httpContent', ',', 'session', '.', 'getEncoderOutput', '(', ')', ')', ';', 'IoBufferEx', 'buf', '=', '(', 'IoBufferEx', ')', 'session', '.', 'getEncoderOutputQueue', '(', ')', '.', 'poll', '(', ')', ';', 'assertEquals', '(', '""Hello, world""', ',', 'buf', '.', 'getString', '(', 'Charset', '.', 'forName', '(', '""UTF-8""', ')', '.', 'newDecoder', '(', ')', ')', ')', ';', 'assertSame', '(', 'data', '.', 'array', '(', ')', ',', 'buf', '.', 'array', '(', ')', ')', ';', '}']","['@', 'Test', 'void', 'encodeContentShared', '(', ')', 'throws', 'Exception', '{', 'session', '.', 'getBufferAllocator', '(', ')', ';', 'encoder', '(', ')', ';', '(', '(', 'getBytes', ')', ')', ';', '(', 'session', ')', ';', 'assertEquals', '(', '""world""', ',', 'getString', '(', '(', '""""', ')', '.', 'newDecoder', '(', ')', ')', ')', ';', 'assertSame', '(', 'data', '(', ')', ',', 'buf', '(', ')', ')', ';', '}']",148,57,6,745,188,25,77.36111111111111,64.08450704225352,,,,-1,-1,-1,-1,False
L472_attributeCache_1.txt,code2vec,METHOD_NAME,token_wrong,0.4101,0.251,16.4059,19.2207,"{'n_total': 375, 'n_valid': 33, 'n_correct': 25}",95.733238,"private LoadingCache<IJobKey, AttributeAggregate> attributeCache(final StoreProvider store) { return CacheBuilder.newBuilder().build(CacheLoader.from(new Function<IJobKey, AttributeAggregate>() { @Override public AttributeAggregate apply(IJobKey job) { return AttributeAggregate.getJobActiveState(store, job); } })); }","LoadingCache<AttributeAggregate>attributeCache(StoreProvider store){CacheBuilder().build(CacheLoader.from(new Function<IJobKey,AttributeAggregate>(){apply(IJobKey job){(job);}}));}","['private', 'LoadingCache', '<', 'IJobKey', ',', 'AttributeAggregate', '>', 'attributeCache', '(', 'final', 'StoreProvider', 'store', ')', '{', 'return', 'CacheBuilder', '.', 'newBuilder', '(', ')', '.', 'build', '(', 'CacheLoader', '.', 'from', '(', 'new', 'Function', '<', 'IJobKey', ',', 'AttributeAggregate', '>', '(', ')', '{', '@', 'Override', 'public', 'AttributeAggregate', 'apply', '(', 'IJobKey', 'job', ')', '{', 'return', 'AttributeAggregate', '.', 'getJobActiveState', '(', 'store', ',', 'job', ')', ';', '}', '}', ')', ')', ';', '}']","['LoadingCache', '<', 'AttributeAggregate', '>', 'attributeCache', '(', 'StoreProvider', 'store', ')', '{', 'CacheBuilder', '(', ')', '.', 'build', '(', 'CacheLoader', '.', 'from', '(', 'new', 'Function', '<', 'IJobKey', ',', 'AttributeAggregate', '>', '(', ')', '{', 'apply', '(', 'IJobKey', 'job', ')', '{', '(', 'job', ')', ';', '}', '}', ')', ')', ';', '}']",63,46,6,318,180,20,46.308724832214764,29.82456140350877,,,,-1,-1,-1,-1,False
L473_before_1.txt,code2vec,METHOD_NAME,token_wrong,0.3511,0.2801,10.3063,11.5623,"{'n_total': 1012, 'n_valid': 119, 'n_correct': 75}",354.102033,"@Before public void before() { try { Method buildUriMatcher = WeatherProvider.class.getDeclaredMethod(""buildUriMatcher""); testMatcher = (UriMatcher) buildUriMatcher.invoke(WeatherProvider.class); REFLECTED_WEATHER_CODE = getStaticIntegerField(WeatherProvider.class, weatherCodeVariableName); REFLECTED_WEATHER_WITH_DATE_CODE = getStaticIntegerField(WeatherProvider.class, weatherCodeWithDateVariableName); } catch (NoSuchFieldException e) { fail(studentReadableNoSuchField(e)); } catch (IllegalAccessException e) { fail(e.getMessage()); } catch (NoSuchMethodException e) { String noBuildUriMatcherMethodFound = ""It doesn't appear that you have created a method called buildUriMatcher in "" + ""the WeatherProvider class.""; fail(noBuildUriMatcherMethodFound); } catch (InvocationTargetException e) { fail(e.getMessage()); } }","@Before void before(){try{Method=("""");testMatcher=(WeatherProvider)CODE();}catch(NoSuchFieldException e){((e));}catch(IllegalAccessException e){(getMessage());}catch(NoSuchMethodException e){noBuildUriMatcherMethodFound=""""+"""";(noBuildUriMatcherMethodFound);}catch(InvocationTargetException e){(e);}}","['@', 'Before', 'public', 'void', 'before', '(', ')', '{', 'try', '{', 'Method', 'buildUriMatcher', '=', 'WeatherProvider', '.', 'class', '.', 'getDeclaredMethod', '(', '""buildUriMatcher""', ')', ';', 'testMatcher', '=', '(', 'UriMatcher', ')', 'buildUriMatcher', '.', 'invoke', '(', 'WeatherProvider', '.', 'class', ')', ';', 'REFLECTED_WEATHER_CODE', '=', 'getStaticIntegerField', '(', 'WeatherProvider', '.', 'class', ',', 'weatherCodeVariableName', ')', ';', 'REFLECTED_WEATHER_WITH_DATE_CODE', '=', 'getStaticIntegerField', '(', 'WeatherProvider', '.', 'class', ',', 'weatherCodeWithDateVariableName', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', 'e', ')', '{', 'fail', '(', 'studentReadableNoSuchField', '(', 'e', ')', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', 'fail', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', 'String', 'noBuildUriMatcherMethodFound', '=', '""It doesn\'t appear that you have created a method called buildUriMatcher in ""', '+', '""the WeatherProvider class.""', ';', 'fail', '(', 'noBuildUriMatcherMethodFound', ')', ';', '}', 'catch', '(', 'InvocationTargetException', 'e', ')', '{', 'fail', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['@', 'Before', 'void', 'before', '(', ')', '{', 'try', '{', 'Method', '=', '(', '""""', ')', ';', 'testMatcher', '=', '(', 'WeatherProvider', ')', 'CODE', '(', ')', ';', '}', 'catch', '(', 'NoSuchFieldException', 'e', ')', '{', '(', '(', 'e', ')', ')', ';', '}', 'catch', '(', 'IllegalAccessException', 'e', ')', '{', '(', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', 'noBuildUriMatcherMethodFound', '=', '""""', '+', '""""', ';', '(', 'noBuildUriMatcherMethodFound', ')', ';', '}', 'catch', '(', 'InvocationTargetException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",126,80,6,822,299,12,64.5679012345679,38.333333333333336,,,,-1,-1,-1,-1,False
L474_createRawValidator_11.txt,code2vec,METHOD_NAME,token_wrong,0.3136,0.1615,15.2664,14.1355,"{'n_total': 1669, 'n_valid': 396, 'n_correct': 196}",1101.175753,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"" + ""g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"" + ""l/StringPair;xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"" + ""p\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"" + ""waysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"" + ""\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnames"" + ""paceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000."" + ""Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"" + ""w.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd"" + "".WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"" + ""type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gr"" + ""ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psr\u0000"" + ""\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fn"" + ""amespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"" + ""p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011ps"" + ""r\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019"" + ""t\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"" + ""llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000)q\u0000~\u0000\u0019sr\u0000#com.sun.msv."" + ""grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamesp"" + ""aceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006"" + ""Formatt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"" + ""n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0010\u0001q\u0000~\u00003sq\u0000~\u0000\""ppsq\u0000~\u0000$q\u0000~\u0000\u0011pq\u0000~\u0000\u000fsq\u0000~\u0000"" + ""-t\u0000\rNameQualifierq\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000\""ppsq\u0000~\u0000$q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011ps"" + ""r\u0000\""com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t"" + ""\u0000\u0005QNameq\u0000~\u0000+q\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000>q\u0000~\u0000\u0019sq\u0000~\u0000-t\u0000\u0004typet\u0000)http://www."" + ""w3.org/2001/XMLSchema-instanceq\u0000~\u00003sq\u0000~\u0000-t\u0000\u0019IDPProvidedNameI"" + ""dentifiert\u0000\u0017urn:liberty:iff:2003-08sr\u0000\""com.sun.msv.grammar.E"" + ""xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"" + ""xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"" + ""nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"" + ""t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u000bq\u0000~\u00005q\u0000~"" + ""\u0000\nq\u0000~\u0000\tq\u0000~\u00009q\u0000~\u0000#x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","DocumentDeclaration createRawValidator(){if(schemaFragment){((""0""+""gra""+""""+""""+""""+""""+""rNameQualifierq""+""""+""""+""w""+""xpressionPool""+""nPool""+""t""+""""));}newsun.msvregexp.REDocumentDeclaration();}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""r\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxn""', '+', '""g/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/uti""', '+', '""l/StringPair;xq\x00~\x00\x04sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuex""', '+', '""p\x00psr\x00#com.sun.msv.datatype.xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAl""', '+', '""waysValidxr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00""', '+', '""\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr""', '+', '""\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnames""', '+', '""paceUrit\x00\x12Ljava/lang/String;L\x00\\btypeNameq\x00~\x00\x16L\x00\\nwhiteSpacet\x00.""', '+', '""Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://ww""', '+', '""w.w3.org/2001/XMLSchemat\x00\x06stringsr\x005com.sun.msv.datatype.xsd""', '+', '"".WhiteSpaceProcessor$Preserve\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.data""', '+', '""type.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xp\x01sr\x000com.sun.msv.gr""', '+', '""ammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x11psr\x00""', '+', '""\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x16L\x00\\fn""', '+', '""amespaceURIq\x00~\x00\x16xpq\x00~\x00\x1aq\x00~\x00\x19sr\x00\x1dcom.sun.msv.grammar.ChoiceEx""', '+', '""p\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00""', '+', '""\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x11psq\x00~\x00\\fq\x00~\x00\x11ps""', '+', '""r\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x13q\x00~\x00\x19""', '+', '""t\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co""', '+', '""llapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x1cq\x00~\x00\x1fsq\x00~\x00 q\x00~\x00)q\x00~\x00\x19sr\x00#com.sun.msv.""', '+', '""grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x16L\x00\\fnamesp""', '+', '""aceURIq\x00~\x00\x16xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x06""', '+', '""Formatt\x00\x00sr\x000com.sun.msv.grammar.Expression$EpsilonExpressio""', '+', '""n\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x10\x01q\x00~\x003sq\x00~\x00\\""ppsq\x00~\x00$q\x00~\x00\x11pq\x00~\x00\x0fsq\x00~\x00""', '+', '""-t\x00\\rNameQualifierq\x00~\x001q\x00~\x003sq\x00~\x00\\""ppsq\x00~\x00$q\x00~\x00\x11psq\x00~\x00\\fq\x00~\x00\x11ps""', '+', '""r\x00\\""com.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x13q\x00~\x00\x19t""', '+', '""\x00\x05QNameq\x00~\x00+q\x00~\x00\x1fsq\x00~\x00 q\x00~\x00>q\x00~\x00\x19sq\x00~\x00-t\x00\x04typet\x00)http://www.""', '+', '""w3.org/2001/XMLSchema-instanceq\x00~\x003sq\x00~\x00-t\x00\x19IDPProvidedNameI""', '+', '""dentifiert\x00\x17urn:liberty:iff:2003-08sr\x00\\""com.sun.msv.grammar.E""', '+', '""xpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/E""', '+', '""xpressionPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.Expressio""', '+', '""nPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parent""', '+', '""t\x00$Lcom/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x06\x01pq\x00~\x00\x0bq\x00~\x005q\x00~""', '+', '""\x00\\nq\x00~\x00\\tq\x00~\x009q\x00~\x00#x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""0""', '+', '""gra""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""rNameQualifierq""', '+', '""""', '+', '""""', '+', '""w""', '+', '""xpressionPool""', '+', '""nPool""', '+', '""t""', '+', '""""', ')', ')', ';', '}', 'newsun', '.', 'msvregexp', '.', 'REDocumentDeclaration', '(', ')', ';', '}']",143,52,6,5687,188,24,97.10400847607275,66.42335766423358,,,,-1,-1,-1,-1,False
L475_getPossibleParent_1.txt,code2vec,METHOD_NAME,token_wrong,0.3339,0.6703,17.7216,19.9534,"{'n_total': 852, 'n_valid': 126, 'n_correct': 80}",379.222448,"private Robot getPossibleParent(Population population, List<RobotInfo> list) { double totalWeight = sumTotalWeight(list); double target = Math.abs(totalWeight * mutator.getNextDouble()); double weightSoFar = 0; Iterator<RobotInfo> iterator = list.iterator(); while (iterator.hasNext()) { RobotInfo robotInfo = iterator.next(); weightSoFar += Math.abs(robotInfo.getWeight()); if (weightSoFar >= target) { iterator.remove(); return population.getRobot(robotInfo.getName()); } } return null; }","Robot getPossibleParent(Population population,List<RobotInfo>list){totalWeight();(totalWeight);Iterator<RobotInfo>iterator=iterator();while(iterator()){robotInfo();weightSoFarabs(getWeight());if(target){(getName());}}}","['private', 'Robot', 'getPossibleParent', '(', 'Population', 'population', ',', 'List', '<', 'RobotInfo', '>', 'list', ')', '{', 'double', 'totalWeight', '=', 'sumTotalWeight', '(', 'list', ')', ';', 'double', 'target', '=', 'Math', '.', 'abs', '(', 'totalWeight', '*', 'mutator', '.', 'getNextDouble', '(', ')', ')', ';', 'double', 'weightSoFar', '=', '0', ';', 'Iterator', '<', 'RobotInfo', '>', 'iterator', '=', 'list', '.', 'iterator', '(', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', '{', 'RobotInfo', 'robotInfo', '=', 'iterator', '.', 'next', '(', ')', ';', 'weightSoFar', '+=', 'Math', '.', 'abs', '(', 'robotInfo', '.', 'getWeight', '(', ')', ')', ';', 'if', '(', 'weightSoFar', '>=', 'target', ')', '{', 'iterator', '.', 'remove', '(', ')', ';', 'return', 'population', '.', 'getRobot', '(', 'robotInfo', '.', 'getName', '(', ')', ')', ';', '}', '}', 'return', 'null', ';', '}']","['Robot', 'getPossibleParent', '(', 'Population', 'population', ',', 'List', '<', 'RobotInfo', '>', 'list', ')', '{', 'totalWeight', '(', ')', ';', '(', 'totalWeight', ')', ';', 'Iterator', '<', 'RobotInfo', '>', 'iterator', '=', 'iterator', '(', ')', ';', 'while', '(', 'iterator', '(', ')', ')', '{', 'robotInfo', '(', ')', ';', 'weightSoFarabs', '(', 'getWeight', '(', ')', ')', ';', 'if', '(', 'target', ')', '{', '(', 'getName', '(', ')', ')', ';', '}', '}', '}']",117,63,6,490,218,23,58.2441113490364,48.64864864864865,,,,-1,-1,-1,-1,False
L476_put_2.txt,code2vec,METHOD_NAME,token_wrong,0.3235,0.2108,2.7754,6.4337,"{'n_total': 411, 'n_valid': 60, 'n_correct': 26}",173.665291,"public void put(Selector s) throws IOException { if (SHARED) return; if (enabled) active.decrementAndGet(); if (enabled && (maxSpareSelectors == -1 || spare.get() < Math.min(maxSpareSelectors, maxSelectors))) { spare.incrementAndGet(); selectors.offer(s); } else s.close(); }","void put()throws IOException{if(SHARED);if(enabled)active.decrementAndGet();if(enabled&&(min(maxSpareSelectors,maxSelectors))){spare.incrementAndGet();}else s.close();}","['public', 'void', 'put', '(', 'Selector', 's', ')', 'throws', 'IOException', '{', 'if', '(', 'SHARED', ')', 'return', ';', 'if', '(', 'enabled', ')', 'active', '.', 'decrementAndGet', '(', ')', ';', 'if', '(', 'enabled', '&&', '(', 'maxSpareSelectors', '==', '-', '1', '||', 'spare', '.', 'get', '(', ')', '<', 'Math', '.', 'min', '(', 'maxSpareSelectors', ',', 'maxSelectors', ')', ')', ')', '{', 'spare', '.', 'incrementAndGet', '(', ')', ';', 'selectors', '.', 'offer', '(', 's', ')', ';', '}', 'else', 's', '.', 'close', '(', ')', ';', '}']","['void', 'put', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'SHARED', ')', ';', 'if', '(', 'enabled', ')', 'active', '.', 'decrementAndGet', '(', ')', ';', 'if', '(', 'enabled', '&&', '(', 'min', '(', 'maxSpareSelectors', ',', 'maxSelectors', ')', ')', ')', '{', 'spare', '.', 'incrementAndGet', '(', ')', ';', '}', 'else', 's', '.', 'close', '(', ')', ';', '}']",75,51,6,275,168,9,40.225563909774436,34.78260869565217,,,,-1,-1,-1,-1,False
L477_taskVetoed_1.txt,code2vec,METHOD_NAME,token_wrong,0.1804,0.6476,15.6558,17.6127,"{'n_total': 522, 'n_valid': 46, 'n_correct': 39}",138.482413,public void taskVetoed(Set<Veto> vetoes) { VetoGroup vetoGroup = Veto.identifyGroup(vetoes); if (vetoGroup != VetoGroup.EMPTY) { counters.getUnchecked(VETO_GROUPS_TO_COUNTERS.get(vetoGroup)).increment(); } for (Veto veto : vetoes) { counters.getUnchecked(VETO_TYPE_TO_COUNTERS.get(veto.getVetoType())).increment(); } },void taskVetoed(Set<Veto>vetoes){(vetoes);if(vetoGroup){((vetoGroup));}for(Veto veto:vetoes){((getVetoType())).increment();}},"['public', 'void', 'taskVetoed', '(', 'Set', '<', 'Veto', '>', 'vetoes', ')', '{', 'VetoGroup', 'vetoGroup', '=', 'Veto', '.', 'identifyGroup', '(', 'vetoes', ')', ';', 'if', '(', 'vetoGroup', '!=', 'VetoGroup', '.', 'EMPTY', ')', '{', 'counters', '.', 'getUnchecked', '(', 'VETO_GROUPS_TO_COUNTERS', '.', 'get', '(', 'vetoGroup', ')', ')', '.', 'increment', '(', ')', ';', '}', 'for', '(', 'Veto', 'veto', ':', 'vetoes', ')', '{', 'counters', '.', 'getUnchecked', '(', 'VETO_TYPE_TO_COUNTERS', '.', 'get', '(', 'veto', '.', 'getVetoType', '(', ')', ')', ')', '.', 'increment', '(', ')', ';', '}', '}']","['void', 'taskVetoed', '(', 'Set', '<', 'Veto', '>', 'vetoes', ')', '{', '(', 'vetoes', ')', ';', 'if', '(', 'vetoGroup', ')', '{', '(', '(', 'vetoGroup', ')', ')', ';', '}', 'for', '(', 'Veto', 'veto', ':', 'vetoes', ')', '{', '(', '(', 'getVetoType', '(', ')', ')', ')', '.', 'increment', '(', ')', ';', '}', '}']",77,48,6,318,125,16,63.90728476821192,40.845070422535215,,,,-1,-1,-1,-1,False
L478_setConnectStrategy_1.txt,code2vec,METHOD_NAME,token_wrong,0.3892,0.2639,15.5263,16.0011,"{'n_total': 360, 'n_valid': 38, 'n_correct': 26}",113.579012,"protected void setConnectStrategy(Strategy connectStrategy, int preparedConnectionCount, int maxConnectionCount) { this.connectStrategy = ProxyConnectStrategy.newInstance(connectStrategy, preparedConnectionCount, maxConnectionCount); if (LOGGER.isDebugEnabled()) { LOGGER.debug(""Proxy handler "" + this + "": connect.strategy="" + connectStrategy + "".""); } }","void setConnectStrategy(Strategy connectStrategy,int preparedConnectionCount,int maxConnectionCount){this.connectStrategy=ProxyConnectStrategy.newInstance();if(isDebugEnabled()){("""");}}","['protected', 'void', 'setConnectStrategy', '(', 'Strategy', 'connectStrategy', ',', 'int', 'preparedConnectionCount', ',', 'int', 'maxConnectionCount', ')', '{', 'this', '.', 'connectStrategy', '=', 'ProxyConnectStrategy', '.', 'newInstance', '(', 'connectStrategy', ',', 'preparedConnectionCount', ',', 'maxConnectionCount', ')', ';', 'if', '(', 'LOGGER', '.', 'isDebugEnabled', '(', ')', ')', '{', 'LOGGER', '.', 'debug', '(', '""Proxy handler ""', '+', 'this', '+', '"": connect.strategy=""', '+', 'connectStrategy', '+', '"".""', ')', ';', '}', '}']","['void', 'setConnectStrategy', '(', 'Strategy', 'connectStrategy', ',', 'int', 'preparedConnectionCount', ',', 'int', 'maxConnectionCount', ')', '{', 'this', '.', 'connectStrategy', '=', 'ProxyConnectStrategy', '.', 'newInstance', '(', ')', ';', 'if', '(', 'isDebugEnabled', '(', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",55,36,6,355,185,24,51.3595166163142,38.775510204081634,,,,-1,-1,-1,-1,False
L479_performTest_1.txt,code2vec,METHOD_NAME,token_wrong,0.983,0.276,15.2932,13.6975,"{'n_total': 172, 'n_valid': 30, 'n_correct': 15}",88.658899,"public void performTest() throws Exception { PGPPublicKeyRing pubKeyRing = new PGPPublicKeyRing(testPubKey, new JcaKeyFingerprintCalculator()); doBasicKeyRingCheck(pubKeyRing); PGPSecretKeyRing secretKeyRing = new PGPSecretKeyRing(testPrivKey, new JcaKeyFingerprintCalculator()); testDecrypt(secretKeyRing); encryptDecryptTest(); encryptDecryptBCTest(); generate(); }",void performTest()throws Exception{PGPPublicKeyRing pubKeyRing=new PGPPublicKeyRing(testPubKey());},"['public', 'void', 'performTest', '(', ')', 'throws', 'Exception', '{', 'PGPPublicKeyRing', 'pubKeyRing', '=', 'new', 'PGPPublicKeyRing', '(', 'testPubKey', ',', 'new', 'JcaKeyFingerprintCalculator', '(', ')', ')', ';', 'doBasicKeyRingCheck', '(', 'pubKeyRing', ')', ';', 'PGPSecretKeyRing', 'secretKeyRing', '=', 'new', 'PGPSecretKeyRing', '(', 'testPrivKey', ',', 'new', 'JcaKeyFingerprintCalculator', '(', ')', ')', ';', 'testDecrypt', '(', 'secretKeyRing', ')', ';', 'encryptDecryptTest', '(', ')', ';', 'encryptDecryptBCTest', '(', ')', ';', 'generate', '(', ')', ';', '}']","['void', 'performTest', '(', ')', 'throws', 'Exception', '{', 'PGPPublicKeyRing', 'pubKeyRing', '=', 'new', 'PGPPublicKeyRing', '(', 'testPubKey', '(', ')', ')', ';', '}']",59,19,6,367,99,17,76.57142857142857,75.47169811320755,,,,-1,-1,-1,-1,False
L480_formatHighLows_4.txt,code2vec,METHOD_NAME,token_wrong,0.3794,0.207,16.4223,16.9737,"{'n_total': 350, 'n_valid': 57, 'n_correct': 28}",169.526943,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){long formattedHigh=formatTemperature();String highLowStr=""""+highLowStr;}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'formattedHigh', '=', 'formatTemperature', '(', ')', ';', 'String', 'highLowStr', '=', '""""', '+', 'highLowStr', ';', '}']",68,28,6,356,134,20,66.07142857142857,64.51612903225806,,,,-1,-1,-1,-1,False
L481_adjacentToBefore_1.txt,code2vec,METHOD_NAME,token_wrong,0.6173,0.5478,17.611,20.2877,"{'n_total': 340, 'n_valid': 25, 'n_correct': 25}",73.270185,public static Predicate<Constituent> adjacentToBefore(final Constituent c) { return new Predicate<Constituent>() { @Override public Boolean transform(Constituent arg0) { return c.getStartSpan() == arg0.getEndSpan(); } }; },Predicate<Constituent>adjacentToBefore(Constituent c){new Predicate<>(){transform(Constituent arg){}};},"['public', 'static', 'Predicate', '<', 'Constituent', '>', 'adjacentToBefore', '(', 'final', 'Constituent', 'c', ')', '{', 'return', 'new', 'Predicate', '<', 'Constituent', '>', '(', ')', '{', '@', 'Override', 'public', 'Boolean', 'transform', '(', 'Constituent', 'arg0', ')', '{', 'return', 'c', '.', 'getStartSpan', '(', ')', '==', 'arg0', '.', 'getEndSpan', '(', ')', ';', '}', '}', ';', '}']","['Predicate', '<', 'Constituent', '>', 'adjacentToBefore', '(', 'Constituent', 'c', ')', '{', 'new', 'Predicate', '<', '>', '(', ')', '{', 'transform', '(', 'Constituent', 'arg', ')', '{', '}', '}', ';', '}']",49,27,6,222,103,22,59.5,51.162790697674424,,,,-1,-1,-1,-1,False
L482_argumentValue_1.txt,code2vec,METHOD_NAME,token_wrong,0.3531,0.4443,18.6482,19.2762,"{'n_total': 240, 'n_valid': 27, 'n_correct': 21}",79.06437,"private void argumentValue(IDroidefenseFrame frame, int argPos, Object clo) { if (frame.getObjectArguments()[0] == null) { frame.setArgument(0, clo); } else { frame.setArgument(argPos, clo); } }","void argumentValue(IDroidefenseFrame argPos,Object clo){if(null){frame.setArgument();(argPos);}}","['private', 'void', 'argumentValue', '(', 'IDroidefenseFrame', 'frame', ',', 'int', 'argPos', ',', 'Object', 'clo', ')', '{', 'if', '(', 'frame', '.', 'getObjectArguments', '(', ')', '[', '0', ']', '==', 'null', ')', '{', 'frame', '.', 'setArgument', '(', '0', ',', 'clo', ')', ';', '}', 'else', '{', 'frame', '.', 'setArgument', '(', 'argPos', ',', 'clo', ')', ';', '}', '}']","['void', 'argumentValue', '(', 'IDroidefenseFrame', 'argPos', ',', 'Object', 'clo', ')', '{', 'if', '(', 'null', ')', '{', 'frame', '.', 'setArgument', '(', ')', ';', '(', 'argPos', ')', ';', '}', '}']",51,27,6,194,96,19,56.00000000000001,53.333333333333336,,,,-1,-1,-1,-1,False
L483_generateStashKey_1.txt,code2vec,METHOD_NAME,token_wrong,0.3772,0.3113,20.148,22.213,"{'n_total': 308, 'n_valid': 50, 'n_correct': 29}",147.452877,"public String generateStashKey() { if (isStashed() && this.sessionId != null && this.attributeKey != null) { return this.sessionId + ""_"" + this.attributeKey; } throw new IllegalStateException(""no stash data in this storeable""); }","String generateStashKey(){if(isStashed&&this!=null&&this){return+this.attributeKey;}("""");}","['public', 'String', 'generateStashKey', '(', ')', '{', 'if', '(', 'isStashed', '(', ')', '&&', 'this', '.', 'sessionId', '!=', 'null', '&&', 'this', '.', 'attributeKey', '!=', 'null', ')', '{', 'return', 'this', '.', 'sessionId', '+', '""_""', '+', 'this', '.', 'attributeKey', ';', '}', 'throw', 'new', 'IllegalStateException', '(', '""no stash data in this storeable""', ')', ';', '}']","['String', 'generateStashKey', '(', ')', '{', 'if', '(', 'isStashed', '&&', 'this', '!=', 'null', '&&', 'this', ')', '{', 'return', '+', 'this', '.', 'attributeKey', ';', '}', '(', '""""', ')', ';', '}']",45,28,6,229,90,22,67.14975845410628,43.58974358974359,,,,-1,-1,-1,-1,False
L484_parse_2.txt,code2vec,METHOD_NAME,token_wrong,0.3748,0.3785,8.4017,9.3751,"{'n_total': 192, 'n_valid': 32, 'n_correct': 15}",92.168925,public static String parse(String str) { if (str == null || str.isEmpty()) return null; return str; },String parse(String str){if(str==null||str.isEmpty);return str;},"['public', 'static', 'String', 'parse', '(', 'String', 'str', ')', '{', 'if', '(', 'str', '==', 'null', '||', 'str', '.', 'isEmpty', '(', ')', ')', 'return', 'null', ';', 'return', 'str', ';', '}']","['String', 'parse', '(', 'String', 'str', ')', '{', 'if', '(', 'str', '==', 'null', '||', 'str', '.', 'isEmpty', ')', ';', 'return', 'str', ';', '}']",28,22,6,101,64,11,41.11111111111111,27.27272727272727,,,,-1,-1,-1,-1,False
L485_trimSurroundingQuotes_1.txt,code2vec,METHOD_NAME,token_wrong,0.2794,0.3884,19.6236,18.2927,"{'n_total': 381, 'n_valid': 38, 'n_correct': 30}",117.733268,"static String trimSurroundingQuotes(String str) { if (str != null && str.length() > 1 && (str.charAt(0) == '""') && (str.charAt(str.length() - 1) == '""')) { str = str.substring(1, str.length() - 1); } return str; }","String trimSurroundingQuotes(String str){if((charAt()=='""')){str.substring(1,length()-1);}}","['static', 'String', 'trimSurroundingQuotes', '(', 'String', 'str', ')', '{', 'if', '(', 'str', '!=', 'null', '&&', 'str', '.', 'length', '(', ')', '>', '1', '&&', '(', 'str', '.', 'charAt', '(', '0', ')', '==', '\'""\'', ')', '&&', '(', 'str', '.', 'charAt', '(', 'str', '.', 'length', '(', ')', '-', '1', ')', '==', '\'""\'', ')', ')', '{', 'str', '=', 'str', '.', 'substring', '(', '1', ',', 'str', '.', 'length', '(', ')', '-', '1', ')', ';', '}', 'return', 'str', ';', '}']","['String', 'trimSurroundingQuotes', '(', 'String', 'str', ')', '{', 'if', '(', '(', 'charAt', '(', ')', '==', '\'""\'', ')', ')', '{', 'str', '.', 'substring', '(', '1', ',', 'length', '(', ')', '-', '1', ')', ';', '}', '}']",73,33,6,213,91,27,65.59139784946237,59.70149253731343,,,,-1,-1,-1,-1,False
L486_testUrl_1.txt,code2vec,METHOD_NAME,token_wrong,0.621,0.8807,14.0767,18.3275,"{'n_total': 277, 'n_valid': 34, 'n_correct': 28}",101.478966,"@Test public void testUrl() { TurkishTokenizer t = TurkishTokenizer.DEFAULT; String[] urls = { ""http://www.fo.bar"", ""https://www.fo.baz.zip"", ""www.fo.tar.kar"", ""www.fo.bar"", ""http://www.foo.net/showthread.php?134628-ucreti"", ""http://www.foo.net/showthread.php?1-34--628-ucreti+"" }; for (String s : urls) { matchToken(t, s, TurkishLexer.URL, s); } }","void testUrl(){TurkishTokenizer[]urls={""""};for(String s:urls){matchToken(TurkishLexer);}}","['@', 'Test', 'public', 'void', 'testUrl', '(', ')', '{', 'TurkishTokenizer', 't', '=', 'TurkishTokenizer', '.', 'DEFAULT', ';', 'String', '[', ']', 'urls', '=', '{', '""http://www.fo.bar""', ',', '""https://www.fo.baz.zip""', ',', '""www.fo.tar.kar""', ',', '""www.fo.bar""', ',', '""http://www.foo.net/showthread.php?134628-ucreti""', ',', '""http://www.foo.net/showthread.php?1-34--628-ucreti+""', '}', ';', 'for', '(', 'String', 's', ':', 'urls', ')', '{', 'matchToken', '(', 't', ',', 's', ',', 'TurkishLexer', '.', 'URL', ',', 's', ')', ';', '}', '}']","['void', 'testUrl', '(', ')', '{', 'TurkishTokenizer', '[', ']', 'urls', '=', '{', '""""', '}', ';', 'for', '(', 'String', 's', ':', 'urls', ')', '{', 'matchToken', '(', 'TurkishLexer', ')', ';', '}', '}']",57,29,6,348,89,13,77.31343283582089,54.90196078431373,,,,-1,-1,-1,-1,False
L487_collectFakeMethods_1.txt,code2vec,METHOD_NAME,token_wrong,0.9368,0.2443,16.8874,14.2643,"{'n_total': 317, 'n_valid': 53, 'n_correct': 29}",151.781421,"void collectFakeMethods(@Nonnull Class<?> fakeClass) { ClassLoad.registerLoadedClass(fakeClass); fakeMethods.setFakeClassInternalName(JavaType.getInternalName(fakeClass)); Class<?> classToCollectFakesFrom = fakeClass; do { byte[] classfileBytes = ClassFile.readBytesFromClassFile(classToCollectFakesFrom); ClassMetadataReader cmr = new ClassMetadataReader(classfileBytes, ANNOTATIONS); List<MethodInfo> methods = cmr.getMethods(); addFakeMethods(methods); classToCollectFakesFrom = classToCollectFakesFrom.getSuperclass(); collectingFromSuperClass = true; } while (classToCollectFakesFrom != MockUp.class); }",void collectFakeMethods(@Nonnull Class<?>fakeClass){fakeClass;do{classToCollectFakesFrom=true;}while(classToCollectFakesFrom);},"['void', 'collectFakeMethods', '(', '@', 'Nonnull', 'Class', '<', '?', '>', 'fakeClass', ')', '{', 'ClassLoad', '.', 'registerLoadedClass', '(', 'fakeClass', ')', ';', 'fakeMethods', '.', 'setFakeClassInternalName', '(', 'JavaType', '.', 'getInternalName', '(', 'fakeClass', ')', ')', ';', 'Class', '<', '?', '>', 'classToCollectFakesFrom', '=', 'fakeClass', ';', 'do', '{', 'byte', '[', ']', 'classfileBytes', '=', 'ClassFile', '.', 'readBytesFromClassFile', '(', 'classToCollectFakesFrom', ')', ';', 'ClassMetadataReader', 'cmr', '=', 'new', 'ClassMetadataReader', '(', 'classfileBytes', ',', 'ANNOTATIONS', ')', ';', 'List', '<', 'MethodInfo', '>', 'methods', '=', 'cmr', '.', 'getMethods', '(', ')', ';', 'addFakeMethods', '(', 'methods', ')', ';', 'classToCollectFakesFrom', '=', 'classToCollectFakesFrom', '.', 'getSuperclass', '(', ')', ';', 'collectingFromSuperClass', '=', 'true', ';', '}', 'while', '(', 'classToCollectFakesFrom', '!=', 'MockUp', '.', 'class', ')', ';', '}']","['void', 'collectFakeMethods', '(', '@', 'Nonnull', 'Class', '<', '?', '>', 'fakeClass', ')', '{', 'fakeClass', ';', 'do', '{', 'classToCollectFakesFrom', '=', 'true', ';', '}', 'while', '(', 'classToCollectFakesFrom', ')', ';', '}']",104,27,6,608,127,24,82.36301369863014,78.57142857142857,,,,-1,-1,-1,-1,False
L488_requireArg_1.txt,code2vec,METHOD_NAME,token_wrong,0.3627,0.26,16.0778,16.9928,"{'n_total': 302, 'n_valid': 36, 'n_correct': 18}",104.285434,"private static void requireArg(Object arg, String name) { if (arg == null) { throw new IllegalArgumentException(String.format(""A value for the -%s flag must be supplied"", name)); } }","void requireArg(Object arg,String name){if(arg=null){throw new IllegalArgumentException(String.format("""",name));}}","['private', 'static', 'void', 'requireArg', '(', 'Object', 'arg', ',', 'String', 'name', ')', '{', 'if', '(', 'arg', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""A value for the -%s flag must be supplied""', ',', 'name', ')', ')', ';', '}', '}']","['void', 'requireArg', '(', 'Object', 'arg', ',', 'String', 'name', ')', '{', 'if', '(', 'arg', '=', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'String', '.', 'format', '(', '""""', ',', 'name', ')', ')', ';', '}', '}']",35,33,6,182,114,16,40.963855421686745,6.896551724137931,,,,-1,-1,-1,-1,False
L489_openSession_1.txt,code2vec,METHOD_NAME,token_wrong,0.5818,0.9084,14.7849,13.775,"{'n_total': 310, 'n_valid': 38, 'n_correct': 29}",112.667627,"private void openSession() throws MessagingException { store = session.getStore(storeUri); if (logger.isDebugEnabled()) { logger.debug(""Connecting to store ["" + MailTransportUtils.toPasswordProtectedString(storeUri) + ""]""); } store.connect(); }","void openSession()throws MessagingException{if(logger.isDebugEnabled){("""".toPasswordProtectedString()+"""");}}","['private', 'void', 'openSession', '(', ')', 'throws', 'MessagingException', '{', 'store', '=', 'session', '.', 'getStore', '(', 'storeUri', ')', ';', 'if', '(', 'logger', '.', 'isDebugEnabled', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '""Connecting to store [""', '+', 'MailTransportUtils', '.', 'toPasswordProtectedString', '(', 'storeUri', ')', '+', '""]""', ')', ';', '}', 'store', '.', 'connect', '(', ')', ';', '}']","['void', 'openSession', '(', ')', 'throws', 'MessagingException', '{', 'if', '(', 'logger', '.', 'isDebugEnabled', ')', '{', '(', '""""', '.', 'toPasswordProtectedString', '(', ')', '+', '""""', ')', ';', '}', '}']",50,26,6,244,108,17,59.91189427312775,54.54545454545454,,,,-1,-1,-1,-1,False
L490_accept_1.txt,code2vec,METHOD_NAME,token_wrong,0.8203,0.8956,8.3109,8.5722,"{'n_total': 359, 'n_valid': 33, 'n_correct': 31}",100.424985,"@Override public boolean accept(UriBasedServiceData serviceData) { String uriString = serviceData.getUri(); for (String uriScheme : uriSchemes) { if (uriString.startsWith(uriScheme + ""://"")) { return true; } } return false; }","boolean accept(UriBasedServiceData serviceData){uriString();for(String uriScheme:uriSchemes){if(("""")){}}}","['@', 'Override', 'public', 'boolean', 'accept', '(', 'UriBasedServiceData', 'serviceData', ')', '{', 'String', 'uriString', '=', 'serviceData', '.', 'getUri', '(', ')', ';', 'for', '(', 'String', 'uriScheme', ':', 'uriSchemes', ')', '{', 'if', '(', 'uriString', '.', 'startsWith', '(', 'uriScheme', '+', '""://""', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'accept', '(', 'UriBasedServiceData', 'serviceData', ')', '{', 'uriString', '(', ')', ';', 'for', '(', 'String', 'uriScheme', ':', 'uriSchemes', ')', '{', 'if', '(', '(', '""""', ')', ')', '{', '}', '}', '}']",48,29,6,225,105,12,56.33802816901409,45.23809523809524,,,,-1,-1,-1,-1,False
L491_init_8.txt,code2vec,METHOD_NAME,token_wrong,0.4452,0.3213,1.8393,3.1139,"{'n_total': 231, 'n_valid': 24, 'n_correct': 16}",73.949483,"private void init(SharedFile sf, int size) throws IOException { this.sf = sf; this.in = sf.open(); this.start = 0; this.datalen = in.length(); this.bufsize = size; buf = new byte[size]; }","void init(SharedFile sf,int size)throws IOException{open().bufsize=new byte[size];}","['private', 'void', 'init', '(', 'SharedFile', 'sf', ',', 'int', 'size', ')', 'throws', 'IOException', '{', 'this', '.', 'sf', '=', 'sf', ';', 'this', '.', 'in', '=', 'sf', '.', 'open', '(', ')', ';', 'this', '.', 'start', '=', '0', ';', 'this', '.', 'datalen', '=', 'in', '.', 'length', '(', ')', ';', 'this', '.', 'bufsize', '=', 'size', ';', 'buf', '=', 'new', 'byte', '[', 'size', ']', ';', '}']","['void', 'init', '(', 'SharedFile', 'sf', ',', 'int', 'size', ')', 'throws', 'IOException', '{', 'open', '(', ')', '.', 'bufsize', '=', 'new', 'byte', '[', 'size', ']', ';', '}']",60,25,6,187,83,10,58.75706214689266,64.81481481481481,,,,-1,-1,-1,-1,False
L492_testSaxSource_1.txt,code2vec,METHOD_NAME,token_wrong,0.37,0.3161,18.079,19.8329,"{'n_total': 189, 'n_valid': 27, 'n_correct': 15}",76.893302,"@Test public void testSaxSource() throws Exception { XMLReader reader = XMLReaderFactory.createXMLReader(); InputSource inputSource = new InputSource(new StringReader(REQUEST)); testSource(new SAXSource(reader, inputSource)); }","@Test void testSaxSource()throws Exception{inputSource=InputSource(StringReader());testSource(SAXSource(reader,inputSource));}","['@', 'Test', 'public', 'void', 'testSaxSource', '(', ')', 'throws', 'Exception', '{', 'XMLReader', 'reader', '=', 'XMLReaderFactory', '.', 'createXMLReader', '(', ')', ';', 'InputSource', 'inputSource', '=', 'new', 'InputSource', '(', 'new', 'StringReader', '(', 'REQUEST', ')', ')', ';', 'testSource', '(', 'new', 'SAXSource', '(', 'reader', ',', 'inputSource', ')', ')', ';', '}']","['@', 'Test', 'void', 'testSaxSource', '(', ')', 'throws', 'Exception', '{', 'inputSource', '=', 'InputSource', '(', 'StringReader', '(', ')', ')', ';', 'testSource', '(', 'SAXSource', '(', 'reader', ',', 'inputSource', ')', ')', ';', '}']",44,29,6,227,126,19,48.55769230769231,39.473684210526315,,,,-1,-1,-1,-1,False
L493_setUp_3.txt,code2vec,METHOD_NAME,token_wrong,0.2914,0.6543,9.8839,11.7876,"{'n_total': 1155, 'n_valid': 203, 'n_correct': 68}",584.681288,"@Override @Before public void setUp() throws Exception { scheduler = Executors.newScheduledThreadPool(1); filter = new RequestResponseFilter(new MessageInspector(), scheduler); session = new DummySession(); chain = session.getFilterChain(); nextFilterControl = MockControl.createControl(NextFilter.class); nextFilter = (NextFilter) nextFilterControl.getMock(); filter.onPreAdd(chain, ""reqres"", nextFilter); filter.onPostAdd(chain, ""reqres"", nextFilter); Assert.assertFalse(session.getAttributeKeys().isEmpty()); }","@Override void setUp()throws Exception{Executors();filter(MessageInspector(),scheduler);session();chain();nextFilterControl();nextFilter=(NextFilter)getMock();filter(chain,"""",nextFilter);filter.onPostAdd(chain,""reqres"",nextFilter);Assert(session.getAttributeKeys);}","['@', 'Override', '@', 'Before', 'public', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'scheduler', '=', 'Executors', '.', 'newScheduledThreadPool', '(', '1', ')', ';', 'filter', '=', 'new', 'RequestResponseFilter', '(', 'new', 'MessageInspector', '(', ')', ',', 'scheduler', ')', ';', 'session', '=', 'new', 'DummySession', '(', ')', ';', 'chain', '=', 'session', '.', 'getFilterChain', '(', ')', ';', 'nextFilterControl', '=', 'MockControl', '.', 'createControl', '(', 'NextFilter', '.', 'class', ')', ';', 'nextFilter', '=', '(', 'NextFilter', ')', 'nextFilterControl', '.', 'getMock', '(', ')', ';', 'filter', '.', 'onPreAdd', '(', 'chain', ',', '""reqres""', ',', 'nextFilter', ')', ';', 'filter', '.', 'onPostAdd', '(', 'chain', ',', '""reqres""', ',', 'nextFilter', ')', ';', 'Assert', '.', 'assertFalse', '(', 'session', '.', 'getAttributeKeys', '(', ')', '.', 'isEmpty', '(', ')', ')', ';', '}']","['@', 'Override', 'void', 'setUp', '(', ')', 'throws', 'Exception', '{', 'Executors', '(', ')', ';', 'filter', '(', 'MessageInspector', '(', ')', ',', 'scheduler', ')', ';', 'session', '(', ')', ';', 'chain', '(', ')', ';', 'nextFilterControl', '(', ')', ';', 'nextFilter', '=', '(', 'NextFilter', ')', 'getMock', '(', ')', ';', 'filter', '(', 'chain', ',', '""""', ',', 'nextFilter', ')', ';', 'filter', '.', 'onPostAdd', '(', 'chain', ',', '""reqres""', ',', 'nextFilter', ')', ';', 'Assert', '(', 'session', '.', 'getAttributeKeys', ')', ';', '}']",109,71,6,513,265,11,49.40239043824701,36.89320388349515,,,,-1,-1,-1,-1,False
L494_cancelDeletedResource_1.txt,code2vec,METHOD_NAME,token_wrong,0.9073,0.706,20.5105,17.451,"{'n_total': 278, 'n_valid': 31, 'n_correct': 28}",90.943728,public void cancelDeletedResource(ContentResourceEdit edit) { boolean goin = in(); try { if (resolver != null && goin) { return; } else { ((BaseResourceEdit) edit).m_body = null; m_resourceDeleteStore.cancelResource(edit); } } finally { out(); } },void cancelDeletedResource(){try{if(resolver&goin){(edit);}}finally{out();}},"['public', 'void', 'cancelDeletedResource', '(', 'ContentResourceEdit', 'edit', ')', '{', 'boolean', 'goin', '=', 'in', '(', ')', ';', 'try', '{', 'if', '(', 'resolver', '!=', 'null', '&&', 'goin', ')', '{', 'return', ';', '}', 'else', '{', '(', '(', 'BaseResourceEdit', ')', 'edit', ')', '.', 'm_body', '=', 'null', ';', 'm_resourceDeleteStore', '.', 'cancelResource', '(', 'edit', ')', ';', '}', '}', 'finally', '{', 'out', '(', ')', ';', '}', '}']","['void', 'cancelDeletedResource', '(', ')', '{', 'try', '{', 'if', '(', 'resolver', '&', 'goin', ')', '{', '(', 'edit', ')', ';', '}', '}', 'finally', '{', 'out', '(', ')', ';', '}', '}']",59,28,6,247,76,27,77.72727272727272,58.490566037735846,,,,-1,-1,-1,-1,False
L495_saveReport_1.txt,code2vec,METHOD_NAME,token_wrong,0.7099,0.6214,11.5123,14.5185,"{'n_total': 278, 'n_valid': 39, 'n_correct': 31}",111.376487,"public boolean saveReport() { getContext().getResponse().setContentType(""application/force-download; charset=\""UTF-8\""""); getContext().getResponse().setHeader(""Content-Disposition"", ""attachment; filename=\""upgradereport."" + System.currentTimeMillis() + ""\""""); getContext().getResponse().setHeader(""Content-Description"", ""File Transfer""); writeToResponse(upgrade.generateDetailedUpgradeReport(adminToken, false)); setPath(null); return false; }","boolean saveReport(){(""""+"""");writeToResponse(upgrade(false));(null);}","['public', 'boolean', 'saveReport', '(', ')', '{', 'getContext', '(', ')', '.', 'getResponse', '(', ')', '.', 'setContentType', '(', '""application/force-download; charset=\\""UTF-8\\""""', ')', ';', 'getContext', '(', ')', '.', 'getResponse', '(', ')', '.', 'setHeader', '(', '""Content-Disposition""', ',', '""attachment; filename=\\""upgradereport.""', '+', 'System', '.', 'currentTimeMillis', '(', ')', '+', '""\\""""', ')', ';', 'getContext', '(', ')', '.', 'getResponse', '(', ')', '.', 'setHeader', '(', '""Content-Description""', ',', '""File Transfer""', ')', ';', 'writeToResponse', '(', 'upgrade', '.', 'generateDetailedUpgradeReport', '(', 'adminToken', ',', 'false', ')', ')', ';', 'setPath', '(', 'null', ')', ';', 'return', 'false', ';', '}']","['boolean', 'saveReport', '(', ')', '{', '(', '""""', '+', '""""', ')', ';', 'writeToResponse', '(', 'upgrade', '(', 'false', ')', ')', ';', '(', 'null', ')', ';', '}']",78,24,6,443,69,16,87.58782201405153,75.0,,,,-1,-1,-1,-1,False
L496_testSkip_1.txt,code2vec,METHOD_NAME,token_wrong,0.8711,0.9891,5.936,13.5779,"{'n_total': 660, 'n_valid': 78, 'n_correct': 64}",230.909176,"@Test public void testSkip() { try (VirtualMemory mem = new VirtualMemory(11)) { mem.putByte((byte) 1); int n = 999; for (int i = n; i > 0; i--) { mem.putLong(i); mem.skip(3); } long o = 1; assertEquals(1, mem.getByte(0)); for (int i = n; i > 0; i--) { assertEquals(i, mem.getLong(o)); o += 11; } assertEquals(10990, mem.getAppendOffset()); } }","@Test void testSkip(){try(VirtualMemory mem=(1)){for(int i;;){}assertEquals();for(;;){((o));}assertEquals(0,mem);}}","['@', 'Test', 'public', 'void', 'testSkip', '(', ')', '{', 'try', '(', 'VirtualMemory', 'mem', '=', 'new', 'VirtualMemory', '(', '11', ')', ')', '{', 'mem', '.', 'putByte', '(', '(', 'byte', ')', '1', ')', ';', 'int', 'n', '=', '999', ';', 'for', '(', 'int', 'i', '=', 'n', ';', 'i', '>', '0', ';', 'i', '--', ')', '{', 'mem', '.', 'putLong', '(', 'i', ')', ';', 'mem', '.', 'skip', '(', '3', ')', ';', '}', 'long', 'o', '=', '1', ';', 'assertEquals', '(', '1', ',', 'mem', '.', 'getByte', '(', '0', ')', ')', ';', 'for', '(', 'int', 'i', '=', 'n', ';', 'i', '>', '0', ';', 'i', '--', ')', '{', 'assertEquals', '(', 'i', ',', 'mem', '.', 'getLong', '(', 'o', ')', ')', ';', 'o', '+=', '11', ';', '}', 'assertEquals', '(', '10990', ',', 'mem', '.', 'getAppendOffset', '(', ')', ')', ';', '}', '}']","['@', 'Test', 'void', 'testSkip', '(', ')', '{', 'try', '(', 'VirtualMemory', 'mem', '=', '(', '1', ')', ')', '{', 'for', '(', 'int', 'i', ';', ';', ')', '{', '}', 'assertEquals', '(', ')', ';', 'for', '(', ';', ';', ')', '{', '(', '(', 'o', ')', ')', ';', '}', 'assertEquals', '(', '0', ',', 'mem', ')', ';', '}', '}']",127,52,6,344,115,14,69.39393939393939,61.98347107438017,,,,-1,-1,-1,-1,False
L497_doBuild_1.txt,code2vec,METHOD_NAME,token_wrong,0.3398,0.5841,11.4775,16.1475,"{'n_total': 560, 'n_valid': 46, 'n_correct': 42}",135.223213,"@Override public boolean doBuild(TopologyBuilder bldr, Set<String> stageNames) { setDefaultNameIfNone(StreamletNamePrefix.REDUCE, stageNames); GeneralReduceByKeyAndWindowOperator<K, V, VR> bolt = new GeneralReduceByKeyAndWindowOperator<K, V, VR>(keyExtractor, identity, reduceFn); windowCfg.attachWindowConfig(bolt); bldr.setBolt(getName(), bolt, getNumPartitions()).customGrouping(parent.getName(), new ReduceByKeyAndWindowCustomGrouping<K, V>(keyExtractor)); return true; }","boolean doBuild(TopologyBuilder bldr,Set<String>stageNames){setDefaultNameIfNone();GeneralReduceByKeyAndWindowOperator<V>bolt=new GeneralReduceByKeyAndWindowOperator<>();(getName).customGrouping(getName(),(keyExtractor));}","['@', 'Override', 'public', 'boolean', 'doBuild', '(', 'TopologyBuilder', 'bldr', ',', 'Set', '<', 'String', '>', 'stageNames', ')', '{', 'setDefaultNameIfNone', '(', 'StreamletNamePrefix', '.', 'REDUCE', ',', 'stageNames', ')', ';', 'GeneralReduceByKeyAndWindowOperator', '<', 'K', ',', 'V', ',', 'VR', '>', 'bolt', '=', 'new', 'GeneralReduceByKeyAndWindowOperator', '<', 'K', ',', 'V', ',', 'VR', '>', '(', 'keyExtractor', ',', 'identity', ',', 'reduceFn', ')', ';', 'windowCfg', '.', 'attachWindowConfig', '(', 'bolt', ')', ';', 'bldr', '.', 'setBolt', '(', 'getName', '(', ')', ',', 'bolt', ',', 'getNumPartitions', '(', ')', ')', '.', 'customGrouping', '(', 'parent', '.', 'getName', '(', ')', ',', 'new', 'ReduceByKeyAndWindowCustomGrouping', '<', 'K', ',', 'V', '>', '(', 'keyExtractor', ')', ')', ';', 'return', 'true', ';', '}']","['boolean', 'doBuild', '(', 'TopologyBuilder', 'bldr', ',', 'Set', '<', 'String', '>', 'stageNames', ')', '{', 'setDefaultNameIfNone', '(', ')', ';', 'GeneralReduceByKeyAndWindowOperator', '<', 'V', '>', 'bolt', '=', 'new', 'GeneralReduceByKeyAndWindowOperator', '<', '>', '(', ')', ';', '(', 'getName', ')', '.', 'customGrouping', '(', 'getName', '(', ')', ',', '(', 'keyExtractor', ')', ')', ';', '}']",98,46,6,475,222,13,54.761904761904766,56.52173913043478,,,,-1,-1,-1,-1,False
L498_render_1.txt,code2vec,METHOD_NAME,token_wrong,0.9998,0.9766,33.4163,12.944,"{'n_total': 157, 'n_valid': 15, 'n_correct': 15}",44.737817,void render(final MagicScene scene) { if (mScene != null) { mScene.release(); } mScene = scene; },void render(MagicScene scene){if(null){}},"['void', 'render', '(', 'final', 'MagicScene', 'scene', ')', '{', 'if', '(', 'mScene', '!=', 'null', ')', '{', 'mScene', '.', 'release', '(', ')', ';', '}', 'mScene', '=', 'scene', ';', '}']","['void', 'render', '(', 'MagicScene', 'scene', ')', '{', 'if', '(', 'null', ')', '{', '}', '}']",27,14,6,97,41,12,65.88235294117646,61.904761904761905,,,,-1,-1,-1,-1,False
L499_getInstanceIfCached_1.txt,code2vec,METHOD_NAME,token_wrong,0.2085,0.1424,16.0459,16.1486,"{'n_total': 928, 'n_valid': 121, 'n_correct': 64}",357.681191,"public static CachedSubEntries getInstanceIfCached(SSOToken token, String dn, boolean cached) throws SMSException { if (debug.messageEnabled()) { debug.message(""CachedSubEntries::getInstance DN: "" + dn); } String entry = DNUtils.normalizeDN(dn); CachedSubEntries answer = (CachedSubEntries) smsEntries.get(entry); if ((answer != null) || cached) { return (answer); } synchronized (smsEntries) { answer = (CachedSubEntries) smsEntries.get(entry); if (answer == null) { answer = new CachedSubEntries(token, dn); smsEntries.put(entry, answer); } } return (answer); }","CachedSubEntries getInstanceIfCached(SSOToken token,boolean cached)throws SMSException{if(messageEnabled()){debug.message(""""+dn);}String entry=(entry);if((null)||cached){return(answer);}synchronized(smsEntries){answer();if(answer=null){answer=CachedSubEntries(dn);smsEntries.put(entry,answer);}}(answer);}","['public', 'static', 'CachedSubEntries', 'getInstanceIfCached', '(', 'SSOToken', 'token', ',', 'String', 'dn', ',', 'boolean', 'cached', ')', 'throws', 'SMSException', '{', 'if', '(', 'debug', '.', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""CachedSubEntries::getInstance DN: ""', '+', 'dn', ')', ';', '}', 'String', 'entry', '=', 'DNUtils', '.', 'normalizeDN', '(', 'dn', ')', ';', 'CachedSubEntries', 'answer', '=', '(', 'CachedSubEntries', ')', 'smsEntries', '.', 'get', '(', 'entry', ')', ';', 'if', '(', '(', 'answer', '!=', 'null', ')', '||', 'cached', ')', '{', 'return', '(', 'answer', ')', ';', '}', 'synchronized', '(', 'smsEntries', ')', '{', 'answer', '=', '(', 'CachedSubEntries', ')', 'smsEntries', '.', 'get', '(', 'entry', ')', ';', 'if', '(', 'answer', '==', 'null', ')', '{', 'answer', '=', 'new', 'CachedSubEntries', '(', 'token', ',', 'dn', ')', ';', 'smsEntries', '.', 'put', '(', 'entry', ',', 'answer', ')', ';', '}', '}', 'return', '(', 'answer', ')', ';', '}']","['CachedSubEntries', 'getInstanceIfCached', '(', 'SSOToken', 'token', ',', 'boolean', 'cached', ')', 'throws', 'SMSException', '{', 'if', '(', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""""', '+', 'dn', ')', ';', '}', 'String', 'entry', '=', '(', 'entry', ')', ';', 'if', '(', '(', 'null', ')', '||', 'cached', ')', '{', 'return', '(', 'answer', ')', ';', '}', 'synchronized', '(', 'smsEntries', ')', '{', 'answer', '(', ')', ';', 'if', '(', 'answer', '=', 'null', ')', '{', 'answer', '=', 'CachedSubEntries', '(', 'dn', ')', ';', 'smsEntries', '.', 'put', '(', 'entry', ',', 'answer', ')', ';', '}', '}', '(', 'answer', ')', ';', '}']",127,90,6,563,305,25,47.95539033457249,30.57851239669421,,,,-1,-1,-1,-1,False
L500_disablePlayerBar_2.txt,code2vec,METHOD_NAME,token_wrong,0.8762,0.6519,16.2415,17.4648,"{'n_total': 275, 'n_valid': 29, 'n_correct': 24}",86.68862,private void disablePlayerBar() { playPauseButton.setPlaying(false); playerThumbnailIV.setImageResource(R.drawable.ic_launcher_square); playerProgramNameTV.setText(R.string.app_name); if (slidingUpPanelLayout.collapsePanel()) { slidingUpPanelLayout.setSlidingEnabled(false); } },void disablePlayerBar(){(false);setImageResource();(name);if(slidingUpPanelLayout.collapsePanel()){setSlidingEnabled(false);}},"['private', 'void', 'disablePlayerBar', '(', ')', '{', 'playPauseButton', '.', 'setPlaying', '(', 'false', ')', ';', 'playerThumbnailIV', '.', 'setImageResource', '(', 'R', '.', 'drawable', '.', 'ic_launcher_square', ')', ';', 'playerProgramNameTV', '.', 'setText', '(', 'R', '.', 'string', '.', 'app_name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '.', 'collapsePanel', '(', ')', ')', '{', 'slidingUpPanelLayout', '.', 'setSlidingEnabled', '(', 'false', ')', ';', '}', '}']","['void', 'disablePlayerBar', '(', ')', '{', '(', 'false', ')', ';', 'setImageResource', '(', ')', ';', '(', 'name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '.', 'collapsePanel', '(', ')', ')', '{', 'setSlidingEnabled', '(', 'false', ')', ';', '}', '}']",53,33,6,278,126,22,59.375,42.5531914893617,,,,-1,-1,-1,-1,False
L1_attributeAsClass_1.txt,code2seq,METHOD_NAME,token_wrong,0.4892,0.57,9.2669,6.9061,"{'n_total': 113, 'n_valid': 12, 'n_correct': 10}",26.05532,public void attributeAsClass() { if (!isPanelSelected()) { return; } getCurrentPanel().attributeAsClass(); },void attributeAsClass(){{}getCurrentPanel().attributeAsClass();},"['public', 'void', 'attributeAsClass', '(', ')', '{', 'if', '(', '!', 'isPanelSelected', '(', ')', ')', '{', 'return', ';', '}', 'getCurrentPanel', '(', ')', '.', 'attributeAsClass', '(', ')', ';', '}']","['void', 'attributeAsClass', '(', ')', '{', '{', '}', 'getCurrentPanel', '(', ')', '.', 'attributeAsClass', '(', ')', ';', '}']",26,16,6,108,64,22,51.162790697674424,50.0,,,,-1,-1,-1,-1,False
L2_clientSentData_1.txt,code2seq,METHOD_NAME,token_wrong,0.9577,0.6089,20.3701,18.7912,"{'n_total': 764, 'n_valid': 79, 'n_correct': 51}",173.139375,"@Test @Specification(""client.sent.data/client"") public void clientSentData() throws Exception { CountDownLatch latch = new CountDownLatch(1); bindTo8080(new IoHandlerAdapter<IoSessionEx>() { @Override protected void doMessageReceived(IoSessionEx session, Object message) { String decoded = new String(((IoBuffer) message).array()); assertEquals(""client data"", decoded); latch.countDown(); } }); k3po.finish(); assertTrue(latch.await(2, SECONDS)); }","void clientSentData()throws Exception{latch();(new IoHandlerAdapter<>(){voiddoMessageReceived(IoSessionEx session,Object message){decoded=(((IoBuffer)).array);assertEquals("""",decoded);}});finish((SECONDS));}","['@', 'Test', '@', 'Specification', '(', '""client.sent.data/client""', ')', 'public', 'void', 'clientSentData', '(', ')', 'throws', 'Exception', '{', 'CountDownLatch', 'latch', '=', 'new', 'CountDownLatch', '(', '1', ')', ';', 'bindTo8080', '(', 'new', 'IoHandlerAdapter', '<', 'IoSessionEx', '>', '(', ')', '{', '@', 'Override', 'protected', 'void', 'doMessageReceived', '(', 'IoSessionEx', 'session', ',', 'Object', 'message', ')', '{', 'String', 'decoded', '=', 'new', 'String', '(', '(', '(', 'IoBuffer', ')', 'message', ')', '.', 'array', '(', ')', ')', ';', 'assertEquals', '(', '""client data""', ',', 'decoded', ')', ';', 'latch', '.', 'countDown', '(', ')', ';', '}', '}', ')', ';', 'k3po', '.', 'finish', '(', ')', ';', 'assertTrue', '(', 'latch', '.', 'await', '(', '2', ',', 'SECONDS', ')', ')', ';', '}']","['void', 'clientSentData', '(', ')', 'throws', 'Exception', '{', 'latch', '(', ')', ';', '(', 'new', 'IoHandlerAdapter', '<', '>', '(', ')', '{', 'voiddoMessageReceived', '(', 'IoSessionEx', 'session', ',', 'Object', 'message', ')', '{', 'decoded', '=', '(', '(', '(', 'IoBuffer', ')', ')', '.', 'array', ')', ';', 'assertEquals', '(', '""""', ',', 'decoded', ')', ';', '}', '}', ')', ';', 'finish', '(', '(', 'SECONDS', ')', ')', ';', '}']",101,59,6,448,207,20,56.30841121495327,44.21052631578947,,,,-1,-1,-1,-1,False
L3_detach_1.txt,code2seq,METHOD_NAME,token_wrong,0.9496,0.302,10.0795,7.7561,"{'n_total': 178, 'n_valid': 20, 'n_correct': 19}",43.79925,public void detach() throws IOException { synchronized (this) { if (fd != -1) { close(fd); fd = -1; } } },void detach()throws IOException{{if(fd){(fd);}}},"['public', 'void', 'detach', '(', ')', 'throws', 'IOException', '{', 'synchronized', '(', 'this', ')', '{', 'if', '(', 'fd', '!=', '-', '1', ')', '{', 'close', '(', 'fd', ')', ';', 'fd', '=', '-', '1', ';', '}', '}', '}']","['void', 'detach', '(', ')', 'throws', 'IOException', '{', '{', 'if', '(', 'fd', ')', '{', '(', 'fd', ')', ';', '}', '}', '}']",34,20,6,105,48,12,61.29032258064516,50.0,,,,-1,-1,-1,-1,False
L4_zeroExpectations_1.txt,code2seq,METHOD_NAME,token_wrong,0.3974,0.3825,13.9311,12.2619,"{'n_total': 239, 'n_valid': 27, 'n_correct': 21}",59.273775,public void zeroExpectations() { for (ObjectCursor<OneLabelGEConstraint> cursor : constraints.values()) { cursor.value.expectation = new double[map.getNumLabels()]; } },void zeroExpectations(){for(ObjectCursor<OneLabelGEConstraint>cursor:values()){expectation=new double[map];}},"['public', 'void', 'zeroExpectations', '(', ')', '{', 'for', '(', 'ObjectCursor', '<', 'OneLabelGEConstraint', '>', 'cursor', ':', 'constraints', '.', 'values', '(', ')', ')', '{', 'cursor', '.', 'value', '.', 'expectation', '=', 'new', 'double', '[', 'map', '.', 'getNumLabels', '(', ')', ']', ';', '}', '}']","['void', 'zeroExpectations', '(', ')', '{', 'for', '(', 'ObjectCursor', '<', 'OneLabelGEConstraint', '>', 'cursor', ':', 'values', '(', ')', ')', '{', 'expectation', '=', 'new', 'double', '[', 'map', ']', ';', '}', '}']",39,28,6,168,109,22,40.41095890410959,33.33333333333333,,,,-1,-1,-1,-1,False
L5_zeroIndexes_1.txt,code2seq,METHOD_NAME,token_wrong,0.6821,0.6259,11.8662,11.1669,"{'n_total': 373, 'n_valid': 39, 'n_correct': 33}",85.578608,public int[] zeroIndexes() { int[] zeroIndexes = new int[numberOfZeroes()]; int j = 0; for (int i = 0; i < length; i++) { if (!get(i)) { zeroIndexes[j++] = i; } } return zeroIndexes; },int[]zeroIndexes(){int[]zeroIndexes=newint[numberOfZeroes()];for(;;i++){if((i)){}}zeroIndexes;},"['public', 'int', '[', ']', 'zeroIndexes', '(', ')', '{', 'int', '[', ']', 'zeroIndexes', '=', 'new', 'int', '[', 'numberOfZeroes', '(', ')', ']', ';', 'int', 'j', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'get', '(', 'i', ')', ')', '{', 'zeroIndexes', '[', 'j', '++', ']', '=', 'i', ';', '}', '}', 'return', 'zeroIndexes', ';', '}']","['int', '[', ']', 'zeroIndexes', '(', ')', '{', 'int', '[', ']', 'zeroIndexes', '=', 'newint', '[', 'numberOfZeroes', '(', ')', ']', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', '(', 'i', ')', ')', '{', '}', '}', 'zeroIndexes', ';', '}']",64,39,6,184,95,17,53.293413173652695,43.103448275862064,,,,-1,-1,-1,-1,False
L6_deleteProject_1.txt,code2seq,METHOD_NAME,token_wrong,0.6819,0.4635,7.1186,5.4297,"{'n_total': 174, 'n_valid': 23, 'n_correct': 14}",49.091338,@Override public void deleteProject(String project) { collections.remove(project); apiKeyService.revokeAllKeys(project); super.onDeleteProject(project); },void deleteProject(String project){collections();apiKeyServicerevokeAllKeys();superonDeleteProject();},"['@', 'Override', 'public', 'void', 'deleteProject', '(', 'String', 'project', ')', '{', 'collections', '.', 'remove', '(', 'project', ')', ';', 'apiKeyService', '.', 'revokeAllKeys', '(', 'project', ')', ';', 'super', '.', 'onDeleteProject', '(', 'project', ')', ';', '}']","['void', 'deleteProject', '(', 'String', 'project', ')', '{', 'collections', '(', ')', ';', 'apiKeyServicerevokeAllKeys', '(', ')', ';', 'superonDeleteProject', '(', ')', ';', '}']",32,20,6,154,102,19,38.51851851851852,46.15384615384615,,,,-1,-1,-1,-1,False
L7_startLocating_1.txt,code2seq,METHOD_NAME,token_wrong,0.8075,0.6157,23.8997,23.5407,"{'n_total': 721, 'n_valid': 55, 'n_correct': 50}",119.909279,"@Rpc(description = ""Starts collecting location data."") @RpcStartEvent(""location"") public void startLocating(@RpcParameter(name = ""minDistance"", description = ""minimum time between updates in milliseconds"") @RpcDefault(""60000"") Integer minUpdateTime, @RpcParameter(name = ""minUpdateDistance"", description = ""minimum distance between updates in meters"") @RpcDefault(""30"") Integer minUpdateDistance) { for (String provider : mLocationManager.getAllProviders()) { mLocationManager.requestLocationUpdates(provider, minUpdateTime, minUpdateDistance, mLocationListener, mService.getMainLooper()); } }","@Rpc(description="""")@RpcStartEvent("""")void startLocating(@RpcParameter("""")@RpcDefault("""")@RpcParameter(name="""",description="""")Integer minUpdateDistance){for(String provider:getAllProviders()){(provider);}}","['@', 'Rpc', '(', 'description', '=', '""Starts collecting location data.""', ')', '@', 'RpcStartEvent', '(', '""location""', ')', 'public', 'void', 'startLocating', '(', '@', 'RpcParameter', '(', 'name', '=', '""minDistance""', ',', 'description', '=', '""minimum time between updates in milliseconds""', ')', '@', 'RpcDefault', '(', '""60000""', ')', 'Integer', 'minUpdateTime', ',', '@', 'RpcParameter', '(', 'name', '=', '""minUpdateDistance""', ',', 'description', '=', '""minimum distance between updates in meters""', ')', '@', 'RpcDefault', '(', '""30""', ')', 'Integer', 'minUpdateDistance', ')', '{', 'for', '(', 'String', 'provider', ':', 'mLocationManager', '.', 'getAllProviders', '(', ')', ')', '{', 'mLocationManager', '.', 'requestLocationUpdates', '(', 'provider', ',', 'minUpdateTime', ',', 'minUpdateDistance', ',', 'mLocationListener', ',', 'mService', '.', 'getMainLooper', '(', ')', ')', ';', '}', '}']","['@', 'Rpc', '(', 'description', '=', '""""', ')', '@', 'RpcStartEvent', '(', '""""', ')', 'void', 'startLocating', '(', '@', 'RpcParameter', '(', '""""', ')', '@', 'RpcDefault', '(', '""""', ')', '@', 'RpcParameter', '(', 'name', '=', '""""', ',', 'description', '=', '""""', ')', 'Integer', 'minUpdateDistance', ')', '{', 'for', '(', 'String', 'provider', ':', 'getAllProviders', '(', ')', ')', '{', '(', 'provider', ')', ';', '}', '}']",88,56,6,593,205,19,67.59581881533101,39.02439024390244,,,,-1,-1,-1,-1,False
L8_beforeCheckpoint_1.txt,code2seq,METHOD_NAME,token_wrong,0.7886,0.8483,23.2781,20.2154,"{'n_total': 318, 'n_valid': 49, 'n_correct': 26}",99.535136,"@Override public void beforeCheckpoint(long windowId) { if (checkpointedWindowId == 0) { checkpointedWindowId = windowId; } logger.debug(""{}, windowId={}"", this, Codec.getStringWindowId(windowId)); }","void beforeCheckpoint(long windowId){if(checkpointedWindowId){}logger(""{{}"",(windowId));}","['@', 'Override', 'public', 'void', 'beforeCheckpoint', '(', 'long', 'windowId', ')', '{', 'if', '(', 'checkpointedWindowId', '==', '0', ')', '{', 'checkpointedWindowId', '=', 'windowId', ';', '}', 'logger', '.', 'debug', '(', '""{}, windowId={}""', ',', 'this', ',', 'Codec', '.', 'getStringWindowId', '(', 'windowId', ')', ')', ';', '}']","['void', 'beforeCheckpoint', '(', 'long', 'windowId', ')', '{', 'if', '(', 'checkpointedWindowId', ')', '{', '}', 'logger', '(', '""{{}""', ',', '(', 'windowId', ')', ')', ';', '}']",39,23,6,199,89,22,62.14689265536724,48.484848484848484,,,,-1,-1,-1,-1,False
L9_shouldAddTokenOperation_1.txt,code2seq,METHOD_NAME,token_wrong,0.6763,0.6061,8.2662,8.1544,"{'n_total': 373, 'n_valid': 65, 'n_correct': 31}",136.163366,"@Test public void shouldAddTokenOperation() throws InterruptedException { CTSOperation operation = CTSOperation.READ; boolean successful = true; ctsOperationsMonitoringStore.addTokenOperation(null, operation, successful); verify(tokenOperationsStore).addTokenOperation(operation, successful); }","@Test void shouldAddTokenOperation()throws InterruptedException{ctsOperationsMonitoringStore.addTokenOperation(null,operation,successful);verify().addTokenOperation(operation);}","['@', 'Test', 'public', 'void', 'shouldAddTokenOperation', '(', ')', 'throws', 'InterruptedException', '{', 'CTSOperation', 'operation', '=', 'CTSOperation', '.', 'READ', ';', 'boolean', 'successful', '=', 'true', ';', 'ctsOperationsMonitoringStore', '.', 'addTokenOperation', '(', 'null', ',', 'operation', ',', 'successful', ')', ';', 'verify', '(', 'tokenOperationsStore', ')', '.', 'addTokenOperation', '(', 'operation', ',', 'successful', ')', ';', '}']","['@', 'Test', 'void', 'shouldAddTokenOperation', '(', ')', 'throws', 'InterruptedException', '{', 'ctsOperationsMonitoringStore', '.', 'addTokenOperation', '(', 'null', ',', 'operation', ',', 'successful', ')', ';', 'verify', '(', ')', '.', 'addTokenOperation', '(', 'operation', ')', ';', '}']",46,30,6,294,177,29,44.15094339622642,40.0,,,,-1,-1,-1,-1,False
L10_next_1.txt,code2seq,METHOD_NAME,token_wrong,0.6485,0.405,9.7528,7.4519,"{'n_total': 406, 'n_valid': 48, 'n_correct': 31}",107.136034,"public Object next() { String line = readLine(); if (line == null) return null; if (line.length() == 0) return new String[0]; return line.split(""\\s+""); }","Object next(){line=readLine();if(line)if(line()==0)String[0];returnsplit("""");}","['public', 'Object', 'next', '(', ')', '{', 'String', 'line', '=', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', 'return', 'null', ';', 'if', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', 'return', 'new', 'String', '[', '0', ']', ';', 'return', 'line', '.', 'split', '(', '""\\\\s+""', ')', ';', '}']","['Object', 'next', '(', ')', '{', 'line', '=', 'readLine', '(', ')', ';', 'if', '(', 'line', ')', 'if', '(', 'line', '(', ')', '==', '0', ')', 'String', '[', '0', ']', ';', 'returnsplit', '(', '""""', ')', ';', '}']",48,34,6,154,78,10,52.77777777777778,33.33333333333333,,,,-1,-1,-1,-1,False
L11_adjustDividers_1.txt,code2seq,METHOD_NAME,token_wrong,0.5076,0.5444,16.0593,16.7753,"{'n_total': 526, 'n_valid': 58, 'n_correct': 43}",122.799241,public void adjustDividers() { while ((m_items.size() > 0) && (m_items.get(0) instanceof MenuDivider)) { m_items.remove(0); } while ((m_items.size() > 0) && (m_items.get(m_items.size() - 1) instanceof MenuDivider)) { m_items.remove(m_items.size() - 1); } },void adjustDividers(){while(((0)instanceof MenuDivider)){items.remove();}while((size()>0)&((1)instanceof MenuDivider)){remove();}},"['public', 'void', 'adjustDividers', '(', ')', '{', 'while', '(', '(', 'm_items', '.', 'size', '(', ')', '>', '0', ')', '&&', '(', 'm_items', '.', 'get', '(', '0', ')', 'instanceof', 'MenuDivider', ')', ')', '{', 'm_items', '.', 'remove', '(', '0', ')', ';', '}', 'while', '(', '(', 'm_items', '.', 'size', '(', ')', '>', '0', ')', '&&', '(', 'm_items', '.', 'get', '(', 'm_items', '.', 'size', '(', ')', '-', '1', ')', 'instanceof', 'MenuDivider', ')', ')', '{', 'm_items', '.', 'remove', '(', 'm_items', '.', 'size', '(', ')', '-', '1', ')', ';', '}', '}']","['void', 'adjustDividers', '(', ')', '{', 'while', '(', '(', '(', '0', ')', 'instanceof', 'MenuDivider', ')', ')', '{', 'items', '.', 'remove', '(', ')', ';', '}', 'while', '(', '(', 'size', '(', ')', '>', '0', ')', '&', '(', '(', '1', ')', 'instanceof', 'MenuDivider', ')', ')', '{', 'remove', '(', ')', ';', '}', '}']",83,48,6,256,130,20,53.38983050847458,45.45454545454545,,,,-1,-1,-1,-1,False
L12_setup_1.txt,code2seq,METHOD_NAME,token_wrong,0.9801,0.7413,7.776,5.8961,"{'n_total': 361, 'n_valid': 31, 'n_correct': 30}",65.97192,"@Override protected void setup(Binder binder) { JDBCConfig config = buildConfigObject(JDBCConfig.class, ""store.adapter.postgresql""); binder.bind(JDBCPoolDataSource.class).annotatedWith(Names.named(""store.adapter.postgresql"")).toInstance(JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(PostgresqlQueryExecutor.class).in(Scopes.SINGLETON); binder.bind(UserStorage.class).to(AbstractPostgresqlUserStorage.class).in(Scopes.SINGLETON); binder.bind(boolean.class).annotatedWith(Names.named(""user.storage.postgresql"")).toInstance(""postgresql"".equals(true)); }","void setup(Binder binder){(JDBCConfig);(PostgresqlQueryExecutor).to();(("""")).toInstance("""".equals());}","['@', 'Override', 'protected', 'void', 'setup', '(', 'Binder', 'binder', ')', '{', 'JDBCConfig', 'config', '=', 'buildConfigObject', '(', 'JDBCConfig', '.', 'class', ',', '""store.adapter.postgresql""', ')', ';', 'binder', '.', 'bind', '(', 'JDBCPoolDataSource', '.', 'class', ')', '.', 'annotatedWith', '(', 'Names', '.', 'named', '(', '""store.adapter.postgresql""', ')', ')', '.', 'toInstance', '(', 'JDBCPoolDataSource', '.', 'getOrCreateDataSource', '(', 'config', ')', ')', ';', 'binder', '.', 'bind', '(', 'PostgresqlQueryExecutor', '.', 'class', ')', '.', 'in', '(', 'Scopes', '.', 'SINGLETON', ')', ';', 'binder', '.', 'bind', '(', 'UserStorage', '.', 'class', ')', '.', 'to', '(', 'AbstractPostgresqlUserStorage', '.', 'class', ')', '.', 'in', '(', 'Scopes', '.', 'SINGLETON', ')', ';', 'binder', '.', 'bind', '(', 'boolean', '.', 'class', ')', '.', 'annotatedWith', '(', 'Names', '.', 'named', '(', '""user.storage.postgresql""', ')', ')', '.', 'toInstance', '(', '""postgresql""', '.', 'equals', '(', 'true', ')', ')', ';', '}']","['void', 'setup', '(', 'Binder', 'binder', ')', '{', '(', 'JDBCConfig', ')', ';', '(', 'PostgresqlQueryExecutor', ')', '.', 'to', '(', ')', ';', '(', '(', '""""', ')', ')', '.', 'toInstance', '(', '""""', '.', 'equals', '(', ')', ')', ';', '}']",120,35,6,567,102,11,83.63309352517986,74.56140350877193,,,,-1,-1,-1,-1,False
L13_testWithKeyTransformer_1.txt,code2seq,METHOD_NAME,token_wrong,0.377,0.5203,15.2392,14.0131,"{'n_total': 655, 'n_valid': 87, 'n_correct': 42}",185.901557,"@Test public void testWithKeyTransformer() { String json = ""{\""abc\"":{\""de.f\"":123}}""; JsonFlattener jf = new JsonFlattener(json).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new KeyTransformer() { @Override public String transform(String key) { return key.replace('.', '_'); } }); assertEquals(""{\""abc.de_f\"":123}"", jf.flatten()); }","@Test void testWithKeyTransformer(){json="""";JsonFlattener=(json).withFlattenMode(FlattenMode).withKeyTransformer(new KeyTransformer(){transform(String key){key('.','_');}});assertEquals("""",jf.flatten());}","['@', 'Test', 'public', 'void', 'testWithKeyTransformer', '(', ')', '{', 'String', 'json', '=', '""{\\""abc\\"":{\\""de.f\\"":123}}""', ';', 'JsonFlattener', 'jf', '=', 'new', 'JsonFlattener', '(', 'json', ')', '.', 'withFlattenMode', '(', 'FlattenMode', '.', 'MONGODB', ')', '.', 'withKeyTransformer', '(', 'new', 'KeyTransformer', '(', ')', '{', '@', 'Override', 'public', 'String', 'transform', '(', 'String', 'key', ')', '{', 'return', 'key', '.', 'replace', '(', ""'.'"", ',', ""'_'"", ')', ';', '}', '}', ')', ';', 'assertEquals', '(', '""{\\""abc.de_f\\"":123}""', ',', 'jf', '.', 'flatten', '(', ')', ')', ';', '}']","['@', 'Test', 'void', 'testWithKeyTransformer', '(', ')', '{', 'json', '=', '""""', ';', 'JsonFlattener', '=', '(', 'json', ')', '.', 'withFlattenMode', '(', 'FlattenMode', ')', '.', 'withKeyTransformer', '(', 'new', 'KeyTransformer', '(', ')', '{', 'transform', '(', 'String', 'key', ')', '{', 'key', '(', ""'.'"", ',', ""'_'"", ')', ';', '}', '}', ')', ';', 'assertEquals', '(', '""""', ',', 'jf', '.', 'flatten', '(', ')', ')', ';', '}']",72,58,6,344,204,28,44.303797468354425,21.21212121212121,,,,-1,-1,-1,-1,False
L14_shouldDeserializeObject_1.txt,code2seq,METHOD_NAME,token_wrong,0.5117,0.3815,7.8832,12.1141,"{'n_total': 409, 'n_valid': 41, 'n_correct': 27}",83.955063,"@Test public void shouldDeserializeObject() throws IOException { when(objectMapper.readValue(eq(""requestBytes""), same(ExpectationDTO.class))).thenReturn(fullExpectationDTO); when(expectationValidator.isValid(""requestBytes"")).thenReturn(""""); Expectation expectation = expectationSerializer.deserialize(""requestBytes""); assertThat(expectation, is(fullExpectation)); }","void shouldDeserializeObject()throws IOException{(((ExpectationDTO))).deserialize("""");((fullExpectation));}","['@', 'Test', 'public', 'void', 'shouldDeserializeObject', '(', ')', 'throws', 'IOException', '{', 'when', '(', 'objectMapper', '.', 'readValue', '(', 'eq', '(', '""requestBytes""', ')', ',', 'same', '(', 'ExpectationDTO', '.', 'class', ')', ')', ')', '.', 'thenReturn', '(', 'fullExpectationDTO', ')', ';', 'when', '(', 'expectationValidator', '.', 'isValid', '(', '""requestBytes""', ')', ')', '.', 'thenReturn', '(', '""""', ')', ';', 'Expectation', 'expectation', '=', 'expectationSerializer', '.', 'deserialize', '(', '""requestBytes""', ')', ';', 'assertThat', '(', 'expectation', ',', 'is', '(', 'fullExpectation', ')', ')', ';', '}']","['void', 'shouldDeserializeObject', '(', ')', 'throws', 'IOException', '{', '(', '(', '(', 'ExpectationDTO', ')', ')', ')', '.', 'deserialize', '(', '""""', ')', ';', '(', '(', 'fullExpectation', ')', ')', ';', '}']",71,27,6,365,107,29,76.78571428571429,67.6923076923077,,,,-1,-1,-1,-1,False
L15_initSpyManager_1.txt,code2seq,METHOD_NAME,token_wrong,0.7001,0.6783,23.282,22.0511,"{'n_total': 300, 'n_valid': 43, 'n_correct': 27}",92.967784,"private static LocalFileSystemStateManager initSpyManager(String rootPath, boolean initTree) { Config config = Config.newBuilder().put(Key.STATEMGR_ROOT_PATH, rootPath).put(LocalFileSystemKey.IS_INITIALIZE_FILE_TREE.value(), initTree).build(); LocalFileSystemStateManager manager = spy(new LocalFileSystemStateManager()); manager.initialize(config); return manager; }","LocalFileSystemStateManager initSpyManager(String rootPath,boolean initTree){Config config=Config(FILE).spy(LocalFileSystemStateManager());initialize(config);manager;}","['private', 'static', 'LocalFileSystemStateManager', 'initSpyManager', '(', 'String', 'rootPath', ',', 'boolean', 'initTree', ')', '{', 'Config', 'config', '=', 'Config', '.', 'newBuilder', '(', ')', '.', 'put', '(', 'Key', '.', 'STATEMGR_ROOT_PATH', ',', 'rootPath', ')', '.', 'put', '(', 'LocalFileSystemKey', '.', 'IS_INITIALIZE_FILE_TREE', '.', 'value', '(', ')', ',', 'initTree', ')', '.', 'build', '(', ')', ';', 'LocalFileSystemStateManager', 'manager', '=', 'spy', '(', 'new', 'LocalFileSystemStateManager', '(', ')', ')', ';', 'manager', '.', 'initialize', '(', 'config', ')', ';', 'return', 'manager', ';', '}']","['LocalFileSystemStateManager', 'initSpyManager', '(', 'String', 'rootPath', ',', 'boolean', 'initTree', ')', '{', 'Config', 'config', '=', 'Config', '(', 'FILE', ')', '.', 'spy', '(', 'LocalFileSystemStateManager', '(', ')', ')', ';', 'initialize', '(', 'config', ')', ';', 'manager', ';', '}']",69,33,6,367,167,20,57.636887608069166,57.14285714285714,,,,-1,-1,-1,-1,False
L16_seed_1.txt,code2seq,METHOD_NAME,token_wrong,0.4456,0.4854,12.6414,11.5285,"{'n_total': 213, 'n_valid': 29, 'n_correct': 22}",60.220972,"public void seed(int fromIndex, int count, long value) { int capacity = fromIndex + count; ensureCapacity(capacity); pos = capacity; Arrays.fill(buffer, fromIndex, capacity, value); }","void seed(int fromIndex,long value){ensureCapacity();Arrays.fill();}","['public', 'void', 'seed', '(', 'int', 'fromIndex', ',', 'int', 'count', ',', 'long', 'value', ')', '{', 'int', 'capacity', '=', 'fromIndex', '+', 'count', ';', 'ensureCapacity', '(', 'capacity', ')', ';', 'pos', '=', 'capacity', ';', 'Arrays', '.', 'fill', '(', 'buffer', ',', 'fromIndex', ',', 'capacity', ',', 'value', ')', ';', '}']","['void', 'seed', '(', 'int', 'fromIndex', ',', 'long', 'value', ')', '{', 'ensureCapacity', '(', ')', ';', 'Arrays', '.', 'fill', '(', ')', ';', '}']",44,21,6,183,68,10,66.47398843930635,60.526315789473685,,,,-1,-1,-1,-1,False
L17_trim_1.txt,code2seq,METHOD_NAME,token_wrong,0.6308,0.3966,6.3372,5.2884,"{'n_total': 278, 'n_valid': 28, 'n_correct': 18}",59.214885,"private static int[] trim(int[] a, int length) { int[] result = new int[length]; System.arraycopy(a, 0, result, 0, result.length); return result; }","int[]trim(int[]a,int length){int[]result=new int[length];System.arraycopy();}","['private', 'static', 'int', '[', ']', 'trim', '(', 'int', '[', ']', 'a', ',', 'int', 'length', ')', '{', 'int', '[', ']', 'result', '=', 'new', 'int', '[', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'a', ',', '0', ',', 'result', ',', '0', ',', 'result', '.', 'length', ')', ';', 'return', 'result', ';', '}']","['int', '[', ']', 'trim', '(', 'int', '[', ']', 'a', ',', 'int', 'length', ')', '{', 'int', '[', ']', 'result', '=', 'new', 'int', '[', 'length', ']', ';', 'System', '.', 'arraycopy', '(', ')', ';', '}']",48,32,6,147,77,10,51.09489051094891,38.095238095238095,,,,-1,-1,-1,-1,False
L18_buildClickIntent_1.txt,code2seq,METHOD_NAME,token_wrong,0.5473,0.6404,9.1938,9.676,"{'n_total': 466, 'n_valid': 87, 'n_correct': 31}",178.242431,"protected Intent buildClickIntent(long taskId, String accountType) { Intent clickIntent = new Intent(Intent.ACTION_VIEW); clickIntent.setData(ContentUris.withAppendedId(Tasks.getContentUri(mAuthority), taskId)); clickIntent.putExtra(EditTaskActivity.EXTRA_DATA_ACCOUNT_TYPE, accountType); return clickIntent; }","Intent buildClickIntent(long taskId,String accountType){clickIntent();clickIntent.setData(((mAuthority)));clickIntent.putExtra(EditTaskActivity.EXTRAACCOUNT_accountType);return clickIntent;}","['protected', 'Intent', 'buildClickIntent', '(', 'long', 'taskId', ',', 'String', 'accountType', ')', '{', 'Intent', 'clickIntent', '=', 'new', 'Intent', '(', 'Intent', '.', 'ACTION_VIEW', ')', ';', 'clickIntent', '.', 'setData', '(', 'ContentUris', '.', 'withAppendedId', '(', 'Tasks', '.', 'getContentUri', '(', 'mAuthority', ')', ',', 'taskId', ')', ')', ';', 'clickIntent', '.', 'putExtra', '(', 'EditTaskActivity', '.', 'EXTRA_DATA_ACCOUNT_TYPE', ',', 'accountType', ')', ';', 'return', 'clickIntent', ';', '}']","['Intent', 'buildClickIntent', '(', 'long', 'taskId', ',', 'String', 'accountType', ')', '{', 'clickIntent', '(', ')', ';', 'clickIntent', '.', 'setData', '(', '(', '(', 'mAuthority', ')', ')', ')', ';', 'clickIntent', '.', 'putExtra', '(', 'EditTaskActivity', '.', 'EXTRAACCOUNT_accountType', ')', ';', 'return', 'clickIntent', ';', '}']",56,38,6,310,190,22,41.66666666666667,36.0,,,,-1,-1,-1,-1,False
L19_reset_1.txt,code2seq,METHOD_NAME,token_wrong,0.7481,0.4994,4.3055,5.3701,"{'n_total': 153, 'n_valid': 18, 'n_correct': 13}",38.470604,"public void reset(String realm, String config) { configData = null; xmlValue = null; initialize(realm, config); }","void reset(String realm,String config){initialize(config);}","['public', 'void', 'reset', '(', 'String', 'realm', ',', 'String', 'config', ')', '{', 'configData', '=', 'null', ';', 'xmlValue', '=', 'null', ';', 'initialize', '(', 'realm', ',', 'config', ')', ';', '}']","['void', 'reset', '(', 'String', 'realm', ',', 'String', 'config', ')', '{', 'initialize', '(', 'config', ')', ';', '}']",27,16,6,113,59,11,52.94117647058824,52.38095238095239,,,,-1,-1,-1,-1,False
L20_getNewLeaf_1.txt,code2seq,METHOD_NAME,token_wrong,0.8574,0.6463,21.6731,21.3188,"{'n_total': 285, 'n_valid': 40, 'n_correct': 26}",86.341705,public NCRPNode getNewLeaf() { NCRPNode node = this; for (int l = level; l < numLevels - 1; l++) { node = node.addChild(); } return node; },NCRPNode getNewLeaf(){node=this;for(;;l++){node.addChild();}return node;},"['public', 'NCRPNode', 'getNewLeaf', '(', ')', '{', 'NCRPNode', 'node', '=', 'this', ';', 'for', '(', 'int', 'l', '=', 'level', ';', 'l', '<', 'numLevels', '-', '1', ';', 'l', '++', ')', '{', 'node', '=', 'node', '.', 'addChild', '(', ')', ';', '}', 'return', 'node', ';', '}']","['NCRPNode', 'getNewLeaf', '(', ')', '{', 'node', '=', 'this', ';', 'for', '(', ';', ';', 'l', '++', ')', '{', 'node', '.', 'addChild', '(', ')', ';', '}', 'return', 'node', ';', '}']",41,28,6,139,73,16,53.65853658536586,37.142857142857146,,,,-1,-1,-1,-1,False
L21_canFireCondition_1.txt,code2seq,METHOD_NAME,token_wrong,0.5917,0.5843,10.2983,9.053,"{'n_total': 196, 'n_valid': 29, 'n_correct': 16}",58.859066,public boolean canFireCondition(GameEvent event) { if (primaryTrigger.canFireCondition(event) || (secondaryTrigger != null && secondaryTrigger.canFireCondition(event))) { return true; } return false; },boolean canFireCondition(){if(primaryTrigger.canFireCondition(eventcanFireCondition(event))){}return false;},"['public', 'boolean', 'canFireCondition', '(', 'GameEvent', 'event', ')', '{', 'if', '(', 'primaryTrigger', '.', 'canFireCondition', '(', 'event', ')', '||', '(', 'secondaryTrigger', '!=', 'null', '&&', 'secondaryTrigger', '.', 'canFireCondition', '(', 'event', ')', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'canFireCondition', '(', ')', '{', 'if', '(', 'primaryTrigger', '.', 'canFireCondition', '(', 'eventcanFireCondition', '(', 'event', ')', ')', ')', '{', '}', 'return', 'false', ';', '}']",39,23,6,201,108,22,51.955307262569825,48.484848484848484,,,,-1,-1,-1,-1,False
L22_stripIndexReferences_1.txt,code2seq,METHOD_NAME,token_wrong,0.8071,0.5826,21.6662,21.0305,"{'n_total': 235, 'n_valid': 23, 'n_correct': 17}",51.171464,"public static String stripIndexReferences(String label) { if (label.indexOf(""="") <= 0) return label; else return label.substring(0, label.indexOf(""="")); }","String stripIndexReferences(String label){if(label("""")<=0)label.substring(0,indexOf(""=""));}","['public', 'static', 'String', 'stripIndexReferences', '(', 'String', 'label', ')', '{', 'if', '(', 'label', '.', 'indexOf', '(', '""=""', ')', '<=', '0', ')', 'return', 'label', ';', 'else', 'return', 'label', '.', 'substring', '(', '0', ',', 'label', '.', 'indexOf', '(', '""=""', ')', ')', ';', '}']","['String', 'stripIndexReferences', '(', 'String', 'label', ')', '{', 'if', '(', 'label', '(', '""""', ')', '<=', '0', ')', 'label', '.', 'substring', '(', '0', ',', 'indexOf', '(', '""=""', ')', ')', ';', '}']",40,29,6,154,91,26,49.21875,32.35294117647059,,,,-1,-1,-1,-1,False
L23_processClientKeyExchange_1.txt,code2seq,METHOD_NAME,token_wrong,0.7838,0.8114,24.2591,22.6253,"{'n_total': 219, 'n_valid': 37, 'n_correct': 23}",78.973857,"public void processClientKeyExchange(InputStream input) throws IOException { if (ecdhPeerCertificate != null) { return; } byte[] point = TlsUtils.readOpaque8(input); processEphemeral(serverECPointFormats, point); }",void processClientKeyExchange(InputStream input){if(ecdhPeerCertificate){}byte point=TlsUtils;processEphemeral(point);},"['public', 'void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'if', '(', 'ecdhPeerCertificate', '!=', 'null', ')', '{', 'return', ';', '}', 'byte', '[', ']', 'point', '=', 'TlsUtils', '.', 'readOpaque8', '(', 'input', ')', ';', 'processEphemeral', '(', 'serverECPointFormats', ',', 'point', ')', ';', '}']","['void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', '{', 'if', '(', 'ecdhPeerCertificate', ')', '{', '}', 'byte', 'point', '=', 'TlsUtils', ';', 'processEphemeral', '(', 'point', ')', ';', '}']",40,24,6,214,119,30,51.63043478260869,47.05882352941176,,,,-1,-1,-1,-1,False
L24_addLoggingHandler_1.txt,code2seq,METHOD_NAME,token_wrong,0.6279,0.5597,13.7287,10.2548,"{'n_total': 494, 'n_valid': 65, 'n_correct': 40}",136.46049,"public void addLoggingHandler(ChannelHandlerContext ctx) { if (ctx.pipeline().get(LoggingHandler.class) != null) { ctx.pipeline().remove(LoggingHandler.class); } if (ctx.pipeline().get(SslHandler.class) != null) { ctx.pipeline().addAfter(""SslHandler#0"", ""LoggingHandler#0"", this); } else { ctx.pipeline().addFirst(this); } }","void addLoggingHandler(ChannelHandlerContext ctx){if(null){(LoggingHandler.class);}if((SslHandler.class)!=null){ctx.addAfter("""","""",this);}{(this);}}","['public', 'void', 'addLoggingHandler', '(', 'ChannelHandlerContext', 'ctx', ')', '{', 'if', '(', 'ctx', '.', 'pipeline', '(', ')', '.', 'get', '(', 'LoggingHandler', '.', 'class', ')', '!=', 'null', ')', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'remove', '(', 'LoggingHandler', '.', 'class', ')', ';', '}', 'if', '(', 'ctx', '.', 'pipeline', '(', ')', '.', 'get', '(', 'SslHandler', '.', 'class', ')', '!=', 'null', ')', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'addAfter', '(', '""SslHandler#0""', ',', '""LoggingHandler#0""', ',', 'this', ')', ';', '}', 'else', '{', 'ctx', '.', 'pipeline', '(', ')', '.', 'addFirst', '(', 'this', ')', ';', '}', '}']","['void', 'addLoggingHandler', '(', 'ChannelHandlerContext', 'ctx', ')', '{', 'if', '(', 'null', ')', '{', '(', 'LoggingHandler', '.', 'class', ')', ';', '}', 'if', '(', '(', 'SslHandler', '.', 'class', ')', '!=', 'null', ')', '{', 'ctx', '.', 'addAfter', '(', '""""', ',', '""""', ',', 'this', ')', ';', '}', '{', '(', 'this', ')', ';', '}', '}']",89,49,6,324,148,23,58.4717607973422,48.19277108433735,,,,-1,-1,-1,-1,False
L25_releasePrepareStatement_1.txt,code2seq,METHOD_NAME,token_wrong,0.9045,0.6718,15.6402,13.0991,"{'n_total': 217, 'n_valid': 23, 'n_correct': 17}",51.603793,@Override public void releasePrepareStatement(ServerPrepareResult serverPrepareResult) throws SQLException { serverPrepareResult.decrementShareCounter(); if (serverPrepareResult.canBeDeallocate()) { forceReleasePrepareStatement(serverPrepareResult.getStatementId()); } },@Override void releasePrepareStatement(ServerPrepareResult serverPrepareResult)throws SQLException{decrementShareCounter();if(canBeDeallocate()){forceReleasePrepareStatement();}},"['@', 'Override', 'public', 'void', 'releasePrepareStatement', '(', 'ServerPrepareResult', 'serverPrepareResult', ')', 'throws', 'SQLException', '{', 'serverPrepareResult', '.', 'decrementShareCounter', '(', ')', ';', 'if', '(', 'serverPrepareResult', '.', 'canBeDeallocate', '(', ')', ')', '{', 'forceReleasePrepareStatement', '(', 'serverPrepareResult', '.', 'getStatementId', '(', ')', ')', ';', '}', '}']","['@', 'Override', 'void', 'releasePrepareStatement', '(', 'ServerPrepareResult', 'serverPrepareResult', ')', 'throws', 'SQLException', '{', 'decrementShareCounter', '(', ')', ';', 'if', '(', 'canBeDeallocate', '(', ')', ')', '{', 'forceReleasePrepareStatement', '(', ')', ';', '}', '}']",38,28,6,270,178,29,38.17427385892116,31.25,,,,-1,-1,-1,-1,False
L26_parseQuitely_1.txt,code2seq,METHOD_NAME,token_wrong,0.9209,0.8232,6.1002,5.6642,"{'n_total': 209, 'n_valid': 17, 'n_correct': 16}",41.546986,public static RouteRule parseQuitely(Route route) { try { return parse(route); } catch (ParseException e) { throw new RuntimeException(e); } },RouteRule parseQuitely(Route route){try{parse();}catch(ParseException e){(e);}},"['public', 'static', 'RouteRule', 'parseQuitely', '(', 'Route', 'route', ')', '{', 'try', '{', 'return', 'parse', '(', 'route', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['RouteRule', 'parseQuitely', '(', 'Route', 'route', ')', '{', 'try', '{', 'parse', '(', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",33,26,6,142,79,18,50.806451612903224,25.925925925925924,,,,-1,-1,-1,-1,False
L27_needsAnalyzed_1.txt,code2seq,METHOD_NAME,token_wrong,0.6606,0.7736,17.2918,20.399,"{'n_total': 236, 'n_valid': 27, 'n_correct': 22}",59.933744,private boolean needsAnalyzed() { for (Instruction instruction : methodImpl.getInstructions()) { if (instruction.getOpcode().odexOnly()) { return true; } } return false; },boolean needsAnalyzed(){for(Instruction instruction:getInstructions()){if(getOpcode().odexOnly()){true;}}},"['private', 'boolean', 'needsAnalyzed', '(', ')', '{', 'for', '(', 'Instruction', 'instruction', ':', 'methodImpl', '.', 'getInstructions', '(', ')', ')', '{', 'if', '(', 'instruction', '.', 'getOpcode', '(', ')', '.', 'odexOnly', '(', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'needsAnalyzed', '(', ')', '{', 'for', '(', 'Instruction', 'instruction', ':', 'getInstructions', '(', ')', ')', '{', 'if', '(', 'getOpcode', '(', ')', '.', 'odexOnly', '(', ')', ')', '{', 'true', ';', '}', '}', '}']",40,31,6,171,106,19,42.76315789473684,26.47058823529412,,,,-1,-1,-1,-1,False
L28_appendToMap_1.txt,code2seq,METHOD_NAME,token_wrong,0.7842,0.3639,12.0128,13.3869,"{'n_total': 379, 'n_valid': 31, 'n_correct': 29}",68.460826,"private void appendToMap(Map<String, SortedSet<String>> map, String key, String value) { SortedSet<String> valueList = map.get(key); if (valueList == null) { valueList = new TreeSet<>(); map.put(key, valueList); } valueList.add(value); }","void appendToMap(Map<String>map,String key,String value){(key);{}add();}","['private', 'void', 'appendToMap', '(', 'Map', '<', 'String', ',', 'SortedSet', '<', 'String', '>', '>', 'map', ',', 'String', 'key', ',', 'String', 'value', ')', '{', 'SortedSet', '<', 'String', '>', 'valueList', '=', 'map', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'valueList', '==', 'null', ')', '{', 'valueList', '=', 'new', 'TreeSet', '<', '>', '(', ')', ';', 'map', '.', 'put', '(', 'key', ',', 'valueList', ')', ';', '}', 'valueList', '.', 'add', '(', 'value', ')', ';', '}']","['void', 'appendToMap', '(', 'Map', '<', 'String', '>', 'map', ',', 'String', 'key', ',', 'String', 'value', ')', '{', '(', 'key', ')', ';', '{', '}', 'add', '(', ')', ';', '}']",69,27,6,237,72,17,75.0,66.66666666666666,,,,-1,-1,-1,-1,False
L29_derDecode_1.txt,code2seq,METHOD_NAME,token_wrong,0.6076,0.4957,15.8045,19.2121,"{'n_total': 331, 'n_valid': 40, 'n_correct': 26}",82.684794,protected BigInteger[] derDecode(byte[] encoding) throws IOException { ByteArrayInputStream bIn = new ByteArrayInputStream(encoding); ASN1InputStream aIn = new ASN1InputStream(bIn); ASN1Sequence s = (ASN1Sequence) aIn.readObject(); BigInteger[] sig = new BigInteger[2]; sig[0] = ((ASN1Integer) s.getObjectAt(0)).getValue(); sig[1] = ((ASN1Integer) s.getObjectAt(1)).getValue(); return sig; },BigInteger[]derDecode(byte[]encoding)throws IOException{bIn();sig[1]=((1)).getValue();return sig;},"['protected', 'BigInteger', '[', ']', 'derDecode', '(', 'byte', '[', ']', 'encoding', ')', 'throws', 'IOException', '{', 'ByteArrayInputStream', 'bIn', '=', 'new', 'ByteArrayInputStream', '(', 'encoding', ')', ';', 'ASN1InputStream', 'aIn', '=', 'new', 'ASN1InputStream', '(', 'bIn', ')', ';', 'ASN1Sequence', 's', '=', '(', 'ASN1Sequence', ')', 'aIn', '.', 'readObject', '(', ')', ';', 'BigInteger', '[', ']', 'sig', '=', 'new', 'BigInteger', '[', '2', ']', ';', 'sig', '[', '0', ']', '=', '(', '(', 'ASN1Integer', ')', 's', '.', 'getObjectAt', '(', '0', ')', ')', '.', 'getValue', '(', ')', ';', 'sig', '[', '1', ']', '=', '(', '(', 'ASN1Integer', ')', 's', '.', 'getObjectAt', '(', '1', ')', ')', '.', 'getValue', '(', ')', ';', 'return', 'sig', ';', '}']","['BigInteger', '[', ']', 'derDecode', '(', 'byte', '[', ']', 'encoding', ')', 'throws', 'IOException', '{', 'bIn', '(', ')', ';', 'sig', '[', '1', ']', '=', '(', '(', '1', ')', ')', '.', 'getValue', '(', ')', ';', 'return', 'sig', ';', '}']",101,36,6,391,98,15,77.92553191489363,68.42105263157895,,,,-1,-1,-1,-1,False
L30_unloadClient_1.txt,code2seq,METHOD_NAME,token_wrong,0.7827,0.5985,11.8252,10.0282,"{'n_total': 170, 'n_valid': 21, 'n_correct': 13}",44.458364,private void unloadClient(String clientType) { loadedInternalClients.remove(clientType); loadedExternalClients.remove(clientType); loadedClientsMap.remove(clientType); },void unloadClient(String clientType){loadedInternalClients();loadedExternalClients.remove();},"['private', 'void', 'unloadClient', '(', 'String', 'clientType', ')', '{', 'loadedInternalClients', '.', 'remove', '(', 'clientType', ')', ';', 'loadedExternalClients', '.', 'remove', '(', 'clientType', ')', ';', 'loadedClientsMap', '.', 'remove', '(', 'clientType', ')', ';', '}']","['void', 'unloadClient', '(', 'String', 'clientType', ')', '{', 'loadedInternalClients', '(', ')', ';', 'loadedExternalClients', '.', 'remove', '(', ')', ';', '}']",30,18,6,169,93,18,50.331125827814574,50.0,,,,-1,-1,-1,-1,False
L31_listUpdated_1.txt,code2seq,METHOD_NAME,token_wrong,0.7531,0.6725,11.2228,18.786,"{'n_total': 204, 'n_valid': 18, 'n_correct': 17}",38.691858,"@Test public void listUpdated() { component.listUpdated(); assertEquals(""recentTopicsUpdated"", mockResult.included(""recentTopicsSectionKey"")); assertEquals(topicList, mockResult.included(""topics"")); }","void listUpdated(){assertEquals("""".included(""""));((""""));}","['@', 'Test', 'public', 'void', 'listUpdated', '(', ')', '{', 'component', '.', 'listUpdated', '(', ')', ';', 'assertEquals', '(', '""recentTopicsUpdated""', ',', 'mockResult', '.', 'included', '(', '""recentTopicsSectionKey""', ')', ')', ';', 'assertEquals', '(', 'topicList', ',', 'mockResult', '.', 'included', '(', '""topics""', ')', ')', ';', '}']","['void', 'listUpdated', '(', ')', '{', 'assertEquals', '(', '""""', '.', 'included', '(', '""""', ')', ')', ';', '(', '(', '""""', ')', ')', ';', '}']",39,22,6,200,57,17,78.14207650273224,51.515151515151516,,,,-1,-1,-1,-1,False
L32_closeContext_1.txt,code2seq,METHOD_NAME,token_wrong,0.2498,0.9502,9.8241,14.4473,"{'n_total': 384, 'n_valid': 44, 'n_correct': 30}",97.559398,"private void closeContext() { if (this.app != null) { Expression parsed = new SpelExpressionParser().parseExpression(""close()""); parsed.getValue(this.app); this.app = null; } }","void closeContext(){if(this!=null){parsed.parseExpression("""");parsed();app=null;}}","['private', 'void', 'closeContext', '(', ')', '{', 'if', '(', 'this', '.', 'app', '!=', 'null', ')', '{', 'Expression', 'parsed', '=', 'new', 'SpelExpressionParser', '(', ')', '.', 'parseExpression', '(', '""close()""', ')', ';', 'parsed', '.', 'getValue', '(', 'this', '.', 'app', ')', ';', 'this', '.', 'app', '=', 'null', ';', '}', '}']","['void', 'closeContext', '(', ')', '{', 'if', '(', 'this', '!=', 'null', ')', '{', 'parsed', '.', 'parseExpression', '(', '""""', ')', ';', 'parsed', '(', ')', ';', 'app', '=', 'null', ';', '}', '}']",45,29,6,176,82,18,59.49367088607595,41.02564102564102,,,,-1,-1,-1,-1,False
L33_discreteValue_1.txt,code2seq,METHOD_NAME,token_wrong,0.5378,0.3672,15.0472,15.7842,"{'n_total': 388, 'n_valid': 40, 'n_correct': 32}",86.889774,"public String discreteValue(Object __example) { if (!(__example instanceof Token)) { String type = __example == null ? ""null"" : __example.getClass().getName(); System.err.println(""Classifier 'labelTwoBeforeU(Token)' defined on line 48 of POSUnknown.lbj received '"" + type + ""' as input.""); new Exception().printStackTrace(); System.exit(1); } return cachedFeatureValue(__example).getStringValue(); }","String discreteValue(Object example){if(!(example instanceof Token)){(""""+"""");System.exit(1);}(_).getStringValue();}","['public', 'String', 'discreteValue', '(', 'Object', '__example', ')', '{', 'if', '(', '!', '(', '__example', 'instanceof', 'Token', ')', ')', '{', 'String', 'type', '=', '__example', '==', 'null', '?', '""null""', ':', '__example', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', '""Classifier \'labelTwoBeforeU(Token)\' defined on line 48 of POSUnknown.lbj received \'""', '+', 'type', '+', '""\' as input.""', ')', ';', 'new', 'Exception', '(', ')', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'return', 'cachedFeatureValue', '(', '__example', ')', '.', 'getStringValue', '(', ')', ';', '}']","['String', 'discreteValue', '(', 'Object', 'example', ')', '{', 'if', '(', '!', '(', 'example', 'instanceof', 'Token', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', '(', '_', ')', '.', 'getStringValue', '(', ')', ';', '}']",78,40,6,399,115,19,74.73684210526315,52.77777777777778,,,,-1,-1,-1,-1,False
L34_recordHasPart_1.txt,code2seq,METHOD_NAME,token_wrong,0.5652,0.5158,21.5639,21.8778,"{'n_total': 209, 'n_valid': 25, 'n_correct': 21}",56.285843,"private boolean recordHasPart(org.osid.shared.Id partStructureId, MatchItem item) { if (this.getPartPair(partStructureId, item) == null) { return false; } else { return true; } }",boolean recordHasPart(MatchItem item){if(this.getPartPair(partStructureIditem)==null){}{}},"['private', 'boolean', 'recordHasPart', '(', 'org', '.', 'osid', '.', 'shared', '.', 'Id', 'partStructureId', ',', 'MatchItem', 'item', ')', '{', 'if', '(', 'this', '.', 'getPartPair', '(', 'partStructureId', ',', 'item', ')', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'true', ';', '}', '}']","['boolean', 'recordHasPart', '(', 'MatchItem', 'item', ')', '{', 'if', '(', 'this', '.', 'getPartPair', '(', 'partStructureIditem', ')', '==', 'null', ')', '{', '}', '{', '}', '}']",42,23,6,178,90,19,55.34591194968554,52.77777777777778,,,,-1,-1,-1,-1,False
L35_returnByte_1.txt,code2seq,METHOD_NAME,token_wrong,0.8465,0.7119,10.1384,6.5441,"{'n_total': 257, 'n_valid': 31, 'n_correct': 26}",66.357101,"public byte returnByte(byte in) { if (!initialised) { throw new IllegalStateException(getAlgorithmName() + "" not initialised""); } return (byte) (in ^ getKeyStream()); }","byte returnByte(byte in){if(initialised){("""");}(in());}","['public', 'byte', 'returnByte', '(', 'byte', 'in', ')', '{', 'if', '(', '!', 'initialised', ')', '{', 'throw', 'new', 'IllegalStateException', '(', 'getAlgorithmName', '(', ')', '+', '"" not initialised""', ')', ';', '}', 'return', '(', 'byte', ')', '(', 'in', '^', 'getKeyStream', '(', ')', ')', ';', '}']","['byte', 'returnByte', '(', 'byte', 'in', ')', '{', 'if', '(', 'initialised', ')', '{', '(', '""""', ')', ';', '}', '(', 'in', '(', ')', ')', ';', '}']",39,24,6,168,55,16,74.3421052631579,45.45454545454545,,,,-1,-1,-1,-1,False
L36_standardHttpTestCase_1.txt,code2seq,METHOD_NAME,token_wrong,0.6094,0.3336,33.9112,31.4661,"{'n_total': 398, 'n_valid': 45, 'n_correct': 31}",98.055266,"private void standardHttpTestCase(ResourceAddress address) throws Exception { final CountDownLatch latch = new CountDownLatch(1); final IoHandler acceptHandler = new IoHandlerAdapter<HttpAcceptSession>() { @Override protected void doSessionOpened(HttpAcceptSession session) throws Exception { latch.countDown(); session.close(true); } }; acceptor.bind(address, acceptHandler); k3po.finish(); assertTrue(latch.await(4, SECONDS)); }","void standardHttpTestCase(ResourceAddress address){latch=new IoHandlerAdapter<HttpAcceptSession>(){void doSessionOpened(HttpAcceptSession session)throws Exception{}};acceptor();finish();assertTrue(latch(4,SECONDS));}","['private', 'void', 'standardHttpTestCase', '(', 'ResourceAddress', 'address', ')', 'throws', 'Exception', '{', 'final', 'CountDownLatch', 'latch', '=', 'new', 'CountDownLatch', '(', '1', ')', ';', 'final', 'IoHandler', 'acceptHandler', '=', 'new', 'IoHandlerAdapter', '<', 'HttpAcceptSession', '>', '(', ')', '{', '@', 'Override', 'protected', 'void', 'doSessionOpened', '(', 'HttpAcceptSession', 'session', ')', 'throws', 'Exception', '{', 'latch', '.', 'countDown', '(', ')', ';', 'session', '.', 'close', '(', 'true', ')', ';', '}', '}', ';', 'acceptor', '.', 'bind', '(', 'address', ',', 'acceptHandler', ')', ';', 'k3po', '.', 'finish', '(', ')', ';', 'assertTrue', '(', 'latch', '.', 'await', '(', '4', ',', 'SECONDS', ')', ')', ';', '}']","['void', 'standardHttpTestCase', '(', 'ResourceAddress', 'address', ')', '{', 'latch', '=', 'new', 'IoHandlerAdapter', '<', 'HttpAcceptSession', '>', '(', ')', '{', 'void', 'doSessionOpened', '(', 'HttpAcceptSession', 'session', ')', 'throws', 'Exception', '{', '}', '}', ';', 'acceptor', '(', ')', ';', 'finish', '(', ')', ';', 'assertTrue', '(', 'latch', '(', '4', ',', 'SECONDS', ')', ')', ';', '}']",88,48,6,430,216,26,52.97029702970298,48.78048780487805,,,,-1,-1,-1,-1,False
L37_setLabelLexicon_1.txt,code2seq,METHOD_NAME,token_wrong,0.9231,0.7413,8.3472,6.485,"{'n_total': 186, 'n_valid': 24, 'n_correct': 18}",49.779868,public void setLabelLexicon(edu.illinois.cs.cogcomp.lbjava.learn.Lexicon a0) { if (isClone) { loadInstance(); instance.setLabelLexicon(a0); return; } super.setLabelLexicon(a0); },void setLabelLexicon(edu a){if(isClone){}super.setLabelLexicon(0);},"['public', 'void', 'setLabelLexicon', '(', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'learn', '.', 'Lexicon', 'a0', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'instance', '.', 'setLabelLexicon', '(', 'a0', ')', ';', 'return', ';', '}', 'super', '.', 'setLabelLexicon', '(', 'a0', ')', ';', '}']","['void', 'setLabelLexicon', '(', 'edu', 'a', ')', '{', 'if', '(', 'isClone', ')', '{', '}', 'super', '.', 'setLabelLexicon', '(', '0', ')', ';', '}']",47,21,6,178,67,21,70.70063694267516,63.41463414634146,,,,-1,-1,-1,-1,False
L38_registerWithOtherMods_1.txt,code2seq,METHOD_NAME,token_wrong,0.6851,0.6133,39.4154,40.2018,"{'n_total': 141, 'n_valid': 21, 'n_correct': 17}",43.747028,void registerWithOtherMods() { ModHelperBase modHelper; ModHelperBase.detectMods(); modHelper = new ModHelperComputerCraft(); modHelper.register(); modHelper = new ModHelperMekanism(); modHelper.register(); },void registerWithOtherMods(){ModHelperBase;modHelper=register();},"['void', 'registerWithOtherMods', '(', ')', '{', 'ModHelperBase', 'modHelper', ';', 'ModHelperBase', '.', 'detectMods', '(', ')', ';', 'modHelper', '=', 'new', 'ModHelperComputerCraft', '(', ')', ';', 'modHelper', '.', 'register', '(', ')', ';', 'modHelper', '=', 'new', 'ModHelperMekanism', '(', ')', ';', 'modHelper', '.', 'register', '(', ')', ';', '}']","['void', 'registerWithOtherMods', '(', ')', '{', 'ModHelperBase', ';', 'modHelper', '=', 'register', '(', ')', ';', '}']",41,14,6,208,65,27,79.00552486187846,77.14285714285715,,,,-1,-1,-1,-1,False
L39_printMatchedRules_1.txt,code2seq,METHOD_NAME,token_wrong,0.4668,0.5353,10.7311,13.1475,"{'n_total': 511, 'n_valid': 54, 'n_correct': 36}",116.521496,"private void printMatchedRules(ArrayList<Rule> matchedRules) { if (matchedRules != null && !matchedRules.isEmpty()) { for (Rule r : matchedRules) { Log.write(LoggerType.INFO, ""Matched rule: "" + r.getDesc()); Log.write(LoggerType.INFO, ""Rule details:"" + r.toString()); } } }","void printMatchedRules(ArrayList<Rule>matchedRules){if(isEmpty()){for(Rule r:matchedRules){(LoggerTyper);Log.write(LoggerTypeINFO,""Rule details"");}}}","['private', 'void', 'printMatchedRules', '(', 'ArrayList', '<', 'Rule', '>', 'matchedRules', ')', '{', 'if', '(', 'matchedRules', '!=', 'null', '&&', '!', 'matchedRules', '.', 'isEmpty', '(', ')', ')', '{', 'for', '(', 'Rule', 'r', ':', 'matchedRules', ')', '{', 'Log', '.', 'write', '(', 'LoggerType', '.', 'INFO', ',', '""Matched rule: ""', '+', 'r', '.', 'getDesc', '(', ')', ')', ';', 'Log', '.', 'write', '(', 'LoggerType', '.', 'INFO', ',', '""Rule details:""', '+', 'r', '.', 'toString', '(', ')', ')', ';', '}', '}', '}']","['void', 'printMatchedRules', '(', 'ArrayList', '<', 'Rule', '>', 'matchedRules', ')', '{', 'if', '(', 'isEmpty', '(', ')', ')', '{', 'for', '(', 'Rule', 'r', ':', 'matchedRules', ')', '{', '(', 'LoggerTyper', ')', ';', 'Log', '.', 'write', '(', 'LoggerTypeINFO', ',', '""Rule details""', ')', ';', '}', '}', '}']",70,41,6,273,149,23,49.6,45.3125,,,,-1,-1,-1,-1,False
L40_max_1.txt,code2seq,METHOD_NAME,token_wrong,0.633,0.2428,5.8214,5.3658,"{'n_total': 383, 'n_valid': 37, 'n_correct': 32}",80.667924,"public double max(int i) { if (i < 0 || i >= sizes.size()) throw new ArrayIndexOutOfBoundsException(""Attempted to access negative index of DVector2D.""); double result = -Double.MAX_VALUE; int size = sizes.get(i); for (int j = 0; j < size; ++j) if (vector[i][j] > result) result = vector[i][j]; return result; }",double max(int i){if(size())for(;j<size;)if(vector[i]>result)vector[i];},"['public', 'double', 'max', '(', 'int', 'i', ')', '{', 'if', '(', 'i', '<', '0', '||', 'i', '>=', 'sizes', '.', 'size', '(', ')', ')', 'throw', 'new', 'ArrayIndexOutOfBoundsException', '(', '""Attempted to access negative index of DVector2D.""', ')', ';', 'double', 'result', '=', '-', 'Double', '.', 'MAX_VALUE', ';', 'int', 'size', '=', 'sizes', '.', 'get', '(', 'i', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'size', ';', '++', 'j', ')', 'if', '(', 'vector', '[', 'i', ']', '[', 'j', ']', '>', 'result', ')', 'result', '=', 'vector', '[', 'i', ']', '[', 'j', ']', ';', 'return', 'result', ';', '}']","['double', 'max', '(', 'int', 'i', ')', '{', 'if', '(', 'size', '(', ')', ')', 'for', '(', ';', 'j', '<', 'size', ';', ')', 'if', '(', 'vector', '[', 'i', ']', '>', 'result', ')', 'vector', '[', 'i', ']', ';', '}']",87,36,6,310,72,9,79.06976744186046,62.96296296296296,,,,-1,-1,-1,-1,False
L41_getSupportedIdTypes_1.txt,code2seq,METHOD_NAME,token_wrong,0.5982,0.9259,19.5068,25.7023,"{'n_total': 161, 'n_valid': 30, 'n_correct': 23}",63.809872,"public Set getSupportedIdTypes() throws IdRepoException, SSOException { IdServices idServices = IdServicesFactory.getDataStoreServices(); Set res = idServices.getSupportedTypes(token, organizationDN); res.remove(IdType.REALM); return res; }",Set getSupportedIdTypes(){getSupportedTypes();},"['public', 'Set', 'getSupportedIdTypes', '(', ')', 'throws', 'IdRepoException', ',', 'SSOException', '{', 'IdServices', 'idServices', '=', 'IdServicesFactory', '.', 'getDataStoreServices', '(', ')', ';', 'Set', 'res', '=', 'idServices', '.', 'getSupportedTypes', '(', 'token', ',', 'organizationDN', ')', ';', 'res', '.', 'remove', '(', 'IdType', '.', 'REALM', ')', ';', 'return', 'res', ';', '}']","['Set', 'getSupportedIdTypes', '(', ')', '{', 'getSupportedTypes', '(', ')', ';', '}']",44,10,6,240,47,25,89.76744186046511,89.47368421052632,,,,-1,-1,-1,-1,False
L42_getKeys_1.txt,code2seq,METHOD_NAME,token_wrong,0.9626,0.7909,0.1284,0.8851,"{'n_total': 321, 'n_valid': 39, 'n_correct': 28}",80.061266,public synchronized List<ByteSequence> getKeys() { if (keys == null) { keys = getResponse().getKeysList().stream().map(byteStrings -> ByteSequence.fromBytes(byteStrings.toByteArray())).collect(Collectors.toList()); } return keys; },List<ByteSequence>getKeys(){if(keys=null){keys.getKeysList().map();}keys;},"['public', 'synchronized', 'List', '<', 'ByteSequence', '>', 'getKeys', '(', ')', '{', 'if', '(', 'keys', '==', 'null', ')', '{', 'keys', '=', 'getResponse', '(', ')', '.', 'getKeysList', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 'byteStrings', '->', 'ByteSequence', '.', 'fromBytes', '(', 'byteStrings', '.', 'toByteArray', '(', ')', ')', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', '}', 'return', 'keys', ';', '}']","['List', '<', 'ByteSequence', '>', 'getKeys', '(', ')', '{', 'if', '(', 'keys', '=', 'null', ')', '{', 'keys', '.', 'getKeysList', '(', ')', '.', 'map', '(', ')', ';', '}', 'keys', ';', '}']",61,29,6,231,74,13,72.01834862385321,58.18181818181818,,,,-1,-1,-1,-1,False
L43_calculateMac_1.txt,code2seq,METHOD_NAME,token_wrong,0.2255,0.5499,7.9865,15.3869,"{'n_total': 413, 'n_valid': 40, 'n_correct': 34}",86.950157,"public byte[] calculateMac(byte[] pwd, byte[] data) throws CRMFException { try { mac.init(new SecretKeySpec(pwd, mac.getAlgorithm())); return mac.doFinal(data); } catch (InvalidKeyException e) { throw new CRMFException(""failure in setup: "" + e.getMessage(), e); } }","byte[]calculateMac(byte[]pwd,byte[]data)throws CRMFException{try{init(new SecretKeySpec(getAlgorithm()));}catch(InvalidKeyException e){CRMFException(""""+e);}}","['public', 'byte', '[', ']', 'calculateMac', '(', 'byte', '[', ']', 'pwd', ',', 'byte', '[', ']', 'data', ')', 'throws', 'CRMFException', '{', 'try', '{', 'mac', '.', 'init', '(', 'new', 'SecretKeySpec', '(', 'pwd', ',', 'mac', '.', 'getAlgorithm', '(', ')', ')', ')', ';', 'return', 'mac', '.', 'doFinal', '(', 'data', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'throw', 'new', 'CRMFException', '(', '""failure in setup: ""', '+', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}']","['byte', '[', ']', 'calculateMac', '(', 'byte', '[', ']', 'pwd', ',', 'byte', '[', ']', 'data', ')', 'throws', 'CRMFException', '{', 'try', '{', 'init', '(', 'new', 'SecretKeySpec', '(', 'getAlgorithm', '(', ')', ')', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'CRMFException', '(', '""""', '+', 'e', ')', ';', '}', '}']",70,47,6,265,157,18,43.7246963562753,35.9375,,,,-1,-1,-1,-1,False
L44_encDecEncodingTest_1.txt,code2seq,METHOD_NAME,token_wrong,0.9574,0.9429,38.1107,39.5455,"{'n_total': 132, 'n_valid': 16, 'n_correct': 15}",35.402684,private BigInteger encDecEncodingTest(BigInteger m) { CramerShoupCiphertext ciphertext = encrypt(m); byte[] c = ciphertext.toByteArray(); CramerShoupCiphertext decC = new CramerShoupCiphertext(c); return decrypt(decC); },BigInteger encDecEncodingTest(BigInteger m){CramerShoupCiphertext=decrypt();},"['private', 'BigInteger', 'encDecEncodingTest', '(', 'BigInteger', 'm', ')', '{', 'CramerShoupCiphertext', 'ciphertext', '=', 'encrypt', '(', 'm', ')', ';', 'byte', '[', ']', 'c', '=', 'ciphertext', '.', 'toByteArray', '(', ')', ';', 'CramerShoupCiphertext', 'decC', '=', 'new', 'CramerShoupCiphertext', '(', 'c', ')', ';', 'return', 'decrypt', '(', 'decC', ')', ';', '}']","['BigInteger', 'encDecEncodingTest', '(', 'BigInteger', 'm', ')', '{', 'CramerShoupCiphertext', '=', 'decrypt', '(', ')', ';', '}']",43,14,6,220,77,24,72.95918367346938,78.37837837837837,,,,-1,-1,-1,-1,False
L45_bounceBackHeader_1.txt,code2seq,METHOD_NAME,token_wrong,0.6367,0.3597,27.4865,17.4119,"{'n_total': 480, 'n_valid': 57, 'n_correct': 46}",125.601662,"private void bounceBackHeader() { int yTranslate = state == State.REFRESHING ? header.getHeight() - headerContainer.getHeight() : -headerContainer.getHeight() - headerContainer.getTop(); bounceAnimation = new TranslateAnimation(TranslateAnimation.ABSOLUTE, 0, TranslateAnimation.ABSOLUTE, 0, TranslateAnimation.ABSOLUTE, 0, TranslateAnimation.ABSOLUTE, yTranslate); bounceAnimation.setDuration(BOUNCE_ANIMATION_DURATION); bounceAnimation.setFillEnabled(true); bounceAnimation.setFillAfter(false); bounceAnimation.setFillBefore(true); bounceAnimation.setAnimationListener(new HeaderAnimationListener(yTranslate)); startAnimation(bounceAnimation); }",void bounceBackHeader(){yTranslate=REFRESHING?getHeight()-headerContainer:headerContainer;bounceAnimation(true).setFillAfter();(HeaderAnimationListener());},"['private', 'void', 'bounceBackHeader', '(', ')', '{', 'int', 'yTranslate', '=', 'state', '==', 'State', '.', 'REFRESHING', '?', 'header', '.', 'getHeight', '(', ')', '-', 'headerContainer', '.', 'getHeight', '(', ')', ':', '-', 'headerContainer', '.', 'getHeight', '(', ')', '-', 'headerContainer', '.', 'getTop', '(', ')', ';', 'bounceAnimation', '=', 'new', 'TranslateAnimation', '(', 'TranslateAnimation', '.', 'ABSOLUTE', ',', '0', ',', 'TranslateAnimation', '.', 'ABSOLUTE', ',', '0', ',', 'TranslateAnimation', '.', 'ABSOLUTE', ',', '0', ',', 'TranslateAnimation', '.', 'ABSOLUTE', ',', 'yTranslate', ')', ';', 'bounceAnimation', '.', 'setDuration', '(', 'BOUNCE_ANIMATION_DURATION', ')', ';', 'bounceAnimation', '.', 'setFillEnabled', '(', 'true', ')', ';', 'bounceAnimation', '.', 'setFillAfter', '(', 'false', ')', ';', 'bounceAnimation', '.', 'setFillBefore', '(', 'true', ')', ';', 'bounceAnimation', '.', 'setAnimationListener', '(', 'new', 'HeaderAnimationListener', '(', 'yTranslate', ')', ')', ';', 'startAnimation', '(', 'bounceAnimation', ')', ';', '}']","['void', 'bounceBackHeader', '(', ')', '{', 'yTranslate', '=', 'REFRESHING', '?', 'getHeight', '(', ')', '-', 'headerContainer', ':', 'headerContainer', ';', 'bounceAnimation', '(', 'true', ')', '.', 'setFillAfter', '(', ')', ';', '(', 'HeaderAnimationListener', '(', ')', ')', ';', '}']",115,33,6,647,156,22,78.56,75.22935779816514,,,,-1,-1,-1,-1,False
L46_next_2.txt,code2seq,METHOD_NAME,token_wrong,0.6813,0.5618,7.0533,4.9425,"{'n_total': 227, 'n_valid': 44, 'n_correct': 23}",93.516153,"public Instance next() { Instance carrier = new Instance(nextGroup, null, ""parengroup"" + (groupIdx++), null); nextGroup = getNextGroup(); return carrier; }",Instance next(){carrier=new Instance((groupIdx));nextGroup=getNextGroup;carrier;},"['public', 'Instance', 'next', '(', ')', '{', 'Instance', 'carrier', '=', 'new', 'Instance', '(', 'nextGroup', ',', 'null', ',', '""parengroup""', '+', '(', 'groupIdx', '++', ')', ',', 'null', ')', ';', 'nextGroup', '=', 'getNextGroup', '(', ')', ';', 'return', 'carrier', ';', '}']","['Instance', 'next', '(', ')', '{', 'carrier', '=', 'new', 'Instance', '(', '(', 'groupIdx', ')', ')', ';', 'nextGroup', '=', 'getNextGroup', ';', 'carrier', ';', '}']",36,22,6,155,81,10,51.03448275862069,46.666666666666664,,,,-1,-1,-1,-1,False
L47_createRawValidator_1.txt,code2seq,METHOD_NAME,token_wrong,0.668,0.4722,25.9532,27.6201,"{'n_total': 1366, 'n_valid': 375, 'n_correct': 129}",729.285758,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"" + ""n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"" + ""mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"" + ""on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"" + ""expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"" + ""p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0007sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"" + ""\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.su"" + ""n.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttrib"" + ""utesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000bp\u0000sq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv"" + "".grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unar"" + ""yExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000 com.sun.msv.gramma"" + ""r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q"" + ""\u0000~\u0000\u000bpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\n\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameC"" + ""lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"" + ""psr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000"" + ""~\u0000\u001fxq\u0000~\u0000\u001at\u00004com.sun.identity.saml2.jaxb.xmlsig.TransformsEle"" + ""mentt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fq\u0000~\u0000"" + ""\u000bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0011q\u0000~\u0000\u000bpsq\u0000~\u0000\u0014q\u0000~\u0000\u000bpq\u0000~\u0000\u0017q\u0000~"" + ""\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001com.sun.identity.saml2.jaxb.xmlsig.Transform"" + ""sTypeq\u0000~\u0000\""sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0014q\u0000~\u0000\u000bpsr\u0000\u001bcom.sun.msv.grammar.DataEx"" + ""p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"" + ""q\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\""com."" + ""sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"" + ""atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"" + ""pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"" + ""SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001f"" + ""L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"" + ""r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.m"" + ""sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"" + ""om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000"" + ""com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"" + ""q\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloca"" + ""lNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00008q\u0000~\u00007sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)ht"" + ""tp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nTransfo"" + ""rmst\u0000\""http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0014q"" + ""\u0000~\u0000\u000bpsq\u0000~\u0000-q\u0000~\u0000\u000bpsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00007t\u0000\u0006anyURIq\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u0000>q\u0000~\u0000Kq\u0000~\u00007sq\u0000~\u0000\u001et"" + ""\u0000\u0004Typet\u0000\u0000q\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0014q\u0000~\u0000\u000bpq\u0000~\u0000Hsq\u0000~\u0000\u001et\u0000\u0003URIq\u0000~\u0000Oq\u0000~\u0000"" + ""\u001dsr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"" + ""et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"" + "".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005coun"" + ""tB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression"" + ""Pool;xp\u0000\u0000\u0000\f\u0001pq\u0000~\u0000\u0010q\u0000~\u0000&q\u0000~\u0000$q\u0000~\u0000\u0005q\u0000~\u0000\u0006q\u0000~\u0000\u0013q\u0000~\u0000\'q\u0000~\u0000Pq\u0000~\u0000\bq\u0000"" + ""~\u0000Fq\u0000~\u0000+q\u0000~\u0000\tx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragment){schemaFragment=((""""+""""+""sun""+""rstreamVersionL""+""""+""tx""));}return sun.msv(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\x1fcom.sun.msv.grammar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.su""', '+', '""n.msv.grammar.BinaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1t\x00 Lcom/sun/msv/gra""', '+', '""mmar/Expression;L\x00\x04exp2q\x00~\x00\x02xr\x00\x1ecom.sun.msv.grammar.Expressi""', '+', '""onø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0b""', '+', '""expandedExpq\x00~\x00\x02xpppsq\x00~\x00\x00ppsr\x00\x1dcom.sun.msv.grammar.ChoiceEx""', '+', '""p\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x01ppsq\x00~\x00\x07sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00""', '+', '""\x05valuexp\x00psr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x01L\x00\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.su""', '+', '""n.msv.grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttrib""', '+', '""utesL\x00\\fcontentModelq\x00~\x00\x02xq\x00~\x00\x03q\x00~\x00\x0bp\x00sq\x00~\x00\x07ppsr\x00 com.sun.msv""', '+', '"".grammar.OneOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.Unar""', '+', '""yExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x02xq\x00~\x00\x03q\x00~\x00\x0bpsr\x00 com.sun.msv.gramma""', '+', '""r.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x02L\x00\\tnameClassq\x00~\x00\\rxq\x00~\x00\x03q""', '+', '""\x00~\x00\x0bpsr\x002com.sun.msv.grammar.Expression$AnyStringExpression\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03sq\x00~\x00\\n\x01q\x00~\x00\x17sr\x00 com.sun.msv.grammar.AnyNameC""', '+', '""lass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00x""', '+', '""psr\x000com.sun.msv.grammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x18q\x00~\x00\x1dsr\x00#com.sun.msv.grammar.SimpleNameClass\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang/String;L\x00\\fnamespaceURIq\x00""', '+', '""~\x00\x1fxq\x00~\x00\x1at\x004com.sun.identity.saml2.jaxb.xmlsig.TransformsEle""', '+', '""mentt\x00+http://java.sun.com/jaxb/xjc/dummy-elementssq\x00~\x00\\fq\x00~\x00""', '+', '""\x0bp\x00sq\x00~\x00\x00ppsq\x00~\x00\\fpp\x00sq\x00~\x00\x07ppsq\x00~\x00\x11q\x00~\x00\x0bpsq\x00~\x00\x14q\x00~\x00\x0bpq\x00~\x00\x17q\x00~""', '+', '""\x00\x1bq\x00~\x00\x1dsq\x00~\x00\x1et\x001com.sun.identity.saml2.jaxb.xmlsig.Transform""', '+', '""sTypeq\x00~\x00\\""sq\x00~\x00\x07ppsq\x00~\x00\x14q\x00~\x00\x0bpsr\x00\x1bcom.sun.msv.grammar.DataEx""', '+', '""p\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06except""', '+', '""q\x00~\x00\x02L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x03ppsr\x00\\""com.""', '+', '""sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.dat""', '+', '""atype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.dataty""', '+', '""pe.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.X""', '+', '""SDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUriq\x00~\x00\x1fL\x00\\btypeNameq\x00~\x00\x1f""', '+', '""L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso""', '+', '""r;xpt\x00 http://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.sun.m""', '+', '""sv.datatype.xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,c""', '+', '""om.sun.msv.datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000""', '+', '""com.sun.msv.grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00x""', '+', '""q\x00~\x00\x03q\x00~\x00\x0bpsr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tloca""', '+', '""lNameq\x00~\x00\x1fL\x00\\fnamespaceURIq\x00~\x00\x1fxpq\x00~\x008q\x00~\x007sq\x00~\x00\x1et\x00\x04typet\x00)ht""', '+', '""tp://www.w3.org/2001/XMLSchema-instanceq\x00~\x00\x1dsq\x00~\x00\x1et\x00\\nTransfo""', '+', '""rmst\x00\\""http://www.w3.org/2000/09/xmldsig#q\x00~\x00\x1dsq\x00~\x00\x07ppsq\x00~\x00\x14q""', '+', '""\x00~\x00\x0bpsq\x00~\x00-q\x00~\x00\x0bpsr\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00""', '+', '""\x00\x00\x00\x01\x02\x00\x00xq\x00~\x002q\x00~\x007t\x00\x06anyURIq\x00~\x00;q\x00~\x00=sq\x00~\x00>q\x00~\x00Kq\x00~\x007sq\x00~\x00\x1et""', '+', '""\x00\x04Typet\x00\x00q\x00~\x00\x1dsq\x00~\x00\x07ppsq\x00~\x00\x14q\x00~\x00\x0bpq\x00~\x00Hsq\x00~\x00\x1et\x00\x03URIq\x00~\x00Oq\x00~\x00""', '+', '""\x1dsr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTabl""', '+', '""et\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-com""', '+', '"".sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05coun""', '+', '""tB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expression""', '+', '""Pool;xp\x00\x00\x00\\f\x01pq\x00~\x00\x10q\x00~\x00&q\x00~\x00$q\x00~\x00\x05q\x00~\x00\x06q\x00~\x00\x13q\x00~\x00\\\'q\x00~\x00Pq\x00~\x00\\bq\x00""', '+', '""~\x00Fq\x00~\x00+q\x00~\x00\\tx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', 'schemaFragment', '=', '(', '(', '""""', '+', '""""', '+', '""sun""', '+', '""rstreamVersionL""', '+', '""""', '+', '""tx""', ')', ')', ';', '}', 'return', 'sun', '.', 'msv', '(', 'schemaFragment', ')', ';', '}']",155,42,6,6590,163,24,97.88303381053915,75.83892617449665,,,,-1,-1,-1,-1,False
L48_construct_1.txt,code2seq,METHOD_NAME,token_wrong,0.2408,0.3843,7.279,7.6239,"{'n_total': 392, 'n_valid': 66, 'n_correct': 29}",142.550719,"@Override protected Query construct(LindenQuery lindenQuery, LindenConfig config) throws IOException { if (lindenQuery.isSetWildcardQuery()) { LindenWildcardQuery lindenWildcardQuery = lindenQuery.getWildcardQuery(); return new WildcardQuery(new Term(lindenWildcardQuery.getField(), lindenWildcardQuery.getQuery())); } return null; }","@Override Query construct(LindenQuery config)throws IOException{if(lindenQuery.isSetWildcardQuery()){lindenWildcardQuery=getWildcardQuery;(Term(lindenWildcardQuery.getField(),getQuery));}}","['@', 'Override', 'protected', 'Query', 'construct', '(', 'LindenQuery', 'lindenQuery', ',', 'LindenConfig', 'config', ')', 'throws', 'IOException', '{', 'if', '(', 'lindenQuery', '.', 'isSetWildcardQuery', '(', ')', ')', '{', 'LindenWildcardQuery', 'lindenWildcardQuery', '=', 'lindenQuery', '.', 'getWildcardQuery', '(', ')', ';', 'return', 'new', 'WildcardQuery', '(', 'new', 'Term', '(', 'lindenWildcardQuery', '.', 'getField', '(', ')', ',', 'lindenWildcardQuery', '.', 'getQuery', '(', ')', ')', ')', ';', '}', 'return', 'null', ';', '}']","['@', 'Override', 'Query', 'construct', '(', 'LindenQuery', 'config', ')', 'throws', 'IOException', '{', 'if', '(', 'lindenQuery', '.', 'isSetWildcardQuery', '(', ')', ')', '{', 'lindenWildcardQuery', '=', 'getWildcardQuery', ';', '(', 'Term', '(', 'lindenWildcardQuery', '.', 'getField', '(', ')', ',', 'getQuery', ')', ')', ';', '}', '}']",59,39,6,333,188,15,45.59748427672956,37.735849056603776,,,,-1,-1,-1,-1,False
L49_getAllSignupMeetings_1.txt,code2seq,METHOD_NAME,token_wrong,0.5344,0.8382,24.3313,26.4457,"{'n_total': 390, 'n_valid': 44, 'n_correct': 36}",94.73243,"public List<SignupMeetingWrapper> getAllSignupMeetings() { try { loadMeetings(VIEW_ALL, null); } catch (Exception e) { log.error(Utilities.rb.getString(""failed.fetch_allEvents_from_db"") + "" - "" + e.getMessage()); Utilities.addErrorMessage(Utilities.rb.getString(""failed.fetch_allEvents_from_db"")); } return signupMeetings; }","List getAllSignupMeetings(){try{(VIEW);}catch(Exception e){(Utilities(""""));((""""));}signupMeetings;}","['public', 'List', '<', 'SignupMeetingWrapper', '>', 'getAllSignupMeetings', '(', ')', '{', 'try', '{', 'loadMeetings', '(', 'VIEW_ALL', ',', 'null', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'Utilities', '.', 'rb', '.', 'getString', '(', '""failed.fetch_allEvents_from_db""', ')', '+', '"" - ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'Utilities', '.', 'addErrorMessage', '(', 'Utilities', '.', 'rb', '.', 'getString', '(', '""failed.fetch_allEvents_from_db""', ')', ')', ';', '}', 'return', 'signupMeetings', ';', '}']","['List', 'getAllSignupMeetings', '(', ')', '{', 'try', '{', '(', 'VIEW', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'Utilities', '(', '""""', ')', ')', ';', '(', '(', '""""', ')', ')', ';', '}', 'signupMeetings', ';', '}']",66,35,6,324,99,26,75.50335570469798,51.66666666666667,,,,-1,-1,-1,-1,False
L50_removeGalleryImage_1.txt,code2seq,METHOD_NAME,token_wrong,0.7054,0.604,9.9373,12.2295,"{'n_total': 389, 'n_valid': 37, 'n_correct': 35}",82.127724,"@Override public boolean removeGalleryImage(final GalleryImage galleryImage) { try { getHibernateTemplate().delete(galleryImage); return true; } catch (final Exception e) { log.error(""removeGalleryImage failed. "" + e.getClass() + "": "" + e.getMessage()); return false; } }","boolean removeGalleryImage(GalleryImage galleryImage){try{getHibernateTemplate().delete;}catch(Exception e){("""".getClass()+"""".getMessage());}}","['@', 'Override', 'public', 'boolean', 'removeGalleryImage', '(', 'final', 'GalleryImage', 'galleryImage', ')', '{', 'try', '{', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', 'galleryImage', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', '""removeGalleryImage failed. ""', '+', 'e', '.', 'getClass', '(', ')', '+', '"": ""', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', 'false', ';', '}', '}']","['boolean', 'removeGalleryImage', '(', 'GalleryImage', 'galleryImage', ')', '{', 'try', '{', 'getHibernateTemplate', '(', ')', '.', 'delete', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', '.', 'getClass', '(', ')', '+', '""""', '.', 'getMessage', '(', ')', ')', ';', '}', '}']",59,38,6,271,142,24,52.226720647773284,39.62264150943396,,,,-1,-1,-1,-1,False
L51_givenRegisteredBroadcastReceiver_1.txt,code2seq,METHOD_NAME,token_wrong,0.6584,0.7807,30.0483,30.4401,"{'n_total': 353, 'n_valid': 40, 'n_correct': 27}",88.922794,"private ArgumentCaptor<ConnectivityReceiver> givenRegisteredBroadcastReceiver() { given(androidVersion.isLollipopOrHigher()).willReturn(false); connectivityChangesRegister.register(connectivityChangesNotifier); ArgumentCaptor<ConnectivityReceiver> argumentCaptor = ArgumentCaptor.forClass(ConnectivityReceiver.class); verify(context).registerReceiver(argumentCaptor.capture(), refEq(new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION))); return argumentCaptor; }",ArgumentCaptor<ConnectivityReceiver>givenRegisteredBroadcastReceiver(){given().willReturn;connectivityChangesRegister.register();ArgumentCaptor<ConnectivityReceiver>argumentCaptor=(context)((IntentFilter()));},"['private', 'ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'givenRegisteredBroadcastReceiver', '(', ')', '{', 'given', '(', 'androidVersion', '.', 'isLollipopOrHigher', '(', ')', ')', '.', 'willReturn', '(', 'false', ')', ';', 'connectivityChangesRegister', '.', 'register', '(', 'connectivityChangesNotifier', ')', ';', 'ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'argumentCaptor', '=', 'ArgumentCaptor', '.', 'forClass', '(', 'ConnectivityReceiver', '.', 'class', ')', ';', 'verify', '(', 'context', ')', '.', 'registerReceiver', '(', 'argumentCaptor', '.', 'capture', '(', ')', ',', 'refEq', '(', 'new', 'IntentFilter', '(', 'ConnectivityManager', '.', 'CONNECTIVITY_ACTION', ')', ')', ')', ';', 'return', 'argumentCaptor', ';', '}']","['ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'givenRegisteredBroadcastReceiver', '(', ')', '{', 'given', '(', ')', '.', 'willReturn', ';', 'connectivityChangesRegister', '.', 'register', '(', ')', ';', 'ArgumentCaptor', '<', 'ConnectivityReceiver', '>', 'argumentCaptor', '=', '(', 'context', ')', '(', '(', 'IntentFilter', '(', ')', ')', ')', ';', '}']",74,38,6,468,209,38,60.23255813953489,52.94117647058824,,,,-1,-1,-1,-1,False
L52_isThisItemDistractor_1.txt,code2seq,METHOD_NAME,token_wrong,0.4075,0.4083,21.6608,24.4577,"{'n_total': 325, 'n_valid': 35, 'n_correct': 26}",75.278042,"private boolean isThisItemDistractor(ItemDataIfc item, ItemGradingData thisItemGradingData) { for (ItemTextIfc curItem : item.getItemTextArraySorted()) { if (isDistractor(curItem) && curItem.getId().equals(thisItemGradingData.getPublishedItemTextId())) { return true; } } return false; }","boolean isThisItemDistractor(ItemDataIfc item,ItemGradingData thisItemGradingData){for(ItemTextIfc curItem:item()){if((thisItemGradingData.getPublishedItemTextId)){}}}","['private', 'boolean', 'isThisItemDistractor', '(', 'ItemDataIfc', 'item', ',', 'ItemGradingData', 'thisItemGradingData', ')', '{', 'for', '(', 'ItemTextIfc', 'curItem', ':', 'item', '.', 'getItemTextArraySorted', '(', ')', ')', '{', 'if', '(', 'isDistractor', '(', 'curItem', ')', '&&', 'curItem', '.', 'getId', '(', ')', '.', 'equals', '(', 'thisItemGradingData', '.', 'getPublishedItemTextId', '(', ')', ')', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'isThisItemDistractor', '(', 'ItemDataIfc', 'item', ',', 'ItemGradingData', 'thisItemGradingData', ')', '{', 'for', '(', 'ItemTextIfc', 'curItem', ':', 'item', '(', ')', ')', '{', 'if', '(', '(', 'thisItemGradingData', '.', 'getPublishedItemTextId', ')', ')', '{', '}', '}', '}']",55,32,6,287,167,26,45.97701149425287,46.93877551020408,,,,-1,-1,-1,-1,False
L53_testGetMatchPositions_1.txt,code2seq,METHOD_NAME,token_wrong,0.7309,0.6898,23.325,19.8976,"{'n_total': 287, 'n_valid': 34, 'n_correct': 23}",73.810981,"@Test public void testGetMatchPositions() { for (Tree<String> p : foundPatterns) { TreeGrep<String> matcher = new TreeGrep<>(p); boolean result = matcher.matches(tree); assertEquals(true, result); } }",void testGetMatchPositions(){for(Tree<String>p:foundPatterns){matcher=new TreeGrep<>();matches(tree);assertEquals(result);}},"['@', 'Test', 'public', 'void', 'testGetMatchPositions', '(', ')', '{', 'for', '(', 'Tree', '<', 'String', '>', 'p', ':', 'foundPatterns', ')', '{', 'TreeGrep', '<', 'String', '>', 'matcher', '=', 'new', 'TreeGrep', '<', '>', '(', 'p', ')', ';', 'boolean', 'result', '=', 'matcher', '.', 'matches', '(', 'tree', ')', ';', 'assertEquals', '(', 'true', ',', 'result', ')', ';', '}', '}']","['void', 'testGetMatchPositions', '(', ')', '{', 'for', '(', 'Tree', '<', 'String', '>', 'p', ':', 'foundPatterns', ')', '{', 'matcher', '=', 'new', 'TreeGrep', '<', '>', '(', ')', ';', 'matches', '(', 'tree', ')', ';', 'assertEquals', '(', 'result', ')', ';', '}', '}']",52,37,6,200,124,27,43.93063583815029,32.608695652173914,,,,-1,-1,-1,-1,False
L54_getTextAnnotation_1.txt,code2seq,METHOD_NAME,token_wrong,0.533,0.5186,10.0176,8.9164,"{'n_total': 275, 'n_valid': 35, 'n_correct': 23}",75.493953,"public TextAnnotation getTextAnnotation(String corpusId, String textId, String text) throws ServiceUnavailableException, AnnotationFailedException, TException, SocketException { Record record = getRecord(text); final Labeling tokensLabeling = record.getLabelViews().get(ViewNames.TOKENS); final Labeling sentenceLabeling = record.getLabelViews().get(ViewNames.SENTENCE); return CuratorDataStructureInterface.getTextAnnotationFromRecord(corpusId, textId, record, tokensLabeling, sentenceLabeling); }","TextAnnotation getTextAnnotation(String corpusId,String textId,String text)throws SocketException{(ViewNamesSENTENCE);CuratorDataStructureInterface.getTextAnnotationFromRecord(corpusId,sentenceLabeling);}","['public', 'TextAnnotation', 'getTextAnnotation', '(', 'String', 'corpusId', ',', 'String', 'textId', ',', 'String', 'text', ')', 'throws', 'ServiceUnavailableException', ',', 'AnnotationFailedException', ',', 'TException', ',', 'SocketException', '{', 'Record', 'record', '=', 'getRecord', '(', 'text', ')', ';', 'final', 'Labeling', 'tokensLabeling', '=', 'record', '.', 'getLabelViews', '(', ')', '.', 'get', '(', 'ViewNames', '.', 'TOKENS', ')', ';', 'final', 'Labeling', 'sentenceLabeling', '=', 'record', '.', 'getLabelViews', '(', ')', '.', 'get', '(', 'ViewNames', '.', 'SENTENCE', ')', ';', 'return', 'CuratorDataStructureInterface', '.', 'getTextAnnotationFromRecord', '(', 'corpusId', ',', 'textId', ',', 'record', ',', 'tokensLabeling', ',', 'sentenceLabeling', ')', ';', '}']","['TextAnnotation', 'getTextAnnotation', '(', 'String', 'corpusId', ',', 'String', 'textId', ',', 'String', 'text', ')', 'throws', 'SocketException', '{', '(', 'ViewNamesSENTENCE', ')', ';', 'CuratorDataStructureInterface', '.', 'getTextAnnotationFromRecord', '(', 'corpusId', ',', 'sentenceLabeling', ')', ';', '}']",81,29,6,498,204,23,61.89473684210526,69.33333333333334,,,,-1,-1,-1,-1,False
L55_encodePlaintext_1.txt,code2seq,METHOD_NAME,token_wrong,0.9935,0.9016,17.1939,12.2888,"{'n_total': 569, 'n_valid': 51, 'n_correct': 46}",105.977021,"public byte[] encodePlaintext(long seqNo, short type, byte[] plaintext, int offset, int len) { if (usesNonce) { updateIV(encryptCipher, true, seqNo); } byte[] outBuf = new byte[len + writeMac.getSize()]; encryptCipher.processBytes(plaintext, offset, len, outBuf, 0); byte[] mac = writeMac.calculateMac(seqNo, type, plaintext, offset, len); encryptCipher.processBytes(mac, 0, mac.length, outBuf, len); return outBuf; }","byte[]encodePlaintext(long[]plaintext,int len){if(usesNonce){updateIV();}outBuf[getSize()];encryptCipher();(seqNo);}","['public', 'byte', '[', ']', 'encodePlaintext', '(', 'long', 'seqNo', ',', 'short', 'type', ',', 'byte', '[', ']', 'plaintext', ',', 'int', 'offset', ',', 'int', 'len', ')', '{', 'if', '(', 'usesNonce', ')', '{', 'updateIV', '(', 'encryptCipher', ',', 'true', ',', 'seqNo', ')', ';', '}', 'byte', '[', ']', 'outBuf', '=', 'new', 'byte', '[', 'len', '+', 'writeMac', '.', 'getSize', '(', ')', ']', ';', 'encryptCipher', '.', 'processBytes', '(', 'plaintext', ',', 'offset', ',', 'len', ',', 'outBuf', ',', '0', ')', ';', 'byte', '[', ']', 'mac', '=', 'writeMac', '.', 'calculateMac', '(', 'seqNo', ',', 'type', ',', 'plaintext', ',', 'offset', ',', 'len', ')', ';', 'encryptCipher', '.', 'processBytes', '(', 'mac', ',', '0', ',', 'mac', '.', 'length', ',', 'outBuf', ',', 'len', ')', ';', 'return', 'outBuf', ';', '}']","['byte', '[', ']', 'encodePlaintext', '(', 'long', '[', ']', 'plaintext', ',', 'int', 'len', ')', '{', 'if', '(', 'usesNonce', ')', '{', 'updateIV', '(', ')', ';', '}', 'outBuf', '[', 'getSize', '(', ')', ']', ';', 'encryptCipher', '(', ')', ';', '(', 'seqNo', ')', ';', '}']",112,40,6,417,116,21,76.01010101010101,67.9245283018868,,,,-1,-1,-1,-1,False
L56_sync_1.txt,code2seq,METHOD_NAME,token_wrong,0.9582,0.9069,8.9364,8.1845,"{'n_total': 126, 'n_valid': 14, 'n_correct': 11}",29.798846,protected synchronized void sync() { if (byteBuffer != null) { byteBuffer.force(); } },void sync(){if(byteBuffer){byteBuffer.force();}},"['protected', 'synchronized', 'void', 'sync', '(', ')', '{', 'if', '(', 'byteBuffer', '!=', 'null', ')', '{', 'byteBuffer', '.', 'force', '(', ')', ';', '}', '}']","['void', 'sync', '(', ')', '{', 'if', '(', 'byteBuffer', ')', '{', 'byteBuffer', '.', 'force', '(', ')', ';', '}', '}']",22,18,6,86,48,10,50.0,25.0,,,,-1,-1,-1,-1,False
L57_init_1.txt,code2seq,METHOD_NAME,token_wrong,0.7299,0.6121,4.135,5.1719,"{'n_total': 242, 'n_valid': 30, 'n_correct': 14}",62.002458,"@Override public void init() throws Exception { LindenSchema schema = new LindenSchema().setId(""id""); schema.addToFields(new LindenFieldSchema().setName(""intValue"").setType(LindenType.INTEGER).setDocValues(true)); lindenConfig.setSchema(schema); }","@Override void init()throws Exception{LindenSchema(LindenFieldSchema().setName("""".INTEGER).setDocValues(true));lindenConfig.setSchema;}","['@', 'Override', 'public', 'void', 'init', '(', ')', 'throws', 'Exception', '{', 'LindenSchema', 'schema', '=', 'new', 'LindenSchema', '(', ')', '.', 'setId', '(', '""id""', ')', ';', 'schema', '.', 'addToFields', '(', 'new', 'LindenFieldSchema', '(', ')', '.', 'setName', '(', '""intValue""', ')', '.', 'setType', '(', 'LindenType', '.', 'INTEGER', ')', '.', 'setDocValues', '(', 'true', ')', ')', ';', 'lindenConfig', '.', 'setSchema', '(', 'schema', ')', ';', '}']","['@', 'Override', 'void', 'init', '(', ')', 'throws', 'Exception', '{', 'LindenSchema', '(', 'LindenFieldSchema', '(', ')', '.', 'setName', '(', '""""', '.', 'INTEGER', ')', '.', 'setDocValues', '(', 'true', ')', ')', ';', 'lindenConfig', '.', 'setSchema', ';', '}']",58,33,6,247,135,10,47.257383966244724,48.07692307692308,,,,-1,-1,-1,-1,False
L58_createRawValidator_2.txt,code2seq,METHOD_NAME,token_wrong,0.6147,0.5813,23.2643,30.3379,"{'n_total': 932, 'n_valid': 243, 'n_correct': 99}",468.219421,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "" + ""Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"" + ""grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"" + ""\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"" + ""pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"" + ""Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"" + ""sun/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"" + ""\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com"" + "".sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceU"" + ""rit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0010L\u0000\nwhiteSpacet\u0000.Lcom/"" + ""sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."" + ""org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.Whit"" + ""eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."" + ""xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar."" + ""Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000\u001bcom.s"" + ""un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespa"" + ""ceURIq\u0000~\u0000\u0010xpq\u0000~\u0000\u0014q\u0000~\u0000\u0013sr\u0000#com.sun.msv.grammar.SimpleNameClas"" + ""s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0010L\u0000\fnamespaceURIq\u0000~\u0000\u0010xr\u0000\u001dcom.sun"" + "".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0015governingAgreementReft"" + ""\u0000\u0000sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"" + ""let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"" + ""m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"" + ""ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"" + ""nPool;xp\u0000\u0000\u0000\u0000\u0001px"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com.sun.msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragment=null){(("" ""+""""+""grammar""+""""+""""));}return newregexp(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expt\x00 ""', '+', '""Lcom/sun/msv/grammar/Expression;L\x00\\tnameClasst\x00\x1fLcom/sun/msv/""', '+', '""grammar/NameClass;xr\x00\x1ecom.sun.msv.grammar.Expressionø\x18\x82èN5~O""', '+', '""\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0bexpandedEx""', '+', '""pq\x00~\x00\x01xpppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1f""', '+', '""Lorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x01L\x00\x04namet\x00\x1dLcom/""', '+', '""sun/msv/util/StringPair;xq\x00~\x00\x03sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02""', '+', '""\x00\x01Z\x00\x05valuexp\x00psr\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com""', '+', '"".sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceU""', '+', '""rit\x00\x12Ljava/lang/String;L\x00\\btypeNameq\x00~\x00\x10L\x00\\nwhiteSpacet\x00.Lcom/""', '+', '""sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.""', '+', '""org/2001/XMLSchemat\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.Whit""', '+', '""eSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.""', '+', '""xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.""', '+', '""Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x0bpsr\x00\x1bcom.s""', '+', '""un.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x10L\x00\\fnamespa""', '+', '""ceURIq\x00~\x00\x10xpq\x00~\x00\x14q\x00~\x00\x13sr\x00#com.sun.msv.grammar.SimpleNameClas""', '+', '""s\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x10L\x00\\fnamespaceURIq\x00~\x00\x10xr\x00\x1dcom.sun""', '+', '"".msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x15governingAgreementReft""', '+', '""\x00\x00sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTab""', '+', '""let\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-co""', '+', '""m.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05cou""', '+', '""ntB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressio""', '+', '""nPool;xp\x00\x00\x00\x00\x01px""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '=', 'null', ')', '{', '(', '(', '"" ""', '+', '""""', '+', '""grammar""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'return', 'newregexp', '(', 'schemaFragment', ')', ';', '}']",111,42,6,3321,148,24,96.23900515620261,65.71428571428571,,,,-1,-1,-1,-1,False
L59_printable_1.txt,code2seq,METHOD_NAME,token_wrong,0.7632,0.5101,5.08,6.7413,"{'n_total': 170, 'n_valid': 17, 'n_correct': 13}",39.413919,"protected static final String printable(char ch) { StringBuffer retval = new StringBuffer(); addPrintable(retval, ch); return retval.toString(); }",String printable(char ch){new StringBuffer();addPrintable(retval);toString();},"['protected', 'static', 'final', 'String', 'printable', '(', 'char', 'ch', ')', '{', 'StringBuffer', 'retval', '=', 'new', 'StringBuffer', '(', ')', ';', 'addPrintable', '(', 'retval', ',', 'ch', ')', ';', 'return', 'retval', '.', 'toString', '(', ')', ';', '}']","['String', 'printable', '(', 'char', 'ch', ')', '{', 'new', 'StringBuffer', '(', ')', ';', 'addPrintable', '(', 'retval', ')', ';', 'toString', '(', ')', ';', '}']",33,22,6,146,78,15,51.908396946564885,40.74074074074074,,,,-1,-1,-1,-1,False
L60_doBuild_1.txt,code2seq,METHOD_NAME,token_wrong,0.2307,0.4423,9.8688,11.4312,"{'n_total': 464, 'n_valid': 41, 'n_correct': 38}",93.620332,"@Override public boolean doBuild(TopologyBuilder bldr, Set<String> stageNames) { setDefaultNameIfNone(StreamletNamePrefix.REDUCE, stageNames); ReduceByKeyAndWindowOperator<K, V, R> bolt = new ReduceByKeyAndWindowOperator<>(keyExtractor, valueExtractor, reduceFn); windowCfg.attachWindowConfig(bolt); bldr.setBolt(getName(), bolt, getNumPartitions()).customGrouping(parent.getName(), new ReduceByKeyAndWindowCustomGrouping<K, R>(keyExtractor)); return true; }","boolean doBuild(TopologyBuilder bldr,Set stageNames){setDefaultNameIfNone();ReduceByKeyAndWindowOperator<V>bolt=new ReduceByKeyAndWindowOperator<>();attachWindowConfig();customGrouping(getName(),(keyExtractor));}","['@', 'Override', 'public', 'boolean', 'doBuild', '(', 'TopologyBuilder', 'bldr', ',', 'Set', '<', 'String', '>', 'stageNames', ')', '{', 'setDefaultNameIfNone', '(', 'StreamletNamePrefix', '.', 'REDUCE', ',', 'stageNames', ')', ';', 'ReduceByKeyAndWindowOperator', '<', 'K', ',', 'V', ',', 'R', '>', 'bolt', '=', 'new', 'ReduceByKeyAndWindowOperator', '<', '>', '(', 'keyExtractor', ',', 'valueExtractor', ',', 'reduceFn', ')', ';', 'windowCfg', '.', 'attachWindowConfig', '(', 'bolt', ')', ';', 'bldr', '.', 'setBolt', '(', 'getName', '(', ')', ',', 'bolt', ',', 'getNumPartitions', '(', ')', ')', '.', 'customGrouping', '(', 'parent', '.', 'getName', '(', ')', ',', 'new', 'ReduceByKeyAndWindowCustomGrouping', '<', 'K', ',', 'R', '>', '(', 'keyExtractor', ')', ')', ';', 'return', 'true', ';', '}']","['boolean', 'doBuild', '(', 'TopologyBuilder', 'bldr', ',', 'Set', 'stageNames', ')', '{', 'setDefaultNameIfNone', '(', ')', ';', 'ReduceByKeyAndWindowOperator', '<', 'V', '>', 'bolt', '=', 'new', 'ReduceByKeyAndWindowOperator', '<', '>', '(', ')', ';', 'attachWindowConfig', '(', ')', ';', 'customGrouping', '(', 'getName', '(', ')', ',', '(', 'keyExtractor', ')', ')', ';', '}']",93,43,6,458,212,13,55.28089887640449,57.47126436781609,,,,-1,-1,-1,-1,False
L61_ensureConfig_1.txt,code2seq,METHOD_NAME,token_wrong,0.7146,0.6718,14.9097,13.3519,"{'n_total': 178, 'n_valid': 25, 'n_correct': 22}",54.270544,protected LDAPStore ensureConfig() { LDAPStore store = getConfig(); if (store == null) { store = new LDAPStore(); } return store; },LDAPStore ensureConfig(){if(store=null){}},"['protected', 'LDAPStore', 'ensureConfig', '(', ')', '{', 'LDAPStore', 'store', '=', 'getConfig', '(', ')', ';', 'if', '(', 'store', '==', 'null', ')', '{', 'store', '=', 'new', 'LDAPStore', '(', ')', ';', '}', 'return', 'store', ';', '}']","['LDAPStore', 'ensureConfig', '(', ')', '{', 'if', '(', 'store', '=', 'null', ')', '{', '}', '}']",32,14,6,131,42,18,78.76106194690266,69.23076923076923,,,,-1,-1,-1,-1,False
L62_getCalculatedDigest_1.txt,code2seq,METHOD_NAME,token_wrong,0.7179,0.6119,7.0333,10.4155,"{'n_total': 166, 'n_valid': 18, 'n_correct': 14}",36.837308,public byte[] getCalculatedDigest() { if (calculatedDigest != null) { return Arrays.clone(calculatedDigest); } return null; },byte[]getCalculatedDigest(){if(null){Arrays.clone(calculatedDigest);}},"['public', 'byte', '[', ']', 'getCalculatedDigest', '(', ')', '{', 'if', '(', 'calculatedDigest', '!=', 'null', ')', '{', 'return', 'Arrays', '.', 'clone', '(', 'calculatedDigest', ')', ';', '}', 'return', 'null', ';', '}']","['byte', '[', ']', 'getCalculatedDigest', '(', ')', '{', 'if', '(', 'null', ')', '{', 'Arrays', '.', 'clone', '(', 'calculatedDigest', ')', ';', '}', '}']",28,21,6,125,70,25,55.00000000000001,31.818181818181817,,,,-1,-1,-1,-1,False
L63_dialogValidated_1.txt,code2seq,METHOD_NAME,token_wrong,0.7729,0.5829,28.4818,24.5033,"{'n_total': 185, 'n_valid': 20, 'n_correct': 18}",44.72753,@Override public void dialogValidated() { try { portSpinner.commitEdit(); } catch (ParseException e) { } updateValues(); },void dialogValidated(){try{commitEdit();}catch(ParseException e){}},"['@', 'Override', 'public', 'void', 'dialogValidated', '(', ')', '{', 'try', '{', 'portSpinner', '.', 'commitEdit', '(', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '}', 'updateValues', '(', ')', ';', '}']","['void', 'dialogValidated', '(', ')', '{', 'try', '{', 'commitEdit', '(', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', '}', '}']",29,20,6,122,67,21,54.45544554455446,39.130434782608695,,,,-1,-1,-1,-1,False
L64_disableFollowDataConnection_1.txt,code2seq,METHOD_NAME,token_wrong,0.7688,0.636,18.1317,17.3783,"{'n_total': 135, 'n_valid': 17, 'n_correct': 12}",36.375988,public void disableFollowDataConnection() { if (followDataConn != null) { followDataConn.disconnect(); } },void disableFollowDataConnection(){if(followDataConn){followDataConn.disconnect();}},"['public', 'void', 'disableFollowDataConnection', '(', ')', '{', 'if', '(', 'followDataConn', '!=', 'null', ')', '{', 'followDataConn', '.', 'disconnect', '(', ')', ';', '}', '}']","['void', 'disableFollowDataConnection', '(', ')', '{', 'if', '(', 'followDataConn', ')', '{', 'followDataConn', '.', 'disconnect', '(', ')', ';', '}', '}']",21,18,6,106,84,33,30.136986301369863,20.0,,,,-1,-1,-1,-1,False
L65_loadLocalFlags_1.txt,code2seq,METHOD_NAME,token_wrong,0.5579,0.5012,12.4064,12.8619,"{'n_total': 376, 'n_valid': 56, 'n_correct': 21}",117.35466,"private void loadLocalFlags(final String defaultFlagsFileName) { String jsonResponse = readJSONFromAsset(defaultFlagsFileName); Type listType = new TypeToken<List<Flag>>() { }.getType(); flags = gson.fromJson(jsonResponse, listType); preferences.edit().putString(FLAGS_PREF_KEY, jsonResponse).apply(); }","void loadLocalFlags(String defaultFlagsFileName){jsonResponse=readJSONFromAsset(defaultFlagsFileName);Type listType=new TypeToken<List<Flag>>.getType();flags=putString(FLAGS_PREF_KEY,jsonResponse).apply();}","['private', 'void', 'loadLocalFlags', '(', 'final', 'String', 'defaultFlagsFileName', ')', '{', 'String', 'jsonResponse', '=', 'readJSONFromAsset', '(', 'defaultFlagsFileName', ')', ';', 'Type', 'listType', '=', 'new', 'TypeToken', '<', 'List', '<', 'Flag', '>', '>', '(', ')', '{', '}', '.', 'getType', '(', ')', ';', 'flags', '=', 'gson', '.', 'fromJson', '(', 'jsonResponse', ',', 'listType', ')', ';', 'preferences', '.', 'edit', '(', ')', '.', 'putString', '(', 'FLAGS_PREF_KEY', ',', 'jsonResponse', ')', '.', 'apply', '(', ')', ';', '}']","['void', 'loadLocalFlags', '(', 'String', 'defaultFlagsFileName', ')', '{', 'jsonResponse', '=', 'readJSONFromAsset', '(', 'defaultFlagsFileName', ')', ';', 'Type', 'listType', '=', 'new', 'TypeToken', '<', 'List', '<', 'Flag', '>', '>', '.', 'getType', '(', ')', ';', 'flags', '=', 'putString', '(', 'FLAGS_PREF_KEY', ',', 'jsonResponse', ')', '.', 'apply', '(', ')', ';', '}']",66,44,6,303,206,20,34.275618374558306,36.666666666666664,,,,-1,-1,-1,-1,False
L66_setActivityResultCallback_1.txt,code2seq,METHOD_NAME,token_wrong,0.8625,0.637,14.4963,10.5711,"{'n_total': 178, 'n_valid': 25, 'n_correct': 22}",53.521117,"@Override public void setActivityResultCallback(CordovaPlugin plugin) { if (activityResultCallback != null) { activityResultCallback.onActivityResult(activityResultRequestCode, Activity.RESULT_CANCELED, null); } activityResultCallback = plugin; }",void setActivityResultCallback(){if(activityResultCallback){(activityResultRequestCode);}},"['@', 'Override', 'public', 'void', 'setActivityResultCallback', '(', 'CordovaPlugin', 'plugin', ')', '{', 'if', '(', 'activityResultCallback', '!=', 'null', ')', '{', 'activityResultCallback', '.', 'onActivityResult', '(', 'activityResultRequestCode', ',', 'Activity', '.', 'RESULT_CANCELED', ',', 'null', ')', ';', '}', 'activityResultCallback', '=', 'plugin', ';', '}']","['void', 'setActivityResultCallback', '(', ')', '{', 'if', '(', 'activityResultCallback', ')', '{', '(', 'activityResultRequestCode', ')', ';', '}', '}']",36,16,6,246,90,31,72.55813953488372,66.66666666666666,,,,-1,-1,-1,-1,False
L67_invalidateSession_1.txt,code2seq,METHOD_NAME,token_wrong,0.6779,0.8565,4.5959,9.6752,"{'n_total': 183, 'n_valid': 28, 'n_correct': 19}",56.062359,protected void invalidateSession() { if (this.sessionParameters != null) { this.sessionParameters.clear(); this.sessionParameters = null; } if (this.tlsSession != null) { this.tlsSession.invalidate(); this.tlsSession = null; } },void invalidateSession(){if(this){this.sessionParameters.clear();}},"['protected', 'void', 'invalidateSession', '(', ')', '{', 'if', '(', 'this', '.', 'sessionParameters', '!=', 'null', ')', '{', 'this', '.', 'sessionParameters', '.', 'clear', '(', ')', ';', 'this', '.', 'sessionParameters', '=', 'null', ';', '}', 'if', '(', 'this', '.', 'tlsSession', '!=', 'null', ')', '{', 'this', '.', 'tlsSession', '.', 'invalidate', '(', ')', ';', 'this', '.', 'tlsSession', '=', 'null', ';', '}', '}']","['void', 'invalidateSession', '(', ')', '{', 'if', '(', 'this', ')', '{', 'this', '.', 'sessionParameters', '.', 'clear', '(', ')', ';', '}', '}']",55,20,6,228,67,23,78.53658536585367,71.42857142857143,,,,-1,-1,-1,-1,False
L68_nextResume_1.txt,code2seq,METHOD_NAME,token_wrong,0.5813,0.6625,16.8854,16.4353,"{'n_total': 291, 'n_valid': 48, 'n_correct': 32}",98.395167,private Optional<WatchRequest> nextResume() { WatcherImpl pendingWatcher = this.pendingWatchers.peek(); if (pendingWatcher != null) { return Optional.of(this.toWatchCreateRequest(pendingWatcher)); } return Optional.empty(); },Optional<WatchRequest>nextResume(){WatcherImpl;if(null){returnOptional(thistoWatchCreateRequest());}},"['private', 'Optional', '<', 'WatchRequest', '>', 'nextResume', '(', ')', '{', 'WatcherImpl', 'pendingWatcher', '=', 'this', '.', 'pendingWatchers', '.', 'peek', '(', ')', ';', 'if', '(', 'pendingWatcher', '!=', 'null', ')', '{', 'return', 'Optional', '.', 'of', '(', 'this', '.', 'toWatchCreateRequest', '(', 'pendingWatcher', ')', ')', ';', '}', 'return', 'Optional', '.', 'empty', '(', ')', ';', '}']","['Optional', '<', 'WatchRequest', '>', 'nextResume', '(', ')', '{', 'WatcherImpl', ';', 'if', '(', 'null', ')', '{', 'returnOptional', '(', 'thistoWatchCreateRequest', '(', ')', ')', ';', '}', '}']",49,24,6,225,101,16,59.33014354066985,58.139534883720934,,,,-1,-1,-1,-1,False
L69_getCapDiameter_1.txt,code2seq,METHOD_NAME,token_wrong,0.5185,0.4507,26.1809,26.8804,"{'n_total': 310, 'n_valid': 28, 'n_correct': 27}",64.929295,"public int getCapDiameter(int y, int height) { switch(this) { case BROWN: return 7; case RED: default: return (y < (height - 1)) ? 5 : 3; } }",int getCapDiameter(int height){switch(this){case BROWN:return((height))?5:3;}},"['public', 'int', 'getCapDiameter', '(', 'int', 'y', ',', 'int', 'height', ')', '{', 'switch', '(', 'this', ')', '{', 'case', 'BROWN', ':', 'return', '7', ';', 'case', 'RED', ':', 'default', ':', 'return', '(', 'y', '<', '(', 'height', '-', '1', ')', ')', '?', '5', ':', '3', ';', '}', '}']","['int', 'getCapDiameter', '(', 'int', 'height', ')', '{', 'switch', '(', 'this', ')', '{', 'case', 'BROWN', ':', 'return', '(', '(', 'height', ')', ')', '?', '5', ':', '3', ';', '}', '}']",44,28,6,141,78,20,52.066115702479344,42.10526315789473,,,,-1,-1,-1,-1,False
L70_init_2.txt,code2seq,METHOD_NAME,token_wrong,0.976,0.6851,0.0875,1.2525,"{'n_total': 301, 'n_valid': 27, 'n_correct': 21}",60.60856,"public ProcessorState init(Map<String, Object> config) { ProcessorState state = super.init(config); state.getConfiguration().put(""membersMap"", new HashMap<String, List<String[]>>()); return state; }",ProcessorState init(Map<Object>config){state=super.init();(new HashMap<List<String[]>>());},"['public', 'ProcessorState', 'init', '(', 'Map', '<', 'String', ',', 'Object', '>', 'config', ')', '{', 'ProcessorState', 'state', '=', 'super', '.', 'init', '(', 'config', ')', ';', 'state', '.', 'getConfiguration', '(', ')', '.', 'put', '(', '""membersMap""', ',', 'new', 'HashMap', '<', 'String', ',', 'List', '<', 'String', '[', ']', '>', '>', '(', ')', ')', ';', 'return', 'state', ';', '}']","['ProcessorState', 'init', '(', 'Map', '<', 'Object', '>', 'config', ')', '{', 'state', '=', 'super', '.', 'init', '(', ')', ';', '(', 'new', 'HashMap', '<', 'List', '<', 'String', '[', ']', '>', '>', '(', ')', ')', ';', '}']",53,34,6,198,91,10,56.91489361702128,40.42553191489361,,,,-1,-1,-1,-1,False
L71_execute_1.txt,code2seq,METHOD_NAME,token_wrong,0.5082,0.21,7.0022,7.0801,"{'n_total': 436, 'n_valid': 44, 'n_correct': 27}",93.028659,"public void execute(Writer writer, MacroParameter params) throws IllegalArgumentException, IOException { writer.write(""<pre>""); if (params.getContent() != null) { writer.write(params.getContent()); } writer.write(""</pre>""); }","void execute(Writer writer,MacroParameter params)throws IllegalArgumentException{writer.write("""");if(getContent()){writer(params);}(""<>"");}","['public', 'void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'writer', '.', 'write', '(', '""<pre>""', ')', ';', 'if', '(', 'params', '.', 'getContent', '(', ')', '!=', 'null', ')', '{', 'writer', '.', 'write', '(', 'params', '.', 'getContent', '(', ')', ')', ';', '}', 'writer', '.', 'write', '(', '""</pre>""', ')', ';', '}']","['void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', '{', 'writer', '.', 'write', '(', '""""', ')', ';', 'if', '(', 'getContent', '(', ')', ')', '{', 'writer', '(', 'params', ')', ';', '}', '(', '""<>""', ')', ';', '}']",53,37,6,225,139,13,40.56603773584906,34.04255319148936,,,,-1,-1,-1,-1,False
L72_delay_1.txt,code2seq,METHOD_NAME,token_wrong,0.7101,0.3852,4.8568,6.0594,"{'n_total': 215, 'n_valid': 24, 'n_correct': 23}",53.05084,protected void delay(int miliseconds) { if (miliseconds > 0) { try { Thread.sleep(miliseconds); } catch (InterruptedException e1) { } } },void delay(){if(miliseconds){try{sleep();}catch(InterruptedException e){}}},"['protected', 'void', 'delay', '(', 'int', 'miliseconds', ')', '{', 'if', '(', 'miliseconds', '>', '0', ')', '{', 'try', '{', 'Thread', '.', 'sleep', '(', 'miliseconds', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e1', ')', '{', '}', '}', '}']","['void', 'delay', '(', ')', '{', 'if', '(', 'miliseconds', ')', '{', 'try', '{', 'sleep', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', '}', '}', '}']",34,26,6,137,75,11,49.2063492063492,28.57142857142857,,,,-1,-1,-1,-1,False
L73_deleteSet_1.txt,code2seq,METHOD_NAME,token_wrong,0.5828,0.3982,5.8399,4.5113,"{'n_total': 439, 'n_valid': 55, 'n_correct': 27}",115.972793,"public void deleteSet(Set s) { try { PersistenceService.getInstance().getItemFacadeQueries().deleteSet(s); } catch (Exception e) { log.error(e.getMessage(), e); throw new RuntimeException(e); } }","void deleteSet(Set s){try{getInstance.deleteSet(s);}catch(Exception e){logerror(e(),e);RuntimeException();}}","['public', 'void', 'deleteSet', '(', 'Set', 's', ')', '{', 'try', '{', 'PersistenceService', '.', 'getInstance', '(', ')', '.', 'getItemFacadeQueries', '(', ')', '.', 'deleteSet', '(', 's', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['void', 'deleteSet', '(', 'Set', 's', ')', '{', 'try', '{', 'getInstance', '.', 'deleteSet', '(', 's', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logerror', '(', 'e', '(', ')', ',', 'e', ')', ';', 'RuntimeException', '(', ')', ';', '}', '}']",54,38,6,195,108,15,48.333333333333336,33.33333333333333,,,,-1,-1,-1,-1,False
L74_getRegistration_1.txt,code2seq,METHOD_NAME,token_wrong,0.7013,0.4771,6.9247,6.6803,"{'n_total': 282, 'n_valid': 24, 'n_correct': 18}",48.389128,public FunctionRegistration<?> getRegistration(Object function) { if (function == null || !names.containsKey(function)) { return null; } return new FunctionRegistration<>(function).name(names.get(function)).type(findType(function).getType()); },FunctionRegistration<?>getRegistration(Object function){if(function){}return new FunctionRegistration<>((function)).type((function).getType());},"['public', 'FunctionRegistration', '<', '?', '>', 'getRegistration', '(', 'Object', 'function', ')', '{', 'if', '(', 'function', '==', 'null', '||', '!', 'names', '.', 'containsKey', '(', 'function', ')', ')', '{', 'return', 'null', ';', '}', 'return', 'new', 'FunctionRegistration', '<', '>', '(', 'function', ')', '.', 'name', '(', 'names', '.', 'get', '(', 'function', ')', ')', '.', 'type', '(', 'findType', '(', 'function', ')', '.', 'getType', '(', ')', ')', ';', '}']","['FunctionRegistration', '<', '?', '>', 'getRegistration', '(', 'Object', 'function', ')', '{', 'if', '(', 'function', ')', '{', '}', 'return', 'new', 'FunctionRegistration', '<', '>', '(', '(', 'function', ')', ')', '.', 'type', '(', '(', 'function', ')', '.', 'getType', '(', ')', ')', ';', '}']",62,39,6,244,144,21,44.843049327354265,41.07142857142857,,,,-1,-1,-1,-1,False
L75_getNumVectors_1.txt,code2seq,METHOD_NAME,token_wrong,0.5213,0.6056,4.197,3.8736,"{'n_total': 306, 'n_valid': 42, 'n_correct': 27}",97.137718,public int getNumVectors() { Enumeration<ObjectVector> allVectors = this.getAllVectors(); int i = 0; while (allVectors.hasMoreElements()) { allVectors.nextElement(); ++i; } return i; },int getNumVectors(){Enumeration<ObjectVector>allVectors=getAllVectors;i=0;while(hasMoreElements()){}},"['public', 'int', 'getNumVectors', '(', ')', '{', 'Enumeration', '<', 'ObjectVector', '>', 'allVectors', '=', 'this', '.', 'getAllVectors', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'allVectors', '.', 'hasMoreElements', '(', ')', ')', '{', 'allVectors', '.', 'nextElement', '(', ')', ';', '++', 'i', ';', '}', 'return', 'i', ';', '}']","['int', 'getNumVectors', '(', ')', '{', 'Enumeration', '<', 'ObjectVector', '>', 'allVectors', '=', 'getAllVectors', ';', 'i', '=', '0', ';', 'while', '(', 'hasMoreElements', '(', ')', ')', '{', '}', '}']",46,26,6,184,101,19,50.303030303030305,50.0,,,,-1,-1,-1,-1,False
L76_shouldHandleEmptyExpectation_1.txt,code2seq,METHOD_NAME,token_wrong,0.4369,0.3612,34.4652,33.3625,"{'n_total': 308, 'n_valid': 38, 'n_correct': 17}",80.211223,"@Test public void shouldHandleEmptyExpectation() { exception.expect(IllegalArgumentException.class); exception.expectMessage(""Schema must either be a path reference to a *.json file or a json string""); new JsonSchemaValidator(new MockServerLogger(), """").isValid(""some_value""); }","@Test void shouldHandleEmptyExpectation(){(IllegalArgumentException.class);exception.expectMessage("""");newJsonSchemaValidator(MockServerLogger(),"""").isValid(""value"");}","['@', 'Test', 'public', 'void', 'shouldHandleEmptyExpectation', '(', ')', '{', 'exception', '.', 'expect', '(', 'IllegalArgumentException', '.', 'class', ')', ';', 'exception', '.', 'expectMessage', '(', '""Schema must either be a path reference to a *.json file or a json string""', ')', ';', 'new', 'JsonSchemaValidator', '(', 'new', 'MockServerLogger', '(', ')', ',', '""""', ')', '.', 'isValid', '(', '""some_value""', ')', ';', '}']","['@', 'Test', 'void', 'shouldHandleEmptyExpectation', '(', ')', '{', '(', 'IllegalArgumentException', '.', 'class', ')', ';', 'exception', '.', 'expectMessage', '(', '""""', ')', ';', 'newJsonSchemaValidator', '(', 'MockServerLogger', '(', ')', ',', '""""', ')', '.', 'isValid', '(', '""value""', ')', ';', '}']",41,35,6,278,167,34,45.49180327868852,17.142857142857142,,,,-1,-1,-1,-1,False
L77_createPageTitleModel_1.txt,code2seq,METHOD_NAME,token_wrong,0.7491,0.5527,14.3861,12.1535,"{'n_total': 321, 'n_valid': 43, 'n_correct': 21}",86.009613,"private void createPageTitleModel() { ptModel = new CCPageTitleModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/twoBtnsPageTitle.xml"")); ptModel.setValue(""button1"", ""button.create""); ptModel.setValue(""button2"", ""button.cancel""); }","void createPageTitleModel(){ptModel=CCPageTitleModel(getClass().getClassLoader().getResourceAsStream(""consolexml""));setValue("""","""",""buttoncancel"");}","['private', 'void', 'createPageTitleModel', '(', ')', '{', 'ptModel', '=', 'new', 'CCPageTitleModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/twoBtnsPageTitle.xml""', ')', ')', ';', 'ptModel', '.', 'setValue', '(', '""button1""', ',', '""button.create""', ')', ';', 'ptModel', '.', 'setValue', '(', '""button2""', ',', '""button.cancel""', ')', ';', '}']","['void', 'createPageTitleModel', '(', ')', '{', 'ptModel', '=', 'CCPageTitleModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""consolexml""', ')', ')', ';', 'setValue', '(', '""""', ',', '""""', ',', '""buttoncancel""', ')', ';', '}']",44,33,6,261,148,26,48.08510638297872,28.947368421052634,,,,-1,-1,-1,-1,False
L78_process_1.txt,code2seq,METHOD_NAME,token_wrong,0.5689,0.4867,3.4299,3.7355,"{'n_total': 401, 'n_valid': 37, 'n_correct': 33}",84.543868,"private void process(byte[] res, byte[] a, byte[] b) { for (int i = 0; i != res.length; i++) { res[i] = (byte) (a[i] ^ b[i]); } engine.processBlock(res, 0, res, 0); }","void process(byte[]a,byte[]b){for(;;){res[i]=(byte)(a[i]^b[i]);}processBlock(res,0);}","['private', 'void', 'process', '(', 'byte', '[', ']', 'res', ',', 'byte', '[', ']', 'a', ',', 'byte', '[', ']', 'b', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '!=', 'res', '.', 'length', ';', 'i', '++', ')', '{', 'res', '[', 'i', ']', '=', '(', 'byte', ')', '(', 'a', '[', 'i', ']', '^', 'b', '[', 'i', ']', ')', ';', '}', 'engine', '.', 'processBlock', '(', 'res', ',', '0', ',', 'res', ',', '0', ')', ';', '}']","['void', 'process', '(', 'byte', '[', ']', 'a', ',', 'byte', '[', ']', 'b', ')', '{', 'for', '(', ';', ';', ')', '{', 'res', '[', 'i', ']', '=', '(', 'byte', ')', '(', 'a', '[', 'i', ']', '^', 'b', '[', 'i', ']', ')', ';', '}', 'processBlock', '(', 'res', ',', '0', ')', ';', '}']",72,49,6,166,85,13,52.94117647058824,34.84848484848485,,,,-1,-1,-1,-1,False
L79_getAttributeValue_1.txt,code2seq,METHOD_NAME,token_wrong,0.5956,0.5201,5.0857,5.4904,"{'n_total': 379, 'n_valid': 52, 'n_correct': 31}",117.593294,"static String getAttributeValue(Map attrs, String attrName) { String answer = null; Set set = (Set) attrs.get(attrName); if (set != null && set.size() == 1) { answer = (String) set.iterator().next(); } return (answer); }","String getAttributeValue(Map attrs,String attrName){Set set=get(attrName);if(set!=null==1){answer=(String)set;}return(answer);}","['static', 'String', 'getAttributeValue', '(', 'Map', 'attrs', ',', 'String', 'attrName', ')', '{', 'String', 'answer', '=', 'null', ';', 'Set', 'set', '=', '(', 'Set', ')', 'attrs', '.', 'get', '(', 'attrName', ')', ';', 'if', '(', 'set', '!=', 'null', '&&', 'set', '.', 'size', '(', ')', '==', '1', ')', '{', 'answer', '=', '(', 'String', ')', 'set', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ';', '}', 'return', '(', 'answer', ')', ';', '}']","['String', 'getAttributeValue', '(', 'Map', 'attrs', ',', 'String', 'attrName', ')', '{', 'Set', 'set', '=', 'get', '(', 'attrName', ')', ';', 'if', '(', 'set', '!=', 'null', '==', '1', ')', '{', 'answer', '=', '(', 'String', ')', 'set', ';', '}', 'return', '(', 'answer', ')', ';', '}']",66,41,6,220,127,23,47.20812182741117,41.66666666666667,,,,-1,-1,-1,-1,False
L80_checkKeyUsage_1.txt,code2seq,METHOD_NAME,token_wrong,0.484,0.306,6.1985,9.6402,"{'n_total': 492, 'n_valid': 66, 'n_correct': 39}",136.070917,"public void checkKeyUsage(int id, byte[] bytes) throws IOException { X509CertificateHolder certHld = new X509CertificateHolder(bytes); if ((DERBitString.getInstance(certHld.getExtension(Extension.keyUsage).getParsedValue()).getBytes()[0] & 0x01) != 0) { fail(""error generating cert - key usage wrong.""); } }","void checkKeyUsage(int id,byte bytes){XCertificateHolder();if((((Extension.keyUsage).getParsedValue())&0)){fail(""generating"");}}","['public', 'void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X509CertificateHolder', 'certHld', '=', 'new', 'X509CertificateHolder', '(', 'bytes', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'certHld', '.', 'getExtension', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '.', 'getBytes', '(', ')', '[', '0', ']', '&', '0x01', ')', '!=', '0', ')', '{', 'fail', '(', '""error generating cert - key usage wrong.""', ')', ';', '}', '}']","['void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', 'bytes', ')', '{', 'XCertificateHolder', '(', ')', ';', 'if', '(', '(', '(', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '&', '0', ')', ')', '{', 'fail', '(', '""generating""', ')', ';', '}', '}']",65,40,6,307,128,19,62.15277777777778,42.3728813559322,,,,-1,-1,-1,-1,False
L81_computeSingleSIze_1.txt,code2seq,METHOD_NAME,token_wrong,0.2631,0.3958,23.935,27.287,"{'n_total': 226, 'n_valid': 33, 'n_correct': 25}",71.019506,private void computeSingleSIze() { int product = 1; for (int i = 0; i < sizes.length; i++) { int size = sizes[i]; product *= size; } singleSize = product; },void computeSingleSIze(){for(;;){product=size;}singleSize=product;},"['private', 'void', 'computeSingleSIze', '(', ')', '{', 'int', 'product', '=', '1', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'sizes', '.', 'length', ';', 'i', '++', ')', '{', 'int', 'size', '=', 'sizes', '[', 'i', ']', ';', 'product', '*=', 'size', ';', '}', 'singleSize', '=', 'product', ';', '}']","['void', 'computeSingleSIze', '(', ')', '{', 'for', '(', ';', ';', ')', '{', 'product', '=', 'size', ';', '}', 'singleSize', '=', 'product', ';', '}']",46,21,6,156,67,23,66.9172932330827,62.5,,,,-1,-1,-1,-1,False
L82_init_3.txt,code2seq,METHOD_NAME,token_wrong,0.8484,0.7898,0.4102,0.6327,"{'n_total': 204, 'n_valid': 22, 'n_correct': 14}",47.706268,"public void init() { checkState(); for (GitlabMergeRequestWrapper mergeRequestWrapper : mergeRequests.values()) { mergeRequestWrapper.init(builder, project); } }",void init(){checkState();for(GitlabMergeRequestWrapper mergeRequestWrapper:mergeRequests.values()){mergeRequestWrapper.init();}},"['public', 'void', 'init', '(', ')', '{', 'checkState', '(', ')', ';', 'for', '(', 'GitlabMergeRequestWrapper', 'mergeRequestWrapper', ':', 'mergeRequests', '.', 'values', '(', ')', ')', '{', 'mergeRequestWrapper', '.', 'init', '(', 'builder', ',', 'project', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'checkState', '(', ')', ';', 'for', '(', 'GitlabMergeRequestWrapper', 'mergeRequestWrapper', ':', 'mergeRequests', '.', 'values', '(', ')', ')', '{', 'mergeRequestWrapper', '.', 'init', '(', ')', ';', '}', '}']",33,29,6,161,128,10,21.85430463576159,14.814814814814813,,,,-1,-1,-1,-1,False
L83_convertIntArray_1.txt,code2seq,METHOD_NAME,token_wrong,0.6957,0.5457,8.575,7.0794,"{'n_total': 463, 'n_valid': 49, 'n_correct': 38}",104.207247,public static byte[] convertIntArray(int[] in) { byte[] out = new byte[in.length]; for (int i = 0; i < in.length; i++) { out[i] = (byte) in[i]; } return out; },byte[]convertIntArray(int[]in){byte[]out=new byte[in];for(i;;i++){out[i];}},"['public', 'static', 'byte', '[', ']', 'convertIntArray', '(', 'int', '[', ']', 'in', ')', '{', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'in', '.', 'length', ']', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'in', '.', 'length', ';', 'i', '++', ')', '{', 'out', '[', 'i', ']', '=', '(', 'byte', ')', 'in', '[', 'i', ']', ';', '}', 'return', 'out', ';', '}']","['byte', '[', ']', 'convertIntArray', '(', 'int', '[', ']', 'in', ')', '{', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'in', ']', ';', 'for', '(', 'i', ';', ';', 'i', '++', ')', '{', 'out', '[', 'i', ']', ';', '}', '}']",61,38,6,159,75,21,60.86956521739131,41.81818181818181,,,,-1,-1,-1,-1,False
L84_createRawValidator_3.txt,code2seq,METHOD_NAME,token_wrong,0.7838,0.2939,20.0246,25.6281,"{'n_total': 986, 'n_valid': 256, 'n_correct': 114}",494.954,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"" + ""n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"" + ""mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"" + ""on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"" + ""expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv."" + ""grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"" + ""type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"" + ""\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun."" + ""msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*co"" + ""m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"" + ""un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"" + ""atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"" + ""/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"" + ""tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"" + ""MLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"" + ""essor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"" + ""paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expressio"" + ""n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.ut"" + ""il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000"" + ""\u0013xpq\u0000~\u0000\u0017q\u0000~\u0000\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"" + ""~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000"" + ""~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003q\u0000~\u0000\u000e"" + ""psq\u0000~\u0000\tq\u0000~\u0000\u000epsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0000xq\u0000~\u0000\u0010q\u0000~\u0000\u0016t\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpa"" + ""ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000\'q\u0000~\u0000\u0016sr"" + ""\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"" + ""q\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0006Formatt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Ep"" + ""silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000"" + ""~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\rNameQualifierq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000e"" + ""psq\u0000~\u0000\tppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000"" + ""~\u0000\u0010q\u0000~\u0000\u0016t\u0000\bdateTimeq\u0000~\u0000)q\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000=q\u0000~\u0000\u0016sq\u0000~\u0000+t\u0000\fIssueI"" + ""nstantq\u0000~\u0000/q\u0000~\u00001sq\u0000~\u0000\u001fppsq\u0000~\u0000!q\u0000~\u0000\u000epq\u0000~\u0000\fsq\u0000~\u0000+t\u0000\u0005Nonceq\u0000~\u0000/"" + ""q\u0000~\u00001sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"" + ""Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"" + ""-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"" + ""countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"" + ""sionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u00003q\u0000~\u0000\bq\u0000~\u0000 q\u0000~\u0000\u0005q\u0000~\u00007q\u0000~\u0000Aq\u0000~\u0000\u0006q\u0000~\u0000\u0007x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msv createRawValidator(){if(null){comdeserialize((""\0""+""sr""+""""+""""));}return com(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\x1fcom.sun.msv.grammar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.su""', '+', '""n.msv.grammar.BinaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1t\x00 Lcom/sun/msv/gra""', '+', '""mmar/Expression;L\x00\x04exp2q\x00~\x00\x02xr\x00\x1ecom.sun.msv.grammar.Expressi""', '+', '""onø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0b""', '+', '""expandedExpq\x00~\x00\x02xpppsq\x00~\x00\x00ppsq\x00~\x00\x00ppsq\x00~\x00\x00ppsr\x00\x1bcom.sun.msv.""', '+', '""grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Data""', '+', '""type;L\x00\x06exceptq\x00~\x00\x02L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq""', '+', '""\x00~\x00\x03sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00#com.sun.""', '+', '""msv.datatype.xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxr\x00*co""', '+', '""m.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.s""', '+', '""un.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.d""', '+', '""atatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Ljava""', '+', '""/lang/String;L\x00\\btypeNameq\x00~\x00\x13L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/da""', '+', '""tatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001/X""', '+', '""MLSchemat\x00\x06stringsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProc""', '+', '""essor$Preserve\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.WhiteS""', '+', '""paceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xp\x01sr\x000com.sun.msv.grammar.Expressio""', '+', '""n$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x0epsr\x00\x1bcom.sun.msv.ut""', '+', '""il.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x13L\x00\\fnamespaceURIq\x00~\x00""', '+', '""\x13xpq\x00~\x00\x17q\x00~\x00\x16sr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00""', '+', '""~\x00\x01ppsr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00""', '+', '""~\x00\x02L\x00\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xq\x00~\x00\x03q\x00~\x00\x0e""', '+', '""psq\x00~\x00\\tq\x00~\x00\x0epsr\x00#com.sun.msv.datatype.xsd.AnyURIType\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x00xq\x00~\x00\x10q\x00~\x00\x16t\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.WhiteSpa""', '+', '""ceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x19q\x00~\x00\x1csq\x00~\x00\x1dq\x00~\x00\\\'q\x00~\x00\x16sr""', '+', '""\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalName""', '+', '""q\x00~\x00\x13L\x00\\fnamespaceURIq\x00~\x00\x13xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x06Formatt\x00\x00sr\x000com.sun.msv.grammar.Expression$Ep""', '+', '""silonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03sq\x00~\x00\\r\x01q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00""', '+', '""~\x00\x0epq\x00~\x00\\fsq\x00~\x00+t\x00\\rNameQualifierq\x00~\x00/q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00~\x00\x0e""', '+', '""psq\x00~\x00\\tppsr\x00%com.sun.msv.datatype.xsd.DateTimeType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00)com.sun.msv.datatype.xsd.DateTimeBaseType\x14W\x1a@3¥´å\x02\x00\x00xq\x00""', '+', '""~\x00\x10q\x00~\x00\x16t\x00\\bdateTimeq\x00~\x00)q\x00~\x00\x1csq\x00~\x00\x1dq\x00~\x00=q\x00~\x00\x16sq\x00~\x00+t\x00\\fIssueI""', '+', '""nstantq\x00~\x00/q\x00~\x001sq\x00~\x00\x1fppsq\x00~\x00!q\x00~\x00\x0epq\x00~\x00\\fsq\x00~\x00+t\x00\x05Nonceq\x00~\x00/""', '+', '""q\x00~\x001sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexp""', '+', '""Tablet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00""', '+', '""-com.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05""', '+', '""countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expres""', '+', '""sionPool;xp\x00\x00\x00\\b\x01pq\x00~\x003q\x00~\x00\\bq\x00~\x00 q\x00~\x00\x05q\x00~\x007q\x00~\x00Aq\x00~\x00\x06q\x00~\x00\x07x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msv', 'createRawValidator', '(', ')', '{', 'if', '(', 'null', ')', '{', 'comdeserialize', '(', '(', '""\\0""', '+', '""sr""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'return', 'com', '(', 'schemaFragment', ')', ';', '}']",137,31,6,5476,97,24,98.66104181951577,80.91603053435115,,,,-1,-1,-1,-1,False
L85_runtime_1.txt,code2seq,METHOD_NAME,token_wrong,0.4213,0.3217,14.6355,13.8994,"{'n_total': 503, 'n_valid': 48, 'n_correct': 37}",112.818356,"private List<Dependency> runtime(List<Dependency> dependencies) { List<Dependency> list = new ArrayList<>(); for (Dependency dependency : dependencies) { if (!""test"".equals(dependency.getScope()) && !""provided"".equals(dependency.getScope())) { list.add(dependency); } } return list; }","List runtime(List<Dependency>dependencies){List<Dependency>list=new ArrayList<>();for(Dependency dependency:dependencies){if("""".equals()&"""".equals(getScope())){add(dependency);}}list;}","['private', 'List', '<', 'Dependency', '>', 'runtime', '(', 'List', '<', 'Dependency', '>', 'dependencies', ')', '{', 'List', '<', 'Dependency', '>', 'list', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'Dependency', 'dependency', ':', 'dependencies', ')', '{', 'if', '(', '!', '""test""', '.', 'equals', '(', 'dependency', '.', 'getScope', '(', ')', ')', '&&', '!', '""provided""', '.', 'equals', '(', 'dependency', '.', 'getScope', '(', ')', ')', ')', '{', 'list', '.', 'add', '(', 'dependency', ')', ';', '}', '}', 'return', 'list', ';', '}']","['List', 'runtime', '(', 'List', '<', 'Dependency', '>', 'dependencies', ')', '{', 'List', '<', 'Dependency', '>', 'list', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'Dependency', 'dependency', ':', 'dependencies', ')', '{', 'if', '(', '""""', '.', 'equals', '(', ')', '&', '""""', '.', 'equals', '(', 'getScope', '(', ')', ')', ')', '{', 'add', '(', 'dependency', ')', ';', '}', '}', 'list', ';', '}']",75,59,6,284,184,13,36.90036900369004,23.18840579710145,,,,-1,-1,-1,-1,False
L86_testVoicing_1.txt,code2seq,METHOD_NAME,token_wrong,0.6827,0.9732,23.0153,22.4488,"{'n_total': 235, 'n_valid': 44, 'n_correct': 21}",88.18442,"@Test public void testVoicing() { DynamicLexiconGraph graph = getLexiconGraph(""armut""); assertHasParses(graph, ""armut"", ""armuda"", ""armutlar"", ""armutlara""); assertUnParseable(graph, ""armud"", ""armuta"", ""armudlar""); }","void testVoicing(){DynamicLexiconGraphgraph;assertHasParses("""",""armutlara"");assertUnParseable(""armud"");}","['@', 'Test', 'public', 'void', 'testVoicing', '(', ')', '{', 'DynamicLexiconGraph', 'graph', '=', 'getLexiconGraph', '(', '""armut""', ')', ';', 'assertHasParses', '(', 'graph', ',', '""armut""', ',', '""armuda""', ',', '""armutlar""', ',', '""armutlara""', ')', ';', 'assertUnParseable', '(', 'graph', ',', '""armud""', ',', '""armuta""', ',', '""armudlar""', ')', ';', '}']","['void', 'testVoicing', '(', ')', '{', 'DynamicLexiconGraphgraph', ';', 'assertHasParses', '(', '""""', ',', '""armutlara""', ')', ';', 'assertUnParseable', '(', '""armud""', ')', ';', '}']",41,20,6,214,104,17,55.83756345177665,60.0,,,,-1,-1,-1,-1,False
L87_addExcludedServiceProviders_1.txt,code2seq,METHOD_NAME,token_wrong,0.4185,0.3651,15.2293,17.639,"{'n_total': 311, 'n_valid': 51, 'n_correct': 31}",101.765519,"private void addExcludedServiceProviders() { excludedServiceSingletons.put(SchemaType.GLOBAL, CollectionUtils.<Function<String, Boolean>>asSet()); excludedServiceSingletons.put(SchemaType.ORGANIZATION, asSet(AUTHENTICATION_MODULE_HANDLES_FUNCTION)); excludedServiceCollections.put(SchemaType.GLOBAL, asSet(AUTHENTICATION_MODULE_HANDLES_FUNCTION)); excludedServiceCollections.put(SchemaType.ORGANIZATION, CollectionUtils.<Function<String, Boolean>>asSet()); }",void addExcludedServiceProviders(){excludedServiceSingletons();(asSet(AUTHENTICATION));excludedServiceCollections.put(asSet());excludedServiceCollections.put();},"['private', 'void', 'addExcludedServiceProviders', '(', ')', '{', 'excludedServiceSingletons', '.', 'put', '(', 'SchemaType', '.', 'GLOBAL', ',', 'CollectionUtils', '.', '<', 'Function', '<', 'String', ',', 'Boolean', '>', '>', 'asSet', '(', ')', ')', ';', 'excludedServiceSingletons', '.', 'put', '(', 'SchemaType', '.', 'ORGANIZATION', ',', 'asSet', '(', 'AUTHENTICATION_MODULE_HANDLES_FUNCTION', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', 'SchemaType', '.', 'GLOBAL', ',', 'asSet', '(', 'AUTHENTICATION_MODULE_HANDLES_FUNCTION', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', 'SchemaType', '.', 'ORGANIZATION', ',', 'CollectionUtils', '.', '<', 'Function', '<', 'String', ',', 'Boolean', '>', '>', 'asSet', '(', ')', ')', ';', '}']","['void', 'addExcludedServiceProviders', '(', ')', '{', 'excludedServiceSingletons', '(', ')', ';', '(', 'asSet', '(', 'AUTHENTICATION', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', 'asSet', '(', ')', ')', ';', 'excludedServiceCollections', '.', 'put', '(', ')', ';', '}']",81,32,6,458,161,33,69.88235294117648,65.33333333333333,,,,-1,-1,-1,-1,False
L88_releaseExternalResources_1.txt,code2seq,METHOD_NAME,token_wrong,0.2509,0.2463,21.7556,22.8683,"{'n_total': 186, 'n_valid': 22, 'n_correct': 14}",47.511355,@Override public void releaseExternalResources() { if (referenceCount.decrementAndGet() <= 0) { shutdown(); ExecutorUtil.terminate(workerExecutor); } },@Override void releaseExternalResources(){if(0){shutdown();terminate();}},"['@', 'Override', 'public', 'void', 'releaseExternalResources', '(', ')', '{', 'if', '(', 'referenceCount', '.', 'decrementAndGet', '(', ')', '<=', '0', ')', '{', 'shutdown', '(', ')', ';', 'ExecutorUtil', '.', 'terminate', '(', 'workerExecutor', ')', ';', '}', '}']","['@', 'Override', 'void', 'releaseExternalResources', '(', ')', '{', 'if', '(', '0', ')', '{', 'shutdown', '(', ')', ';', 'terminate', '(', ')', ';', '}', '}']",32,22,6,151,73,30,64.46280991735537,38.46153846153847,,,,-1,-1,-1,-1,False
L89_repeatWarning_1.txt,code2seq,METHOD_NAME,token_wrong,0.7575,0.7042,22.2497,26.0838,"{'n_total': 262, 'n_valid': 48, 'n_correct': 27}",100.883803,"public void repeatWarning() { if (errorId == null || errorId.length() == 0 || errorId.equals(warningParser.getDefaultWarning())) return; handler.removeCallbacks(watchdogCallback); this.handler.postDelayed(watchdogCallback, ERROR_TIMEOUT); }",void repeatWarning(){if(errorId|errorId==equals());(watchdogCallback);postDelayed(watchdogCallbackTIMEOUT);},"['public', 'void', 'repeatWarning', '(', ')', '{', 'if', '(', 'errorId', '==', 'null', '||', 'errorId', '.', 'length', '(', ')', '==', '0', '||', 'errorId', '.', 'equals', '(', 'warningParser', '.', 'getDefaultWarning', '(', ')', ')', ')', 'return', ';', 'handler', '.', 'removeCallbacks', '(', 'watchdogCallback', ')', ';', 'this', '.', 'handler', '.', 'postDelayed', '(', 'watchdogCallback', ',', 'ERROR_TIMEOUT', ')', ';', '}']","['void', 'repeatWarning', '(', ')', '{', 'if', '(', 'errorId', '|', 'errorId', '==', 'equals', '(', ')', ')', ';', '(', 'watchdogCallback', ')', ';', 'postDelayed', '(', 'watchdogCallbackTIMEOUT', ')', ';', '}']",52,26,6,240,108,19,59.72850678733032,56.52173913043478,,,,-1,-1,-1,-1,False
L90_createChild_1.txt,code2seq,METHOD_NAME,token_wrong,0.9747,0.7947,0.1118,0.8624,"{'n_total': 232, 'n_valid': 27, 'n_correct': 24}",58.674207,"protected View createChild(String name) { View view = null; if (name.equals(PGTITLE_TWO_BTNS)) { view = new CCPageTitle(this, ptModel, name); } else { view = super.createChild(name); } return view; }",View createChild(String name){if(name()){view.createChild();}},"['protected', 'View', 'createChild', '(', 'String', 'name', ')', '{', 'View', 'view', '=', 'null', ';', 'if', '(', 'name', '.', 'equals', '(', 'PGTITLE_TWO_BTNS', ')', ')', '{', 'view', '=', 'new', 'CCPageTitle', '(', 'this', ',', 'ptModel', ',', 'name', ')', ';', '}', 'else', '{', 'view', '=', 'super', '.', 'createChild', '(', 'name', ')', ';', '}', 'return', 'view', ';', '}']","['View', 'createChild', '(', 'String', 'name', ')', '{', 'if', '(', 'name', '(', ')', ')', '{', 'view', '.', 'createChild', '(', ')', ';', '}', '}']",52,22,6,199,62,17,75.27472527472527,65.21739130434783,,,,-1,-1,-1,-1,False
L91_removeHighlight_1.txt,code2seq,METHOD_NAME,token_wrong,0.7351,0.9274,10.0256,16.6885,"{'n_total': 188, 'n_valid': 15, 'n_correct': 12}",36.340349,@Override void removeHighlight(View view) { for (ColorDrawable drawable : mHighlightDrawables) { view.getOverlay().remove(drawable); } },@Override void removeHighlight(View view){for(ColorDrawable drawable:mHighlightDrawables){(drawable);}},"['@', 'Override', 'void', 'removeHighlight', '(', 'View', 'view', ')', '{', 'for', '(', 'ColorDrawable', 'drawable', ':', 'mHighlightDrawables', ')', '{', 'view', '.', 'getOverlay', '(', ')', '.', 'remove', '(', 'drawable', ')', ';', '}', '}']","['@', 'Override', 'void', 'removeHighlight', '(', 'View', 'view', ')', '{', 'for', '(', 'ColorDrawable', 'drawable', ':', 'mHighlightDrawables', ')', '{', '(', 'drawable', ')', ';', '}', '}']",30,23,6,136,103,21,28.695652173913043,29.166666666666668,,,,-1,-1,-1,-1,False
L92_addAttribute_1.txt,code2seq,METHOD_NAME,token_wrong,0.5934,0.6088,8.0102,8.0087,"{'n_total': 296, 'n_valid': 38, 'n_correct': 22}",79.620897,"public void addAttribute(String key, String value) { ConfigItem config = new BasicConfigItem(key, value, null, null, null, true); serverConfigurationService.registerConfigItem(config); Notification notification = new Notification(""jmx.mbean.info.changed"", this, notificationSeq.getAndIncrement()); notification.setUserData(getMBeanInfo()); sendNotification(notification); }","void addAttribute(String key,String value){new BasicConfigItem(true).registerConfigItem(config);(getAndIncrement());setUserDatasendNotification(notification);}","['public', 'void', 'addAttribute', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'ConfigItem', 'config', '=', 'new', 'BasicConfigItem', '(', 'key', ',', 'value', ',', 'null', ',', 'null', ',', 'null', ',', 'true', ')', ';', 'serverConfigurationService', '.', 'registerConfigItem', '(', 'config', ')', ';', 'Notification', 'notification', '=', 'new', 'Notification', '(', '""jmx.mbean.info.changed""', ',', 'this', ',', 'notificationSeq', '.', 'getAndIncrement', '(', ')', ')', ';', 'notification', '.', 'setUserData', '(', 'getMBeanInfo', '(', ')', ')', ';', 'sendNotification', '(', 'notification', ')', ';', '}']","['void', 'addAttribute', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'new', 'BasicConfigItem', '(', 'true', ')', '.', 'registerConfigItem', '(', 'config', ')', ';', '(', 'getAndIncrement', '(', ')', ')', ';', 'setUserDatasendNotification', '(', 'notification', ')', ';', '}']",69,33,6,373,159,18,60.281690140845065,57.14285714285714,,,,-1,-1,-1,-1,False
L93_testKillUnknownTask_1.txt,code2seq,METHOD_NAME,token_wrong,0.5566,0.6878,9.9935,13.002,"{'n_total': 176, 'n_valid': 28, 'n_correct': 14}",59.874414,"@Test public void testKillUnknownTask() { String unknownTask = ""unknown""; driver.killTask(unknownTask); control.replay(); changeState(unknownTask, RUNNING); }",@Test void testKillUnknownTask(){String=killTask.replay();(unknownTask);},"['@', 'Test', 'public', 'void', 'testKillUnknownTask', '(', ')', '{', 'String', 'unknownTask', '=', '""unknown""', ';', 'driver', '.', 'killTask', '(', 'unknownTask', ')', ';', 'control', '.', 'replay', '(', ')', ';', 'changeState', '(', 'unknownTask', ',', 'RUNNING', ')', ';', '}']","['@', 'Test', 'void', 'testKillUnknownTask', '(', ')', '{', 'String', '=', 'killTask', '.', 'replay', '(', ')', ';', '(', 'unknownTask', ')', ';', '}']",34,20,6,158,73,25,63.90977443609023,50.0,,,,-1,-1,-1,-1,False
L94_blockTillTerminated_1.txt,code2seq,METHOD_NAME,token_wrong,0.4592,0.5558,29.0622,30.2493,"{'n_total': 317, 'n_valid': 34, 'n_correct': 30}",71.005745,"public void blockTillTerminated() { while (!runState.compareAndSet(State.IDLE, State.REMOVED)) { LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(10)); if (Thread.currentThread().isInterrupted()) { runState.set(State.REMOVED); return; } } }",void blockTillTerminated(){while(runState()){((0));if(Thread){(State);}}},"['public', 'void', 'blockTillTerminated', '(', ')', '{', 'while', '(', '!', 'runState', '.', 'compareAndSet', '(', 'State', '.', 'IDLE', ',', 'State', '.', 'REMOVED', ')', ')', '{', 'LockSupport', '.', 'parkNanos', '(', 'TimeUnit', '.', 'MILLISECONDS', '.', 'toNanos', '(', '10', ')', ')', ';', 'if', '(', 'Thread', '.', 'currentThread', '(', ')', '.', 'isInterrupted', '(', ')', ')', '{', 'runState', '.', 'set', '(', 'State', '.', 'REMOVED', ')', ';', 'return', ';', '}', '}', '}']","['void', 'blockTillTerminated', '(', ')', '{', 'while', '(', 'runState', '(', ')', ')', '{', '(', '(', '0', ')', ')', ';', 'if', '(', 'Thread', ')', '{', '(', 'State', ')', ';', '}', '}', '}']",64,30,6,243,73,25,77.98165137614679,58.620689655172406,,,,-1,-1,-1,-1,False
L95_parsers_1.txt,code2seq,METHOD_NAME,token_wrong,0.4991,0.5032,14.6759,13.4663,"{'n_total': 412, 'n_valid': 55, 'n_correct': 27}",116.003905,"@Parameterized.Parameters public static Collection<?> parsers() { return asList(new Object[] { new OptionParser() { { posixlyCorrect(true); accepts(""i"").withRequiredArg(); accepts(""j"").withOptionalArg(); accepts(""k""); } } }, new Object[] { new OptionParser(""+i:j::k"") }); }","@Parameterized.Parameters Collection<?>parsers(){return asList(new Object[]{new OptionParser(){{posixlyCorrect(true);accepts("""").withRequiredArg;accepts(""k"");}}},new Object[]{new OptionParser(""ijk"")});}","['@', 'Parameterized', '.', 'Parameters', 'public', 'static', 'Collection', '<', '?', '>', 'parsers', '(', ')', '{', 'return', 'asList', '(', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', ')', '{', '{', 'posixlyCorrect', '(', 'true', ')', ';', 'accepts', '(', '""i""', ')', '.', 'withRequiredArg', '(', ')', ';', 'accepts', '(', '""j""', ')', '.', 'withOptionalArg', '(', ')', ';', 'accepts', '(', '""k""', ')', ';', '}', '}', '}', ',', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', '""+i:j::k""', ')', '}', ')', ';', '}']","['@', 'Parameterized', '.', 'Parameters', 'Collection', '<', '?', '>', 'parsers', '(', ')', '{', 'return', 'asList', '(', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', ')', '{', '{', 'posixlyCorrect', '(', 'true', ')', ';', 'accepts', '(', '""""', ')', '.', 'withRequiredArg', ';', 'accepts', '(', '""k""', ')', ';', '}', '}', '}', ',', 'new', 'Object', '[', ']', '{', 'new', 'OptionParser', '(', '""ijk""', ')', '}', ')', ';', '}']",74,61,6,273,202,13,27.307692307692307,19.11764705882353,,,,-1,-1,-1,-1,False
L96_sufficientSuccess_1.txt,code2seq,METHOD_NAME,token_wrong,0.6554,0.6304,28.6969,27.0481,"{'n_total': 311, 'n_valid': 42, 'n_correct': 22}",91.265572,"@Test public void sufficientSuccess() throws LoginException { whenLoginReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); whenCommitReturnTrue(requiredDelegate, requisiteDelegate, sufficientDelegate); context.login(); verifyInitialize(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyLogin(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyCommit(requiredDelegate, requisiteDelegate, sufficientDelegate); verifyNoMoreInteractions(requiredDelegate, requisiteDelegate, sufficientDelegate, optionalDelegate); }","@Test void sufficientSuccess()throws LoginException{whenLoginReturnTrue(requiredDelegate,sufficientDelegate);verifyLogin(sufficientDelegate);verifyCommit(requiredDelegate,sufficientDelegate);verifyNoMoreInteractions(requiredDelegate,requisiteDelegate,sufficientDelegate,optionalDelegate);}","['@', 'Test', 'public', 'void', 'sufficientSuccess', '(', ')', 'throws', 'LoginException', '{', 'whenLoginReturnTrue', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'whenCommitReturnTrue', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'context', '.', 'login', '(', ')', ';', 'verifyInitialize', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyLogin', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyCommit', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyNoMoreInteractions', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ',', 'optionalDelegate', ')', ';', '}']","['@', 'Test', 'void', 'sufficientSuccess', '(', ')', 'throws', 'LoginException', '{', 'whenLoginReturnTrue', '(', 'requiredDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyLogin', '(', 'sufficientDelegate', ')', ';', 'verifyCommit', '(', 'requiredDelegate', ',', 'sufficientDelegate', ')', ';', 'verifyNoMoreInteractions', '(', 'requiredDelegate', ',', 'requisiteDelegate', ',', 'sufficientDelegate', ',', 'optionalDelegate', ')', ';', '}']",73,40,6,554,289,23,49.90583804143126,49.25373134328358,,,,-1,-1,-1,-1,False
L97_addToFirstScaled_1.txt,code2seq,METHOD_NAME,token_wrong,0.4037,0.4729,24.7855,24.8544,"{'n_total': 433, 'n_valid': 38, 'n_correct': 32}",88.301418,"public static void addToFirstScaled(float[] first, float[] second, float scale) { validateArrays(first, second); for (int i = 0; i < first.length; i++) { first[i] = first[i] + second[i] * scale; } }","void addToFirstScaled(float[]first,float scale){(firstsecond);for(;;i++){first[i]=first[i]+scale;}}","['public', 'static', 'void', 'addToFirstScaled', '(', 'float', '[', ']', 'first', ',', 'float', '[', ']', 'second', ',', 'float', 'scale', ')', '{', 'validateArrays', '(', 'first', ',', 'second', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'first', '.', 'length', ';', 'i', '++', ')', '{', 'first', '[', 'i', ']', '=', 'first', '[', 'i', ']', '+', 'second', '[', 'i', ']', '*', 'scale', ';', '}', '}']","['void', 'addToFirstScaled', '(', 'float', '[', ']', 'first', ',', 'float', 'scale', ')', '{', '(', 'firstsecond', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'first', '[', 'i', ']', '=', 'first', '[', 'i', ']', '+', 'scale', ';', '}', '}']",62,38,6,198,99,22,56.25,42.857142857142854,,,,-1,-1,-1,-1,False
L98_suiteSetup_1.txt,code2seq,METHOD_NAME,token_wrong,0.9607,0.856,10.2085,7.9148,"{'n_total': 645, 'n_valid': 51, 'n_correct': 48}",114.750738,"@Parameters({ ""parent-realms"" }) @BeforeSuite(groups = { ""api"" }) public void suiteSetup(String realms) throws SSOException, SMSException { Object[] params = { realms }; entering(""suiteSetup"", params); StringTokenizer st = new StringTokenizer(realms, "",""); while (st.hasMoreElements()) { String realm = st.nextToken().trim(); createSubRealm(getAdminSSOToken(), realm); } exiting(""suiteSetup""); }","@Parameters({""""})@BeforeSuite(groups={""""})void suiteSetup(String realms){Object[]params={};(params);st();while(st){(realm);}(""suiteSetup"");}","['@', 'Parameters', '(', '{', '""parent-realms""', '}', ')', '@', 'BeforeSuite', '(', 'groups', '=', '{', '""api""', '}', ')', 'public', 'void', 'suiteSetup', '(', 'String', 'realms', ')', 'throws', 'SSOException', ',', 'SMSException', '{', 'Object', '[', ']', 'params', '=', '{', 'realms', '}', ';', 'entering', '(', '""suiteSetup""', ',', 'params', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'realms', ',', '"",""', ')', ';', 'while', '(', 'st', '.', 'hasMoreElements', '(', ')', ')', '{', 'String', 'realm', '=', 'st', '.', 'nextToken', '(', ')', '.', 'trim', '(', ')', ';', 'createSubRealm', '(', 'getAdminSSOToken', '(', ')', ',', 'realm', ')', ';', '}', 'exiting', '(', '""suiteSetup""', ')', ';', '}']","['@', 'Parameters', '(', '{', '""""', '}', ')', '@', 'BeforeSuite', '(', 'groups', '=', '{', '""""', '}', ')', 'void', 'suiteSetup', '(', 'String', 'realms', ')', '{', 'Object', '[', ']', 'params', '=', '{', '}', ';', '(', 'params', ')', ';', 'st', '(', ')', ';', 'while', '(', 'st', ')', '{', '(', 'realm', ')', ';', '}', '(', '""suiteSetup""', ')', ';', '}']",93,54,6,395,140,16,67.28232189973615,44.827586206896555,,,,-1,-1,-1,-1,False
L99_desc_1.txt,code2seq,METHOD_NAME,token_wrong,0.7,0.2628,6.4988,10.5179,"{'n_total': 165, 'n_valid': 20, 'n_correct': 13}",43.875991,final public void desc(Archive arc) throws ParseException { String s; jj_consume_token(DESC); s = string(); arc.setDesc(s); },void desc(Archive arc)throws ParseException{jj_token(DESC);s=setDesc();},"['final', 'public', 'void', 'desc', '(', 'Archive', 'arc', ')', 'throws', 'ParseException', '{', 'String', 's', ';', 'jj_consume_token', '(', 'DESC', ')', ';', 's', '=', 'string', '(', ')', ';', 'arc', '.', 'setDesc', '(', 's', ')', ';', '}']","['void', 'desc', '(', 'Archive', 'arc', ')', 'throws', 'ParseException', '{', 'jj_token', '(', 'DESC', ')', ';', 's', '=', 'setDesc', '(', ')', ';', '}']",33,21,6,125,72,10,46.08695652173913,44.44444444444444,,,,-1,-1,-1,-1,False
L100_userDefaultName_1.txt,code2seq,METHOD_NAME,token_wrong,0.9093,0.9279,18.012,19.9086,"{'n_total': 182, 'n_valid': 20, 'n_correct': 16}",43.340245,"@Test public void userDefaultName() { ProcessEngine processEngine = ProcessEngineConfiguration.createStandaloneInMemProcessEngineConfiguration().buildProcessEngine(); System.out.println(processEngine.hashCode()); assertEquals(""default"", processEngine.getName()); }","@Test void userDefaultName(){println(hashCode());assertEquals("""",processEngine);}","['@', 'Test', 'public', 'void', 'userDefaultName', '(', ')', '{', 'ProcessEngine', 'processEngine', '=', 'ProcessEngineConfiguration', '.', 'createStandaloneInMemProcessEngineConfiguration', '(', ')', '.', 'buildProcessEngine', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'processEngine', '.', 'hashCode', '(', ')', ')', ';', 'assertEquals', '(', '""default""', ',', 'processEngine', '.', 'getName', '(', ')', ')', ';', '}']","['@', 'Test', 'void', 'userDefaultName', '(', ')', '{', 'println', '(', 'hashCode', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'processEngine', ')', ';', '}']",46,22,6,264,81,21,75.30864197530865,60.0,,,,-1,-1,-1,-1,False
L101_executeDoubleWordStore_1.txt,code2seq,METHOD_NAME,token_wrong,0.4274,0.7535,27.9558,35.0975,"{'n_total': 163, 'n_valid': 25, 'n_correct': 17}",51.040314,"private void executeDoubleWordStore(@Nonnegative int arg) { pop(1); int type1 = pop(); set(arg, type1); set(arg + 1, TOP); executeStore(arg); }",void executeDoubleWordStore(int arg){pop;set();(arg);},"['private', 'void', 'executeDoubleWordStore', '(', '@', 'Nonnegative', 'int', 'arg', ')', '{', 'pop', '(', '1', ')', ';', 'int', 'type1', '=', 'pop', '(', ')', ';', 'set', '(', 'arg', ',', 'type1', ')', ';', 'set', '(', 'arg', '+', '1', ',', 'TOP', ')', ';', 'executeStore', '(', 'arg', ')', ';', '}']","['void', 'executeDoubleWordStore', '(', 'int', 'arg', ')', '{', 'pop', ';', 'set', '(', ')', ';', '(', 'arg', ')', ';', '}']",44,18,6,143,54,28,77.39130434782608,68.42105263157895,,,,-1,-1,-1,-1,False
L102_loadPersonalInfo_1.txt,code2seq,METHOD_NAME,token_wrong,0.3267,0.4845,24.7026,28.1738,"{'n_total': 327, 'n_valid': 40, 'n_correct': 21}",84.752458,"@Override public void loadPersonalInfo() { iProfileView.showProgress(); Observable.timer(2, TimeUnit.SECONDS).compose(rxSchedulersAbs.getIOToMainTransformer()).subscribe(aLong -> { iProfileView.hideProgress(); iProfileView.showError(); }, throwable -> { }); }","@Override void loadPersonalInfo(){iProfileView.showProgress;timer(2,TimeUnit()).subscribe(aLong->{hideProgress().showError();},throwable->{});}","['@', 'Override', 'public', 'void', 'loadPersonalInfo', '(', ')', '{', 'iProfileView', '.', 'showProgress', '(', ')', ';', 'Observable', '.', 'timer', '(', '2', ',', 'TimeUnit', '.', 'SECONDS', ')', '.', 'compose', '(', 'rxSchedulersAbs', '.', 'getIOToMainTransformer', '(', ')', ')', '.', 'subscribe', '(', 'aLong', '->', '{', 'iProfileView', '.', 'hideProgress', '(', ')', ';', 'iProfileView', '.', 'showError', '(', ')', ';', '}', ',', 'throwable', '->', '{', '}', ')', ';', '}']","['@', 'Override', 'void', 'loadPersonalInfo', '(', ')', '{', 'iProfileView', '.', 'showProgress', ';', 'timer', '(', '2', ',', 'TimeUnit', '(', ')', ')', '.', 'subscribe', '(', 'aLong', '->', '{', 'hideProgress', '(', ')', '.', 'showError', '(', ')', ';', '}', ',', 'throwable', '->', '{', '}', ')', ';', '}']",60,42,6,259,143,22,48.9451476793249,33.33333333333333,,,,-1,-1,-1,-1,False
L103_saveText_1.txt,code2seq,METHOD_NAME,token_wrong,0.6008,0.6209,22.2789,22.6681,"{'n_total': 308, 'n_valid': 45, 'n_correct': 23}",93.267585,"public void saveText(Path outRoot) throws IOException { Path file = outRoot.resolve(id + "".ner.model""); List<String> lines = sparseWeights.getKeyList().stream().map(s -> String.format(""%s %.3f"", s, sparseWeights.get(s))).collect(Collectors.toList()); Files.write(file, lines); }","void saveText()throws IOException{Path file=(format("""",sparseWeights.get(s))).collect(toList());Files.write();}","['public', 'void', 'saveText', '(', 'Path', 'outRoot', ')', 'throws', 'IOException', '{', 'Path', 'file', '=', 'outRoot', '.', 'resolve', '(', 'id', '+', '"".ner.model""', ')', ';', 'List', '<', 'String', '>', 'lines', '=', 'sparseWeights', '.', 'getKeyList', '(', ')', '.', 'stream', '(', ')', '.', 'map', '(', 's', '->', 'String', '.', 'format', '(', '""%s %.3f""', ',', 's', ',', 'sparseWeights', '.', 'get', '(', 's', ')', ')', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', 'Files', '.', 'write', '(', 'file', ',', 'lines', ')', ';', '}']","['void', 'saveText', '(', ')', 'throws', 'IOException', '{', 'Path', 'file', '=', '(', 'format', '(', '""""', ',', 'sparseWeights', '.', 'get', '(', 's', ')', ')', ')', '.', 'collect', '(', 'toList', '(', ')', ')', ';', 'Files', '.', 'write', '(', ')', ';', '}']",78,38,6,278,111,14,63.25757575757576,55.55555555555556,,,,-1,-1,-1,-1,False
L104_getPermissionsString_1.txt,code2seq,METHOD_NAME,token_wrong,0.5472,0.6943,7.1324,7.9185,"{'n_total': 175, 'n_valid': 26, 'n_correct': 21}",57.271384,@Override public String getPermissionsString() { if (!getPermissionsStringSet) { getPermissionsString = file.getPermissionsString(); getPermissionsStringSet = true; } return getPermissionsString; },String getPermissionsString(){if(getPermissionsStringSet){getPermissionsString=file;}},"['@', 'Override', 'public', 'String', 'getPermissionsString', '(', ')', '{', 'if', '(', '!', 'getPermissionsStringSet', ')', '{', 'getPermissionsString', '=', 'file', '.', 'getPermissionsString', '(', ')', ';', 'getPermissionsStringSet', '=', 'true', ';', '}', 'return', 'getPermissionsString', ';', '}']","['String', 'getPermissionsString', '(', ')', '{', 'if', '(', 'getPermissionsStringSet', ')', '{', 'getPermissionsString', '=', 'file', ';', '}', '}']",31,16,6,197,86,26,64.91228070175438,60.0,,,,-1,-1,-1,-1,False
L105_reset_2.txt,code2seq,METHOD_NAME,token_wrong,0.7245,0.4497,1.1745,2.3084,"{'n_total': 367, 'n_valid': 45, 'n_correct': 24}",96.00754,public void reset(ToolConfiguration configuration) { for (Iterator i = renderServices.iterator(); i.hasNext(); ) { ToolRenderService trs = (ToolRenderService) i.next(); trs.reset(configuration); } },void reset(ToolConfiguration configuration){for(renderServices.iterator();;){trs=(ToolRenderService)reset();}},"['public', 'void', 'reset', '(', 'ToolConfiguration', 'configuration', ')', '{', 'for', '(', 'Iterator', 'i', '=', 'renderServices', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'ToolRenderService', 'trs', '=', '(', 'ToolRenderService', ')', 'i', '.', 'next', '(', ')', ';', 'trs', '.', 'reset', '(', 'configuration', ')', ';', '}', '}']","['void', 'reset', '(', 'ToolConfiguration', 'configuration', ')', '{', 'for', '(', 'renderServices', '.', 'iterator', '(', ')', ';', ';', ')', '{', 'trs', '=', '(', 'ToolRenderService', ')', 'reset', '(', ')', ';', '}', '}']",48,29,6,198,110,11,47.05882352941176,45.23809523809524,,,,-1,-1,-1,-1,False
L106_getSegmentResult_1.txt,code2seq,METHOD_NAME,token_wrong,0.9711,0.3675,18.823,22.7046,"{'n_total': 188, 'n_valid': 27, 'n_correct': 23}",57.05001,"@Test public void getSegmentResult() throws Exception { String sentence = ""什么是球体和服装？一个伟大的国家，中国，电脑病毒会传染给人吗？""; List<Word> lists = Tokenizer.segment(sentence); System.out.println(lists); }","void getSegmentResult(){sentence="""";println();}","['@', 'Test', 'public', 'void', 'getSegmentResult', '(', ')', 'throws', 'Exception', '{', 'String', 'sentence', '=', '""什么是球体和服装？一个伟大的国家，中国，电脑病毒会传染给人吗？""', ';', 'List', '<', 'Word', '>', 'lists', '=', 'Tokenizer', '.', 'segment', '(', 'sentence', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'lists', ')', ';', '}']","['void', 'getSegmentResult', '(', ')', '{', 'sentence', '=', '""""', ';', 'println', '(', ')', ';', '}']",38,14,6,185,47,22,84.66257668711657,75.0,,,,-1,-1,-1,-1,False
L107_terminate_1.txt,code2seq,METHOD_NAME,token_wrong,0.2079,0.3129,4.0774,2.6389,"{'n_total': 145, 'n_valid': 25, 'n_correct': 15}",52.795368,public synchronized void terminate() { shouldTerminate = true; needReturn = false; this.notify(); },void terminate(){shouldTerminate=false;notify();},"['public', 'synchronized', 'void', 'terminate', '(', ')', '{', 'shouldTerminate', '=', 'true', ';', 'needReturn', '=', 'false', ';', 'this', '.', 'notify', '(', ')', ';', '}']","['void', 'terminate', '(', ')', '{', 'shouldTerminate', '=', 'false', ';', 'notify', '(', ')', ';', '}']",22,14,6,99,49,15,59.523809523809526,50.0,,,,-1,-1,-1,-1,False
L108_dataNodeAlive_1.txt,code2seq,METHOD_NAME,token_wrong,0.615,0.5881,13.7801,16.7004,"{'n_total': 536, 'n_valid': 55, 'n_correct': 41}",118.584536,"public static boolean dataNodeAlive(DataNode dataNode) { if (dataNode == null || dataNode.getId() == null) return true; if (!dataNodeAliveMap.containsKey(dataNode.getId())) { logger.error(""DataNode ["" + dataNode.getId() + ""] is not in the check list !!""); return true; } return dataNodeAliveMap.get(dataNode.getId()).get(); }","boolean dataNodeAlive(DataNode dataNode){if(dataNode()==null)if(!dataNodeAliveMap()){(""DataNode""+"""");}(dataNode).get();}","['public', 'static', 'boolean', 'dataNodeAlive', '(', 'DataNode', 'dataNode', ')', '{', 'if', '(', 'dataNode', '==', 'null', '||', 'dataNode', '.', 'getId', '(', ')', '==', 'null', ')', 'return', 'true', ';', 'if', '(', '!', 'dataNodeAliveMap', '.', 'containsKey', '(', 'dataNode', '.', 'getId', '(', ')', ')', ')', '{', 'logger', '.', 'error', '(', '""DataNode [""', '+', 'dataNode', '.', 'getId', '(', ')', '+', '""] is not in the check list !!""', ')', ';', 'return', 'true', ';', '}', 'return', 'dataNodeAliveMap', '.', 'get', '(', 'dataNode', '.', 'getId', '(', ')', ')', '.', 'get', '(', ')', ';', '}']","['boolean', 'dataNodeAlive', '(', 'DataNode', 'dataNode', ')', '{', 'if', '(', 'dataNode', '(', ')', '==', 'null', ')', 'if', '(', '!', 'dataNodeAliveMap', '(', ')', ')', '{', '(', '""DataNode""', '+', '""""', ')', ';', '}', '(', 'dataNode', ')', '.', 'get', '(', ')', ';', '}']",77,39,6,325,120,19,66.99346405228758,53.52112676056338,,,,-1,-1,-1,-1,False
L109_defineSuccessorSuffixes_1.txt,code2seq,METHOD_NAME,token_wrong,0.5851,0.6716,27.7697,29.8592,"{'n_total': 446, 'n_valid': 44, 'n_correct': 36}",91.429801,"public SuffixData[] defineSuccessorSuffixes(DictionaryItem item) { SuffixData original = new SuffixData(); SuffixData modified = new SuffixData(); PrimaryPos primaryPos = item.primaryPos; switch(primaryPos) { case Noun: getForNoun(item, original, modified); break; default: throw new UnsupportedOperationException(""In this class only some noun morphemes exist.""); } return new SuffixData[] { original, modified }; }","SuffixData[]defineSuccessorSuffixes(DictionaryItem item){SuffixData;switch(primaryPos){case Noun:(modified);("""");}new SuffixData[]{};}","['public', 'SuffixData', '[', ']', 'defineSuccessorSuffixes', '(', 'DictionaryItem', 'item', ')', '{', 'SuffixData', 'original', '=', 'new', 'SuffixData', '(', ')', ';', 'SuffixData', 'modified', '=', 'new', 'SuffixData', '(', ')', ';', 'PrimaryPos', 'primaryPos', '=', 'item', '.', 'primaryPos', ';', 'switch', '(', 'primaryPos', ')', '{', 'case', 'Noun', ':', 'getForNoun', '(', 'item', ',', 'original', ',', 'modified', ')', ';', 'break', ';', 'default', ':', 'throw', 'new', 'UnsupportedOperationException', '(', '""In this class only some noun morphemes exist.""', ')', ';', '}', 'return', 'new', 'SuffixData', '[', ']', '{', 'original', ',', 'modified', '}', ';', '}']","['SuffixData', '[', ']', 'defineSuccessorSuffixes', '(', 'DictionaryItem', 'item', ')', '{', 'SuffixData', ';', 'switch', '(', 'primaryPos', ')', '{', 'case', 'Noun', ':', '(', 'modified', ')', ';', '(', '""""', ')', ';', '}', 'new', 'SuffixData', '[', ']', '{', '}', ';', '}']",74,36,6,415,134,29,72.7979274611399,55.88235294117647,,,,-1,-1,-1,-1,False
L110_getHtmlFileIntent_1.txt,code2seq,METHOD_NAME,token_wrong,0.6674,0.608,11.6122,18.7219,"{'n_total': 276, 'n_valid': 38, 'n_correct': 25}",82.208226,"public static Intent getHtmlFileIntent(String param) { Uri uri = Uri.parse(param).buildUpon().encodedAuthority(""com.android.htmlfileprovider"").scheme(""content"").encodedPath(param).build(); Intent intent = new Intent(""android.intent.action.VIEW""); intent.setDataAndType(uri, ""text/html""); return intent; }","Intent getHtmlFileIntent(String param){uri=(param).buildUpon("""").encodedPath(""action"");return intent;}","['public', 'static', 'Intent', 'getHtmlFileIntent', '(', 'String', 'param', ')', '{', 'Uri', 'uri', '=', 'Uri', '.', 'parse', '(', 'param', ')', '.', 'buildUpon', '(', ')', '.', 'encodedAuthority', '(', '""com.android.htmlfileprovider""', ')', '.', 'scheme', '(', '""content""', ')', '.', 'encodedPath', '(', 'param', ')', '.', 'build', '(', ')', ';', 'Intent', 'intent', '=', 'new', 'Intent', '(', '""android.intent.action.VIEW""', ')', ';', 'intent', '.', 'setDataAndType', '(', 'uri', ',', '""text/html""', ')', ';', 'return', 'intent', ';', '}']","['Intent', 'getHtmlFileIntent', '(', 'String', 'param', ')', '{', 'uri', '=', '(', 'param', ')', '.', 'buildUpon', '(', '""""', ')', '.', 'encodedPath', '(', '""action""', ')', ';', 'return', 'intent', ';', '}']",64,27,6,304,102,23,71.88612099644128,63.793103448275865,,,,-1,-1,-1,-1,False
L111_setEnabled_1.txt,code2seq,METHOD_NAME,token_wrong,0.4913,0.5148,6.1028,10.5819,"{'n_total': 164, 'n_valid': 20, 'n_correct': 16}",42.674335,public void setEnabled(boolean enable) { enabled = enable; if (!enable) { lock.abortRemove(); last = first = null; } },void setEnabled(boolean enable){if(enable){lock=null;}},"['public', 'void', 'setEnabled', '(', 'boolean', 'enable', ')', '{', 'enabled', '=', 'enable', ';', 'if', '(', '!', 'enable', ')', '{', 'lock', '.', 'abortRemove', '(', ')', ';', 'last', '=', 'first', '=', 'null', ';', '}', '}']","['void', 'setEnabled', '(', 'boolean', 'enable', ')', '{', 'if', '(', 'enable', ')', '{', 'lock', '=', 'null', ';', '}', '}']",32,18,6,118,55,16,61.76470588235294,53.84615384615385,,,,-1,-1,-1,-1,False
L112_toolGroupIsSelected_1.txt,code2seq,METHOD_NAME,token_wrong,0.7171,0.3635,29.5125,29.9245,"{'n_total': 376, 'n_valid': 52, 'n_correct': 28}",112.108603,"public boolean toolGroupIsSelected(String groupName, String toolId) { List<String> selList = m_toolGroupSelected.get(groupName); if (selList == null) { return false; } else { int result = selList.indexOf(toolId); return result >= 0; } }","boolean toolGroupIsSelected(String groupName,String toolId){List selList;if(selList==null){}{result=0;}}","['public', 'boolean', 'toolGroupIsSelected', '(', 'String', 'groupName', ',', 'String', 'toolId', ')', '{', 'List', '<', 'String', '>', 'selList', '=', 'm_toolGroupSelected', '.', 'get', '(', 'groupName', ')', ';', 'if', '(', 'selList', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'else', '{', 'int', 'result', '=', 'selList', '.', 'indexOf', '(', 'toolId', ')', ';', 'return', 'result', '>=', '0', ';', '}', '}']","['boolean', 'toolGroupIsSelected', '(', 'String', 'groupName', ',', 'String', 'toolId', ')', '{', 'List', 'selList', ';', 'if', '(', 'selList', '==', 'null', ')', '{', '}', '{', 'result', '=', '0', ';', '}', '}']",54,28,6,236,104,25,62.55924170616114,54.166666666666664,,,,-1,-1,-1,-1,False
L113_shutdown_1.txt,code2seq,METHOD_NAME,token_wrong,0.385,0.7214,1.4907,2.9346,"{'n_total': 248, 'n_valid': 30, 'n_correct': 24}",63.608413,"public final void shutdown() { synchronized (waitMonitor) { if (!destroyed) { destroyed = true; LOG.info(""Shutting down application""); shutdownRegistry.execute(); waitMonitor.notifyAll(); } } }","void shutdown(){synchronized(waitMonitor){if(destroyed){destroyed=true;("""");}}}","['public', 'final', 'void', 'shutdown', '(', ')', '{', 'synchronized', '(', 'waitMonitor', ')', '{', 'if', '(', '!', 'destroyed', ')', '{', 'destroyed', '=', 'true', ';', 'LOG', '.', 'info', '(', '""Shutting down application""', ')', ';', 'shutdownRegistry', '.', 'execute', '(', ')', ';', 'waitMonitor', '.', 'notifyAll', '(', ')', ';', '}', '}', '}']","['void', 'shutdown', '(', ')', '{', 'synchronized', '(', 'waitMonitor', ')', '{', 'if', '(', 'destroyed', ')', '{', 'destroyed', '=', 'true', ';', '(', '""""', ')', ';', '}', '}', '}']",44,26,6,193,79,14,63.687150837988824,47.368421052631575,,,,-1,-1,-1,-1,False
L114_writeParameters_1.txt,code2seq,METHOD_NAME,token_wrong,0.3238,0.4263,5.3105,7.1058,"{'n_total': 207, 'n_valid': 26, 'n_correct': 18}",56.845679,public void writeParameters(File parameterFile) throws IOException { if (dmrParameters != null) { PrintStream out = new PrintStream(parameterFile); dmrParameters.print(out); out.close(); } },void writeParameters(File parameterFile){if(dmrParameters){PrintStream(parameterFile);print(out);close();}},"['public', 'void', 'writeParameters', '(', 'File', 'parameterFile', ')', 'throws', 'IOException', '{', 'if', '(', 'dmrParameters', '!=', 'null', ')', '{', 'PrintStream', 'out', '=', 'new', 'PrintStream', '(', 'parameterFile', ')', ';', 'dmrParameters', '.', 'print', '(', 'out', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', '}']","['void', 'writeParameters', '(', 'File', 'parameterFile', ')', '{', 'if', '(', 'dmrParameters', ')', '{', 'PrintStream', '(', 'parameterFile', ')', ';', 'print', '(', 'out', ')', ';', 'close', '(', ')', ';', '}', '}']",41,28,6,190,107,21,49.112426035502956,37.142857142857146,,,,-1,-1,-1,-1,False
L115_filterSignupMeetings_1.txt,code2seq,METHOD_NAME,token_wrong,0.234,0.234,33.8472,33.8472,"{'n_total': 244, 'n_valid': 46, 'n_correct': 12}",91.150268,public void filterSignupMeetings(List<SignupMeetingWrapper> sMeetingWrps) { if (VIEW_MY_SIGNED_UP.equals(filterChoice)) getMySignedUpOnes(sMeetingWrps); else if (VIEW_IMMEDIATE_AVAIL.equals(filterChoice)) getImmediateAvailOnes(sMeetingWrps); },void filterSignupMeetings(List<SignupMeetingWrapper>sMeetingWrps){if(VIEW_MY_SIGNED_UP.equals(filterChoice))getMySignedUpOnes(sMeetingWrps);else if(VIEW_IMMEDIATE_AVAIL.equals(filterChoice))getImmediateAvailOnes(sMeetingWrps);},"['public', 'void', 'filterSignupMeetings', '(', 'List', '<', 'SignupMeetingWrapper', '>', 'sMeetingWrps', ')', '{', 'if', '(', 'VIEW_MY_SIGNED_UP', '.', 'equals', '(', 'filterChoice', ')', ')', 'getMySignedUpOnes', '(', 'sMeetingWrps', ')', ';', 'else', 'if', '(', 'VIEW_IMMEDIATE_AVAIL', '.', 'equals', '(', 'filterChoice', ')', ')', 'getImmediateAvailOnes', '(', 'sMeetingWrps', ')', ';', '}']","['void', 'filterSignupMeetings', '(', 'List', '<', 'SignupMeetingWrapper', '>', 'sMeetingWrps', ')', '{', 'if', '(', 'VIEW_MY_SIGNED_UP', '.', 'equals', '(', 'filterChoice', ')', ')', 'getMySignedUpOnes', '(', 'sMeetingWrps', ')', ';', 'else', 'if', '(', 'VIEW_IMMEDIATE_AVAIL', '.', 'equals', '(', 'filterChoice', ')', ')', 'getImmediateAvailOnes', '(', 'sMeetingWrps', ')', ';', '}']",41,40,6,243,227,26,7.373271889400922,2.857142857142857,,,,-1,-1,-1,-1,False
L116_findExternalPoints_1.txt,code2seq,METHOD_NAME,token_wrong,0.6155,0.5264,16.9555,15.8347,"{'n_total': 305, 'n_valid': 47, 'n_correct': 20}",98.210253,"public static LineLatLong findExternalPoints(ArrayList<LatLong> crosses) { LatLong meanCoord = new CoordBounds(crosses).getMiddle(); LatLong start = PointTools.findFarthestPoint(crosses, meanCoord); LatLong end = PointTools.findFarthestPoint(crosses, start); return new LineLatLong(start, end); }","LineLatLong findExternalPoints(ArrayList<LatLong>crosses){PointTools.findFarthestPoint(crosses);LatLong.findFarthestPoint(start);new LineLatLong(start,end);}","['public', 'static', 'LineLatLong', 'findExternalPoints', '(', 'ArrayList', '<', 'LatLong', '>', 'crosses', ')', '{', 'LatLong', 'meanCoord', '=', 'new', 'CoordBounds', '(', 'crosses', ')', '.', 'getMiddle', '(', ')', ';', 'LatLong', 'start', '=', 'PointTools', '.', 'findFarthestPoint', '(', 'crosses', ',', 'meanCoord', ')', ';', 'LatLong', 'end', '=', 'PointTools', '.', 'findFarthestPoint', '(', 'crosses', ',', 'start', ')', ';', 'return', 'new', 'LineLatLong', '(', 'start', ',', 'end', ')', ';', '}']","['LineLatLong', 'findExternalPoints', '(', 'ArrayList', '<', 'LatLong', '>', 'crosses', ')', '{', 'PointTools', '.', 'findFarthestPoint', '(', 'crosses', ')', ';', 'LatLong', '.', 'findFarthestPoint', '(', 'start', ')', ';', 'new', 'LineLatLong', '(', 'start', ',', 'end', ')', ';', '}']",59,33,6,296,157,24,51.10294117647059,49.056603773584904,,,,-1,-1,-1,-1,False
L117_doSomeChange_1.txt,code2seq,METHOD_NAME,token_wrong,0.6661,0.7744,26.7674,27.6328,"{'n_total': 371, 'n_valid': 31, 'n_correct': 30}",69.095318,"private void doSomeChange(final int left, final int right, final String original, final String change) { while (leftLineNum < left) { appendLine(objectifiedLeft[leftLineNum++], original); } while (rightLineNum < right) { appendLine(objectifiedRight[rightLineNum++], change); } }","void doSomeChange(int left,String original,String change){while(left){appendLine(objectifiedLeft[leftLineNum],original);}while(rightLineNum){(objectifiedRight[rightLineNum++]);}}","['private', 'void', 'doSomeChange', '(', 'final', 'int', 'left', ',', 'final', 'int', 'right', ',', 'final', 'String', 'original', ',', 'final', 'String', 'change', ')', '{', 'while', '(', 'leftLineNum', '<', 'left', ')', '{', 'appendLine', '(', 'objectifiedLeft', '[', 'leftLineNum', '++', ']', ',', 'original', ')', ';', '}', 'while', '(', 'rightLineNum', '<', 'right', ')', '{', 'appendLine', '(', 'objectifiedRight', '[', 'rightLineNum', '++', ']', ',', 'change', ')', ';', '}', '}']","['void', 'doSomeChange', '(', 'int', 'left', ',', 'String', 'original', ',', 'String', 'change', ')', '{', 'while', '(', 'left', ')', '{', 'appendLine', '(', 'objectifiedLeft', '[', 'leftLineNum', ']', ',', 'original', ')', ';', '}', 'while', '(', 'rightLineNum', ')', '{', '(', 'objectifiedRight', '[', 'rightLineNum', '++', ']', ')', ';', '}', '}']",60,44,6,278,178,18,38.46153846153847,29.629629629629626,,,,-1,-1,-1,-1,False
L118_nextPage_1.txt,code2seq,METHOD_NAME,token_wrong,0.2992,0.2242,7.6946,10.2642,"{'n_total': 215, 'n_valid': 32, 'n_correct': 23}",67.38921,public void nextPage() { if (m_ascending) { this.firstItem = this.firstItem + m_pageSize; } else { this.firstItem = this.firstItem - m_pageSize; } setIndexes(); },void nextPage(){if(m){firstItem=firstItem;}setIndexes();},"['public', 'void', 'nextPage', '(', ')', '{', 'if', '(', 'm_ascending', ')', '{', 'this', '.', 'firstItem', '=', 'this', '.', 'firstItem', '+', 'm_pageSize', ';', '}', 'else', '{', 'this', '.', 'firstItem', '=', 'this', '.', 'firstItem', '-', 'm_pageSize', ';', '}', 'setIndexes', '(', ')', ';', '}']","['void', 'nextPage', '(', ')', '{', 'if', '(', 'm', ')', '{', 'firstItem', '=', 'firstItem', ';', '}', 'setIndexes', '(', ')', ';', '}']",40,20,6,162,57,14,70.94594594594594,58.82352941176471,,,,-1,-1,-1,-1,False
L119_shouldCopyToken_1.txt,code2seq,METHOD_NAME,token_wrong,0.6521,0.5941,19.8849,18.7302,"{'n_total': 324, 'n_valid': 50, 'n_correct': 27}",103.997613,"@Test public void shouldCopyToken() { Token token = new Token(""badger"", TokenType.SAML2); token.setAttribute(CoreTokenField.INTEGER_ONE, 1234); token.setAttribute(CoreTokenField.STRING_ONE, ""Weasel""); token.setAttribute(CoreTokenField.DATE_ONE, Calendar.getInstance()); Token result = new Token(token); TokenTestUtils.assertTokenEquals(result, token); }","void shouldCopyToken(){tokenToken("""","""");token.setAttribute(getInstance());Token result=Token();}","['@', 'Test', 'public', 'void', 'shouldCopyToken', '(', ')', '{', 'Token', 'token', '=', 'new', 'Token', '(', '""badger""', ',', 'TokenType', '.', 'SAML2', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'INTEGER_ONE', ',', '1234', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'STRING_ONE', ',', '""Weasel""', ')', ';', 'token', '.', 'setAttribute', '(', 'CoreTokenField', '.', 'DATE_ONE', ',', 'Calendar', '.', 'getInstance', '(', ')', ')', ';', 'Token', 'result', '=', 'new', 'Token', '(', 'token', ')', ';', 'TokenTestUtils', '.', 'assertTokenEquals', '(', 'result', ',', 'token', ')', ';', '}']","['void', 'shouldCopyToken', '(', ')', '{', 'tokenToken', '(', '""""', ',', '""""', ')', ';', 'token', '.', 'setAttribute', '(', 'getInstance', '(', ')', ')', ';', 'Token', 'result', '=', 'Token', '(', ')', ';', '}']",77,29,6,353,97,21,77.10843373493977,67.6056338028169,,,,-1,-1,-1,-1,False
L120_ensureSize_1.txt,code2seq,METHOD_NAME,token_wrong,0.4025,0.1845,10.2147,7.8897,"{'n_total': 375, 'n_valid': 40, 'n_correct': 33}",86.79665,"public void ensureSize(ArrayList<DenseFloatMatrix1D> list, int size) { int lSize = list.size(); if (size <= lSize) return; for (int i = lSize; i < size; i++) list.add(null); }","void ensureSize(ArrayList<D>list,int size){lSize();if(size)for(;;);}","['public', 'void', 'ensureSize', '(', 'ArrayList', '<', 'DenseFloatMatrix1D', '>', 'list', ',', 'int', 'size', ')', '{', 'int', 'lSize', '=', 'list', '.', 'size', '(', ')', ';', 'if', '(', 'size', '<=', 'lSize', ')', 'return', ';', 'for', '(', 'int', 'i', '=', 'lSize', ';', 'i', '<', 'size', ';', 'i', '++', ')', 'list', '.', 'add', '(', 'null', ')', ';', '}']","['void', 'ensureSize', '(', 'ArrayList', '<', 'D', '>', 'list', ',', 'int', 'size', ')', '{', 'lSize', '(', ')', ';', 'if', '(', 'size', ')', 'for', '(', ';', ';', ')', ';', '}']",53,28,6,175,68,16,67.29559748427673,53.191489361702125,,,,-1,-1,-1,-1,False
L121_moveToInsertRow_1.txt,code2seq,METHOD_NAME,token_wrong,0.5823,0.5198,15.6404,17.7572,"{'n_total': 207, 'n_valid': 33, 'n_correct': 18}",68.577238,"public void moveToInsertRow() throws SQLException { if (!canBeInserted) throw new SQLException(exceptionInsertMsg); Arrays.fill(parameterHolders, null); state = STATE_INSERT; notInsertRowPointer = getRowPointer(); }",void moveToInsertRow()throws SQLException{throw SQLException(exceptionInsertMsg);fill(null);INSERT=getRowPointer();},"['public', 'void', 'moveToInsertRow', '(', ')', 'throws', 'SQLException', '{', 'if', '(', '!', 'canBeInserted', ')', 'throw', 'new', 'SQLException', '(', 'exceptionInsertMsg', ')', ';', 'Arrays', '.', 'fill', '(', 'parameterHolders', ',', 'null', ')', ';', 'state', '=', 'STATE_INSERT', ';', 'notInsertRowPointer', '=', 'getRowPointer', '(', ')', ';', '}']","['void', 'moveToInsertRow', '(', ')', 'throws', 'SQLException', '{', 'throw', 'SQLException', '(', 'exceptionInsertMsg', ')', ';', 'fill', '(', 'null', ')', ';', 'INSERT', '=', 'getRowPointer', '(', ')', ';', '}']",40,25,6,215,116,21,51.03092783505154,44.11764705882353,,,,-1,-1,-1,-1,False
L122_notifyCallback_1.txt,code2seq,METHOD_NAME,token_wrong,0.6821,0.698,8.4728,8.7072,"{'n_total': 115, 'n_valid': 11, 'n_correct': 11}",24.573669,private void notifyCallback(int event) { if (callback != null) { callback.onEvent(event); } },void notifyCallback(int event){if(callback){}},"['private', 'void', 'notifyCallback', '(', 'int', 'event', ')', '{', 'if', '(', 'callback', '!=', 'null', ')', '{', 'callback', '.', 'onEvent', '(', 'event', ')', ';', '}', '}']","['void', 'notifyCallback', '(', 'int', 'event', ')', '{', 'if', '(', 'callback', ')', '{', '}', '}']",24,14,6,93,46,20,64.38356164383562,55.55555555555556,,,,-1,-1,-1,-1,False
L123_checkPreconditions_1.txt,code2seq,METHOD_NAME,token_wrong,0.5163,0.4977,16.9804,18.327,"{'n_total': 494, 'n_valid': 61, 'n_correct': 34}",130.679266,"private static void checkPreconditions(JsonNode command, boolean nonTransactional) throws CommandExecutionException { if (!DbHelper.isConnectedAsAdmin(false)) { throw new CommandExecutionException(command, ""non authorized""); } if (nonTransactional && DbHelper.isInTransaction()) { throw new CommandExecutionException(command, ""cannot alter collections during transaction""); } }","void checkPreconditions(JsonNode command,boolean nonTransactional){if((false)){throw(""non authorized"");}if(nonTransactional&&DbHelper){CommandExecutionException(command,""cannot"");}}","['private', 'static', 'void', 'checkPreconditions', '(', 'JsonNode', 'command', ',', 'boolean', 'nonTransactional', ')', 'throws', 'CommandExecutionException', '{', 'if', '(', '!', 'DbHelper', '.', 'isConnectedAsAdmin', '(', 'false', ')', ')', '{', 'throw', 'new', 'CommandExecutionException', '(', 'command', ',', '""non authorized""', ')', ';', '}', 'if', '(', 'nonTransactional', '&&', 'DbHelper', '.', 'isInTransaction', '(', ')', ')', '{', 'throw', 'new', 'CommandExecutionException', '(', 'command', ',', '""cannot alter collections during transaction""', ')', ';', '}', '}']","['void', 'checkPreconditions', '(', 'JsonNode', 'command', ',', 'boolean', 'nonTransactional', ')', '{', 'if', '(', '(', 'false', ')', ')', '{', 'throw', '(', '""non authorized""', ')', ';', '}', 'if', '(', 'nonTransactional', '&&', 'DbHelper', ')', '{', 'CommandExecutionException', '(', 'command', ',', '""cannot""', ')', ';', '}', '}']",57,39,6,377,181,24,55.524079320113316,35.294117647058826,,,,-1,-1,-1,-1,False
L124_toList_1.txt,code2seq,METHOD_NAME,token_wrong,0.4501,0.3666,9.9362,11.3893,"{'n_total': 491, 'n_valid': 52, 'n_correct': 34}",107.244751,"@Override public <T> List<T> toList(String json, Class<T> type) { try { return mapper.readValue(json, mapper.getTypeFactory().constructCollectionLikeType(ArrayList.class, type)); } catch (Exception e) { throw new IllegalArgumentException(""Cannot convert JSON"", e); } }","@Override<T>List<T>toList(String json,Class<T>type){try{mapper.readValue(getTypeFactory().constructCollectionLikeType(ArrayListclass));}catch(Exception e){("""");}}","['@', 'Override', 'public', '<', 'T', '>', 'List', '<', 'T', '>', 'toList', '(', 'String', 'json', ',', 'Class', '<', 'T', '>', 'type', ')', '{', 'try', '{', 'return', 'mapper', '.', 'readValue', '(', 'json', ',', 'mapper', '.', 'getTypeFactory', '(', ')', '.', 'constructCollectionLikeType', '(', 'ArrayList', '.', 'class', ',', 'type', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '""Cannot convert JSON""', ',', 'e', ')', ';', '}', '}']","['@', 'Override', '<', 'T', '>', 'List', '<', 'T', '>', 'toList', '(', 'String', 'json', ',', 'Class', '<', 'T', '>', 'type', ')', '{', 'try', '{', 'mapper', '.', 'readValue', '(', 'getTypeFactory', '(', ')', '.', 'constructCollectionLikeType', '(', 'ArrayListclass', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', '""""', ')', ';', '}', '}']",65,50,6,268,162,12,41.40625,25.423728813559322,,,,-1,-1,-1,-1,False
L125_addHit_1.txt,code2seq,METHOD_NAME,token_wrong,0.7191,0.2939,6.5073,5.3482,"{'n_total': 274, 'n_valid': 37, 'n_correct': 28}",78.867314,"void addHit(long networkTime, long domProcessing, long pageRendering) { if (networkTime < 0 || networkTime > ABERRANT_VALUE || domProcessing < 0 || domProcessing > ABERRANT_VALUE || pageRendering < 0 || pageRendering > ABERRANT_VALUE) { return; } networkTimeSum += networkTime; domProcessingSum += domProcessing; pageRenderingSum += pageRendering; hits++; }","void addHit(long networkTime,long domProcessing,long pageRendering){if(networkTime){}networkTimeSum domProcessing;hits++;}","['void', 'addHit', '(', 'long', 'networkTime', ',', 'long', 'domProcessing', ',', 'long', 'pageRendering', ')', '{', 'if', '(', 'networkTime', '<', '0', '||', 'networkTime', '>', 'ABERRANT_VALUE', '||', 'domProcessing', '<', '0', '||', 'domProcessing', '>', 'ABERRANT_VALUE', '||', 'pageRendering', '<', '0', '||', 'pageRendering', '>', 'ABERRANT_VALUE', ')', '{', 'return', ';', '}', 'networkTimeSum', '+=', 'networkTime', ';', 'domProcessingSum', '+=', 'domProcessing', ';', 'pageRenderingSum', '+=', 'pageRendering', ';', 'hits', '++', ';', '}']","['void', 'addHit', '(', 'long', 'networkTime', ',', 'long', 'domProcessing', ',', 'long', 'pageRendering', ')', '{', 'if', '(', 'networkTime', ')', '{', '}', 'networkTimeSum', 'domProcessing', ';', 'hits', '++', ';', '}']",59,26,6,357,122,12,68.11594202898551,62.264150943396224,,,,-1,-1,-1,-1,False
L126_updateInstance_1.txt,code2seq,METHOD_NAME,token_wrong,0.9796,0.7654,10.0985,8.8573,"{'n_total': 485, 'n_valid': 41, 'n_correct': 39}",86.995902,"@Override public Promise<ResourceResponse, ResourceException> updateInstance(Context context, String resourceId, UpdateRequest request) { return umaPolicyService.updatePolicy(context, resourceId, request.getContent()).thenAsync(new AsyncFunction<UmaPolicy, ResourceResponse, ResourceException>() { @Override public Promise<ResourceResponse, ResourceException> apply(UmaPolicy result) { return newResultPromise(newResourceResponse(result.getId(), result.getRevision(), result.asJson())); } }); }","Promise<ResourceException>updateInstance(String resourceId,UpdateRequest request){updatePolicy(getContent()).thenAsync(new AsyncFunction<ResourceResponse>(){<ResourceException>apply(UmaPolicy result){((asJson()));}});}","['@', 'Override', 'public', 'Promise', '<', 'ResourceResponse', ',', 'ResourceException', '>', 'updateInstance', '(', 'Context', 'context', ',', 'String', 'resourceId', ',', 'UpdateRequest', 'request', ')', '{', 'return', 'umaPolicyService', '.', 'updatePolicy', '(', 'context', ',', 'resourceId', ',', 'request', '.', 'getContent', '(', ')', ')', '.', 'thenAsync', '(', 'new', 'AsyncFunction', '<', 'UmaPolicy', ',', 'ResourceResponse', ',', 'ResourceException', '>', '(', ')', '{', '@', 'Override', 'public', 'Promise', '<', 'ResourceResponse', ',', 'ResourceException', '>', 'apply', '(', 'UmaPolicy', 'result', ')', '{', 'return', 'newResultPromise', '(', 'newResourceResponse', '(', 'result', '.', 'getId', '(', ')', ',', 'result', '.', 'getRevision', '(', ')', ',', 'result', '.', 'asJson', '(', ')', ')', ')', ';', '}', '}', ')', ';', '}']","['Promise', '<', 'ResourceException', '>', 'updateInstance', '(', 'String', 'resourceId', ',', 'UpdateRequest', 'request', ')', '{', 'updatePolicy', '(', 'getContent', '(', ')', ')', '.', 'thenAsync', '(', 'new', 'AsyncFunction', '<', 'ResourceResponse', '>', '(', ')', '{', '<', 'ResourceException', '>', 'apply', '(', 'UmaPolicy', 'result', ')', '{', '(', '(', 'asJson', '(', ')', ')', ')', ';', '}', '}', ')', ';', '}']",96,52,6,494,218,20,58.22784810126582,48.888888888888886,,,,-1,-1,-1,-1,False
L127_doLs_1.txt,code2seq,METHOD_NAME,token_wrong,0.7919,0.67,15.6814,13.7158,"{'n_total': 217, 'n_valid': 29, 'n_correct': 20}",63.444202,"private void doLs(PrintStream writer) throws DumpUsageException { File baseDir = getBaseDir(mContext); if (baseDir.isDirectory()) { printDirectoryText(baseDir, """", writer); } }",void doLs()throws DumpUsageException{File baseDir=(mContext);if(baseDir){printDirectoryText();}},"['private', 'void', 'doLs', '(', 'PrintStream', 'writer', ')', 'throws', 'DumpUsageException', '{', 'File', 'baseDir', '=', 'getBaseDir', '(', 'mContext', ')', ';', 'if', '(', 'baseDir', '.', 'isDirectory', '(', ')', ')', '{', 'printDirectoryText', '(', 'baseDir', ',', '""""', ',', 'writer', ')', ';', '}', '}']","['void', 'doLs', '(', ')', 'throws', 'DumpUsageException', '{', 'File', 'baseDir', '=', '(', 'mContext', ')', ';', 'if', '(', 'baseDir', ')', '{', 'printDirectoryText', '(', ')', ';', '}', '}']",38,25,6,176,96,10,48.19277108433735,40.625,,,,-1,-1,-1,-1,False
L128_shouldBuildCorrectObject_1.txt,code2seq,METHOD_NAME,token_wrong,0.532,0.4598,13.346,14.8109,"{'n_total': 468, 'n_valid': 60, 'n_correct': 31}",130.021442,"@Test public void shouldBuildCorrectObject() { byte[] body = DatatypeConverter.parseBase64Binary(""some_body""); BinaryBody binaryBody = new BinaryBodyDTO(new BinaryBody(body)).buildObject(); assertThat(binaryBody.getValue(), is(body)); assertThat(binaryBody.getType(), is(Body.Type.BINARY)); }","@Test void shouldBuildCorrectObject(){byte[]body=DatatypeConverter.Binary("""");binaryBodyBinaryBodyDTO(BinaryBody()).buildObject();(binaryBody);assertThat(binaryBody,is(Type.BINARY));}","['@', 'Test', 'public', 'void', 'shouldBuildCorrectObject', '(', ')', '{', 'byte', '[', ']', 'body', '=', 'DatatypeConverter', '.', 'parseBase64Binary', '(', '""some_body""', ')', ';', 'BinaryBody', 'binaryBody', '=', 'new', 'BinaryBodyDTO', '(', 'new', 'BinaryBody', '(', 'body', ')', ')', '.', 'buildObject', '(', ')', ';', 'assertThat', '(', 'binaryBody', '.', 'getValue', '(', ')', ',', 'is', '(', 'body', ')', ')', ';', 'assertThat', '(', 'binaryBody', '.', 'getType', '(', ')', ',', 'is', '(', 'Body', '.', 'Type', '.', 'BINARY', ')', ')', ';', '}']","['@', 'Test', 'void', 'shouldBuildCorrectObject', '(', ')', '{', 'byte', '[', ']', 'body', '=', 'DatatypeConverter', '.', 'Binary', '(', '""""', ')', ';', 'binaryBodyBinaryBodyDTO', '(', 'BinaryBody', '(', ')', ')', '.', 'buildObject', '(', ')', ';', '(', 'binaryBody', ')', ';', 'assertThat', '(', 'binaryBody', ',', 'is', '(', 'Type', '.', 'BINARY', ')', ')', ';', '}']",70,47,6,292,183,30,41.603053435114504,35.9375,,,,-1,-1,-1,-1,False
L129_matchCriteria_1.txt,code2seq,METHOD_NAME,token_wrong,0.5358,0.2885,9.3808,9.8054,"{'n_total': 408, 'n_valid': 51, 'n_correct': 38}",108.872141,"@SuppressWarnings(""unchecked"") protected boolean matchCriteria(Set criteria, Set target) { if ((criteria == null) || (criteria.isEmpty())) return true; for (Iterator i = target.iterator(); i.hasNext(); ) { String t = (String) i.next(); if (criteria.contains(t)) return true; } return false; }","boolean matchCriteria(Set criteria,Set target){if((criteria)(criteria))for(Iterator;hasNext();){ti;(criteria());}return false;}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', 'protected', 'boolean', 'matchCriteria', '(', 'Set', 'criteria', ',', 'Set', 'target', ')', '{', 'if', '(', '(', 'criteria', '==', 'null', ')', '||', '(', 'criteria', '.', 'isEmpty', '(', ')', ')', ')', 'return', 'true', ';', 'for', '(', 'Iterator', 'i', '=', 'target', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'String', 't', '=', '(', 'String', ')', 'i', '.', 'next', '(', ')', ';', 'if', '(', 'criteria', '.', 'contains', '(', 't', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'matchCriteria', '(', 'Set', 'criteria', ',', 'Set', 'target', ')', '{', 'if', '(', '(', 'criteria', ')', '(', 'criteria', ')', ')', 'for', '(', 'Iterator', ';', 'hasNext', '(', ')', ';', ')', '{', 'ti', ';', '(', 'criteria', '(', ')', ')', ';', '}', 'return', 'false', ';', '}']",83,42,6,292,127,19,60.43956043956044,53.246753246753244,,,,-1,-1,-1,-1,False
L130_getPluginSchema_1.txt,code2seq,METHOD_NAME,token_wrong,0.5353,0.3941,3.3608,5.0927,"{'n_total': 239, 'n_valid': 32, 'n_correct': 18}",67.504012,"public PluginSchema getPluginSchema(String pluginSchemaName, String interfaceName, String orgName) throws SMSException { SMSEntry.validateToken(token); validate(); return (new PluginSchema(token, serviceName, version, pluginSchemaName, interfaceName, orgName)); }","PluginSchema getPluginSchema(String interfaceName,String orgName){SMSEntry.validateToken(token);return(new PluginSchema());}","['public', 'PluginSchema', 'getPluginSchema', '(', 'String', 'pluginSchemaName', ',', 'String', 'interfaceName', ',', 'String', 'orgName', ')', 'throws', 'SMSException', '{', 'SMSEntry', '.', 'validateToken', '(', 'token', ')', ';', 'validate', '(', ')', ';', 'return', '(', 'new', 'PluginSchema', '(', 'token', ',', 'serviceName', ',', 'version', ',', 'pluginSchemaName', ',', 'interfaceName', ',', 'orgName', ')', ')', ';', '}']","['PluginSchema', 'getPluginSchema', '(', 'String', 'interfaceName', ',', 'String', 'orgName', ')', '{', 'SMSEntry', '.', 'validateToken', '(', 'token', ')', ';', 'return', '(', 'new', 'PluginSchema', '(', ')', ')', ';', '}']",47,26,6,263,124,21,57.438016528925615,51.21951219512195,,,,-1,-1,-1,-1,False
L131_endElement_1.txt,code2seq,METHOD_NAME,token_wrong,0.6892,0.7996,3.9982,6.1656,"{'n_total': 162, 'n_valid': 18, 'n_correct': 13}",36.854603,"public void endElement(String name) throws IOException { offset -= OFFSET_INCREMENT; indent(); out.print(""</""); out.print(name); out.print('>'); println(); if (out.checkError()) throw new IOException(); }","void endElement(String name){(""</"");IOException();}","['public', 'void', 'endElement', '(', 'String', 'name', ')', 'throws', 'IOException', '{', 'offset', '-=', 'OFFSET_INCREMENT', ';', 'indent', '(', ')', ';', 'out', '.', 'print', '(', '""</""', ')', ';', 'out', '.', 'print', '(', 'name', ')', ';', 'out', '.', 'print', '(', ""'>'"", ')', ';', 'println', '(', ')', ';', 'if', '(', 'out', '.', 'checkError', '(', ')', ')', 'throw', 'new', 'IOException', '(', ')', ';', '}']","['void', 'endElement', '(', 'String', 'name', ')', '{', '(', '""</""', ')', ';', 'IOException', '(', ')', ';', '}']",58,16,6,204,51,16,81.38297872340425,80.76923076923077,,,,-1,-1,-1,-1,False
L132_destroy_1.txt,code2seq,METHOD_NAME,token_wrong,0.5108,0.4398,4.2728,3.9515,"{'n_total': 159, 'n_valid': 15, 'n_correct': 15}",34.682605,@Override public void destroy() { for (DefaultRegistry c : clients.values()) { c.shutdownGracefully(); } },void destroy(){for(DefaultRegistry c:clients){shutdownGracefully();}},"['@', 'Override', 'public', 'void', 'destroy', '(', ')', '{', 'for', '(', 'DefaultRegistry', 'c', ':', 'clients', '.', 'values', '(', ')', ')', '{', 'c', '.', 'shutdownGracefully', '(', ')', ';', '}', '}']","['void', 'destroy', '(', ')', '{', 'for', '(', 'DefaultRegistry', 'c', ':', 'clients', ')', '{', 'shutdownGracefully', '(', ')', ';', '}', '}']",28,19,6,106,69,13,39.784946236559136,40.909090909090914,,,,-1,-1,-1,-1,False
L133_onInputSizeChanged_1.txt,code2seq,METHOD_NAME,token_wrong,0.6824,0.7629,10.8974,12.1113,"{'n_total': 467, 'n_valid': 58, 'n_correct': 35}",123.267075,"public void onInputSizeChanged(final int width, final int height) { super.onInputSizeChanged(width, height); runOnDraw(new Runnable() { @Override public void run() { GLES20.glUniform1f(mTexelWidthUniformLocation, (float) width); GLES20.glUniform1f(mTexelHeightUniformLocation, (float) height); } }); }","void onInputSizeChanged(int height){super.onInputSizeChanged();runOnDraw(new Runnable(){run(){GLES(mTexelWidthUniformLocation,(float)width);(mTexelHeightUniformLocation);}});}","['public', 'void', 'onInputSizeChanged', '(', 'final', 'int', 'width', ',', 'final', 'int', 'height', ')', '{', 'super', '.', 'onInputSizeChanged', '(', 'width', ',', 'height', ')', ';', 'runOnDraw', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'GLES20', '.', 'glUniform1f', '(', 'mTexelWidthUniformLocation', ',', '(', 'float', ')', 'width', ')', ';', 'GLES20', '.', 'glUniform1f', '(', 'mTexelHeightUniformLocation', ',', '(', 'float', ')', 'height', ')', ';', '}', '}', ')', ';', '}']","['void', 'onInputSizeChanged', '(', 'int', 'height', ')', '{', 'super', '.', 'onInputSizeChanged', '(', ')', ';', 'runOnDraw', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'GLES', '(', 'mTexelWidthUniformLocation', ',', '(', 'float', ')', 'width', ')', ';', '(', 'mTexelHeightUniformLocation', ')', ';', '}', '}', ')', ';', '}']",66,43,6,301,175,24,45.48736462093863,38.333333333333336,,,,-1,-1,-1,-1,False
L134_translate_1.txt,code2seq,METHOD_NAME,token_wrong,0.2435,0.219,10.5607,10.934,"{'n_total': 440, 'n_valid': 73, 'n_correct': 24}",153.861716,"public Importable translate(Node resourceNode, Document descriptor, String contextPath, String archiveBasePath) { Assessment rv = new Assessment(); Document stylesheet = readDocument(xsl); rv.setQti(transformDocument(descriptor, stylesheet)); rv.setVersion(""1.2""); rv.setLegacyGroup(Blackboard6FileParser.ASSESSMENT_GROUP); return rv; }","Importable translate(Node resourceNode,Document descriptor,String contextPath,String archiveBasePath){Document stylesheet=readDocument(xsl);rv.setQti(transformDocument(descriptor));setVersion("""");rv.setLegacyGroup(FileParser.ASSESSMENT_GROUP);rv;}","['public', 'Importable', 'translate', '(', 'Node', 'resourceNode', ',', 'Document', 'descriptor', ',', 'String', 'contextPath', ',', 'String', 'archiveBasePath', ')', '{', 'Assessment', 'rv', '=', 'new', 'Assessment', '(', ')', ';', 'Document', 'stylesheet', '=', 'readDocument', '(', 'xsl', ')', ';', 'rv', '.', 'setQti', '(', 'transformDocument', '(', 'descriptor', ',', 'stylesheet', ')', ')', ';', 'rv', '.', 'setVersion', '(', '""1.2""', ')', ';', 'rv', '.', 'setLegacyGroup', '(', 'Blackboard6FileParser', '.', 'ASSESSMENT_GROUP', ')', ';', 'return', 'rv', ';', '}']","['Importable', 'translate', '(', 'Node', 'resourceNode', ',', 'Document', 'descriptor', ',', 'String', 'contextPath', ',', 'String', 'archiveBasePath', ')', '{', 'Document', 'stylesheet', '=', 'readDocument', '(', 'xsl', ')', ';', 'rv', '.', 'setQti', '(', 'transformDocument', '(', 'descriptor', ')', ')', ';', 'setVersion', '(', '""""', ')', ';', 'rv', '.', 'setLegacyGroup', '(', 'FileParser', '.', 'ASSESSMENT_GROUP', ')', ';', 'rv', ';', '}']",65,51,6,336,247,15,27.725856697819314,23.728813559322035,,,,-1,-1,-1,-1,False
L135_patchObjects_1.txt,code2seq,METHOD_NAME,token_wrong,0.4695,0.7977,11.3252,14.4407,"{'n_total': 798, 'n_valid': 99, 'n_correct': 57}",211.974527,"@PATCH public void patchObjects(List<APIPatch<String>> patches) throws GuacamoleException { for (APIPatch<String> patch : patches) { if (patch.getOp() != APIPatch.Operation.remove) throw new GuacamoleUnsupportedException(""Only the \""remove\"" "" + ""operation is supported.""); String path = patch.getPath(); if (!path.startsWith(""/"")) throw new GuacamoleClientException(""Patch paths must start with \""/\"".""); directory.remove(path.substring(1)); } }","void patchObjects(List<APIPatch<String>>patches)throws GuacamoleException{for(APIPatch<String>patch:patches){if(getOp()!=remove)GuacamoleUnsupportedException(""\""""+"""");patch;if((""/""))throw GuacamoleClientException("""").remove();}}","['@', 'PATCH', 'public', 'void', 'patchObjects', '(', 'List', '<', 'APIPatch', '<', 'String', '>', '>', 'patches', ')', 'throws', 'GuacamoleException', '{', 'for', '(', 'APIPatch', '<', 'String', '>', 'patch', ':', 'patches', ')', '{', 'if', '(', 'patch', '.', 'getOp', '(', ')', '!=', 'APIPatch', '.', 'Operation', '.', 'remove', ')', 'throw', 'new', 'GuacamoleUnsupportedException', '(', '""Only the \\""remove\\"" ""', '+', '""operation is supported.""', ')', ';', 'String', 'path', '=', 'patch', '.', 'getPath', '(', ')', ';', 'if', '(', '!', 'path', '.', 'startsWith', '(', '""/""', ')', ')', 'throw', 'new', 'GuacamoleClientException', '(', '""Patch paths must start with \\""/\\"".""', ')', ';', 'directory', '.', 'remove', '(', 'path', '.', 'substring', '(', '1', ')', ')', ';', '}', '}']","['void', 'patchObjects', '(', 'List', '<', 'APIPatch', '<', 'String', '>', '>', 'patches', ')', 'throws', 'GuacamoleException', '{', 'for', '(', 'APIPatch', '<', 'String', '>', 'patch', ':', 'patches', ')', '{', 'if', '(', 'getOp', '(', ')', '!=', 'remove', ')', 'GuacamoleUnsupportedException', '(', '""\\""""', '+', '""""', ')', ';', 'patch', ';', 'if', '(', '(', '""/""', ')', ')', 'throw', 'GuacamoleClientException', '(', '""""', ')', '.', 'remove', '(', ')', ';', '}', '}']",92,61,6,446,228,18,50.93457943925234,36.04651162790697,,,,-1,-1,-1,-1,False
L136_startLoadMore_1.txt,code2seq,METHOD_NAME,token_wrong,0.5966,0.5752,12.8645,14.4008,"{'n_total': 381, 'n_valid': 57, 'n_correct': 39}",117.92902,protected void startLoadMore() { if (mEnablePullLoad && mFooterView.getBottomMargin() > PULL_LOAD_MORE_DELTA && !mPullLoading) { mPullLoading = true; mFooterView.setState(XListViewFooter.STATE_LOADING); if (mLoadMore != null) { mLoadMore.onLoadMore(); } } },void startLoadMore(){if(mEnablePullLoad){mPullLoading();if(mLoadMore=null){onLoadMore();}}},"['protected', 'void', 'startLoadMore', '(', ')', '{', 'if', '(', 'mEnablePullLoad', '&&', 'mFooterView', '.', 'getBottomMargin', '(', ')', '>', 'PULL_LOAD_MORE_DELTA', '&&', '!', 'mPullLoading', ')', '{', 'mPullLoading', '=', 'true', ';', 'mFooterView', '.', 'setState', '(', 'XListViewFooter', '.', 'STATE_LOADING', ')', ';', 'if', '(', 'mLoadMore', '!=', 'null', ')', '{', 'mLoadMore', '.', 'onLoadMore', '(', ')', ';', '}', '}', '}']","['void', 'startLoadMore', '(', ')', '{', 'if', '(', 'mEnablePullLoad', ')', '{', 'mPullLoading', '(', ')', ';', 'if', '(', 'mLoadMore', '=', 'null', ')', '{', 'onLoadMore', '(', ')', ';', '}', '}', '}']",51,28,6,257,91,19,69.74789915966386,51.11111111111111,,,,-1,-1,-1,-1,False
L137_disablePlayerBar_1.txt,code2seq,METHOD_NAME,token_wrong,0.3328,0.3638,17.106,23.7972,"{'n_total': 308, 'n_valid': 42, 'n_correct': 25}",87.515555,private void disablePlayerBar() { playPauseButton.setPlaying(false); playerThumbnailIV.setImageResource(R.drawable.ic_launcher_square); playerProgramNameTV.setText(R.string.app_name); if (slidingUpPanelLayout.collapsePanel()) { slidingUpPanelLayout.setSlidingEnabled(false); } },void disablePlayerBar(){setPlaying();playerThumbnailIV.setImageResource();playerProgramNameTV.setText(name);if(slidingUpPanelLayout()){}},"['private', 'void', 'disablePlayerBar', '(', ')', '{', 'playPauseButton', '.', 'setPlaying', '(', 'false', ')', ';', 'playerThumbnailIV', '.', 'setImageResource', '(', 'R', '.', 'drawable', '.', 'ic_launcher_square', ')', ';', 'playerProgramNameTV', '.', 'setText', '(', 'R', '.', 'string', '.', 'app_name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '.', 'collapsePanel', '(', ')', ')', '{', 'slidingUpPanelLayout', '.', 'setSlidingEnabled', '(', 'false', ')', ';', '}', '}']","['void', 'disablePlayerBar', '(', ')', '{', 'setPlaying', '(', ')', ';', 'playerThumbnailIV', '.', 'setImageResource', '(', ')', ';', 'playerProgramNameTV', '.', 'setText', '(', 'name', ')', ';', 'if', '(', 'slidingUpPanelLayout', '(', ')', ')', '{', '}', '}']",53,31,6,278,137,22,55.078125,46.808510638297875,,,,-1,-1,-1,-1,False
L138_getAttributes_1.txt,code2seq,METHOD_NAME,token_wrong,0.5017,0.4732,6.1693,9.1435,"{'n_total': 182, 'n_valid': 21, 'n_correct': 14}",46.638833,Map getAttributes() { if (!SMSEntry.cacheSMSEntries) { smsEntry.refresh(); } return (SMSUtils.copyAttributes(attributes)); },Map getAttributes(){if(!SMSEntry.cacheSMSEntries){smsEntry();}(copyAttributes());},"['Map', 'getAttributes', '(', ')', '{', 'if', '(', '!', 'SMSEntry', '.', 'cacheSMSEntries', ')', '{', 'smsEntry', '.', 'refresh', '(', ')', ';', '}', 'return', '(', 'SMSUtils', '.', 'copyAttributes', '(', 'attributes', ')', ')', ';', '}']","['Map', 'getAttributes', '(', ')', '{', 'if', '(', '!', 'SMSEntry', '.', 'cacheSMSEntries', ')', '{', 'smsEntry', '(', ')', ';', '}', '(', 'copyAttributes', '(', ')', ')', ';', '}']",31,25,6,124,82,19,40.0,24.0,,,,-1,-1,-1,-1,False
L139_setAccessorList_1.txt,code2seq,METHOD_NAME,token_wrong,0.6183,0.7683,11.3923,12.878,"{'n_total': 299, 'n_valid': 32, 'n_correct': 23}",66.782784,"public void setAccessorList(ArrayList accessorList) { if (log.isDebugEnabled()) { log.debug(""setAccessorList(List"" + accessorList + "")""); } forum.getActorPermissions().setAccessors(forumManager.decodeAccessorsList(accessorList)); }","void setAccessorList(ArrayList accessorList){if(isDebugEnabled()){(""""+"""");}forum.setAccessors((accessorList));}","['public', 'void', 'setAccessorList', '(', 'ArrayList', 'accessorList', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', '{', 'log', '.', 'debug', '(', '""setAccessorList(List""', '+', 'accessorList', '+', '"")""', ')', ';', '}', 'forum', '.', 'getActorPermissions', '(', ')', '.', 'setAccessors', '(', 'forumManager', '.', 'decodeAccessorsList', '(', 'accessorList', ')', ')', ';', '}']","['void', 'setAccessorList', '(', 'ArrayList', 'accessorList', ')', '{', 'if', '(', 'isDebugEnabled', '(', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', 'forum', '.', 'setAccessors', '(', '(', 'accessorList', ')', ')', ';', '}']",46,31,6,231,111,21,57.14285714285714,37.5,,,,-1,-1,-1,-1,False
L140_boot_1.txt,code2seq,METHOD_NAME,token_wrong,0.6189,0.7458,15.5165,15.9777,"{'n_total': 210, 'n_valid': 17, 'n_correct': 16}",40.249204,public void boot() { for (PhysicalNode pn : physicalNodes) { eventloop.disconnect(pn.getClient()); } physicalNodes.clear(); },void boot(){for(PhysicalNode pn:physicalNodes){disconnect(getClient());}},"['public', 'void', 'boot', '(', ')', '{', 'for', '(', 'PhysicalNode', 'pn', ':', 'physicalNodes', ')', '{', 'eventloop', '.', 'disconnect', '(', 'pn', '.', 'getClient', '(', ')', ')', ';', '}', 'physicalNodes', '.', 'clear', '(', ')', ';', '}']","['void', 'boot', '(', ')', '{', 'for', '(', 'PhysicalNode', 'pn', ':', 'physicalNodes', ')', '{', 'disconnect', '(', 'getClient', '(', ')', ')', ';', '}', '}']",33,22,6,125,73,10,45.21739130434783,40.74074074074074,,,,-1,-1,-1,-1,False
L141_withMandatoryOption_1.txt,code2seq,METHOD_NAME,token_wrong,0.6942,0.5943,11.8847,10.8621,"{'n_total': 559, 'n_valid': 47, 'n_correct': 44}",104.170968,"@Test(groups = { ""cli-framework"" }) public void withMandatoryOption() throws CLIException { entering(""withMandatoryOption"", null); String[] args = { ""test-command"", CLIConstants.PREFIX_ARGUMENT_LONG + ""mandatory"", ""test"" }; CLIRequest req = new CLIRequest(null, args, getAdminSSOToken()); cmdManager.addToRequestQueue(req); cmdManager.serviceRequestQueue(); exiting(""withMandatoryOption""); }","@Test(groups={""""})void withMandatoryOption()throws CLIException{entering(""withMandatoryOption"",null);String args={""""+""""};(getAdminSSOToken());("""");}","['@', 'Test', '(', 'groups', '=', '{', '""cli-framework""', '}', ')', 'public', 'void', 'withMandatoryOption', '(', ')', 'throws', 'CLIException', '{', 'entering', '(', '""withMandatoryOption""', ',', 'null', ')', ';', 'String', '[', ']', 'args', '=', '{', '""test-command""', ',', 'CLIConstants', '.', 'PREFIX_ARGUMENT_LONG', '+', '""mandatory""', ',', '""test""', '}', ';', 'CLIRequest', 'req', '=', 'new', 'CLIRequest', '(', 'null', ',', 'args', ',', 'getAdminSSOToken', '(', ')', ')', ';', 'cmdManager', '.', 'addToRequestQueue', '(', 'req', ')', ';', 'cmdManager', '.', 'serviceRequestQueue', '(', ')', ';', 'exiting', '(', '""withMandatoryOption""', ')', ';', '}']","['@', 'Test', '(', 'groups', '=', '{', '""""', '}', ')', 'void', 'withMandatoryOption', '(', ')', 'throws', 'CLIException', '{', 'entering', '(', '""withMandatoryOption""', ',', 'null', ')', ';', 'String', 'args', '=', '{', '""""', '+', '""""', '}', ';', '(', 'getAdminSSOToken', '(', ')', ')', ';', '(', '""""', ')', ';', '}']",75,43,6,391,148,25,66.39344262295081,46.3768115942029,,,,-1,-1,-1,-1,False
L142_fakeUsingInvocationParameters_1.txt,code2seq,METHOD_NAME,token_wrong,0.8837,0.9428,47.3713,51.3113,"{'n_total': 473, 'n_valid': 48, 'n_correct': 43}",105.972852,"@Test public void fakeUsingInvocationParameters() { new MockUp<Applet>() { @Mock void $init(Invocation inv) { Applet it = inv.getInvokedInstance(); assertNotNull(it); } @Mock int getBaseline(Invocation inv, int w, int h) { return inv.proceed(); } }; int i = new Applet().getBaseline(20, 15); assertEquals(-1, i); }","void fakeUsingInvocationParameters(){new MockUp<>(){init(Invocation inv){}getBaseline(int w,int h){}};i();assertEquals();}","['@', 'Test', 'public', 'void', 'fakeUsingInvocationParameters', '(', ')', '{', 'new', 'MockUp', '<', 'Applet', '>', '(', ')', '{', '@', 'Mock', 'void', '$init', '(', 'Invocation', 'inv', ')', '{', 'Applet', 'it', '=', 'inv', '.', 'getInvokedInstance', '(', ')', ';', 'assertNotNull', '(', 'it', ')', ';', '}', '@', 'Mock', 'int', 'getBaseline', '(', 'Invocation', 'inv', ',', 'int', 'w', ',', 'int', 'h', ')', '{', 'return', 'inv', '.', 'proceed', '(', ')', ';', '}', '}', ';', 'int', 'i', '=', 'new', 'Applet', '(', ')', '.', 'getBaseline', '(', '20', ',', '15', ')', ';', 'assertEquals', '(', '-', '1', ',', 'i', ')', ';', '}']","['void', 'fakeUsingInvocationParameters', '(', ')', '{', 'new', 'MockUp', '<', '>', '(', ')', '{', 'init', '(', 'Invocation', 'inv', ')', '{', '}', 'getBaseline', '(', 'int', 'w', ',', 'int', 'h', ')', '{', '}', '}', ';', 'i', '(', ')', ';', 'assertEquals', '(', ')', ';', '}']",89,40,6,314,122,35,68.81720430107528,59.036144578313255,,,,-1,-1,-1,-1,False
L143_printModelStatus_1.txt,code2seq,METHOD_NAME,token_wrong,0.2808,0.281,19.8009,22.0518,"{'n_total': 317, 'n_valid': 32, 'n_correct': 30}",68.979607,"public void printModelStatus() throws GRBException { int status = model.get(GRB.IntAttr.Status); System.out.println(""Model status: "" + status); if (status == GRB.INFEASIBLE) { System.out.println(""INFEASIBLE""); } }","void printModelStatus()throws GRBException{(GRB).println(""""+status);if(GRB){println();}}","['public', 'void', 'printModelStatus', '(', ')', 'throws', 'GRBException', '{', 'int', 'status', '=', 'model', '.', 'get', '(', 'GRB', '.', 'IntAttr', '.', 'Status', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""Model status: ""', '+', 'status', ')', ';', 'if', '(', 'status', '==', 'GRB', '.', 'INFEASIBLE', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""INFEASIBLE""', ')', ';', '}', '}']","['void', 'printModelStatus', '(', ')', 'throws', 'GRBException', '{', '(', 'GRB', ')', '.', 'println', '(', '""""', '+', 'status', ')', ';', 'if', '(', 'GRB', ')', '{', 'println', '(', ')', ';', '}', '}']",53,29,6,213,88,22,65.44502617801047,51.06382978723404,,,,-1,-1,-1,-1,False
L144_engineIsCertificateEntry_1.txt,code2seq,METHOD_NAME,token_wrong,0.5615,0.6906,29.1694,34.1208,"{'n_total': 231, 'n_valid': 32, 'n_correct': 22}",68.606192,public boolean engineIsCertificateEntry(String alias) { ObjectData ent = (ObjectData) entries.get(alias); if (ent != null) { return ent.getType().equals(CERTIFICATE); } return false; },boolean engineIsCertificateEntry(String alias){ObjectData ent=(ObjectData)(alias);if(ent){}},"['public', 'boolean', 'engineIsCertificateEntry', '(', 'String', 'alias', ')', '{', 'ObjectData', 'ent', '=', '(', 'ObjectData', ')', 'entries', '.', 'get', '(', 'alias', ')', ';', 'if', '(', 'ent', '!=', 'null', ')', '{', 'return', 'ent', '.', 'getType', '(', ')', '.', 'equals', '(', 'CERTIFICATE', ')', ';', '}', 'return', 'false', ';', '}']","['boolean', 'engineIsCertificateEntry', '(', 'String', 'alias', ')', '{', 'ObjectData', 'ent', '=', '(', 'ObjectData', ')', '(', 'alias', ')', ';', 'if', '(', 'ent', ')', '{', '}', '}']",45,24,6,184,92,30,59.74025974025974,53.84615384615385,,,,-1,-1,-1,-1,False
L145_processServerCredentials_1.txt,code2seq,METHOD_NAME,token_wrong,0.609,0.6426,11.894,14.8991,"{'n_total': 341, 'n_valid': 29, 'n_correct': 28}",66.253015,public void processServerCredentials(TlsCredentials serverCredentials) throws IOException { if ((keyExchange == KeyExchangeAlgorithm.SRP) || !(serverCredentials instanceof TlsSignerCredentials)) { throw new TlsFatalAlert(AlertDescription.internal_error); } processServerCertificate(serverCredentials.getCertificate()); this.serverCredentials = (TlsSignerCredentials) serverCredentials; },void processServerCredentials(TlsCredentials serverCredentials)throws IOException{if((SRP)){(error);}(serverCredentials);serverCredentials();},"['public', 'void', 'processServerCredentials', '(', 'TlsCredentials', 'serverCredentials', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'keyExchange', '==', 'KeyExchangeAlgorithm', '.', 'SRP', ')', '||', '!', '(', 'serverCredentials', 'instanceof', 'TlsSignerCredentials', ')', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'processServerCertificate', '(', 'serverCredentials', '.', 'getCertificate', '(', ')', ')', ';', 'this', '.', 'serverCredentials', '=', '(', 'TlsSignerCredentials', ')', 'serverCredentials', ';', '}']","['void', 'processServerCredentials', '(', 'TlsCredentials', 'serverCredentials', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'SRP', ')', ')', '{', '(', 'error', ')', ';', '}', '(', 'serverCredentials', ')', ';', 'serverCredentials', '(', ')', ';', '}']",57,30,6,387,142,30,68.62745098039215,52.94117647058824,,,,-1,-1,-1,-1,False
L146_isFluxConsumer_1.txt,code2seq,METHOD_NAME,token_wrong,0.4507,0.5287,5.8425,7.1734,"{'n_total': 396, 'n_valid': 44, 'n_correct': 17}",91.225319,"@Test public void isFluxConsumer() { Method method = ReflectionUtils.findMethod(FunctionFactoryUtilsTests.class, ""fluxConsumer""); assertThat(FunctionFactoryUtils.isFluxConsumer(method)).isTrue(); assertThat(FunctionFactoryUtils.isFluxSupplier(method)).isFalse(); assertThat(FunctionFactoryUtils.isFluxFunction(method)).isFalse(); }","@Test void isFluxConsumer(){findMethod(FunctionFactoryUtilsTests,"""");assertThat(FunctionFactoryUtils.isFluxConsumer).isTrue(FunctionFactoryUtils.isFluxSupplier(method)).isFalse();(isFluxFunction(method)).isFalse();}","['@', 'Test', 'public', 'void', 'isFluxConsumer', '(', ')', '{', 'Method', 'method', '=', 'ReflectionUtils', '.', 'findMethod', '(', 'FunctionFactoryUtilsTests', '.', 'class', ',', '""fluxConsumer""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxConsumer', '(', 'method', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxFunction', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', '}']","['@', 'Test', 'void', 'isFluxConsumer', '(', ')', '{', 'findMethod', '(', 'FunctionFactoryUtilsTests', ',', '""""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxConsumer', ')', '.', 'isTrue', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', '(', 'isFluxFunction', '(', 'method', ')', ')', '.', 'isFalse', '(', ')', ';', '}']",65,47,6,331,215,20,37.29903536977492,30.508474576271187,,,,-1,-1,-1,-1,False
L147_getNDocs_1.txt,code2seq,METHOD_NAME,token_wrong,0.6621,0.3363,17.3026,18.108,"{'n_total': 256, 'n_valid': 39, 'n_correct': 23}",77.122918,"@Override public int getNDocs() { assureIndex(); CountResponse response = client.prepareCount(indexName).setQuery(filteredQuery(matchAllQuery(), termFilter(SearchService.FIELD_INDEXED, true))).execute().actionGet(); return (int) response.getCount(); }",int getNDocs(){CountResponse=((matchAllQuery())).execute.actionGetgetCount();},"['@', 'Override', 'public', 'int', 'getNDocs', '(', ')', '{', 'assureIndex', '(', ')', ';', 'CountResponse', 'response', '=', 'client', '.', 'prepareCount', '(', 'indexName', ')', '.', 'setQuery', '(', 'filteredQuery', '(', 'matchAllQuery', '(', ')', ',', 'termFilter', '(', 'SearchService', '.', 'FIELD_INDEXED', ',', 'true', ')', ')', ')', '.', 'execute', '(', ')', '.', 'actionGet', '(', ')', ';', 'return', '(', 'int', ')', 'response', '.', 'getCount', '(', ')', ';', '}']","['int', 'getNDocs', '(', ')', '{', 'CountResponse', '=', '(', '(', 'matchAllQuery', '(', ')', ')', ')', '.', 'execute', '.', 'actionGetgetCount', '(', ')', ';', '}']",60,22,6,251,78,14,72.9957805907173,70.37037037037037,,,,-1,-1,-1,-1,False
L148_createInvalidateSessionButton_1.txt,code2seq,METHOD_NAME,token_wrong,0.6442,0.5949,10.8017,9.566,"{'n_total': 532, 'n_valid': 74, 'n_correct': 37}",159.875949,"private MButton createInvalidateSessionButton() { final MButton invalidateSessionButton = new MButton(getString(""invalidate_session""), INVALIDATE_SESSION_ICON); invalidateSessionButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { final SessionInformations sessionInformations = getTable().getSelectedObject(); if (sessionInformations != null && confirm(getFormattedString(""confirm_invalidate_session""))) { actionInvalidateSession(sessionInformations); } } }); return invalidateSessionButton; }","MButton createInvalidateSessionButton(){MButton invalidateSessionButton=new MButton(getString(""invalidate_session""),ICON);(new ActionListener(){actionPerformed(ActionEvent e){if(((""""))){(sessionInformations);}}});return invalidateSessionButton;}","['private', 'MButton', 'createInvalidateSessionButton', '(', ')', '{', 'final', 'MButton', 'invalidateSessionButton', '=', 'new', 'MButton', '(', 'getString', '(', '""invalidate_session""', ')', ',', 'INVALIDATE_SESSION_ICON', ')', ';', 'invalidateSessionButton', '.', 'addActionListener', '(', 'new', 'ActionListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'final', 'SessionInformations', 'sessionInformations', '=', 'getTable', '(', ')', '.', 'getSelectedObject', '(', ')', ';', 'if', '(', 'sessionInformations', '!=', 'null', '&&', 'confirm', '(', 'getFormattedString', '(', '""confirm_invalidate_session""', ')', ')', ')', '{', 'actionInvalidateSession', '(', 'sessionInformations', ')', ';', '}', '}', '}', ')', ';', 'return', 'invalidateSessionButton', ';', '}']","['MButton', 'createInvalidateSessionButton', '(', ')', '{', 'MButton', 'invalidateSessionButton', '=', 'new', 'MButton', '(', 'getString', '(', '""invalidate_session""', ')', ',', 'ICON', ')', ';', '(', 'new', 'ActionListener', '(', ')', '{', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'if', '(', '(', '(', '""""', ')', ')', ')', '{', '(', 'sessionInformations', ')', ';', '}', '}', '}', ')', ';', 'return', 'invalidateSessionButton', ';', '}']",81,53,6,544,245,35,58.7426326129666,37.333333333333336,,,,-1,-1,-1,-1,False
L149_onMissionReceived_1.txt,code2seq,METHOD_NAME,token_wrong,0.2715,0.3328,11.6605,13.2017,"{'n_total': 524, 'n_valid': 66, 'n_correct': 35}",136.658855,"public void onMissionReceived(List<msg_mission_item> msgs) { if (msgs != null) { myDrone.processHomeUpdate(msgs.get(0)); msgs.remove(0); items.clear(); items.addAll(MissionUtils.processMavLinkMessages(this, msgs)); myDrone.notifyDroneEvent(DroneEventsType.MISSION_RECEIVED); notifyMissionUpdate(); } }",void onMissionReceived(List<mission>msgs){if(msgs!=null){((0));remove();(processMavLinkMessages()).notifyDroneEvent(MISSION);notifyMissionUpdate();}},"['public', 'void', 'onMissionReceived', '(', 'List', '<', 'msg_mission_item', '>', 'msgs', ')', '{', 'if', '(', 'msgs', '!=', 'null', ')', '{', 'myDrone', '.', 'processHomeUpdate', '(', 'msgs', '.', 'get', '(', '0', ')', ')', ';', 'msgs', '.', 'remove', '(', '0', ')', ';', 'items', '.', 'clear', '(', ')', ';', 'items', '.', 'addAll', '(', 'MissionUtils', '.', 'processMavLinkMessages', '(', 'this', ',', 'msgs', ')', ')', ';', 'myDrone', '.', 'notifyDroneEvent', '(', 'DroneEventsType', '.', 'MISSION_RECEIVED', ')', ';', 'notifyMissionUpdate', '(', ')', ';', '}', '}']","['void', 'onMissionReceived', '(', 'List', '<', 'mission', '>', 'msgs', ')', '{', 'if', '(', 'msgs', '!=', 'null', ')', '{', '(', '(', '0', ')', ')', ';', 'remove', '(', ')', ';', '(', 'processMavLinkMessages', '(', ')', ')', '.', 'notifyDroneEvent', '(', 'MISSION', ')', ';', 'notifyMissionUpdate', '(', ')', ';', '}', '}']",72,44,6,301,149,23,54.67625899280576,42.42424242424242,,,,-1,-1,-1,-1,False
L150_logging_1.txt,code2seq,METHOD_NAME,token_wrong,0.509,0.5994,15.1854,17.7303,"{'n_total': 188, 'n_valid': 20, 'n_correct': 17}",45.149983,"@Override public void logging(final IStatus status, final String plugin) { if (!status.isOK()) { errors.add(status.getMessage()); } }",@Override void logging(IStatus plugin){if(isOK()){(status);}},"['@', 'Override', 'public', 'void', 'logging', '(', 'final', 'IStatus', 'status', ',', 'final', 'String', 'plugin', ')', '{', 'if', '(', '!', 'status', '.', 'isOK', '(', ')', ')', '{', 'errors', '.', 'add', '(', 'status', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['@', 'Override', 'void', 'logging', '(', 'IStatus', 'plugin', ')', '{', 'if', '(', 'isOK', '(', ')', ')', '{', '(', 'status', ')', ';', '}', '}']",38,22,6,133,61,13,60.0,50.0,,,,-1,-1,-1,-1,False
L151_testEidFallthrough_1.txt,code2seq,METHOD_NAME,token_wrong,0.7494,0.923,34.0051,38.2911,"{'n_total': 407, 'n_valid': 40, 'n_correct': 30}",84.882536,"@Test public void testEidFallthrough() throws UserNotDefinedException { Mockito.when(uds.getUserByAid(Mockito.anyString())).thenThrow(UserNotDefinedException.class); Mockito.when(uds.getUser(""1234"")).thenReturn(user); Mockito.when(dhs.getConfigurationSetting(""user.explicit.id.only"", false)).thenReturn(false); Assert.assertEquals(user, provider.getUserByIdEid(""1234"")); }","void testEidFallthrough()throws UserNotDefinedException{((Mockito)).thenThrow();(("""")).thenReturn();assertEquals(getUserByIdEid(""""));}","['@', 'Test', 'public', 'void', 'testEidFallthrough', '(', ')', 'throws', 'UserNotDefinedException', '{', 'Mockito', '.', 'when', '(', 'uds', '.', 'getUserByAid', '(', 'Mockito', '.', 'anyString', '(', ')', ')', ')', '.', 'thenThrow', '(', 'UserNotDefinedException', '.', 'class', ')', ';', 'Mockito', '.', 'when', '(', 'uds', '.', 'getUser', '(', '""1234""', ')', ')', '.', 'thenReturn', '(', 'user', ')', ';', 'Mockito', '.', 'when', '(', 'dhs', '.', 'getConfigurationSetting', '(', '""user.explicit.id.only""', ',', 'false', ')', ')', '.', 'thenReturn', '(', 'false', ')', ';', 'Assert', '.', 'assertEquals', '(', 'user', ',', 'provider', '.', 'getUserByIdEid', '(', '""1234""', ')', ')', ';', '}']","['void', 'testEidFallthrough', '(', ')', 'throws', 'UserNotDefinedException', '{', '(', '(', 'Mockito', ')', ')', '.', 'thenThrow', '(', ')', ';', '(', '(', '""""', ')', ')', '.', 'thenReturn', '(', ')', ';', 'assertEquals', '(', 'getUserByIdEid', '(', '""""', ')', ')', ';', '}']",84,36,6,372,134,24,68.39080459770115,61.53846153846154,,,,-1,-1,-1,-1,False
L152_getServerProperties_1.txt,code2seq,METHOD_NAME,token_wrong,0.6857,0.4277,15.258,16.2466,"{'n_total': 152, 'n_valid': 22, 'n_correct': 19}",46.410946,public AmqpTable getServerProperties() { AmqpTable table = new AmqpTable(); List<AmqpTableEntry> tableEntries = serverProperties.getEntries(); List<AmqpTableEntry> entries = new ArrayList<>(); entries.addAll(tableEntries); table.setEntries(entries); return table; },AmqpTable getServerProperties(){table();setEntries();},"['public', 'AmqpTable', 'getServerProperties', '(', ')', '{', 'AmqpTable', 'table', '=', 'new', 'AmqpTable', '(', ')', ';', 'List', '<', 'AmqpTableEntry', '>', 'tableEntries', '=', 'serverProperties', '.', 'getEntries', '(', ')', ';', 'List', '<', 'AmqpTableEntry', '>', 'entries', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'entries', '.', 'addAll', '(', 'tableEntries', ')', ';', 'table', '.', 'setEntries', '(', 'entries', ')', ';', 'return', 'table', ';', '}']","['AmqpTable', 'getServerProperties', '(', ')', '{', 'table', '(', ')', ';', 'setEntries', '(', ')', ';', '}']",57,14,6,265,54,25,87.91666666666667,84.31372549019608,,,,-1,-1,-1,-1,False
L153_engineAliases_1.txt,code2seq,METHOD_NAME,token_wrong,0.3781,0.6076,14.4774,11.4123,"{'n_total': 270, 'n_valid': 40, 'n_correct': 27}",85.095463,public Enumeration engineAliases() { final Iterator it = new HashSet(entries.keySet()).iterator(); return new Enumeration() { public boolean hasMoreElements() { return it.hasNext(); } public Object nextElement() { return it.next(); } }; },Enumeration engineAliases(){it=(entries.keySet);new Enumeration(){{}};},"['public', 'Enumeration', 'engineAliases', '(', ')', '{', 'final', 'Iterator', 'it', '=', 'new', 'HashSet', '(', 'entries', '.', 'keySet', '(', ')', ')', '.', 'iterator', '(', ')', ';', 'return', 'new', 'Enumeration', '(', ')', '{', 'public', 'boolean', 'hasMoreElements', '(', ')', '{', 'return', 'it', '.', 'hasNext', '(', ')', ';', '}', 'public', 'Object', 'nextElement', '(', ')', '{', 'return', 'it', '.', 'next', '(', ')', ';', '}', '}', ';', '}']","['Enumeration', 'engineAliases', '(', ')', '{', 'it', '=', '(', 'entries', '.', 'keySet', ')', ';', 'new', 'Enumeration', '(', ')', '{', '{', '}', '}', ';', '}']",61,23,6,238,71,19,76.25570776255708,69.0909090909091,,,,-1,-1,-1,-1,False
L154_commit_1.txt,code2seq,METHOD_NAME,token_wrong,0.4949,0.4475,10.6379,13.1423,"{'n_total': 300, 'n_valid': 44, 'n_correct': 27}",91.836842,"@Override public boolean commit() throws LoginException { switch(state) { case COMMIT_COMPLETE: return true; case INITIALIZE_COMPLETE: logout0(); return false; case LOGIN_COMPLETE: commit0(); return true; case INITIALIZE_REQUIRED: default: throw new LoginException(""Login module is not initialized""); } }","boolean commit()throws LoginException{switch(state){case COMPLETE:throw new LoginException(""Login"");}}","['@', 'Override', 'public', 'boolean', 'commit', '(', ')', 'throws', 'LoginException', '{', 'switch', '(', 'state', ')', '{', 'case', 'COMMIT_COMPLETE', ':', 'return', 'true', ';', 'case', 'INITIALIZE_COMPLETE', ':', 'logout0', '(', ')', ';', 'return', 'false', ';', 'case', 'LOGIN_COMPLETE', ':', 'commit0', '(', ')', ';', 'return', 'true', ';', 'case', 'INITIALIZE_REQUIRED', ':', 'default', ':', 'throw', 'new', 'LoginException', '(', '""Login module is not initialized""', ')', ';', '}', '}']","['boolean', 'commit', '(', ')', 'throws', 'LoginException', '{', 'switch', '(', 'state', ')', '{', 'case', 'COMPLETE', ':', 'throw', 'new', 'LoginException', '(', '""Login""', ')', ';', '}', '}']",55,24,6,304,102,12,69.17808219178082,63.26530612244898,,,,-1,-1,-1,-1,False
L155_classFileSignature_1.txt,code2seq,METHOD_NAME,token_wrong,0.5606,0.2704,19.9796,23.5889,"{'n_total': 471, 'n_valid': 54, 'n_correct': 40}",110.394479,"@Test public void classFileSignature() { PubApi sig = test.classSignature(""com.example.Signatures"").get(); assertThat(sig.types.get(""com.example.Signatures"").pubApi.methods.keySet(), hasItems(""void voidMethod()"", ""java.lang.String stringMethod()"")); assertThat(sig.types.get(""com.example.Signatures"").pubApi.methods.keySet(), not(hasItems(""void privateMethod()""))); assertThat(sig.types.get(""com.example.Signatures"").pubApi.types.keySet(), hasItems(""com.example.Signatures$RegularInnerClass"", ""com.example.Signatures$StaticInnerClass"")); }","void classFileSignature(){("""").get();(sig("""",""""));(("""").pubApi("""",""""));}","['@', 'Test', 'public', 'void', 'classFileSignature', '(', ')', '{', 'PubApi', 'sig', '=', 'test', '.', 'classSignature', '(', '""com.example.Signatures""', ')', '.', 'get', '(', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'methods', '.', 'keySet', '(', ')', ',', 'hasItems', '(', '""void voidMethod()""', ',', '""java.lang.String stringMethod()""', ')', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'methods', '.', 'keySet', '(', ')', ',', 'not', '(', 'hasItems', '(', '""void privateMethod()""', ')', ')', ')', ';', 'assertThat', '(', 'sig', '.', 'types', '.', 'get', '(', '""com.example.Signatures""', ')', '.', 'pubApi', '.', 'types', '.', 'keySet', '(', ')', ',', 'hasItems', '(', '""com.example.Signatures$RegularInnerClass""', ',', '""com.example.Signatures$StaticInnerClass""', ')', ')', ';', '}']","['void', 'classFileSignature', '(', ')', '{', '(', '""""', ')', '.', 'get', '(', ')', ';', '(', 'sig', '(', '""""', ',', '""""', ')', ')', ';', '(', '(', '""""', ')', '.', 'pubApi', '(', '""""', ',', '""""', ')', ')', ';', '}']",105,36,6,539,72,24,90.67961165048544,69.6969696969697,,,,-1,-1,-1,-1,False
L156_withRequiredArg_1.txt,code2seq,METHOD_NAME,token_wrong,0.7208,0.7179,15.8992,16.9421,"{'n_total': 214, 'n_valid': 28, 'n_correct': 17}",63.186832,"public ArgumentAcceptingOptionSpec<String> withRequiredArg() { ArgumentAcceptingOptionSpec<String> newSpec = new RequiredArgumentOptionSpec<>(options(), description()); parser.recognize(newSpec); return newSpec; }",ArgumentAcceptingOptionSpec<String>withRequiredArg(){ArgumentAcceptingOptionSpec<String>newSpec=new RequiredArgumentOptionSpec(description());recognize(newSpec);return newSpec;},"['public', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'withRequiredArg', '(', ')', '{', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'newSpec', '=', 'new', 'RequiredArgumentOptionSpec', '<', '>', '(', 'options', '(', ')', ',', 'description', '(', ')', ')', ';', 'parser', '.', 'recognize', '(', 'newSpec', ')', ';', 'return', 'newSpec', ';', '}']","['ArgumentAcceptingOptionSpec', '<', 'String', '>', 'withRequiredArg', '(', ')', '{', 'ArgumentAcceptingOptionSpec', '<', 'String', '>', 'newSpec', '=', 'new', 'RequiredArgumentOptionSpec', '(', 'description', '(', ')', ')', ';', 'recognize', '(', 'newSpec', ')', ';', 'return', 'newSpec', ';', '}']",40,31,6,213,177,21,18.75,26.47058823529412,,,,-1,-1,-1,-1,False
L157_down_1.txt,code2seq,METHOD_NAME,token_wrong,0.3992,0.3658,7.2809,7.4054,"{'n_total': 230, 'n_valid': 23, 'n_correct': 15}",50.16557,@Test public void down() { when(mockResult.redirectTo(action)).thenReturn(mockCategoryAdminController); action.down(2); verify(service).downCategoryOrder(2); verify(mockCategoryAdminController).list(); },void down(){(mockResult.redirectTo(action)).thenReturn();down(2);(service).downCategoryOrder(2);(mockCategoryAdminController);},"['@', 'Test', 'public', 'void', 'down', '(', ')', '{', 'when', '(', 'mockResult', '.', 'redirectTo', '(', 'action', ')', ')', '.', 'thenReturn', '(', 'mockCategoryAdminController', ')', ';', 'action', '.', 'down', '(', '2', ')', ';', 'verify', '(', 'service', ')', '.', 'downCategoryOrder', '(', '2', ')', ';', 'verify', '(', 'mockCategoryAdminController', ')', '.', 'list', '(', ')', ';', '}']","['void', 'down', '(', ')', '{', '(', 'mockResult', '.', 'redirectTo', '(', 'action', ')', ')', '.', 'thenReturn', '(', ')', ';', 'down', '(', '2', ')', ';', '(', 'service', ')', '.', 'downCategoryOrder', '(', '2', ')', ';', '(', 'mockCategoryAdminController', ')', ';', '}']",50,37,6,203,127,10,39.37823834196891,29.545454545454547,,,,-1,-1,-1,-1,False
L158_testNone_1.txt,code2seq,METHOD_NAME,token_wrong,0.5463,0.5197,11.859,12.4615,"{'n_total': 593, 'n_valid': 131, 'n_correct': 38}",261.145339,"@Test public void testNone() throws Exception { ContentValues instanceData = new StartDated(absent(), ContentValues::new).value(); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START, nullValue(Long.class))); assertThat(instanceData, new ContentValuesWithLong(TaskContract.Instances.INSTANCE_START_SORTING, nullValue(Long.class))); assertThat(instanceData.size(), is(0)); }","void testNone()throws Exception{ContentValues=StartDated(absent).assertThat(((Long)));assertThat(ContentValuesWithLong(TaskContract.INSTANCE_START_SORTING,(Long)));(instanceData.size);}","['@', 'Test', 'public', 'void', 'testNone', '(', ')', 'throws', 'Exception', '{', 'ContentValues', 'instanceData', '=', 'new', 'StartDated', '(', 'absent', '(', ')', ',', 'ContentValues', '::', 'new', ')', '.', 'value', '(', ')', ';', 'assertThat', '(', 'instanceData', ',', 'new', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'Instances', '.', 'INSTANCE_START', ',', 'nullValue', '(', 'Long', '.', 'class', ')', ')', ')', ';', 'assertThat', '(', 'instanceData', ',', 'new', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'Instances', '.', 'INSTANCE_START_SORTING', ',', 'nullValue', '(', 'Long', '.', 'class', ')', ')', ')', ';', 'assertThat', '(', 'instanceData', '.', 'size', '(', ')', ',', 'is', '(', '0', ')', ')', ';', '}']","['void', 'testNone', '(', ')', 'throws', 'Exception', '{', 'ContentValues', '=', 'StartDated', '(', 'absent', ')', '.', 'assertThat', '(', '(', '(', 'Long', ')', ')', ')', ';', 'assertThat', '(', 'ContentValuesWithLong', '(', 'TaskContract', '.', 'INSTANCE_START_SORTING', ',', '(', 'Long', ')', ')', ')', ';', '(', 'instanceData', '.', 'size', ')', ';', '}']",88,44,6,410,185,14,56.81818181818182,53.65853658536586,,,,-1,-1,-1,-1,False
L159_processPattern_1.txt,code2seq,METHOD_NAME,token_wrong,0.4108,0.5531,14.931,15.4185,"{'n_total': 721, 'n_valid': 65, 'n_correct': 50}",146.355999,"private void processPattern() { String[] p = this.value.split("",""); this.vars = new String[p.length]; this.size = ((((p[0]).trim()).equals("""")) ? 0 : p.length); for (int i = 0; i < this.size; i++) { this.vars[i] = (p[i]).trim(); } }","void processPattern(){String[]p=("""");vars=String[length];((((p[0])))?0:length);for(;i<size;i++){this.vars=(p[i]).trim();}}","['private', 'void', 'processPattern', '(', ')', '{', 'String', '[', ']', 'p', '=', 'this', '.', 'value', '.', 'split', '(', '"",""', ')', ';', 'this', '.', 'vars', '=', 'new', 'String', '[', 'p', '.', 'length', ']', ';', 'this', '.', 'size', '=', '(', '(', '(', '(', 'p', '[', '0', ']', ')', '.', 'trim', '(', ')', ')', '.', 'equals', '(', '""""', ')', ')', '?', '0', ':', 'p', '.', 'length', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'this', '.', 'size', ';', 'i', '++', ')', '{', 'this', '.', 'vars', '[', 'i', ']', '=', '(', 'p', '[', 'i', ']', ')', '.', 'trim', '(', ')', ';', '}', '}']","['void', 'processPattern', '(', ')', '{', 'String', '[', ']', 'p', '=', '(', '""""', ')', ';', 'vars', '=', 'String', '[', 'length', ']', ';', '(', '(', '(', '(', 'p', '[', '0', ']', ')', ')', ')', '?', '0', ':', 'length', ')', ';', 'for', '(', ';', 'i', '<', 'size', ';', 'i', '++', ')', '{', 'this', '.', 'vars', '=', '(', 'p', '[', 'i', ']', ')', '.', 'trim', '(', ')', ';', '}', '}']",101,66,6,232,122,20,51.886792452830186,36.84210526315789,,,,-1,-1,-1,-1,False
L160_run_1.txt,code2seq,METHOD_NAME,token_wrong,0.9428,0.6567,13.4758,6.2049,"{'n_total': 210, 'n_valid': 29, 'n_correct': 23}",61.435519,"public void run() { PublishedAssessmentService assessmentService = new PublishedAssessmentService(); log.debug(""** remove assessmentId= "" + this.assessmentId); assessmentService.removeAssessment(this.assessmentId, this.action); }","void run(){assessmentService=log.debug(""""+assessmentId);removeAssessment();}","['public', 'void', 'run', '(', ')', '{', 'PublishedAssessmentService', 'assessmentService', '=', 'new', 'PublishedAssessmentService', '(', ')', ';', 'log', '.', 'debug', '(', '""** remove assessmentId= ""', '+', 'this', '.', 'assessmentId', ')', ';', 'assessmentService', '.', 'removeAssessment', '(', 'this', '.', 'assessmentId', ',', 'this', '.', 'action', ')', ';', '}']","['void', 'run', '(', ')', '{', 'assessmentService', '=', 'log', '.', 'debug', '(', '""""', '+', 'assessmentId', ')', ';', 'removeAssessment', '(', ')', ';', '}']",39,21,6,229,76,9,69.54545454545455,54.54545454545454,,,,-1,-1,-1,-1,False
L161_justLikeFalseTest_1.txt,code2seq,METHOD_NAME,token_wrong,0.5668,0.5021,30.2173,31.6847,"{'n_total': 283, 'n_valid': 44, 'n_correct': 21}",88.587164,"@Test public void justLikeFalseTest() { AnalysisTester tester = getTester(""meyve""); tester.expectFalse(""meyvemsi"", matchesTailLex(""P1sg + JustLike + Adj"")); tester.expectFalse(""meyvesi"", matchesTailLex(""A3sg + JustLike + Adj"")); }","@Test void justLikeFalseTest(){tester=expectFalse("""",matchesTailLex());expectFalse(""meyvesi"",(""A""));}","['@', 'Test', 'public', 'void', 'justLikeFalseTest', '(', ')', '{', 'AnalysisTester', 'tester', '=', 'getTester', '(', '""meyve""', ')', ';', 'tester', '.', 'expectFalse', '(', '""meyvemsi""', ',', 'matchesTailLex', '(', '""P1sg + JustLike + Adj""', ')', ')', ';', 'tester', '.', 'expectFalse', '(', '""meyvesi""', ',', 'matchesTailLex', '(', '""A3sg + JustLike + Adj""', ')', ')', ';', '}']","['@', 'Test', 'void', 'justLikeFalseTest', '(', ')', '{', 'tester', '=', 'expectFalse', '(', '""""', ',', 'matchesTailLex', '(', ')', ')', ';', 'expectFalse', '(', '""meyvesi""', ',', '(', '""A""', ')', ')', ';', '}']",41,28,6,230,101,23,62.31884057971014,37.142857142857146,,,,-1,-1,-1,-1,False
L162_isMySignupEvents_1.txt,code2seq,METHOD_NAME,token_wrong,0.5287,0.5783,30.4719,28.707,"{'n_total': 164, 'n_valid': 25, 'n_correct': 16}",52.13259,public boolean isMySignupEvents() { if (myStartTime != null && myEndTime != null) return true; else return false; },boolean isMySignupEvents(){if(myStartTime&&myEndTime!=null)false;},"['public', 'boolean', 'isMySignupEvents', '(', ')', '{', 'if', '(', 'myStartTime', '!=', 'null', '&&', 'myEndTime', '!=', 'null', ')', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']","['boolean', 'isMySignupEvents', '(', ')', '{', 'if', '(', 'myStartTime', '&&', 'myEndTime', '!=', 'null', ')', 'false', ';', '}']",24,16,6,115,66,22,52.68817204301075,44.44444444444444,,,,-1,-1,-1,-1,False
L163_createSessionsSerializable_1.txt,code2seq,METHOD_NAME,token_wrong,0.7967,0.801,25.5817,24.0306,"{'n_total': 432, 'n_valid': 55, 'n_correct': 28}",120.927775,@RequestPart(HttpPart.SESSIONS) Serializable createSessionsSerializable(@RequestParameter(HttpParameter.SESSION_ID) String sessionId) { Action.checkSystemActionsEnabled(); if (sessionId == null) { return new ArrayList<SessionInformations>(SessionListener.getAllSessionsInformations()); } return SessionListener.getSessionInformationsBySessionId(sessionId); },@RequestPart()Serializable createSessionsSerializable(@RequestParameter(HttpParameter)String sessionId){if(sessionId){return SessionInformations>(SessionListener.getAllSessionsInformations);}SessionListener.getSessionInformationsBySessionId;},"['@', 'RequestPart', '(', 'HttpPart', '.', 'SESSIONS', ')', 'Serializable', 'createSessionsSerializable', '(', '@', 'RequestParameter', '(', 'HttpParameter', '.', 'SESSION_ID', ')', 'String', 'sessionId', ')', '{', 'Action', '.', 'checkSystemActionsEnabled', '(', ')', ';', 'if', '(', 'sessionId', '==', 'null', ')', '{', 'return', 'new', 'ArrayList', '<', 'SessionInformations', '>', '(', 'SessionListener', '.', 'getAllSessionsInformations', '(', ')', ')', ';', '}', 'return', 'SessionListener', '.', 'getSessionInformationsBySessionId', '(', 'sessionId', ')', ';', '}']","['@', 'RequestPart', '(', ')', 'Serializable', 'createSessionsSerializable', '(', '@', 'RequestParameter', '(', 'HttpParameter', ')', 'String', 'sessionId', ')', '{', 'if', '(', 'sessionId', ')', '{', 'return', 'SessionInformations', '>', '(', 'SessionListener', '.', 'getAllSessionsInformations', ')', ';', '}', 'SessionListener', '.', 'getSessionInformationsBySessionId', ';', '}']",58,36,6,358,242,32,35.58282208588957,42.30769230769231,,,,-1,-1,-1,-1,False
L164_prefixUsd_1.txt,code2seq,METHOD_NAME,token_wrong,0.6394,0.5394,16.7373,13.1829,"{'n_total': 287, 'n_valid': 47, 'n_correct': 21}",99.861088,"public static String prefixUsd(String phrase) { Matcher matcher = prefixUsdPat.matcher(phrase); if (matcher.find()) { phrase = phrase.replace(matcher.group(1), """"); phrase += ""US$""; } return phrase; }","String prefixUsd(String phrase){Matcher matcher=prefixUsdPat.matcher(phrase);if(matcher()){phrase=""$"";}return phrase;}","['public', 'static', 'String', 'prefixUsd', '(', 'String', 'phrase', ')', '{', 'Matcher', 'matcher', '=', 'prefixUsdPat', '.', 'matcher', '(', 'phrase', ')', ';', 'if', '(', 'matcher', '.', 'find', '(', ')', ')', '{', 'phrase', '=', 'phrase', '.', 'replace', '(', 'matcher', '.', 'group', '(', '1', ')', ',', '""""', ')', ';', 'phrase', '+=', '""US$""', ';', '}', 'return', 'phrase', ';', '}']","['String', 'prefixUsd', '(', 'String', 'phrase', ')', '{', 'Matcher', 'matcher', '=', 'prefixUsdPat', '.', 'matcher', '(', 'phrase', ')', ';', 'if', '(', 'matcher', '(', ')', ')', '{', 'phrase', '=', '""$""', ';', '}', 'return', 'phrase', ';', '}']",53,33,6,200,118,15,44.32432432432433,42.5531914893617,,,,-1,-1,-1,-1,False
L165_transform_1.txt,code2seq,METHOD_NAME,token_wrong,0.5252,0.4907,6.0333,5.5883,"{'n_total': 512, 'n_valid': 52, 'n_correct': 31}",120.365025,"@Override public Map<String, String> transform(Set<String> values, Class<?> parameterType) { Map<String, String> localeStrings = new HashMap<>(); for (String value : values) { String[] parts = value.split(""\\|""); localeStrings.put(parts[0], parts[1]); } return localeStrings; }","@Override Map<String>transform(Set<String>values,Class parameterType){Map<String>localeStrings=new HashMap<>();for(String value:values){String=value.split(""\\"");localeStrings.put(parts[0],parts[1]);}return localeStrings;}","['@', 'Override', 'public', 'Map', '<', 'String', ',', 'String', '>', 'transform', '(', 'Set', '<', 'String', '>', 'values', ',', 'Class', '<', '?', '>', 'parameterType', ')', '{', 'Map', '<', 'String', ',', 'String', '>', 'localeStrings', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'value', ':', 'values', ')', '{', 'String', '[', ']', 'parts', '=', 'value', '.', 'split', '(', '""\\\\|""', ')', ';', 'localeStrings', '.', 'put', '(', 'parts', '[', '0', ']', ',', 'parts', '[', '1', ']', ')', ';', '}', 'return', 'localeStrings', ';', '}']","['@', 'Override', 'Map', '<', 'String', '>', 'transform', '(', 'Set', '<', 'String', '>', 'values', ',', 'Class', 'parameterType', ')', '{', 'Map', '<', 'String', '>', 'localeStrings', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'value', ':', 'values', ')', '{', 'String', '=', 'value', '.', 'split', '(', '""\\\\""', ')', ';', 'localeStrings', '.', 'put', '(', 'parts', '[', '0', ']', ',', 'parts', '[', '1', ']', ')', ';', '}', 'return', 'localeStrings', ';', '}']",79,68,6,277,221,15,21.374045801526716,15.068493150684931,,,,-1,-1,-1,-1,False
L166_testSizeLarge_1.txt,code2seq,METHOD_NAME,token_wrong,0.8518,0.7417,15.0376,12.864,"{'n_total': 718, 'n_valid': 87, 'n_correct': 41}",190.164226,"@Test public void testSizeLarge() { testWithHandler(new IMAPTest() { @Override public void test(Folder folder, IMAPHandlerMessage handler) throws MessagingException { Message m = folder.getMessage(1); assertEquals(Integer.MAX_VALUE, m.getSize()); assertEquals((long) Integer.MAX_VALUE + 1, ((IMAPMessage) m).getSizeLong()); } }, new IMAPHandlerMessage() { { { size = (long) Integer.MAX_VALUE + 1; } } }); }","@Test void testSizeLarge(){testWithHandler(new IMAPTest(){@Override void test(Folder folder)throws MessagingException{Message.getMessage(1);assertEquals(Integer,m.getSize());assertEquals((long)(m)getSizeLong());}},new IMAPHandlerMessage(){{{}}});}","['@', 'Test', 'public', 'void', 'testSizeLarge', '(', ')', '{', 'testWithHandler', '(', 'new', 'IMAPTest', '(', ')', '{', '@', 'Override', 'public', 'void', 'test', '(', 'Folder', 'folder', ',', 'IMAPHandlerMessage', 'handler', ')', 'throws', 'MessagingException', '{', 'Message', 'm', '=', 'folder', '.', 'getMessage', '(', '1', ')', ';', 'assertEquals', '(', 'Integer', '.', 'MAX_VALUE', ',', 'm', '.', 'getSize', '(', ')', ')', ';', 'assertEquals', '(', '(', 'long', ')', 'Integer', '.', 'MAX_VALUE', '+', '1', ',', '(', '(', 'IMAPMessage', ')', 'm', ')', '.', 'getSizeLong', '(', ')', ')', ';', '}', '}', ',', 'new', 'IMAPHandlerMessage', '(', ')', '{', '{', '{', 'size', '=', '(', 'long', ')', 'Integer', '.', 'MAX_VALUE', '+', '1', ';', '}', '}', '}', ')', ';', '}']","['@', 'Test', 'void', 'testSizeLarge', '(', ')', '{', 'testWithHandler', '(', 'new', 'IMAPTest', '(', ')', '{', '@', 'Override', 'void', 'test', '(', 'Folder', 'folder', ')', 'throws', 'MessagingException', '{', 'Message', '.', 'getMessage', '(', '1', ')', ';', 'assertEquals', '(', 'Integer', ',', 'm', '.', 'getSize', '(', ')', ')', ';', 'assertEquals', '(', '(', 'long', ')', '(', 'm', ')', 'getSizeLong', '(', ')', ')', ';', '}', '}', ',', 'new', 'IMAPHandlerMessage', '(', ')', '{', '{', '{', '}', '}', '}', ')', ';', '}']",103,72,6,406,247,19,41.08527131782946,31.958762886597935,,,,-1,-1,-1,-1,False
L167_getImportedRowCount_1.txt,code2seq,METHOD_NAME,token_wrong,0.923,0.5112,34.741,31.1165,"{'n_total': 188, 'n_valid': 22, 'n_correct': 17}",48.219515,public long getImportedRowCount() { try { return writer.size() - _size; } catch (JournalException e) { throw new JournalRuntimeException(e); } },long getImportedRowCount(){try{writer.size;}catch(JournalException e){throw(e);}},"['public', 'long', 'getImportedRowCount', '(', ')', '{', 'try', '{', 'return', 'writer', '.', 'size', '(', ')', '-', '_size', ';', '}', 'catch', '(', 'JournalException', 'e', ')', '{', 'throw', 'new', 'JournalRuntimeException', '(', 'e', ')', ';', '}', '}']","['long', 'getImportedRowCount', '(', ')', '{', 'try', '{', 'writer', '.', 'size', ';', '}', 'catch', '(', 'JournalException', 'e', ')', '{', 'throw', '(', 'e', ')', ';', '}', '}']",33,25,6,144,81,25,52.94117647058824,29.629629629629626,,,,-1,-1,-1,-1,False
L168_testSingeItem_1.txt,code2seq,METHOD_NAME,token_wrong,0.6378,0.6472,16.2937,20.1856,"{'n_total': 483, 'n_valid': 49, 'n_correct': 41}",105.29005,"public void testSingeItem() { Collection c = Arrays.asList(new String[] { ""test"" }); try { formatter.format(writer, emptyLinkable, """", c, """", false); } catch (IOException e) { log.error(e.getMessage(), e); } assertEquals(""Single item is rendered"", ""<div class=\""list\""><div class=\""list-title\""></div><blockquote>test</blockquote></div>"", writer.toString()); }","void testSingeItem(){(new String[]{""""});try{formatter(writer,emptyLinkable);}catch(IOException e){}assertEquals("""",writer);}","['public', 'void', 'testSingeItem', '(', ')', '{', 'Collection', 'c', '=', 'Arrays', '.', 'asList', '(', 'new', 'String', '[', ']', '{', '""test""', '}', ')', ';', 'try', '{', 'formatter', '.', 'format', '(', 'writer', ',', 'emptyLinkable', ',', '""""', ',', 'c', ',', '""""', ',', 'false', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', 'assertEquals', '(', '""Single item is rendered""', ',', '""<div class=\\""list\\""><div class=\\""list-title\\""></div><blockquote>test</blockquote></div>""', ',', 'writer', '.', 'toString', '(', ')', ')', ';', '}']","['void', 'testSingeItem', '(', ')', '{', '(', 'new', 'String', '[', ']', '{', '""""', '}', ')', ';', 'try', '{', 'formatter', '(', 'writer', ',', 'emptyLinkable', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'assertEquals', '(', '""""', ',', 'writer', ')', ';', '}']",76,40,6,360,124,19,69.20821114369502,51.42857142857142,,,,-1,-1,-1,-1,False
L169_getDefaultExecutor_1.txt,code2seq,METHOD_NAME,token_wrong,0.7645,0.7143,15.2936,16.9136,"{'n_total': 189, 'n_valid': 23, 'n_correct': 16}",50.717953,"public static TimePointExecutor getDefaultExecutor(DataSetExecutor dataSetExecutor, RobotExecutorFactory robotExecutorFactory) { TimePointExecutor executor = new SimpleTimePointExecutor(); executor.setSettings(dataSetExecutor, robotExecutorFactory); return executor; }","TimePointExecutor getDefaultExecutor(DataSetExecutor dataSetExecutor,RobotExecutorFactory robotExecutorFactory){TimePointExecutor=new SimpleTimePointExecutor();executor.setSettings();}","['public', 'static', 'TimePointExecutor', 'getDefaultExecutor', '(', 'DataSetExecutor', 'dataSetExecutor', ',', 'RobotExecutorFactory', 'robotExecutorFactory', ')', '{', 'TimePointExecutor', 'executor', '=', 'new', 'SimpleTimePointExecutor', '(', ')', ';', 'executor', '.', 'setSettings', '(', 'dataSetExecutor', ',', 'robotExecutorFactory', ')', ';', 'return', 'executor', ';', '}']","['TimePointExecutor', 'getDefaultExecutor', '(', 'DataSetExecutor', 'dataSetExecutor', ',', 'RobotExecutorFactory', 'robotExecutorFactory', ')', '{', 'TimePointExecutor', '=', 'new', 'SimpleTimePointExecutor', '(', ')', ';', 'executor', '.', 'setSettings', '(', ')', ';', '}']",33,24,6,268,184,24,34.42622950819672,33.33333333333333,,,,-1,-1,-1,-1,False
L170_getInstanceNames_1.txt,code2seq,METHOD_NAME,token_wrong,0.5115,0.5293,10.8332,13.2784,"{'n_total': 782, 'n_valid': 136, 'n_correct': 66}",289.235854,"private List getInstanceNames() { AuthPropertiesModel apm = getPropertiesModel(); Set tmp = apm.getAuthInstances(); Set instances = new HashSet(tmp.size() * 2); for (Iterator i = tmp.iterator(); i.hasNext(); ) { AMAuthenticationInstance inst = (AMAuthenticationInstance) i.next(); instances.add(inst.getName()); } return AMFormatUtils.sortItems(instances, apm.getUserLocale()); }",List getInstanceNames(){apm();Set=getAuthInstances();(tmp()*2);for(tmp();hasNext();){AMAuthenticationInstance;instances.add(getName());}AMFormatUtils.sortItems();},"['private', 'List', 'getInstanceNames', '(', ')', '{', 'AuthPropertiesModel', 'apm', '=', 'getPropertiesModel', '(', ')', ';', 'Set', 'tmp', '=', 'apm', '.', 'getAuthInstances', '(', ')', ';', 'Set', 'instances', '=', 'new', 'HashSet', '(', 'tmp', '.', 'size', '(', ')', '*', '2', ')', ';', 'for', '(', 'Iterator', 'i', '=', 'tmp', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'AMAuthenticationInstance', 'inst', '=', '(', 'AMAuthenticationInstance', ')', 'i', '.', 'next', '(', ')', ';', 'instances', '.', 'add', '(', 'inst', '.', 'getName', '(', ')', ')', ';', '}', 'return', 'AMFormatUtils', '.', 'sortItems', '(', 'instances', ',', 'apm', '.', 'getUserLocale', '(', ')', ')', ';', '}']","['List', 'getInstanceNames', '(', ')', '{', 'apm', '(', ')', ';', 'Set', '=', 'getAuthInstances', '(', ')', ';', '(', 'tmp', '(', ')', '*', '2', ')', ';', 'for', '(', 'tmp', '(', ')', ';', 'hasNext', '(', ')', ';', ')', '{', 'AMAuthenticationInstance', ';', 'instances', '.', 'add', '(', 'getName', '(', ')', ')', ';', '}', 'AMFormatUtils', '.', 'sortItems', '(', ')', ';', '}']",95,54,6,379,163,22,60.50420168067227,46.06741573033708,,,,-1,-1,-1,-1,False
L171_otherCompiledFile_1.txt,code2seq,METHOD_NAME,token_wrong,0.4475,0.32,25.4039,25.6337,"{'n_total': 351, 'n_valid': 33, 'n_correct': 22}",72.45843,"@Test public void otherCompiledFile() throws IOException { server.compile(other); List<? extends Location> suggestions = doGoto(file, 28, 24); assertThat(suggestions, contains(hasProperty(""uri"", equalTo(other.toString())))); }","@Test void otherCompiledFile(){(other);List<?extends Location>suggestions=doGoto();assertThat(suggestions,(hasProperty(""uri"",(toString()))));}","['@', 'Test', 'public', 'void', 'otherCompiledFile', '(', ')', 'throws', 'IOException', '{', 'server', '.', 'compile', '(', 'other', ')', ';', 'List', '<', '?', 'extends', 'Location', '>', 'suggestions', '=', 'doGoto', '(', 'file', ',', '28', ',', '24', ')', ';', 'assertThat', '(', 'suggestions', ',', 'contains', '(', 'hasProperty', '(', '""uri""', ',', 'equalTo', '(', 'other', '.', 'toString', '(', ')', ')', ')', ')', ')', ';', '}']","['@', 'Test', 'void', 'otherCompiledFile', '(', ')', '{', '(', 'other', ')', ';', 'List', '<', '?', 'extends', 'Location', '>', 'suggestions', '=', 'doGoto', '(', ')', ';', 'assertThat', '(', 'suggestions', ',', '(', 'hasProperty', '(', '""uri""', ',', '(', 'toString', '(', ')', ')', ')', ')', ')', ';', '}']",57,42,6,226,142,23,41.37931034482759,29.411764705882355,,,,-1,-1,-1,-1,False
L172_getDayNumber_1.txt,code2seq,METHOD_NAME,token_wrong,0.5558,0.4173,13.6986,15.448,"{'n_total': 336, 'n_valid': 70, 'n_correct': 29}",147.357843,public static long getDayNumber(long date) { TimeZone tz = TimeZone.getDefault(); long gmtOffset = tz.getOffset(date); return (date + gmtOffset) / DAY_IN_MILLIS; },long getDayNumber(long date){TimeZone tz;getOffset();return(date+gmtOffset)/MILLIS;},"['public', 'static', 'long', 'getDayNumber', '(', 'long', 'date', ')', '{', 'TimeZone', 'tz', '=', 'TimeZone', '.', 'getDefault', '(', ')', ';', 'long', 'gmtOffset', '=', 'tz', '.', 'getOffset', '(', 'date', ')', ';', 'return', '(', 'date', '+', 'gmtOffset', ')', '/', 'DAY_IN_MILLIS', ';', '}']","['long', 'getDayNumber', '(', 'long', 'date', ')', '{', 'TimeZone', 'tz', ';', 'getOffset', '(', ')', ';', 'return', '(', 'date', '+', 'gmtOffset', ')', '/', 'MILLIS', ';', '}']",38,24,6,163,84,18,54.48275862068965,43.75,,,,-1,-1,-1,-1,False
L173_onAssimilate_1.txt,code2seq,METHOD_NAME,token_wrong,0.2183,0.2093,6.9794,7.3853,"{'n_total': 523, 'n_valid': 67, 'n_correct': 42}",142.604728,"@Override protected void onAssimilate(MultiblockControllerBase otherMachine) { if (!(otherMachine instanceof MultiblockTurbine)) { BRLog.warning(""[%s] Turbine @ %s is attempting to assimilate a non-Turbine machine! That machine's data will be lost!"", worldObj.isRemote ? ""CLIENT"" : ""SERVER"", getReferenceCoord()); return; } MultiblockTurbine otherTurbine = (MultiblockTurbine) otherMachine; setRotorEnergy(Math.max(rotorEnergy, otherTurbine.rotorEnergy)); }","@Override void onAssimilate(MultiblockControllerBase otherMachine){if((otherMachine instanceof MultiblockTurbine)){BRLog("""",isRemote?"""":"""",getReferenceCoord);}MultiblockTurbine;setRotorEnergy(max());}","['@', 'Override', 'protected', 'void', 'onAssimilate', '(', 'MultiblockControllerBase', 'otherMachine', ')', '{', 'if', '(', '!', '(', 'otherMachine', 'instanceof', 'MultiblockTurbine', ')', ')', '{', 'BRLog', '.', 'warning', '(', '""[%s] Turbine @ %s is attempting to assimilate a non-Turbine machine! That machine\'s data will be lost!""', ',', 'worldObj', '.', 'isRemote', '?', '""CLIENT""', ':', '""SERVER""', ',', 'getReferenceCoord', '(', ')', ')', ';', 'return', ';', '}', 'MultiblockTurbine', 'otherTurbine', '=', '(', 'MultiblockTurbine', ')', 'otherMachine', ';', 'setRotorEnergy', '(', 'Math', '.', 'max', '(', 'rotorEnergy', ',', 'otherTurbine', '.', 'rotorEnergy', ')', ')', ';', '}']","['@', 'Override', 'void', 'onAssimilate', '(', 'MultiblockControllerBase', 'otherMachine', ')', '{', 'if', '(', '(', 'otherMachine', 'instanceof', 'MultiblockTurbine', ')', ')', '{', 'BRLog', '(', '""""', ',', 'isRemote', '?', '""""', ':', '""""', ',', 'getReferenceCoord', ')', ';', '}', 'MultiblockTurbine', ';', 'setRotorEnergy', '(', 'max', '(', ')', ')', ';', '}']",65,42,6,457,200,18,58.54214123006833,38.983050847457626,,,,-1,-1,-1,-1,False
L174_validate_1.txt,code2seq,METHOD_NAME,token_wrong,0.2504,0.2197,7.8713,5.9888,"{'n_total': 351, 'n_valid': 63, 'n_correct': 28}",127.711925,protected boolean validate(String input) { if (input == null || input.trim().length() < 1) { mErrorText.setVisibility(View.VISIBLE); mErrorText.setText(R.string.task_list_name_dialog_error); return false; } mErrorText.setVisibility(View.INVISIBLE); return true; },boolean validate(String input){if(input.trim()){(View).setText(string_error);}mErrorTextsetVisibility(View.INVISIBLE);return true;},"['protected', 'boolean', 'validate', '(', 'String', 'input', ')', '{', 'if', '(', 'input', '==', 'null', '||', 'input', '.', 'trim', '(', ')', '.', 'length', '(', ')', '<', '1', ')', '{', 'mErrorText', '.', 'setVisibility', '(', 'View', '.', 'VISIBLE', ')', ';', 'mErrorText', '.', 'setText', '(', 'R', '.', 'string', '.', 'task_list_name_dialog_error', ')', ';', 'return', 'false', ';', '}', 'mErrorText', '.', 'setVisibility', '(', 'View', '.', 'INVISIBLE', ')', ';', 'return', 'true', ';', '}']","['boolean', 'validate', '(', 'String', 'input', ')', '{', 'if', '(', 'input', '.', 'trim', '(', ')', ')', '{', '(', 'View', ')', '.', 'setText', '(', 'string_error', ')', ';', '}', 'mErrorTextsetVisibility', '(', 'View', '.', 'INVISIBLE', ')', ';', 'return', 'true', ';', '}']",64,37,6,263,131,14,53.01204819277109,46.55172413793103,,,,-1,-1,-1,-1,False
L175_checkResult_1.txt,code2seq,METHOD_NAME,token_wrong,0.3504,0.3427,6.5887,6.6768,"{'n_total': 269, 'n_valid': 22, 'n_correct': 18}",49.612889,"private void checkResult(boolean expectFailure, Promise<?, ResourceException> promise) { if (expectFailure) { assertThat(promise).failedWithException().isInstanceOf(NotSupportedException.class); } else { assertThat(promise).succeeded(); } }","void checkResult(boolean expectFailure,Promise<?,ResourceException>promise){if(expectFailure){(NotSupportedException.class);}{assertThat(promise).succeeded();}}","['private', 'void', 'checkResult', '(', 'boolean', 'expectFailure', ',', 'Promise', '<', '?', ',', 'ResourceException', '>', 'promise', ')', '{', 'if', '(', 'expectFailure', ')', '{', 'assertThat', '(', 'promise', ')', '.', 'failedWithException', '(', ')', '.', 'isInstanceOf', '(', 'NotSupportedException', '.', 'class', ')', ';', '}', 'else', '{', 'assertThat', '(', 'promise', ')', '.', 'succeeded', '(', ')', ';', '}', '}']","['void', 'checkResult', '(', 'boolean', 'expectFailure', ',', 'Promise', '<', '?', ',', 'ResourceException', '>', 'promise', ')', '{', 'if', '(', 'expectFailure', ')', '{', '(', 'NotSupportedException', '.', 'class', ')', ';', '}', '{', 'assertThat', '(', 'promise', ')', '.', 'succeeded', '(', ')', ';', '}', '}']",51,39,6,240,160,17,35.874439461883405,26.666666666666668,,,,-1,-1,-1,-1,False
L176_initTest_1.txt,code2seq,METHOD_NAME,token_wrong,0.4133,0.987,8.3963,8.9445,"{'n_total': 363, 'n_valid': 40, 'n_correct': 36}",85.755553,"@BeforeClass(alwaysRun = true, groups = { Constants.MobileDeviceManagement.MOBILE_DEVICE_MANAGEMENT_GROUP }) public void initTest() throws Exception { super.init(TestUserMode.SUPER_TENANT_ADMIN); String accessTokenString = ""Bearer "" + OAuthUtil.getOAuthToken(backendHTTPSURL, backendHTTPSURL); this.client = new MDMHttpClient(backendHTTPSURL, Constants.APPLICATION_JSON, accessTokenString); }","@BeforeClass(alwaysRun=true,groups={})void initTest(){super.init();accessTokenString=(backendHTTPSURL)MDMHttpClient();}","['@', 'BeforeClass', '(', 'alwaysRun', '=', 'true', ',', 'groups', '=', '{', 'Constants', '.', 'MobileDeviceManagement', '.', 'MOBILE_DEVICE_MANAGEMENT_GROUP', '}', ')', 'public', 'void', 'initTest', '(', ')', 'throws', 'Exception', '{', 'super', '.', 'init', '(', 'TestUserMode', '.', 'SUPER_TENANT_ADMIN', ')', ';', 'String', 'accessTokenString', '=', '""Bearer ""', '+', 'OAuthUtil', '.', 'getOAuthToken', '(', 'backendHTTPSURL', ',', 'backendHTTPSURL', ')', ';', 'this', '.', 'client', '=', 'new', 'MDMHttpClient', '(', 'backendHTTPSURL', ',', 'Constants', '.', 'APPLICATION_JSON', ',', 'accessTokenString', ')', ';', '}']","['@', 'BeforeClass', '(', 'alwaysRun', '=', 'true', ',', 'groups', '=', '{', '}', ')', 'void', 'initTest', '(', ')', '{', 'super', '.', 'init', '(', ')', ';', 'accessTokenString', '=', '(', 'backendHTTPSURL', ')', 'MDMHttpClient', '(', ')', ';', '}']",65,33,6,392,119,14,72.22222222222221,54.23728813559322,,,,-1,-1,-1,-1,False
L177_beforeAll_1.txt,code2seq,METHOD_NAME,token_wrong,0.5936,0.5189,13.8037,14.5495,"{'n_total': 300, 'n_valid': 30, 'n_correct': 20}",67.225793,@Override public void beforeAll(@Nonnull ExtensionContext context) { if (isRegularTestClass(context)) { @Nullable Class<?> testClass = context.getTestClass().orElse(null); savePointForTestClass = new SavePoint(); TestRun.setCurrentTestClass(testClass); } },@Override void beforeAll(@Nonnull ExtensionContext context){{@Nullable Class<?>testClass=savePointForTestClass.setCurrentTestClass();}},"['@', 'Override', 'public', 'void', 'beforeAll', '(', '@', 'Nonnull', 'ExtensionContext', 'context', ')', '{', 'if', '(', 'isRegularTestClass', '(', 'context', ')', ')', '{', '@', 'Nullable', 'Class', '<', '?', '>', 'testClass', '=', 'context', '.', 'getTestClass', '(', ')', '.', 'orElse', '(', 'null', ')', ';', 'savePointForTestClass', '=', 'new', 'SavePoint', '(', ')', ';', 'TestRun', '.', 'setCurrentTestClass', '(', 'testClass', ')', ';', '}', '}']","['@', 'Override', 'void', 'beforeAll', '(', '@', 'Nonnull', 'ExtensionContext', 'context', ')', '{', '{', '@', 'Nullable', 'Class', '<', '?', '>', 'testClass', '=', 'savePointForTestClass', '.', 'setCurrentTestClass', '(', ')', ';', '}', '}']",55,28,6,256,135,15,50.20746887966805,55.10204081632652,,,,-1,-1,-1,-1,False
L178_setE_1.txt,code2seq,METHOD_NAME,token_wrong,0.8457,0.9146,5.2973,6.0012,"{'n_total': 255, 'n_valid': 33, 'n_correct': 27}",70.713773,public void setE(int n) { if (n < 0) { m_V = true; m_E = -n; } else { m_E = n; } },void setE(int n){if(n){}{E=n;}},"['public', 'void', 'setE', '(', 'int', 'n', ')', '{', 'if', '(', 'n', '<', '0', ')', '{', 'm_V', '=', 'true', ';', 'm_E', '=', '-', 'n', ';', '}', 'else', '{', 'm_E', '=', 'n', ';', '}', '}']","['void', 'setE', '(', 'int', 'n', ')', '{', 'if', '(', 'n', ')', '{', '}', '{', 'E', '=', 'n', ';', '}', '}']",33,20,6,82,31,10,70.83333333333334,48.148148148148145,,,,-1,-1,-1,-1,False
L179_applyDynamicPartialMocking_1.txt,code2seq,METHOD_NAME,token_wrong,0.3422,0.2876,32.5678,39.1762,"{'n_total': 346, 'n_valid': 55, 'n_correct': 30}",116.488072,@Nullable private static DynamicPartialMocking applyDynamicPartialMocking(@Nullable Object... classesOrInstances) { if (classesOrInstances == null || classesOrInstances.length == 0) { return null; } DynamicPartialMocking mocking = new DynamicPartialMocking(); mocking.redefineTypes(classesOrInstances); return mocking; },DynamicPartialMocking applyDynamicPartialMocking(Object...classesOrInstances){if(length){}DynamicPartialMocking mocking=(classesOrInstances);mocking;},"['@', 'Nullable', 'private', 'static', 'DynamicPartialMocking', 'applyDynamicPartialMocking', '(', '@', 'Nullable', 'Object', '...', 'classesOrInstances', ')', '{', 'if', '(', 'classesOrInstances', '==', 'null', '||', 'classesOrInstances', '.', 'length', '==', '0', ')', '{', 'return', 'null', ';', '}', 'DynamicPartialMocking', 'mocking', '=', 'new', 'DynamicPartialMocking', '(', ')', ';', 'mocking', '.', 'redefineTypes', '(', 'classesOrInstances', ')', ';', 'return', 'mocking', ';', '}']","['DynamicPartialMocking', 'applyDynamicPartialMocking', '(', 'Object', '...', 'classesOrInstances', ')', '{', 'if', '(', 'length', ')', '{', '}', 'DynamicPartialMocking', 'mocking', '=', '(', 'classesOrInstances', ')', ';', 'mocking', ';', '}']",50,24,6,320,150,32,59.02777777777778,59.09090909090909,,,,-1,-1,-1,-1,False
L180_fireComplete_1.txt,code2seq,METHOD_NAME,token_wrong,0.7501,0.6999,10.2,13.1618,"{'n_total': 317, 'n_valid': 33, 'n_correct': 29}",78.483394,protected void fireComplete(T res) { Subscriber<T> s = this.subRef.getAndSet(null); if ((s == null) || (s.isUnsubscribed())) return; s.onNext(res); s.onCompleted(); },void fireComplete(T res){Subscriber<T>s;if((s)(s()))onNext();},"['protected', 'void', 'fireComplete', '(', 'T', 'res', ')', '{', 'Subscriber', '<', 'T', '>', 's', '=', 'this', '.', 'subRef', '.', 'getAndSet', '(', 'null', ')', ';', 'if', '(', '(', 's', '==', 'null', ')', '||', '(', 's', '.', 'isUnsubscribed', '(', ')', ')', ')', 'return', ';', 's', '.', 'onNext', '(', 'res', ')', ';', 's', '.', 'onCompleted', '(', ')', ';', '}']","['void', 'fireComplete', '(', 'T', 'res', ')', '{', 'Subscriber', '<', 'T', '>', 's', ';', 'if', '(', '(', 's', ')', '(', 's', '(', ')', ')', ')', 'onNext', '(', ')', ';', '}']",55,29,6,166,62,18,70.27027027027027,53.06122448979592,,,,-1,-1,-1,-1,False
L181_createTask_1.txt,code2seq,METHOD_NAME,token_wrong,0.7863,0.7623,11.1911,12.7047,"{'n_total': 200, 'n_valid': 27, 'n_correct': 17}",56.399295,"@Before public void createTask() { Project project = ProjectBuilder.builder().build(); checkTask = project.getTasks().create(""checkTaskUnderTest"", SpotlessTask.class); checkTask.setCheck(); applyTask = project.getTasks().create(""applyTaskUnderTest"", SpotlessTask.class); applyTask.setApply(); }","@Before void createTask(){Project().create(""checkTaskUnderTest"",SpotlessTask.class);applyTask.setApply();}","['@', 'Before', 'public', 'void', 'createTask', '(', ')', '{', 'Project', 'project', '=', 'ProjectBuilder', '.', 'builder', '(', ')', '.', 'build', '(', ')', ';', 'checkTask', '=', 'project', '.', 'getTasks', '(', ')', '.', 'create', '(', '""checkTaskUnderTest""', ',', 'SpotlessTask', '.', 'class', ')', ';', 'checkTask', '.', 'setCheck', '(', ')', ';', 'applyTask', '=', 'project', '.', 'getTasks', '(', ')', '.', 'create', '(', '""applyTaskUnderTest""', ',', 'SpotlessTask', '.', 'class', ')', ';', 'applyTask', '.', 'setApply', '(', ')', ';', '}']","['@', 'Before', 'void', 'createTask', '(', ')', '{', 'Project', '(', ')', '.', 'create', '(', '""checkTaskUnderTest""', ',', 'SpotlessTask', '.', 'class', ')', ';', 'applyTask', '.', 'setApply', '(', ')', ';', '}']",68,27,6,294,106,16,67.62589928057554,66.12903225806451,,,,-1,-1,-1,-1,False
L182_testUnderTerminatedOver_1.txt,code2seq,METHOD_NAME,token_wrong,0.6787,0.6215,28.8763,30.7946,"{'n_total': 348, 'n_valid': 48, 'n_correct': 28}",102.620151,"@Test public void testUnderTerminatedOver() { try { parser.parse(""select a,b, f(c) my over (partition by b order by ts from xyz""); Assert.fail(); } catch (ParserException e) { Assert.assertEquals(53, QueryError.getPosition()); } }","@Test void testUnderTerminatedOver(){try{parser(""select"");fail();}catch(ParserException e){(QueryError.getPosition());}}","['@', 'Test', 'public', 'void', 'testUnderTerminatedOver', '(', ')', '{', 'try', '{', 'parser', '.', 'parse', '(', '""select a,b, f(c) my over (partition by b order by ts from xyz""', ')', ';', 'Assert', '.', 'fail', '(', ')', ';', '}', 'catch', '(', 'ParserException', 'e', ')', '{', 'Assert', '.', 'assertEquals', '(', '53', ',', 'QueryError', '.', 'getPosition', '(', ')', ')', ';', '}', '}']","['@', 'Test', 'void', 'testUnderTerminatedOver', '(', ')', '{', 'try', '{', 'parser', '(', '""select""', ')', ';', 'fail', '(', ')', ';', '}', 'catch', '(', 'ParserException', 'e', ')', '{', '(', 'QueryError', '.', 'getPosition', '(', ')', ')', ';', '}', '}']",45,35,6,230,120,29,54.72636815920397,25.64102564102564,,,,-1,-1,-1,-1,False
L183_getContentsMap_1.txt,code2seq,METHOD_NAME,token_wrong,0.397,0.562,8.6764,10.9489,"{'n_total': 480, 'n_valid': 50, 'n_correct': 41}",109.23857,"private Map<Pattern, File> getContentsMap(List<Content> contents) { Map<Pattern, File> contentsMap = new HashMap<Pattern, File>(); for (Content content : contents) { contentsMap.put(Pattern.compile("".*\\Q${inject.content."" + content.getId() + ""}\\E.*""), content.getFile()); } return contentsMap; }","Map<Pattern>getContentsMap(List<Content>contents){Map<File>contentsMap=new HashMap<>();for(Content content:contents){contentsMap(Pattern.compile(""""+""\\""),getFile());}return contentsMap;}","['private', 'Map', '<', 'Pattern', ',', 'File', '>', 'getContentsMap', '(', 'List', '<', 'Content', '>', 'contents', ')', '{', 'Map', '<', 'Pattern', ',', 'File', '>', 'contentsMap', '=', 'new', 'HashMap', '<', 'Pattern', ',', 'File', '>', '(', ')', ';', 'for', '(', 'Content', 'content', ':', 'contents', ')', '{', 'contentsMap', '.', 'put', '(', 'Pattern', '.', 'compile', '(', '"".*\\\\Q${inject.content.""', '+', 'content', '.', 'getId', '(', ')', '+', '""}\\\\E.*""', ')', ',', 'content', '.', 'getFile', '(', ')', ')', ';', '}', 'return', 'contentsMap', ';', '}']","['Map', '<', 'Pattern', '>', 'getContentsMap', '(', 'List', '<', 'Content', '>', 'contents', ')', '{', 'Map', '<', 'File', '>', 'contentsMap', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'Content', 'content', ':', 'contents', ')', '{', 'contentsMap', '(', 'Pattern', '.', 'compile', '(', '""""', '+', '""\\\\""', ')', ',', 'getFile', '(', ')', ')', ';', '}', 'return', 'contentsMap', ';', '}']",73,55,6,297,186,20,40.07220216606498,26.865671641791046,,,,-1,-1,-1,-1,False
L184_shouldDecodeEncoding_1.txt,code2seq,METHOD_NAME,token_wrong,0.7411,0.612,25.613,30.5964,"{'n_total': 357, 'n_valid': 51, 'n_correct': 29}",107.737294,"@Test public void shouldDecodeEncoding() throws CoreTokenException { String key = ""badger""; Token token = new Token(""id"", TokenType.SESSION); utils.setBlobFromString(token, key); String result = utils.getBlobAsString(token); assertThat(key).isEqualTo(result); }","void shouldDecodeEncoding(){key="""";("""".SESSION);setBlobFromString(key);result=getBlobAsString(token);}","['@', 'Test', 'public', 'void', 'shouldDecodeEncoding', '(', ')', 'throws', 'CoreTokenException', '{', 'String', 'key', '=', '""badger""', ';', 'Token', 'token', '=', 'new', 'Token', '(', '""id""', ',', 'TokenType', '.', 'SESSION', ')', ';', 'utils', '.', 'setBlobFromString', '(', 'token', ',', 'key', ')', ';', 'String', 'result', '=', 'utils', '.', 'getBlobAsString', '(', 'token', ')', ';', 'assertThat', '(', 'key', ')', '.', 'isEqualTo', '(', 'result', ')', ';', '}']","['void', 'shouldDecodeEncoding', '(', ')', '{', 'key', '=', '""""', ';', '(', '""""', '.', 'SESSION', ')', ';', 'setBlobFromString', '(', 'key', ')', ';', 'result', '=', 'getBlobAsString', '(', 'token', ')', ';', '}']",58,28,6,261,102,26,67.65957446808511,57.692307692307686,,,,-1,-1,-1,-1,False
L185_print_1.txt,code2seq,METHOD_NAME,token_wrong,0.7851,0.4479,4.6006,4.2624,"{'n_total': 180, 'n_valid': 24, 'n_correct': 18}",50.265359,"public void print(Writer out) throws IOException { if (tag == null) System.out.println(tag); out.write(token + ""\t"" + tag + ""\n""); }","void print(Writer out)throws IOException{(""""+tag+"""");}","['public', 'void', 'print', '(', 'Writer', 'out', ')', 'throws', 'IOException', '{', 'if', '(', 'tag', '==', 'null', ')', 'System', '.', 'out', '.', 'println', '(', 'tag', ')', ';', 'out', '.', 'write', '(', 'token', '+', '""\\t""', '+', 'tag', '+', '""\\n""', ')', ';', '}']","['void', 'print', '(', 'Writer', 'out', ')', 'throws', 'IOException', '{', '(', '""""', '+', 'tag', '+', '""""', ')', ';', '}']",39,18,6,132,54,11,64.46280991735537,63.63636363636363,,,,-1,-1,-1,-1,False
L186_skip_1.txt,code2seq,METHOD_NAME,token_wrong,0.5646,0.5874,6.3966,6.7869,"{'n_total': 145, 'n_valid': 26, 'n_correct': 18}",52.849152,private int skip() { int i = cursor; int ch = temp[i + 1]; cursor = i + 2; return ch; },int skip(){temp[1]=i;ch;},"['private', 'int', 'skip', '(', ')', '{', 'int', 'i', '=', 'cursor', ';', 'int', 'ch', '=', 'temp', '[', 'i', '+', '1', ']', ';', 'cursor', '=', 'i', '+', '2', ';', 'return', 'ch', ';', '}']","['int', 'skip', '(', ')', '{', 'temp', '[', '1', ']', '=', 'i', ';', 'ch', ';', '}']",31,15,6,87,25,10,80.51948051948052,64.0,,,,-1,-1,-1,-1,False
L187_scanWebInfClasses_1.txt,code2seq,METHOD_NAME,token_wrong,0.6278,0.4036,39.6613,29.9834,"{'n_total': 130, 'n_valid': 16, 'n_correct': 12}",34.605425,"@Override public void scanWebInfClasses() throws IOException { String webappPath = WEB_INF + ""classes""; String realPath = context.getRealPath(webappPath); File webInfClasses = new File(realPath); scan(webInfClasses, webappPath, true); }","@Override void scanWebInfClasses()throws IOException{scan(webInfClasses,true);}","['@', 'Override', 'public', 'void', 'scanWebInfClasses', '(', ')', 'throws', 'IOException', '{', 'String', 'webappPath', '=', 'WEB_INF', '+', '""classes""', ';', 'String', 'realPath', '=', 'context', '.', 'getRealPath', '(', 'webappPath', ')', ';', 'File', 'webInfClasses', '=', 'new', 'File', '(', 'realPath', ')', ';', 'scan', '(', 'webInfClasses', ',', 'webappPath', ',', 'true', ')', ';', '}']","['@', 'Override', 'void', 'scanWebInfClasses', '(', ')', 'throws', 'IOException', '{', 'scan', '(', 'webInfClasses', ',', 'true', ')', ';', '}']",46,17,6,236,79,23,73.70892018779342,72.5,,,,-1,-1,-1,-1,False
L188_onParameterReceived_1.txt,code2seq,METHOD_NAME,token_wrong,0.8494,0.6449,14.1701,9.9185,"{'n_total': 282, 'n_valid': 27, 'n_correct': 25}",59.307958,"@Override public void onParameterReceived(Parameter parameter, int index, int count) { if (connectedApps.isEmpty()) { return; } for (DroneApi droneEventsListener : connectedApps.values()) { droneEventsListener.onParameterReceived(parameter, index, count); } }",void onParameterReceived(int count){if(isEmpty()){}for(DroneApi droneEventsListener:values){onParameterReceived(parameter);}},"['@', 'Override', 'public', 'void', 'onParameterReceived', '(', 'Parameter', 'parameter', ',', 'int', 'index', ',', 'int', 'count', ')', '{', 'if', '(', 'connectedApps', '.', 'isEmpty', '(', ')', ')', '{', 'return', ';', '}', 'for', '(', 'DroneApi', 'droneEventsListener', ':', 'connectedApps', '.', 'values', '(', ')', ')', '{', 'droneEventsListener', '.', 'onParameterReceived', '(', 'parameter', ',', 'index', ',', 'count', ')', ';', '}', '}']","['void', 'onParameterReceived', '(', 'int', 'count', ')', '{', 'if', '(', 'isEmpty', '(', ')', ')', '{', '}', 'for', '(', 'DroneApi', 'droneEventsListener', ':', 'values', ')', '{', 'onParameterReceived', '(', 'parameter', ')', ';', '}', '}']",53,30,6,259,125,25,57.26495726495726,48.93617021276596,,,,-1,-1,-1,-1,False
L189_performValidation_1.txt,code2seq,METHOD_NAME,token_wrong,0.7438,0.6381,19.3328,16.6742,"{'n_total': 568, 'n_valid': 66, 'n_correct': 49}",143.227205,"protected void performValidation(String strData) throws ValidationException { if ((strData == null) || (strData.trim().length() == 0)) { throw new ValidationException(resourceBundleName, ""errorCode5""); } try { int value = Integer.parseInt(strData); } catch (NumberFormatException nfe) { throw new ValidationException(resourceBundleName, ""errorCode5""); } }","void performValidation(String strData)throws ValidationException{if((strData)(strData())){ValidationException(resourceBundleName,"""");}try{(strData);}catch(NumberFormatException nfe){ValidationException(resourceBundleName,"""");}}","['protected', 'void', 'performValidation', '(', 'String', 'strData', ')', 'throws', 'ValidationException', '{', 'if', '(', '(', 'strData', '==', 'null', ')', '||', '(', 'strData', '.', 'trim', '(', ')', '.', 'length', '(', ')', '==', '0', ')', ')', '{', 'throw', 'new', 'ValidationException', '(', 'resourceBundleName', ',', '""errorCode5""', ')', ';', '}', 'try', '{', 'int', 'value', '=', 'Integer', '.', 'parseInt', '(', 'strData', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'nfe', ')', '{', 'throw', 'new', 'ValidationException', '(', 'resourceBundleName', ',', '""errorCode5""', ')', ';', '}', '}']","['void', 'performValidation', '(', 'String', 'strData', ')', 'throws', 'ValidationException', '{', 'if', '(', '(', 'strData', ')', '(', 'strData', '(', ')', ')', ')', '{', 'ValidationException', '(', 'resourceBundleName', ',', '""""', ')', ';', '}', 'try', '{', '(', 'strData', ')', ';', '}', 'catch', '(', 'NumberFormatException', 'nfe', ')', '{', 'ValidationException', '(', 'resourceBundleName', ',', '""""', ')', ';', '}', '}']",73,51,6,355,227,23,38.55421686746988,32.83582089552239,,,,-1,-1,-1,-1,False
L190_createRawValidator_4.txt,code2seq,METHOD_NAME,token_wrong,0.6856,0.4378,25.8712,24.6747,"{'n_total': 1032, 'n_valid': 255, 'n_correct': 107}",504.209305,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\fsr\u0000"" + ""\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\fq\u0000~\u0000\u0010psq\u0000~\u0000\fq"" + ""\u0000~\u0000\u0010psq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\fppsr\u0000 com.sun.msv.grammar.OneOrMoreE"" + ""xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003e"" + ""xpq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u00002com.sun.ms"" + ""v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000"" + ""~\u0000\u000f\u0001q\u0000~\u0000\u001bsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001d"" + ""com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"" + ""ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001cq\u0000~\u0000"" + ""!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalN"" + ""amet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u00008com.sun"" + "".identity.liberty.ws.disco.jaxb.ResourceIDElementt\u0000+http://j"" + ""ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0007ppsq\u0000~"" + ""\u0000\u0000pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psq\u0000~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000"" + ""5com.sun.identity.liberty.ws.disco.jaxb.ResourceIDTypeq\u0000~\u0000&s"" + ""q\u0000~\u0000\fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004nam"" + ""et\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000\""com.sun.msv"" + "".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"" + ""sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."" + ""ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"" + ""peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhit"" + ""eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "" + ""http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"" + ""type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."" + ""msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"" + "".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000"" + ""~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"" + ""~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u0000<q\u0000~\u0000;sq\u0000~\u0000\""t\u0000\u0004typet\u0000)http://ww"" + ""w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\nResourceIDt\u0000\u0019u"" + ""rn:liberty:disco:2003-08sq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psq\u0000"" + ""~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000Acom.sun.identity.liberty.ws"" + "".disco.jaxb.EncryptedResourceIDElementq\u0000~\u0000&sq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~"" + ""\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psq\u0000~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!"" + ""sq\u0000~\u0000\""t\u0000>com.sun.identity.liberty.ws.disco.jaxb.EncryptedRes"" + ""ourceIDTypeq\u0000~\u0000&sq\u0000~\u0000\fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\u0013"" + ""EncryptedResourceIDq\u0000~\u0000Iq\u0000~\u0000!sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psq\u0000~\u0000\u0000q\u0000~\u0000\u0010"" + ""p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psq\u0000~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000"" + ""\u001fq\u0000~\u0000!sq\u0000~\u0000\""t\u0000Icom.sun.identity.liberty.ws.disco.jaxb.QueryT"" + ""ype.RequestedServiceTypeTypeq\u0000~\u0000&sq\u0000~\u0000\fppsq\u0000~\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000"" + ""~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\u0014RequestedServiceTypeq\u0000~\u0000Iq\u0000~\u0000!sq\u0000~\u0000\fppsq\u0000~\u0000"" + ""\u0018q\u0000~\u0000\u0010psq\u0000~\u00001ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\""com.s"" + ""un.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.data"" + ""type.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00006q\u0000~\u0000;t\u0000\u0002"" + ""IDq\u0000~\u0000?\u0000q\u0000~\u0000Asq\u0000~\u0000Bq\u0000~\u0000rq\u0000~\u0000;sq\u0000~\u0000\""t\u0000\u0002idt\u0000\u0000q\u0000~\u0000!sq\u0000~\u0000\fppsq\u0000~"" + ""\u0000\u0018q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000Dq\u0000~\u0000!sq\u0000~\u0000\""t\u0000\u0005Queryq\u0000~\u0000Isr\u0000\""com.sun.msv.gr"" + ""ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"" + ""ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"" + ""pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"" + ""\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u001b\u0001pq\u0000~\u0000\u0017q"" + ""\u0000~\u0000+q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000bq\u0000~\u0000\u000bq\u0000~\u0000]q\u0000~\u0000\u0014q\u0000~\u0000*q\u0000~\u0000Kq\u0000~\u0000Sq\u0000~\u0000aq\u0000~\u0000\nq"" + ""\u0000~\u0000(q\u0000~\u0000Qq\u0000~\u0000_q\u0000~\u0000\u0011q\u0000~\u0000\tq\u0000~\u0000\rq\u0000~\u0000\\q\u0000~\u0000jq\u0000~\u0000\u000eq\u0000~\u0000/q\u0000~\u0000Xq\u0000~\u0000fq"" + ""\u0000~\u0000wq\u0000~\u0000\u0012x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msvverifierDocumentDeclaration createRawValidator(){if(schemaFragment==null){schemaFragment=com.SchemaDeserializer.deserialize((""gr""+""""+""-""+""pressionPool\u00d7j""+""00""+""fq""+""""));}return new com.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""r\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsq\x00~\x00\\fsr\x00""', '+', '""\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psq\x00~\x00\\fq\x00~\x00\x10psq\x00~\x00\\fq""', '+', '""\x00~\x00\x10psq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\\fppsr\x00 com.sun.msv.grammar.OneOrMoreE""', '+', '""xp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03e""', '+', '""xpq\x00~\x00\x03xq\x00~\x00\x04q\x00~\x00\x10psr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00""', '+', '""\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x10psr\x002com.sun.ms""', '+', '""v.grammar.Expression$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00""', '+', '""~\x00\x0f\x01q\x00~\x00\x1bsr\x00 com.sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1d""', '+', '""com.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.gr""', '+', '""ammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x1cq\x00~\x00""', '+', '""!sr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalN""', '+', '""amet\x00\x12Ljava/lang/String;L\x00\\fnamespaceURIq\x00~\x00#xq\x00~\x00\x1et\x008com.sun""', '+', '"".identity.liberty.ws.disco.jaxb.ResourceIDElementt\x00+http://j""', '+', '""ava.sun.com/jaxb/xjc/dummy-elementssq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\x07ppsq\x00~""', '+', '""\x00\x00pp\x00sq\x00~\x00\\fppsq\x00~\x00\x15q\x00~\x00\x10psq\x00~\x00\x18q\x00~\x00\x10pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x00""', '+', '""5com.sun.identity.liberty.ws.disco.jaxb.ResourceIDTypeq\x00~\x00&s""', '+', '""q\x00~\x00\\fppsq\x00~\x00\x18q\x00~\x00\x10psr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04nam""', '+', '""et\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04q\x00~\x00\x10psr\x00\\""com.sun.msv""', '+', '"".datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.x""', '+', '""sd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.""', '+', '""ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDataty""', '+', '""peImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUriq\x00~\x00#L\x00\\btypeNameq\x00~\x00#L\x00\\nwhit""', '+', '""eSpacet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 ""', '+', '""http://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.data""', '+', '""type.xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.""', '+', '""msv.datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun""', '+', '"".msv.grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00""', '+', '""~\x00\x10psr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00""', '+', '""~\x00#L\x00\\fnamespaceURIq\x00~\x00#xpq\x00~\x00<q\x00~\x00;sq\x00~\x00\\""t\x00\x04typet\x00)http://ww""', '+', '""w.w3.org/2001/XMLSchema-instanceq\x00~\x00!sq\x00~\x00\\""t\x00\\nResourceIDt\x00\x19u""', '+', '""rn:liberty:disco:2003-08sq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\\fppsq\x00~\x00\x15q\x00~\x00\x10psq\x00""', '+', '""~\x00\x18q\x00~\x00\x10pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""t\x00Acom.sun.identity.liberty.ws""', '+', '"".disco.jaxb.EncryptedResourceIDElementq\x00~\x00&sq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~""', '+', '""\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\fppsq\x00~\x00\x15q\x00~\x00\x10psq\x00~\x00\x18q\x00~\x00\x10pq\x00~\x00\x1bq\x00~\x00\x1fq\x00~\x00!""', '+', '""sq\x00~\x00\\""t\x00>com.sun.identity.liberty.ws.disco.jaxb.EncryptedRes""', '+', '""ourceIDTypeq\x00~\x00&sq\x00~\x00\\fppsq\x00~\x00\x18q\x00~\x00\x10pq\x00~\x004q\x00~\x00Dq\x00~\x00!sq\x00~\x00\\""t\x00\x13""', '+', '""EncryptedResourceIDq\x00~\x00Iq\x00~\x00!sq\x00~\x00\\fppsq\x00~\x00\x15q\x00~\x00\x10psq\x00~\x00\x00q\x00~\x00\x10""', '+', '""p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\fppsq\x00~\x00\x15q\x00~\x00\x10psq\x00~\x00\x18q\x00~\x00\x10pq\x00~\x00\x1bq\x00~\x00""', '+', '""\x1fq\x00~\x00!sq\x00~\x00\\""t\x00Icom.sun.identity.liberty.ws.disco.jaxb.QueryT""', '+', '""ype.RequestedServiceTypeTypeq\x00~\x00&sq\x00~\x00\\fppsq\x00~\x00\x18q\x00~\x00\x10pq\x00~\x004q\x00""', '+', '""~\x00Dq\x00~\x00!sq\x00~\x00\\""t\x00\x14RequestedServiceTypeq\x00~\x00Iq\x00~\x00!sq\x00~\x00\\fppsq\x00~\x00""', '+', '""\x18q\x00~\x00\x10psq\x00~\x001ppsr\x00\x1fcom.sun.msv.datatype.xsd.IDType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00#com.sun.msv.datatype.xsd.NcnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\""com.s""', '+', '""un.msv.datatype.xsd.TokenType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.data""', '+', '""type.xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxq\x00~\x006q\x00~\x00;t\x00\x02""', '+', '""IDq\x00~\x00?\x00q\x00~\x00Asq\x00~\x00Bq\x00~\x00rq\x00~\x00;sq\x00~\x00\\""t\x00\x02idt\x00\x00q\x00~\x00!sq\x00~\x00\\fppsq\x00~""', '+', '""\x00\x18q\x00~\x00\x10pq\x00~\x004q\x00~\x00Dq\x00~\x00!sq\x00~\x00\\""t\x00\x05Queryq\x00~\x00Isr\x00\\""com.sun.msv.gr""', '+', '""ammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/gr""', '+', '""ammar/ExpressionPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.Ex""', '+', '""pressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00""', '+', '""\x06parentt\x00$Lcom/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x1b\x01pq\x00~\x00\x17q""', '+', '""\x00~\x00+q\x00~\x00Lq\x00~\x00Tq\x00~\x00bq\x00~\x00\x0bq\x00~\x00]q\x00~\x00\x14q\x00~\x00*q\x00~\x00Kq\x00~\x00Sq\x00~\x00aq\x00~\x00\\nq""', '+', '""\x00~\x00(q\x00~\x00Qq\x00~\x00_q\x00~\x00\x11q\x00~\x00\\tq\x00~\x00\\rq\x00~\x00\\\\q\x00~\x00jq\x00~\x00\x0eq\x00~\x00/q\x00~\x00Xq\x00~\x00fq""', '+', '""\x00~\x00wq\x00~\x00\x12x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msvverifierDocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""gr""', '+', '""""', '+', '""-""', '+', '""pressionPool×j""', '+', '""00""', '+', '""fq""', '+', '""""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",185,54,6,8777,252,24,97.39517879584143,73.18435754189943,,,,-1,-1,-1,-1,False
L191_disconnect_1.txt,code2seq,METHOD_NAME,token_wrong,0.3616,0.4913,3.6514,6.111,"{'n_total': 173, 'n_valid': 18, 'n_correct': 14}",41.221815,@Override public synchronized void disconnect() { setConnected(false); try { close(); } catch (Exception x) { } },@Override void disconnect(){try{close();}catch(Exception x){}},"['@', 'Override', 'public', 'synchronized', 'void', 'disconnect', '(', ')', '{', 'setConnected', '(', 'false', ')', ';', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']","['@', 'Override', 'void', 'disconnect', '(', ')', '{', 'try', '{', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', '}', '}']",29,22,6,113,62,16,52.57731958762887,30.434782608695656,,,,-1,-1,-1,-1,False
L192_processActionAddRank_1.txt,code2seq,METHOD_NAME,token_wrong,0.6922,0.7504,17.5905,17.4505,"{'n_total': 216, 'n_valid': 29, 'n_correct': 21}",64.050514,"public String processActionAddRank() { if (log.isDebugEnabled()) log.debug(""processActionAddRank()""); this.setForumRankBean(new ForumRankBean()); this.courseMemberMap = membershipManager.getFilteredCourseMembers(true, null); return ADD_RANK; }","String processActionAddRank(){if(isDebugEnabled)debug(""processActionAddRank"");getFilteredCourseMembers();}","['public', 'String', 'processActionAddRank', '(', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '""processActionAddRank()""', ')', ';', 'this', '.', 'setForumRankBean', '(', 'new', 'ForumRankBean', '(', ')', ')', ';', 'this', '.', 'courseMemberMap', '=', 'membershipManager', '.', 'getFilteredCourseMembers', '(', 'true', ',', 'null', ')', ';', 'return', 'ADD_RANK', ';', '}']","['String', 'processActionAddRank', '(', ')', '{', 'if', '(', 'isDebugEnabled', ')', 'debug', '(', '""processActionAddRank""', ')', ';', 'getFilteredCourseMembers', '(', ')', ';', '}']",48,19,6,243,106,26,63.133640552995395,69.04761904761905,,,,-1,-1,-1,-1,False
L193_shouldReturnMultipleStrategies_1.txt,code2seq,METHOD_NAME,token_wrong,0.5092,0.4517,23.1894,23.9416,"{'n_total': 382, 'n_valid': 51, 'n_correct': 22}",117.289279,"@Test public void shouldReturnMultipleStrategies() { CoreTokenConfig config = mock(CoreTokenConfig.class); given(config.isTokenEncrypted()).willReturn(true); given(config.isTokenCompressed()).willReturn(true); Collection<BlobStrategy> strategies = factory.getStrategies(config); assertThat(strategies).contains(compression, encryption); }",@Test void shouldReturnMultipleStrategies(){(config.isTokenCompressed()).willReturn();Collection<BlobStrategy>strategies=getStrategies();assertThat().contains();},"['@', 'Test', 'public', 'void', 'shouldReturnMultipleStrategies', '(', ')', '{', 'CoreTokenConfig', 'config', '=', 'mock', '(', 'CoreTokenConfig', '.', 'class', ')', ';', 'given', '(', 'config', '.', 'isTokenEncrypted', '(', ')', ')', '.', 'willReturn', '(', 'true', ')', ';', 'given', '(', 'config', '.', 'isTokenCompressed', '(', ')', ')', '.', 'willReturn', '(', 'true', ')', ';', 'Collection', '<', 'BlobStrategy', '>', 'strategies', '=', 'factory', '.', 'getStrategies', '(', 'config', ')', ';', 'assertThat', '(', 'strategies', ')', '.', 'contains', '(', 'compression', ',', 'encryption', ')', ';', '}']","['@', 'Test', 'void', 'shouldReturnMultipleStrategies', '(', ')', '{', '(', 'config', '.', 'isTokenCompressed', '(', ')', ')', '.', 'willReturn', '(', ')', ';', 'Collection', '<', 'BlobStrategy', '>', 'strategies', '=', 'getStrategies', '(', ')', ';', 'assertThat', '(', ')', '.', 'contains', '(', ')', ';', '}']",72,38,6,338,162,36,58.27814569536424,51.515151515151516,,,,-1,-1,-1,-1,False
L194_computeSerializable_1.txt,code2seq,METHOD_NAME,token_wrong,0.4468,0.581,15.4246,11.5719,"{'n_total': 568, 'n_valid': 73, 'n_correct': 45}",156.508777,"private boolean computeSerializable(HttpSession session, List<String> attributeNames) { for (final String attributeName : attributeNames) { final Object attributeValue = session.getAttribute(attributeName); if (!(attributeValue == null || attributeValue instanceof Serializable)) { return false; } } return true; }","boolean computeSerializable(HttpSession session,List<String>attributeNames){for(String attributeName:attributeNames){getAttribute;if((attributeValue instanceof Serializable)){}}}","['private', 'boolean', 'computeSerializable', '(', 'HttpSession', 'session', ',', 'List', '<', 'String', '>', 'attributeNames', ')', '{', 'for', '(', 'final', 'String', 'attributeName', ':', 'attributeNames', ')', '{', 'final', 'Object', 'attributeValue', '=', 'session', '.', 'getAttribute', '(', 'attributeName', ')', ';', 'if', '(', '!', '(', 'attributeValue', '==', 'null', '||', 'attributeValue', 'instanceof', 'Serializable', ')', ')', '{', 'return', 'false', ';', '}', '}', 'return', 'true', ';', '}']","['boolean', 'computeSerializable', '(', 'HttpSession', 'session', ',', 'List', '<', 'String', '>', 'attributeNames', ')', '{', 'for', '(', 'String', 'attributeName', ':', 'attributeNames', ')', '{', 'getAttribute', ';', 'if', '(', '(', 'attributeValue', 'instanceof', 'Serializable', ')', ')', '{', '}', '}', '}']",57,35,6,314,178,25,47.05882352941176,43.13725490196079,,,,-1,-1,-1,-1,False
L195_fromString_1.txt,code2seq,METHOD_NAME,token_wrong,0.4692,0.6256,15.1988,14.008,"{'n_total': 364, 'n_valid': 55, 'n_correct': 27}",116.911961,"public static GradeFields fromString(String field) { try { return GradeFields.valueOf(field); } catch (Exception ex) { log.info(""Gradebook: Could not find the export field : "" + field); return GradeFields.valueOf(""novalue""); } }","GradeFields fromString(String field){try{returnGradeFields.valueOf(field);}catch(Exception ex){(""Could find"");GradeFields.valueOf();}}","['public', 'static', 'GradeFields', 'fromString', '(', 'String', 'field', ')', '{', 'try', '{', 'return', 'GradeFields', '.', 'valueOf', '(', 'field', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'info', '(', '""Gradebook: Could not find the export field : ""', '+', 'field', ')', ';', 'return', 'GradeFields', '.', 'valueOf', '(', '""novalue""', ')', ';', '}', '}']","['GradeFields', 'fromString', '(', 'String', 'field', ')', '{', 'try', '{', 'returnGradeFields', '.', 'valueOf', '(', 'field', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '(', '""Could find""', ')', ';', 'GradeFields', '.', 'valueOf', '(', ')', ';', '}', '}']",45,35,6,228,134,16,44.339622641509436,25.64102564102564,,,,-1,-1,-1,-1,False
L196_toInteger_1.txt,code2seq,METHOD_NAME,token_wrong,0.1985,0.5699,8.5696,9.8032,"{'n_total': 202, 'n_valid': 25, 'n_correct': 21}",55.400743,private static int toInteger(int[] digits) { int result = 0; for (int x : digits) result = result * 10 + x; return result; },int toInteger(int[]digits){for(int x:digits)result=result*result;},"['private', 'static', 'int', 'toInteger', '(', 'int', '[', ']', 'digits', ')', '{', 'int', 'result', '=', '0', ';', 'for', '(', 'int', 'x', ':', 'digits', ')', 'result', '=', 'result', '*', '10', '+', 'x', ';', 'return', 'result', ';', '}']","['int', 'toInteger', '(', 'int', '[', ']', 'digits', ')', '{', 'for', '(', 'int', 'x', ':', 'digits', ')', 'result', '=', 'result', '*', 'result', ';', '}']",35,23,6,124,66,15,53.21100917431193,41.37931034482759,,,,-1,-1,-1,-1,False
L197_asAttributeArray_1.txt,code2seq,METHOD_NAME,token_wrong,0.69,0.6955,11.8529,11.9113,"{'n_total': 636, 'n_valid': 63, 'n_correct': 44}",137.636646,"public static Attribute[] asAttributeArray(Map<String, Set<String>> attributes) { List<Attribute> attributesArray = new ArrayList<>(); if (attributes != null) { for (Map.Entry<String, Set<String>> attribute : attributes.entrySet()) { attributesArray.add(new Attribute(attribute.getKey(), attribute.getValue().toArray(new String[0]))); } } return attributesArray.toArray(new Attribute[0]); }",Attribute[]asAttributeArray(Map<Set<String>>attributes){List<Attribute>attributesArray;if(attributesnull){for(Entry<Set<String>>attribute:attributes){(Attribute());}}attributesArray.toArray(new Attribute[0]);},"['public', 'static', 'Attribute', '[', ']', 'asAttributeArray', '(', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'attributes', ')', '{', 'List', '<', 'Attribute', '>', 'attributesArray', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'if', '(', 'attributes', '!=', 'null', ')', '{', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'attribute', ':', 'attributes', '.', 'entrySet', '(', ')', ')', '{', 'attributesArray', '.', 'add', '(', 'new', 'Attribute', '(', 'attribute', '.', 'getKey', '(', ')', ',', 'attribute', '.', 'getValue', '(', ')', '.', 'toArray', '(', 'new', 'String', '[', '0', ']', ')', ')', ')', ';', '}', '}', 'return', 'attributesArray', '.', 'toArray', '(', 'new', 'Attribute', '[', '0', ']', ')', ';', '}']","['Attribute', '[', ']', 'asAttributeArray', '(', 'Map', '<', 'Set', '<', 'String', '>', '>', 'attributes', ')', '{', 'List', '<', 'Attribute', '>', 'attributesArray', ';', 'if', '(', 'attributesnull', ')', '{', 'for', '(', 'Entry', '<', 'Set', '<', 'String', '>', '>', 'attribute', ':', 'attributes', ')', '{', '(', 'Attribute', '(', ')', ')', ';', '}', '}', 'attributesArray', '.', 'toArray', '(', 'new', 'Attribute', '[', '0', ']', ')', ';', '}']",106,60,6,390,209,22,49.184782608695656,46.0,,,,-1,-1,-1,-1,False
L198_processPreparedValues_1.txt,code2seq,METHOD_NAME,token_wrong,0.3497,0.7657,17.2234,19.3279,"{'n_total': 403, 'n_valid': 43, 'n_correct': 32}",97.640868,"private void processPreparedValues(StatementContext context) { Statement statement = context.getStatementWrapper(); if (statement instanceof PreparedStatement) { for (BatchItem batchItem : context.getBaches()) { this.setResolveColumnValues(batchItem, batchItem.getAnalyzeResult()); } } }",void processPreparedValues(StatementContext context){if(statement instanceof PreparedStatement){for(BatchItem batchItem:getBaches()){thissetResolveColumnValues();}}},"['private', 'void', 'processPreparedValues', '(', 'StatementContext', 'context', ')', '{', 'Statement', 'statement', '=', 'context', '.', 'getStatementWrapper', '(', ')', ';', 'if', '(', 'statement', 'instanceof', 'PreparedStatement', ')', '{', 'for', '(', 'BatchItem', 'batchItem', ':', 'context', '.', 'getBaches', '(', ')', ')', '{', 'this', '.', 'setResolveColumnValues', '(', 'batchItem', ',', 'batchItem', '.', 'getAnalyzeResult', '(', ')', ')', ';', '}', '}', '}']","['void', 'processPreparedValues', '(', 'StatementContext', 'context', ')', '{', 'if', '(', 'statement', 'instanceof', 'PreparedStatement', ')', '{', 'for', '(', 'BatchItem', 'batchItem', ':', 'getBaches', '(', ')', ')', '{', 'thissetResolveColumnValues', '(', ')', ';', '}', '}', '}']",52,31,6,287,165,27,46.92307692307692,45.65217391304348,,,,-1,-1,-1,-1,False
L199_update_1.txt,code2seq,METHOD_NAME,token_wrong,0.6339,0.7191,6.8206,7.4468,"{'n_total': 163, 'n_valid': 21, 'n_correct': 17}",45.615206,public static void update() { if (Updater.pkgs == null) { return; } downloadAndInstall(pkgs); },void update(){if(Updater){}downloadAndInstall;},"['public', 'static', 'void', 'update', '(', ')', '{', 'if', '(', 'Updater', '.', 'pkgs', '==', 'null', ')', '{', 'return', ';', '}', 'downloadAndInstall', '(', 'pkgs', ')', ';', '}']","['void', 'update', '(', ')', '{', 'if', '(', 'Updater', ')', '{', '}', 'downloadAndInstall', ';', '}']",25,14,6,95,47,12,57.831325301204814,57.89473684210527,,,,-1,-1,-1,-1,False
L200_toggle_1.txt,code2seq,METHOD_NAME,token_wrong,0.5602,0.8672,11.3642,14.0901,"{'n_total': 263, 'n_valid': 58, 'n_correct': 29}",114.798399,public static void toggle() { if (level == Application.LOG_DEBUG) level = Application.LOG_ERROR; else level = Application.LOG_DEBUG; Gdx.app.setLogLevel(level); },void toggle(){if(DEBUG)ERROR.setLogLevel();},"['public', 'static', 'void', 'toggle', '(', ')', '{', 'if', '(', 'level', '==', 'Application', '.', 'LOG_DEBUG', ')', 'level', '=', 'Application', '.', 'LOG_ERROR', ';', 'else', 'level', '=', 'Application', '.', 'LOG_DEBUG', ';', 'Gdx', '.', 'app', '.', 'setLogLevel', '(', 'level', ')', ';', '}']","['void', 'toggle', '(', ')', '{', 'if', '(', 'DEBUG', ')', 'ERROR', '.', 'setLogLevel', '(', ')', ';', '}']",38,16,6,162,44,12,78.66666666666666,68.75,,,,-1,-1,-1,-1,False
L201_openTxnFile_1.txt,code2seq,METHOD_NAME,token_wrong,0.4243,0.4289,18.7455,18.9903,"{'n_total': 446, 'n_valid': 66, 'n_correct': 31}",137.098227,"private ReadWriteMemory openTxnFile() { try { if (ff.exists(path.concat(TableUtils.TXN_FILE_NAME).$())) { return new ReadWriteMemory(ff, path, ff.getPageSize()); } throw CairoException.instance(ff.errno()).put(""Cannot append. File does not exist: "").put(path); } finally { path.trimTo(rootLen); } }","ReadWriteMemory openTxnFile(){try{if(exists(path.concat(NAME).$())){return new ReadWriteMemory(ffgetPageSize());}(ff()).put(""Cannot append"").put(path);}finally{}}","['private', 'ReadWriteMemory', 'openTxnFile', '(', ')', '{', 'try', '{', 'if', '(', 'ff', '.', 'exists', '(', 'path', '.', 'concat', '(', 'TableUtils', '.', 'TXN_FILE_NAME', ')', '.', '$', '(', ')', ')', ')', '{', 'return', 'new', 'ReadWriteMemory', '(', 'ff', ',', 'path', ',', 'ff', '.', 'getPageSize', '(', ')', ')', ';', '}', 'throw', 'CairoException', '.', 'instance', '(', 'ff', '.', 'errno', '(', ')', ')', '.', 'put', '(', '""Cannot append. File does not exist: ""', ')', '.', 'put', '(', 'path', ')', ';', '}', 'finally', '{', 'path', '.', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']","['ReadWriteMemory', 'openTxnFile', '(', ')', '{', 'try', '{', 'if', '(', 'exists', '(', 'path', '.', 'concat', '(', 'NAME', ')', '.', '$', '(', ')', ')', ')', '{', 'return', 'new', 'ReadWriteMemory', '(', 'ffgetPageSize', '(', ')', ')', ';', '}', '(', 'ff', '(', ')', ')', '.', 'put', '(', '""Cannot append""', ')', '.', 'put', '(', 'path', ')', ';', '}', 'finally', '{', '}', '}']",79,55,6,298,162,17,48.39857651245551,32.87671232876712,,,,-1,-1,-1,-1,False
L202_formatHighLows_1.txt,code2seq,METHOD_NAME,token_wrong,0.987,0.9695,9.1201,11.6153,"{'n_total': 264, 'n_valid': 35, 'n_correct': 30}",76.40947,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){(low);formatTemperature();highLowStr="""";}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', '(', 'low', ')', ';', 'formatTemperature', '(', ')', ';', 'highLowStr', '=', '""""', ';', '}']",68,26,6,356,103,20,75.29761904761905,67.74193548387096,,,,-1,-1,-1,-1,False
L203_erf_1.txt,code2seq,METHOD_NAME,token_wrong,0.4462,0.3841,14.3449,12.9115,"{'n_total': 382, 'n_valid': 57, 'n_correct': 36}",117.501501,"public double erf(double z) { double sign = Math.signum(z); z = Math.abs(z); double a1 = 0.278393, a2 = 0.230389, a3 = 0.000972, a4 = 0.078108; double sumterm = 1 + a1 * z + a2 * Math.pow(z, 2) + a3 * Math.pow(z, 3) + a4 * Math.pow(z, 4); return sign * (1 - 1 / (Math.pow(sumterm, 4))); }","double erf(){signum();double a=pow(z)+Math.pow(z,4);return sign((Math.pow()));}","['public', 'double', 'erf', '(', 'double', 'z', ')', '{', 'double', 'sign', '=', 'Math', '.', 'signum', '(', 'z', ')', ';', 'z', '=', 'Math', '.', 'abs', '(', 'z', ')', ';', 'double', 'a1', '=', '0.278393', ',', 'a2', '=', '0.230389', ',', 'a3', '=', '0.000972', ',', 'a4', '=', '0.078108', ';', 'double', 'sumterm', '=', '1', '+', 'a1', '*', 'z', '+', 'a2', '*', 'Math', '.', 'pow', '(', 'z', ',', '2', ')', '+', 'a3', '*', 'Math', '.', 'pow', '(', 'z', ',', '3', ')', '+', 'a4', '*', 'Math', '.', 'pow', '(', 'z', ',', '4', ')', ';', 'return', 'sign', '*', '(', '1', '-', '1', '/', '(', 'Math', '.', 'pow', '(', 'sumterm', ',', '4', ')', ')', ')', ';', '}']","['double', 'erf', '(', ')', '{', 'signum', '(', ')', ';', 'double', 'a', '=', 'pow', '(', 'z', ')', '+', 'Math', '.', 'pow', '(', 'z', ',', '4', ')', ';', 'return', 'sign', '(', '(', 'Math', '.', 'pow', '(', ')', ')', ')', ';', '}']",107,39,6,288,79,9,74.91039426523297,67.32673267326733,,,,-1,-1,-1,-1,False
L204_shouldStop_1.txt,code2seq,METHOD_NAME,token_wrong,0.5426,0.7049,4.5094,8.5451,"{'n_total': 311, 'n_valid': 30, 'n_correct': 24}",66.514659,"@Test public void shouldStop() throws InterruptedException { MockHttpServletRequest statusRequest = buildHttpServletRequest(""PUT"", ""/stop"", """"); proxyServlet.service(statusRequest, response); assertResponse(response, 501, """"); }","void shouldStop()throws InterruptedException{statusRequest("""",""stop"","""");(response);assertResponse("""");}","['@', 'Test', 'public', 'void', 'shouldStop', '(', ')', 'throws', 'InterruptedException', '{', 'MockHttpServletRequest', 'statusRequest', '=', 'buildHttpServletRequest', '(', '""PUT""', ',', '""/stop""', ',', '""""', ')', ';', 'proxyServlet', '.', 'service', '(', 'statusRequest', ',', 'response', ')', ';', 'assertResponse', '(', 'response', ',', '501', ',', '""""', ')', ';', '}']","['void', 'shouldStop', '(', ')', 'throws', 'InterruptedException', '{', 'statusRequest', '(', '""""', ',', '""stop""', ',', '""""', ')', ';', '(', 'response', ')', ';', 'assertResponse', '(', '""""', ')', ';', '}']",41,26,6,228,104,16,58.490566037735846,42.857142857142854,,,,-1,-1,-1,-1,False
L205_shouldSplitScope_1.txt,code2seq,METHOD_NAME,token_wrong,0.7584,0.7514,20.9113,18.3421,"{'n_total': 204, 'n_valid': 31, 'n_correct': 17}",64.558923,"@Test public void shouldSplitScope() { Set<String> expectedScope = new HashSet<String>(); expectedScope.add(""a""); expectedScope.add(""b""); expectedScope.add(""c""); assertEquals(Utils.splitScope(""a b c""), expectedScope); }","@Test void shouldSplitScope(){Set.add;assertEquals(Utils.splitScope(""a""),expectedScope);}","['@', 'Test', 'public', 'void', 'shouldSplitScope', '(', ')', '{', 'Set', '<', 'String', '>', 'expectedScope', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'expectedScope', '.', 'add', '(', '""a""', ')', ';', 'expectedScope', '.', 'add', '(', '""b""', ')', ';', 'expectedScope', '.', 'add', '(', '""c""', ')', ';', 'assertEquals', '(', 'Utils', '.', 'splitScope', '(', '""a b c""', ')', ',', 'expectedScope', ')', ';', '}']","['@', 'Test', 'void', 'shouldSplitScope', '(', ')', '{', 'Set', '.', 'add', ';', 'assertEquals', '(', 'Utils', '.', 'splitScope', '(', '""a""', ')', ',', 'expectedScope', ')', ';', '}']",56,24,6,219,89,22,65.98984771573603,64.0,,,,-1,-1,-1,-1,False
L206_run_2.txt,code2seq,METHOD_NAME,token_wrong,0.6281,0.6329,12.7846,11.7532,"{'n_total': 518, 'n_valid': 80, 'n_correct': 43}",172.5077,public String run() { int count = 0; for (int i = 1; i <= 10000; i++) { if (!Library.isSquare(i) && getSqrtContinuedFractionPeriod(i) % 2 == 1) count++; } return Integer.toString(count); },String run(){count;for(;;i++){if((i)getSqrtContinuedFractionPeriod()%2==1)count++;}Integer();},"['public', 'String', 'run', '(', ')', '{', 'int', 'count', '=', '0', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', '10000', ';', 'i', '++', ')', '{', 'if', '(', '!', 'Library', '.', 'isSquare', '(', 'i', ')', '&&', 'getSqrtContinuedFractionPeriod', '(', 'i', ')', '%', '2', '==', '1', ')', 'count', '++', ';', '}', 'return', 'Integer', '.', 'toString', '(', 'count', ')', ';', '}']","['String', 'run', '(', ')', '{', 'count', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', '(', 'i', ')', 'getSqrtContinuedFractionPeriod', '(', ')', '%', '2', '==', '1', ')', 'count', '++', ';', '}', 'Integer', '(', ')', ';', '}']",58,37,6,188,94,9,52.513966480446925,40.38461538461539,,,,-1,-1,-1,-1,False
L207_hasDirective_1.txt,code2seq,METHOD_NAME,token_wrong,0.4368,0.5028,5.4137,11.2782,"{'n_total': 210, 'n_valid': 25, 'n_correct': 21}",54.475441,public boolean hasDirective(Directive name) { if (directives.get(name) != null) { return true; } return false; },boolean hasDirective(Directive name){if((name)){}},"['public', 'boolean', 'hasDirective', '(', 'Directive', 'name', ')', '{', 'if', '(', 'directives', '.', 'get', '(', 'name', ')', '!=', 'null', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'hasDirective', '(', 'Directive', 'name', ')', '{', 'if', '(', '(', 'name', ')', ')', '{', '}', '}']",28,16,6,112,50,18,65.95744680851064,54.54545454545454,,,,-1,-1,-1,-1,False
L208_testParagraphTest_1.txt,code2seq,METHOD_NAME,token_wrong,0.9405,0.7946,18.2152,15.7338,"{'n_total': 382, 'n_valid': 39, 'n_correct': 38}",79.622734,"public void testParagraphTest() { RenderEngine engine = EngineManager.getInstance(); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(""Some <b class=\""bold\"">Simple</b> Content"", engine.render(""Some __Simple__ Content"", context)); context.setRenderEngine(new MockWikiRenderEngine()); assertEquals(""\n <p class=\""paragraph\"">Some</p>\n <p class=\""paragraph\""> <b class=\""bold\"">Simple</b> Content</p>"", engine.render(""Some\n\n __Simple__ Content"", context)); }","void testParagraphTest(){RenderEngine("""",(""""));(MockWikiRenderEngine());assertEquals("""",engine(""Some"",context));}","['public', 'void', 'testParagraphTest', '(', ')', '{', 'RenderEngine', 'engine', '=', 'EngineManager', '.', 'getInstance', '(', ')', ';', 'context', '.', 'setRenderEngine', '(', 'new', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""Some <b class=\\""bold\\"">Simple</b> Content""', ',', 'engine', '.', 'render', '(', '""Some __Simple__ Content""', ',', 'context', ')', ')', ';', 'context', '.', 'setRenderEngine', '(', 'new', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""\\n <p class=\\""paragraph\\"">Some</p>\\n <p class=\\""paragraph\\""> <b class=\\""bold\\"">Simple</b> Content</p>""', ',', 'engine', '.', 'render', '(', '""Some\\n\\n __Simple__ Content""', ',', 'context', ')', ')', ';', '}']","['void', 'testParagraphTest', '(', ')', '{', 'RenderEngine', '(', '""""', ',', '(', '""""', ')', ')', ';', '(', 'MockWikiRenderEngine', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'engine', '(', '""Some""', ',', 'context', ')', ')', ';', '}']",64,33,6,476,113,23,80.13245033112582,53.44827586206896,,,,-1,-1,-1,-1,False
L209_setAlbumsModifiedCb_1.txt,code2seq,METHOD_NAME,token_wrong,0.6486,0.646,16.2731,15.8899,"{'n_total': 237, 'n_valid': 38, 'n_correct': 21}",81.749851,public void setAlbumsModifiedCb(AlbumsModifiedCb AlbumsModifiedCb) { if (!mIsInitiated) return; this.mAlbumsModifiedCb = AlbumsModifiedCb; nativeSetMediaUpdatedCbFlag(AlbumsModifiedCb == null ? 0 : FLAG_MEDIA_UPDATED_AUDIO_EMPTY); },void setAlbumsModifiedCb(AlbumsModifiedCb AlbumsModifiedCb){if(!mIsInitiated)this.mAlbumsModifiedCb=AlbumsModifiedCb;nativeSetMediaUpdatedCbFlag(AlbumsModifiedCb?0:FLAG_UPDATED);},"['public', 'void', 'setAlbumsModifiedCb', '(', 'AlbumsModifiedCb', 'AlbumsModifiedCb', ')', '{', 'if', '(', '!', 'mIsInitiated', ')', 'return', ';', 'this', '.', 'mAlbumsModifiedCb', '=', 'AlbumsModifiedCb', ';', 'nativeSetMediaUpdatedCbFlag', '(', 'AlbumsModifiedCb', '==', 'null', '?', '0', ':', 'FLAG_MEDIA_UPDATED_AUDIO_EMPTY', ')', ';', '}']","['void', 'setAlbumsModifiedCb', '(', 'AlbumsModifiedCb', 'AlbumsModifiedCb', ')', '{', 'if', '(', '!', 'mIsInitiated', ')', 'this', '.', 'mAlbumsModifiedCb', '=', 'AlbumsModifiedCb', ';', 'nativeSetMediaUpdatedCbFlag', '(', 'AlbumsModifiedCb', '?', '0', ':', 'FLAG_UPDATED', ')', ';', '}']",33,28,6,232,179,25,25.60386473429952,18.51851851851852,,,,-1,-1,-1,-1,False
L210_addResourceType_1.txt,code2seq,METHOD_NAME,token_wrong,0.5043,0.553,14.6527,13.8419,"{'n_total': 729, 'n_valid': 78, 'n_correct': 50}",178.699224,"private void addResourceType(Privilege privilege, String realm) throws UpgradeException, EntitlementException { Application application = privilege.getEntitlement().getApplication(getAdminSubject(), realm); Set<String> resourceTypeUuids = application.getResourceTypeUuids(); if (CollectionUtils.isNotEmpty(resourceTypeUuids)) { privilege.setResourceTypeUuid(application.getResourceTypeUuids().iterator().next()); } else { DEBUG.error(""Failed to modify privilege {} in realm {}! Associated application has no Resource Types."", privilege.getName(), realm); throw new UpgradeException(""Failed to modify privilege!""); } }","void addResourceType(Privilege privilege,String realm)throws EntitlementException{privilege();Set<String>resourceTypeUuids=getResourceTypeUuids();if(CollectionUtils()){(application);}{error("""",getName(),realm);throw new UpgradeException(""modify privilege"");}}","['private', 'void', 'addResourceType', '(', 'Privilege', 'privilege', ',', 'String', 'realm', ')', 'throws', 'UpgradeException', ',', 'EntitlementException', '{', 'Application', 'application', '=', 'privilege', '.', 'getEntitlement', '(', ')', '.', 'getApplication', '(', 'getAdminSubject', '(', ')', ',', 'realm', ')', ';', 'Set', '<', 'String', '>', 'resourceTypeUuids', '=', 'application', '.', 'getResourceTypeUuids', '(', ')', ';', 'if', '(', 'CollectionUtils', '.', 'isNotEmpty', '(', 'resourceTypeUuids', ')', ')', '{', 'privilege', '.', 'setResourceTypeUuid', '(', 'application', '.', 'getResourceTypeUuids', '(', ')', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ')', ';', '}', 'else', '{', 'DEBUG', '.', 'error', '(', '""Failed to modify privilege {} in realm {}! Associated application has no Resource Types.""', ',', 'privilege', '.', 'getName', '(', ')', ',', 'realm', ')', ';', 'throw', 'new', 'UpgradeException', '(', '""Failed to modify privilege!""', ')', ';', '}', '}']","['void', 'addResourceType', '(', 'Privilege', 'privilege', ',', 'String', 'realm', ')', 'throws', 'EntitlementException', '{', 'privilege', '(', ')', ';', 'Set', '<', 'String', '>', 'resourceTypeUuids', '=', 'getResourceTypeUuids', '(', ')', ';', 'if', '(', 'CollectionUtils', '(', ')', ')', '{', '(', 'application', ')', ';', '}', '{', 'error', '(', '""""', ',', 'getName', '(', ')', ',', 'realm', ')', ';', 'throw', 'new', 'UpgradeException', '(', '""modify privilege""', ')', ';', '}', '}']",101,59,6,617,259,21,60.06711409395973,44.21052631578947,,,,-1,-1,-1,-1,False
L211_onChildNodeRemoved_1.txt,code2seq,METHOD_NAME,token_wrong,0.6692,0.6308,18.3677,19.8054,"{'n_total': 252, 'n_valid': 42, 'n_correct': 24}",86.900581,"public void onChildNodeRemoved(int parentNodeId, int nodeId) { ChildNodeRemovedEvent removedEvent = acquireChildNodeRemovedEvent(); removedEvent.parentNodeId = parentNodeId; removedEvent.nodeId = nodeId; mPeerManager.sendNotificationToPeers(""DOM.childNodeRemoved"", removedEvent); releaseChildNodeRemovedEvent(removedEvent); }","void onChildNodeRemoved(int nodeId){removedEvent=sendNotificationToPeers("""",removedEvent);releaseChildNodeRemovedEvent;}","['public', 'void', 'onChildNodeRemoved', '(', 'int', 'parentNodeId', ',', 'int', 'nodeId', ')', '{', 'ChildNodeRemovedEvent', 'removedEvent', '=', 'acquireChildNodeRemovedEvent', '(', ')', ';', 'removedEvent', '.', 'parentNodeId', '=', 'parentNodeId', ';', 'removedEvent', '.', 'nodeId', '=', 'nodeId', ';', 'mPeerManager', '.', 'sendNotificationToPeers', '(', '""DOM.childNodeRemoved""', ',', 'removedEvent', ')', ';', 'releaseChildNodeRemovedEvent', '(', 'removedEvent', ')', ';', '}']","['void', 'onChildNodeRemoved', '(', 'int', 'nodeId', ')', '{', 'removedEvent', '=', 'sendNotificationToPeers', '(', '""""', ',', 'removedEvent', ')', ';', 'releaseChildNodeRemovedEvent', ';', '}']",45,19,6,325,120,24,68.10631229235881,66.66666666666666,,,,-1,-1,-1,-1,False
L212_decode_1.txt,code2seq,METHOD_NAME,token_wrong,0.7832,0.9137,0.5827,3.09,"{'n_total': 582, 'n_valid': 59, 'n_correct': 46}",130.919906,"@Override public Object decode(JsonIterator iter) throws IOException { if (IterImpl.nextToken(iter) != '""') { throw iter.reportError(""decode number map key"", ""expect \""""); } Object key = decoder.decode(iter); if (IterImpl.nextToken(iter) != '""') { throw iter.reportError(""decode number map key"", ""expect \""""); } return key; }","Object decode(JsonIterator iter)throws IOException{if((iter)'""'){reportError(""decode key"","""");}key();if(IterImpl='""'){("""");}}","['@', 'Override', 'public', 'Object', 'decode', '(', 'JsonIterator', 'iter', ')', 'throws', 'IOException', '{', 'if', '(', 'IterImpl', '.', 'nextToken', '(', 'iter', ')', '!=', '\'""\'', ')', '{', 'throw', 'iter', '.', 'reportError', '(', '""decode number map key""', ',', '""expect \\""""', ')', ';', '}', 'Object', 'key', '=', 'decoder', '.', 'decode', '(', 'iter', ')', ';', 'if', '(', 'IterImpl', '.', 'nextToken', '(', 'iter', ')', '!=', '\'""\'', ')', '{', 'throw', 'iter', '.', 'reportError', '(', '""decode number map key""', ',', '""expect \\""""', ')', ';', '}', 'return', 'key', ';', '}']","['Object', 'decode', '(', 'JsonIterator', 'iter', ')', 'throws', 'IOException', '{', 'if', '(', '(', 'iter', ')', '\'""\'', ')', '{', 'reportError', '(', '""decode key""', ',', '""""', ')', ';', '}', 'key', '(', ')', ';', 'if', '(', 'IterImpl', '=', '\'""\'', ')', '{', '(', '""""', ')', ';', '}', '}']",72,42,6,325,125,12,63.897763578274756,45.45454545454545,,,,-1,-1,-1,-1,False
L213_createEngineUseSpring_1.txt,code2seq,METHOD_NAME,token_wrong,0.4688,0.5709,25.8844,30.6686,"{'n_total': 241, 'n_valid': 40, 'n_correct': 22}",82.569954,"@Test public void createEngineUseSpring() { ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(""applicationContext-test.xml""); ProcessEngineFactoryBean factoryBean = context.getBean(ProcessEngineFactoryBean.class); assertNotNull(factoryBean); RuntimeService bean = context.getBean(RuntimeService.class); assertNotNull(bean); }",void createEngineUseSpring(){(ProcessEngineFactoryBean.class);(factoryBean);RuntimeService bean=(RuntimeService);},"['@', 'Test', 'public', 'void', 'createEngineUseSpring', '(', ')', '{', 'ClassPathXmlApplicationContext', 'context', '=', 'new', 'ClassPathXmlApplicationContext', '(', '""applicationContext-test.xml""', ')', ';', 'ProcessEngineFactoryBean', 'factoryBean', '=', 'context', '.', 'getBean', '(', 'ProcessEngineFactoryBean', '.', 'class', ')', ';', 'assertNotNull', '(', 'factoryBean', ')', ';', 'RuntimeService', 'bean', '=', 'context', '.', 'getBean', '(', 'RuntimeService', '.', 'class', ')', ';', 'assertNotNull', '(', 'bean', ')', ';', '}']","['void', 'createEngineUseSpring', '(', ')', '{', '(', 'ProcessEngineFactoryBean', '.', 'class', ')', ';', '(', 'factoryBean', ')', ';', 'RuntimeService', 'bean', '=', '(', 'RuntimeService', ')', ';', '}']",52,23,6,351,114,27,73.14814814814815,63.04347826086957,,,,-1,-1,-1,-1,False
L214_blockForHandshake_1.txt,code2seq,METHOD_NAME,token_wrong,0.3602,0.3643,21.078,22.2747,"{'n_total': 336, 'n_valid': 42, 'n_correct': 25}",92.485342,protected void blockForHandshake() throws IOException { if (blocking) { while (this.connection_state != CS_END) { if (this.closed) { throw new TlsFatalAlert(AlertDescription.internal_error); } safeReadRecord(); } } },void blockForHandshake()throws IOException{if(blocking){while(this!=END){if(this.closed){throw new TlsFatalAlert(AlertDescription.error);}safeReadRecord();}}},"['protected', 'void', 'blockForHandshake', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'blocking', ')', '{', 'while', '(', 'this', '.', 'connection_state', '!=', 'CS_END', ')', '{', 'if', '(', 'this', '.', 'closed', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'safeReadRecord', '(', ')', ';', '}', '}', '}']","['void', 'blockForHandshake', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'blocking', ')', '{', 'while', '(', 'this', '!=', 'END', ')', '{', 'if', '(', 'this', '.', 'closed', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'error', ')', ';', '}', 'safeReadRecord', '(', ')', ';', '}', '}', '}']",46,43,6,216,158,23,30.05181347150259,7.5,,,,-1,-1,-1,-1,False
L215_createPropertyModel_1.txt,code2seq,METHOD_NAME,token_wrong,0.3058,0.762,11.3878,26.786,"{'n_total': 284, 'n_valid': 29, 'n_correct': 28}",63.657449,"private void createPropertyModel() { RMRealmModel model = (RMRealmModel) getModel(); try { propertySheetModel = new AMPropertySheetModel(model.getCreateRealmPropertyXML()); propertySheetModel.clear(); } catch (AMConsoleException e) { setInlineAlertMessage(CCAlert.TYPE_ERROR, ""message.error"", e.getMessage()); } }",void createPropertyModel(){try{clear();}catch(AMConsoleException e){(CCAlert);}},"['private', 'void', 'createPropertyModel', '(', ')', '{', 'RMRealmModel', 'model', '=', '(', 'RMRealmModel', ')', 'getModel', '(', ')', ';', 'try', '{', 'propertySheetModel', '=', 'new', 'AMPropertySheetModel', '(', 'model', '.', 'getCreateRealmPropertyXML', '(', ')', ')', ';', 'propertySheetModel', '.', 'clear', '(', ')', ';', '}', 'catch', '(', 'AMConsoleException', 'e', ')', '{', 'setInlineAlertMessage', '(', 'CCAlert', '.', 'TYPE_ERROR', ',', '""message.error""', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']","['void', 'createPropertyModel', '(', ')', '{', 'try', '{', 'clear', '(', ')', ';', '}', 'catch', '(', 'AMConsoleException', 'e', ')', '{', '(', 'CCAlert', ')', ';', '}', '}']",60,24,6,313,80,25,80.90277777777779,66.66666666666666,,,,-1,-1,-1,-1,False
L216_scaleImage_1.txt,code2seq,METHOD_NAME,token_wrong,0.7056,0.5358,9.34,7.4734,"{'n_total': 508, 'n_valid': 81, 'n_correct': 46}",168.814266,"public static BufferedImage scaleImage(int w, int h, BufferedImage img, Object interpolation) { BufferedImage bi; bi = new BufferedImage(w, h, img.getType()); Graphics2D g2d = (Graphics2D) bi.createGraphics(); g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, interpolation); g2d.drawImage(img, 0, 0, w, h, null); g2d.dispose(); return bi; }","BufferedImage scaleImage(int h,BufferedImage interpolation){(h);g=(D)setRenderingHint(RenderingHints.INTERPOLATION,interpolation);d.drawImage();}","['public', 'static', 'BufferedImage', 'scaleImage', '(', 'int', 'w', ',', 'int', 'h', ',', 'BufferedImage', 'img', ',', 'Object', 'interpolation', ')', '{', 'BufferedImage', 'bi', ';', 'bi', '=', 'new', 'BufferedImage', '(', 'w', ',', 'h', ',', 'img', '.', 'getType', '(', ')', ')', ';', 'Graphics2D', 'g2d', '=', '(', 'Graphics2D', ')', 'bi', '.', 'createGraphics', '(', ')', ';', 'g2d', '.', 'setRenderingHint', '(', 'RenderingHints', '.', 'KEY_INTERPOLATION', ',', 'interpolation', ')', ';', 'g2d', '.', 'drawImage', '(', 'img', ',', '0', ',', '0', ',', 'w', ',', 'h', ',', 'null', ')', ';', 'g2d', '.', 'dispose', '(', ')', ';', 'return', 'bi', ';', '}']","['BufferedImage', 'scaleImage', '(', 'int', 'h', ',', 'BufferedImage', 'interpolation', ')', '{', '(', 'h', ')', ';', 'g', '=', '(', 'D', ')', 'setRenderingHint', '(', 'RenderingHints', '.', 'INTERPOLATION', ',', 'interpolation', ')', ';', 'd', '.', 'drawImage', '(', ')', ';', '}']",87,35,6,346,145,16,60.909090909090914,64.19753086419753,,,,-1,-1,-1,-1,False
L217_retrieveAssets_1.txt,code2seq,METHOD_NAME,token_wrong,0.4513,0.8733,21.817,28.311,"{'n_total': 355, 'n_valid': 42, 'n_correct': 35}",91.176604,"@Override public void retrieveAssets() { for (InteractiveActor a : actors) { if (a instanceof SpriteActor) ((AssetConsumer) a).retrieveAssets(); } cam = new SceneCamera(); cam.create(World.getInstance().getWidth(), World.getInstance().getHeight()); disposed = false; }",void retrieveAssets(){{(SpriteActor);}cam();(World());disposed=false;},"['@', 'Override', 'public', 'void', 'retrieveAssets', '(', ')', '{', 'for', '(', 'InteractiveActor', 'a', ':', 'actors', ')', '{', 'if', '(', 'a', 'instanceof', 'SpriteActor', ')', '(', '(', 'AssetConsumer', ')', 'a', ')', '.', 'retrieveAssets', '(', ')', ';', '}', 'cam', '=', 'new', 'SceneCamera', '(', ')', ';', 'cam', '.', 'create', '(', 'World', '.', 'getInstance', '(', ')', '.', 'getWidth', '(', ')', ',', 'World', '.', 'getInstance', '(', ')', '.', 'getHeight', '(', ')', ')', ';', 'disposed', '=', 'false', ';', '}']","['void', 'retrieveAssets', '(', ')', '{', '{', '(', 'SpriteActor', ')', ';', '}', 'cam', '(', ')', ';', '(', 'World', '(', ')', ')', ';', 'disposed', '=', 'false', ';', '}']",71,26,6,268,70,20,79.83870967741935,69.23076923076923,,,,-1,-1,-1,-1,False
L218_addDefaultProbes_1.txt,code2seq,METHOD_NAME,token_wrong,0.6906,0.6458,23.3548,20.2561,"{'n_total': 243, 'n_valid': 27, 'n_correct': 10}",56.770167,private void addDefaultProbes() { probes.add(new IntProbe()); probes.add(new LongProbe()); probes.add(new DoubleProbe()); probes.add(new BooleanProbe()); },void addDefaultProbes(){add(new IntProbe());probes(new LongProbe());probes.add(new DoubleProbe());probes.add(new BooleanProbe());},"['private', 'void', 'addDefaultProbes', '(', ')', '{', 'probes', '.', 'add', '(', 'new', 'IntProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'LongProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'DoubleProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'BooleanProbe', '(', ')', ')', ';', '}']","['void', 'addDefaultProbes', '(', ')', '{', 'add', '(', 'new', 'IntProbe', '(', ')', ')', ';', 'probes', '(', 'new', 'LongProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'DoubleProbe', '(', ')', ')', ';', 'probes', '.', 'add', '(', 'new', 'BooleanProbe', '(', ')', ')', ';', '}']",47,42,6,155,130,22,18.796992481203006,12.195121951219512,,,,-1,-1,-1,-1,False
L219_svdTransposeD_1.txt,code2seq,METHOD_NAME,token_wrong,0.4088,0.4141,13.9693,22.9884,"{'n_total': 453, 'n_valid': 58, 'n_correct': 43}",126.976376,"static DMat svdTransposeD(DMat D) { int r, c; DMat N = new DMat(D.cols, D.rows); for (r = 0; r < D.rows; r++) for (c = 0; c < D.cols; c++) N.value[c][r] = D.value[r][c]; return N; }",DMat svdTransposeD(){DMat();for(;;r++)for(c=0;;c++)N[c][c];},"['static', 'DMat', 'svdTransposeD', '(', 'DMat', 'D', ')', '{', 'int', 'r', ',', 'c', ';', 'DMat', 'N', '=', 'new', 'DMat', '(', 'D', '.', 'cols', ',', 'D', '.', 'rows', ')', ';', 'for', '(', 'r', '=', '0', ';', 'r', '<', 'D', '.', 'rows', ';', 'r', '++', ')', 'for', '(', 'c', '=', '0', ';', 'c', '<', 'D', '.', 'cols', ';', 'c', '++', ')', 'N', '.', 'value', '[', 'c', ']', '[', 'r', ']', '=', 'D', '.', 'value', '[', 'r', ']', '[', 'c', ']', ';', 'return', 'N', ';', '}']","['DMat', 'svdTransposeD', '(', ')', '{', 'DMat', '(', ')', ';', 'for', '(', ';', ';', 'r', '++', ')', 'for', '(', 'c', '=', '0', ';', ';', 'c', '++', ')', 'N', '[', 'c', ']', '[', 'c', ']', ';', '}']",82,35,6,181,60,19,74.69135802469135,61.8421052631579,,,,-1,-1,-1,-1,False
L220_convertReferenceUrl_1.txt,code2seq,METHOD_NAME,token_wrong,0.5609,0.7305,15.2883,18.1222,"{'n_total': 311, 'n_valid': 42, 'n_correct': 31}",91.640002,protected String convertReferenceUrl(String url) { Reference ref = EntityManager.newReference(url); if (ref.isKnownType()) { String refUrl = ref.getUrl(); if (refUrl != null) { return refUrl; } } return url; },String convertReferenceUrl(String url){if(isKnownType()){if(refUrl){}}url;},"['protected', 'String', 'convertReferenceUrl', '(', 'String', 'url', ')', '{', 'Reference', 'ref', '=', 'EntityManager', '.', 'newReference', '(', 'url', ')', ';', 'if', '(', 'ref', '.', 'isKnownType', '(', ')', ')', '{', 'String', 'refUrl', '=', 'ref', '.', 'getUrl', '(', ')', ';', 'if', '(', 'refUrl', '!=', 'null', ')', '{', 'return', 'refUrl', ';', '}', '}', 'return', 'url', ';', '}']","['String', 'convertReferenceUrl', '(', 'String', 'url', ')', '{', 'if', '(', 'isKnownType', '(', ')', ')', '{', 'if', '(', 'refUrl', ')', '{', '}', '}', 'url', ';', '}']",52,24,6,209,75,25,72.82608695652173,60.86956521739131,,,,-1,-1,-1,-1,False
L221_relevanceOfEntity_1.txt,code2seq,METHOD_NAME,token_wrong,0.4778,0.47,24.3602,19.8026,"{'n_total': 253, 'n_valid': 28, 'n_correct': 23}",60.834815,"public static EntityRelevanceJudgment relevanceOfEntity(CharSequence entity, ArrayList<EntityRelevanceJudgment> judgments) throws UnsupportedEncodingException { for (EntityRelevanceJudgment ju : judgments) { if (entity.equals(ju.id)) return ju; } return notFound; }",EntityRelevanceJudgment relevanceOfEntity(ArrayList<EntityRelevanceJudgment>judgments){for(EntityRelevanceJudgment ju:judgments){if(entity.equals());}},"['public', 'static', 'EntityRelevanceJudgment', 'relevanceOfEntity', '(', 'CharSequence', 'entity', ',', 'ArrayList', '<', 'EntityRelevanceJudgment', '>', 'judgments', ')', 'throws', 'UnsupportedEncodingException', '{', 'for', '(', 'EntityRelevanceJudgment', 'ju', ':', 'judgments', ')', '{', 'if', '(', 'entity', '.', 'equals', '(', 'ju', '.', 'id', ')', ')', 'return', 'ju', ';', '}', 'return', 'notFound', ';', '}']","['EntityRelevanceJudgment', 'relevanceOfEntity', '(', 'ArrayList', '<', 'EntityRelevanceJudgment', '>', 'judgments', ')', '{', 'for', '(', 'EntityRelevanceJudgment', 'ju', ':', 'judgments', ')', '{', 'if', '(', 'entity', '.', 'equals', '(', ')', ')', ';', '}', '}']",44,29,6,265,151,23,47.107438016528924,39.473684210526315,,,,-1,-1,-1,-1,False
L222_setControlRodInsertion_1.txt,code2seq,METHOD_NAME,token_wrong,0.5702,0.5903,11.3487,10.8526,"{'n_total': 425, 'n_valid': 44, 'n_correct': 36}",101.923585,"public void setControlRodInsertion(short newInsertion) { if (newInsertion > maxInsertion || newInsertion < minInsertion || newInsertion == controlRodInsertion) { return; } if (!isConnected()) { return; } this.controlRodInsertion = (short) Math.max(Math.min(newInsertion, maxInsertion), minInsertion); this.sendControlRodUpdate(); }",void setControlRodInsertion(short newInsertion){if(newInsertion|newInsertion==controlRodInsertion)if(isConnected()){}this.controlRodInsertion=(short)Math((newInsertion));this.sendControlRodUpdate();},"['public', 'void', 'setControlRodInsertion', '(', 'short', 'newInsertion', ')', '{', 'if', '(', 'newInsertion', '>', 'maxInsertion', '||', 'newInsertion', '<', 'minInsertion', '||', 'newInsertion', '==', 'controlRodInsertion', ')', '{', 'return', ';', '}', 'if', '(', '!', 'isConnected', '(', ')', ')', '{', 'return', ';', '}', 'this', '.', 'controlRodInsertion', '=', '(', 'short', ')', 'Math', '.', 'max', '(', 'Math', '.', 'min', '(', 'newInsertion', ',', 'maxInsertion', ')', ',', 'minInsertion', ')', ';', 'this', '.', 'sendControlRodUpdate', '(', ')', ';', '}']","['void', 'setControlRodInsertion', '(', 'short', 'newInsertion', ')', '{', 'if', '(', 'newInsertion', '|', 'newInsertion', '==', 'controlRodInsertion', ')', 'if', '(', 'isConnected', '(', ')', ')', '{', '}', 'this', '.', 'controlRodInsertion', '=', '(', 'short', ')', 'Math', '(', '(', 'newInsertion', ')', ')', ';', 'this', '.', 'sendControlRodUpdate', '(', ')', ';', '}']",67,44,6,331,199,28,43.56435643564357,37.704918032786885,,,,-1,-1,-1,-1,False
L223_shouldGetAllCountries_1.txt,code2seq,METHOD_NAME,token_wrong,0.6105,0.6318,21.6002,22.4275,"{'n_total': 337, 'n_valid': 43, 'n_correct': 27}",97.831094,"@Test public void shouldGetAllCountries() { SqlSession sqlSession = MybatisHelper.getSqlSession(); try { List<Country> list = sqlSession.selectList(""selectAll""); assertEquals(183, list.size()); } finally { sqlSession.close(); } }","@Test void shouldGetAllCountries(){try{List<Country>list=sqlSession.selectList(""selectAll"");assertEquals(1,size());}finally{}}","['@', 'Test', 'public', 'void', 'shouldGetAllCountries', '(', ')', '{', 'SqlSession', 'sqlSession', '=', 'MybatisHelper', '.', 'getSqlSession', '(', ')', ';', 'try', '{', 'List', '<', 'Country', '>', 'list', '=', 'sqlSession', '.', 'selectList', '(', '""selectAll""', ')', ';', 'assertEquals', '(', '183', ',', 'list', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'sqlSession', '.', 'close', '(', ')', ';', '}', '}']","['@', 'Test', 'void', 'shouldGetAllCountries', '(', ')', '{', 'try', '{', 'List', '<', 'Country', '>', 'list', '=', 'sqlSession', '.', 'selectList', '(', '""selectAll""', ')', ';', 'assertEquals', '(', '1', ',', 'size', '(', ')', ')', ';', '}', 'finally', '{', '}', '}']",54,36,6,229,126,27,50.99009900990099,37.5,,,,-1,-1,-1,-1,False
L224_initializeDriverThread_1.txt,code2seq,METHOD_NAME,token_wrong,0.8134,0.3774,10.4522,8.9491,"{'n_total': 229, 'n_valid': 39, 'n_correct': 21}",80.792134,"private void initializeDriverThread() { if (mDriverThread == null || mDriverThread.isInterrupted()) { mDriverThread = new Thread(mDriverRunnable, ""GAC Manager Driver Thread""); mDriverThread.start(); } }","void initializeDriverThread(){if(mDriverThread==null){new Thread(mDriverRunnable,""Thread"");mDriverThread;}}","['private', 'void', 'initializeDriverThread', '(', ')', '{', 'if', '(', 'mDriverThread', '==', 'null', '||', 'mDriverThread', '.', 'isInterrupted', '(', ')', ')', '{', 'mDriverThread', '=', 'new', 'Thread', '(', 'mDriverRunnable', ',', '""GAC Manager Driver Thread""', ')', ';', 'mDriverThread', '.', 'start', '(', ')', ';', '}', '}']","['void', 'initializeDriverThread', '(', ')', '{', 'if', '(', 'mDriverThread', '==', 'null', ')', '{', 'new', 'Thread', '(', 'mDriverRunnable', ',', '""Thread""', ')', ';', 'mDriverThread', ';', '}', '}']",37,24,6,202,107,28,54.59770114942529,41.935483870967744,,,,-1,-1,-1,-1,False
L225_checkSize_1.txt,code2seq,METHOD_NAME,token_wrong,0.5123,0.7939,10.1404,12.7439,"{'n_total': 637, 'n_valid': 63, 'n_correct': 54}",133.613488,"protected void checkSize(final int maxLength, final String message, final Context context, final int atLine, final int atOffset, final int linesLength, final BugList bugs) { final String lengthThreshold = context.getConfiguration().getParameter(this, ""length""); int length = maxLength; if (lengthThreshold != null) { length = Integer.parseInt(lengthThreshold); } if (linesLength > length) { context.addMessage(message, Integer.toString(linesLength), this, atLine, atOffset); } }","void checkSize(int maxLength,String message,Context context,int atLine,int atOffset,int linesLength,BugList bugs){lengthThreshold(this,"""");if(lengthThreshold){}{context.addMessage();}}","['protected', 'void', 'checkSize', '(', 'final', 'int', 'maxLength', ',', 'final', 'String', 'message', ',', 'final', 'Context', 'context', ',', 'final', 'int', 'atLine', ',', 'final', 'int', 'atOffset', ',', 'final', 'int', 'linesLength', ',', 'final', 'BugList', 'bugs', ')', '{', 'final', 'String', 'lengthThreshold', '=', 'context', '.', 'getConfiguration', '(', ')', '.', 'getParameter', '(', 'this', ',', '""length""', ')', ';', 'int', 'length', '=', 'maxLength', ';', 'if', '(', 'lengthThreshold', '!=', 'null', ')', '{', 'length', '=', 'Integer', '.', 'parseInt', '(', 'lengthThreshold', ')', ';', '}', 'if', '(', 'linesLength', '>', 'length', ')', '{', 'context', '.', 'addMessage', '(', 'message', ',', 'Integer', '.', 'toString', '(', 'linesLength', ')', ',', 'this', ',', 'atLine', ',', 'atOffset', ')', ';', '}', '}']","['void', 'checkSize', '(', 'int', 'maxLength', ',', 'String', 'message', ',', 'Context', 'context', ',', 'int', 'atLine', ',', 'int', 'atOffset', ',', 'int', 'linesLength', ',', 'BugList', 'bugs', ')', '{', 'lengthThreshold', '(', 'this', ',', '""""', ')', ';', 'if', '(', 'lengthThreshold', ')', '{', '}', '{', 'context', '.', 'addMessage', '(', ')', ';', '}', '}']",101,47,6,478,184,15,63.498920086393085,56.84210526315789,,,,-1,-1,-1,-1,False
L226_ungradeStudentPageComments_1.txt,code2seq,METHOD_NAME,token_wrong,0.5059,0.2031,24.1051,27.7963,"{'n_total': 375, 'n_valid': 47, 'n_correct': 26}",102.689527,private void ungradeStudentPageComments(SimplePageItem pageItem) { List<SimpleStudentPage> pages = simplePageToolDao.findStudentPages(pageItem.getId()); for (SimpleStudentPage c : pages) { SimplePageItem comments = findItem(c.getCommentsSection()); comments.setGradebookId(null); comments.setGradebookPoints(null); update(comments); } },void ungradeStudentPageComments(SimplePageItem pageItem){List pages=findStudentPages(pageItem());for(SimpleStudentPage c:pages){findItem(getCommentsSection());setGradebookId();setGradebookPoints(null);}},"['private', 'void', 'ungradeStudentPageComments', '(', 'SimplePageItem', 'pageItem', ')', '{', 'List', '<', 'SimpleStudentPage', '>', 'pages', '=', 'simplePageToolDao', '.', 'findStudentPages', '(', 'pageItem', '.', 'getId', '(', ')', ')', ';', 'for', '(', 'SimpleStudentPage', 'c', ':', 'pages', ')', '{', 'SimplePageItem', 'comments', '=', 'findItem', '(', 'c', '.', 'getCommentsSection', '(', ')', ')', ';', 'comments', '.', 'setGradebookId', '(', 'null', ')', ';', 'comments', '.', 'setGradebookPoints', '(', 'null', ')', ';', 'update', '(', 'comments', ')', ';', '}', '}']","['void', 'ungradeStudentPageComments', '(', 'SimplePageItem', 'pageItem', ')', '{', 'List', 'pages', '=', 'findStudentPages', '(', 'pageItem', '(', ')', ')', ';', 'for', '(', 'SimpleStudentPage', 'c', ':', 'pages', ')', '{', 'findItem', '(', 'getCommentsSection', '(', ')', ')', ';', 'setGradebookId', '(', ')', ';', 'setGradebookPoints', '(', 'null', ')', ';', '}', '}']",66,43,6,336,203,32,43.75,38.333333333333336,,,,-1,-1,-1,-1,False
L227_generatePathIndexes_1.txt,code2seq,METHOD_NAME,token_wrong,0.7455,0.5839,18.2025,17.4405,"{'n_total': 546, 'n_valid': 49, 'n_correct': 37}",119.460755,"private Set<String> generatePathIndexes(ISaveIndex saveImpl, Set<String> resourceNames) throws Exception { Set<String> ret = new HashSet<String>(1); if (resourceNames != null) { for (String resourceName : resourceNames) { ret.addAll(saveImpl.getIndexes(resourceName).getPathIndexes()); } } return ret; }","Set<String>generatePathIndexes(ISaveIndex saveImpl,Set resourceNames)throws Exception{Set<String>ret=(1);if(resourceNames){for(String resourceName:resourceNames){(getIndexes(resourceName).getPathIndexes());}}}","['private', 'Set', '<', 'String', '>', 'generatePathIndexes', '(', 'ISaveIndex', 'saveImpl', ',', 'Set', '<', 'String', '>', 'resourceNames', ')', 'throws', 'Exception', '{', 'Set', '<', 'String', '>', 'ret', '=', 'new', 'HashSet', '<', 'String', '>', '(', '1', ')', ';', 'if', '(', 'resourceNames', '!=', 'null', ')', '{', 'for', '(', 'String', 'resourceName', ':', 'resourceNames', ')', '{', 'ret', '.', 'addAll', '(', 'saveImpl', '.', 'getIndexes', '(', 'resourceName', ')', '.', 'getPathIndexes', '(', ')', ')', ';', '}', '}', 'return', 'ret', ';', '}']","['Set', '<', 'String', '>', 'generatePathIndexes', '(', 'ISaveIndex', 'saveImpl', ',', 'Set', 'resourceNames', ')', 'throws', 'Exception', '{', 'Set', '<', 'String', '>', 'ret', '=', '(', '1', ')', ';', 'if', '(', 'resourceNames', ')', '{', 'for', '(', 'String', 'resourceName', ':', 'resourceNames', ')', '{', '(', 'getIndexes', '(', 'resourceName', ')', '.', 'getPathIndexes', '(', ')', ')', ';', '}', '}', '}']",71,52,6,303,209,25,33.81294964028777,29.230769230769234,,,,-1,-1,-1,-1,False
L228_createImageViews_1.txt,code2seq,METHOD_NAME,token_wrong,0.621,0.574,13.618,18.2119,"{'n_total': 283, 'n_valid': 43, 'n_correct': 27}",92.232198,private void createImageViews() { for (int i = 0; i < 4; i++) { PhotoView imageView = new PhotoView(mContext); imageView.setAdjustViewBounds(true); viewList.add(imageView); } },void createImageViews(){for(int i;;){PhotoView=(true);}},"['private', 'void', 'createImageViews', '(', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'PhotoView', 'imageView', '=', 'new', 'PhotoView', '(', 'mContext', ')', ';', 'imageView', '.', 'setAdjustViewBounds', '(', 'true', ')', ';', 'viewList', '.', 'add', '(', 'imageView', ')', ';', '}', '}']","['void', 'createImageViews', '(', ')', '{', 'for', '(', 'int', 'i', ';', ';', ')', '{', 'PhotoView', '=', '(', 'true', ')', ';', '}', '}']",46,21,6,176,56,22,77.92207792207793,62.5,,,,-1,-1,-1,-1,False
L229_initializeSession_1.txt,code2seq,METHOD_NAME,token_wrong,0.4652,0.493,5.5854,13.5107,"{'n_total': 225, 'n_valid': 23, 'n_correct': 19}",49.941171,"@Override public void initializeSession(IoSession session, ConnectFuture future) { HttpConnectSession connectSession = (HttpConnectSession) session; connectSession.setMethod(HttpMethod.GET); connectSession.addWriteHeader(HttpHeaders.HEADER_HOST, ""localhost:8000""); }","void initializeSession(IoSession session,ConnectFuture future){(GET);("""");}","['@', 'Override', 'public', 'void', 'initializeSession', '(', 'IoSession', 'session', ',', 'ConnectFuture', 'future', ')', '{', 'HttpConnectSession', 'connectSession', '=', '(', 'HttpConnectSession', ')', 'session', ';', 'connectSession', '.', 'setMethod', '(', 'HttpMethod', '.', 'GET', ')', ';', 'connectSession', '.', 'addWriteHeader', '(', 'HttpHeaders', '.', 'HEADER_HOST', ',', '""localhost:8000""', ')', ';', '}']","['void', 'initializeSession', '(', 'IoSession', 'session', ',', 'ConnectFuture', 'future', ')', '{', '(', 'GET', ')', ';', '(', '""""', ')', ';', '}']",42,19,6,266,75,23,78.60082304526749,63.888888888888886,,,,-1,-1,-1,-1,False
L230_getOrder_1.txt,code2seq,METHOD_NAME,token_wrong,0.6939,0.6401,11.7112,13.5344,"{'n_total': 374, 'n_valid': 30, 'n_correct': 27}",70.493844,private String getOrder(Set<WebXml> ordered) { StringBuilder sb = new StringBuilder(ordered.size()); for (WebXml webXml : ordered) { sb.append(webXml.getName()); } return sb.toString(); },String getOrder(Set<WebXml>ordered){(size());for(WebXml webXml:ordered){sb();}toString();},"['private', 'String', 'getOrder', '(', 'Set', '<', 'WebXml', '>', 'ordered', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 'ordered', '.', 'size', '(', ')', ')', ';', 'for', '(', 'WebXml', 'webXml', ':', 'ordered', ')', '{', 'sb', '.', 'append', '(', 'webXml', '.', 'getName', '(', ')', ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']","['String', 'getOrder', '(', 'Set', '<', 'WebXml', '>', 'ordered', ')', '{', '(', 'size', '(', ')', ')', ';', 'for', '(', 'WebXml', 'webXml', ':', 'ordered', ')', '{', 'sb', '(', ')', ';', '}', 'toString', '(', ')', ';', '}']",52,34,6,187,90,14,56.06936416184971,39.130434782608695,,,,-1,-1,-1,-1,False
L231_getClassPrior_1.txt,code2seq,METHOD_NAME,token_wrong,0.4822,0.5519,18.5579,19.36,"{'n_total': 334, 'n_valid': 42, 'n_correct': 29}",94.1251,public double getClassPrior(int classIndex) { double sum = 0; for (int i = 0; i < numClasses; i++) { sum += values[classIndex][i]; } return sum / classifications.size(); },double getClassPrior(int classIndex){for(;;i++){}return sum/classifications.size();},"['public', 'double', 'getClassPrior', '(', 'int', 'classIndex', ')', '{', 'double', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numClasses', ';', 'i', '++', ')', '{', 'sum', '+=', 'values', '[', 'classIndex', ']', '[', 'i', ']', ';', '}', 'return', 'sum', '/', 'classifications', '.', 'size', '(', ')', ';', '}']","['double', 'getClassPrior', '(', 'int', 'classIndex', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', '}', 'return', 'sum', '/', 'classifications', '.', 'size', '(', ')', ';', '}']",49,26,6,171,84,19,57.23684210526315,53.48837209302325,,,,-1,-1,-1,-1,False
L232_buildTree_1.txt,code2seq,METHOD_NAME,token_wrong,0.4935,0.4216,3.4326,3.2041,"{'n_total': 517, 'n_valid': 66, 'n_correct': 29}",145.138578,"protected CommonTree buildTree(int type, String text, List<CommonTree> children) { CommonTree root = new CommonTree(new CommonToken(type, text)); for (CommonTree child : children) { root.addChild(child); } return root; }","CommonTree buildTree(int text,List<CommonTree>children){root=newCommonTree(CommonToken());for(CommonTree child:children){addChild();}root;}","['protected', 'CommonTree', 'buildTree', '(', 'int', 'type', ',', 'String', 'text', ',', 'List', '<', 'CommonTree', '>', 'children', ')', '{', 'CommonTree', 'root', '=', 'new', 'CommonTree', '(', 'new', 'CommonToken', '(', 'type', ',', 'text', ')', ')', ';', 'for', '(', 'CommonTree', 'child', ':', 'children', ')', '{', 'root', '.', 'addChild', '(', 'child', ')', ';', '}', 'return', 'root', ';', '}']","['CommonTree', 'buildTree', '(', 'int', 'text', ',', 'List', '<', 'CommonTree', '>', 'children', ')', '{', 'root', '=', 'newCommonTree', '(', 'CommonToken', '(', ')', ')', ';', 'for', '(', 'CommonTree', 'child', ':', 'children', ')', '{', 'addChild', '(', ')', ';', '}', 'root', ';', '}']",52,38,6,220,139,15,39.51219512195122,30.434782608695656,,,,-1,-1,-1,-1,False
L233_httpAddress_1.txt,code2seq,METHOD_NAME,token_wrong,0.542,0.6532,14.0144,12.3586,"{'n_total': 166, 'n_valid': 27, 'n_correct': 20}",56.526671,"private static ResourceAddress httpAddress() { ResourceAddressFactory addressFactory = ResourceAddressFactory.newResourceAddressFactory(); String address = ""http://localhost:8000/index.html""; return addressFactory.newResourceAddress(address); }","ResourceAddress httpAddress(){ResourceAddressFactory="""";addressFactory();}","['private', 'static', 'ResourceAddress', 'httpAddress', '(', ')', '{', 'ResourceAddressFactory', 'addressFactory', '=', 'ResourceAddressFactory', '.', 'newResourceAddressFactory', '(', ')', ';', 'String', 'address', '=', '""http://localhost:8000/index.html""', ';', 'return', 'addressFactory', '.', 'newResourceAddress', '(', 'address', ')', ';', '}']","['ResourceAddress', 'httpAddress', '(', ')', '{', 'ResourceAddressFactory', '=', '""""', ';', 'addressFactory', '(', ')', ';', '}']",30,14,6,244,74,17,74.8898678414097,66.66666666666666,,,,-1,-1,-1,-1,False
L234_getTopicSelectItems_1.txt,code2seq,METHOD_NAME,token_wrong,0.868,0.6794,18.0107,22.9489,"{'n_total': 583, 'n_valid': 63, 'n_correct': 54}",144.059957,"public List getTopicSelectItems() { List f = getTopics(); int num = (f == null) ? 0 : f.size(); List retSort = new ArrayList(); for (int i = 1; i <= num; i++) { Integer index = Integer.valueOf(i); retSort.add(new SelectItem(index, index.toString())); } return retSort; }",List getTopicSelectItems(){getTopics();num=(null)?0:ArrayList;for(;;i++){((toString()));}},"['public', 'List', 'getTopicSelectItems', '(', ')', '{', 'List', 'f', '=', 'getTopics', '(', ')', ';', 'int', 'num', '=', '(', 'f', '==', 'null', ')', '?', '0', ':', 'f', '.', 'size', '(', ')', ';', 'List', 'retSort', '=', 'new', 'ArrayList', '(', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'num', ';', 'i', '++', ')', '{', 'Integer', 'index', '=', 'Integer', '.', 'valueOf', '(', 'i', ')', ';', 'retSort', '.', 'add', '(', 'new', 'SelectItem', '(', 'index', ',', 'index', '.', 'toString', '(', ')', ')', ')', ';', '}', 'return', 'retSort', ';', '}']","['List', 'getTopicSelectItems', '(', ')', '{', 'getTopics', '(', ')', ';', 'num', '=', '(', 'null', ')', '?', '0', ':', 'ArrayList', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', '(', '(', 'toString', '(', ')', ')', ')', ';', '}', '}']",85,37,6,270,90,25,73.46938775510205,60.75949367088608,,,,-1,-1,-1,-1,False
L235_writeExecutableCode_1.txt,code2seq,METHOD_NAME,token_wrong,0.7458,0.4964,19.9741,20.705,"{'n_total': 247, 'n_valid': 31, 'n_correct': 22}",65.750466,"private void writeExecutableCode(@Nonnull LineParser lineParser) { String formattedLine = lineCoverageFormatter.format(lineParser, lineCoverageData); output.write("" <td>""); output.write(formattedLine); output.println(""</td>""); }","void writeExecutableCode(LineParser lineParser){(lineCoverageData);("""");write();("">"");}","['private', 'void', 'writeExecutableCode', '(', '@', 'Nonnull', 'LineParser', 'lineParser', ')', '{', 'String', 'formattedLine', '=', 'lineCoverageFormatter', '.', 'format', '(', 'lineParser', ',', 'lineCoverageData', ')', ';', 'output', '.', 'write', '(', '"" <td>""', ')', ';', 'output', '.', 'write', '(', 'formattedLine', ')', ';', 'output', '.', 'println', '(', '""</td>""', ')', ';', '}']","['void', 'writeExecutableCode', '(', 'LineParser', 'lineParser', ')', '{', '(', 'lineCoverageData', ')', ';', '(', '""""', ')', ';', 'write', '(', ')', ';', '(', '"">""', ')', ';', '}']",44,24,6,228,87,25,69.45812807881774,52.63157894736842,,,,-1,-1,-1,-1,False
L236_sendCalibrationAckMessage_1.txt,code2seq,METHOD_NAME,token_wrong,0.5516,0.438,31.3218,35.9111,"{'n_total': 240, 'n_valid': 49, 'n_correct': 23}",97.706808,"public static void sendCalibrationAckMessage(MavLinkDrone drone, int count) { msg_command_ack msg = new msg_command_ack(); msg.command = count; msg.result = MAV_CMD_ACK.MAV_CMD_ACK_OK; drone.getMavClient().sendMessage(msg, null); }","void sendCalibrationAckMessage(MavLinkDrone drone,int count){msg_command=result();}","['public', 'static', 'void', 'sendCalibrationAckMessage', '(', 'MavLinkDrone', 'drone', ',', 'int', 'count', ')', '{', 'msg_command_ack', 'msg', '=', 'new', 'msg_command_ack', '(', ')', ';', 'msg', '.', 'command', '=', 'count', ';', 'msg', '.', 'result', '=', 'MAV_CMD_ACK', '.', 'MAV_CMD_ACK_OK', ';', 'drone', '.', 'getMavClient', '(', ')', '.', 'sendMessage', '(', 'msg', ',', 'null', ')', ';', '}']","['void', 'sendCalibrationAckMessage', '(', 'MavLinkDrone', 'drone', ',', 'int', 'count', ')', '{', 'msg_command', '=', 'result', '(', ')', ';', '}']",48,17,6,231,83,31,74.0,73.80952380952381,,,,-1,-1,-1,-1,False
L237_highlight_1.txt,code2seq,METHOD_NAME,token_wrong,0.8484,0.7856,12.5072,8.4456,"{'n_total': 213, 'n_valid': 27, 'n_correct': 24}",58.277135,"public void highlight(boolean highlight) { String cssBorder = null; if (highlight) { cssBorder = ""-fx-border-color:seagreen; \n"" + ""-fx-border-radius:7;\n"" + ""-fx-border-width:5.0;""; } else { cssBorder = ""-fx-border-color:transparent; \n"" + ""-fx-border-radius:7;\n"" + ""-fx-border-width:5.0;""; } target.setStyle(cssBorder); }","void highlight(boolean highlight){cssBorder=null;if(highlight){"""";}}","['public', 'void', 'highlight', '(', 'boolean', 'highlight', ')', '{', 'String', 'cssBorder', '=', 'null', ';', 'if', '(', 'highlight', ')', '{', 'cssBorder', '=', '""-fx-border-color:seagreen; \\n""', '+', '""-fx-border-radius:7;\\n""', '+', '""-fx-border-width:5.0;""', ';', '}', 'else', '{', 'cssBorder', '=', '""-fx-border-color:transparent; \\n""', '+', '""-fx-border-radius:7;\\n""', '+', '""-fx-border-width:5.0;""', ';', '}', 'target', '.', 'setStyle', '(', 'cssBorder', ')', ';', '}']","['void', 'highlight', '(', 'boolean', 'highlight', ')', '{', 'cssBorder', '=', 'null', ';', 'if', '(', 'highlight', ')', '{', '""""', ';', '}', '}']",46,20,6,324,68,15,82.84789644012946,65.0,,,,-1,-1,-1,-1,False
L238_reset_3.txt,code2seq,METHOD_NAME,token_wrong,0.6717,0.8287,4.1601,3.0278,"{'n_total': 387, 'n_valid': 29, 'n_correct': 28}",65.542201,public void reset() { getInternalMap().clear(); HttpServletRequest request = requestGetter.getRequest(); if (request != null) { for (String key : getInternalMap().keySet()) { request.removeAttribute(key); } } },void reset(){getInternalMap().clear();if(request){for(String key:keySet()){(key);}}},"['public', 'void', 'reset', '(', ')', '{', 'getInternalMap', '(', ')', '.', 'clear', '(', ')', ';', 'HttpServletRequest', 'request', '=', 'requestGetter', '.', 'getRequest', '(', ')', ';', 'if', '(', 'request', '!=', 'null', ')', '{', 'for', '(', 'String', 'key', ':', 'getInternalMap', '(', ')', '.', 'keySet', '(', ')', ')', '{', 'request', '.', 'removeAttribute', '(', 'key', ')', ';', '}', '}', '}']","['void', 'reset', '(', ')', '{', 'getInternalMap', '(', ')', '.', 'clear', '(', ')', ';', 'if', '(', 'request', ')', '{', 'for', '(', 'String', 'key', ':', 'keySet', '(', ')', ')', '{', '(', 'key', ')', ';', '}', '}', '}']",54,35,6,210,84,11,63.31658291457286,39.58333333333333,,,,-1,-1,-1,-1,False
L239_initializeReader_1.txt,code2seq,METHOD_NAME,token_wrong,0.5083,0.5202,12.5541,13.563,"{'n_total': 248, 'n_valid': 37, 'n_correct': 17}",78.758431,@Override protected void initializeReader() { this.fileList = new ArrayList<>(); this.fileListPosition = new AtomicInteger(0); this.currentTextAnnotation = new AtomicReference<>(); },@Override void initializeReader(){new ArrayList();fileListPosition=new AtomicInteger();this.currentTextAnnotation=new AtomicReference<>();},"['@', 'Override', 'protected', 'void', 'initializeReader', '(', ')', '{', 'this', '.', 'fileList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'this', '.', 'fileListPosition', '=', 'new', 'AtomicInteger', '(', '0', ')', ';', 'this', '.', 'currentTextAnnotation', '=', 'new', 'AtomicReference', '<', '>', '(', ')', ';', '}']","['@', 'Override', 'void', 'initializeReader', '(', ')', '{', 'new', 'ArrayList', '(', ')', ';', 'fileListPosition', '=', 'new', 'AtomicInteger', '(', ')', ';', 'this', '.', 'currentTextAnnotation', '=', 'new', 'AtomicReference', '<', '>', '(', ')', ';', '}']",41,31,6,182,139,22,26.875,28.57142857142857,,,,-1,-1,-1,-1,False
L240_getSortType_1.txt,code2seq,METHOD_NAME,token_wrong,0.7064,0.5773,11.1519,13.5011,"{'n_total': 259, 'n_valid': 25, 'n_correct': 20}",55.571636,"public String getSortType() { if (!Boolean.parseBoolean(getAnonymous())) { return Validator.check(sortType, ""lastName""); } else { return Validator.check(sortType, ""assessmentGradingId""); } }","String getSortType(){if((getAnonymous())){Validator.check("""");Validator(sortType,""assessmentGradingId"");}}","['public', 'String', 'getSortType', '(', ')', '{', 'if', '(', '!', 'Boolean', '.', 'parseBoolean', '(', 'getAnonymous', '(', ')', ')', ')', '{', 'return', 'Validator', '.', 'check', '(', 'sortType', ',', '""lastName""', ')', ';', '}', 'else', '{', 'return', 'Validator', '.', 'check', '(', 'sortType', ',', '""assessmentGradingId""', ')', ';', '}', '}']","['String', 'getSortType', '(', ')', '{', 'if', '(', '(', 'getAnonymous', '(', ')', ')', ')', '{', 'Validator', '.', 'check', '(', '""""', ')', ';', 'Validator', '(', 'sortType', ',', '""assessmentGradingId""', ')', ';', '}', '}']",44,30,6,190,106,17,48.554913294797686,36.84210526315789,,,,-1,-1,-1,-1,False
L241_checkStatus_1.txt,code2seq,METHOD_NAME,token_wrong,0.7567,0.692,5.3017,5.9733,"{'n_total': 353, 'n_valid': 42, 'n_correct': 29}",88.70368,"@Override public void checkStatus(Server server, String status) throws CheckException { if (server.getStatus().name().equalsIgnoreCase(status)) { throw new CheckException(""Error : Server "" + server.getName() + "" is already "" + status + ""ED""); } }","void checkStatus(Server server,String status){if(name().equalsIgnoreCase()){CheckException(""""+server()+"""");}}","['@', 'Override', 'public', 'void', 'checkStatus', '(', 'Server', 'server', ',', 'String', 'status', ')', 'throws', 'CheckException', '{', 'if', '(', 'server', '.', 'getStatus', '(', ')', '.', 'name', '(', ')', '.', 'equalsIgnoreCase', '(', 'status', ')', ')', '{', 'throw', 'new', 'CheckException', '(', '""Error : Server ""', '+', 'server', '.', 'getName', '(', ')', '+', '"" is already ""', '+', 'status', '+', '""ED""', ')', ';', '}', '}']","['void', 'checkStatus', '(', 'Server', 'server', ',', 'String', 'status', ')', '{', 'if', '(', 'name', '(', ')', '.', 'equalsIgnoreCase', '(', ')', ')', '{', 'CheckException', '(', '""""', '+', 'server', '(', ')', '+', '""""', ')', ';', '}', '}']",54,34,6,246,109,17,59.82532751091703,41.66666666666667,,,,-1,-1,-1,-1,False
L242_readInt_1.txt,code2seq,METHOD_NAME,token_wrong,0.4287,0.4662,4.9101,4.4541,"{'n_total': 357, 'n_valid': 56, 'n_correct': 31}",120.106918,int readInt() { int res = 0; for (int i = 0; i < 4; i++) { int b0 = data[off++] & 0xFF; res = res << 8 | b0; } return res; },int readInt(){res;for(0;4;i++){int b=data[off++]&xFF;res;}},"['int', 'readInt', '(', ')', '{', 'int', 'res', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'int', 'b0', '=', 'data', '[', 'off', '++', ']', '&', '0xFF', ';', 'res', '=', 'res', '<<', '8', '|', 'b0', ';', '}', 'return', 'res', ';', '}']","['int', 'readInt', '(', ')', '{', 'res', ';', 'for', '(', '0', ';', '4', ';', 'i', '++', ')', '{', 'int', 'b', '=', 'data', '[', 'off', '++', ']', '&', 'xFF', ';', 'res', ';', '}', '}']",49,32,6,124,59,13,58.55855855855856,39.53488372093023,,,,-1,-1,-1,-1,False
L243_getRawProperties_1.txt,code2seq,METHOD_NAME,token_wrong,0.923,0.8222,16.6894,15.1777,"{'n_total': 288, 'n_valid': 33, 'n_correct': 24}",71.898289,"public Properties getRawProperties() { try { return (Properties) propertiesFactoryBean.getObject(); } catch (IOException e) { if (log.isWarnEnabled()) log.warn(""Error collecting Sakai properties"", e); return new Properties(); } }","Properties getRawProperties(){try{}catch(IOException e){if(log.isWarnEnabled())warn(""Sakai properties"",e);}}","['public', 'Properties', 'getRawProperties', '(', ')', '{', 'try', '{', 'return', '(', 'Properties', ')', 'propertiesFactoryBean', '.', 'getObject', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'log', '.', 'isWarnEnabled', '(', ')', ')', 'log', '.', 'warn', '(', '""Error collecting Sakai properties""', ',', 'e', ')', ';', 'return', 'new', 'Properties', '(', ')', ';', '}', '}']","['Properties', 'getRawProperties', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'log', '.', 'isWarnEnabled', '(', ')', ')', 'warn', '(', '""Sakai properties""', ',', 'e', ')', ';', '}', '}']",50,31,6,229,108,22,58.454106280193244,43.18181818181818,,,,-1,-1,-1,-1,False
L244_complete_1.txt,code2seq,METHOD_NAME,token_wrong,0.8584,0.8042,0.4077,0.7346,"{'n_total': 245, 'n_valid': 29, 'n_correct': 21}",62.760684,"public void complete(Leave leave, Boolean saveEntity, String taskId, Map<String, Object> variables) { if (saveEntity) { leaveManager.save(leave); } taskService.complete(taskId, variables); }","void complete(Leave saveEntity,String taskId,Map<Object>variables){if(saveEntity){(leave);}taskService.complete(variables);}","['public', 'void', 'complete', '(', 'Leave', 'leave', ',', 'Boolean', 'saveEntity', ',', 'String', 'taskId', ',', 'Map', '<', 'String', ',', 'Object', '>', 'variables', ')', '{', 'if', '(', 'saveEntity', ')', '{', 'leaveManager', '.', 'save', '(', 'leave', ')', ';', '}', 'taskService', '.', 'complete', '(', 'taskId', ',', 'variables', ')', ';', '}']","['void', 'complete', '(', 'Leave', 'saveEntity', ',', 'String', 'taskId', ',', 'Map', '<', 'Object', '>', 'variables', ')', '{', 'if', '(', 'saveEntity', ')', '{', '(', 'leave', ')', ';', '}', 'taskService', '.', 'complete', '(', 'variables', ')', ';', '}']",45,34,6,190,124,14,37.5,28.205128205128204,,,,-1,-1,-1,-1,False
L245_getduration_1.txt,code2seq,METHOD_NAME,token_wrong,0.571,0.5073,7.0923,7.0906,"{'n_total': 213, 'n_valid': 46, 'n_correct': 28}",93.333238,"public int getduration(long x, int b) { Long l = Long.valueOf(x); int v = l.intValue() / 3600000; return v; }",int getduration(long b){lLong.valueOf();},"['public', 'int', 'getduration', '(', 'long', 'x', ',', 'int', 'b', ')', '{', 'Long', 'l', '=', 'Long', '.', 'valueOf', '(', 'x', ')', ';', 'int', 'v', '=', 'l', '.', 'intValue', '(', ')', '/', '3600000', ';', 'return', 'v', ';', '}']","['int', 'getduration', '(', 'long', 'b', ')', '{', 'lLong', '.', 'valueOf', '(', ')', ';', '}']",36,14,6,109,41,17,73.91304347826086,73.33333333333333,,,,-1,-1,-1,-1,False
L246_memberShow_1.txt,code2seq,METHOD_NAME,token_wrong,0.9133,0.68,14.7526,13.9072,"{'n_total': 371, 'n_valid': 49, 'n_correct': 29}",99.658949,"@RequestMapping(value = ""/message/member_show"", method = RequestMethod.GET) public String memberShow(Model model) { Member vo = new Member(); vo.setMid(101L); vo.setName(""啊三""); vo.setAge(9); vo.setSalary(99999.99); vo.setBirthday(new Date()); model.addAttribute(""member"", vo); return ""message/member_show""; }","@RequestMapping(value=""messagemember_show"",method=RequestMethod)String memberShow(Model model){setMid();addAttribute("""",vo);"""";}","['@', 'RequestMapping', '(', 'value', '=', '""/message/member_show""', ',', 'method', '=', 'RequestMethod', '.', 'GET', ')', 'public', 'String', 'memberShow', '(', 'Model', 'model', ')', '{', 'Member', 'vo', '=', 'new', 'Member', '(', ')', ';', 'vo', '.', 'setMid', '(', '101L', ')', ';', 'vo', '.', 'setName', '(', '""啊三""', ')', ';', 'vo', '.', 'setAge', '(', '9', ')', ';', 'vo', '.', 'setSalary', '(', '99999.99', ')', ';', 'vo', '.', 'setBirthday', '(', 'new', 'Date', '(', ')', ')', ';', 'model', '.', 'addAttribute', '(', '""member""', ',', 'vo', ')', ';', 'return', '""message/member_show""', ';', '}']","['@', 'RequestMapping', '(', 'value', '=', '""messagemember_show""', ',', 'method', '=', 'RequestMethod', ')', 'String', 'memberShow', '(', 'Model', 'model', ')', '{', 'setMid', '(', ')', ';', 'addAttribute', '(', '""""', ',', 'vo', ')', ';', '""""', ';', '}']",80,32,6,308,128,16,61.64383561643836,64.86486486486487,,,,-1,-1,-1,-1,False
L247_implTestAdd_1.txt,code2seq,METHOD_NAME,token_wrong,0.7912,0.5633,32.6627,27.3626,"{'n_total': 681, 'n_valid': 51, 'n_correct': 51}",112.1946,"private void implTestAdd(ECPoint[] p, ECPoint infinity) { assertPointsEqual(""p0 plus p1 does not equal p2"", p[2], p[0].add(p[1])); assertPointsEqual(""p1 plus p0 does not equal p2"", p[2], p[1].add(p[0])); for (int i = 0; i < p.length; i++) { assertPointsEqual(""Adding infinity failed"", p[i], p[i].add(infinity)); assertPointsEqual(""Adding to infinity failed"", p[i], infinity.add(p[i])); } }","void implTestAdd(ECPoint infinity){assertPointsEqual("""",(p[1]));assertPointsEqual("""",(p));for(i;;){assertPointsEqual("""",(infinity));assertPointsEqual(""""[i],(p[i]));}}","['private', 'void', 'implTestAdd', '(', 'ECPoint', '[', ']', 'p', ',', 'ECPoint', 'infinity', ')', '{', 'assertPointsEqual', '(', '""p0 plus p1 does not equal p2""', ',', 'p', '[', '2', ']', ',', 'p', '[', '0', ']', '.', 'add', '(', 'p', '[', '1', ']', ')', ')', ';', 'assertPointsEqual', '(', '""p1 plus p0 does not equal p2""', ',', 'p', '[', '2', ']', ',', 'p', '[', '1', ']', '.', 'add', '(', 'p', '[', '0', ']', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'p', '.', 'length', ';', 'i', '++', ')', '{', 'assertPointsEqual', '(', '""Adding infinity failed""', ',', 'p', '[', 'i', ']', ',', 'p', '[', 'i', ']', '.', 'add', '(', 'infinity', ')', ')', ';', 'assertPointsEqual', '(', '""Adding to infinity failed""', ',', 'p', '[', 'i', ']', ',', 'infinity', '.', 'add', '(', 'p', '[', 'i', ']', ')', ')', ';', '}', '}']","['void', 'implTestAdd', '(', 'ECPoint', 'infinity', ')', '{', 'assertPointsEqual', '(', '""""', ',', '(', 'p', '[', '1', ']', ')', ')', ';', 'assertPointsEqual', '(', '""""', ',', '(', 'p', ')', ')', ';', 'for', '(', 'i', ';', ';', ')', '{', 'assertPointsEqual', '(', '""""', ',', '(', 'infinity', ')', ')', ';', 'assertPointsEqual', '(', '""""', '[', 'i', ']', ',', '(', 'p', '[', 'i', ']', ')', ')', ';', '}', '}']",118,61,6,389,166,17,59.946236559139784,50.89285714285714,,,,-1,-1,-1,-1,False
L248_setup_2.txt,code2seq,METHOD_NAME,token_wrong,0.3519,0.4912,4.5522,6.3916,"{'n_total': 340, 'n_valid': 35, 'n_correct': 32}",77.254333,"@Override public void setup() { try (Connection connection = connectionPool.getConnection()) { Statement statement = connection.createStatement(); statement.execute(""CREATE TABLE IF NOT EXISTS api_key ("" + "" id SERIAL NOT NULL,\n"" + "" project VARCHAR(255) NOT NULL,\n"" + "" read_key VARCHAR(255) NOT NULL,\n"" + "" write_key VARCHAR(255) NOT NULL,\n"" + "" master_key VARCHAR(255) NOT NULL,\n"" + "" created_at TIMESTAMP default current_timestamp NOT NULL,"" + ""PRIMARY KEY (id)\n"" + "" )""); } catch (SQLException e) { throw new RuntimeException(e); } }","@Override void setup(){try(Connection connection=connectionPool){("""");}{(e);}}","['@', 'Override', 'public', 'void', 'setup', '(', ')', '{', 'try', '(', 'Connection', 'connection', '=', 'connectionPool', '.', 'getConnection', '(', ')', ')', '{', 'Statement', 'statement', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'statement', '.', 'execute', '(', '""CREATE TABLE IF NOT EXISTS api_key (""', '+', '"" id SERIAL NOT NULL,\\n""', '+', '"" project VARCHAR(255) NOT NULL,\\n""', '+', '"" read_key VARCHAR(255) NOT NULL,\\n""', '+', '"" write_key VARCHAR(255) NOT NULL,\\n""', '+', '"" master_key VARCHAR(255) NOT NULL,\\n""', '+', '"" created_at TIMESTAMP default current_timestamp NOT NULL,""', '+', '""PRIMARY KEY (id)\\n""', '+', '"" )""', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['@', 'Override', 'void', 'setup', '(', ')', '{', 'try', '(', 'Connection', 'connection', '=', 'connectionPool', ')', '{', '(', '""""', ')', ';', '}', '{', '(', 'e', ')', ';', '}', '}']",68,27,6,544,78,11,87.4296435272045,66.12903225806451,,,,-1,-1,-1,-1,False
L249_visualUpdate_1.txt,code2seq,METHOD_NAME,token_wrong,0.6577,0.7856,21.4472,22.5174,"{'n_total': 312, 'n_valid': 48, 'n_correct': 29}",100.179979,"private void visualUpdate(int action, String text) { Message msg = mHandler.obtainMessage(); Bundle bundle = new Bundle(); bundle.putInt(TestHandler.ACTION, action); bundle.putString(TestHandler.TEXT, text); msg.setData(bundle); mHandler.sendMessage(msg); }","void visualUpdate(int action,String text){Message();bundle(TestHandler.text);(bundle);sendMessage;}","['private', 'void', 'visualUpdate', '(', 'int', 'action', ',', 'String', 'text', ')', '{', 'Message', 'msg', '=', 'mHandler', '.', 'obtainMessage', '(', ')', ';', 'Bundle', 'bundle', '=', 'new', 'Bundle', '(', ')', ';', 'bundle', '.', 'putInt', '(', 'TestHandler', '.', 'ACTION', ',', 'action', ')', ';', 'bundle', '.', 'putString', '(', 'TestHandler', '.', 'TEXT', ',', 'text', ')', ';', 'msg', '.', 'setData', '(', 'bundle', ')', ';', 'mHandler', '.', 'sendMessage', '(', 'msg', ')', ';', '}']","['void', 'visualUpdate', '(', 'int', 'action', ',', 'String', 'text', ')', '{', 'Message', '(', ')', ';', 'bundle', '(', 'TestHandler', '.', 'text', ')', ';', '(', 'bundle', ')', ';', 'sendMessage', ';', '}']",65,28,6,257,99,18,66.10878661087865,62.71186440677966,,,,-1,-1,-1,-1,False
L250_writeToResponse_1.txt,code2seq,METHOD_NAME,token_wrong,0.4061,0.3959,10.4321,13.4313,"{'n_total': 261, 'n_valid': 29, 'n_correct': 21}",62.218089,protected void writeToResponse(String text) { try { getContext().getResponse().getWriter().write(text); this.rendering = true; } catch (IOException e) { throw new RuntimeException(e); } },void writeToResponse(String text){try{getContext.write();}catch(IOException e){(e);}},"['protected', 'void', 'writeToResponse', '(', 'String', 'text', ')', '{', 'try', '{', 'getContext', '(', ')', '.', 'getResponse', '(', ')', '.', 'getWriter', '(', ')', '.', 'write', '(', 'text', ')', ';', 'this', '.', 'rendering', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['void', 'writeToResponse', '(', 'String', 'text', ')', '{', 'try', '{', 'getContext', '.', 'write', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",49,28,6,187,85,21,61.44578313253012,48.837209302325576,,,,-1,-1,-1,-1,False
L251_async_1.txt,code2seq,METHOD_NAME,token_wrong,0.5804,0.4377,6.181,7.2747,"{'n_total': 366, 'n_valid': 40, 'n_correct': 35}",90.303168,public void async(@Nullable final Callback<T> callback) { ExecutorService executor = Executors.newSingleThreadExecutor(); executor.execute(new Runnable() { @Override public void run() { T result = execute(); if (callback != null) { callback.onResult(result); } } }); executor.shutdown(); },void async(Callback callback){ExecutorService executor=(new Runnable(){run(){if(callback){(result);}}});shutdown();},"['public', 'void', 'async', '(', '@', 'Nullable', 'final', 'Callback', '<', 'T', '>', 'callback', ')', '{', 'ExecutorService', 'executor', '=', 'Executors', '.', 'newSingleThreadExecutor', '(', ')', ';', 'executor', '.', 'execute', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'T', 'result', '=', 'execute', '(', ')', ';', 'if', '(', 'callback', '!=', 'null', ')', '{', 'callback', '.', 'onResult', '(', 'result', ')', ';', '}', '}', '}', ')', ';', 'executor', '.', 'shutdown', '(', ')', ';', '}']","['void', 'async', '(', 'Callback', 'callback', ')', '{', 'ExecutorService', 'executor', '=', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'if', '(', 'callback', ')', '{', '(', 'result', ')', ';', '}', '}', '}', ')', ';', 'shutdown', '(', ')', ';', '}']",73,39,6,289,116,11,62.23021582733813,50.74626865671642,,,,-1,-1,-1,-1,False
L252_submit_1.txt,code2seq,METHOD_NAME,token_wrong,0.5762,0.3912,4.9266,8.1561,"{'n_total': 592, 'n_valid': 58, 'n_correct': 48}",130.118744,"private <R> R submit(final AsyncCallback<R> callback, Class<?> returnClass) { Future future = submit(new Callable() { @Override public R call() throws Exception { return callback.call(); } }); AsyncCallResult result = new AsyncCallResult(returnClass, future, RpcSystemConfig.SYSTEM_PROPERTY_ASYNC_MESSAGE_CALLBACK_TIMEOUT); R asyncProxy = (R) result.getResult(); return asyncProxy; }",<R>R submit(AsyncCallback<R>returnClass){(new Callable(){call(){}});AsyncCallResult();asyncProxy=(R)getResult();},"['private', '<', 'R', '>', 'R', 'submit', '(', 'final', 'AsyncCallback', '<', 'R', '>', 'callback', ',', 'Class', '<', '?', '>', 'returnClass', ')', '{', 'Future', 'future', '=', 'submit', '(', 'new', 'Callable', '(', ')', '{', '@', 'Override', 'public', 'R', 'call', '(', ')', 'throws', 'Exception', '{', 'return', 'callback', '.', 'call', '(', ')', ';', '}', '}', ')', ';', 'AsyncCallResult', 'result', '=', 'new', 'AsyncCallResult', '(', 'returnClass', ',', 'future', ',', 'RpcSystemConfig', '.', 'SYSTEM_PROPERTY_ASYNC_MESSAGE_CALLBACK_TIMEOUT', ')', ';', 'R', 'asyncProxy', '=', '(', 'R', ')', 'result', '.', 'getResult', '(', ')', ';', 'return', 'asyncProxy', ';', '}']","['<', 'R', '>', 'R', 'submit', '(', 'AsyncCallback', '<', 'R', '>', 'returnClass', ')', '{', '(', 'new', 'Callable', '(', ')', '{', 'call', '(', ')', '{', '}', '}', ')', ';', 'AsyncCallResult', '(', ')', ';', 'asyncProxy', '=', '(', 'R', ')', 'getResult', '(', ')', ';', '}']",83,41,6,383,113,12,72.77628032345014,54.54545454545454,,,,-1,-1,-1,-1,False
L253_removeLink_1.txt,code2seq,METHOD_NAME,token_wrong,0.7348,0.7672,6.9987,7.7871,"{'n_total': 245, 'n_valid': 34, 'n_correct': 18}",71.942152,public void removeLink(Link link) { if (link == null) { throw new IllegalArgumentException(NULL_ARG); } getHibernateTemplate().delete(link); },void removeLink(Link link){if(link){throw new IllegalArgumentException(NULL);}getHibernateTemplate().delete();},"['public', 'void', 'removeLink', '(', 'Link', 'link', ')', '{', 'if', '(', 'link', '==', 'null', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'NULL_ARG', ')', ';', '}', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', 'link', ')', ';', '}']","['void', 'removeLink', '(', 'Link', 'link', ')', '{', 'if', '(', 'link', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'NULL', ')', ';', '}', 'getHibernateTemplate', '(', ')', '.', 'delete', '(', ')', ';', '}']",33,29,6,142,111,16,24.6031746031746,14.814814814814813,,,,-1,-1,-1,-1,False
L254_saveCurrentFeature_1.txt,code2seq,METHOD_NAME,token_wrong,0.4227,0.4248,16.0757,15.2508,"{'n_total': 273, 'n_valid': 42, 'n_correct': 22}",87.743371,"protected void saveCurrentFeature() { mCurrentKmlFeature.mName = eHeader.getText().toString(); mCurrentKmlFeature.mDescription = eDescription.getText().toString(); Object item = sStyleSpinner.getSelectedItem(); if (item != null && !"""".equals(item.toString())) mCurrentKmlFeature.mStyle = item.toString(); else mCurrentKmlFeature.mStyle = null; }","void saveCurrentFeature(){mCurrentKmlFeature.mName;if(item!=null&&"""".equals(item.toString))mCurrentKmlFeature.mStyle=null;}","['protected', 'void', 'saveCurrentFeature', '(', ')', '{', 'mCurrentKmlFeature', '.', 'mName', '=', 'eHeader', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', 'mCurrentKmlFeature', '.', 'mDescription', '=', 'eDescription', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ';', 'Object', 'item', '=', 'sStyleSpinner', '.', 'getSelectedItem', '(', ')', ';', 'if', '(', 'item', '!=', 'null', '&&', '!', '""""', '.', 'equals', '(', 'item', '.', 'toString', '(', ')', ')', ')', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'item', '.', 'toString', '(', ')', ';', 'else', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'null', ';', '}']","['void', 'saveCurrentFeature', '(', ')', '{', 'mCurrentKmlFeature', '.', 'mName', ';', 'if', '(', 'item', '!=', 'null', '&&', '""""', '.', 'equals', '(', 'item', '.', 'toString', ')', ')', 'mCurrentKmlFeature', '.', 'mStyle', '=', 'null', ';', '}']",79,31,6,345,123,24,69.1588785046729,65.75342465753424,,,,-1,-1,-1,-1,False
L255_protocolConnect_1.txt,code2seq,METHOD_NAME,token_wrong,0.542,0.3464,24.8105,19.8867,"{'n_total': 245, 'n_valid': 29, 'n_correct': 24}",62.83801,"protected boolean protocolConnect(String host, int port, String user, String passwd) throws MessagingException { if (passwd != null) throw new AuthenticationFailedException(""mbox does not allow passwords""); return true; }","boolean protocolConnect(String port,String passwd)throws MessagingException{if(null)AuthenticationFailedException("""");}","['protected', 'boolean', 'protocolConnect', '(', 'String', 'host', ',', 'int', 'port', ',', 'String', 'user', ',', 'String', 'passwd', ')', 'throws', 'MessagingException', '{', 'if', '(', 'passwd', '!=', 'null', ')', 'throw', 'new', 'AuthenticationFailedException', '(', '""mbox does not allow passwords""', ')', ';', 'return', 'true', ';', '}']","['boolean', 'protocolConnect', '(', 'String', 'port', ',', 'String', 'passwd', ')', 'throws', 'MessagingException', '{', 'if', '(', 'null', ')', 'AuthenticationFailedException', '(', '""""', ')', ';', '}']",36,22,6,221,119,21,51.0,46.666666666666664,,,,-1,-1,-1,-1,False
L256_digammaDifference_1.txt,code2seq,METHOD_NAME,token_wrong,0.7408,0.3095,18.7158,20.0339,"{'n_total': 253, 'n_valid': 33, 'n_correct': 30}",71.531377,"public static double digammaDifference(double x, int n) { double sum = 0; for (int i = 0; i < n; i++) { sum += 1 / (x + i); } return sum; }",double digammaDifference(double n){for(;;){sum();}},"['public', 'static', 'double', 'digammaDifference', '(', 'double', 'x', ',', 'int', 'n', ')', '{', 'double', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'sum', '+=', '1', '/', '(', 'x', '+', 'i', ')', ';', '}', 'return', 'sum', ';', '}']","['double', 'digammaDifference', '(', 'double', 'n', ')', '{', 'for', '(', ';', ';', ')', '{', 'sum', '(', ')', ';', '}', '}']",47,19,6,139,51,23,75.86206896551724,68.29268292682927,,,,-1,-1,-1,-1,False
L257_specialName_1.txt,code2seq,METHOD_NAME,token_wrong,0.5959,0.5906,24.6582,20.8811,"{'n_total': 271, 'n_valid': 34, 'n_correct': 19}",71.437848,"@Test public void specialName() { ProcessEngineConfiguration.createProcessEngineConfigurationFromResourceDefault().setProcessEngineName(""oracleEngine"").setJdbcDriver(""oracle.jdbc.Driver"").setJdbcUrl(""jdbc:oracle:thin:@localhost:1521:XE"").setJdbcUsername(""dbusername"").setJdbcPassword(""password"").setDatabaseType(""oracle"").buildProcessEngine(); ProcessEngine oracleEngine = ProcessEngines.getProcessEngine(""oracleEngine""); assertNotNull(oracleEngine); }","@Test void specialName(){(""oracle"").setJdbcUrl(""XE"").oracleEngine=ProcessEngines.getProcessEngine(""oracleEngine"");(oracleEngine);}","['@', 'Test', 'public', 'void', 'specialName', '(', ')', '{', 'ProcessEngineConfiguration', '.', 'createProcessEngineConfigurationFromResourceDefault', '(', ')', '.', 'setProcessEngineName', '(', '""oracleEngine""', ')', '.', 'setJdbcDriver', '(', '""oracle.jdbc.Driver""', ')', '.', 'setJdbcUrl', '(', '""jdbc:oracle:thin:@localhost:1521:XE""', ')', '.', 'setJdbcUsername', '(', '""dbusername""', ')', '.', 'setJdbcPassword', '(', '""password""', ')', '.', 'setDatabaseType', '(', '""oracle""', ')', '.', 'buildProcessEngine', '(', ')', ';', 'ProcessEngine', 'oracleEngine', '=', 'ProcessEngines', '.', 'getProcessEngine', '(', '""oracleEngine""', ')', ';', 'assertNotNull', '(', 'oracleEngine', ')', ';', '}']","['@', 'Test', 'void', 'specialName', '(', ')', '{', '(', '""oracle""', ')', '.', 'setJdbcUrl', '(', '""XE""', ')', '.', 'oracleEngine', '=', 'ProcessEngines', '.', 'getProcessEngine', '(', '""oracleEngine""', ')', ';', '(', 'oracleEngine', ')', ';', '}']",64,30,6,452,130,17,74.02298850574712,58.620689655172406,,,,-1,-1,-1,-1,False
L258_cancelDelays_1.txt,code2seq,METHOD_NAME,token_wrong,0.6754,0.6043,1.5793,2.4765,"{'n_total': 253, 'n_valid': 30, 'n_correct': 19}",65.177912,"public static void cancelDelays(String resource, String event) { org.sakaiproject.event.api.EventTrackingService service = getInstance(); if (service == null) return; service.cancelDelays(resource, event); }","void cancelDelays(String resource,String event){service=getInstance();if(service)service.cancelDelays(resource,event);}","['public', 'static', 'void', 'cancelDelays', '(', 'String', 'resource', ',', 'String', 'event', ')', '{', 'org', '.', 'sakaiproject', '.', 'event', '.', 'api', '.', 'EventTrackingService', 'service', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', '==', 'null', ')', 'return', ';', 'service', '.', 'cancelDelays', '(', 'resource', ',', 'event', ')', ';', '}']","['void', 'cancelDelays', '(', 'String', 'resource', ',', 'String', 'event', ')', '{', 'service', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', ')', 'service', '.', 'cancelDelays', '(', 'resource', ',', 'event', ')', ';', '}']",45,30,6,207,119,18,46.56084656084656,38.46153846153847,,,,-1,-1,-1,-1,False
L259_match_1.txt,code2seq,METHOD_NAME,token_wrong,0.4692,0.4856,2.8937,3.541,"{'n_total': 225, 'n_valid': 28, 'n_correct': 13}",60.236341,"@Test public void match() throws IOException { adaptee.match(message); replay(message, adaptee); adapter.match(null, message); verify(message, adaptee); }","@Test void match()throws IOException{adaptee.match(message);replay();adapter.match(null,message);verify(message,adaptee);}","['@', 'Test', 'public', 'void', 'match', '(', ')', 'throws', 'IOException', '{', 'adaptee', '.', 'match', '(', 'message', ')', ';', 'replay', '(', 'message', ',', 'adaptee', ')', ';', 'adapter', '.', 'match', '(', 'null', ',', 'message', ')', ';', 'verify', '(', 'message', ',', 'adaptee', ')', ';', '}']","['@', 'Test', 'void', 'match', '(', ')', 'throws', 'IOException', '{', 'adaptee', '.', 'match', '(', 'message', ')', ';', 'replay', '(', ')', ';', 'adapter', '.', 'match', '(', 'null', ',', 'message', ')', ';', 'verify', '(', 'message', ',', 'adaptee', ')', ';', '}']",41,37,6,154,122,11,22.377622377622377,11.428571428571429,,,,-1,-1,-1,-1,False
L260_containsVowel_1.txt,code2seq,METHOD_NAME,token_wrong,0.6313,0.7038,9.7573,17.6662,"{'n_total': 463, 'n_valid': 60, 'n_correct': 47}",128.196977,static boolean containsVowel(String input) { for (int i = 0; i < input.length(); i++) { char c = input.charAt(i); if (lowerCaseVowels.indexOf(c) > 0 || upperCaseVowels.indexOf(c) > 0) { return true; } } return false; },boolean containsVowel(){for(;;){(i);if((c)upperCaseVowels()>0){}}},"['static', 'boolean', 'containsVowel', '(', 'String', 'input', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'input', '.', 'length', '(', ')', ';', 'i', '++', ')', '{', 'char', 'c', '=', 'input', '.', 'charAt', '(', 'i', ')', ';', 'if', '(', 'lowerCaseVowels', '.', 'indexOf', '(', 'c', ')', '>', '0', '||', 'upperCaseVowels', '.', 'indexOf', '(', 'c', ')', '>', '0', ')', '{', 'return', 'true', ';', '}', '}', 'return', 'false', ';', '}']","['boolean', 'containsVowel', '(', ')', '{', 'for', '(', ';', ';', ')', '{', '(', 'i', ')', ';', 'if', '(', '(', 'c', ')', 'upperCaseVowels', '(', ')', '>', '0', ')', '{', '}', '}', '}']",67,30,6,218,66,19,76.38190954773869,60.65573770491803,,,,-1,-1,-1,-1,False
L261_testSpecialBranches_1.txt,code2seq,METHOD_NAME,token_wrong,0.7869,0.5411,20.9818,20.602,"{'n_total': 916, 'n_valid': 89, 'n_correct': 40}",195.195566,"@Test public void testSpecialBranches() { this.encodeAll(new String[] { ""Kobwick"" }, ""CABWAC""); this.encodeAll(new String[] { ""Kocher"" }, ""CACAR""); this.encodeAll(new String[] { ""Fesca"" }, ""FASC""); this.encodeAll(new String[] { ""Shom"" }, ""SAN""); this.encodeAll(new String[] { ""Ohlo"" }, ""OL""); this.encodeAll(new String[] { ""Uhu"" }, ""UH""); this.encodeAll(new String[] { ""Um"" }, ""UN""); }","void testSpecialBranches(){encodeAll(new String[]{""""},"""").encodeAll(new String[] {""Kocher""}, """");thisencodeAll(new String[]{""Shom""},""SAN"").encodeAll(new String[]{ """"},"""");this.encodeAll(new String[] {},"""");encodeAll(new String[]{ """"},""UN"");}","['@', 'Test', 'public', 'void', 'testSpecialBranches', '(', ')', '{', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Kobwick""', '}', ',', '""CABWAC""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Kocher""', '}', ',', '""CACAR""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Fesca""', '}', ',', '""FASC""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Shom""', '}', ',', '""SAN""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Ohlo""', '}', ',', '""OL""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Uhu""', '}', ',', '""UH""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Um""', '}', ',', '""UN""', ')', ';', '}']","['void', 'testSpecialBranches', '(', ')', '{', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""Kocher""', '}', ',', '""""', ')', ';', 'thisencodeAll', '(', 'new', 'String', '[', ']', '{', '""Shom""', '}', ',', '""SAN""', ')', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""""', ')', ';', 'this', '.', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '}', ',', '""""', ')', ';', 'encodeAll', '(', 'new', 'String', '[', ']', '{', '""""', '}', ',', '""UN""', ')', ';', '}']",114,85,6,385,241,25,40.0,26.851851851851855,,,,-1,-1,-1,-1,False
L262_prepareIndexAdd_1.txt,code2seq,METHOD_NAME,token_wrong,0.5768,0.5691,16.3161,26.2822,"{'n_total': 330, 'n_valid': 48, 'n_correct': 29}",100.212435,"protected void prepareIndexAdd(String resourceName, EntityContentProducer ecp, boolean includeContent) throws NoContentException { try { prepareIndex(resourceName, ecp, includeContent).execute().actionGet(); } catch (NoContentException e) { throw e; } catch (Throwable t) { getLog().error(""Error: trying to register resource "" + resourceName + "" in index builder: "" + getName(), t); } }","void prepareIndexAdd(String ecp,boolean includeContent){try{}catch(Throwable t){(""Error register resource""+getName);}}","['protected', 'void', 'prepareIndexAdd', '(', 'String', 'resourceName', ',', 'EntityContentProducer', 'ecp', ',', 'boolean', 'includeContent', ')', 'throws', 'NoContentException', '{', 'try', '{', 'prepareIndex', '(', 'resourceName', ',', 'ecp', ',', 'includeContent', ')', '.', 'execute', '(', ')', '.', 'actionGet', '(', ')', ';', '}', 'catch', '(', 'NoContentException', 'e', ')', '{', 'throw', 'e', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'getLog', '(', ')', '.', 'error', '(', '""Error: trying to register resource ""', '+', 'resourceName', '+', '"" in index builder: ""', '+', 'getName', '(', ')', ',', 't', ')', ';', '}', '}']","['void', 'prepareIndexAdd', '(', 'String', 'ecp', ',', 'boolean', 'includeContent', ')', '{', 'try', '{', '}', 'catch', '(', 'Throwable', 't', ')', '{', '(', '""Error register resource""', '+', 'getName', ')', ';', '}', '}']",73,27,6,386,118,21,73.42465753424658,68.65671641791045,,,,-1,-1,-1,-1,False
L263_transfer_1.txt,code2seq,METHOD_NAME,token_wrong,0.4472,0.3208,6.0151,7.0088,"{'n_total': 272, 'n_valid': 31, 'n_correct': 19}",65.672338,"private void transfer(ByteBuffer from, ByteBuffer to) { int max = Math.min(from.remaining(), to.remaining()); int fromLimit = from.limit(); from.limit(from.position() + max); to.put(from); from.limit(fromLimit); }","void transfer(ByteBuffer from,ByteBuffer to){int max=Math.min(remaining().remaining());from.limit(fromLimit);}","['private', 'void', 'transfer', '(', 'ByteBuffer', 'from', ',', 'ByteBuffer', 'to', ')', '{', 'int', 'max', '=', 'Math', '.', 'min', '(', 'from', '.', 'remaining', '(', ')', ',', 'to', '.', 'remaining', '(', ')', ')', ';', 'int', 'fromLimit', '=', 'from', '.', 'limit', '(', ')', ';', 'from', '.', 'limit', '(', 'from', '.', 'position', '(', ')', '+', 'max', ')', ';', 'to', '.', 'put', '(', 'from', ')', ';', 'from', '.', 'limit', '(', 'fromLimit', ')', ';', '}']","['void', 'transfer', '(', 'ByteBuffer', 'from', ',', 'ByteBuffer', 'to', ')', '{', 'int', 'max', '=', 'Math', '.', 'min', '(', 'remaining', '(', ')', '.', 'remaining', '(', ')', ')', ';', 'from', '.', 'limit', '(', 'fromLimit', ')', ';', '}']",68,34,6,213,110,14,51.75879396984925,54.83870967741935,,,,-1,-1,-1,-1,False
L264_cosDistance_1.txt,code2seq,METHOD_NAME,token_wrong,0.6674,0.3395,16.1408,18.0664,"{'n_total': 548, 'n_valid': 68, 'n_correct': 48}",143.412418,"float cosDistance(Vector v1, Vector v2) { float sum = 0; for (int i = 0; i < v1.data.length; i++) { sum += (v1.data[i] * v2.data[i]); } return sum / (cMap.get(v1.wordIndex) * cMap.get(v1.wordIndex)); }",float cosDistance(Vector v){for(i=0;;){sum(1[i]*2[i]);}((wordIndex)(wordIndex));},"['float', 'cosDistance', '(', 'Vector', 'v1', ',', 'Vector', 'v2', ')', '{', 'float', 'sum', '=', '0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'v1', '.', 'data', '.', 'length', ';', 'i', '++', ')', '{', 'sum', '+=', '(', 'v1', '.', 'data', '[', 'i', ']', '*', 'v2', '.', 'data', '[', 'i', ']', ')', ';', '}', 'return', 'sum', '/', '(', 'cMap', '.', 'get', '(', 'v1', '.', 'wordIndex', ')', '*', 'cMap', '.', 'get', '(', 'v1', '.', 'wordIndex', ')', ')', ';', '}']","['float', 'cosDistance', '(', 'Vector', 'v', ')', '{', 'for', '(', 'i', '=', '0', ';', ';', ')', '{', 'sum', '(', '1', '[', 'i', ']', '*', '2', '[', 'i', ']', ')', ';', '}', '(', '(', 'wordIndex', ')', '(', 'wordIndex', ')', ')', ';', '}']",77,40,6,201,81,17,65.21739130434783,52.112676056338024,,,,-1,-1,-1,-1,False
L265_setRelation_1.txt,code2seq,METHOD_NAME,token_wrong,0.5459,0.7227,7.8886,9.7798,"{'n_total': 405, 'n_valid': 45, 'n_correct': 31}",99.218002,"@JsonApiSetRelation public void setRelation(Project project, Long taskId, String fieldName) { Task task = taskRepository.findOne(taskId, null); try { PropertyUtils.setProperty(project, fieldName, task); } catch (Exception e) { throw new RuntimeException(e); } projectRepository.save(project); }","void setRelation(Project project,Long taskId,String fieldName){task();try{setProperty();}catch(Exception e){(e);}}","['@', 'JsonApiSetRelation', 'public', 'void', 'setRelation', '(', 'Project', 'project', ',', 'Long', 'taskId', ',', 'String', 'fieldName', ')', '{', 'Task', 'task', '=', 'taskRepository', '.', 'findOne', '(', 'taskId', ',', 'null', ')', ';', 'try', '{', 'PropertyUtils', '.', 'setProperty', '(', 'project', ',', 'fieldName', ',', 'task', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'projectRepository', '.', 'save', '(', 'project', ')', ';', '}']","['void', 'setRelation', '(', 'Project', 'project', ',', 'Long', 'taskId', ',', 'String', 'fieldName', ')', '{', 'task', '(', ')', ';', 'try', '{', 'setProperty', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",64,36,6,294,114,17,64.98194945848375,48.275862068965516,,,,-1,-1,-1,-1,False
L266_basic_1.txt,code2seq,METHOD_NAME,token_wrong,0.6406,0.761,14.2988,15.0158,"{'n_total': 492, 'n_valid': 74, 'n_correct': 46}",148.476581,"@Test public void basic() throws Exception { Source requestPayload = new StringSource(""<customerCountRequest xmlns='http://springframework.org/spring-ws'>"" + ""<customerName>John Doe</customerName>"" + ""</customerCountRequest>""); Source expectedResponsePayload = new StringSource(""<customerCountResponse xmlns='http://springframework.org/spring-ws'>"" + ""<customerCount>42</customerCount>"" + ""</customerCountResponse>""); mockClient.sendRequest(withPayload(requestPayload)).andExpect(payload(expectedResponsePayload)); }","void basic()throws Exception{("""");expectedResponsePayload(""""+""customerCount2customerCount""+""<"");(withPayload).andExpect((expectedResponsePayload));}","['@', 'Test', 'public', 'void', 'basic', '(', ')', 'throws', 'Exception', '{', 'Source', 'requestPayload', '=', 'new', 'StringSource', '(', '""<customerCountRequest xmlns=\'http://springframework.org/spring-ws\'>""', '+', '""<customerName>John Doe</customerName>""', '+', '""</customerCountRequest>""', ')', ';', 'Source', 'expectedResponsePayload', '=', 'new', 'StringSource', '(', '""<customerCountResponse xmlns=\'http://springframework.org/spring-ws\'>""', '+', '""<customerCount>42</customerCount>""', '+', '""</customerCountResponse>""', ')', ';', 'mockClient', '.', 'sendRequest', '(', 'withPayload', '(', 'requestPayload', ')', ')', '.', 'andExpect', '(', 'payload', '(', 'expectedResponsePayload', ')', ')', ';', '}']","['void', 'basic', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'expectedResponsePayload', '(', '""""', '+', '""customerCount2customerCount""', '+', '""<""', ')', ';', '(', 'withPayload', ')', '.', 'andExpect', '(', '(', 'expectedResponsePayload', ')', ')', ';', '}']",55,32,6,516,148,11,72.87128712871286,46.93877551020408,,,,-1,-1,-1,-1,False
L267_encodePlaintext_2.txt,code2seq,METHOD_NAME,token_wrong,0.5847,0.2779,13.3894,12.2026,"{'n_total': 465, 'n_valid': 55, 'n_correct': 35}",111.81893,"public byte[] encodePlaintext(long seqNo, short type, byte[] plaintext, int offset, int len) throws IOException { byte[] mac = writeMac.calculateMac(seqNo, type, plaintext, offset, len); byte[] ciphertext = new byte[len + mac.length]; System.arraycopy(plaintext, offset, ciphertext, 0, len); System.arraycopy(mac, 0, ciphertext, len, mac.length); return ciphertext; }","byte[]encodePlaintext(short type,byte[]plaintext,int len)throws IOException{calculateMac(type,plaintext,len);new byte[length];(length);}","['public', 'byte', '[', ']', 'encodePlaintext', '(', 'long', 'seqNo', ',', 'short', 'type', ',', 'byte', '[', ']', 'plaintext', ',', 'int', 'offset', ',', 'int', 'len', ')', 'throws', 'IOException', '{', 'byte', '[', ']', 'mac', '=', 'writeMac', '.', 'calculateMac', '(', 'seqNo', ',', 'type', ',', 'plaintext', ',', 'offset', ',', 'len', ')', ';', 'byte', '[', ']', 'ciphertext', '=', 'new', 'byte', '[', 'len', '+', 'mac', '.', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'plaintext', ',', 'offset', ',', 'ciphertext', ',', '0', ',', 'len', ')', ';', 'System', '.', 'arraycopy', '(', 'mac', ',', '0', ',', 'ciphertext', ',', 'len', ',', 'mac', '.', 'length', ')', ';', 'return', 'ciphertext', ';', '}']","['byte', '[', ']', 'encodePlaintext', '(', 'short', 'type', ',', 'byte', '[', ']', 'plaintext', ',', 'int', 'len', ')', 'throws', 'IOException', '{', 'calculateMac', '(', 'type', ',', 'plaintext', ',', 'len', ')', ';', 'new', 'byte', '[', 'length', ']', ';', '(', 'length', ')', ';', '}']",97,39,6,367,136,21,66.76300578034682,63.73626373626373,,,,-1,-1,-1,-1,False
L268_equals_1.txt,code2seq,METHOD_NAME,token_wrong,0.3989,0.4623,7.8636,7.7098,"{'n_total': 352, 'n_valid': 53, 'n_correct': 31}",113.81412,"public boolean equals(Object l) { if (l instanceof Label) { return ((Label) l).compareTo(this) == 0; } else throw new IllegalArgumentException(""Cannot compare a Label object with a "" + l.getClass().getName() + "" object.""); }","boolean equals(Object l){if(l){return((Label)l).compareTo==0;}(""a""+""object"");}","['public', 'boolean', 'equals', '(', 'Object', 'l', ')', '{', 'if', '(', 'l', 'instanceof', 'Label', ')', '{', 'return', '(', '(', 'Label', ')', 'l', ')', '.', 'compareTo', '(', 'this', ')', '==', '0', ';', '}', 'else', 'throw', 'new', 'IllegalArgumentException', '(', '""Cannot compare a Label object with a ""', '+', 'l', '.', 'getClass', '(', ')', '.', 'getName', '(', ')', '+', '"" object.""', ')', ';', '}']","['boolean', 'equals', '(', 'Object', 'l', ')', '{', 'if', '(', 'l', ')', '{', 'return', '(', '(', 'Label', ')', 'l', ')', '.', 'compareTo', '==', '0', ';', '}', '(', '""a""', '+', '""object""', ')', ';', '}']",52,32,6,224,78,12,68.86792452830188,43.47826086956522,,,,-1,-1,-1,-1,False
L269_initVideoInfo_1.txt,code2seq,METHOD_NAME,token_wrong,0.5455,0.4586,7.6038,7.1563,"{'n_total': 486, 'n_valid': 116, 'n_correct': 39}",232.802899,private void initVideoInfo() { MediaMetadataRetriever retr = new MediaMetadataRetriever(); retr.setDataSource(mInputVideoPath); String width = retr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_WIDTH); String height = retr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_HEIGHT); String rotation = retr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_ROTATION); videoWidth = Integer.parseInt(width); videoHeight = Integer.parseInt(height); videoRotation = Integer.parseInt(rotation); },void initVideoInfo(){MediaMetadataRetriever=retr(MediaMetadataRetriever);String rotation=extractMetadata();videoWidthparseInt();},"['private', 'void', 'initVideoInfo', '(', ')', '{', 'MediaMetadataRetriever', 'retr', '=', 'new', 'MediaMetadataRetriever', '(', ')', ';', 'retr', '.', 'setDataSource', '(', 'mInputVideoPath', ')', ';', 'String', 'width', '=', 'retr', '.', 'extractMetadata', '(', 'MediaMetadataRetriever', '.', 'METADATA_KEY_VIDEO_WIDTH', ')', ';', 'String', 'height', '=', 'retr', '.', 'extractMetadata', '(', 'MediaMetadataRetriever', '.', 'METADATA_KEY_VIDEO_HEIGHT', ')', ';', 'String', 'rotation', '=', 'retr', '.', 'extractMetadata', '(', 'MediaMetadataRetriever', '.', 'METADATA_KEY_VIDEO_ROTATION', ')', ';', 'videoWidth', '=', 'Integer', '.', 'parseInt', '(', 'width', ')', ';', 'videoHeight', '=', 'Integer', '.', 'parseInt', '(', 'height', ')', ';', 'videoRotation', '=', 'Integer', '.', 'parseInt', '(', 'rotation', ')', ';', '}']","['void', 'initVideoInfo', '(', ')', '{', 'MediaMetadataRetriever', '=', 'retr', '(', 'MediaMetadataRetriever', ')', ';', 'String', 'rotation', '=', 'extractMetadata', '(', ')', ';', 'videoWidthparseInt', '(', ')', ';', '}']",85,24,6,517,129,19,77.91164658634538,77.21518987341773,,,,-1,-1,-1,-1,False
L270_init_4.txt,code2seq,METHOD_NAME,token_wrong,0.9549,0.4173,9.3388,7.8936,"{'n_total': 116, 'n_valid': 20, 'n_correct': 15}",40.738678,private void init(String string) { this.string = string; beginIndex = currentIndex = 0; currentLine = currentColumn = beginLine = beginColumn = endLine = endColumn = 1; },void init(String string){},"['private', 'void', 'init', '(', 'String', 'string', ')', '{', 'this', '.', 'string', '=', 'string', ';', 'beginIndex', '=', 'currentIndex', '=', '0', ';', 'currentLine', '=', 'currentColumn', '=', 'beginLine', '=', 'beginColumn', '=', 'endLine', '=', 'endColumn', '=', '1', ';', '}']","['void', 'init', '(', 'String', 'string', ')', '{', '}']",35,8,6,170,26,10,90.0,93.10344827586206,,,,-1,-1,-1,-1,False
L271_testClient_1.txt,code2seq,METHOD_NAME,token_wrong,0.6315,0.639,7.2422,8.393,"{'n_total': 345, 'n_valid': 49, 'n_correct': 33}",102.633389,"public void testClient() throws IOException { HttpRequest req = spdyCon.request(""http://localhost:8802/echo/test1""); req.setProtocol(""SPDY/1.0""); HttpResponse res = req.waitResponse(); assertEquals(200, res.getStatus()); BufferedReader reader = res.getReader(); String line1 = reader.readLine(); }","void testClient()throws IOException{("""");setProtocol(""SPDY"");HttpResponse res=assertEquals();readLine();}","['public', 'void', 'testClient', '(', ')', 'throws', 'IOException', '{', 'HttpRequest', 'req', '=', 'spdyCon', '.', 'request', '(', '""http://localhost:8802/echo/test1""', ')', ';', 'req', '.', 'setProtocol', '(', '""SPDY/1.0""', ')', ';', 'HttpResponse', 'res', '=', 'req', '.', 'waitResponse', '(', ')', ';', 'assertEquals', '(', '200', ',', 'res', '.', 'getStatus', '(', ')', ')', ';', 'BufferedReader', 'reader', '=', 'res', '.', 'getReader', '(', ')', ';', 'String', 'line1', '=', 'reader', '.', 'readLine', '(', ')', ';', '}']","['void', 'testClient', '(', ')', 'throws', 'IOException', '{', '(', '""""', ')', ';', 'setProtocol', '(', '""SPDY""', ')', ';', 'HttpResponse', 'res', '=', 'assertEquals', '(', ')', ';', 'readLine', '(', ')', ';', '}']",64,28,6,297,105,16,68.32740213523132,62.06896551724138,,,,-1,-1,-1,-1,False
L272_removeSiteSecurity_1.txt,code2seq,METHOD_NAME,token_wrong,0.7671,0.5123,6.924,7.4056,"{'n_total': 449, 'n_valid': 66, 'n_correct': 25}",136.39547,"protected void removeSiteSecurity(AuthzGroup azGroup) { Reference ref = entityManager().newReference(azGroup.getId()); if (SiteService.APPLICATION_ID.equals(ref.getType()) && SiteService.SITE_SUBTYPE.equals(ref.getSubType())) { Set empty = new HashSet(); siteService.setSiteSecurity(ref.getId(), empty, empty, empty); } }","void removeSiteSecurity(AuthzGroup azGroup){entityManager().newReference(azGroupgetId());if(SiteService.ID.equals(ref.getType())&&equals(ref.getSubType())){Set();siteService.setSiteSecurity(getId(),empty,empty,empty);}}","['protected', 'void', 'removeSiteSecurity', '(', 'AuthzGroup', 'azGroup', ')', '{', 'Reference', 'ref', '=', 'entityManager', '(', ')', '.', 'newReference', '(', 'azGroup', '.', 'getId', '(', ')', ')', ';', 'if', '(', 'SiteService', '.', 'APPLICATION_ID', '.', 'equals', '(', 'ref', '.', 'getType', '(', ')', ')', '&&', 'SiteService', '.', 'SITE_SUBTYPE', '.', 'equals', '(', 'ref', '.', 'getSubType', '(', ')', ')', ')', '{', 'Set', 'empty', '=', 'new', 'HashSet', '(', ')', ';', 'siteService', '.', 'setSiteSecurity', '(', 'ref', '.', 'getId', '(', ')', ',', 'empty', ',', 'empty', ',', 'empty', ')', ';', '}', '}']","['void', 'removeSiteSecurity', '(', 'AuthzGroup', 'azGroup', ')', '{', 'entityManager', '(', ')', '.', 'newReference', '(', 'azGroupgetId', '(', ')', ')', ';', 'if', '(', 'SiteService', '.', 'ID', '.', 'equals', '(', 'ref', '.', 'getType', '(', ')', ')', '&&', 'equals', '(', 'ref', '.', 'getSubType', '(', ')', ')', ')', '{', 'Set', '(', ')', ';', 'siteService', '.', 'setSiteSecurity', '(', 'getId', '(', ')', ',', 'empty', ',', 'empty', ',', 'empty', ')', ';', '}', '}']",80,64,6,321,219,24,34.34343434343434,21.62162162162162,,,,-1,-1,-1,-1,False
L273_getSubjectTypeManager_1.txt,code2seq,METHOD_NAME,token_wrong,0.3555,0.3419,8.4868,10.0304,"{'n_total': 204, 'n_valid': 35, 'n_correct': 18}",74.936493,public SubjectTypeManager getSubjectTypeManager() { if (stm == null) { stm = new SubjectTypeManager(this); } return (stm); },SubjectTypeManager getSubjectTypeManager(){if(stm=null){stm=newSubjectTypeManager(this);}(stm);},"['public', 'SubjectTypeManager', 'getSubjectTypeManager', '(', ')', '{', 'if', '(', 'stm', '==', 'null', ')', '{', 'stm', '=', 'new', 'SubjectTypeManager', '(', 'this', ')', ';', '}', 'return', '(', 'stm', ')', ';', '}']","['SubjectTypeManager', 'getSubjectTypeManager', '(', ')', '{', 'if', '(', 'stm', '=', 'null', ')', '{', 'stm', '=', 'newSubjectTypeManager', '(', 'this', ')', ';', '}', '(', 'stm', ')', ';', '}']",28,25,6,124,96,27,28.865979381443296,13.636363636363635,,,,-1,-1,-1,-1,False
L274_init_5.txt,code2seq,METHOD_NAME,token_wrong,0.4382,0.5519,3.4704,3.8715,"{'n_total': 166, 'n_valid': 18, 'n_correct': 14}",39.551941,public void init() { dbVendor = getDbVendor(); autoDdl = getAutoDdl(); if (autoDdl) { } },void init(){dbVendor=getDbVendor();autoDdl();if(autoDdl){}},"['public', 'void', 'init', '(', ')', '{', 'dbVendor', '=', 'getDbVendor', '(', ')', ';', 'autoDdl', '=', 'getAutoDdl', '(', ')', ';', 'if', '(', 'autoDdl', ')', '{', '}', '}']","['void', 'init', '(', ')', '{', 'dbVendor', '=', 'getDbVendor', '(', ')', ';', 'autoDdl', '(', ')', ';', 'if', '(', 'autoDdl', ')', '{', '}', '}']",25,22,6,89,59,10,37.9746835443038,15.789473684210526,,,,-1,-1,-1,-1,False
L275_unlockCheck_1.txt,code2seq,METHOD_NAME,token_wrong,0.9495,0.4534,7.8698,8.6755,"{'n_total': 319, 'n_valid': 42, 'n_correct': 26}",87.186812,"protected boolean unlockCheck(List<String> locks, String resource) { Iterator<String> locksIterator = locks.iterator(); while (locksIterator.hasNext()) { if (securityService().unlock(locksIterator.next(), resource)) return true; } return false; }",boolean unlockCheck(List<String>resource){while(locksIterator()){if(securityService.unlock());}false;},"['protected', 'boolean', 'unlockCheck', '(', 'List', '<', 'String', '>', 'locks', ',', 'String', 'resource', ')', '{', 'Iterator', '<', 'String', '>', 'locksIterator', '=', 'locks', '.', 'iterator', '(', ')', ';', 'while', '(', 'locksIterator', '.', 'hasNext', '(', ')', ')', '{', 'if', '(', 'securityService', '(', ')', '.', 'unlock', '(', 'locksIterator', '.', 'next', '(', ')', ',', 'resource', ')', ')', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['boolean', 'unlockCheck', '(', 'List', '<', 'String', '>', 'resource', ')', '{', 'while', '(', 'locksIterator', '(', ')', ')', '{', 'if', '(', 'securityService', '.', 'unlock', '(', ')', ')', ';', '}', 'false', ';', '}']",60,30,6,246,102,17,62.882096069869,55.55555555555556,,,,-1,-1,-1,-1,False
L276_processClientCredentials_1.txt,code2seq,METHOD_NAME,token_wrong,0.6309,0.4498,13.6306,17.0514,"{'n_total': 329, 'n_valid': 35, 'n_correct': 31}",76.096734,public void processClientCredentials(TlsCredentials clientCredentials) throws IOException { if (keyExchange == KeyExchangeAlgorithm.ECDH_anon) { throw new TlsFatalAlert(AlertDescription.internal_error); } if (clientCredentials instanceof TlsCredentialedAgreement) { this.agreementCredentials = (TlsCredentialedAgreement) clientCredentials; } else { throw new TlsFatalAlert(AlertDescription.internal_error); } },void processClientCredentials()throws IOException{if(keyExchange){(AlertDescription);}if(TlsCredentialedAgreement){this.agreementCredentials=(TlsCredentialedAgreement)TlsFatalAlert();}},"['public', 'void', 'processClientCredentials', '(', 'TlsCredentials', 'clientCredentials', ')', 'throws', 'IOException', '{', 'if', '(', 'keyExchange', '==', 'KeyExchangeAlgorithm', '.', 'ECDH_anon', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', 'if', '(', 'clientCredentials', 'instanceof', 'TlsCredentialedAgreement', ')', '{', 'this', '.', 'agreementCredentials', '=', '(', 'TlsCredentialedAgreement', ')', 'clientCredentials', ';', '}', 'else', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'internal_error', ')', ';', '}', '}']","['void', 'processClientCredentials', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'keyExchange', ')', '{', '(', 'AlertDescription', ')', ';', '}', 'if', '(', 'TlsCredentialedAgreement', ')', '{', 'this', '.', 'agreementCredentials', '=', '(', 'TlsCredentialedAgreement', ')', 'TlsFatalAlert', '(', ')', ';', '}', '}']",59,35,6,410,185,30,59.210526315789465,45.28301886792453,,,,-1,-1,-1,-1,False
L277_generateSig_1.txt,code2seq,METHOD_NAME,token_wrong,0.6978,0.879,6.6512,11.3011,"{'n_total': 191, 'n_valid': 24, 'n_correct': 22}",47.290136,"private static byte[] generateSig(ContentSigner signer, ASN1Encodable tbsObj) throws IOException { OutputStream sOut = signer.getOutputStream(); DEROutputStream dOut = new DEROutputStream(sOut); dOut.writeObject(tbsObj); sOut.close(); return signer.getSignature(); }",byte[]generateSig()throws IOException{(tbsObj);getSignature();},"['private', 'static', 'byte', '[', ']', 'generateSig', '(', 'ContentSigner', 'signer', ',', 'ASN1Encodable', 'tbsObj', ')', 'throws', 'IOException', '{', 'OutputStream', 'sOut', '=', 'signer', '.', 'getOutputStream', '(', ')', ';', 'DEROutputStream', 'dOut', '=', 'new', 'DEROutputStream', '(', 'sOut', ')', ';', 'dOut', '.', 'writeObject', '(', 'tbsObj', ')', ';', 'sOut', '.', 'close', '(', ')', ';', 'return', 'signer', '.', 'getSignature', '(', ')', ';', '}']","['byte', '[', ']', 'generateSig', '(', ')', 'throws', 'IOException', '{', '(', 'tbsObj', ')', ';', 'getSignature', '(', ')', ';', '}']",55,18,6,266,63,17,81.52610441767068,75.51020408163265,,,,-1,-1,-1,-1,False
L278_checkUidSig_1.txt,code2seq,METHOD_NAME,token_wrong,0.3267,0.2999,20.348,20.3513,"{'n_total': 452, 'n_valid': 52, 'n_correct': 34}",115.360712,"private void checkUidSig(PGPPublicKey pk, String uid) throws Exception { Iterator<PGPSignature> sigit = pk.getSignaturesForID(uid); while (sigit.hasNext()) { PGPSignature sig = (PGPSignature) sigit.next(); if (!isGoodUIDSignature(sig, pk, uid)) { fail(""Bad self-signature found for '"" + uid + ""'""); } } }","void checkUidSig(PGPPublicKey pk,String uid)throws Exception{Iterator<PGPSignature>sigit=pk.getSignaturesForID(uid);while(sigit.hasNext()){PGPSignature();if(!isGoodUIDSignature(sig,pk,uid)){fail(""Bad""+"""");}}}","['private', 'void', 'checkUidSig', '(', 'PGPPublicKey', 'pk', ',', 'String', 'uid', ')', 'throws', 'Exception', '{', 'Iterator', '<', 'PGPSignature', '>', 'sigit', '=', 'pk', '.', 'getSignaturesForID', '(', 'uid', ')', ';', 'while', '(', 'sigit', '.', 'hasNext', '(', ')', ')', '{', 'PGPSignature', 'sig', '=', '(', 'PGPSignature', ')', 'sigit', '.', 'next', '(', ')', ';', 'if', '(', '!', 'isGoodUIDSignature', '(', 'sig', ',', 'pk', ',', 'uid', ')', ')', '{', 'fail', '(', '""Bad self-signature found for \'""', '+', 'uid', '+', '""\'""', ')', ';', '}', '}', '}']","['void', 'checkUidSig', '(', 'PGPPublicKey', 'pk', ',', 'String', 'uid', ')', 'throws', 'Exception', '{', 'Iterator', '<', 'PGPSignature', '>', 'sigit', '=', 'pk', '.', 'getSignaturesForID', '(', 'uid', ')', ';', 'while', '(', 'sigit', '.', 'hasNext', '(', ')', ')', '{', 'PGPSignature', '(', ')', ';', 'if', '(', '!', 'isGoodUIDSignature', '(', 'sig', ',', 'pk', ',', 'uid', ')', ')', '{', 'fail', '(', '""Bad""', '+', '""""', ')', ';', '}', '}', '}']",72,61,6,304,208,17,33.44947735191638,16.666666666666664,,,,-1,-1,-1,-1,False
L279_getRequiredLicenses_1.txt,code2seq,METHOD_NAME,token_wrong,0.5922,0.4742,17.0176,14.9121,"{'n_total': 300, 'n_valid': 36, 'n_correct': 24}",78.717015,"public LicenseSet getRequiredLicenses() { List<License> licenses = new ArrayList<License>(); for (License license : delegate.getRequiredLicenses()) { License persistentLicense = new PersistentLicense(log, license, username); licenses.add(persistentLicense); } return new LicenseSet(licenses); }",LicenseSet getRequiredLicenses(){licenses=ArrayList();for(License license:getRequiredLicenses()){PersistentLicense(log);}new LicenseSet(licenses);},"['public', 'LicenseSet', 'getRequiredLicenses', '(', ')', '{', 'List', '<', 'License', '>', 'licenses', '=', 'new', 'ArrayList', '<', 'License', '>', '(', ')', ';', 'for', '(', 'License', 'license', ':', 'delegate', '.', 'getRequiredLicenses', '(', ')', ')', '{', 'License', 'persistentLicense', '=', 'new', 'PersistentLicense', '(', 'log', ',', 'license', ',', 'username', ')', ';', 'licenses', '.', 'add', '(', 'persistentLicense', ')', ';', '}', 'return', 'new', 'LicenseSet', '(', 'licenses', ')', ';', '}']","['LicenseSet', 'getRequiredLicenses', '(', ')', '{', 'licenses', '=', 'ArrayList', '(', ')', ';', 'for', '(', 'License', 'license', ':', 'getRequiredLicenses', '(', ')', ')', '{', 'PersistentLicense', '(', 'log', ')', ';', '}', 'new', 'LicenseSet', '(', 'licenses', ')', ';', '}']",61,34,6,294,147,25,54.646840148698885,49.09090909090909,,,,-1,-1,-1,-1,False
L280_onClick_1.txt,code2seq,METHOD_NAME,token_wrong,0.6239,0.849,5.6292,8.4393,"{'n_total': 256, 'n_valid': 57, 'n_correct': 25}",116.64393,"@Override public void onClick(String weatherForDay) { Context context = this; Class destinationClass = DetailActivity.class; Intent intentToStartDetailActivity = new Intent(context, destinationClass); intentToStartDetailActivity.putExtra(Intent.EXTRA_TEXT, weatherForDay); startActivity(intentToStartDetailActivity); }",@Override void onClick(String weatherForDay){Context intentToStartDetailActivity=newputExtra();},"['@', 'Override', 'public', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'context', '=', 'this', ';', 'Class', 'destinationClass', '=', 'DetailActivity', '.', 'class', ';', 'Intent', 'intentToStartDetailActivity', '=', 'new', 'Intent', '(', 'context', ',', 'destinationClass', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', 'weatherForDay', ')', ';', 'startActivity', '(', 'intentToStartDetailActivity', ')', ';', '}']","['@', 'Override', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'intentToStartDetailActivity', '=', 'newputExtra', '(', ')', ';', '}']",50,17,6,318,96,13,72.78688524590164,75.0,,,,-1,-1,-1,-1,False
L281_validateInputSizeMax_1.txt,code2seq,METHOD_NAME,token_wrong,0.7346,0.5491,19.0561,25.036,"{'n_total': 594, 'n_valid': 64, 'n_correct': 48}",138.371891,"public static void validateInputSizeMax(String field, String message, int size) throws CheckException { if (field == null || field.trim().length() == 0 || field.length() > size) { String messageTranslated = messageSource.getMessage(message, null, Locale.ENGLISH); throw new CheckException(messageTranslated + "" : "" + field); } }","void validateInputSizeMax(String field,String message,int size)throws CheckException{if(length()>size){String(null);(""""+field);}}","['public', 'static', 'void', 'validateInputSizeMax', '(', 'String', 'field', ',', 'String', 'message', ',', 'int', 'size', ')', 'throws', 'CheckException', '{', 'if', '(', 'field', '==', 'null', '||', 'field', '.', 'trim', '(', ')', '.', 'length', '(', ')', '==', '0', '||', 'field', '.', 'length', '(', ')', '>', 'size', ')', '{', 'String', 'messageTranslated', '=', 'messageSource', '.', 'getMessage', '(', 'message', ',', 'null', ',', 'Locale', '.', 'ENGLISH', ')', ';', 'throw', 'new', 'CheckException', '(', 'messageTranslated', '+', '"" : ""', '+', 'field', ')', ';', '}', '}']","['void', 'validateInputSizeMax', '(', 'String', 'field', ',', 'String', 'message', ',', 'int', 'size', ')', 'throws', 'CheckException', '{', 'if', '(', 'length', '(', ')', '>', 'size', ')', '{', 'String', '(', 'null', ')', ';', '(', '""""', '+', 'field', ')', ';', '}', '}']",73,37,6,328,129,26,65.89403973509934,53.73134328358209,,,,-1,-1,-1,-1,False
L282_createRawValidator_5.txt,code2seq,METHOD_NAME,token_wrong,0.766,0.3944,26.3093,23.1606,"{'n_total': 1176, 'n_valid': 324, 'n_correct': 125}",628.941264,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsr\u0000\u001ccom.s"" + ""un.msv.grammar.MixedExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"" + ""aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.grammar."" + ""ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.OneOrMor"" + ""eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valu"" + ""exp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0013p\u0000sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u00002com.sun.msv.gra"" + ""mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0012\u0001q"" + ""\u0000~\u0000\u0018sr\u0000\'com.sun.msv.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"" + ""\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003nc2q\u0000~\u0000\u0001xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xpsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bs"" + ""r\u0000#com.sun.msv.grammar.ChoiceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001"" + ""L\u0000\u0003nc2q\u0000~\u0000\u0001xq\u0000~\u0000\u001bsr\u0000&com.sun.msv.grammar.NamespaceNameClass\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIt\u0000\u0012Ljava/lang/String;xq\u0000~\u0000\u001bt\u0000\u0000sq\u0000~\u0000"" + ""!t\u0000\""http://www.w3.org/2000/09/xmldsig#sq\u0000~\u0000!t\u0000+http://java.s"" + ""un.com/jaxb/xjc/dummy-elementssr\u00000com.sun.msv.grammar.Expres"" + ""sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0019q\u0000~\u0000*sq\u0000~\u0000\u0015ppsr\u0000"" + ""\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"" + ""datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"" + ""StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.AnyURITy"" + ""pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"" + ""\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"" + ""amespaceUriq\u0000~\u0000\""L\u0000\btypeNameq\u0000~\u0000\""L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"" + ""/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"" + ""1/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"" + ""rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"" + ""teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Express"" + ""ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv."" + ""util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq\u0000"" + ""~\u0000\""xpq\u0000~\u00007q\u0000~\u00006sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001bt\u0000\tAlgorithm"" + ""q\u0000~\u0000$sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0015q\u0000~\u0000\u0013psq\u0000~\u0000,ppsr\u0000\""com.sun.msv.datatype.xs"" + ""d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\u0005QNameq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000=q\u0000~"" + ""\u0000Gq\u0000~\u00006sq\u0000~\u0000?t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"" + ""anceq\u0000~\u0000*sq\u0000~\u0000?t\u0000\fDigestMethodq\u0000~\u0000&sr\u0000\""com.sun.msv.grammar.E"" + ""xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"" + ""xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"" + ""nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"" + ""t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\nq\u0000~\u0000\rq\u0000~"" + ""\u0000\tq\u0000~\u0000\u000fq\u0000~\u0000\u0011q\u0000~\u0000Bx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com.DocumentDeclaration createRawValidator(){if(schemaFragment=null){schemaFragment.SchemaDeserializer.deserialize((""sr""+""""+""""+""u""+""~\u0000~0\0""+""tq""));}return new com.sun.regexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsr\x00\x1ccom.s""', '+', '""un.msv.grammar.MixedExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.Un""', '+', '""aryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.grammar.""', '+', '""ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.OneOrMor""', '+', '""eExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\fsr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valu""', '+', '""exp\x00psq\x00~\x00\x00q\x00~\x00\x13p\x00sr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04ppsr\x002com.sun.msv.gra""', '+', '""mmar.Expression$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x12\x01q""', '+', '""\x00~\x00\x18sr\x00\\\'com.sun.msv.grammar.DifferenceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00""', '+', '""\x03nc1q\x00~\x00\x01L\x00\x03nc2q\x00~\x00\x01xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xpsr\x00 com.sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x1bs""', '+', '""r\x00#com.sun.msv.grammar.ChoiceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01""', '+', '""L\x00\x03nc2q\x00~\x00\x01xq\x00~\x00\x1bsr\x00&com.sun.msv.grammar.NamespaceNameClass\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\fnamespaceURIt\x00\x12Ljava/lang/String;xq\x00~\x00\x1bt\x00\x00sq\x00~\x00""', '+', '""!t\x00\\""http://www.w3.org/2000/09/xmldsig#sq\x00~\x00!t\x00+http://java.s""', '+', '""un.com/jaxb/xjc/dummy-elementssr\x000com.sun.msv.grammar.Expres""', '+', '""sion$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x19q\x00~\x00*sq\x00~\x00\x15ppsr\x00""', '+', '""\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/""', '+', '""datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/""', '+', '""StringPair;xq\x00~\x00\x04q\x00~\x00\x13psr\x00#com.sun.msv.datatype.xsd.AnyURITy""', '+', '""pe\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00""', '+', '""\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02""', '+', '""\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fn""', '+', '""amespaceUriq\x00~\x00\\""L\x00\\btypeNameq\x00~\x00\\""L\x00\\nwhiteSpacet\x00.Lcom/sun/msv""', '+', '""/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/200""', '+', '""1/XMLSchemat\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.WhiteSpaceP""', '+', '""rocessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.Whi""', '+', '""teSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Express""', '+', '""ion$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x13psr\x00\x1bcom.sun.msv.""', '+', '""util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq\x00""', '+', '""~\x00\\""xpq\x00~\x007q\x00~\x006sr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1bt\x00\\tAlgorithm""', '+', '""q\x00~\x00$sq\x00~\x00\x0eppsq\x00~\x00\x15q\x00~\x00\x13psq\x00~\x00,ppsr\x00\\""com.sun.msv.datatype.xs""', '+', '""d.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x001q\x00~\x006t\x00\x05QNameq\x00~\x00:q\x00~\x00<sq\x00~\x00=q\x00~""', '+', '""\x00Gq\x00~\x006sq\x00~\x00?t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-inst""', '+', '""anceq\x00~\x00*sq\x00~\x00?t\x00\\fDigestMethodq\x00~\x00&sr\x00\\""com.sun.msv.grammar.E""', '+', '""xpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/E""', '+', '""xpressionPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.Expressio""', '+', '""nPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parent""', '+', '""t\x00$Lcom/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x06\x01pq\x00~\x00\\nq\x00~\x00\\rq\x00~""', '+', '""\x00\\tq\x00~\x00\x0fq\x00~\x00\x11q\x00~\x00Bx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '=', 'null', ')', '{', 'schemaFragment', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""sr""', '+', '""""', '+', '""""', '+', '""u""', '+', '""~\x00~0\\0""', '+', '""tq""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",155,50,6,6509,218,24,97.00848111025444,70.46979865771812,,,,-1,-1,-1,-1,False
L283_validateExpirationTime_1.txt,code2seq,METHOD_NAME,token_wrong,0.6039,0.6313,14.291,17.9912,"{'n_total': 354, 'n_valid': 32, 'n_correct': 27}",70.487197,"private void validateExpirationTime(Date expires, long maxClockSkew) throws TimestampValidationCallback.TimestampValidationException { Date currentTime = getGMTDateWithSkewAdjusted(new GregorianCalendar(), maxClockSkew, false); if (expires.before(currentTime)) { throw new TimestampValidationCallback.TimestampValidationException(""The current time is ahead of the expiration time in Timestamp""); } }","void validateExpirationTime(Date expires,long maxClockSkew)throws TimestampValidationCallback{getGMTDateWithSkewAdjusted(GregorianCalendar(),maxClockSkew,false);if((currentTime)){("""");}}","['private', 'void', 'validateExpirationTime', '(', 'Date', 'expires', ',', 'long', 'maxClockSkew', ')', 'throws', 'TimestampValidationCallback', '.', 'TimestampValidationException', '{', 'Date', 'currentTime', '=', 'getGMTDateWithSkewAdjusted', '(', 'new', 'GregorianCalendar', '(', ')', ',', 'maxClockSkew', ',', 'false', ')', ';', 'if', '(', 'expires', '.', 'before', '(', 'currentTime', ')', ')', '{', 'throw', 'new', 'TimestampValidationCallback', '.', 'TimestampValidationException', '(', '""The current time is ahead of the expiration time in Timestamp""', ')', ';', '}', '}']","['void', 'validateExpirationTime', '(', 'Date', 'expires', ',', 'long', 'maxClockSkew', ')', 'throws', 'TimestampValidationCallback', '{', 'getGMTDateWithSkewAdjusted', '(', 'GregorianCalendar', '(', ')', ',', 'maxClockSkew', ',', 'false', ')', ';', 'if', '(', '(', 'currentTime', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",51,36,6,399,186,28,57.41239892183289,33.33333333333333,,,,-1,-1,-1,-1,False
L284_commitAndForget_1.txt,code2seq,METHOD_NAME,token_wrong,0.8136,0.9583,23.6212,29.4986,"{'n_total': 340, 'n_valid': 40, 'n_correct': 34}",86.95387,"public static void commitAndForget(@NonNull Object object) { try { commit(object); } catch (IOException e) { log.log(Level.WARNING, ""Failed to save "" + object.getClass() + "": "" + object.toString(), e); } }","void commitAndForget(Object object){try{}catch(IOException e){log(Level,""save""+"""");}}","['public', 'static', 'void', 'commitAndForget', '(', '@', 'NonNull', 'Object', 'object', ')', '{', 'try', '{', 'commit', '(', 'object', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'log', '(', 'Level', '.', 'WARNING', ',', '""Failed to save ""', '+', 'object', '.', 'getClass', '(', ')', '+', '"": ""', '+', 'object', '.', 'toString', '(', ')', ',', 'e', ')', ';', '}', '}']","['void', 'commitAndForget', '(', 'Object', 'object', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '(', 'Level', ',', '""save""', '+', '""""', ')', ';', '}', '}']",54,27,6,205,85,21,65.21739130434783,56.25,,,,-1,-1,-1,-1,False
L285_testDeleteInstance_1.txt,code2seq,METHOD_NAME,token_wrong,0.454,0.5811,9.5897,8.6935,"{'n_total': 994, 'n_valid': 99, 'n_correct': 60}",223.842292,"@Test public void testDeleteInstance() throws Exception { RowSnapshot<TaskLists> taskList = new VirtualRowSnapshot<>(new LocalTaskListsTable(mAuthority)); Table<Tasks> taskTable = new TaskListScoped(taskList, new TasksTable(mAuthority)); Table<Instances> instancesTable = new InstanceTable(mAuthority); RowSnapshot<Tasks> task = new VirtualRowSnapshot<>(taskTable); OperationsQueue queue = new BasicOperationsQueue(mClient); queue.enqueue(new Seq<>(new Put<>(taskList, new NameData(""list1"")), new Put<>(task, new TitleData(""task1"")))); queue.flush(); assertThat(new SingletonIterable<>(new BulkDelete<>(instancesTable, new ReferringTo<>(Instances.TASK_ID, task))), resultsIn(queue, new AssertEmptyTable<>(new TasksTable(mAuthority)), new AssertEmptyTable<>(new InstanceTable(mAuthority)))); }","void testDeleteInstance()throws Exception{RowSnapshot<TaskLists>taskList=new VirtualRowSnapshot(new LocalTaskListsTable(mAuthority));Table<Tasks>taskTable=(taskList)instancesTable(new Seq(new Put(NameData()),new Put<>((""""))));assertThat(new SingletonIterable<>(new BulkDelete<>(ReferringTo())),resultsIn((TasksTable()),new AssertEmptyTable<>((mAuthority))));}","['@', 'Test', 'public', 'void', 'testDeleteInstance', '(', ')', 'throws', 'Exception', '{', 'RowSnapshot', '<', 'TaskLists', '>', 'taskList', '=', 'new', 'VirtualRowSnapshot', '<', '>', '(', 'new', 'LocalTaskListsTable', '(', 'mAuthority', ')', ')', ';', 'Table', '<', 'Tasks', '>', 'taskTable', '=', 'new', 'TaskListScoped', '(', 'taskList', ',', 'new', 'TasksTable', '(', 'mAuthority', ')', ')', ';', 'Table', '<', 'Instances', '>', 'instancesTable', '=', 'new', 'InstanceTable', '(', 'mAuthority', ')', ';', 'RowSnapshot', '<', 'Tasks', '>', 'task', '=', 'new', 'VirtualRowSnapshot', '<', '>', '(', 'taskTable', ')', ';', 'OperationsQueue', 'queue', '=', 'new', 'BasicOperationsQueue', '(', 'mClient', ')', ';', 'queue', '.', 'enqueue', '(', 'new', 'Seq', '<', '>', '(', 'new', 'Put', '<', '>', '(', 'taskList', ',', 'new', 'NameData', '(', '""list1""', ')', ')', ',', 'new', 'Put', '<', '>', '(', 'task', ',', 'new', 'TitleData', '(', '""task1""', ')', ')', ')', ')', ';', 'queue', '.', 'flush', '(', ')', ';', 'assertThat', '(', 'new', 'SingletonIterable', '<', '>', '(', 'new', 'BulkDelete', '<', '>', '(', 'instancesTable', ',', 'new', 'ReferringTo', '<', '>', '(', 'Instances', '.', 'TASK_ID', ',', 'task', ')', ')', ')', ',', 'resultsIn', '(', 'queue', ',', 'new', 'AssertEmptyTable', '<', '>', '(', 'new', 'TasksTable', '(', 'mAuthority', ')', ')', ',', 'new', 'AssertEmptyTable', '<', '>', '(', 'new', 'InstanceTable', '(', 'mAuthority', ')', ')', ')', ')', ';', '}']","['void', 'testDeleteInstance', '(', ')', 'throws', 'Exception', '{', 'RowSnapshot', '<', 'TaskLists', '>', 'taskList', '=', 'new', 'VirtualRowSnapshot', '(', 'new', 'LocalTaskListsTable', '(', 'mAuthority', ')', ')', ';', 'Table', '<', 'Tasks', '>', 'taskTable', '=', '(', 'taskList', ')', 'instancesTable', '(', 'new', 'Seq', '(', 'new', 'Put', '(', 'NameData', '(', ')', ')', ',', 'new', 'Put', '<', '>', '(', '(', '""""', ')', ')', ')', ')', ';', 'assertThat', '(', 'new', 'SingletonIterable', '<', '>', '(', 'new', 'BulkDelete', '<', '>', '(', 'ReferringTo', '(', ')', ')', ')', ',', 'resultsIn', '(', '(', 'TasksTable', '(', ')', ')', ',', 'new', 'AssertEmptyTable', '<', '>', '(', '(', 'mAuthority', ')', ')', ')', ')', ';', '}']",185,96,6,792,359,24,56.380208333333336,49.72067039106145,,,,-1,-1,-1,-1,False
L286_visit_1.txt,code2seq,METHOD_NAME,token_wrong,0.9343,0.7546,4.627,2.3252,"{'n_total': 225, 'n_valid': 20, 'n_correct': 18}",48.031832,"public ModuleMetricsVisitor visit(String moduleName, String methodName) { try { enter(); return visitCriticalSection(moduleName, methodName); } finally { exit(); } }","ModuleMetricsVisitor visit(String moduleName,String methodName){try{enter();visitCriticalSection(moduleName,methodName);}finally{}}","['public', 'ModuleMetricsVisitor', 'visit', '(', 'String', 'moduleName', ',', 'String', 'methodName', ')', '{', 'try', '{', 'enter', '(', ')', ';', 'return', 'visitCriticalSection', '(', 'moduleName', ',', 'methodName', ')', ';', '}', 'finally', '{', 'exit', '(', ')', ';', '}', '}']","['ModuleMetricsVisitor', 'visit', '(', 'String', 'moduleName', ',', 'String', 'methodName', ')', '{', 'try', '{', 'enter', '(', ')', ';', 'visitCriticalSection', '(', 'moduleName', ',', 'methodName', ')', ';', '}', 'finally', '{', '}', '}']",34,28,6,165,131,11,22.07792207792208,21.428571428571427,,,,-1,-1,-1,-1,False
L287_throwIfLeaked_1.txt,code2seq,METHOD_NAME,token_wrong,0.5479,0.4232,12.9909,13.748,"{'n_total': 118, 'n_valid': 15, 'n_correct': 11}",32.823172,private void throwIfLeaked() { if (mLeaked) { throw new IllegalStateException(); } },void throwIfLeaked(){if(mLeaked){new IllegalStateException();}},"['private', 'void', 'throwIfLeaked', '(', ')', '{', 'if', '(', 'mLeaked', ')', '{', 'throw', 'new', 'IllegalStateException', '(', ')', ';', '}', '}']","['void', 'throwIfLeaked', '(', ')', '{', 'if', '(', 'mLeaked', ')', '{', 'new', 'IllegalStateException', '(', ')', ';', '}', '}']",19,17,6,84,63,19,32.30769230769231,15.384615384615385,,,,-1,-1,-1,-1,False
L288_sentencesAcceptJson_1.txt,code2seq,METHOD_NAME,token_wrong,0.5702,0.7696,22.5535,26.8038,"{'n_total': 462, 'n_valid': 38, 'n_correct': 34}",85.967837,"@Test public void sentencesAcceptJson() throws Exception { ResponseEntity<String> result = rest.exchange(RequestEntity.get(new URI(""/sentences"")).accept(MediaType.APPLICATION_JSON).build(), String.class); assertThat(result.getBody()).isEqualTo(""[[\""go\"",\""home\""],[\""come\"",\""back\""]]""); assertThat(result.getHeaders().getContentType()).isGreaterThanOrEqualTo(MediaType.APPLICATION_JSON); }","void sentencesAcceptJson()throws Exception{ResponseEntity<String>result=exchange(((""sentences"")).accept(),String);(result).isEqualTo("""");(result()).isGreaterThanOrEqualTo();}","['@', 'Test', 'public', 'void', 'sentencesAcceptJson', '(', ')', 'throws', 'Exception', '{', 'ResponseEntity', '<', 'String', '>', 'result', '=', 'rest', '.', 'exchange', '(', 'RequestEntity', '.', 'get', '(', 'new', 'URI', '(', '""/sentences""', ')', ')', '.', 'accept', '(', 'MediaType', '.', 'APPLICATION_JSON', ')', '.', 'build', '(', ')', ',', 'String', '.', 'class', ')', ';', 'assertThat', '(', 'result', '.', 'getBody', '(', ')', ')', '.', 'isEqualTo', '(', '""[[\\""go\\"",\\""home\\""],[\\""come\\"",\\""back\\""]]""', ')', ';', 'assertThat', '(', 'result', '.', 'getHeaders', '(', ')', '.', 'getContentType', '(', ')', ')', '.', 'isGreaterThanOrEqualTo', '(', 'MediaType', '.', 'APPLICATION_JSON', ')', ';', '}']","['void', 'sentencesAcceptJson', '(', ')', 'throws', 'Exception', '{', 'ResponseEntity', '<', 'String', '>', 'result', '=', 'exchange', '(', '(', '(', '""sentences""', ')', ')', '.', 'accept', '(', ')', ',', 'String', ')', ';', '(', 'result', ')', '.', 'isEqualTo', '(', '""""', ')', ';', '(', 'result', '(', ')', ')', '.', 'isGreaterThanOrEqualTo', '(', ')', ';', '}']",82,48,6,390,174,25,59.178082191780824,44.73684210526316,,,,-1,-1,-1,-1,False
L289_moveTo_1.txt,code2seq,METHOD_NAME,token_wrong,0.6166,0.3563,6.0467,4.8218,"{'n_total': 207, 'n_valid': 18, 'n_correct': 16}",40.916725,"public void moveTo(char[] chars) { while (!isInArray(peek(), chars) && !isEndOfText()) { moveAhead(); } }",void moveTo(char[]chars){while(!isInArray()&isEndOfText){moveAhead();}},"['public', 'void', 'moveTo', '(', 'char', '[', ']', 'chars', ')', '{', 'while', '(', '!', 'isInArray', '(', 'peek', '(', ')', ',', 'chars', ')', '&&', '!', 'isEndOfText', '(', ')', ')', '{', 'moveAhead', '(', ')', ';', '}', '}']","['void', 'moveTo', '(', 'char', '[', ']', 'chars', ')', '{', 'while', '(', '!', 'isInArray', '(', ')', '&', 'isEndOfText', ')', '{', 'moveAhead', '(', ')', ';', '}', '}']",34,25,6,105,71,12,36.55913978494624,32.142857142857146,,,,-1,-1,-1,-1,False
L290_unheritPropertyValues_1.txt,code2seq,METHOD_NAME,token_wrong,0.5571,0.6065,22.8232,23.3417,"{'n_total': 296, 'n_valid': 29, 'n_correct': 25}",66.044425,"private static void unheritPropertyValues(AMIdentity group, AMIdentity agent) throws SMSException, SSOException, IdRepoException { Set attributeSchemas = getAttributesSchemaNames(group); Map groupProperties = group.getAttributes(); Map map = new CaseInsensitiveHashMap(); map.putAll(groupProperties); map.putAll(agent.getAttributes()); agent.setAttributes(correctAttributeNames(map, attributeSchemas)); agent.store(); }","void unheritPropertyValues(AMIdentity group,AMIdentity agent){(getAttributes());setAttributes(correctAttributeNames());store();}","['private', 'static', 'void', 'unheritPropertyValues', '(', 'AMIdentity', 'group', ',', 'AMIdentity', 'agent', ')', 'throws', 'SMSException', ',', 'SSOException', ',', 'IdRepoException', '{', 'Set', 'attributeSchemas', '=', 'getAttributesSchemaNames', '(', 'group', ')', ';', 'Map', 'groupProperties', '=', 'group', '.', 'getAttributes', '(', ')', ';', 'Map', 'map', '=', 'new', 'CaseInsensitiveHashMap', '(', ')', ';', 'map', '.', 'putAll', '(', 'groupProperties', ')', ';', 'map', '.', 'putAll', '(', 'agent', '.', 'getAttributes', '(', ')', ')', ';', 'agent', '.', 'setAttributes', '(', 'correctAttributeNames', '(', 'map', ',', 'attributeSchemas', ')', ')', ';', 'agent', '.', 'store', '(', ')', ';', '}']","['void', 'unheritPropertyValues', '(', 'AMIdentity', 'group', ',', 'AMIdentity', 'agent', ')', '{', '(', 'getAttributes', '(', ')', ')', ';', 'setAttributes', '(', 'correctAttributeNames', '(', ')', ')', ';', 'store', '(', ')', ';', '}']",80,28,6,419,128,27,74.23469387755102,70.27027027027027,,,,-1,-1,-1,-1,False
L291_updateExternalLdapConfiguration_1.txt,code2seq,METHOD_NAME,token_wrong,0.3402,0.3105,27.416,30.3719,"{'n_total': 988, 'n_valid': 89, 'n_correct': 54}",187.120021,"@Override public void updateExternalLdapConfiguration(ModifiedProperty<String> hosts, ModifiedProperty<String> username, ModifiedProperty<String> password, ModifiedProperty<String> maxConnections, ModifiedProperty<Boolean> sslMode, ModifiedProperty<Integer> heartbeat) { hosts.set(SystemProperties.get(STORE_HOSTNAME)); username.set(SystemProperties.get(STORE_USERNAME)); password.set(AMPasswordUtil.decrypt(SystemProperties.get(STORE_PASSWORD))); maxConnections.set(SystemProperties.get(STORE_MAX_CONNECTIONS)); sslMode.set(SystemProperties.getAsBoolean(STORE_SSL_ENABLED, false)); heartbeat.set(SystemProperties.getAsInt(STORE_HEARTBEAT, -1)); }","void updateExternalLdapConfiguration(ModifiedProperty<String>hosts,ModifiedProperty<String>username,ModifiedProperty<String>password,ModifiedProperty<String>maxConnections,ModifiedProperty<Boolean>sslMode,ModifiedProperty<Integer>heartbeat){(SystemProperties());(SystemProperties());(((PASSWORD)));((CONNECTIONS));((_));((1));}","['@', 'Override', 'public', 'void', 'updateExternalLdapConfiguration', '(', 'ModifiedProperty', '<', 'String', '>', 'hosts', ',', 'ModifiedProperty', '<', 'String', '>', 'username', ',', 'ModifiedProperty', '<', 'String', '>', 'password', ',', 'ModifiedProperty', '<', 'String', '>', 'maxConnections', ',', 'ModifiedProperty', '<', 'Boolean', '>', 'sslMode', ',', 'ModifiedProperty', '<', 'Integer', '>', 'heartbeat', ')', '{', 'hosts', '.', 'set', '(', 'SystemProperties', '.', 'get', '(', 'STORE_HOSTNAME', ')', ')', ';', 'username', '.', 'set', '(', 'SystemProperties', '.', 'get', '(', 'STORE_USERNAME', ')', ')', ';', 'password', '.', 'set', '(', 'AMPasswordUtil', '.', 'decrypt', '(', 'SystemProperties', '.', 'get', '(', 'STORE_PASSWORD', ')', ')', ')', ';', 'maxConnections', '.', 'set', '(', 'SystemProperties', '.', 'get', '(', 'STORE_MAX_CONNECTIONS', ')', ')', ';', 'sslMode', '.', 'set', '(', 'SystemProperties', '.', 'getAsBoolean', '(', 'STORE_SSL_ENABLED', ',', 'false', ')', ')', ';', 'heartbeat', '.', 'set', '(', 'SystemProperties', '.', 'getAsInt', '(', 'STORE_HEARTBEAT', ',', '-', '1', ')', ')', ';', '}']","['void', 'updateExternalLdapConfiguration', '(', 'ModifiedProperty', '<', 'String', '>', 'hosts', ',', 'ModifiedProperty', '<', 'String', '>', 'username', ',', 'ModifiedProperty', '<', 'String', '>', 'password', ',', 'ModifiedProperty', '<', 'String', '>', 'maxConnections', ',', 'ModifiedProperty', '<', 'Boolean', '>', 'sslMode', ',', 'ModifiedProperty', '<', 'Integer', '>', 'heartbeat', ')', '{', '(', 'SystemProperties', '(', ')', ')', ';', '(', 'SystemProperties', '(', ')', ')', ';', '(', '(', '(', 'PASSWORD', ')', ')', ')', ';', '(', '(', 'CONNECTIONS', ')', ')', ';', '(', '(', '_', ')', ')', ';', '(', '(', '1', ')', ')', ';', '}']",126,79,6,647,327,37,52.459016393442624,39.166666666666664,,,,-1,-1,-1,-1,False
L292_getItemGrading_1.txt,code2seq,METHOD_NAME,token_wrong,0.8998,0.7764,11.7228,12.1791,"{'n_total': 362, 'n_valid': 27, 'n_correct': 25}",61.870362,"public ItemGradingData getItemGrading(String itemGradingId) { try { return PersistenceService.getInstance().getAssessmentGradingFacadeQueries().getItemGrading(Long.valueOf(itemGradingId)); } catch (Exception e) { log.error(e.getMessage(), e); throw new Error(e); } }",ItemGradingData getItemGrading(String itemGradingId){try{getAssessmentGradingFacadeQueries().getItemGrading((itemGradingId));}catch(Exception e){(e);(e);}},"['public', 'ItemGradingData', 'getItemGrading', '(', 'String', 'itemGradingId', ')', '{', 'try', '{', 'return', 'PersistenceService', '.', 'getInstance', '(', ')', '.', 'getAssessmentGradingFacadeQueries', '(', ')', '.', 'getItemGrading', '(', 'Long', '.', 'valueOf', '(', 'itemGradingId', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', '}']","['ItemGradingData', 'getItemGrading', '(', 'String', 'itemGradingId', ')', '{', 'try', '{', 'getAssessmentGradingFacadeQueries', '(', ')', '.', 'getItemGrading', '(', '(', 'itemGradingId', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '(', 'e', ')', ';', '(', 'e', ')', ';', '}', '}']",60,37,6,266,155,20,45.1219512195122,42.592592592592595,,,,-1,-1,-1,-1,False
L293_nameOf_1.txt,code2seq,METHOD_NAME,token_wrong,0.906,0.7189,20.1549,17.241,"{'n_total': 244, 'n_valid': 26, 'n_correct': 22}",56.218138,"public static String nameOf(int columnType) { final int index = typeNameMap.keyIndex(columnType); if (index > -1) { return ""unknown""; } return typeNameMap.valueAt(index); }","String nameOf(int columnType){index=typeNameMap.keyIndex();if(index){"""";}(index);}","['public', 'static', 'String', 'nameOf', '(', 'int', 'columnType', ')', '{', 'final', 'int', 'index', '=', 'typeNameMap', '.', 'keyIndex', '(', 'columnType', ')', ';', 'if', '(', 'index', '>', '-', '1', ')', '{', 'return', '""unknown""', ';', '}', 'return', 'typeNameMap', '.', 'valueAt', '(', 'index', ')', ';', '}']","['String', 'nameOf', '(', 'int', 'columnType', ')', '{', 'index', '=', 'typeNameMap', '.', 'keyIndex', '(', ')', ';', 'if', '(', 'index', ')', '{', '""""', ';', '}', '(', 'index', ')', ';', '}']",41,28,6,172,82,12,56.25,37.142857142857146,,,,-1,-1,-1,-1,False
L294_addSave_1.txt,code2seq,METHOD_NAME,token_wrong,0.7655,0.5339,15.0053,11.7658,"{'n_total': 369, 'n_valid': 45, 'n_correct': 31}",94.014262,"public void addSave(Forum forum) { RoleManager roleManager = this.userSession.getRoleManager(); if (roleManager.isAdministrator() || roleManager.isCategoryAllowed(forum.getCategory().getId())) { this.forumService.add(forum); this.result.include(""forum"", forum); } this.result.redirectTo(this).list(); }","void addSave(){userSession();if(roleManager()|(forum().getId())){forumService.add;include(""forum"",forum);}list();}","['public', 'void', 'addSave', '(', 'Forum', 'forum', ')', '{', 'RoleManager', 'roleManager', '=', 'this', '.', 'userSession', '.', 'getRoleManager', '(', ')', ';', 'if', '(', 'roleManager', '.', 'isAdministrator', '(', ')', '||', 'roleManager', '.', 'isCategoryAllowed', '(', 'forum', '.', 'getCategory', '(', ')', '.', 'getId', '(', ')', ')', ')', '{', 'this', '.', 'forumService', '.', 'add', '(', 'forum', ')', ';', 'this', '.', 'result', '.', 'include', '(', '""forum""', ',', 'forum', ')', ';', '}', 'this', '.', 'result', '.', 'redirectTo', '(', 'this', ')', '.', 'list', '(', ')', ';', '}']","['void', 'addSave', '(', ')', '{', 'userSession', '(', ')', ';', 'if', '(', 'roleManager', '(', ')', '|', '(', 'forum', '(', ')', '.', 'getId', '(', ')', ')', ')', '{', 'forumService', '.', 'add', ';', 'include', '(', '""forum""', ',', 'forum', ')', ';', '}', 'list', '(', ')', ';', '}']",78,43,6,302,114,13,65.05190311418684,48.61111111111111,,,,-1,-1,-1,-1,False
L295_prepareStmtInoutParam_1.txt,code2seq,METHOD_NAME,token_wrong,0.663,0.5307,39.0109,32.9612,"{'n_total': 265, 'n_valid': 44, 'n_correct': 19}",88.626429,"@Test public void prepareStmtInoutParam() throws SQLException { Assume.assumeTrue(sharedUsePrepare()); PreparedStatement preparedStatement = sharedConnection.prepareStatement(""{call inOutParam(?)}""); preparedStatement.setInt(1, 1); preparedStatement.execute(); }","void prepareStmtInoutParam()throws SQLException{Assume.assumeTrue(sharedUsePrepare);PreparedStatement(""call inOutParam"");setInt();execute();}","['@', 'Test', 'public', 'void', 'prepareStmtInoutParam', '(', ')', 'throws', 'SQLException', '{', 'Assume', '.', 'assumeTrue', '(', 'sharedUsePrepare', '(', ')', ')', ';', 'PreparedStatement', 'preparedStatement', '=', 'sharedConnection', '.', 'prepareStatement', '(', '""{call inOutParam(?)}""', ')', ';', 'preparedStatement', '.', 'setInt', '(', '1', ',', '1', ')', ';', 'preparedStatement', '.', 'execute', '(', ')', ';', '}']","['void', 'prepareStmtInoutParam', '(', ')', 'throws', 'SQLException', '{', 'Assume', '.', 'assumeTrue', '(', 'sharedUsePrepare', ')', ';', 'PreparedStatement', '(', '""call inOutParam""', ')', ';', 'setInt', '(', ')', ';', 'execute', '(', ')', ';', '}']",45,28,6,262,141,27,51.48936170212765,43.58974358974359,,,,-1,-1,-1,-1,False
L296_testNoRequestPayload_1.txt,code2seq,METHOD_NAME,token_wrong,0.4944,0.4968,22.0008,18.1492,"{'n_total': 369, 'n_valid': 57, 'n_correct': 26}",118.23253,"@Test public void testNoRequestPayload() throws Exception { endpoint = createNoRequestPayloadEndpoint(); MessageContext context = new DefaultMessageContext(new MockWebServiceMessage((StringBuilder) null), new MockWebServiceMessageFactory()); endpoint.invoke(context); assertFalse(""Response message created"", context.hasResponse()); }","void testNoRequestPayload(){endpoint=createNoRequestPayloadEndpoint;context(((StringBuilder)null),MockWebServiceMessageFactory()).invoke(context);assertFalse(""Response"",context.hasResponse());}","['@', 'Test', 'public', 'void', 'testNoRequestPayload', '(', ')', 'throws', 'Exception', '{', 'endpoint', '=', 'createNoRequestPayloadEndpoint', '(', ')', ';', 'MessageContext', 'context', '=', 'new', 'DefaultMessageContext', '(', 'new', 'MockWebServiceMessage', '(', '(', 'StringBuilder', ')', 'null', ')', ',', 'new', 'MockWebServiceMessageFactory', '(', ')', ')', ';', 'endpoint', '.', 'invoke', '(', 'context', ')', ';', 'assertFalse', '(', '""Response message created""', ',', 'context', '.', 'hasResponse', '(', ')', ')', ';', '}']","['void', 'testNoRequestPayload', '(', ')', '{', 'endpoint', '=', 'createNoRequestPayloadEndpoint', ';', 'context', '(', '(', '(', 'StringBuilder', ')', 'null', ')', ',', 'MockWebServiceMessageFactory', '(', ')', ')', '.', 'invoke', '(', 'context', ')', ';', 'assertFalse', '(', '""Response""', ',', 'context', '.', 'hasResponse', '(', ')', ')', ';', '}']",56,40,6,333,193,26,45.60260586319218,32.0,,,,-1,-1,-1,-1,False
L297_formatHighLows_2.txt,code2seq,METHOD_NAME,token_wrong,0.9844,0.9695,9.6595,11.6153,"{'n_total': 264, 'n_valid': 35, 'n_correct': 30}",76.50652,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){(low);formatTemperature();highLowStr="""";}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', '(', 'low', ')', ';', 'formatTemperature', '(', ')', ';', 'highLowStr', '=', '""""', ';', '}']",68,26,6,356,103,20,75.29761904761905,67.74193548387096,,,,-1,-1,-1,-1,False
L298_generateConstructorParamValue_1.txt,code2seq,METHOD_NAME,token_wrong,0.8772,0.661,35.0787,35.0836,"{'n_total': 191, 'n_valid': 25, 'n_correct': 22}",54.019017,private Object generateConstructorParamValue(Property property) { if (property.hasRelationFunction() && processor != null) { return property.getValue(processor); } else { return property.getValue(); } },Object generateConstructorParamValue(Property property){if(property){getValue();}{}},"['private', 'Object', 'generateConstructorParamValue', '(', 'Property', 'property', ')', '{', 'if', '(', 'property', '.', 'hasRelationFunction', '(', ')', '&&', 'processor', '!=', 'null', ')', '{', 'return', 'property', '.', 'getValue', '(', 'processor', ')', ';', '}', 'else', '{', 'return', 'property', '.', 'getValue', '(', ')', ';', '}', '}']","['Object', 'generateConstructorParamValue', '(', 'Property', 'property', ')', '{', 'if', '(', 'property', ')', '{', 'getValue', '(', ')', ';', '}', '{', '}', '}']",41,20,6,202,84,35,70.65868263473054,60.0,,,,-1,-1,-1,-1,False
L299_add_1.txt,code2seq,METHOD_NAME,token_wrong,0.3605,0.3018,2.7041,2.6539,"{'n_total': 328, 'n_valid': 47, 'n_correct': 28}",100.420578,"@Override public void add(Record record) { long row = record.getRowId(); DirectMapValues prevValues = MapUtils.getMapValues(prevMap, record, partitionBy); if (!prevValues.isNew()) { map.locate(prevValues.getLong(0)); map.getOrCreateValues().putLong(0, row); } prevValues.putLong(0, row); }","@Override void add(Record record){getRowId(prevMap,record,partitionBy);if(prevValues){putLong(0,row);}prevValues();}","['@', 'Override', 'public', 'void', 'add', '(', 'Record', 'record', ')', '{', 'long', 'row', '=', 'record', '.', 'getRowId', '(', ')', ';', 'DirectMapValues', 'prevValues', '=', 'MapUtils', '.', 'getMapValues', '(', 'prevMap', ',', 'record', ',', 'partitionBy', ')', ';', 'if', '(', '!', 'prevValues', '.', 'isNew', '(', ')', ')', '{', 'map', '.', 'locate', '(', 'prevValues', '.', 'getLong', '(', '0', ')', ')', ';', 'map', '.', 'getOrCreateValues', '(', ')', '.', 'putLong', '(', '0', ',', 'row', ')', ';', '}', 'prevValues', '.', 'putLong', '(', '0', ',', 'row', ')', ';', '}']","['@', 'Override', 'void', 'add', '(', 'Record', 'record', ')', '{', 'getRowId', '(', 'prevMap', ',', 'record', ',', 'partitionBy', ')', ';', 'if', '(', 'prevValues', ')', '{', 'putLong', '(', '0', ',', 'row', ')', ';', '}', 'prevValues', '(', ')', ';', '}']",79,36,6,289,116,9,61.78571428571429,58.9041095890411,,,,-1,-1,-1,-1,False
L300_setEncryptedAttribute_1.txt,code2seq,METHOD_NAME,token_wrong,0.8149,0.7939,9.5035,10.0388,"{'n_total': 252, 'n_valid': 30, 'n_correct': 22}",63.296912,"@Override public void setEncryptedAttribute(List value) throws SAML2Exception { if (!mutable) { throw new SAML2Exception(SAML2SDKUtils.bundle.getString(""objectImmutable"")); } encAttrs = value; }","void setEncryptedAttribute(List value)throws Exception{if(mutable){(SAML(""""));}encAttrs=value;}","['@', 'Override', 'public', 'void', 'setEncryptedAttribute', '(', 'List', 'value', ')', 'throws', 'SAML2Exception', '{', 'if', '(', '!', 'mutable', ')', '{', 'throw', 'new', 'SAML2Exception', '(', 'SAML2SDKUtils', '.', 'bundle', '.', 'getString', '(', '""objectImmutable""', ')', ')', ';', '}', 'encAttrs', '=', 'value', ';', '}']","['void', 'setEncryptedAttribute', '(', 'List', 'value', ')', 'throws', 'Exception', '{', 'if', '(', 'mutable', ')', '{', '(', 'SAML', '(', '""""', ')', ')', ';', '}', 'encAttrs', '=', 'value', ';', '}']",38,27,6,194,95,27,59.2814371257485,34.375,,,,-1,-1,-1,-1,False
L301_processPvtMsgCancel_1.txt,code2seq,METHOD_NAME,token_wrong,0.6219,0.6999,29.339,30.8046,"{'n_total': 235, 'n_valid': 48, 'n_correct': 17}",96.606238,"public String processPvtMsgCancel() { log.debug(""processPvtMsgCancel()""); if (isMessagesandForums()) { return MAIN_PG; } else { return MESSAGE_HOME_PG; } }","String processPvtMsgCancel(){debug(""processPvtMsgCancel"");if(isMessagesandForums()){return MAIN_PG;}{return MESSAGE_HOME_PG;}}","['public', 'String', 'processPvtMsgCancel', '(', ')', '{', 'log', '.', 'debug', '(', '""processPvtMsgCancel()""', ')', ';', 'if', '(', 'isMessagesandForums', '(', ')', ')', '{', 'return', 'MAIN_PG', ';', '}', 'else', '{', 'return', 'MESSAGE_HOME_PG', ';', '}', '}']","['String', 'processPvtMsgCancel', '(', ')', '{', 'debug', '(', '""processPvtMsgCancel""', ')', ';', 'if', '(', 'isMessagesandForums', '(', ')', ')', '{', 'return', 'MAIN_PG', ';', '}', '{', 'return', 'MESSAGE_HOME_PG', ';', '}', '}']",31,27,6,155,126,25,22.30769230769231,16.0,,,,-1,-1,-1,-1,False
L302_createPropertyModel_2.txt,code2seq,METHOD_NAME,token_wrong,0.4243,0.3519,14.2032,16.8803,"{'n_total': 376, 'n_valid': 43, 'n_correct': 35}",94.049863,"protected void createPropertyModel() { retrieveCommonProperties(); if (isHosted()) { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2PEPHosted.xml"")); } else { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2PEPRemote.xml"")); } psModel.clear(); }","void createPropertyModel(){retrieveCommonProperties();if(isHosted){psModel=AMPropertySheetModel(getResourceAsStream(""""));}{psModel=AMPropertySheetModel((""""));}psModel.clear();}","['protected', 'void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', '(', ')', ')', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2PEPHosted.xml""', ')', ')', ';', '}', 'else', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2PEPRemote.xml""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']","['void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', ')', '{', 'psModel', '=', 'AMPropertySheetModel', '(', 'getResourceAsStream', '(', '""""', ')', ')', ';', '}', '{', 'psModel', '=', 'AMPropertySheetModel', '(', '(', '""""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']",66,43,6,396,176,25,59.299191374663074,38.333333333333336,,,,-1,-1,-1,-1,False
L303_recordEventAsync_1.txt,code2seq,METHOD_NAME,token_wrong,0.4585,0.6203,13.4495,11.4762,"{'n_total': 229, 'n_valid': 35, 'n_correct': 25}",71.726221,@Override public void recordEventAsync(StramEvent ev) { apexPluginDispatcher.dispatch(new DAGExecutionEvent.StramExecutionEvent(ev)); if (eventBus != null) { eventBus.publishAsync(ev); } },void recordEventAsync(){(DAGExecutionEvent());if(eventBus){eventBus.publishAsync();}},"['@', 'Override', 'public', 'void', 'recordEventAsync', '(', 'StramEvent', 'ev', ')', '{', 'apexPluginDispatcher', '.', 'dispatch', '(', 'new', 'DAGExecutionEvent', '.', 'StramExecutionEvent', '(', 'ev', ')', ')', ';', 'if', '(', 'eventBus', '!=', 'null', ')', '{', 'eventBus', '.', 'publishAsync', '(', 'ev', ')', ';', '}', '}']","['void', 'recordEventAsync', '(', ')', '{', '(', 'DAGExecutionEvent', '(', ')', ')', ';', 'if', '(', 'eventBus', ')', '{', 'eventBus', '.', 'publishAsync', '(', ')', ';', '}', '}']",39,24,6,188,85,22,62.048192771084345,45.45454545454545,,,,-1,-1,-1,-1,False
L304_lookup_1.txt,code2seq,METHOD_NAME,token_wrong,0.6936,0.5336,7.6993,10.0967,"{'n_total': 247, 'n_valid': 40, 'n_correct': 25}",85.408897,public ServiceRegistration lookup(URI serviceURI) { ServiceAuthority serviceAuthority = entries.get(serviceURI.getAuthority()); if (serviceAuthority != null) { ServiceRegistration serviceRegistration = serviceAuthority.lookup(serviceURI); return serviceRegistration; } return null; },ServiceRegistration lookup(URI serviceURI){ServiceAuthority serviceAuthority=entries();if(serviceAuthority=null){}},"['public', 'ServiceRegistration', 'lookup', '(', 'URI', 'serviceURI', ')', '{', 'ServiceAuthority', 'serviceAuthority', '=', 'entries', '.', 'get', '(', 'serviceURI', '.', 'getAuthority', '(', ')', ')', ';', 'if', '(', 'serviceAuthority', '!=', 'null', ')', '{', 'ServiceRegistration', 'serviceRegistration', '=', 'serviceAuthority', '.', 'lookup', '(', 'serviceURI', ')', ';', 'return', 'serviceRegistration', ';', '}', 'return', 'null', ';', '}']","['ServiceRegistration', 'lookup', '(', 'URI', 'serviceURI', ')', '{', 'ServiceAuthority', 'serviceAuthority', '=', 'entries', '(', ')', ';', 'if', '(', 'serviceAuthority', '=', 'null', ')', '{', '}', '}']",47,23,6,283,115,12,61.99261992619927,58.536585365853654,,,,-1,-1,-1,-1,False
L305_parseFromInputStream_1.txt,code2seq,METHOD_NAME,token_wrong,0.8563,0.7422,21.4994,16.8844,"{'n_total': 343, 'n_valid': 46, 'n_correct': 34}",99.427637,"public EcoTopologyDefinition parseFromInputStream(InputStream inputStream, InputStream propsFile, boolean envFilter) throws Exception { Yaml yaml = topologyYaml(); if (inputStream == null) { throw new Exception(""Unable to load eco input stream""); } return loadTopologyFromYaml(yaml, inputStream, propsFile, envFilter); }","EcoTopologyDefinition parseFromInputStream(InputStream inputStream,boolean envFilter){if(null){("""");}loadTopologyFromYaml();}","['public', 'EcoTopologyDefinition', 'parseFromInputStream', '(', 'InputStream', 'inputStream', ',', 'InputStream', 'propsFile', ',', 'boolean', 'envFilter', ')', 'throws', 'Exception', '{', 'Yaml', 'yaml', '=', 'topologyYaml', '(', ')', ';', 'if', '(', 'inputStream', '==', 'null', ')', '{', 'throw', 'new', 'Exception', '(', '""Unable to load eco input stream""', ')', ';', '}', 'return', 'loadTopologyFromYaml', '(', 'yaml', ',', 'inputStream', ',', 'propsFile', ',', 'envFilter', ')', ';', '}']","['EcoTopologyDefinition', 'parseFromInputStream', '(', 'InputStream', 'inputStream', ',', 'boolean', 'envFilter', ')', '{', 'if', '(', 'null', ')', '{', '(', '""""', ')', ';', '}', 'loadTopologyFromYaml', '(', ')', ';', '}']",51,25,6,320,125,26,66.3265306122449,57.77777777777777,,,,-1,-1,-1,-1,False
L306_testInitialWhitespaceLine_1.txt,code2seq,METHOD_NAME,token_wrong,0.5658,0.4022,35.7004,34.0455,"{'n_total': 635, 'n_valid': 44, 'n_correct': 41}",98.519548,"private void testInitialWhitespaceLine(InternetHeaders ih) throws Exception { assertEquals(1, ih.getHeader(""Subject"").length); assertEquals(""test"", ih.getHeader(""Subject"")[0]); Enumeration<Header> e = ih.getAllHeaders(); while (e.hasMoreElements()) { Header h = e.nextElement(); assertEquals(""Subject"", h.getName()); assertEquals(""test"", h.getValue()); } }","void testInitialWhitespaceLine(InternetHeaders ih)throws Exception{assertEquals(1,(""""));assertEquals("""",("""")[0]);while(e){assertEquals("""",getName());assertEquals("""",h);}}","['private', 'void', 'testInitialWhitespaceLine', '(', 'InternetHeaders', 'ih', ')', 'throws', 'Exception', '{', 'assertEquals', '(', '1', ',', 'ih', '.', 'getHeader', '(', '""Subject""', ')', '.', 'length', ')', ';', 'assertEquals', '(', '""test""', ',', 'ih', '.', 'getHeader', '(', '""Subject""', ')', '[', '0', ']', ')', ';', 'Enumeration', '<', 'Header', '>', 'e', '=', 'ih', '.', 'getAllHeaders', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'Header', 'h', '=', 'e', '.', 'nextElement', '(', ')', ';', 'assertEquals', '(', '""Subject""', ',', 'h', '.', 'getName', '(', ')', ')', ';', 'assertEquals', '(', '""test""', ',', 'h', '.', 'getValue', '(', ')', ')', ';', '}', '}']","['void', 'testInitialWhitespaceLine', '(', 'InternetHeaders', 'ih', ')', 'throws', 'Exception', '{', 'assertEquals', '(', '1', ',', '(', '""""', ')', ')', ';', 'assertEquals', '(', '""""', ',', '(', '""""', ')', '[', '0', ']', ')', ';', 'while', '(', 'e', ')', '{', 'assertEquals', '(', '""""', ',', 'getName', '(', ')', ')', ';', 'assertEquals', '(', '""""', ',', 'h', ')', ';', '}', '}']",93,53,6,356,170,31,57.230769230769226,45.97701149425287,,,,-1,-1,-1,-1,False
L307_getModules_1.txt,code2seq,METHOD_NAME,token_wrong,0.8436,0.7032,13.689,8.2626,"{'n_total': 168, 'n_valid': 20, 'n_correct': 19}",46.65889,public synchronized List<ModuleDescriptor> getModules() { if (moduleDescriptors == null) { this.moduleDescriptors = createModuleDescriptor(); } return moduleDescriptors; },List getModules(){if(null){this.moduleDescriptors();}},"['public', 'synchronized', 'List', '<', 'ModuleDescriptor', '>', 'getModules', '(', ')', '{', 'if', '(', 'moduleDescriptors', '==', 'null', ')', '{', 'this', '.', 'moduleDescriptors', '=', 'createModuleDescriptor', '(', ')', ';', '}', 'return', 'moduleDescriptors', ';', '}']","['List', 'getModules', '(', ')', '{', 'if', '(', 'null', ')', '{', 'this', '.', 'moduleDescriptors', '(', ')', ';', '}', '}']",30,18,6,171,54,16,75.48387096774194,50.0,,,,-1,-1,-1,-1,False
L308_orthogonalizeVectors_1.txt,code2seq,METHOD_NAME,token_wrong,0.4689,0.43,8.6113,10.1387,"{'n_total': 573, 'n_valid': 81, 'n_correct': 38}",171.008121,"public static void orthogonalizeVectors(List<Vector> list) { switch(list.get(0).getVectorType()) { case REAL: RealVectorUtils.orthogonalizeVectors(list); break; case COMPLEX: ComplexVectorUtils.orthogonalizeVectors(list); break; case BINARY: BinaryVectorUtils.orthogonalizeVectors(list); break; default: throw new IncompatibleVectorsException(""Type not recognized: "" + list.get(0).getVectorType()); } }","void orthogonalizeVectors(List<Vector>list){switch(list(0).getVectorType()){case REAL:orthogonalizeVectors(list);orthogonalizeVectors(list);case BINARY:BinaryVectorUtilsorthogonalizeVectors(list);default:IncompatibleVectorsException(""""+get(0).getVectorType);}}","['public', 'static', 'void', 'orthogonalizeVectors', '(', 'List', '<', 'Vector', '>', 'list', ')', '{', 'switch', '(', 'list', '.', 'get', '(', '0', ')', '.', 'getVectorType', '(', ')', ')', '{', 'case', 'REAL', ':', 'RealVectorUtils', '.', 'orthogonalizeVectors', '(', 'list', ')', ';', 'break', ';', 'case', 'COMPLEX', ':', 'ComplexVectorUtils', '.', 'orthogonalizeVectors', '(', 'list', ')', ';', 'break', ';', 'case', 'BINARY', ':', 'BinaryVectorUtils', '.', 'orthogonalizeVectors', '(', 'list', ')', ';', 'break', ';', 'default', ':', 'throw', 'new', 'IncompatibleVectorsException', '(', '""Type not recognized: ""', '+', 'list', '.', 'get', '(', '0', ')', '.', 'getVectorType', '(', ')', ')', ';', '}', '}']","['void', 'orthogonalizeVectors', '(', 'List', '<', 'Vector', '>', 'list', ')', '{', 'switch', '(', 'list', '(', '0', ')', '.', 'getVectorType', '(', ')', ')', '{', 'case', 'REAL', ':', 'orthogonalizeVectors', '(', 'list', ')', ';', 'orthogonalizeVectors', '(', 'list', ')', ';', 'case', 'BINARY', ':', 'BinaryVectorUtilsorthogonalizeVectors', '(', 'list', ')', ';', 'default', ':', 'IncompatibleVectorsException', '(', '""""', '+', 'get', '(', '0', ')', '.', 'getVectorType', ')', ';', '}', '}']",84,59,6,402,260,26,37.765957446808514,32.05128205128205,,,,-1,-1,-1,-1,False
L309_appendInt_1.txt,code2seq,METHOD_NAME,token_wrong,0.4496,0.4996,8.3535,8.475,"{'n_total': 346, 'n_valid': 45, 'n_correct': 25}",93.245587,"static void appendInt(BBuffer headBuf, int length) throws IOException { headBuf.putByte((length & 0xFF000000) >> 24); headBuf.putByte((length & 0xFF0000) >> 16); headBuf.putByte((length & 0xFF00) >> 8); headBuf.putByte((length & 0xFF)); }","void appendInt(BBuffer headBuf,int length)throws IOException{putByte((length)6);headBuf.putByte((xFF)8);headBuf.putByte((length));}","['static', 'void', 'appendInt', '(', 'BBuffer', 'headBuf', ',', 'int', 'length', ')', 'throws', 'IOException', '{', 'headBuf', '.', 'putByte', '(', '(', 'length', '&', '0xFF000000', ')', '>', '>', '24', ')', ';', 'headBuf', '.', 'putByte', '(', '(', 'length', '&', '0xFF0000', ')', '>', '>', '16', ')', ';', 'headBuf', '.', 'putByte', '(', '(', 'length', '&', '0xFF00', ')', '>', '>', '8', ')', ';', 'headBuf', '.', 'putByte', '(', '(', 'length', '&', '0xFF', ')', ')', ';', '}']","['void', 'appendInt', '(', 'BBuffer', 'headBuf', ',', 'int', 'length', ')', 'throws', 'IOException', '{', 'putByte', '(', '(', 'length', ')', '6', ')', ';', 'headBuf', '.', 'putByte', '(', '(', 'xFF', ')', '8', ')', ';', 'headBuf', '.', 'putByte', '(', '(', 'length', ')', ')', ';', '}']",67,40,6,238,131,15,47.98206278026906,44.26229508196721,,,,-1,-1,-1,-1,False
L310_performAction_1.txt,code2seq,METHOD_NAME,token_wrong,0.4194,0.3598,15.1696,12.2927,"{'n_total': 242, 'n_valid': 26, 'n_correct': 14}",55.736051,@Override public void performAction(FileSet files) { TransferableFileSet tfs = new TransferableFileSet(files); tfs.setJavaFileListDataFlavorSupported(false); tfs.setTextUriFlavorSupported(false); tfs.setFileSetDataFlavorSupported(false); ClipboardSupport.setClipboardContents(tfs); },@Override void performAction(FileSet files){(files);(false);(false);(false);ClipboardSupport(tfs);},"['@', 'Override', 'public', 'void', 'performAction', '(', 'FileSet', 'files', ')', '{', 'TransferableFileSet', 'tfs', '=', 'new', 'TransferableFileSet', '(', 'files', ')', ';', 'tfs', '.', 'setJavaFileListDataFlavorSupported', '(', 'false', ')', ';', 'tfs', '.', 'setTextUriFlavorSupported', '(', 'false', ')', ';', 'tfs', '.', 'setFileSetDataFlavorSupported', '(', 'false', ')', ';', 'ClipboardSupport', '.', 'setClipboardContents', '(', 'tfs', ')', ';', '}']","['@', 'Override', 'void', 'performAction', '(', 'FileSet', 'files', ')', '{', '(', 'files', ')', ';', '(', 'false', ')', ';', '(', 'false', ')', ';', '(', 'false', ')', ';', 'ClipboardSupport', '(', 'tfs', ')', ';', '}']",48,31,6,283,99,19,69.6969696969697,40.476190476190474,,,,-1,-1,-1,-1,False
L311_saveLastNotificationTime_1.txt,code2seq,METHOD_NAME,token_wrong,0.8208,0.8082,6.4956,7.1367,"{'n_total': 258, 'n_valid': 35, 'n_correct': 22}",74.101591,"public static void saveLastNotificationTime(Context context, long timeOfNotification) { SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context); SharedPreferences.Editor editor = sp.edit(); String lastNotificationKey = context.getString(R.string.pref_last_notification); editor.putLong(lastNotificationKey, timeOfNotification); editor.apply(); }","void saveLastNotificationTime(Context context,long timeOfNotification){SharedPreferences sp=(context)(notification)putLong(lastNotificationKey,timeOfNotification);}","['public', 'static', 'void', 'saveLastNotificationTime', '(', 'Context', 'context', ',', 'long', 'timeOfNotification', ')', '{', 'SharedPreferences', 'sp', '=', 'PreferenceManager', '.', 'getDefaultSharedPreferences', '(', 'context', ')', ';', 'SharedPreferences', '.', 'Editor', 'editor', '=', 'sp', '.', 'edit', '(', ')', ';', 'String', 'lastNotificationKey', '=', 'context', '.', 'getString', '(', 'R', '.', 'string', '.', 'pref_last_notification', ')', ';', 'editor', '.', 'putLong', '(', 'lastNotificationKey', ',', 'timeOfNotification', ')', ';', 'editor', '.', 'apply', '(', ')', ';', '}']","['void', 'saveLastNotificationTime', '(', 'Context', 'context', ',', 'long', 'timeOfNotification', ')', '{', 'SharedPreferences', 'sp', '=', '(', 'context', ')', '(', 'notification', ')', 'putLong', '(', 'lastNotificationKey', ',', 'timeOfNotification', ')', ';', '}']",63,27,6,367,164,30,60.23738872403561,63.1578947368421,,,,-1,-1,-1,-1,False
L312_getInstance_1.txt,code2seq,METHOD_NAME,token_wrong,0.7357,0.6894,14.5229,16.3878,"{'n_total': 419, 'n_valid': 39, 'n_correct': 30}",92.916561,public static DirectoryClassLoader getInstance(final File dir) throws GuacamoleException { try { return AccessController.doPrivileged(new PrivilegedExceptionAction<DirectoryClassLoader>() { @Override public DirectoryClassLoader run() throws GuacamoleException { return new DirectoryClassLoader(dir); } }); } catch (PrivilegedActionException e) { throw (GuacamoleException) e.getException(); } },DirectoryClassLoader getInstance(File dir)throws GuacamoleException{try{(new PrivilegedExceptionAction<DirectoryClassLoader>(){run()throws GuacamoleException{return DirectoryClassLoader();}});}catch(PrivilegedActionException e){throw(GuacamoleException)getException();}},"['public', 'static', 'DirectoryClassLoader', 'getInstance', '(', 'final', 'File', 'dir', ')', 'throws', 'GuacamoleException', '{', 'try', '{', 'return', 'AccessController', '.', 'doPrivileged', '(', 'new', 'PrivilegedExceptionAction', '<', 'DirectoryClassLoader', '>', '(', ')', '{', '@', 'Override', 'public', 'DirectoryClassLoader', 'run', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'new', 'DirectoryClassLoader', '(', 'dir', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'PrivilegedActionException', 'e', ')', '{', 'throw', '(', 'GuacamoleException', ')', 'e', '.', 'getException', '(', ')', ';', '}', '}']","['DirectoryClassLoader', 'getInstance', '(', 'File', 'dir', ')', 'throws', 'GuacamoleException', '{', 'try', '{', '(', 'new', 'PrivilegedExceptionAction', '<', 'DirectoryClassLoader', '>', '(', ')', '{', 'run', '(', ')', 'throws', 'GuacamoleException', '{', 'return', 'DirectoryClassLoader', '(', ')', ';', '}', '}', ')', ';', '}', 'catch', '(', 'PrivilegedActionException', 'e', ')', '{', 'throw', '(', 'GuacamoleException', ')', 'getException', '(', ')', ';', '}', '}']",67,52,6,394,270,17,32.891246684350136,24.59016393442623,,,,-1,-1,-1,-1,False
L313_expand_1.txt,code2seq,METHOD_NAME,token_wrong,0.5217,0.724,14.2666,14.0335,"{'n_total': 127, 'n_valid': 12, 'n_correct': 12}",25.851617,void expand() { if (detailPanel == null || !detailPanel.isVisible()) { onClick(); } },void expand(){if(detailPanel){onClick();}},"['void', 'expand', '(', ')', '{', 'if', '(', 'detailPanel', '==', 'null', '||', '!', 'detailPanel', '.', 'isVisible', '(', ')', ')', '{', 'onClick', '(', ')', ';', '}', '}']","['void', 'expand', '(', ')', '{', 'if', '(', 'detailPanel', ')', '{', 'onClick', '(', ')', ';', '}', '}']",25,16,6,85,42,12,58.9041095890411,47.368421052631575,,,,-1,-1,-1,-1,False
L314_init_6.txt,code2seq,METHOD_NAME,token_wrong,0.4972,0.5061,1.8299,2.6079,"{'n_total': 168, 'n_valid': 27, 'n_correct': 14}",55.938595,"private void init() { if (debug == null) { debug = Debug.getInstance(""amMonitoring""); } }",void init(){if(debug==null){debug=Debug.getInstance;}},"['private', 'void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', ';', '}', '}']",24,20,6,89,54,10,44.303797468354425,22.22222222222222,,,,-1,-1,-1,-1,False
L315_valuesParams_1.txt,code2seq,METHOD_NAME,token_wrong,0.6293,0.6447,14.1807,17.3339,"{'n_total': 481, 'n_valid': 56, 'n_correct': 45}",124.600833,"protected String valuesParams(String[] fields) { if ((fields == null) || (fields.length == 0)) return """"; StringBuilder buf = new StringBuilder(); for (int i = 0; i < fields.length; i++) { buf.append("" ?,""); } return buf.toString(); }","String valuesParams(String[]fields){if((fields)(length==0))for(i;;){("""");}buf.toString();}","['protected', 'String', 'valuesParams', '(', 'String', '[', ']', 'fields', ')', '{', 'if', '(', '(', 'fields', '==', 'null', ')', '||', '(', 'fields', '.', 'length', '==', '0', ')', ')', 'return', '""""', ';', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fields', '.', 'length', ';', 'i', '++', ')', '{', 'buf', '.', 'append', '(', '"" ?,""', ')', ';', '}', 'return', 'buf', '.', 'toString', '(', ')', ';', '}']","['String', 'valuesParams', '(', 'String', '[', ']', 'fields', ')', '{', 'if', '(', '(', 'fields', ')', '(', 'length', '==', '0', ')', ')', 'for', '(', 'i', ';', ';', ')', '{', '(', '""""', ')', ';', '}', 'buf', '.', 'toString', '(', ')', ';', '}']",70,39,6,234,90,18,66.66666666666666,48.4375,,,,-1,-1,-1,-1,False
L316_valueOfConverter_1.txt,code2seq,METHOD_NAME,token_wrong,0.7169,0.849,7.122,8.169,"{'n_total': 384, 'n_valid': 38, 'n_correct': 34}",84.102642,"private static <V> ValueConverter<V> valueOfConverter(Class<V> clazz) { try { Method valueOf = clazz.getMethod(""valueOf"", String.class); if (meetsConverterRequirements(valueOf, clazz)) return new MethodInvokingValueConverter<>(valueOf, clazz); return null; } catch (NoSuchMethodException ignored) { return null; } }","<V>ValueConverter valueOfConverter(Class<V>clazz){try{Method(""valueOf"",String);if((clazz))new MethodInvokingValueConverter<>();}catch(NoSuchMethodException ignored){}}","['private', 'static', '<', 'V', '>', 'ValueConverter', '<', 'V', '>', 'valueOfConverter', '(', 'Class', '<', 'V', '>', 'clazz', ')', '{', 'try', '{', 'Method', 'valueOf', '=', 'clazz', '.', 'getMethod', '(', '""valueOf""', ',', 'String', '.', 'class', ')', ';', 'if', '(', 'meetsConverterRequirements', '(', 'valueOf', ',', 'clazz', ')', ')', 'return', 'new', 'MethodInvokingValueConverter', '<', '>', '(', 'valueOf', ',', 'clazz', ')', ';', 'return', 'null', ';', '}', 'catch', '(', 'NoSuchMethodException', 'ignored', ')', '{', 'return', 'null', ';', '}', '}']","['<', 'V', '>', 'ValueConverter', 'valueOfConverter', '(', 'Class', '<', 'V', '>', 'clazz', ')', '{', 'try', '{', 'Method', '(', '""valueOf""', ',', 'String', ')', ';', 'if', '(', '(', 'clazz', ')', ')', 'new', 'MethodInvokingValueConverter', '<', '>', '(', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'ignored', ')', '{', '}', '}']",69,44,6,315,167,22,50.51194539249146,39.682539682539684,,,,-1,-1,-1,-1,False
L317_isAllowed_1.txt,code2seq,METHOD_NAME,token_wrong,0.5985,0.4273,13.643,17.5717,"{'n_total': 379, 'n_valid': 53, 'n_correct': 39}",109.422422,"private void isAllowed(Avatar avatar) { this.applyCommonConstraints(avatar); boolean allowGallery = this.config.getBoolean(ConfigKeys.AVATAR_ALLOW_GALLERY); boolean allowUpload = this.config.getBoolean(ConfigKeys.AVATAR_ALLOW_UPLOAD); if (avatar.getAvatarType() == AvatarType.AVATAR_UPLOAD && !allowUpload || avatar.getAvatarType() == AvatarType.AVATAR_GALLERY && !allowGallery) { throw new ValidationException(avatar.getAvatarType() + ""is not allowed!""); } }","void isAllowed(Avatar avatar){this.applyCommonConstraints(avatar);if(avatar){(avatar()+"""");}}","['private', 'void', 'isAllowed', '(', 'Avatar', 'avatar', ')', '{', 'this', '.', 'applyCommonConstraints', '(', 'avatar', ')', ';', 'boolean', 'allowGallery', '=', 'this', '.', 'config', '.', 'getBoolean', '(', 'ConfigKeys', '.', 'AVATAR_ALLOW_GALLERY', ')', ';', 'boolean', 'allowUpload', '=', 'this', '.', 'config', '.', 'getBoolean', '(', 'ConfigKeys', '.', 'AVATAR_ALLOW_UPLOAD', ')', ';', 'if', '(', 'avatar', '.', 'getAvatarType', '(', ')', '==', 'AvatarType', '.', 'AVATAR_UPLOAD', '&&', '!', 'allowUpload', '||', 'avatar', '.', 'getAvatarType', '(', ')', '==', 'AvatarType', '.', 'AVATAR_GALLERY', '&&', '!', 'allowGallery', ')', '{', 'throw', 'new', 'ValidationException', '(', 'avatar', '.', 'getAvatarType', '(', ')', '+', '""is not allowed!""', ')', ';', '}', '}']","['void', 'isAllowed', '(', 'Avatar', 'avatar', ')', '{', 'this', '.', 'applyCommonConstraints', '(', 'avatar', ')', ';', 'if', '(', 'avatar', ')', '{', '(', 'avatar', '(', ')', '+', '""""', ')', ';', '}', '}']",87,29,6,459,93,15,82.43243243243244,71.60493827160494,,,,-1,-1,-1,-1,False
L318_supplierCatalog_1.txt,code2seq,METHOD_NAME,token_wrong,0.3464,0.3698,23.0775,23.7471,"{'n_total': 352, 'n_valid': 54, 'n_correct': 16}",114.245711,@Test public void supplierCatalog() { initializer = new SpringFunctionInitializer(SupplierConfig.class); initializer.initialize(); Flux<?> result = Flux.from(initializer.apply(Flux.empty())); assertThat(result.blockFirst()).isInstanceOf(Bar.class); },@Test void supplierCatalog(){initializer=new SpringFunctionInitializer(SupplierConfig);initializer.initialize;Flux<?>result=Flux.from(initializerapply(Flux.empty()));assertThat(result.blockFirst()).isInstanceOf(Bar.class);},"['@', 'Test', 'public', 'void', 'supplierCatalog', '(', ')', '{', 'initializer', '=', 'new', 'SpringFunctionInitializer', '(', 'SupplierConfig', '.', 'class', ')', ';', 'initializer', '.', 'initialize', '(', ')', ';', 'Flux', '<', '?', '>', 'result', '=', 'Flux', '.', 'from', '(', 'initializer', '.', 'apply', '(', 'Flux', '.', 'empty', '(', ')', ')', ')', ';', 'assertThat', '(', 'result', '.', 'blockFirst', '(', ')', ')', '.', 'isInstanceOf', '(', 'Bar', '.', 'class', ')', ';', '}']","['@', 'Test', 'void', 'supplierCatalog', '(', ')', '{', 'initializer', '=', 'new', 'SpringFunctionInitializer', '(', 'SupplierConfig', ')', ';', 'initializer', '.', 'initialize', ';', 'Flux', '<', '?', '>', 'result', '=', 'Flux', '.', 'from', '(', 'initializerapply', '(', 'Flux', '.', 'empty', '(', ')', ')', ')', ';', 'assertThat', '(', 'result', '.', 'blockFirst', '(', ')', ')', '.', 'isInstanceOf', '(', 'Bar', '.', 'class', ')', ';', '}']",63,56,6,250,223,21,11.790393013100436,12.280701754385964,,,,-1,-1,-1,-1,False
L319_element_1.txt,code2seq,METHOD_NAME,token_wrong,0.4913,0.3134,7.53,6.7653,"{'n_total': 493, 'n_valid': 66, 'n_correct': 39}",139.829256,"@Override public void element(final Element element, final Context context, final BugList bugs) { if (element.getName().equals(CF.CFCOMPONENT)) { final String name = context.getComponentName(); final String nameAttribute = element.getAttributeValue(CF.NAME); if (nameAttribute != null) { didYouMeanDisplayName(name, element.getSource().getRow(element.getBegin()), context.offset() + element.getBegin(), context, bugs); } } }","void element(Element element,Context context,BugList bugs){if(element(CF.CFCOMPONENT)){name=context.getComponentName;getAttributeValue(CF.NAME);if(nameAttribute!=null){didYouMeanDisplayName(bugs);}}}","['@', 'Override', 'public', 'void', 'element', '(', 'final', 'Element', 'element', ',', 'final', 'Context', 'context', ',', 'final', 'BugList', 'bugs', ')', '{', 'if', '(', 'element', '.', 'getName', '(', ')', '.', 'equals', '(', 'CF', '.', 'CFCOMPONENT', ')', ')', '{', 'final', 'String', 'name', '=', 'context', '.', 'getComponentName', '(', ')', ';', 'final', 'String', 'nameAttribute', '=', 'element', '.', 'getAttributeValue', '(', 'CF', '.', 'NAME', ')', ';', 'if', '(', 'nameAttribute', '!=', 'null', ')', '{', 'didYouMeanDisplayName', '(', 'name', ',', 'element', '.', 'getSource', '(', ')', '.', 'getRow', '(', 'element', '.', 'getBegin', '(', ')', ')', ',', 'context', '.', 'offset', '(', ')', '+', 'element', '.', 'getBegin', '(', ')', ',', 'context', ',', 'bugs', ')', ';', '}', '}', '}']","['void', 'element', '(', 'Element', 'element', ',', 'Context', 'context', ',', 'BugList', 'bugs', ')', '{', 'if', '(', 'element', '(', 'CF', '.', 'CFCOMPONENT', ')', ')', '{', 'name', '=', 'context', '.', 'getComponentName', ';', 'getAttributeValue', '(', 'CF', '.', 'NAME', ')', ';', 'if', '(', 'nameAttribute', '!=', 'null', ')', '{', 'didYouMeanDisplayName', '(', 'bugs', ')', ';', '}', '}', '}']",104,51,6,424,199,13,54.74452554744526,54.08163265306123,,,,-1,-1,-1,-1,False
L320_getArticleFragment_1.txt,code2seq,METHOD_NAME,token_wrong,0.8055,0.6606,26.7674,21.1201,"{'n_total': 181, 'n_valid': 32, 'n_correct': 14}",67.889263,"public static ArticleFragment getArticleFragment(HSActivityParent activity, HSKBItem kbItem) { ArticleFragment sectionFragment = new ArticleFragment(); sectionFragment.kbItem = kbItem; return sectionFragment; }","ArticleFragment getArticleFragment(HSActivityParent activity,HSKBItem kbItem){ArticleFragment=new ArticleFragment();kbItem;sectionFragment;}","['public', 'static', 'ArticleFragment', 'getArticleFragment', '(', 'HSActivityParent', 'activity', ',', 'HSKBItem', 'kbItem', ')', '{', 'ArticleFragment', 'sectionFragment', '=', 'new', 'ArticleFragment', '(', ')', ';', 'sectionFragment', '.', 'kbItem', '=', 'kbItem', ';', 'return', 'sectionFragment', ';', '}']","['ArticleFragment', 'getArticleFragment', '(', 'HSActivityParent', 'activity', ',', 'HSKBItem', 'kbItem', ')', '{', 'ArticleFragment', '=', 'new', 'ArticleFragment', '(', ')', ';', 'kbItem', ';', 'sectionFragment', ';', '}']",30,22,6,210,140,24,37.634408602150536,33.33333333333333,,,,-1,-1,-1,-1,False
L321_hasDisplayableAttributes_1.txt,code2seq,METHOD_NAME,token_wrong,0.7094,0.621,17.7142,23.6712,"{'n_total': 313, 'n_valid': 41, 'n_correct': 29}",86.163391,"public boolean hasDisplayableAttributes(String serviceName) { SchemaType st = SchemaType.USER; if ((getEntityType() != null) && (!getEntityType().equals(""user""))) { st = SchemaType.DYNAMIC; } return hasAttributeSchema(serviceName, st); }",boolean hasDisplayableAttributes(String serviceName){SchemaType;if((getEntityType!=null)&(getEntityType)){}hasAttributeSchema(st);},"['public', 'boolean', 'hasDisplayableAttributes', '(', 'String', 'serviceName', ')', '{', 'SchemaType', 'st', '=', 'SchemaType', '.', 'USER', ';', 'if', '(', '(', 'getEntityType', '(', ')', '!=', 'null', ')', '&&', '(', '!', 'getEntityType', '(', ')', '.', 'equals', '(', '""user""', ')', ')', ')', '{', 'st', '=', 'SchemaType', '.', 'DYNAMIC', ';', '}', 'return', 'hasAttributeSchema', '(', 'serviceName', ',', 'st', ')', ';', '}']","['boolean', 'hasDisplayableAttributes', '(', 'String', 'serviceName', ')', '{', 'SchemaType', ';', 'if', '(', '(', 'getEntityType', '!=', 'null', ')', '&', '(', 'getEntityType', ')', ')', '{', '}', 'hasAttributeSchema', '(', 'st', ')', ';', '}']",54,29,6,237,131,30,51.20772946859904,52.083333333333336,,,,-1,-1,-1,-1,False
L322_usage_1.txt,code2seq,METHOD_NAME,token_wrong,0.6928,0.5532,6.6849,6.1256,"{'n_total': 270, 'n_valid': 47, 'n_correct': 28}",93.57717,"public static void usage() { println(""java Agent <nb_traps>""); println(""where""); println("" -nb_traps: "" + ""number of traps the SNMP agent will send.""); println("" "" + ""If not specified, the agent will send traps continuously.""); }","void usage(){("""");println(""nb_traps""+"""");println(""""+""not"");}","['public', 'static', 'void', 'usage', '(', ')', '{', 'println', '(', '""java Agent <nb_traps>""', ')', ';', 'println', '(', '""where""', ')', ';', 'println', '(', '"" -nb_traps: ""', '+', '""number of traps the SNMP agent will send.""', ')', ';', 'println', '(', '"" ""', '+', '""If not specified, the agent will send traps continuously.""', ')', ';', '}']","['void', 'usage', '(', ')', '{', '(', '""""', ')', ';', 'println', '(', '""nb_traps""', '+', '""""', ')', ';', 'println', '(', '""""', '+', '""not""', ')', ';', '}']",32,24,6,229,60,11,77.52293577981652,30.76923076923077,,,,-1,-1,-1,-1,False
L323_registerConfigChangedCallback_1.txt,code2seq,METHOD_NAME,token_wrong,0.7507,0.6202,16.1306,15.1227,"{'n_total': 144, 'n_valid': 17, 'n_correct': 13}",36.440952,public void registerConfigChangedCallback(ConfigChangedCallback listener) { if (mCallbackList == null) { mCallbackList = new ArrayList<ConfigChangedCallback>(); } mCallbackList.add(listener); },void registerConfigChangedCallback(ConfigChangedCallback listener){if(mCallbackList=null)add();},"['public', 'void', 'registerConfigChangedCallback', '(', 'ConfigChangedCallback', 'listener', ')', '{', 'if', '(', 'mCallbackList', '==', 'null', ')', '{', 'mCallbackList', '=', 'new', 'ArrayList', '<', 'ConfigChangedCallback', '>', '(', ')', ';', '}', 'mCallbackList', '.', 'add', '(', 'listener', ')', ';', '}']","['void', 'registerConfigChangedCallback', '(', 'ConfigChangedCallback', 'listener', ')', '{', 'if', '(', 'mCallbackList', '=', 'null', ')', 'add', '(', ')', ';', '}']",34,18,6,193,96,35,61.39240506329114,57.14285714285714,,,,-1,-1,-1,-1,False
L324_setActions_1.txt,code2seq,METHOD_NAME,token_wrong,0.6591,0.6453,6.6478,7.3172,"{'n_total': 186, 'n_valid': 23, 'n_correct': 16}",48.511336,public void setActions(HumanActionOptions options) { getChildren().removeAll(existingButtons); existingButtons.clear(); Collection<Node> buttons = createActionButtons(options); existingButtons.addAll(buttons); getChildren().addAll(buttons); setVisible(true); },void setActions(HumanActionOptions options){(existingButtons);existingButtons=(options);},"['public', 'void', 'setActions', '(', 'HumanActionOptions', 'options', ')', '{', 'getChildren', '(', ')', '.', 'removeAll', '(', 'existingButtons', ')', ';', 'existingButtons', '.', 'clear', '(', ')', ';', 'Collection', '<', 'Node', '>', 'buttons', '=', 'createActionButtons', '(', 'options', ')', ';', 'existingButtons', '.', 'addAll', '(', 'buttons', ')', ';', 'getChildren', '(', ')', '.', 'addAll', '(', 'buttons', ')', ';', 'setVisible', '(', 'true', ')', ';', '}']","['void', 'setActions', '(', 'HumanActionOptions', 'options', ')', '{', '(', 'existingButtons', ')', ';', 'existingButtons', '=', '(', 'options', ')', ';', '}']",56,18,6,260,89,16,70.08196721311475,76.0,,,,-1,-1,-1,-1,False
L325_removeReferencePrefix_1.txt,code2seq,METHOD_NAME,token_wrong,0.7682,0.7625,9.9493,15.6668,"{'n_total': 146, 'n_valid': 21, 'n_correct': 18}",43.960891,"private String removeReferencePrefix(String referenceId) { if (referenceId.startsWith(REF_PREFIX)) { referenceId = referenceId.replaceFirst(REF_PREFIX, """"); } return referenceId; }","String removeReferencePrefix(){{("""");}referenceId;}","['private', 'String', 'removeReferencePrefix', '(', 'String', 'referenceId', ')', '{', 'if', '(', 'referenceId', '.', 'startsWith', '(', 'REF_PREFIX', ')', ')', '{', 'referenceId', '=', 'referenceId', '.', 'replaceFirst', '(', 'REF_PREFIX', ',', '""""', ')', ';', '}', 'return', 'referenceId', ';', '}']","['String', 'removeReferencePrefix', '(', ')', '{', '{', '(', '""""', ')', ';', '}', 'referenceId', ';', '}']",34,14,6,180,51,27,84.31372549019608,71.42857142857143,,,,-1,-1,-1,-1,False
L326_checkConstruction_1.txt,code2seq,METHOD_NAME,token_wrong,0.893,0.5633,11.2,10.2281,"{'n_total': 294, 'n_valid': 36, 'n_correct': 30}",75.890386,"private void checkConstruction(OtherCertID certID, AlgorithmIdentifier algId, byte[] digest, IssuerSerial issuerSerial) throws IOException { checkValues(certID, algId, digest, issuerSerial); certID = OtherCertID.getInstance(certID); checkValues(certID, algId, digest, issuerSerial); ASN1InputStream aIn = new ASN1InputStream(certID.toASN1Primitive().getEncoded()); ASN1Sequence seq = (ASN1Sequence) aIn.readObject(); certID = OtherCertID.getInstance(seq); checkValues(certID, algId, digest, issuerSerial); }","void checkConstruction(OtherCertID algId,byte[]digest)throws IOException{checkValues();InputStream();}","['private', 'void', 'checkConstruction', '(', 'OtherCertID', 'certID', ',', 'AlgorithmIdentifier', 'algId', ',', 'byte', '[', ']', 'digest', ',', 'IssuerSerial', 'issuerSerial', ')', 'throws', 'IOException', '{', 'checkValues', '(', 'certID', ',', 'algId', ',', 'digest', ',', 'issuerSerial', ')', ';', 'certID', '=', 'OtherCertID', '.', 'getInstance', '(', 'certID', ')', ';', 'checkValues', '(', 'certID', ',', 'algId', ',', 'digest', ',', 'issuerSerial', ')', ';', 'ASN1InputStream', 'aIn', '=', 'new', 'ASN1InputStream', '(', 'certID', '.', 'toASN1Primitive', '(', ')', '.', 'getEncoded', '(', ')', ')', ';', 'ASN1Sequence', 'seq', '=', '(', 'ASN1Sequence', ')', 'aIn', '.', 'readObject', '(', ')', ';', 'certID', '=', 'OtherCertID', '.', 'getInstance', '(', 'seq', ')', ';', 'checkValues', '(', 'certID', ',', 'algId', ',', 'digest', ',', 'issuerSerial', ')', ';', '}']","['void', 'checkConstruction', '(', 'OtherCertID', 'algId', ',', 'byte', '[', ']', 'digest', ')', 'throws', 'IOException', '{', 'checkValues', '(', ')', ';', 'InputStream', '(', ')', ';', '}']",102,23,6,507,102,23,83.67768595041323,82.29166666666666,,,,-1,-1,-1,-1,False
L327_add_2.txt,code2seq,METHOD_NAME,token_wrong,0.8016,0.9128,10.4274,7.4281,"{'n_total': 176, 'n_valid': 20, 'n_correct': 19}",41.515854,"private void add(ReferralPrivilege referral) throws EntitlementException { Subject adminSubject = getAdminSubject(); String realm = getRealm(); ReferralPrivilege clone = (ReferralPrivilege) referral.clone(); clone.canonicalizeResources(adminSubject, DNMapper.orgNameToRealmName(realm)); dataStore.addReferral(adminSubject, realm, clone); }",void add(ReferralPrivilege referral){Subject();addReferral();},"['private', 'void', 'add', '(', 'ReferralPrivilege', 'referral', ')', 'throws', 'EntitlementException', '{', 'Subject', 'adminSubject', '=', 'getAdminSubject', '(', ')', ';', 'String', 'realm', '=', 'getRealm', '(', ')', ';', 'ReferralPrivilege', 'clone', '=', '(', 'ReferralPrivilege', ')', 'referral', '.', 'clone', '(', ')', ';', 'clone', '.', 'canonicalizeResources', '(', 'adminSubject', ',', 'DNMapper', '.', 'orgNameToRealmName', '(', 'realm', ')', ')', ';', 'dataStore', '.', 'addReferral', '(', 'adminSubject', ',', 'realm', ',', 'clone', ')', ';', '}']","['void', 'add', '(', 'ReferralPrivilege', 'referral', ')', '{', 'Subject', '(', ')', ';', 'addReferral', '(', ')', ';', '}']",62,16,6,339,62,9,83.93939393939394,82.14285714285714,,,,-1,-1,-1,-1,False
L328_addVerDriver_1.txt,code2seq,METHOD_NAME,token_wrong,0.5597,0.4238,26.5743,30.765,"{'n_total': 240, 'n_valid': 28, 'n_correct': 23}",57.385215,"private void addVerDriver() { View divider = new View(getContext()); divider.setBackgroundResource(R.color.divider_black_menu); addView(divider, LayoutParams.MATCH_PARENT, 1); divider = new View(getContext()); divider.setBackgroundResource(R.color.divider_gray_menu); addView(divider, LayoutParams.MATCH_PARENT, 1); }",void addVerDriver(){(getContext()).setBackgroundResource();View(getContext());setBackgroundResource();},"['private', 'void', 'addVerDriver', '(', ')', '{', 'View', 'divider', '=', 'new', 'View', '(', 'getContext', '(', ')', ')', ';', 'divider', '.', 'setBackgroundResource', '(', 'R', '.', 'color', '.', 'divider_black_menu', ')', ';', 'addView', '(', 'divider', ',', 'LayoutParams', '.', 'MATCH_PARENT', ',', '1', ')', ';', 'divider', '=', 'new', 'View', '(', 'getContext', '(', ')', ')', ';', 'divider', '.', 'setBackgroundResource', '(', 'R', '.', 'color', '.', 'divider_gray_menu', ')', ';', 'addView', '(', 'divider', ',', 'LayoutParams', '.', 'MATCH_PARENT', ',', '1', ')', ';', '}']","['void', 'addVerDriver', '(', ')', '{', '(', 'getContext', '(', ')', ')', '.', 'setBackgroundResource', '(', ')', ';', 'View', '(', 'getContext', '(', ')', ')', ';', 'setBackgroundResource', '(', ')', ';', '}']",72,27,6,317,103,18,71.57190635451505,68.18181818181817,,,,-1,-1,-1,-1,False
L329_put_1.txt,code2seq,METHOD_NAME,token_wrong,0.575,0.5131,1.6671,1.8217,"{'n_total': 527, 'n_valid': 87, 'n_correct': 45}",179.096199,"void put(String key, String value) { keyValueMap.put(key, value); int index = removeFromList(key); if (index != -1) { keyValueList.add(index, new KeyValue(key, value)); } else { keyValueList.add(new KeyValue(key, value)); } }","void put(String key,String value){keyValueMap();index();if(index){keyValueList.add((value));((key));}}","['void', 'put', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'keyValueMap', '.', 'put', '(', 'key', ',', 'value', ')', ';', 'int', 'index', '=', 'removeFromList', '(', 'key', ')', ';', 'if', '(', 'index', '!=', '-', '1', ')', '{', 'keyValueList', '.', 'add', '(', 'index', ',', 'new', 'KeyValue', '(', 'key', ',', 'value', ')', ')', ';', '}', 'else', '{', 'keyValueList', '.', 'add', '(', 'new', 'KeyValue', '(', 'key', ',', 'value', ')', ')', ';', '}', '}']","['void', 'put', '(', 'String', 'key', ',', 'String', 'value', ')', '{', 'keyValueMap', '(', ')', ';', 'index', '(', ')', ';', 'if', '(', 'index', ')', '{', 'keyValueList', '.', 'add', '(', '(', 'value', ')', ')', ';', '(', '(', 'key', ')', ')', ';', '}', '}']",68,40,6,225,102,9,56.94444444444444,45.16129032258064,,,,-1,-1,-1,-1,False
L330_getValidatedColorValue_1.txt,code2seq,METHOD_NAME,token_wrong,0.4342,0.6787,15.8853,17.8327,"{'n_total': 478, 'n_valid': 79, 'n_correct': 40}",163.886738,"private String getValidatedColorValue(String componentId) throws Exception { String value = getValueFromFacesContext(componentId).trim(); if ("""".equals(value)) { return value; } if (!COLOR_HEX_PATTERN.matcher(value).matches()) { throw new Exception(""Invalid hex color code.""); } return value; }","String getValidatedColorValue(String componentId)throws Exception{String=getValueFromFacesContext();if((value)){}if(COLOR(value).matches()){("""");}}","['private', 'String', 'getValidatedColorValue', '(', 'String', 'componentId', ')', 'throws', 'Exception', '{', 'String', 'value', '=', 'getValueFromFacesContext', '(', 'componentId', ')', '.', 'trim', '(', ')', ';', 'if', '(', '""""', '.', 'equals', '(', 'value', ')', ')', '{', 'return', 'value', ';', '}', 'if', '(', '!', 'COLOR_HEX_PATTERN', '.', 'matcher', '(', 'value', ')', '.', 'matches', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '""Invalid hex color code.""', ')', ';', '}', 'return', 'value', ';', '}']","['String', 'getValidatedColorValue', '(', 'String', 'componentId', ')', 'throws', 'Exception', '{', 'String', '=', 'getValueFromFacesContext', '(', ')', ';', 'if', '(', '(', 'value', ')', ')', '{', '}', 'if', '(', 'COLOR', '(', 'value', ')', '.', 'matches', '(', ')', ')', '{', '(', '""""', ')', ';', '}', '}']",63,41,6,294,147,28,55.26315789473685,38.59649122807017,,,,-1,-1,-1,-1,False
L331_method_1.txt,code2seq,METHOD_NAME,token_wrong,0.7179,0.8522,3.7802,5.0706,"{'n_total': 304, 'n_valid': 33, 'n_correct': 21}",71.323981,"public Reflect method(String name, Class... types) throws ReflectException { try { return on(exactMethod(name, types)); } catch (NoSuchMethodException e) { throw new ReflectException(e); } }","Reflect method(String name,Class...types)throws ReflectException{try{return(exactMethod(types));}catch(NoSuchMethodException e){(e);}}","['public', 'Reflect', 'method', '(', 'String', 'name', ',', 'Class', '...', 'types', ')', 'throws', 'ReflectException', '{', 'try', '{', 'return', 'on', '(', 'exactMethod', '(', 'name', ',', 'types', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', 'throw', 'new', 'ReflectException', '(', 'e', ')', ';', '}', '}']","['Reflect', 'method', '(', 'String', 'name', ',', 'Class', '...', 'types', ')', 'throws', 'ReflectException', '{', 'try', '{', 'return', '(', 'exactMethod', '(', 'types', ')', ')', ';', '}', 'catch', '(', 'NoSuchMethodException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",43,36,6,190,134,12,31.46067415730337,18.91891891891892,,,,-1,-1,-1,-1,False
L332_partialFlush_1.txt,code2seq,METHOD_NAME,token_wrong,0.9535,0.7094,16.3353,12.7736,"{'n_total': 403, 'n_valid': 61, 'n_correct': 30}",128.140316,"private void partialFlush(boolean isLast) throws IOException { if (isLast) { writeNewPacketLength(partialOffset); out.write(partialBuffer, 0, partialOffset); } else { out.write(0xE0 | partialPower); out.write(partialBuffer, 0, partialBufferLength); } partialOffset = 0; }","void partialFlush(boolean isLast){if(isLast){writeNewPacketLength();out(0,partialOffset);}{out.write(xE);out(partialBuffer,partialBufferLength);}partialOffset=0;}","['private', 'void', 'partialFlush', '(', 'boolean', 'isLast', ')', 'throws', 'IOException', '{', 'if', '(', 'isLast', ')', '{', 'writeNewPacketLength', '(', 'partialOffset', ')', ';', 'out', '.', 'write', '(', 'partialBuffer', ',', '0', ',', 'partialOffset', ')', ';', '}', 'else', '{', 'out', '.', 'write', '(', '0xE0', '|', 'partialPower', ')', ';', 'out', '.', 'write', '(', 'partialBuffer', ',', '0', ',', 'partialBufferLength', ')', ';', '}', 'partialOffset', '=', '0', ';', '}']","['void', 'partialFlush', '(', 'boolean', 'isLast', ')', '{', 'if', '(', 'isLast', ')', '{', 'writeNewPacketLength', '(', ')', ';', 'out', '(', '0', ',', 'partialOffset', ')', ';', '}', '{', 'out', '.', 'write', '(', 'xE', ')', ';', 'out', '(', 'partialBuffer', ',', 'partialBufferLength', ')', ';', '}', 'partialOffset', '=', '0', ';', '}']",60,45,6,271,162,18,43.08300395256917,27.77777777777778,,,,-1,-1,-1,-1,False
L333_init_7.txt,code2seq,METHOD_NAME,token_wrong,0.4972,0.5061,1.8299,2.6079,"{'n_total': 168, 'n_valid': 27, 'n_correct': 14}",55.828872,"private void init() { if (debug == null) { debug = Debug.getInstance(""amMonitoring""); } }",void init(){if(debug==null){debug=Debug.getInstance;}},"['private', 'void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', '(', '""amMonitoring""', ')', ';', '}', '}']","['void', 'init', '(', ')', '{', 'if', '(', 'debug', '==', 'null', ')', '{', 'debug', '=', 'Debug', '.', 'getInstance', ';', '}', '}']",24,20,6,89,54,10,44.303797468354425,22.22222222222222,,,,-1,-1,-1,-1,False
L334_connectivityCallbacks_1.txt,code2seq,METHOD_NAME,token_wrong,0.8124,0.5666,21.5289,14.6188,"{'n_total': 256, 'n_valid': 32, 'n_correct': 28}",71.8857,"private ConnectivityCallbacks connectivityCallbacks(MerlinService.ConnectivityChangesNotifier connectivityChangesNotifier) { if (connectivityCallbacks == null) { connectivityCallbacks = new ConnectivityCallbacks(connectivityChangesNotifier, connectivityChangeEventExtractor); } return connectivityCallbacks; }",ConnectivityCallbacks connectivityCallbacks(MerlinService connectivityChangesNotifier){if(connectivityCallbacks){connectivityCallbacks();}},"['private', 'ConnectivityCallbacks', 'connectivityCallbacks', '(', 'MerlinService', '.', 'ConnectivityChangesNotifier', 'connectivityChangesNotifier', ')', '{', 'if', '(', 'connectivityCallbacks', '==', 'null', ')', '{', 'connectivityCallbacks', '=', 'new', 'ConnectivityCallbacks', '(', 'connectivityChangesNotifier', ',', 'connectivityChangeEventExtractor', ')', ';', '}', 'return', 'connectivityCallbacks', ';', '}']","['ConnectivityCallbacks', 'connectivityCallbacks', '(', 'MerlinService', 'connectivityChangesNotifier', ')', '{', 'if', '(', 'connectivityCallbacks', ')', '{', 'connectivityCallbacks', '(', ')', ';', '}', '}']",32,18,6,309,139,27,60.28368794326241,53.84615384615385,,,,-1,-1,-1,-1,False
L335_modify_1.txt,code2seq,METHOD_NAME,token_wrong,0.7544,0.5607,12.6673,11.452,"{'n_total': 242, 'n_valid': 28, 'n_correct': 20}",60.025151,public void modify(JavaProcessBuilder builder) { if (flags != null) { for (String flag : flags) { builder.getFlags().add(flag); } } },void modify(){if(flags!=null){for(String flag:flags){builder.add(flag);}}},"['public', 'void', 'modify', '(', 'JavaProcessBuilder', 'builder', ')', '{', 'if', '(', 'flags', '!=', 'null', ')', '{', 'for', '(', 'String', 'flag', ':', 'flags', ')', '{', 'builder', '.', 'getFlags', '(', ')', '.', 'add', '(', 'flag', ')', ';', '}', '}', '}']","['void', 'modify', '(', ')', '{', 'if', '(', 'flags', '!=', 'null', ')', '{', 'for', '(', 'String', 'flag', ':', 'flags', ')', '{', 'builder', '.', 'add', '(', 'flag', ')', ';', '}', '}', '}']",37,30,6,133,74,12,48.760330578512395,22.58064516129032,,,,-1,-1,-1,-1,False
L336_bazelJars_1.txt,code2seq,METHOD_NAME,token_wrong,0.3464,0.4679,16.4974,22.5003,"{'n_total': 438, 'n_valid': 64, 'n_correct': 31}",131.796454,"private Stream<Path> bazelJars(Path bazelGenFiles) { try { Path target = Files.readSymbolicLink(bazelGenFiles); return Files.walk(target).filter(file -> file.getFileName().toString().endsWith("".jar"")); } catch (IOException e) { throw new RuntimeException(e); } }","Stream<Path>bazelJars(Path bazelGenFiles){try{Path=(bazelGenFiles);Files.walk(target->file.getFileName(""""));}catch(IOException e){(e);}}","['private', 'Stream', '<', 'Path', '>', 'bazelJars', '(', 'Path', 'bazelGenFiles', ')', '{', 'try', '{', 'Path', 'target', '=', 'Files', '.', 'readSymbolicLink', '(', 'bazelGenFiles', ')', ';', 'return', 'Files', '.', 'walk', '(', 'target', ')', '.', 'filter', '(', 'file', '->', 'file', '.', 'getFileName', '(', ')', '.', 'toString', '(', ')', '.', 'endsWith', '(', '"".jar""', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']","['Stream', '<', 'Path', '>', 'bazelJars', '(', 'Path', 'bazelGenFiles', ')', '{', 'try', '{', 'Path', '=', '(', 'bazelGenFiles', ')', ';', 'Files', '.', 'walk', '(', 'target', '->', 'file', '.', 'getFileName', '(', '""""', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",67,45,6,262,136,15,51.012145748987855,36.0655737704918,,,,-1,-1,-1,-1,False
L337_registerConnectFilters_1.txt,code2seq,METHOD_NAME,token_wrong,0.3958,0.5602,15.1002,19.2089,"{'n_total': 338, 'n_valid': 46, 'n_correct': 26}",94.150892,"@Override protected void registerConnectFilters(ResourceAddress address, IoSession session) { int align = address.getOption(UdpResourceAddress.PADDING_ALIGNMENT); if (align > 0) { session.getFilterChain().addFirst(""udp.padding.alignment"", new UdpAlignFilter(logger, align, session)); } }","void registerConnectFilters(ResourceAddress session){int align=(UdpResourceAddress.ALIGNMENT);if(align){getFilterChain().addFirst(""udpalignment"",UdpAlignFilter());}}","['@', 'Override', 'protected', 'void', 'registerConnectFilters', '(', 'ResourceAddress', 'address', ',', 'IoSession', 'session', ')', '{', 'int', 'align', '=', 'address', '.', 'getOption', '(', 'UdpResourceAddress', '.', 'PADDING_ALIGNMENT', ')', ';', 'if', '(', 'align', '>', '0', ')', '{', 'session', '.', 'getFilterChain', '(', ')', '.', 'addFirst', '(', '""udp.padding.alignment""', ',', 'new', 'UdpAlignFilter', '(', 'logger', ',', 'align', ',', 'session', ')', ')', ';', '}', '}']","['void', 'registerConnectFilters', '(', 'ResourceAddress', 'session', ')', '{', 'int', 'align', '=', '(', 'UdpResourceAddress', '.', 'ALIGNMENT', ')', ';', 'if', '(', 'align', ')', '{', 'getFilterChain', '(', ')', '.', 'addFirst', '(', '""udpalignment""', ',', 'UdpAlignFilter', '(', ')', ')', ';', '}', '}']",55,36,6,287,165,28,47.10424710424711,38.775510204081634,,,,-1,-1,-1,-1,False
L338_subList_1.txt,code2seq,METHOD_NAME,token_wrong,0.287,0.8014,12.5811,9.7226,"{'n_total': 436, 'n_valid': 53, 'n_correct': 36}",113.773195,"public InstanceList subList(double proportion) { if (proportion > 1.0) throw new IllegalArgumentException(""proportion must by <= 1.0""); InstanceList other = (InstanceList) clone(); other.shuffle(new java.util.Random()); proportion *= other.size(); for (int i = 0; i < proportion; i++) other.add(get(i)); return other; }","InstanceList subList(double proportion){if(0)("""");(InstanceList);for(;i;)add(get(i));other;}","['public', 'InstanceList', 'subList', '(', 'double', 'proportion', ')', '{', 'if', '(', 'proportion', '>', '1.0', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""proportion must by <= 1.0""', ')', ';', 'InstanceList', 'other', '=', '(', 'InstanceList', ')', 'clone', '(', ')', ';', 'other', '.', 'shuffle', '(', 'new', 'java', '.', 'util', '.', 'Random', '(', ')', ')', ';', 'proportion', '*=', 'other', '.', 'size', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'proportion', ';', 'i', '++', ')', 'other', '.', 'add', '(', 'get', '(', 'i', ')', ')', ';', 'return', 'other', ';', '}']","['InstanceList', 'subList', '(', 'double', 'proportion', ')', '{', 'if', '(', '0', ')', '(', '""""', ')', ';', '(', 'InstanceList', ')', ';', 'for', '(', ';', 'i', ';', ')', 'add', '(', 'get', '(', 'i', ')', ')', ';', 'other', ';', '}']",81,36,6,319,92,13,74.18300653594771,60.0,,,,-1,-1,-1,-1,False
L339_trainOnAll_1.txt,code2seq,METHOD_NAME,token_wrong,0.8442,0.9825,14.1893,14.554,"{'n_total': 326, 'n_valid': 36, 'n_correct': 35}",77.18431,"public void trainOnAll() { QuantitiesClassifier classifier = new QuantitiesClassifier(modelName + "".lc"", modelName + "".lex""); QuantitiesDataReader trainReader = new QuantitiesDataReader(dataDir + ""/allData.txt"", ""train""); BatchTrainer trainer = new BatchTrainer(classifier, trainReader); trainer.train(45); classifier.save(); }","void trainOnAll(){("""");QuantitiesDataReader("""",""train"");BatchTrainer();(5);save();}","['public', 'void', 'trainOnAll', '(', ')', '{', 'QuantitiesClassifier', 'classifier', '=', 'new', 'QuantitiesClassifier', '(', 'modelName', '+', '"".lc""', ',', 'modelName', '+', '"".lex""', ')', ';', 'QuantitiesDataReader', 'trainReader', '=', 'new', 'QuantitiesDataReader', '(', 'dataDir', '+', '""/allData.txt""', ',', '""train""', ')', ';', 'BatchTrainer', 'trainer', '=', 'new', 'BatchTrainer', '(', 'classifier', ',', 'trainReader', ')', ';', 'trainer', '.', 'train', '(', '45', ')', ';', 'classifier', '.', 'save', '(', ')', ';', '}']","['void', 'trainOnAll', '(', ')', '{', '(', '""""', ')', ';', 'QuantitiesDataReader', '(', '""""', ',', '""train""', ')', ';', 'BatchTrainer', '(', ')', ';', '(', '5', ')', ';', 'save', '(', ')', ';', '}']",59,29,6,327,83,16,78.45659163987139,56.60377358490566,,,,-1,-1,-1,-1,False
L340_createRawValidator_6.txt,code2seq,METHOD_NAME,token_wrong,0.7311,0.4589,26.2651,24.6703,"{'n_total': 1072, 'n_valid': 272, 'n_correct': 133}",540.093144,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.g"" + ""rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.O"" + ""neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005val"" + ""uexp\u0000psq\u0000~\u0000\nq\u0000~\u0000\u0010psq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010psr\u0000 com.s"" + ""un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClas"" + ""sq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStri"" + ""ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.gra"" + ""mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"" + ""s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"" + ""ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.Sim"" + ""pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"" + ""amespaceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000;com.sun.identity.liberty.ws.common."" + ""jaxb.ac.ExtensionElementt\u0000+http://java.sun.com/jaxb/xjc/dumm"" + ""y-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0010p"" + ""sq\u0000~\u0000\u0015q\u0000~\u0000\u0010pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008com.sun.identity.liberty"" + "".ws.common.jaxb.ac.ExtensionTypeq\u0000~\u0000#sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010psr\u0000"" + ""\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"" + ""datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"" + ""StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000\""com.sun.msv.datatype.xsd.QnameTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"" + ""\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"" + ""mespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"" + ""datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"" + ""/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"" + ""cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"" + ""SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"" + ""n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.ut"" + ""il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000"" + "" xpq\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"" + ""a-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\tExtensiont\u0000\u0016urn:liberty:ac:2003-08q\u0000"" + ""~\u0000\u001esq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0010pq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u000bSwitchAuditq\u0000"" + ""~\u0000Fsr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"" + ""blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"" + ""om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"" + ""untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"" + ""onPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\u000eq\u0000~\u0000\u0014q\u0000~\u0000(q\u0000~\u0000\u0013q\u0000~\u0000\'q\u0000~\u0000\tq\u0000~\u0000%q\u0000~\u0000,"" + ""q\u0000~\u0000Gq\u0000~\u0000\u0011x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","verifier createRawValidator(){if(schemaFragment==null){schemaFragment=comdeserialize((""""+""""+""aignoreUndeclaredAttributesL""+""""+""""+""""+""\0""+""""));}new com.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.g""', '+', '""rammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.O""', '+', '""neOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04sr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05val""', '+', '""uexp\x00psq\x00~\x00\\nq\x00~\x00\x10psq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x10psr\x00 com.s""', '+', '""un.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClas""', '+', '""sq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x10psr\x002com.sun.msv.grammar.Expression$AnyStri""', '+', '""ngExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x0f\x01q\x00~\x00\x18sr\x00 com.sun.msv.gra""', '+', '""mmar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.NameClas""', '+', '""s\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expression$EpsilonExpr""', '+', '""ession\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x19q\x00~\x00\x1esr\x00#com.sun.msv.grammar.Sim""', '+', '""pleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang/String;L\x00\\fn""', '+', '""amespaceURIq\x00~\x00 xq\x00~\x00\x1bt\x00;com.sun.identity.liberty.ws.common.""', '+', '""jaxb.ac.ExtensionElementt\x00+http://java.sun.com/jaxb/xjc/dumm""', '+', '""y-elementssq\x00~\x00\x00q\x00~\x00\x10p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x10p""', '+', '""sq\x00~\x00\x15q\x00~\x00\x10pq\x00~\x00\x18q\x00~\x00\x1cq\x00~\x00\x1esq\x00~\x00\x1ft\x008com.sun.identity.liberty""', '+', '"".ws.common.jaxb.ac.ExtensionTypeq\x00~\x00#sq\x00~\x00\\nppsq\x00~\x00\x15q\x00~\x00\x10psr\x00""', '+', '""\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/""', '+', '""datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/""', '+', '""StringPair;xq\x00~\x00\x04q\x00~\x00\x10psr\x00\\""com.sun.msv.datatype.xsd.QnameTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicType\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00""', '+', '""\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fna""', '+', '""mespaceUriq\x00~\x00 L\x00\\btypeNameq\x00~\x00 L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/""', '+', '""datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001""', '+', '""/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype.xsd.WhiteSpacePro""', '+', '""cessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.White""', '+', '""SpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expressio""', '+', '""n$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x10psr\x00\x1bcom.sun.msv.ut""', '+', '""il.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00 L\x00\\fnamespaceURIq\x00~\x00""', '+', '"" xpq\x00~\x009q\x00~\x008sq\x00~\x00\x1ft\x00\x04typet\x00)http://www.w3.org/2001/XMLSchem""', '+', '""a-instanceq\x00~\x00\x1esq\x00~\x00\x1ft\x00\\tExtensiont\x00\x16urn:liberty:ac:2003-08q\x00""', '+', '""~\x00\x1esq\x00~\x00\\nppsq\x00~\x00\x15q\x00~\x00\x10pq\x00~\x001q\x00~\x00Aq\x00~\x00\x1esq\x00~\x00\x1ft\x00\x0bSwitchAuditq\x00""', '+', '""~\x00Fsr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTa""', '+', '""blet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-c""', '+', '""om.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05co""', '+', '""untB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressi""', '+', '""onPool;xp\x00\x00\x00\x0b\x01pq\x00~\x00\x0bq\x00~\x00\x0eq\x00~\x00\x14q\x00~\x00(q\x00~\x00\x13q\x00~\x00\\\'q\x00~\x00\\tq\x00~\x00%q\x00~\x00,""', '+', '""q\x00~\x00Gq\x00~\x00\x11x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['verifier', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'comdeserialize', '(', '(', '""""', '+', '""""', '+', '""aignoreUndeclaredAttributesL""', '+', '""""', '+', '""""', '+', '""""', '+', '""\\0""', '+', '""""', ')', ')', ';', '}', 'new', 'com', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",151,51,6,6217,210,24,96.99660907476184,68.96551724137932,,,,-1,-1,-1,-1,False
L341_deleteConfigFile_1.txt,code2seq,METHOD_NAME,token_wrong,0.7926,0.817,33.0201,37.2181,"{'n_total': 138, 'n_valid': 16, 'n_correct': 12}",34.545424,@After public void deleteConfigFile() { if (configFile != null) { configFile.delete(); } },@After void deleteConfigFile(){if(null){configFile();}},"['@', 'After', 'public', 'void', 'deleteConfigFile', '(', ')', '{', 'if', '(', 'configFile', '!=', 'null', ')', '{', 'configFile', '.', 'delete', '(', ')', ';', '}', '}']","['@', 'After', 'void', 'deleteConfigFile', '(', ')', '{', 'if', '(', 'null', ')', '{', 'configFile', '(', ')', ';', '}', '}']",23,18,6,90,55,22,51.470588235294116,29.411764705882355,,,,-1,-1,-1,-1,False
L342_save_1.txt,code2seq,METHOD_NAME,token_wrong,0.5481,0.7258,5.1421,8.1294,"{'n_total': 343, 'n_valid': 44, 'n_correct': 38}",95.052523,public void save(String file) { OutFile out = new OutFile(file); out.println(String.valueOf(dim)); for (String w : wordToFid.keySet()) { out.println(w); out.println(String.valueOf(wordToFid.get(w))); } out.close(); },void save(String file){out();for(String w:wordToFid){println(((w)));}},"['public', 'void', 'save', '(', 'String', 'file', ')', '{', 'OutFile', 'out', '=', 'new', 'OutFile', '(', 'file', ')', ';', 'out', '.', 'println', '(', 'String', '.', 'valueOf', '(', 'dim', ')', ')', ';', 'for', '(', 'String', 'w', ':', 'wordToFid', '.', 'keySet', '(', ')', ')', '{', 'out', '.', 'println', '(', 'w', ')', ';', 'out', '.', 'println', '(', 'String', '.', 'valueOf', '(', 'wordToFid', '.', 'get', '(', 'w', ')', ')', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', '}']","['void', 'save', '(', 'String', 'file', ')', '{', 'out', '(', ')', ';', 'for', '(', 'String', 'w', ':', 'wordToFid', ')', '{', 'println', '(', '(', '(', 'w', ')', ')', ')', ';', '}', '}']",73,30,6,216,70,10,70.87378640776699,64.17910447761194,,,,-1,-1,-1,-1,False
L343_getSignerInfos_1.txt,code2seq,METHOD_NAME,token_wrong,0.619,0.5854,23.9604,22.2485,"{'n_total': 401, 'n_valid': 74, 'n_correct': 39}",152.409733,"public ASN1SetParser getSignerInfos() throws IOException { if (!_certsCalled || !_crlsCalled) { throw new IOException(""getCerts() and/or getCrls() has not been called.""); } if (_nextObject == null) { _nextObject = _seq.readObject(); } return (ASN1SetParser) _nextObject; }","ASN getSignerInfos()throws IOException{if(_){new IOException(""getCerts and getCrls"");}if(_){}return(ASNSetParser)nextObject;}","['public', 'ASN1SetParser', 'getSignerInfos', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', '_certsCalled', '||', '!', '_crlsCalled', ')', '{', 'throw', 'new', 'IOException', '(', '""getCerts() and/or getCrls() has not been called.""', ')', ';', '}', 'if', '(', '_nextObject', '==', 'null', ')', '{', '_nextObject', '=', '_seq', '.', 'readObject', '(', ')', ';', '}', 'return', '(', 'ASN1SetParser', ')', '_nextObject', ';', '}']","['ASN', 'getSignerInfos', '(', ')', 'throws', 'IOException', '{', 'if', '(', '_', ')', '{', 'new', 'IOException', '(', '""getCerts and getCrls""', ')', ';', '}', 'if', '(', '_', ')', '{', '}', 'return', '(', 'ASNSetParser', ')', 'nextObject', ';', '}']",48,32,6,272,125,20,58.333333333333336,38.095238095238095,,,,-1,-1,-1,-1,False
L344_getReviewRenderBean_1.txt,code2seq,METHOD_NAME,token_wrong,0.8985,0.5974,21.7567,26.6861,"{'n_total': 337, 'n_valid': 36, 'n_correct': 29}",79.814935,"public RenderBean getReviewRenderBean() { String key = ""reviewRenderBean""; if (map.get(key) == null) { RenderBean rb = new RenderBean(getReviewHelperBean().getMock(), toolRenderService, objectService, getWithBreadcrumbs()); map.put(key, rb); } return (RenderBean) map.get(key); }","RenderBean getReviewRenderBean(){"""";if((key)){RenderBean();}(key);}","['public', 'RenderBean', 'getReviewRenderBean', '(', ')', '{', 'String', 'key', '=', '""reviewRenderBean""', ';', 'if', '(', 'map', '.', 'get', '(', 'key', ')', '==', 'null', ')', '{', 'RenderBean', 'rb', '=', 'new', 'RenderBean', '(', 'getReviewHelperBean', '(', ')', '.', 'getMock', '(', ')', ',', 'toolRenderService', ',', 'objectService', ',', 'getWithBreadcrumbs', '(', ')', ')', ';', 'map', '.', 'put', '(', 'key', ',', 'rb', ')', ';', '}', 'return', '(', 'RenderBean', ')', 'map', '.', 'get', '(', 'key', ')', ';', '}']","['RenderBean', 'getReviewRenderBean', '(', ')', '{', '""""', ';', 'if', '(', '(', 'key', ')', ')', '{', 'RenderBean', '(', ')', ';', '}', '(', 'key', ')', ';', '}']",68,24,6,279,67,25,83.46456692913385,70.96774193548387,,,,-1,-1,-1,-1,False
L345_newTimeRange_1.txt,code2seq,METHOD_NAME,token_wrong,0.538,0.5902,4.5221,10.2422,"{'n_total': 266, 'n_valid': 36, 'n_correct': 26}",77.006023,"private TimeRange newTimeRange(String start, String length) { Instant beginning = Instant.parse(start); Duration duration = Duration.parse(length); return timeService.newTimeRange(beginning.toEpochMilli(), duration.toMillis()); }","TimeRange newTimeRange(String length){beginning=parse();duration=parse();newTimeRange(beginning(),duration);}","['private', 'TimeRange', 'newTimeRange', '(', 'String', 'start', ',', 'String', 'length', ')', '{', 'Instant', 'beginning', '=', 'Instant', '.', 'parse', '(', 'start', ')', ';', 'Duration', 'duration', '=', 'Duration', '.', 'parse', '(', 'length', ')', ';', 'return', 'timeService', '.', 'newTimeRange', '(', 'beginning', '.', 'toEpochMilli', '(', ')', ',', 'duration', '.', 'toMillis', '(', ')', ')', ';', '}']","['TimeRange', 'newTimeRange', '(', 'String', 'length', ')', '{', 'beginning', '=', 'parse', '(', ')', ';', 'duration', '=', 'parse', '(', ')', ';', 'newTimeRange', '(', 'beginning', '(', ')', ',', 'duration', ')', ';', '}']",50,29,6,229,109,18,56.872037914691944,47.72727272727273,,,,-1,-1,-1,-1,False
L346_assertNoMoreTokens_1.txt,code2seq,METHOD_NAME,token_wrong,0.7672,0.8449,22.2219,23.9635,"{'n_total': 135, 'n_valid': 16, 'n_correct': 13}",34.54057,private void assertNoMoreTokens(OptionSpecTokenizer lexer) { assertFalse(lexer.hasMore()); thrown.expect(NoSuchElementException.class); lexer.next(); },void assertNoMoreTokens(OptionSpecTokenizer lexer){assertFalse();expect(NoSuchElementException);},"['private', 'void', 'assertNoMoreTokens', '(', 'OptionSpecTokenizer', 'lexer', ')', '{', 'assertFalse', '(', 'lexer', '.', 'hasMore', '(', ')', ')', ';', 'thrown', '.', 'expect', '(', 'NoSuchElementException', '.', 'class', ')', ';', 'lexer', '.', 'next', '(', ')', ';', '}']","['void', 'assertNoMoreTokens', '(', 'OptionSpecTokenizer', 'lexer', ')', '{', 'assertFalse', '(', ')', ';', 'expect', '(', 'NoSuchElementException', ')', ';', '}']",33,17,6,151,97,24,42.51968503937008,59.25925925925925,,,,-1,-1,-1,-1,False
L347_checkNonPredefined_1.txt,code2seq,METHOD_NAME,token_wrong,0.3695,0.3925,16.66,20.3314,"{'n_total': 452, 'n_valid': 61, 'n_correct': 37}",125.517364,"private void checkNonPredefined(TypeOfBiometricData type, ASN1ObjectIdentifier value) { if (type.isPredefined()) { fail(""predefined type found when not expected.""); } if (!type.getBiometricDataOid().equals(value)) { fail(""data oid does not match.""); } }","void checkNonPredefined(TypeOfBiometricData type,ObjectIdentifier value){if(type()){("""");}if(getBiometricDataOid){fail(""oid"");}}","['private', 'void', 'checkNonPredefined', '(', 'TypeOfBiometricData', 'type', ',', 'ASN1ObjectIdentifier', 'value', ')', '{', 'if', '(', 'type', '.', 'isPredefined', '(', ')', ')', '{', 'fail', '(', '""predefined type found when not expected.""', ')', ';', '}', 'if', '(', '!', 'type', '.', 'getBiometricDataOid', '(', ')', '.', 'equals', '(', 'value', ')', ')', '{', 'fail', '(', '""data oid does not match.""', ')', ';', '}', '}']","['void', 'checkNonPredefined', '(', 'TypeOfBiometricData', 'type', ',', 'ObjectIdentifier', 'value', ')', '{', 'if', '(', 'type', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'if', '(', 'getBiometricDataOid', ')', '{', 'fail', '(', '""oid""', ')', ';', '}', '}']",48,34,6,253,128,24,54.58515283842795,33.33333333333333,,,,-1,-1,-1,-1,False
L348_absolutePathDoesntWork_1.txt,code2seq,METHOD_NAME,token_wrong,0.4426,0.3793,27.9417,28.7585,"{'n_total': 281, 'n_valid': 42, 'n_correct': 18}",85.935818,"@Test public void absolutePathDoesntWork() throws IOException { File someFile = setFile(""someFolder/someFile"").toContent(""""); File someFolder = someFile.getParentFile(); fileTree.exclude(someFolder.getAbsolutePath()); Assertions.assertThat(fileTree).containsExactlyInAnyOrder(someFile); }","@Test void absolutePathDoesntWork()throws IOException{FilesetFile(""someFolder"").toContent("""");someFolder.exclude(getAbsolutePath());Assertions.assertThat;}","['@', 'Test', 'public', 'void', 'absolutePathDoesntWork', '(', ')', 'throws', 'IOException', '{', 'File', 'someFile', '=', 'setFile', '(', '""someFolder/someFile""', ')', '.', 'toContent', '(', '""""', ')', ';', 'File', 'someFolder', '=', 'someFile', '.', 'getParentFile', '(', ')', ';', 'fileTree', '.', 'exclude', '(', 'someFolder', '.', 'getAbsolutePath', '(', ')', ')', ';', 'Assertions', '.', 'assertThat', '(', 'fileTree', ')', '.', 'containsExactlyInAnyOrder', '(', 'someFile', ')', ';', '}']","['@', 'Test', 'void', 'absolutePathDoesntWork', '(', ')', 'throws', 'IOException', '{', 'FilesetFile', '(', '""someFolder""', ')', '.', 'toContent', '(', '""""', ')', ';', 'someFolder', '.', 'exclude', '(', 'getAbsolutePath', '(', ')', ')', ';', 'Assertions', '.', 'assertThat', ';', '}']",56,33,6,288,155,28,51.153846153846146,46.0,,,,-1,-1,-1,-1,False
L349_checkConstruction_2.txt,code2seq,METHOD_NAME,token_wrong,0.805,0.6044,11.5372,12.5071,"{'n_total': 542, 'n_valid': 80, 'n_correct': 40}",169.814405,"private void checkConstruction(Admissions admissions, GeneralName name, NamingAuthority auth) throws IOException { checkValues(admissions, name, auth); admissions = Admissions.getInstance(admissions); checkValues(admissions, name, auth); ASN1InputStream aIn = new ASN1InputStream(admissions.toASN1Primitive().getEncoded()); ASN1Sequence info = (ASN1Sequence) aIn.readObject(); admissions = Admissions.getInstance(info); checkValues(admissions, name, auth); }","void checkConstruction(Admissions name,NamingAuthority auth){checkValues(admissions,name,auth);admissions=Admissions.getInstance();(getEncoded());ASN=(ASN)readObject();admissions=Admissions.getInstance;checkValues(admissions,name,auth);}","['private', 'void', 'checkConstruction', '(', 'Admissions', 'admissions', ',', 'GeneralName', 'name', ',', 'NamingAuthority', 'auth', ')', 'throws', 'IOException', '{', 'checkValues', '(', 'admissions', ',', 'name', ',', 'auth', ')', ';', 'admissions', '=', 'Admissions', '.', 'getInstance', '(', 'admissions', ')', ';', 'checkValues', '(', 'admissions', ',', 'name', ',', 'auth', ')', ';', 'ASN1InputStream', 'aIn', '=', 'new', 'ASN1InputStream', '(', 'admissions', '.', 'toASN1Primitive', '(', ')', '.', 'getEncoded', '(', ')', ')', ';', 'ASN1Sequence', 'info', '=', '(', 'ASN1Sequence', ')', 'aIn', '.', 'readObject', '(', ')', ';', 'admissions', '=', 'Admissions', '.', 'getInstance', '(', 'info', ')', ';', 'checkValues', '(', 'admissions', ',', 'name', ',', 'auth', ')', ';', '}']","['void', 'checkConstruction', '(', 'Admissions', 'name', ',', 'NamingAuthority', 'auth', ')', '{', 'checkValues', '(', 'admissions', ',', 'name', ',', 'auth', ')', ';', 'admissions', '=', 'Admissions', '.', 'getInstance', '(', ')', ';', '(', 'getEncoded', '(', ')', ')', ';', 'ASN', '=', '(', 'ASN', ')', 'readObject', '(', ')', ';', 'admissions', '=', 'Admissions', '.', 'getInstance', ';', 'checkValues', '(', 'admissions', ',', 'name', ',', 'auth', ')', ';', '}']",91,58,6,458,237,23,50.804597701149426,38.82352941176471,,,,-1,-1,-1,-1,False
L350_resetThreads_1.txt,code2seq,METHOD_NAME,token_wrong,0.3997,0.4893,2.6332,6.8699,"{'n_total': 220, 'n_valid': 21, 'n_correct': 20}",47.451464,public void resetThreads() { if (threads != null) { threads.clear(); } else { threads = new Vector<>(); } },void resetThreads(){if(threads=null){clear();}{threads();}},"['public', 'void', 'resetThreads', '(', ')', '{', 'if', '(', 'threads', '!=', 'null', ')', '{', 'threads', '.', 'clear', '(', ')', ';', '}', 'else', '{', 'threads', '=', 'new', 'Vector', '<', '>', '(', ')', ';', '}', '}']","['void', 'resetThreads', '(', ')', '{', 'if', '(', 'threads', '=', 'null', ')', '{', 'clear', '(', ')', ';', '}', '{', 'threads', '(', ')', ';', '}', '}']",33,24,6,107,59,18,53.93258426966292,33.33333333333333,,,,-1,-1,-1,-1,False
L351_onSuccess_1.txt,code2seq,METHOD_NAME,token_wrong,0.6975,0.637,6.1765,6.0707,"{'n_total': 119, 'n_valid': 11, 'n_correct': 11}",24.20267,@Override public void onSuccess() { lastEndpointPingNetworkStatus = NetworkStatus.newAvailableInstance(); if (connectCallbackManager != null) { connectCallbackManager.onConnect(); } },void onSuccess(){lastEndpointPingNetworkStatus();{onConnect();}},"['@', 'Override', 'public', 'void', 'onSuccess', '(', ')', '{', 'lastEndpointPingNetworkStatus', '=', 'NetworkStatus', '.', 'newAvailableInstance', '(', ')', ';', 'if', '(', 'connectCallbackManager', '!=', 'null', ')', '{', 'connectCallbackManager', '.', 'onConnect', '(', ')', ';', '}', '}']","['void', 'onSuccess', '(', ')', '{', 'lastEndpointPingNetworkStatus', '(', ')', ';', '{', 'onConnect', '(', ')', ';', '}', '}']",31,16,6,183,64,15,70.83333333333334,60.0,,,,-1,-1,-1,-1,False
L352_setContext_1.txt,code2seq,METHOD_NAME,token_wrong,0.3823,0.2435,13.9173,14.0617,"{'n_total': 384, 'n_valid': 35, 'n_correct': 28}",77.648224,public void setContext(GameContext context) { killMinionButton.setDisable(true); for (Player player : context.getPlayers()) { if (context.getSummonCount(player) > 0) { killMinionButton.setDisable(false); break; } } silenceButton.setDisable(killMinionButton.isDisabled()); },void setContext(GameContext context){killMinionButton();for(Player player:context()){if(0){(false);}}silenceButton.setDisable(killMinionButton);},"['public', 'void', 'setContext', '(', 'GameContext', 'context', ')', '{', 'killMinionButton', '.', 'setDisable', '(', 'true', ')', ';', 'for', '(', 'Player', 'player', ':', 'context', '.', 'getPlayers', '(', ')', ')', '{', 'if', '(', 'context', '.', 'getSummonCount', '(', 'player', ')', '>', '0', ')', '{', 'killMinionButton', '.', 'setDisable', '(', 'false', ')', ';', 'break', ';', '}', '}', 'silenceButton', '.', 'setDisable', '(', 'killMinionButton', '.', 'isDisabled', '(', ')', ')', ';', '}']","['void', 'setContext', '(', 'GameContext', 'context', ')', '{', 'killMinionButton', '(', ')', ';', 'for', '(', 'Player', 'player', ':', 'context', '(', ')', ')', '{', 'if', '(', '0', ')', '{', '(', 'false', ')', ';', '}', '}', 'silenceButton', '.', 'setDisable', '(', 'killMinionButton', ')', ';', '}']",62,40,6,273,145,16,49.80544747081712,39.285714285714285,,,,-1,-1,-1,-1,False
L353_resize_1.txt,code2seq,METHOD_NAME,token_wrong,0.6208,0.5441,9.4082,10.9386,"{'n_total': 304, 'n_valid': 36, 'n_correct': 26}",77.048102,"private void resize(int length) { if (buf.length < length) { byte[] tmp = new byte[length]; System.arraycopy(buf, 0, tmp, 0, pos); buf = tmp; } }",void resize(int length){if(length<length){tmp[length];arraycopy(buf);}},"['private', 'void', 'resize', '(', 'int', 'length', ')', '{', 'if', '(', 'buf', '.', 'length', '<', 'length', ')', '{', 'byte', '[', ']', 'tmp', '=', 'new', 'byte', '[', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'buf', ',', '0', ',', 'tmp', ',', '0', ',', 'pos', ')', ';', 'buf', '=', 'tmp', ';', '}', '}']","['void', 'resize', '(', 'int', 'length', ')', '{', 'if', '(', 'length', '<', 'length', ')', '{', 'tmp', '[', 'length', ']', ';', 'arraycopy', '(', 'buf', ')', ';', '}', '}']",49,26,6,145,71,12,55.639097744360896,53.48837209302325,,,,-1,-1,-1,-1,False
L354_newInstance_1.txt,code2seq,METHOD_NAME,token_wrong,0.4093,0.5383,5.5657,6.6069,"{'n_total': 399, 'n_valid': 40, 'n_correct': 27}",92.318313,"@Override public Function newInstance(ObjList<Function> args, int position, CairoConfiguration configuration) { final double left = args.getQuick(0).getDouble(null); if (Double.isNaN(left)) { return new BooleanConstant(position, false); } return new FuncCV(position, left, args.getQuick(1)); }","@Override Function newInstance(ObjList<Function>args,int position,CairoConfiguration configuration){(0).getDouble;if((left)){(false);}return new FuncCV(position);}","['@', 'Override', 'public', 'Function', 'newInstance', '(', 'ObjList', '<', 'Function', '>', 'args', ',', 'int', 'position', ',', 'CairoConfiguration', 'configuration', ')', '{', 'final', 'double', 'left', '=', 'args', '.', 'getQuick', '(', '0', ')', '.', 'getDouble', '(', 'null', ')', ';', 'if', '(', 'Double', '.', 'isNaN', '(', 'left', ')', ')', '{', 'return', 'new', 'BooleanConstant', '(', 'position', ',', 'false', ')', ';', '}', 'return', 'new', 'FuncCV', '(', 'position', ',', 'left', ',', 'args', '.', 'getQuick', '(', '1', ')', ')', ';', '}']","['@', 'Override', 'Function', 'newInstance', '(', 'ObjList', '<', 'Function', '>', 'args', ',', 'int', 'position', ',', 'CairoConfiguration', 'configuration', ')', '{', '(', '0', ')', '.', 'getDouble', ';', 'if', '(', '(', 'left', ')', ')', '{', '(', 'false', ')', ';', '}', 'return', 'new', 'FuncCV', '(', 'position', ')', ';', '}']",72,44,6,293,163,17,47.10144927536232,42.42424242424242,,,,-1,-1,-1,-1,False
L355_streamBinaryData_1.txt,code2seq,METHOD_NAME,token_wrong,0.5837,0.7315,7.7935,9.8714,"{'n_total': 463, 'n_valid': 75, 'n_correct': 43}",161.21768,"public static BinaryData streamBinaryData(Path p, String mimeType) { try { final long size = Files.size(p); final InputStream dataStream = Files.newInputStream(p); return new BinaryData(dataStream, size, mimeType); } catch (IOException ex) { throw new RuntimeException(ex); } }","BinaryData streamBinaryData(Path p,String mimeType){try{size();dataStream();return newBinaryData();}catch(IOException ex){(ex);}}","['public', 'static', 'BinaryData', 'streamBinaryData', '(', 'Path', 'p', ',', 'String', 'mimeType', ')', '{', 'try', '{', 'final', 'long', 'size', '=', 'Files', '.', 'size', '(', 'p', ')', ';', 'final', 'InputStream', 'dataStream', '=', 'Files', '.', 'newInputStream', '(', 'p', ')', ';', 'return', 'new', 'BinaryData', '(', 'dataStream', ',', 'size', ',', 'mimeType', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'ex', ')', ';', '}', '}']","['BinaryData', 'streamBinaryData', '(', 'Path', 'p', ',', 'String', 'mimeType', ')', '{', 'try', '{', 'size', '(', ')', ';', 'dataStream', '(', ')', ';', 'return', 'newBinaryData', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', '(', 'ex', ')', ';', '}', '}']",63,38,6,277,129,22,58.03921568627452,43.859649122807014,,,,-1,-1,-1,-1,False
L356_getMutableConfig_1.txt,code2seq,METHOD_NAME,token_wrong,0.549,0.549,16.2314,16.2314,"{'n_total': 159, 'n_valid': 35, 'n_correct': 9}",72.317451,public Properties getMutableConfig() { Properties rv = new Properties(); rv.putAll(m_mutableConfig); return rv; },Properties getMutableConfig(){Properties rv=new Properties();rv.putAll(m_mutableConfig);return rv;},"['public', 'Properties', 'getMutableConfig', '(', ')', '{', 'Properties', 'rv', '=', 'new', 'Properties', '(', ')', ';', 'rv', '.', 'putAll', '(', 'm_mutableConfig', ')', ';', 'return', 'rv', ';', '}']","['Properties', 'getMutableConfig', '(', ')', '{', 'Properties', 'rv', '=', 'new', 'Properties', '(', ')', ';', 'rv', '.', 'putAll', '(', 'm_mutableConfig', ')', ';', 'return', 'rv', ';', '}']",25,24,6,113,99,22,15.384615384615385,5.263157894736842,,,,-1,-1,-1,-1,False
L357_startMoveQuestions_1.txt,code2seq,METHOD_NAME,token_wrong,0.3796,0.3796,24.579,24.579,"{'n_total': 116, 'n_valid': 16, 'n_correct': 9}",34.595623,"public String startMoveQuestions() { setOutComeParams(""editPool""); getCheckedQuestions(); return ""movePool""; }","String startMoveQuestions(){setOutComeParams(""editPool"");getCheckedQuestions();return""movePool"";}","['public', 'String', 'startMoveQuestions', '(', ')', '{', 'setOutComeParams', '(', '""editPool""', ')', ';', 'getCheckedQuestions', '(', ')', ';', 'return', '""movePool""', ';', '}']","['String', 'startMoveQuestions', '(', ')', '{', 'setOutComeParams', '(', '""editPool""', ')', ';', 'getCheckedQuestions', '(', ')', ';', 'return', '""movePool""', ';', '}']",19,18,6,110,97,24,15.11627906976744,7.6923076923076925,,,,-1,-1,-1,-1,False
L358_isUserInSession_1.txt,code2seq,METHOD_NAME,token_wrong,0.6889,0.7584,21.1474,19.8599,"{'n_total': 284, 'n_valid': 26, 'n_correct': 23}",61.185792,public UserSession isUserInSession(int userId) { for (UserSession us : loggedSessions.values()) { if (us.getUser().getId() == userId) { return us; } } return null; },UserSession isUserInSession(int userId){for(UserSession us:values()){if(getId()==userId){}}},"['public', 'UserSession', 'isUserInSession', '(', 'int', 'userId', ')', '{', 'for', '(', 'UserSession', 'us', ':', 'loggedSessions', '.', 'values', '(', ')', ')', '{', 'if', '(', 'us', '.', 'getUser', '(', ')', '.', 'getId', '(', ')', '==', 'userId', ')', '{', 'return', 'us', ';', '}', '}', 'return', 'null', ';', '}']","['UserSession', 'isUserInSession', '(', 'int', 'userId', ')', '{', 'for', '(', 'UserSession', 'us', ':', 'values', '(', ')', ')', '{', 'if', '(', 'getId', '(', ')', '==', 'userId', ')', '{', '}', '}', '}']",44,29,6,165,92,21,50.69444444444444,39.473684210526315,,,,-1,-1,-1,-1,False
L359_addLoggerFilter_1.txt,code2seq,METHOD_NAME,token_wrong,0.5633,0.6022,19.3915,19.3858,"{'n_total': 418, 'n_valid': 47, 'n_correct': 26}",99.773854,"private void addLoggerFilter(T session, Logger logger) { if (logger != null) { LoggingFilter.addIfNeeded(logger, session, getTransportMetadata().getName()); if (session.getParent() != null) { LoggingFilter.moveAfterCodec(session.getParent()); } } }","void addLoggerFilter(T session,Logger logger){if(logger=null){LoggingFilter.addIfNeeded(logger,session);if(session){(session());}}}","['private', 'void', 'addLoggerFilter', '(', 'T', 'session', ',', 'Logger', 'logger', ')', '{', 'if', '(', 'logger', '!=', 'null', ')', '{', 'LoggingFilter', '.', 'addIfNeeded', '(', 'logger', ',', 'session', ',', 'getTransportMetadata', '(', ')', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'session', '.', 'getParent', '(', ')', '!=', 'null', ')', '{', 'LoggingFilter', '.', 'moveAfterCodec', '(', 'session', '.', 'getParent', '(', ')', ')', ';', '}', '}', '}']","['void', 'addLoggerFilter', '(', 'T', 'session', ',', 'Logger', 'logger', ')', '{', 'if', '(', 'logger', '=', 'null', ')', '{', 'LoggingFilter', '.', 'addIfNeeded', '(', 'logger', ',', 'session', ')', ';', 'if', '(', 'session', ')', '{', '(', 'session', '(', ')', ')', ';', '}', '}', '}']",60,40,6,248,131,21,51.541850220264315,37.03703703703704,,,,-1,-1,-1,-1,False
L360_hasDuplicates_1.txt,code2seq,METHOD_NAME,token_wrong,0.3529,0.5348,13.417,13.5446,"{'n_total': 422, 'n_valid': 48, 'n_correct': 31}",109.435685,"public static boolean hasDuplicates(final List<GbGradingSchemaEntry> schemaList) { final List<String> letterGrades = schemaList.stream().map(GbGradingSchemaEntry::getGrade).collect(Collectors.toList()); return !letterGrades.stream().filter(i -> Collections.frequency(letterGrades, i) > 1).collect(Collectors.toSet()).isEmpty(); }","boolean hasDuplicates(List<GbGradingSchemaEntry>schemaList){List<String>letterGrades=(GbGradingSchemaEntry::getGrade).collect();stream().filter(i->Collections(letterGrades,i)>1).isEmpty();}","['public', 'static', 'boolean', 'hasDuplicates', '(', 'final', 'List', '<', 'GbGradingSchemaEntry', '>', 'schemaList', ')', '{', 'final', 'List', '<', 'String', '>', 'letterGrades', '=', 'schemaList', '.', 'stream', '(', ')', '.', 'map', '(', 'GbGradingSchemaEntry', '::', 'getGrade', ')', '.', 'collect', '(', 'Collectors', '.', 'toList', '(', ')', ')', ';', 'return', '!', 'letterGrades', '.', 'stream', '(', ')', '.', 'filter', '(', 'i', '->', 'Collections', '.', 'frequency', '(', 'letterGrades', ',', 'i', ')', '>', '1', ')', '.', 'collect', '(', 'Collectors', '.', 'toSet', '(', ')', ')', '.', 'isEmpty', '(', ')', ';', '}']","['boolean', 'hasDuplicates', '(', 'List', '<', 'GbGradingSchemaEntry', '>', 'schemaList', ')', '{', 'List', '<', 'String', '>', 'letterGrades', '=', '(', 'GbGradingSchemaEntry', '::', 'getGrade', ')', '.', 'collect', '(', ')', ';', 'stream', '(', ')', '.', 'filter', '(', 'i', '->', 'Collections', '(', 'letterGrades', ',', 'i', ')', '>', '1', ')', '.', 'isEmpty', '(', ')', ';', '}']",80,49,6,329,189,19,45.16129032258064,41.891891891891895,,,,-1,-1,-1,-1,False
L361_beforeDisplayUser_1.txt,code2seq,METHOD_NAME,token_wrong,0.7397,0.5631,29.0115,24.9339,"{'n_total': 388, 'n_valid': 44, 'n_correct': 33}",95.184824,"private void beforeDisplayUser(Set attributeSchemas) { for (Iterator iter = attributeSchemas.iterator(); iter.hasNext(); ) { AttributeSchema as = (AttributeSchema) iter.next(); String name = as.getName(); if (name.equals(namingAttribute) || name.equals(""ChangePassword"")) { iter.remove(); } } }","void beforeDisplayUser(){for(Iterator iter=iterator();;){if(equals()|equals(""ChangePassword"")){remove();}}}","['private', 'void', 'beforeDisplayUser', '(', 'Set', 'attributeSchemas', ')', '{', 'for', '(', 'Iterator', 'iter', '=', 'attributeSchemas', '.', 'iterator', '(', ')', ';', 'iter', '.', 'hasNext', '(', ')', ';', ')', '{', 'AttributeSchema', 'as', '=', '(', 'AttributeSchema', ')', 'iter', '.', 'next', '(', ')', ';', 'String', 'name', '=', 'as', '.', 'getName', '(', ')', ';', 'if', '(', 'name', '.', 'equals', '(', 'namingAttribute', ')', '||', 'name', '.', 'equals', '(', '""ChangePassword""', ')', ')', '{', 'iter', '.', 'remove', '(', ')', ';', '}', '}', '}']","['void', 'beforeDisplayUser', '(', ')', '{', 'for', '(', 'Iterator', 'iter', '=', 'iterator', '(', ')', ';', ';', ')', '{', 'if', '(', 'equals', '(', ')', '|', 'equals', '(', '""ChangePassword""', ')', ')', '{', 'remove', '(', ')', ';', '}', '}', '}']",74,36,6,294,107,23,69.00369003690037,55.88235294117647,,,,-1,-1,-1,-1,False
L362_valueOf_1.txt,code2seq,METHOD_NAME,token_wrong,0.5567,0.5453,15.312,15.5121,"{'n_total': 273, 'n_valid': 37, 'n_correct': 23}",78.383832,public static BigInteger valueOf(long val) { if (val >= 0 && val < SMALL_CONSTANTS.length) { return SMALL_CONSTANTS[(int) val]; } return createValueOf(val); },BigInteger valueOf(long val){if(val){return SMALL[(int)val];}createValueOf();},"['public', 'static', 'BigInteger', 'valueOf', '(', 'long', 'val', ')', '{', 'if', '(', 'val', '>=', '0', '&&', 'val', '<', 'SMALL_CONSTANTS', '.', 'length', ')', '{', 'return', 'SMALL_CONSTANTS', '[', '(', 'int', ')', 'val', ']', ';', '}', 'return', 'createValueOf', '(', 'val', ')', ';', '}']","['BigInteger', 'valueOf', '(', 'long', 'val', ')', '{', 'if', '(', 'val', ')', '{', 'return', 'SMALL', '[', '(', 'int', ')', 'val', ']', ';', '}', 'createValueOf', '(', ')', ';', '}']",39,27,6,158,78,13,55.172413793103445,36.36363636363637,,,,-1,-1,-1,-1,False
L363_testSecurityExceptionHandling_1.txt,code2seq,METHOD_NAME,token_wrong,0.5363,0.4453,40.1341,38.5284,"{'n_total': 337, 'n_valid': 44, 'n_correct': 26}",92.511025,@Test public void testSecurityExceptionHandling() { env = mock(PassthroughEnvironmentAccessor.class); resolver = new PropertiesFileResolver(env); when(env.getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY)).thenThrow(new SecurityException()); assertNull(resolver.findCloudPropertiesFileFromSystem()); verify(env).getSystemProperty(LocalConfigConnector.PROPERTIES_FILE_PROPERTY); },@Test void testSecurityExceptionHandling(){(PassthroughEnvironmentAccessor);((PROPERTY)).thenThrow(SecurityException());(resolver.findCloudPropertiesFileFromSystem());verify().getSystemProperty(LocalConfigConnector.FILE);},"['@', 'Test', 'public', 'void', 'testSecurityExceptionHandling', '(', ')', '{', 'env', '=', 'mock', '(', 'PassthroughEnvironmentAccessor', '.', 'class', ')', ';', 'resolver', '=', 'new', 'PropertiesFileResolver', '(', 'env', ')', ';', 'when', '(', 'env', '.', 'getSystemProperty', '(', 'LocalConfigConnector', '.', 'PROPERTIES_FILE_PROPERTY', ')', ')', '.', 'thenThrow', '(', 'new', 'SecurityException', '(', ')', ')', ';', 'assertNull', '(', 'resolver', '.', 'findCloudPropertiesFileFromSystem', '(', ')', ')', ';', 'verify', '(', 'env', ')', '.', 'getSystemProperty', '(', 'LocalConfigConnector', '.', 'PROPERTIES_FILE_PROPERTY', ')', ';', '}']","['@', 'Test', 'void', 'testSecurityExceptionHandling', '(', ')', '{', '(', 'PassthroughEnvironmentAccessor', ')', ';', '(', '(', 'PROPERTY', ')', ')', '.', 'thenThrow', '(', 'SecurityException', '(', ')', ')', ';', '(', 'resolver', '.', 'findCloudPropertiesFileFromSystem', '(', ')', ')', ';', 'verify', '(', ')', '.', 'getSystemProperty', '(', 'LocalConfigConnector', '.', 'FILE', ')', ';', '}']",67,44,6,394,222,35,47.910863509749305,37.704918032786885,,,,-1,-1,-1,-1,False
L364_testOther_1.txt,code2seq,METHOD_NAME,token_wrong,0.6125,0.8312,13.7425,16.6782,"{'n_total': 237, 'n_valid': 47, 'n_correct': 18}",96.289362,@Test public void testOther() { TestObjectWithConstructor value = new TestObjectWithConstructor(); value.value = 12; MetaPrimitiveType type = new MetaPrimitiveType(); type.setImplementationType(TestObjectWithConstructor.class); },@Test void testOther(){type();type.setImplementationType();},"['@', 'Test', 'public', 'void', 'testOther', '(', ')', '{', 'TestObjectWithConstructor', 'value', '=', 'new', 'TestObjectWithConstructor', '(', ')', ';', 'value', '.', 'value', '=', '12', ';', 'MetaPrimitiveType', 'type', '=', 'new', 'MetaPrimitiveType', '(', ')', ';', 'type', '.', 'setImplementationType', '(', 'TestObjectWithConstructor', '.', 'class', ')', ';', '}']","['@', 'Test', 'void', 'testOther', '(', ')', '{', 'type', '(', ')', ';', 'type', '.', 'setImplementationType', '(', ')', ';', '}']",40,18,6,229,60,15,78.97196261682244,64.70588235294117,,,,-1,-1,-1,-1,False
L365_shouldAddTimeoutParameter_1.txt,code2seq,METHOD_NAME,token_wrong,0.7012,0.7069,21.326,27.1492,"{'n_total': 286, 'n_valid': 43, 'n_correct': 28}",86.098479,"@Test public void shouldAddTimeoutParameter() throws Exception { IdleTimeoutExtension extension = new IdleTimeoutExtension(requested, extensionHelper, 1234L); assertEquals(extensionName, extension.getExtensionHeader().getExtensionToken()); assertEquals(Long.toString(1234L), extension.getExtensionHeader().getParameters().get(0).getValue()); }","void shouldAddTimeoutParameter()throws Exception{newIdleTimeoutExtension();assertEquals(toString(),extension.getExtensionHeader().getValue);}","['@', 'Test', 'public', 'void', 'shouldAddTimeoutParameter', '(', ')', 'throws', 'Exception', '{', 'IdleTimeoutExtension', 'extension', '=', 'new', 'IdleTimeoutExtension', '(', 'requested', ',', 'extensionHelper', ',', '1234L', ')', ';', 'assertEquals', '(', 'extensionName', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getExtensionToken', '(', ')', ')', ';', 'assertEquals', '(', 'Long', '.', 'toString', '(', '1234L', ')', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getParameters', '(', ')', '.', 'get', '(', '0', ')', '.', 'getValue', '(', ')', ')', ';', '}']","['void', 'shouldAddTimeoutParameter', '(', ')', 'throws', 'Exception', '{', 'newIdleTimeoutExtension', '(', ')', ';', 'assertEquals', '(', 'toString', '(', ')', ',', 'extension', '.', 'getExtensionHeader', '(', ')', '.', 'getValue', ')', ';', '}']",68,27,6,343,141,31,64.74358974358975,66.12903225806451,,,,-1,-1,-1,-1,False
L366_formatHighLows_3.txt,code2seq,METHOD_NAME,token_wrong,0.9821,0.9695,9.4927,11.6153,"{'n_total': 264, 'n_valid': 35, 'n_correct': 30}",76.678656,"public static String formatHighLows(Context context, double high, double low) { long roundedHigh = Math.round(high); long roundedLow = Math.round(low); String formattedHigh = formatTemperature(context, roundedHigh); String formattedLow = formatTemperature(context, roundedLow); String highLowStr = formattedHigh + "" / "" + formattedLow; return highLowStr; }","String formatHighLows(Context context,double high,double low){(low);formatTemperature();highLowStr="""";}","['public', 'static', 'String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', 'long', 'roundedHigh', '=', 'Math', '.', 'round', '(', 'high', ')', ';', 'long', 'roundedLow', '=', 'Math', '.', 'round', '(', 'low', ')', ';', 'String', 'formattedHigh', '=', 'formatTemperature', '(', 'context', ',', 'roundedHigh', ')', ';', 'String', 'formattedLow', '=', 'formatTemperature', '(', 'context', ',', 'roundedLow', ')', ';', 'String', 'highLowStr', '=', 'formattedHigh', '+', '"" / ""', '+', 'formattedLow', ';', 'return', 'highLowStr', ';', '}']","['String', 'formatHighLows', '(', 'Context', 'context', ',', 'double', 'high', ',', 'double', 'low', ')', '{', '(', 'low', ')', ';', 'formatTemperature', '(', ')', ';', 'highLowStr', '=', '""""', ';', '}']",68,26,6,356,103,20,75.29761904761905,67.74193548387096,,,,-1,-1,-1,-1,False
L367_testVirtualColumn_1.txt,code2seq,METHOD_NAME,token_wrong,0.5516,0.521,27.3636,21.4423,"{'n_total': 1888, 'n_valid': 699, 'n_correct': 228}",1382.366336,"@Test public void testVirtualColumn() throws Exception { final String expected = ""str\tboo\tcol0\tf\td\tcol1\n"" + ""BZ\ttrue\t1.673692762852\t0.6235\t1.050231933594\tfalse\n"" + ""XX\tfalse\t567.512389898300\t0.7780\t566.734375000000\tfalse\n"" + ""KK\tfalse\t0.550908231392\t0.5509\t0.000013792171\tfalse\n"" + ""AX\tfalse\t0.020375759351\t0.0204\t0.000000567185\tfalse\n"" + ""AX\ttrue\t-511.515212714672\t0.4848\t-512.000000000000\tfalse\n"" + ""AX\ttrue\t0.972335502505\t0.2969\t0.675451681018\ttrue\n"" + ""BZ\tfalse\t0.904826603830\t0.5725\t0.332301996648\ttrue\n"" + ""BZ\ttrue\t0.596724832495\t0.5967\t0.000001752813\tfalse\n"" + ""AX\tfalse\t0.161007094177\t0.1609\t0.000076281818\ttrue\n"" + ""BZ\tfalse\t0.350913291764\t0.3509\t0.000000005555\ttrue\n"" + ""XX\tfalse\t0.727417677178\t0.7274\t0.000002473130\tfalse\n"" + ""KK\tfalse\t633.483788669109\t0.5619\t632.921875000000\tfalse\n"" + ""AX\tfalse\t0.543259224330\t0.5433\t0.000000020896\tfalse\n"" + ""BZ\tfalse\t0.551534552826\t0.5442\t0.007371325744\tfalse\n"" + ""XX\ttrue\t0.674562766890\t0.6746\t0.000000014643\tfalse\n"" + ""AX\ttrue\t512.821699082851\t0.8217\t512.000000000000\tfalse\n"" + ""XX\ttrue\t864.359103977680\t0.3591\t864.000000000000\ttrue\n"" + ""AX\ttrue\t0.682714500508\t0.6827\t0.000000157437\ttrue\n"" + ""BZ\tfalse\t-841.883159995079\t0.1168\t-842.000000000000\tfalse\n"" + ""BZ\tfalse\t0.496688359286\t0.4967\t0.000032060649\tfalse\n""; assertThat(expected, ""select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc"", true); assertThat(expected, ""select str, boo, f+d, f, d , prev(boo) over (partition by str) from '*!*abc'"", true); }","void testVirtualColumn()throws Exception{String=""n""+""""+""""+""""+""AX1t""+""..""+""""+""t0.6t0.""+""""+""""+""t0.1n""+""BZ\t0."";assertThat(expected,""select str boo fd f"",true);}","['@', 'Test', 'public', 'void', 'testVirtualColumn', '(', ')', 'throws', 'Exception', '{', 'final', 'String', 'expected', '=', '""str\\tboo\\tcol0\\tf\\td\\tcol1\\n""', '+', '""BZ\\ttrue\\t1.673692762852\\t0.6235\\t1.050231933594\\tfalse\\n""', '+', '""XX\\tfalse\\t567.512389898300\\t0.7780\\t566.734375000000\\tfalse\\n""', '+', '""KK\\tfalse\\t0.550908231392\\t0.5509\\t0.000013792171\\tfalse\\n""', '+', '""AX\\tfalse\\t0.020375759351\\t0.0204\\t0.000000567185\\tfalse\\n""', '+', '""AX\\ttrue\\t-511.515212714672\\t0.4848\\t-512.000000000000\\tfalse\\n""', '+', '""AX\\ttrue\\t0.972335502505\\t0.2969\\t0.675451681018\\ttrue\\n""', '+', '""BZ\\tfalse\\t0.904826603830\\t0.5725\\t0.332301996648\\ttrue\\n""', '+', '""BZ\\ttrue\\t0.596724832495\\t0.5967\\t0.000001752813\\tfalse\\n""', '+', '""AX\\tfalse\\t0.161007094177\\t0.1609\\t0.000076281818\\ttrue\\n""', '+', '""BZ\\tfalse\\t0.350913291764\\t0.3509\\t0.000000005555\\ttrue\\n""', '+', '""XX\\tfalse\\t0.727417677178\\t0.7274\\t0.000002473130\\tfalse\\n""', '+', '""KK\\tfalse\\t633.483788669109\\t0.5619\\t632.921875000000\\tfalse\\n""', '+', '""AX\\tfalse\\t0.543259224330\\t0.5433\\t0.000000020896\\tfalse\\n""', '+', '""BZ\\tfalse\\t0.551534552826\\t0.5442\\t0.007371325744\\tfalse\\n""', '+', '""XX\\ttrue\\t0.674562766890\\t0.6746\\t0.000000014643\\tfalse\\n""', '+', '""AX\\ttrue\\t512.821699082851\\t0.8217\\t512.000000000000\\tfalse\\n""', '+', '""XX\\ttrue\\t864.359103977680\\t0.3591\\t864.000000000000\\ttrue\\n""', '+', '""AX\\ttrue\\t0.682714500508\\t0.6827\\t0.000000157437\\ttrue\\n""', '+', '""BZ\\tfalse\\t-841.883159995079\\t0.1168\\t-842.000000000000\\tfalse\\n""', '+', '""BZ\\tfalse\\t0.496688359286\\t0.4967\\t0.000032060649\\tfalse\\n""', ';', 'assertThat', '(', 'expected', ',', '""select str, boo, f+d, f, d , prev(boo) over (partition by str) from abc""', ',', 'true', ')', ';', 'assertThat', '(', 'expected', ',', '""select str, boo, f+d, f, d , prev(boo) over (partition by str) from \'*!*abc\'""', ',', 'true', ')', ';', '}']","['void', 'testVirtualColumn', '(', ')', 'throws', 'Exception', '{', 'String', '=', '""n""', '+', '""""', '+', '""""', '+', '""""', '+', '""AX1t""', '+', '""..""', '+', '""""', '+', '""t0.6t0.""', '+', '""""', '+', '""""', '+', '""t0.1n""', '+', '""BZ\\t0.""', ';', 'assertThat', '(', 'expected', ',', '""select str boo fd f""', ',', 'true', ')', ';', '}']",75,43,6,1599,158,23,91.43401015228426,46.3768115942029,,,,-1,-1,-1,-1,False
L368_onClick_2.txt,code2seq,METHOD_NAME,token_wrong,0.6239,0.849,5.6292,8.4393,"{'n_total': 256, 'n_valid': 57, 'n_correct': 25}",117.141942,"@Override public void onClick(String weatherForDay) { Context context = this; Class destinationClass = DetailActivity.class; Intent intentToStartDetailActivity = new Intent(context, destinationClass); intentToStartDetailActivity.putExtra(Intent.EXTRA_TEXT, weatherForDay); startActivity(intentToStartDetailActivity); }",@Override void onClick(String weatherForDay){Context intentToStartDetailActivity=newputExtra();},"['@', 'Override', 'public', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'context', '=', 'this', ';', 'Class', 'destinationClass', '=', 'DetailActivity', '.', 'class', ';', 'Intent', 'intentToStartDetailActivity', '=', 'new', 'Intent', '(', 'context', ',', 'destinationClass', ')', ';', 'intentToStartDetailActivity', '.', 'putExtra', '(', 'Intent', '.', 'EXTRA_TEXT', ',', 'weatherForDay', ')', ';', 'startActivity', '(', 'intentToStartDetailActivity', ')', ';', '}']","['@', 'Override', 'void', 'onClick', '(', 'String', 'weatherForDay', ')', '{', 'Context', 'intentToStartDetailActivity', '=', 'newputExtra', '(', ')', ';', '}']",50,17,6,318,96,13,72.78688524590164,75.0,,,,-1,-1,-1,-1,False
L369_setDefaultCommandChild_1.txt,code2seq,METHOD_NAME,token_wrong,0.9333,0.773,22.2955,21.7729,"{'n_total': 289, 'n_valid': 25, 'n_correct': 23}",57.980698,"public void setDefaultCommandChild(String name) { try { ViewBean vb = getParentViewBean(); String value = (String) vb.getDisplayFieldValue(name); setValue(""action"", value); } catch (JspException ex) { setValue(""action"", name); } }","void setDefaultCommandChild(String name){try{value=(String)vb(""action"",value);}catch(JspException ex){setValue();}}","['public', 'void', 'setDefaultCommandChild', '(', 'String', 'name', ')', '{', 'try', '{', 'ViewBean', 'vb', '=', 'getParentViewBean', '(', ')', ';', 'String', 'value', '=', '(', 'String', ')', 'vb', '.', 'getDisplayFieldValue', '(', 'name', ')', ';', 'setValue', '(', '""action""', ',', 'value', ')', ';', '}', 'catch', '(', 'JspException', 'ex', ')', '{', 'setValue', '(', '""action""', ',', 'name', ')', ';', '}', '}']","['void', 'setDefaultCommandChild', '(', 'String', 'name', ')', '{', 'try', '{', 'value', '=', '(', 'String', ')', 'vb', '(', '""action""', ',', 'value', ')', ';', '}', 'catch', '(', 'JspException', 'ex', ')', '{', 'setValue', '(', ')', ';', '}', '}']",53,34,6,230,115,28,56.930693069306926,40.42553191489361,,,,-1,-1,-1,-1,False
L370_shouldMatchEqualsSearch_1.txt,code2seq,METHOD_NAME,token_wrong,0.4539,0.473,19.9599,18.7096,"{'n_total': 306, 'n_valid': 37, 'n_correct': 22}",83.809316,"@Test public void shouldMatchEqualsSearch() { QueryFilter<String> queryFilter = equalTo(""param1"", ""value1""); boolean result = queryFilter.accept(filterVisitor, serviceConfig); assertThat(result).isTrue(); }","@Test void shouldMatchEqualsSearch(){QueryFilter<String>queryFilter=equalTo("""",""1"");boolean result=(filterVisitor)assertThat().isTrue();}","['@', 'Test', 'public', 'void', 'shouldMatchEqualsSearch', '(', ')', '{', 'QueryFilter', '<', 'String', '>', 'queryFilter', '=', 'equalTo', '(', '""param1""', ',', '""value1""', ')', ';', 'boolean', 'result', '=', 'queryFilter', '.', 'accept', '(', 'filterVisitor', ',', 'serviceConfig', ')', ';', 'assertThat', '(', 'result', ')', '.', 'isTrue', '(', ')', ';', '}']","['@', 'Test', 'void', 'shouldMatchEqualsSearch', '(', ')', '{', 'QueryFilter', '<', 'String', '>', 'queryFilter', '=', 'equalTo', '(', '""""', ',', '""1""', ')', ';', 'boolean', 'result', '=', '(', 'filterVisitor', ')', 'assertThat', '(', ')', '.', 'isTrue', '(', ')', ';', '}']",43,35,6,206,137,29,38.983050847457626,21.62162162162162,,,,-1,-1,-1,-1,False
L371_getAssessment_1.txt,code2seq,METHOD_NAME,token_wrong,0.8745,0.8631,7.231,8.6842,"{'n_total': 353, 'n_valid': 30, 'n_correct': 26}",69.647824,public AssessmentIfc getAssessment() throws DataFacadeException { try { this.data = (SectionDataIfc) section.getData(); } catch (AssessmentException ex) { throw new DataFacadeException(ex.getMessage()); } return new AssessmentFacade(this.data.getAssessment()); },AssessmentIfc getAssessment()throws DataFacadeException{try{getData();}catch(AssessmentException ex){(ex);}(this);},"['public', 'AssessmentIfc', 'getAssessment', '(', ')', 'throws', 'DataFacadeException', '{', 'try', '{', 'this', '.', 'data', '=', '(', 'SectionDataIfc', ')', 'section', '.', 'getData', '(', ')', ';', '}', 'catch', '(', 'AssessmentException', 'ex', ')', '{', 'throw', 'new', 'DataFacadeException', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', '}', 'return', 'new', 'AssessmentFacade', '(', 'this', '.', 'data', '.', 'getAssessment', '(', ')', ')', ';', '}']","['AssessmentIfc', 'getAssessment', '(', ')', 'throws', 'DataFacadeException', '{', 'try', '{', 'getData', '(', ')', ';', '}', 'catch', '(', 'AssessmentException', 'ex', ')', '{', '(', 'ex', ')', ';', '}', '(', 'this', ')', ';', '}']",56,30,6,262,115,19,60.49382716049383,52.0,,,,-1,-1,-1,-1,False
L372_process_2.txt,code2seq,METHOD_NAME,token_wrong,0.8312,0.7912,11.8232,10.9964,"{'n_total': 368, 'n_valid': 41, 'n_correct': 39}",90.56453,"@Override public boolean process(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException { String pathInfo = request.getPathInfo(); if (pathInfo != null && pathInfo.startsWith(""/"" + GitlabWebhooks.URLNAME + ""/"")) { chain.doFilter(request, response); return true; } return false; }","@Override boolean process(HttpServletRequest request,HttpServletResponse response,FilterChain chain){if((""""+"""")){doFilter();}}","['@', 'Override', 'public', 'boolean', 'process', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ',', 'FilterChain', 'chain', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'String', 'pathInfo', '=', 'request', '.', 'getPathInfo', '(', ')', ';', 'if', '(', 'pathInfo', '!=', 'null', '&&', 'pathInfo', '.', 'startsWith', '(', '""/""', '+', 'GitlabWebhooks', '.', 'URLNAME', '+', '""/""', ')', ')', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', 'return', 'true', ';', '}', 'return', 'false', ';', '}']","['@', 'Override', 'boolean', 'process', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ',', 'FilterChain', 'chain', ')', '{', 'if', '(', '(', '""""', '+', '""""', ')', ')', '{', 'doFilter', '(', ')', ';', '}', '}']",66,30,6,338,126,13,65.23076923076923,60.0,,,,-1,-1,-1,-1,False
L373_initStreams_1.txt,code2seq,METHOD_NAME,token_wrong,0.4203,0.3011,8.7596,11.4619,"{'n_total': 657, 'n_valid': 87, 'n_correct': 49}",185.306597,"private void initStreams() throws IOException { boolean quote = PropUtil.getBooleanProperty(session.getProperties(), ""mail.debug.quote"", false); traceInput = new TraceInputStream(serverSocket.getInputStream(), traceLogger); traceInput.setQuote(quote); traceOutput = new TraceOutputStream(serverSocket.getOutputStream(), traceLogger); traceOutput.setQuote(quote); serverOutput = new BufferedOutputStream(traceOutput); serverInput = new BufferedInputStream(traceInput); lineInputStream = new LineInputStream(serverInput); }","void initStreams(){quote(getProperties(),""quote"",false);traceInput=TraceInputStream(getInputStream(),traceLogger);traceInput.setQuote();traceOutput=(traceLogger).setQuote();serverOutput=(traceOutput)(serverInput);}","['private', 'void', 'initStreams', '(', ')', 'throws', 'IOException', '{', 'boolean', 'quote', '=', 'PropUtil', '.', 'getBooleanProperty', '(', 'session', '.', 'getProperties', '(', ')', ',', '""mail.debug.quote""', ',', 'false', ')', ';', 'traceInput', '=', 'new', 'TraceInputStream', '(', 'serverSocket', '.', 'getInputStream', '(', ')', ',', 'traceLogger', ')', ';', 'traceInput', '.', 'setQuote', '(', 'quote', ')', ';', 'traceOutput', '=', 'new', 'TraceOutputStream', '(', 'serverSocket', '.', 'getOutputStream', '(', ')', ',', 'traceLogger', ')', ';', 'traceOutput', '.', 'setQuote', '(', 'quote', ')', ';', 'serverOutput', '=', 'new', 'BufferedOutputStream', '(', 'traceOutput', ')', ';', 'serverInput', '=', 'new', 'BufferedInputStream', '(', 'traceInput', ')', ';', 'lineInputStream', '=', 'new', 'LineInputStream', '(', 'serverInput', ')', ';', '}']","['void', 'initStreams', '(', ')', '{', 'quote', '(', 'getProperties', '(', ')', ',', '""quote""', ',', 'false', ')', ';', 'traceInput', '=', 'TraceInputStream', '(', 'getInputStream', '(', ')', ',', 'traceLogger', ')', ';', 'traceInput', '.', 'setQuote', '(', ')', ';', 'traceOutput', '=', '(', 'traceLogger', ')', '.', 'setQuote', '(', ')', ';', 'serverOutput', '=', '(', 'traceOutput', ')', '(', 'serverInput', ')', ';', '}']",93,53,6,521,214,17,60.912698412698404,45.97701149425287,,,,-1,-1,-1,-1,False
L374_subtract_1.txt,code2seq,METHOD_NAME,token_wrong,0.7488,0.6251,8.6674,8.9815,"{'n_total': 325, 'n_valid': 42, 'n_correct': 25}",87.75462,"public static void subtract(int[] x, int[] y, int[] z) { int c = Nat224.sub(x, y, z); if (c != 0) { subPInvFrom(z); } }","void subtract(int[][]y,int[]z){Nat.sub(x,y,z);if(c){subPInvFrom();}}","['public', 'static', 'void', 'subtract', '(', 'int', '[', ']', 'x', ',', 'int', '[', ']', 'y', ',', 'int', '[', ']', 'z', ')', '{', 'int', 'c', '=', 'Nat224', '.', 'sub', '(', 'x', ',', 'y', ',', 'z', ')', ';', 'if', '(', 'c', '!=', '0', ')', '{', 'subPInvFrom', '(', 'z', ')', ';', '}', '}']","['void', 'subtract', '(', 'int', '[', ']', '[', ']', 'y', ',', 'int', '[', ']', 'z', ')', '{', 'Nat', '.', 'sub', '(', 'x', ',', 'y', ',', 'z', ')', ';', 'if', '(', 'c', ')', '{', 'subPInvFrom', '(', ')', ';', '}', '}']",49,38,6,119,68,14,48.57142857142857,25.581395348837212,,,,-1,-1,-1,-1,False
L375_getQuestionMarks_1.txt,code2seq,METHOD_NAME,token_wrong,0.4806,0.2425,22.9035,22.0087,"{'n_total': 416, 'n_valid': 53, 'n_correct': 38}",118.95109,"public static String getQuestionMarks(int count) { StringBuilder sb = new StringBuilder(count * 2); for (int i = 0; i < count; i++) { if (i > 0) { sb.append(','); } sb.append('?'); } return sb.toString(); }","String getQuestionMarks(int count){sb();for(;;i++){if(i>0){(',');}}return sb();}","['public', 'static', 'String', 'getQuestionMarks', '(', 'int', 'count', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', 'count', '*', '2', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'count', ';', 'i', '++', ')', '{', 'if', '(', 'i', '>', '0', ')', '{', 'sb', '.', 'append', '(', ""','"", ')', ';', '}', 'sb', '.', 'append', '(', ""'?'"", ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']","['String', 'getQuestionMarks', '(', 'int', 'count', ')', '{', 'sb', '(', ')', ';', 'for', '(', ';', ';', 'i', '++', ')', '{', 'if', '(', 'i', '>', '0', ')', '{', '(', ""','"", ')', ';', '}', '}', 'return', 'sb', '(', ')', ';', '}']",66,38,6,206,80,22,68.47826086956522,46.666666666666664,,,,-1,-1,-1,-1,False
L376_graphType_1.txt,code2seq,METHOD_NAME,token_wrong,0.8253,0.8782,15.945,12.2848,"{'n_total': 523, 'n_valid': 48, 'n_correct': 38}",111.483874,"public Map<Integer, Integer> graphType() { Map<Integer, Integer> result; result = new HashMap<Integer, Integer>(); if (getClassifier() != null) { if (getClassifier() instanceof Drawable) { result.put(0, ((Drawable) getClassifier()).graphType()); } } return result; }","Map<Integer>graphType(){Map<Integer>result=new HashMap<>();if(getClassifier){if(getClassifier()instanceof Drawable){result(0,((Drawable)getClassifier()).graphType());}}}","['public', 'Map', '<', 'Integer', ',', 'Integer', '>', 'graphType', '(', ')', '{', 'Map', '<', 'Integer', ',', 'Integer', '>', 'result', ';', 'result', '=', 'new', 'HashMap', '<', 'Integer', ',', 'Integer', '>', '(', ')', ';', 'if', '(', 'getClassifier', '(', ')', '!=', 'null', ')', '{', 'if', '(', 'getClassifier', '(', ')', 'instanceof', 'Drawable', ')', '{', 'result', '.', 'put', '(', '0', ',', '(', '(', 'Drawable', ')', 'getClassifier', '(', ')', ')', '.', 'graphType', '(', ')', ')', ';', '}', '}', 'return', 'result', ';', '}']","['Map', '<', 'Integer', '>', 'graphType', '(', ')', '{', 'Map', '<', 'Integer', '>', 'result', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'if', '(', 'getClassifier', ')', '{', 'if', '(', 'getClassifier', '(', ')', 'instanceof', 'Drawable', ')', '{', 'result', '(', '0', ',', '(', '(', 'Drawable', ')', 'getClassifier', '(', ')', ')', '.', 'graphType', '(', ')', ')', ';', '}', '}', '}']",75,56,6,266,169,15,38.645418326693225,27.536231884057973,,,,-1,-1,-1,-1,False
L377_findSecurityReferences_1.txt,code2seq,METHOD_NAME,token_wrong,0.8562,0.9186,26.0351,26.8964,"{'n_total': 220, 'n_valid': 20, 'n_correct': 18}",40.261247,@Override public String[] findSecurityReferences() { try { referencesLock.readLock().lock(); String[] results = new String[references.size()]; return references.keySet().toArray(results); } finally { referencesLock.readLock().unlock(); } },String[]findSecurityReferences(){try{String[references.size()];}finally{readLock().unlock();}},"['@', 'Override', 'public', 'String', '[', ']', 'findSecurityReferences', '(', ')', '{', 'try', '{', 'referencesLock', '.', 'readLock', '(', ')', '.', 'lock', '(', ')', ';', 'String', '[', ']', 'results', '=', 'new', 'String', '[', 'references', '.', 'size', '(', ')', ']', ';', 'return', 'references', '.', 'keySet', '(', ')', '.', 'toArray', '(', 'results', ')', ';', '}', 'finally', '{', 'referencesLock', '.', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']","['String', '[', ']', 'findSecurityReferences', '(', ')', '{', 'try', '{', 'String', '[', 'references', '.', 'size', '(', ')', ']', ';', '}', 'finally', '{', 'readLock', '(', ')', '.', 'unlock', '(', ')', ';', '}', '}']",64,31,6,239,94,28,68.72037914691943,56.896551724137936,,,,-1,-1,-1,-1,False
L378_execute_2.txt,code2seq,METHOD_NAME,token_wrong,0.5005,0.2404,9.7073,6.9752,"{'n_total': 522, 'n_valid': 75, 'n_correct': 38}",159.475826,"public void execute(Writer writer, MacroParameter params) throws IllegalArgumentException, IOException { if (params.getLength() == 1) { AsinServices.getInstance().appendUrl(writer, params.get(""0"")); return; } else { log.warn(""needs an ASIN number as argument""); throw new IllegalArgumentException(Messages.getString(""AsinMacro.4"")); } }","void execute(Writer writer,MacroParameter params)throws IllegalArgumentExceptionIOException{if(params()==1){AsinServices(get(""""));}{warn(""an"");throw IllegalArgumentException((""AsinMacro""));}}","['public', 'void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'if', '(', 'params', '.', 'getLength', '(', ')', '==', '1', ')', '{', 'AsinServices', '.', 'getInstance', '(', ')', '.', 'appendUrl', '(', 'writer', ',', 'params', '.', 'get', '(', '""0""', ')', ')', ';', 'return', ';', '}', 'else', '{', 'log', '.', 'warn', '(', '""needs an ASIN number as argument""', ')', ';', 'throw', 'new', 'IllegalArgumentException', '(', 'Messages', '.', 'getString', '(', '""AsinMacro.4""', ')', ')', ';', '}', '}']","['void', 'execute', '(', 'Writer', 'writer', ',', 'MacroParameter', 'params', ')', 'throws', 'IllegalArgumentExceptionIOException', '{', 'if', '(', 'params', '(', ')', '==', '1', ')', '{', 'AsinServices', '(', 'get', '(', '""""', ')', ')', ';', '}', '{', 'warn', '(', '""an""', ')', ';', 'throw', 'IllegalArgumentException', '(', '(', '""AsinMacro""', ')', ')', ';', '}', '}']",70,46,6,336,191,13,44.89164086687307,37.5,,,,-1,-1,-1,-1,False
L379_getJobSpecSummaries_1.txt,code2seq,METHOD_NAME,token_wrong,0.518,0.428,11.3899,16.6415,"{'n_total': 651, 'n_valid': 73, 'n_correct': 49}",153.236813,"@Override public List<JobSpecSummary> getJobSpecSummaries(int pageSize, int page, String query) { if (pageSize < 0) throw new IllegalArgumentException(""pageSize is negative""); if (page < 0) throw new IllegalArgumentException(""page is negative""); requireNonNull(query); return listDirectories(jobSpecsDir).map(File::toPath).map(path -> loadJobSpec(path).map(JobSpec::toSummary)).filter(Optional::isPresent).map(Optional::get).skip(page * pageSize).limit(pageSize).sorted(FilesystemJobSpecDAO::bySpecName).collect(toList()); }","List<JobSpecSummary>getJobSpecSummaries(int pageSize,int page,String query){if(pageSize)("""");if(0)("""");(File).map(path>loadJobSpec()).skip().sorted().collect();}","['@', 'Override', 'public', 'List', '<', 'JobSpecSummary', '>', 'getJobSpecSummaries', '(', 'int', 'pageSize', ',', 'int', 'page', ',', 'String', 'query', ')', '{', 'if', '(', 'pageSize', '<', '0', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""pageSize is negative""', ')', ';', 'if', '(', 'page', '<', '0', ')', 'throw', 'new', 'IllegalArgumentException', '(', '""page is negative""', ')', ';', 'requireNonNull', '(', 'query', ')', ';', 'return', 'listDirectories', '(', 'jobSpecsDir', ')', '.', 'map', '(', 'File', '::', 'toPath', ')', '.', 'map', '(', 'path', '->', 'loadJobSpec', '(', 'path', ')', '.', 'map', '(', 'JobSpec', '::', 'toSummary', ')', ')', '.', 'filter', '(', 'Optional', '::', 'isPresent', ')', '.', 'map', '(', 'Optional', '::', 'get', ')', '.', 'skip', '(', 'page', '*', 'pageSize', ')', '.', 'limit', '(', 'pageSize', ')', '.', 'sorted', '(', 'FilesystemJobSpecDAO', '::', 'bySpecName', ')', '.', 'collect', '(', 'toList', '(', ')', ')', ';', '}']","['List', '<', 'JobSpecSummary', '>', 'getJobSpecSummaries', '(', 'int', 'pageSize', ',', 'int', 'page', ',', 'String', 'query', ')', '{', 'if', '(', 'pageSize', ')', '(', '""""', ')', ';', 'if', '(', '0', ')', '(', '""""', ')', ';', '(', 'File', ')', '.', 'map', '(', 'path', '>', 'loadJobSpec', '(', ')', ')', '.', 'skip', '(', ')', '.', 'sorted', '(', ')', '.', 'collect', '(', ')', ';', '}']",121,58,6,524,161,25,72.74549098196393,54.78260869565217,,,,-1,-1,-1,-1,False
L380_normalizeDeploymentSubPath_1.txt,code2seq,METHOD_NAME,token_wrong,0.5778,0.7391,18.9584,22.1633,"{'n_total': 369, 'n_valid': 43, 'n_correct': 35}",90.991648,"protected String normalizeDeploymentSubPath(String deploymentSubPath) { if (deploymentSubPath.endsWith(AMSTSConstants.FORWARD_SLASH)) { return deploymentSubPath.substring(0, deploymentSubPath.lastIndexOf(AMSTSConstants.FORWARD_SLASH)); } if (deploymentSubPath.startsWith(AMSTSConstants.FORWARD_SLASH)) { return deploymentSubPath.substring(1, deploymentSubPath.length()); } return deploymentSubPath; }",String normalizeDeploymentSubPath(){if(deploymentSubPath()){deploymentSubPath.substring((SLASH));}if((AMSTSConstants)){substring(deploymentSubPath.length);}},"['protected', 'String', 'normalizeDeploymentSubPath', '(', 'String', 'deploymentSubPath', ')', '{', 'if', '(', 'deploymentSubPath', '.', 'endsWith', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', '{', 'return', 'deploymentSubPath', '.', 'substring', '(', '0', ',', 'deploymentSubPath', '.', 'lastIndexOf', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', ';', '}', 'if', '(', 'deploymentSubPath', '.', 'startsWith', '(', 'AMSTSConstants', '.', 'FORWARD_SLASH', ')', ')', '{', 'return', 'deploymentSubPath', '.', 'substring', '(', '1', ',', 'deploymentSubPath', '.', 'length', '(', ')', ')', ';', '}', 'return', 'deploymentSubPath', ';', '}']","['String', 'normalizeDeploymentSubPath', '(', ')', '{', 'if', '(', 'deploymentSubPath', '(', ')', ')', '{', 'deploymentSubPath', '.', 'substring', '(', '(', 'SLASH', ')', ')', ';', '}', 'if', '(', '(', 'AMSTSConstants', ')', ')', '{', 'substring', '(', 'deploymentSubPath', '.', 'length', ')', ';', '}', '}']",69,38,6,400,157,32,66.03260869565217,49.2063492063492,,,,-1,-1,-1,-1,False
L381_isSpecialSite_1.txt,code2seq,METHOD_NAME,token_wrong,0.8588,0.5544,5.9913,5.5118,"{'n_total': 203, 'n_valid': 27, 'n_correct': 20}",56.07888,public static boolean isSpecialSite(java.lang.String param0) { org.sakaiproject.site.api.SiteService service = getInstance(); if (service == null) return false; return service.isSpecialSite(param0); },boolean isSpecialSite(){SiteService=getInstance();if(service)return isSpecialSite();},"['public', 'static', 'boolean', 'isSpecialSite', '(', 'java', '.', 'lang', '.', 'String', 'param0', ')', '{', 'org', '.', 'sakaiproject', '.', 'site', '.', 'api', '.', 'SiteService', 'service', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', '==', 'null', ')', 'return', 'false', ';', 'return', 'service', '.', 'isSpecialSite', '(', 'param0', ')', ';', '}']","['boolean', 'isSpecialSite', '(', ')', '{', 'SiteService', '=', 'getInstance', '(', ')', ';', 'if', '(', 'service', ')', 'return', 'isSpecialSite', '(', ')', ';', '}']",46,21,6,200,85,19,63.53591160220995,62.5,,,,-1,-1,-1,-1,False
L382_init_8.txt,code2seq,METHOD_NAME,token_wrong,0.6434,0.6624,3.7672,3.8639,"{'n_total': 166, 'n_valid': 17, 'n_correct': 16}",35.899538,"public void init() { if (!isEnabled()) { log.info(""ElasticSearch is not enabled. Set search.enable=true to change that.""); return; } initializeElasticSearch(); }","void init(){if(isEnabled()){("""");}initializeElasticSearch();}","['public', 'void', 'init', '(', ')', '{', 'if', '(', '!', 'isEnabled', '(', ')', ')', '{', 'log', '.', 'info', '(', '""ElasticSearch is not enabled. Set search.enable=true to change that.""', ')', ';', 'return', ';', '}', 'initializeElasticSearch', '(', ')', ';', '}']","['void', 'init', '(', ')', '{', 'if', '(', 'isEnabled', '(', ')', ')', '{', '(', '""""', ')', ';', '}', 'initializeElasticSearch', '(', ')', ';', '}']",29,22,6,161,61,10,66.22516556291392,30.434782608695656,,,,-1,-1,-1,-1,False
L383_coyoteService_1.txt,code2seq,METHOD_NAME,token_wrong,0.1875,0.5321,18.7298,19.9661,"{'n_total': 405, 'n_valid': 36, 'n_correct': 28}",79.41099,"private void coyoteService(final HttpRequest httpReq, final HttpResponse httpRes) { RequestData rc = new RequestData(); rc.init(httpReq, httpRes); try { adapter.service(rc.req, rc.res); } catch (Exception e) { e.printStackTrace(); } }","void coyoteService(HttpRequest httpReq,HttpResponse httpRes){RequestData().init();try{(res);}catch(Exception e){printStackTrace();}}","['private', 'void', 'coyoteService', '(', 'final', 'HttpRequest', 'httpReq', ',', 'final', 'HttpResponse', 'httpRes', ')', '{', 'RequestData', 'rc', '=', 'new', 'RequestData', '(', ')', ';', 'rc', '.', 'init', '(', 'httpReq', ',', 'httpRes', ')', ';', 'try', '{', 'adapter', '.', 'service', '(', 'rc', '.', 'req', ',', 'rc', '.', 'res', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'coyoteService', '(', 'HttpRequest', 'httpReq', ',', 'HttpResponse', 'httpRes', ')', '{', 'RequestData', '(', ')', '.', 'init', '(', ')', ';', 'try', '{', '(', 'res', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",60,37,6,234,132,19,47.44186046511628,42.592592592592595,,,,-1,-1,-1,-1,False
L384_shouldAllowRequest_1.txt,code2seq,METHOD_NAME,token_wrong,0.5912,0.3941,11.7677,15.3605,"{'n_total': 342, 'n_valid': 57, 'n_correct': 30}",121.985038,@Override public Boolean shouldAllowRequest(String url) { if (Boolean.TRUE == shouldAllowNavigation(url)) { return true; } if (allowedRequests.isUrlWhiteListed(url)) { return true; } return null; },@Override Boolean shouldAllowRequest(String url){if(Boolean=(url)){}if(allowedRequestsisUrlWhiteListed()){}},"['@', 'Override', 'public', 'Boolean', 'shouldAllowRequest', '(', 'String', 'url', ')', '{', 'if', '(', 'Boolean', '.', 'TRUE', '==', 'shouldAllowNavigation', '(', 'url', ')', ')', '{', 'return', 'true', ';', '}', 'if', '(', 'allowedRequests', '.', 'isUrlWhiteListed', '(', 'url', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'null', ';', '}']","['@', 'Override', 'Boolean', 'shouldAllowRequest', '(', 'String', 'url', ')', '{', 'if', '(', 'Boolean', '=', '(', 'url', ')', ')', '{', '}', 'if', '(', 'allowedRequestsisUrlWhiteListed', '(', ')', ')', '{', '}', '}']",44,28,6,197,108,24,51.445086705202314,42.10526315789473,,,,-1,-1,-1,-1,False
L385_logGammaDifference_1.txt,code2seq,METHOD_NAME,token_wrong,0.8845,0.9306,16.6076,18.9455,"{'n_total': 266, 'n_valid': 29, 'n_correct': 27}",64.593481,"public static double logGammaDifference(double z, int n) { double result = 0.0; for (int i = 0; i < n; i++) { result += Math.log(z + i); } return result; }",double logGammaDifference(double n){for(;;i++){result=log();}},"['public', 'static', 'double', 'logGammaDifference', '(', 'double', 'z', ',', 'int', 'n', ')', '{', 'double', 'result', '=', '0.0', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', ';', 'i', '++', ')', '{', 'result', '+=', 'Math', '.', 'log', '(', 'z', '+', 'i', ')', ';', '}', 'return', 'result', ';', '}']","['double', 'logGammaDifference', '(', 'double', 'n', ')', '{', 'for', '(', ';', ';', 'i', '++', ')', '{', 'result', '=', 'log', '(', ')', ';', '}', '}']",48,23,6,155,62,24,70.99236641221374,59.523809523809526,,,,-1,-1,-1,-1,False
L386_generateTrunkFruit_1.txt,code2seq,METHOD_NAME,token_wrong,0.5668,0.4621,20.5157,21.2142,"{'n_total': 467, 'n_valid': 61, 'n_correct': 45}",128.09647,"private void generateTrunkFruit(World world, int age, BlockPos pos, EnumFacing direction) { if (this.trunkFruit == Blocks.COCOA.getDefaultState()) { this.setBlockAndNotifyAdequately(world, pos, this.trunkFruit.withProperty(BlockCocoa.AGE, Integer.valueOf(age)).withProperty(BlockCocoa.FACING, direction)); } else { this.setBlockAndNotifyAdequately(world, pos, this.trunkFruit.withProperty(BlockCocoa.FACING, direction)); } }","void generateTrunkFruit(World age,EnumFacing direction){if(this.trunkFruit){(((age)).withProperty());}{thissetBlockAndNotifyAdequately(pos.trunkFruit());}}","['private', 'void', 'generateTrunkFruit', '(', 'World', 'world', ',', 'int', 'age', ',', 'BlockPos', 'pos', ',', 'EnumFacing', 'direction', ')', '{', 'if', '(', 'this', '.', 'trunkFruit', '==', 'Blocks', '.', 'COCOA', '.', 'getDefaultState', '(', ')', ')', '{', 'this', '.', 'setBlockAndNotifyAdequately', '(', 'world', ',', 'pos', ',', 'this', '.', 'trunkFruit', '.', 'withProperty', '(', 'BlockCocoa', '.', 'AGE', ',', 'Integer', '.', 'valueOf', '(', 'age', ')', ')', '.', 'withProperty', '(', 'BlockCocoa', '.', 'FACING', ',', 'direction', ')', ')', ';', '}', 'else', '{', 'this', '.', 'setBlockAndNotifyAdequately', '(', 'world', ',', 'pos', ',', 'this', '.', 'trunkFruit', '.', 'withProperty', '(', 'BlockCocoa', '.', 'FACING', ',', 'direction', ')', ')', ';', '}', '}']","['void', 'generateTrunkFruit', '(', 'World', 'age', ',', 'EnumFacing', 'direction', ')', '{', 'if', '(', 'this', '.', 'trunkFruit', ')', '{', '(', '(', '(', 'age', ')', ')', '.', 'withProperty', '(', ')', ')', ';', '}', '{', 'thissetBlockAndNotifyAdequately', '(', 'pos', '.', 'trunkFruit', '(', ')', ')', ';', '}', '}']",95,42,6,424,155,24,67.25,59.55056179775281,,,,-1,-1,-1,-1,False
L387_createRawValidator_7.txt,code2seq,METHOD_NAME,token_wrong,0.7079,0.6536,24.5768,30.132,"{'n_total': 1244, 'n_valid': 335, 'n_correct': 146}",658.604572,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"" + ""n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"" + ""mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"" + ""on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"" + ""expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001ccom.sun.msv.grammar.MixedExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"" + ""~\u0000\u0003ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000"" + "" com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0007sr\u0000\u0011java.l"" + ""ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.tr"" + ""ex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gram"" + ""mar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z"" + ""\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000ep"" + ""\u0000sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L"" + ""\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003ppsr\u00002com.sun.msv.grammar.Expression$A"" + ""nyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.m"" + ""sv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.Na"" + ""meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000&com.sun.msv.grammar.NamespaceNameCla"" + ""ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIt\u0000\u0012Ljava/lang/String;xq\u0000~\u0000\u0019t\u0000+ht"" + ""tp://java.sun.com/jaxb/xjc/dummy-elementssr\u00000com.sun.msv.gra"" + ""mmar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017q\u0000~\u0000 "" + ""sq\u0000~\u0000\u0013ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"" + ""rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"" + ""n/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000#com.sun.msv.datatype.x"" + ""sd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builtin"" + ""AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"" + ""pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001cL\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.L"" + ""com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"" + "".w3.org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd."" + ""WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"" + ""ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"" + ""mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bc"" + ""om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"" + ""espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000-q\u0000~\u0000,sr\u0000#com.sun.msv.grammar.SimpleName"" + ""Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0019t"" + ""\u0000\tAlgorithmt\u0000\u0000sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"" + ""ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"" + ""\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"" + ""ar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001pq\u0000~\u0000\bq\u0000~\u0000\u0005q\u0000~\u0000\nq\u0000~\u0000\fx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","com createRawValidator(){if(schemaFragment){((""""+""""+""""+""""+""""+""""));}return newcom(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\x1fcom.sun.msv.grammar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.su""', '+', '""n.msv.grammar.BinaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1t\x00 Lcom/sun/msv/gra""', '+', '""mmar/Expression;L\x00\x04exp2q\x00~\x00\x02xr\x00\x1ecom.sun.msv.grammar.Expressi""', '+', '""onø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Ljava/lang/Boolean;L\x00\x0b""', '+', '""expandedExpq\x00~\x00\x02xpppsr\x00\x1ccom.sun.msv.grammar.MixedExp\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x00xr\x00\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x02xq\x00""', '+', '""~\x00\x03ppsr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x01ppsr\x00""', '+', '"" com.sun.msv.grammar.OneOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x07sr\x00\x11java.l""', '+', '""ang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\\\'com.sun.msv.grammar.tr""', '+', '""ex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\tnameClasst\x00\x1fLcom/sun/msv/gram""', '+', '""mar/NameClass;xr\x00\x1ecom.sun.msv.grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z""', '+', '""\x00\x1aignoreUndeclaredAttributesL\x00\\fcontentModelq\x00~\x00\x02xq\x00~\x00\x03q\x00~\x00\x0ep""', '+', '""\x00sr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x02L""', '+', '""\x00\\tnameClassq\x00~\x00\x10xq\x00~\x00\x03ppsr\x002com.sun.msv.grammar.Expression$A""', '+', '""nyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03sq\x00~\x00\\r\x01q\x00~\x00\x16sr\x00 com.sun.m""', '+', '""sv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.Na""', '+', '""meClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x00&com.sun.msv.grammar.NamespaceNameCla""', '+', '""ss\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\fnamespaceURIt\x00\x12Ljava/lang/String;xq\x00~\x00\x19t\x00+ht""', '+', '""tp://java.sun.com/jaxb/xjc/dummy-elementssr\x000com.sun.msv.gra""', '+', '""mmar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x17q\x00~\x00 ""', '+', '""sq\x00~\x00\x13ppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLo""', '+', '""rg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x02L\x00\x04namet\x00\x1dLcom/su""', '+', '""n/msv/util/StringPair;xq\x00~\x00\x03q\x00~\x00\x0epsr\x00#com.sun.msv.datatype.x""', '+', '""sd.AnyURIType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.Builtin""', '+', '""AtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteTy""', '+', '""pe\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00""', '+', '""\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUriq\x00~\x00\x1cL\x00\\btypeNameq\x00~\x00\x1cL\x00\\nwhiteSpacet\x00.L""', '+', '""com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www""', '+', '"".w3.org/2001/XMLSchemat\x00\x06anyURIsr\x005com.sun.msv.datatype.xsd.""', '+', '""WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datat""', '+', '""ype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.gram""', '+', '""mar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x03q\x00~\x00\x0epsr\x00\x1bc""', '+', '""om.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x1cL\x00\\fnam""', '+', '""espaceURIq\x00~\x00\x1cxpq\x00~\x00-q\x00~\x00,sr\x00#com.sun.msv.grammar.SimpleName""', '+', '""Class\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x1cL\x00\\fnamespaceURIq\x00~\x00\x1cxq\x00~\x00\x19t""', '+', '""\x00\\tAlgorithmt\x00\x00sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedH""', '+', '""ash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNï""', '+', '""èí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/gramm""', '+', '""ar/ExpressionPool;xp\x00\x00\x00\x04\x01pq\x00~\x00\\bq\x00~\x00\x05q\x00~\x00\\nq\x00~\x00\\fx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['com', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'return', 'newcom', '(', 'schemaFragment', ')', ';', '}']",139,34,6,5442,98,24,98.63418235511259,78.94736842105263,,,,-1,-1,-1,-1,False
L388_parse_1.txt,code2seq,METHOD_NAME,token_wrong,0.3033,0.2924,3.0156,3.5273,"{'n_total': 253, 'n_valid': 43, 'n_correct': 21}",90.625912,public static Integer parse(String str) throws NumberFormatException { if (str == null || str.isEmpty()) return null; return Integer.valueOf(str); },Integer parse(String str)throws NumberFormatException{if(str=isEmpty)return Integer.valueOf();},"['public', 'static', 'Integer', 'parse', '(', 'String', 'str', ')', 'throws', 'NumberFormatException', '{', 'if', '(', 'str', '==', 'null', '||', 'str', '.', 'isEmpty', '(', ')', ')', 'return', 'null', ';', 'return', 'Integer', '.', 'valueOf', '(', 'str', ')', ';', '}']","['Integer', 'parse', '(', 'String', 'str', ')', 'throws', 'NumberFormatException', '{', 'if', '(', 'str', '=', 'isEmpty', ')', 'return', 'Integer', '.', 'valueOf', '(', ')', ';', '}']",35,23,6,148,95,11,38.68613138686132,41.37931034482759,,,,-1,-1,-1,-1,False
L389_processNewSessionTicket_1.txt,code2seq,METHOD_NAME,token_wrong,0.6729,0.4837,6.9523,7.9088,"{'n_total': 289, 'n_valid': 46, 'n_correct': 21}",97.8903,"protected void processNewSessionTicket(ClientHandshakeState state, byte[] body) throws IOException { ByteArrayInputStream buf = new ByteArrayInputStream(body); NewSessionTicket newSessionTicket = NewSessionTicket.parse(buf); TlsProtocol.assertEmpty(buf); state.client.notifyNewSessionTicket(newSessionTicket); }",void processNewSessionTicket(ClientHandshakeState body)throws IOException{buf=ByteArrayInputStream(body);NewSessionTicket newSessionTicket=TlsProtocol.assertEmpty(buf);(newSessionTicket);},"['protected', 'void', 'processNewSessionTicket', '(', 'ClientHandshakeState', 'state', ',', 'byte', '[', ']', 'body', ')', 'throws', 'IOException', '{', 'ByteArrayInputStream', 'buf', '=', 'new', 'ByteArrayInputStream', '(', 'body', ')', ';', 'NewSessionTicket', 'newSessionTicket', '=', 'NewSessionTicket', '.', 'parse', '(', 'buf', ')', ';', 'TlsProtocol', '.', 'assertEmpty', '(', 'buf', ')', ';', 'state', '.', 'client', '.', 'notifyNewSessionTicket', '(', 'newSessionTicket', ')', ';', '}']","['void', 'processNewSessionTicket', '(', 'ClientHandshakeState', 'body', ')', 'throws', 'IOException', '{', 'buf', '=', 'ByteArrayInputStream', '(', 'body', ')', ';', 'NewSessionTicket', 'newSessionTicket', '=', 'TlsProtocol', '.', 'assertEmpty', '(', 'buf', ')', ';', '(', 'newSessionTicket', ')', ';', '}']",51,31,6,311,188,29,43.61702127659575,44.44444444444444,,,,-1,-1,-1,-1,False
L390_asStream_1.txt,code2seq,METHOD_NAME,token_wrong,0.9448,0.1828,17.7881,13.6172,"{'n_total': 210, 'n_valid': 23, 'n_correct': 17}",44.13659,"@Timed(""snapshot_apply"") @Override public Stream<Op> asStream(Snapshot snapshot) { requireNonNull(snapshot); LOG.info(""Restoring snapshot.""); return snapshotFields.stream().flatMap(field -> field.streamFrom(snapshot)); }","Stream<Op>asStream(Snapshot snapshot){(""."").flatMap(fieldstreamFrom());}","['@', 'Timed', '(', '""snapshot_apply""', ')', '@', 'Override', 'public', 'Stream', '<', 'Op', '>', 'asStream', '(', 'Snapshot', 'snapshot', ')', '{', 'requireNonNull', '(', 'snapshot', ')', ';', 'LOG', '.', 'info', '(', '""Restoring snapshot.""', ')', ';', 'return', 'snapshotFields', '.', 'stream', '(', ')', '.', 'flatMap', '(', 'field', '->', 'field', '.', 'streamFrom', '(', 'snapshot', ')', ')', ';', '}']","['Stream', '<', 'Op', '>', 'asStream', '(', 'Snapshot', 'snapshot', ')', '{', '(', '"".""', ')', '.', 'flatMap', '(', 'fieldstreamFrom', '(', ')', ')', ';', '}']",50,22,6,220,72,14,71.84466019417476,63.63636363636363,,,,-1,-1,-1,-1,False
L391_returnsHeaders_1.txt,code2seq,METHOD_NAME,token_wrong,0.4967,0.6678,12.0815,17.6827,"{'n_total': 646, 'n_valid': 70, 'n_correct': 51}",143.000199,"@Test public void returnsHeaders() { assertEquals(new Header(""name"", ""value""), new HttpResponse().withHeaders(new Header(""name"", ""value"")).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value""), new HttpResponse().withHeaders(Arrays.asList(new Header(""name"", ""value""))).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value""), new HttpRequest().withHeader(new Header(""name"", ""value"")).getHeaderList().get(0)); assertEquals(new Header(""name"", ""value_one"", ""value_two""), new HttpRequest().withHeader(new Header(""name"", ""value_one"")).withHeader(new Header(""name"", ""value_two"")).getHeaderList().get(0)); }","@Test void returnsHeaders(){((Header()).getHeaderList());assertEquals(Header(),((Header("""",""""))).getHeaderList(0));((("""")).withHeader(("""")).get());}","['@', 'Test', 'public', 'void', 'returnsHeaders', '(', ')', '{', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpResponse', '(', ')', '.', 'withHeaders', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpResponse', '(', ')', '.', 'withHeaders', '(', 'Arrays', '.', 'asList', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ',', 'new', 'HttpRequest', '(', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', 'assertEquals', '(', 'new', 'Header', '(', '""name""', ',', '""value_one""', ',', '""value_two""', ')', ',', 'new', 'HttpRequest', '(', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value_one""', ')', ')', '.', 'withHeader', '(', 'new', 'Header', '(', '""name""', ',', '""value_two""', ')', ')', '.', 'getHeaderList', '(', ')', '.', 'get', '(', '0', ')', ')', ';', '}']","['@', 'Test', 'void', 'returnsHeaders', '(', ')', '{', '(', '(', 'Header', '(', ')', ')', '.', 'getHeaderList', '(', ')', ')', ';', 'assertEquals', '(', 'Header', '(', ')', ',', '(', '(', 'Header', '(', '""""', ',', '""""', ')', ')', ')', '.', 'getHeaderList', '(', '0', ')', ')', ';', '(', '(', '(', '""""', ')', ')', '.', 'withHeader', '(', '(', '""""', ')', ')', '.', 'get', '(', ')', ')', ';', '}']",171,62,6,622,148,20,78.7375415282392,66.06060606060606,,,,-1,-1,-1,-1,False
L392_getDetailedReport_1.txt,code2seq,METHOD_NAME,token_wrong,0.4696,0.379,18.0446,15.7835,"{'n_total': 512, 'n_valid': 76, 'n_correct': 29}",164.1071,"@Override public String getDetailedReport(String delimiter) { Map<String, String> tags = new HashMap<>(); tags.put(LF, delimiter); TreeSet<String> services = new TreeSet<>(String.CASE_INSENSITIVE_ORDER); services.addAll(serviceModifications.keySet()); tags.put(""%SERVICES%"", Joiner.on(delimiter).join(services)); return tagSwapReport(tags, ""upgrade.resourcenames.long""); }","String getDetailedReport(String delimiter){new HashMap<>();(LFdelimiter);TreeSet<String>services=TreeSet(String.CASE_ORDER);(serviceModifications.keySet);tags(""%"",(services));return tagSwapReport(tags,""long"");}","['@', 'Override', 'public', 'String', 'getDetailedReport', '(', 'String', 'delimiter', ')', '{', 'Map', '<', 'String', ',', 'String', '>', 'tags', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'tags', '.', 'put', '(', 'LF', ',', 'delimiter', ')', ';', 'TreeSet', '<', 'String', '>', 'services', '=', 'new', 'TreeSet', '<', '>', '(', 'String', '.', 'CASE_INSENSITIVE_ORDER', ')', ';', 'services', '.', 'addAll', '(', 'serviceModifications', '.', 'keySet', '(', ')', ')', ';', 'tags', '.', 'put', '(', '""%SERVICES%""', ',', 'Joiner', '.', 'on', '(', 'delimiter', ')', '.', 'join', '(', 'services', ')', ')', ';', 'return', 'tagSwapReport', '(', 'tags', ',', '""upgrade.resourcenames.long""', ')', ';', '}']","['String', 'getDetailedReport', '(', 'String', 'delimiter', ')', '{', 'new', 'HashMap', '<', '>', '(', ')', ';', '(', 'LFdelimiter', ')', ';', 'TreeSet', '<', 'String', '>', 'services', '=', 'TreeSet', '(', 'String', '.', 'CASE_ORDER', ')', ';', '(', 'serviceModifications', '.', 'keySet', ')', ';', 'tags', '(', '""%""', ',', '(', 'services', ')', ')', ';', 'return', 'tagSwapReport', '(', 'tags', ',', '""long""', ')', ';', '}']",89,55,6,372,210,23,46.41833810888252,40.963855421686745,,,,-1,-1,-1,-1,False
L393_getInstance_2.txt,code2seq,METHOD_NAME,token_wrong,0.9457,0.8095,12.2929,10.6734,"{'n_total': 153, 'n_valid': 18, 'n_correct': 18}",41.32395,synchronized public static InteractionManager getInstance() { if (interactionManager == null) { interactionManager = new InteractionManager(); } return interactionManager; },InteractionManager getInstance(){if(interactionManager){interactionManager();}},"['synchronized', 'public', 'static', 'InteractionManager', 'getInstance', '(', ')', '{', 'if', '(', 'interactionManager', '==', 'null', ')', '{', 'interactionManager', '=', 'new', 'InteractionManager', '(', ')', ';', '}', 'return', 'interactionManager', ';', '}']","['InteractionManager', 'getInstance', '(', ')', '{', 'if', '(', 'interactionManager', ')', '{', 'interactionManager', '(', ')', ';', '}', '}']",27,16,6,173,79,17,60.256410256410255,52.38095238095239,,,,-1,-1,-1,-1,False
L394_testDefaultStrategies_1.txt,code2seq,METHOD_NAME,token_wrong,0.6222,0.6312,17.5815,17.8529,"{'n_total': 257, 'n_valid': 29, 'n_correct': 19}",61.178969,"@Test public void testDefaultStrategies() throws ServletException { servlet.setContextClass(StaticWebApplicationContext.class); servlet.init(config); MessageDispatcher messageDispatcher = (MessageDispatcher) servlet.getMessageReceiver(); Assert.assertNotNull(""No messageDispatcher created"", messageDispatcher); }","void testDefaultStrategies()throws ServletException{(StaticWebApplicationContext);servlet();getMessageReceiver();Assert(""Nocreated"",messageDispatcher);}","['@', 'Test', 'public', 'void', 'testDefaultStrategies', '(', ')', 'throws', 'ServletException', '{', 'servlet', '.', 'setContextClass', '(', 'StaticWebApplicationContext', '.', 'class', ')', ';', 'servlet', '.', 'init', '(', 'config', ')', ';', 'MessageDispatcher', 'messageDispatcher', '=', '(', 'MessageDispatcher', ')', 'servlet', '.', 'getMessageReceiver', '(', ')', ';', 'Assert', '.', 'assertNotNull', '(', '""No messageDispatcher created""', ',', 'messageDispatcher', ')', ';', '}']","['void', 'testDefaultStrategies', '(', ')', 'throws', 'ServletException', '{', '(', 'StaticWebApplicationContext', ')', ';', 'servlet', '(', ')', ';', 'getMessageReceiver', '(', ')', ';', 'Assert', '(', '""Nocreated""', ',', 'messageDispatcher', ')', ';', '}']",48,27,6,312,152,27,56.14035087719298,50.0,,,,-1,-1,-1,-1,False
L395_canReviseOwn_1.txt,code2seq,METHOD_NAME,token_wrong,0.6797,0.6684,18.8393,19.6677,"{'n_total': 413, 'n_valid': 70, 'n_correct': 38}",143.948277,"public boolean canReviseOwn() { boolean canReviseOwn = false; try { Site site = siteService.getSite(toolManager.getCurrentPlacement().getContext()); canReviseOwn = securityService.unlock(ContentHostingService.AUTH_RESOURCE_WRITE_OWN, site.getReference()); } catch (IdUnusedException e) { log.debug(""ResourcesAction.canReviseOwn: cannot find current site""); } return canReviseOwn; }","boolean canReviseOwn(){try{securityService();}catch(IdUnusedException e){(""ResourcesActioncanReviseOwn"");}return canReviseOwn;}","['public', 'boolean', 'canReviseOwn', '(', ')', '{', 'boolean', 'canReviseOwn', '=', 'false', ';', 'try', '{', 'Site', 'site', '=', 'siteService', '.', 'getSite', '(', 'toolManager', '.', 'getCurrentPlacement', '(', ')', '.', 'getContext', '(', ')', ')', ';', 'canReviseOwn', '=', 'securityService', '.', 'unlock', '(', 'ContentHostingService', '.', 'AUTH_RESOURCE_WRITE_OWN', ',', 'site', '.', 'getReference', '(', ')', ')', ';', '}', 'catch', '(', 'IdUnusedException', 'e', ')', '{', 'log', '.', 'debug', '(', '""ResourcesAction.canReviseOwn: cannot find current site""', ')', ';', '}', 'return', 'canReviseOwn', ';', '}']","['boolean', 'canReviseOwn', '(', ')', '{', 'try', '{', 'securityService', '(', ')', ';', '}', 'catch', '(', 'IdUnusedException', 'e', ')', '{', '(', '""ResourcesActioncanReviseOwn""', ')', ';', '}', 'return', 'canReviseOwn', ';', '}']",67,27,6,381,127,18,69.9724517906336,65.57377049180327,,,,-1,-1,-1,-1,False
L396_chooseTasks_1.txt,code2seq,METHOD_NAME,token_wrong,0.639,0.2729,24.0301,15.1807,"{'n_total': 541, 'n_valid': 49, 'n_correct': 41}",118.704188,"@SuppressWarnings(""unchecked"") @Override public List<Integer> chooseTasks(List<Object> values) { List<Integer> ret = new ArrayList<>(); R obj = (R) values.get(0); List<Integer> targets = remapFn.apply(obj, ret.size()); for (Integer target : targets) { ret.add(taskIds.get(target % taskIds.size())); } return ret; }",List<Integer>chooseTasks(List<Object>values){List<Integer>retArrayList;List<Integer>targets=apply();for(Integer target:targets){(taskIds(size()));}},"['@', 'SuppressWarnings', '(', '""unchecked""', ')', '@', 'Override', 'public', 'List', '<', 'Integer', '>', 'chooseTasks', '(', 'List', '<', 'Object', '>', 'values', ')', '{', 'List', '<', 'Integer', '>', 'ret', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'R', 'obj', '=', '(', 'R', ')', 'values', '.', 'get', '(', '0', ')', ';', 'List', '<', 'Integer', '>', 'targets', '=', 'remapFn', '.', 'apply', '(', 'obj', ',', 'ret', '.', 'size', '(', ')', ')', ';', 'for', '(', 'Integer', 'target', ':', 'targets', ')', '{', 'ret', '.', 'add', '(', 'taskIds', '.', 'get', '(', 'target', '%', 'taskIds', '.', 'size', '(', ')', ')', ')', ';', '}', 'return', 'ret', ';', '}']","['List', '<', 'Integer', '>', 'chooseTasks', '(', 'List', '<', 'Object', '>', 'values', ')', '{', 'List', '<', 'Integer', '>', 'retArrayList', ';', 'List', '<', 'Integer', '>', 'targets', '=', 'apply', '(', ')', ';', 'for', '(', 'Integer', 'target', ':', 'targets', ')', '{', '(', 'taskIds', '(', 'size', '(', ')', ')', ')', ';', '}', '}']",97,48,6,314,148,17,55.892255892255896,53.84615384615385,,,,-1,-1,-1,-1,False
L397_getParentIdExpression_1.txt,code2seq,METHOD_NAME,token_wrong,0.7623,0.7995,15.2315,16.193,"{'n_total': 576, 'n_valid': 50, 'n_correct': 45}",111.460282,"private Expression<Object> getParentIdExpression(MetaDataObject parentMeta, MetaAttribute parentAttr) { MetaKey primaryKey = parentMeta.getPrimaryKey(); if (primaryKey == null) { throw new IllegalStateException(""no primary key specified for parentAttribute "" + parentAttr.getId()); } List<MetaAttribute> elements = primaryKey.getElements(); PreconditionUtil.assertEquals(""composite primary keys not supported yet"", 1, elements.size()); MetaAttribute primaryKeyAttr = elements.get(0); return QuerydslUtils.get(parentFrom, primaryKeyAttr.getName()); }","Expression<Object>getParentIdExpression(MetaDataObject parentMeta,MetaAttribute parentAttr){getPrimaryKey();if(primaryKey){("""".getId());}List<MetaAttribute>elements=("""".size());MetaAttribute();}","['private', 'Expression', '<', 'Object', '>', 'getParentIdExpression', '(', 'MetaDataObject', 'parentMeta', ',', 'MetaAttribute', 'parentAttr', ')', '{', 'MetaKey', 'primaryKey', '=', 'parentMeta', '.', 'getPrimaryKey', '(', ')', ';', 'if', '(', 'primaryKey', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""no primary key specified for parentAttribute ""', '+', 'parentAttr', '.', 'getId', '(', ')', ')', ';', '}', 'List', '<', 'MetaAttribute', '>', 'elements', '=', 'primaryKey', '.', 'getElements', '(', ')', ';', 'PreconditionUtil', '.', 'assertEquals', '(', '""composite primary keys not supported yet""', ',', '1', ',', 'elements', '.', 'size', '(', ')', ')', ';', 'MetaAttribute', 'primaryKeyAttr', '=', 'elements', '.', 'get', '(', '0', ')', ';', 'return', 'QuerydslUtils', '.', 'get', '(', 'parentFrom', ',', 'primaryKeyAttr', '.', 'getName', '(', ')', ')', ';', '}']","['Expression', '<', 'Object', '>', 'getParentIdExpression', '(', 'MetaDataObject', 'parentMeta', ',', 'MetaAttribute', 'parentAttr', ')', '{', 'getPrimaryKey', '(', ')', ';', 'if', '(', 'primaryKey', ')', '{', '(', '""""', '.', 'getId', '(', ')', ')', ';', '}', 'List', '<', 'MetaAttribute', '>', 'elements', '=', '(', '""""', '.', 'size', '(', ')', ')', ';', 'MetaAttribute', '(', ')', ';', '}']",96,50,6,549,194,27,68.00766283524904,51.11111111111111,,,,-1,-1,-1,-1,False
L398_assertUnParseable_1.txt,code2seq,METHOD_NAME,token_wrong,0.3144,0.4376,21.4482,19.7623,"{'n_total': 499, 'n_valid': 74, 'n_correct': 41}",157.849359,"private void assertUnParseable(DynamicLexiconGraph graph, String... words) { WordAnalyzer parser = new WordAnalyzer(graph); for (String word : words) { List<WordAnalysis> results = parser.analyze(word); Assert.assertTrue(""Unexpected parse for:"" + word + "" parse:"" + results, results.size() == 0); } }","void assertUnParseable(DynamicLexiconGraph graph,String words){for(String word:words){results();assertTrue(""Unexpected parse""+""""+results()==0);}}","['private', 'void', 'assertUnParseable', '(', 'DynamicLexiconGraph', 'graph', ',', 'String', '...', 'words', ')', '{', 'WordAnalyzer', 'parser', '=', 'new', 'WordAnalyzer', '(', 'graph', ')', ';', 'for', '(', 'String', 'word', ':', 'words', ')', '{', 'List', '<', 'WordAnalysis', '>', 'results', '=', 'parser', '.', 'analyze', '(', 'word', ')', ';', 'Assert', '.', 'assertTrue', '(', '""Unexpected parse for:""', '+', 'word', '+', '"" parse:""', '+', 'results', ',', 'results', '.', 'size', '(', ')', '==', '0', ')', ';', '}', '}']","['void', 'assertUnParseable', '(', 'DynamicLexiconGraph', 'graph', ',', 'String', 'words', ')', '{', 'for', '(', 'String', 'word', ':', 'words', ')', '{', 'results', '(', ')', ';', 'assertTrue', '(', '""Unexpected parse""', '+', '""""', '+', 'results', '(', ')', '==', '0', ')', ';', '}', '}']",65,37,6,300,145,23,55.95667870036101,47.45762711864407,,,,-1,-1,-1,-1,False
L399_toString_1.txt,code2seq,METHOD_NAME,token_wrong,0.9687,0.8769,28.8254,20.5889,"{'n_total': 167, 'n_valid': 25, 'n_correct': 18}",53.834653,public String toString() { if (this.iso8601TimeInterval == null) { this.createIso8601TimeInterval(); } return this.iso8601TimeInterval; },String toString(){if(this==null){}this.isoTimeInterval;},"['public', 'String', 'toString', '(', ')', '{', 'if', '(', 'this', '.', 'iso8601TimeInterval', '==', 'null', ')', '{', 'this', '.', 'createIso8601TimeInterval', '(', ')', ';', '}', 'return', 'this', '.', 'iso8601TimeInterval', ';', '}']","['String', 'toString', '(', ')', '{', 'if', '(', 'this', '==', 'null', ')', '{', '}', 'this', '.', 'isoTimeInterval', ';', '}']",28,18,6,137,56,14,65.85365853658537,45.45454545454545,,,,-1,-1,-1,-1,False
L400_setValuesAndHashcode_1.txt,code2seq,METHOD_NAME,token_wrong,0.9113,0.8297,21.3622,23.0012,"{'n_total': 235, 'n_valid': 31, 'n_correct': 23}",65.853792,"final void setValuesAndHashcode(@Nonnull String name, @Nonnull String desc, @Nonnegative int hashCodeMultiplier) { this.name = name; this.desc = desc; setHashCode(hashCodeMultiplier * name.hashCode() * desc.hashCode()); }","void setValuesAndHashcode(String name,String desc,int hashCodeMultiplier){name=desc;setHashCode(hashCodeMultiplier);}","['final', 'void', 'setValuesAndHashcode', '(', '@', 'Nonnull', 'String', 'name', ',', '@', 'Nonnull', 'String', 'desc', ',', '@', 'Nonnegative', 'int', 'hashCodeMultiplier', ')', '{', 'this', '.', 'name', '=', 'name', ';', 'this', '.', 'desc', '=', 'desc', ';', 'setHashCode', '(', 'hashCodeMultiplier', '*', 'name', '.', 'hashCode', '(', ')', '*', 'desc', '.', 'hashCode', '(', ')', ')', ';', '}']","['void', 'setValuesAndHashcode', '(', 'String', 'name', ',', 'String', 'desc', ',', 'int', 'hashCodeMultiplier', ')', '{', 'name', '=', 'desc', ';', 'setHashCode', '(', 'hashCodeMultiplier', ')', ';', '}']",50,23,6,221,117,26,53.333333333333336,61.36363636363637,,,,-1,-1,-1,-1,False
L401_getGeneratorsForStage_1.txt,code2seq,METHOD_NAME,token_wrong,0.6952,0.5429,10.2055,23.2796,"{'n_total': 412, 'n_valid': 30, 'n_correct': 26}",65.95033,public ImmutableCollection<IGenerator> getGeneratorsForStage(GeneratorStage stage) { ArrayList<IGenerator> out = new ArrayList<IGenerator>(); for (IGenerator generator : this.generators.values()) { if (generator.getStage() == stage) { out.add(generator); } } return ImmutableList.copyOf(out); },ImmutableCollection<IGenerator>getGeneratorsForStage(GeneratorStage stage){ArrayList=new ArrayList<>();for(IGenerator generator:values()){if(generator){(generator);}}(out);},"['public', 'ImmutableCollection', '<', 'IGenerator', '>', 'getGeneratorsForStage', '(', 'GeneratorStage', 'stage', ')', '{', 'ArrayList', '<', 'IGenerator', '>', 'out', '=', 'new', 'ArrayList', '<', 'IGenerator', '>', '(', ')', ';', 'for', '(', 'IGenerator', 'generator', ':', 'this', '.', 'generators', '.', 'values', '(', ')', ')', '{', 'if', '(', 'generator', '.', 'getStage', '(', ')', '==', 'stage', ')', '{', 'out', '.', 'add', '(', 'generator', ')', ';', '}', '}', 'return', 'ImmutableList', '.', 'copyOf', '(', 'out', ')', ';', '}']","['ImmutableCollection', '<', 'IGenerator', '>', 'getGeneratorsForStage', '(', 'GeneratorStage', 'stage', ')', '{', 'ArrayList', '=', 'new', 'ArrayList', '<', '>', '(', ')', ';', 'for', '(', 'IGenerator', 'generator', ':', 'values', '(', ')', ')', '{', 'if', '(', 'generator', ')', '{', '(', 'generator', ')', ';', '}', '}', '(', 'out', ')', ';', '}']",68,45,6,294,173,27,45.31835205992509,37.096774193548384,,,,-1,-1,-1,-1,False
L402_supppliesFluxStreamString_1.txt,code2seq,METHOD_NAME,token_wrong,0.338,0.5501,23.2209,26.0027,"{'n_total': 524, 'n_valid': 52, 'n_correct': 23}",122.966814,"@Test public void supppliesFluxStreamString() { CompiledFunctionFactory<Supplier<Flux<String>>> compiled = new SupplierCompiler<Flux<String>>(String.class.getName()).compile(""foos"", ""() -> Flux.interval(Duration.ofMillis(1000)).map(Object::toString)"", ""Flux<String>""); assertThat(FunctionFactoryUtils.isFluxSupplier(compiled.getFactoryMethod())).isTrue(); assertThat(compiled.getResult().get().blockFirst()).isEqualTo(""0""); }","void supppliesFluxStreamString(){CompiledFunctionFactory<Supplier<Flux<String>>>compiled=new SupplierCompiler<>(String.class.getName()).compile(""Object"","""");assertThat(FunctionFactoryUtils.isFluxSupplier(getFactoryMethod())).isTrue();assertThat(compiled.get().blockFirst()).isEqualTo("""");}","['@', 'Test', 'public', 'void', 'supppliesFluxStreamString', '(', ')', '{', 'CompiledFunctionFactory', '<', 'Supplier', '<', 'Flux', '<', 'String', '>', '>', '>', 'compiled', '=', 'new', 'SupplierCompiler', '<', 'Flux', '<', 'String', '>', '>', '(', 'String', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'compile', '(', '""foos""', ',', '""() -> Flux.interval(Duration.ofMillis(1000)).map(Object::toString)""', ',', '""Flux<String>""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'compiled', '.', 'getFactoryMethod', '(', ')', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'compiled', '.', 'getResult', '(', ')', '.', 'get', '(', ')', '.', 'blockFirst', '(', ')', ')', '.', 'isEqualTo', '(', '""0""', ')', ';', '}']","['void', 'supppliesFluxStreamString', '(', ')', '{', 'CompiledFunctionFactory', '<', 'Supplier', '<', 'Flux', '<', 'String', '>', '>', '>', 'compiled', '=', 'new', 'SupplierCompiler', '<', '>', '(', 'String', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'compile', '(', '""Object""', ',', '""""', ')', ';', 'assertThat', '(', 'FunctionFactoryUtils', '.', 'isFluxSupplier', '(', 'getFactoryMethod', '(', ')', ')', ')', '.', 'isTrue', '(', ')', ';', 'assertThat', '(', 'compiled', '.', 'get', '(', ')', '.', 'blockFirst', '(', ')', ')', '.', 'isEqualTo', '(', '""""', ')', ';', '}']",88,73,6,425,289,31,34.51776649746193,18.29268292682927,,,,-1,-1,-1,-1,False
L403_displayConnectionError_1.txt,code2seq,METHOD_NAME,token_wrong,0.5377,0.4094,16.7485,20.9118,"{'n_total': 491, 'n_valid': 79, 'n_correct': 37}",164.391705,"private void displayConnectionError() { RegistrationActivity.this.runOnUiThread(new Runnable() { @Override public void run() { alertDialog = CommonDialogUtils.getAlertDialogWithOneButtonAndTitle(context, getResources().getString(R.string.title_head_connection_error), getResources().getString(R.string.error_internal_server), getResources().getString(R.string.button_ok), registrationFailedOKBtnClickListerner); } }); }","void displayConnectionError(){(new Runnable(){void run(){alertDialog=CommonDialogUtils(context().getString().getString(R.error_server),getResources.getString(R),registrationFailedOKBtnClickListerner);}});}","['private', 'void', 'displayConnectionError', '(', ')', '{', 'RegistrationActivity', '.', 'this', '.', 'runOnUiThread', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'alertDialog', '=', 'CommonDialogUtils', '.', 'getAlertDialogWithOneButtonAndTitle', '(', 'context', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'title_head_connection_error', ')', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'error_internal_server', ')', ',', 'getResources', '(', ')', '.', 'getString', '(', 'R', '.', 'string', '.', 'button_ok', ')', ',', 'registrationFailedOKBtnClickListerner', ')', ';', '}', '}', ')', ';', '}']","['void', 'displayConnectionError', '(', ')', '{', '(', 'new', 'Runnable', '(', ')', '{', 'void', 'run', '(', ')', '{', 'alertDialog', '=', 'CommonDialogUtils', '(', 'context', '(', ')', '.', 'getString', '(', ')', '.', 'getString', '(', 'R', '.', 'error_server', ')', ',', 'getResources', '.', 'getString', '(', 'R', ')', ',', 'registrationFailedOKBtnClickListerner', ')', ';', '}', '}', ')', ';', '}']",80,50,6,419,205,28,54.73145780051151,40.54054054054054,,,,-1,-1,-1,-1,False
L404_createStub_1.txt,code2seq,METHOD_NAME,token_wrong,0.7326,0.6498,13.7066,12.508,"{'n_total': 214, 'n_valid': 25, 'n_correct': 19}",53.794281,"@Override public <T> T createStub(Class<T> interfaceClass) { ServiceUrlProvider serviceUrlProvider = context.getServiceUrlProvider(); String serviceUrl = serviceUrlProvider.getUrl(); WebTarget target = client.target(serviceUrl); return WebResourceFactory.newResource(interfaceClass, target); }",T createStub(Class<T>interfaceClass){serviceUrlProvider();newResource(target);},"['@', 'Override', 'public', '<', 'T', '>', 'T', 'createStub', '(', 'Class', '<', 'T', '>', 'interfaceClass', ')', '{', 'ServiceUrlProvider', 'serviceUrlProvider', '=', 'context', '.', 'getServiceUrlProvider', '(', ')', ';', 'String', 'serviceUrl', '=', 'serviceUrlProvider', '.', 'getUrl', '(', ')', ';', 'WebTarget', 'target', '=', 'client', '.', 'target', '(', 'serviceUrl', ')', ';', 'return', 'WebResourceFactory', '.', 'newResource', '(', 'interfaceClass', ',', 'target', ')', ';', '}']","['T', 'createStub', '(', 'Class', '<', 'T', '>', 'interfaceClass', ')', '{', 'serviceUrlProvider', '(', ')', ';', 'newResource', '(', 'target', ')', ';', '}']",55,20,6,293,79,16,77.25631768953069,71.42857142857143,,,,-1,-1,-1,-1,False
L405_getAllVectors_1.txt,code2seq,METHOD_NAME,token_wrong,0.7533,0.5333,17.4373,16.5652,"{'n_total': 228, 'n_valid': 26, 'n_correct': 20}",55.592693,public Enumeration<ObjectVector> getAllVectors() { try { getIndexInput().seek(0); getIndexInput().readString(); } catch (IOException e) { e.printStackTrace(); } return new VectorEnumeration(getIndexInput()); },Enumeration<ObjectVector>getAllVectors(){try{}catch(IOException e){e();}new VectorEnumeration(getIndexInput);},"['public', 'Enumeration', '<', 'ObjectVector', '>', 'getAllVectors', '(', ')', '{', 'try', '{', 'getIndexInput', '(', ')', '.', 'seek', '(', '0', ')', ';', 'getIndexInput', '(', ')', '.', 'readString', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'new', 'VectorEnumeration', '(', 'getIndexInput', '(', ')', ')', ';', '}']","['Enumeration', '<', 'ObjectVector', '>', 'getAllVectors', '(', ')', '{', 'try', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '(', ')', ';', '}', 'new', 'VectorEnumeration', '(', 'getIndexInput', ')', ';', '}']",52,29,6,209,110,19,52.10526315789473,50.0,,,,-1,-1,-1,-1,False
L406_objectChanged_1.txt,code2seq,METHOD_NAME,token_wrong,0.5073,0.4932,20.0663,19.124,"{'n_total': 539, 'n_valid': 70, 'n_correct': 42}",148.562138,"public void objectChanged(String name, int type) { String dn = ServiceManager.getServiceNameDN(serviceName, version); if (DNUtils.normalizeDN(dn).equals(DNUtils.normalizeDN(name))) { if (debug.messageEnabled()) { debug.message(""ServiceSchemaManagerImpl:objectChanged for "" + serviceName + ""("" + version + "")""); } allObjectsChanged(); } }","void objectChanged(String name,int type){String dn=ServiceManager(version);if((dn)(normalizeDN())){if(messageEnabled()){(""ServiceSchemaManagerImpl""+""""+"""");}}}","['public', 'void', 'objectChanged', '(', 'String', 'name', ',', 'int', 'type', ')', '{', 'String', 'dn', '=', 'ServiceManager', '.', 'getServiceNameDN', '(', 'serviceName', ',', 'version', ')', ';', 'if', '(', 'DNUtils', '.', 'normalizeDN', '(', 'dn', ')', '.', 'equals', '(', 'DNUtils', '.', 'normalizeDN', '(', 'name', ')', ')', ')', '{', 'if', '(', 'debug', '.', 'messageEnabled', '(', ')', ')', '{', 'debug', '.', 'message', '(', '""ServiceSchemaManagerImpl:objectChanged for ""', '+', 'serviceName', '+', '""(""', '+', 'version', '+', '"")""', ')', ';', '}', 'allObjectsChanged', '(', ')', ';', '}', '}']","['void', 'objectChanged', '(', 'String', 'name', ',', 'int', 'type', ')', '{', 'String', 'dn', '=', 'ServiceManager', '(', 'version', ')', ';', 'if', '(', '(', 'dn', ')', '(', 'normalizeDN', '(', ')', ')', ')', '{', 'if', '(', 'messageEnabled', '(', ')', ')', '{', '(', '""ServiceSchemaManagerImpl""', '+', '""""', '+', '""""', ')', ';', '}', '}', '}']",74,48,6,337,158,19,56.289308176100626,38.23529411764706,,,,-1,-1,-1,-1,False
L407_load_1.txt,code2seq,METHOD_NAME,token_wrong,0.8131,0.5549,7.1414,6.6276,"{'n_total': 286, 'n_valid': 34, 'n_correct': 29}",74.630031,"private Object load(ComponentManager cm, String name) { Object o = cm.get(name); if (o == null) { log.error(""Cant find Spring component named "" + name); } return o; }","Object load(ComponentManager name){o();if(o){(""""+name);}}","['private', 'Object', 'load', '(', 'ComponentManager', 'cm', ',', 'String', 'name', ')', '{', 'Object', 'o', '=', 'cm', '.', 'get', '(', 'name', ')', ';', 'if', '(', 'o', '==', 'null', ')', '{', 'log', '.', 'error', '(', '""Cant find Spring component named ""', '+', 'name', ')', ';', '}', 'return', 'o', ';', '}']","['Object', 'load', '(', 'ComponentManager', 'name', ')', '{', 'o', '(', ')', ';', 'if', '(', 'o', ')', '{', '(', '""""', '+', 'name', ')', ';', '}', '}']",42,24,6,166,57,10,69.87179487179486,50.0,,,,-1,-1,-1,-1,False
L408_isDeleted_1.txt,code2seq,METHOD_NAME,token_wrong,0.494,0.4866,10.5571,10.0159,"{'n_total': 276, 'n_valid': 48, 'n_correct': 24}",96.981615,"public static boolean isDeleted(IndexReader indexReader, int docID) { Bits liveDocs = MultiFields.getLiveDocs(indexReader); if (!liveDocs.get(docID)) { return true; } else return false; }",boolean isDeleted(IndexReader docID){Bits liveDocs=(indexReader);if(!liveDocs()){}},"['public', 'static', 'boolean', 'isDeleted', '(', 'IndexReader', 'indexReader', ',', 'int', 'docID', ')', '{', 'Bits', 'liveDocs', '=', 'MultiFields', '.', 'getLiveDocs', '(', 'indexReader', ')', ';', 'if', '(', '!', 'liveDocs', '.', 'get', '(', 'docID', ')', ')', '{', 'return', 'true', ';', '}', 'else', 'return', 'false', ';', '}']","['boolean', 'isDeleted', '(', 'IndexReader', 'docID', ')', '{', 'Bits', 'liveDocs', '=', '(', 'indexReader', ')', ';', 'if', '(', '!', 'liveDocs', '(', ')', ')', '{', '}', '}']",42,24,6,187,83,15,60.46511627906976,50.0,,,,-1,-1,-1,-1,False
L409_createRawValidator_8.txt,code2seq,METHOD_NAME,token_wrong,0.6592,0.4448,24.1651,22.8685,"{'n_total': 1413, 'n_valid': 387, 'n_correct': 142}",747.021216,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.g"" + ""rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.A"" + ""ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011"" + ""java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.gram"" + ""mar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype"" + "";L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004"" + ""ppsr\u0000*com.sun.msv.datatype.xsd.DatatypeFactory$1\u00a1\u00f3\u000b\u00e3`rj\u000e\u0002\u0000\u0000x"" + ""r\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lc"" + ""om/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000\'com.sun.msv.datat"" + ""ype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lan"" + ""g/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dataty"" + ""pe/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSc"" + ""hemat\u0000\u0006IDREFSsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"" + ""r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"" + ""Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000\'com.sun.msv.datatype.xsd.MinLength"" + ""Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLengthxr\u00009com.sun.msv.datatype.xsd.Dat"" + ""aTypeWithValueConstraintFacet\""\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.data"" + ""type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"" + ""alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"" + ""datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0000\u0000sr"" + ""\u0000!com.sun.msv.datatype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypeq\u0000~"" + ""\u0000\u0016xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017"" + ""ppq\u0000~\u0000\u001fsr\u0000\""com.sun.msv.datatype.xsd.IDREFType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#"" + ""com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\""com.sun.ms"" + ""v.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."" + ""xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dat"" + ""atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000\u001bt\u0000\u0005IDREFq\u0000~"" + ""\u0000\u001f\u0000q\u0000~\u0000\'t\u0000\tminLength\u0000\u0000\u0000\u0001sr\u00000com.sun.msv.grammar.Expression$N"" + ""ullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u000fppsr\u0000#com.sun.msv.gram"" + ""mar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceU"" + ""RIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0011desc"" + ""riptionIDRefst\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonEx"" + ""pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u000e\u0001q\u0000~\u00008sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u000fpsq\u0000"" + ""~\u0000\u0010q\u0000~\u0000\u000fpsr\u0000\""com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"" + ""\u0000~\u0000,q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u00001sr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"" + ""\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000?q\u0000~\u0000\u001bsq"" + ""\u0000~\u00002t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u00008"" + ""sq\u0000~\u00002t\u0000\u001aAuthenticateSessionContextt\u0000\u0019urn:liberty:disco:2003"" + ""-08sr\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"" + ""blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"" + ""om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"" + ""untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"" + ""onPool;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\tq\u0000~\u0000:x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","verifier createRawValidator(){if(schemaFragment){((""""+""\\""+""""+""""+""""));}return newregexpREDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsr\x00\x1dcom.sun.msv.g""', '+', '""rammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.grammar.A""', '+', '""ttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04sr\x00\x11""', '+', '""java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\x1bcom.sun.msv.gram""', '+', '""mar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype""', '+', '"";L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04""', '+', '""ppsr\x00*com.sun.msv.datatype.xsd.DatatypeFactory$1¡ó\x0bã`rj\x0e\x02\x00\x00x""', '+', '""r\x00\x1ecom.sun.msv.datatype.xsd.Proxy\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bbaseTypet\x00)Lc""', '+', '""om/sun/msv/datatype/xsd/XSDatatypeImpl;xr\x00\\\'com.sun.msv.datat""', '+', '""ype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Ljava/lan""', '+', '""g/String;L\x00\\btypeNameq\x00~\x00\x18L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/dataty""', '+', '""pe/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2001/XMLSc""', '+', '""hemat\x00\x06IDREFSsr\x005com.sun.msv.datatype.xsd.WhiteSpaceProcesso""', '+', '""r$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.WhiteSpace""', '+', '""Processor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x00\\\'com.sun.msv.datatype.xsd.MinLength""', '+', '""Facet\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01I\x00\\tminLengthxr\x009com.sun.msv.datatype.xsd.Dat""', '+', '""aTypeWithValueConstraintFacet\\""§RoÊÇ\x8aT\x02\x00\x00xr\x00*com.sun.msv.data""', '+', '""type.xsd.DataTypeWithFacet\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x05Z\x00\\fisFacetFixedZ\x00\x12needV""', '+', '""alueCheckFlagL\x00\\bbaseTypeq\x00~\x00\x16L\x00\\fconcreteTypet\x00\\\'Lcom/sun/msv/""', '+', '""datatype/xsd/ConcreteType;L\x00\\tfacetNameq\x00~\x00\x18xq\x00~\x00\x17ppq\x00~\x00\x1f\x00\x00sr""', '+', '""\x00!com.sun.msv.datatype.xsd.ListType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bitemTypeq\x00~""', '+', '""\x00\x16xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x17""', '+', '""ppq\x00~\x00\x1fsr\x00\\""com.sun.msv.datatype.xsd.IDREFType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#""', '+', '""com.sun.msv.datatype.xsd.NcnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\""com.sun.ms""', '+', '""v.datatype.xsd.TokenType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datatype.""', '+', '""xsd.StringType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxr\x00*com.sun.msv.dat""', '+', '""atype.xsd.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00&q\x00~\x00\x1bt\x00\x05IDREFq\x00~""', '+', '""\x00\x1f\x00q\x00~\x00\\\'t\x00\\tminLength\x00\x00\x00\x01sr\x000com.sun.msv.grammar.Expression$N""', '+', '""ullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x0fppsr\x00#com.sun.msv.gram""', '+', '""mar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceU""', '+', '""RIq\x00~\x00\x18xr\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x11desc""', '+', '""riptionIDRefst\x00\x00sr\x000com.sun.msv.grammar.Expression$EpsilonEx""', '+', '""pression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x0e\x01q\x00~\x008sq\x00~\x00\\nppsq\x00~\x00\\fq\x00~\x00\x0fpsq\x00""', '+', '""~\x00\x10q\x00~\x00\x0fpsr\x00\\""com.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq""', '+', '""\x00~\x00,q\x00~\x00\x1bt\x00\x05QNameq\x00~\x00\x1fq\x00~\x001sr\x00\x1bcom.sun.msv.util.StringPairÐt""', '+', '""\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceURIq\x00~\x00\x18xpq\x00~\x00?q\x00~\x00\x1bsq""', '+', '""\x00~\x002t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-instanceq\x00~\x008""', '+', '""sq\x00~\x002t\x00\x1aAuthenticateSessionContextt\x00\x19urn:liberty:disco:2003""', '+', '""-08sr\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTa""', '+', '""blet\x00/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-c""', '+', '""om.sun.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05co""', '+', '""untB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/Expressi""', '+', '""onPool;xp\x00\x00\x00\x03\x01pq\x00~\x00\x0bq\x00~\x00\\tq\x00~\x00:x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['verifier', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', ')', '{', '(', '(', '""""', '+', '""\\\\""', '+', '""""', '+', '""""', '+', '""""', ')', ')', ';', '}', 'return', 'newregexpREDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",159,32,6,6545,126,24,98.43582272657568,83.00653594771242,,,,-1,-1,-1,-1,False
L410_decodeToolState_1.txt,code2seq,METHOD_NAME,token_wrong,0.7741,0.7841,15.1221,14.9498,"{'n_total': 342, 'n_valid': 46, 'n_correct': 27}",102.033908,"public String decodeToolState(Map<String, String[]> params, String placementId) { String attrname = computeToolStateParameterName(placementId); String[] attrval = params.get(attrname); return attrval == null ? null : attrval[0]; }","String decodeToolState(Map<String>params,String placementId){String=computeToolStateParameterName();String[]attrval=params.get;return attrval==null?null:attrval;}","['public', 'String', 'decodeToolState', '(', 'Map', '<', 'String', ',', 'String', '[', ']', '>', 'params', ',', 'String', 'placementId', ')', '{', 'String', 'attrname', '=', 'computeToolStateParameterName', '(', 'placementId', ')', ';', 'String', '[', ']', 'attrval', '=', 'params', '.', 'get', '(', 'attrname', ')', ';', 'return', 'attrval', '==', 'null', '?', 'null', ':', 'attrval', '[', '0', ']', ';', '}']","['String', 'decodeToolState', '(', 'Map', '<', 'String', '>', 'params', ',', 'String', 'placementId', ')', '{', 'String', '=', 'computeToolStateParameterName', '(', ')', ';', 'String', '[', ']', 'attrval', '=', 'params', '.', 'get', ';', 'return', 'attrval', '==', 'null', '?', 'null', ':', 'attrval', ';', '}']",51,38,6,230,162,21,32.535885167464116,28.888888888888886,,,,-1,-1,-1,-1,False
L411_initializeTokens_1.txt,code2seq,METHOD_NAME,token_wrong,0.6982,0.3654,4.3239,5.2662,"{'n_total': 206, 'n_valid': 29, 'n_correct': 19}",61.714511,"private void initializeTokens() { if (tokens == null) { tokens = textAnnotation.getTokensInSpan(this.getStartSpan(), this.getEndSpan()); } }",void initializeTokens(){if(tokens==null){tokens=(this.getStartSpan);}},"['private', 'void', 'initializeTokens', '(', ')', '{', 'if', '(', 'tokens', '==', 'null', ')', '{', 'tokens', '=', 'textAnnotation', '.', 'getTokensInSpan', '(', 'this', '.', 'getStartSpan', '(', ')', ',', 'this', '.', 'getEndSpan', '(', ')', ')', ';', '}', '}']","['void', 'initializeTokens', '(', ')', '{', 'if', '(', 'tokens', '==', 'null', ')', '{', 'tokens', '=', '(', 'this', '.', 'getStartSpan', ')', ';', '}', '}']",34,22,6,140,70,22,59.32203389830508,42.857142857142854,,,,-1,-1,-1,-1,False
L412_getName_1.txt,code2seq,METHOD_NAME,token_wrong,0.7113,0.7038,6.489,7.0115,"{'n_total': 418, 'n_valid': 83, 'n_correct': 32}",168.025831,"public static String getName(short identifierType) { switch(identifierType) { case pre_agreed: return ""pre_agreed""; case key_sha1_hash: return ""key_sha1_hash""; case x509_name: return ""x509_name""; case cert_sha1_hash: return ""cert_sha1_hash""; default: return ""UNKNOWN""; } }","String getName(short identifierType){switch(identifierType){case pre_agreed:""key_sha_hash"";return""name"";""sha"";default:return""UNKNOWN"";}}","['public', 'static', 'String', 'getName', '(', 'short', 'identifierType', ')', '{', 'switch', '(', 'identifierType', ')', '{', 'case', 'pre_agreed', ':', 'return', '""pre_agreed""', ';', 'case', 'key_sha1_hash', ':', 'return', '""key_sha1_hash""', ';', 'case', 'x509_name', ':', 'return', '""x509_name""', ';', 'case', 'cert_sha1_hash', ':', 'return', '""cert_sha1_hash""', ';', 'default', ':', 'return', '""UNKNOWN""', ';', '}', '}']","['String', 'getName', '(', 'short', 'identifierType', ')', '{', 'switch', '(', 'identifierType', ')', '{', 'case', 'pre_agreed', ':', '""key_sha_hash""', ';', 'return', '""name""', ';', '""sha""', ';', 'default', ':', 'return', '""UNKNOWN""', ';', '}', '}']",45,29,6,272,136,13,52.509652509652504,41.02564102564102,,,,-1,-1,-1,-1,False
L413_forUserTopics_1.txt,code2seq,METHOD_NAME,token_wrong,0.6702,0.2669,21.1125,19.6659,"{'n_total': 328, 'n_valid': 42, 'n_correct': 37}",90.65927,"public Pagination forUserTopics(User user, int totalTopics) { this.recordsPerPage = this.config.getInt(ConfigKeys.TOPICS_PER_PAGE); this.totalRecords = totalTopics; this.totalPages = this.calculeTotalPages(); this.thisPage = this.calculeThisPage(this.start); this.start = this.calculeStart(this.start, this.recordsPerPage); this.baseUrl = String.format(""/%s/%s"", Domain.USER, Actions.TOPICS); this.id = user.getId(); return this; }",Pagination forUserTopics(User totalTopics){recordsPerPage().calculeStart();(Actions);id();},"['public', 'Pagination', 'forUserTopics', '(', 'User', 'user', ',', 'int', 'totalTopics', ')', '{', 'this', '.', 'recordsPerPage', '=', 'this', '.', 'config', '.', 'getInt', '(', 'ConfigKeys', '.', 'TOPICS_PER_PAGE', ')', ';', 'this', '.', 'totalRecords', '=', 'totalTopics', ';', 'this', '.', 'totalPages', '=', 'this', '.', 'calculeTotalPages', '(', ')', ';', 'this', '.', 'thisPage', '=', 'this', '.', 'calculeThisPage', '(', 'this', '.', 'start', ')', ';', 'this', '.', 'start', '=', 'this', '.', 'calculeStart', '(', 'this', '.', 'start', ',', 'this', '.', 'recordsPerPage', ')', ';', 'this', '.', 'baseUrl', '=', 'String', '.', 'format', '(', '""/%s/%s""', ',', 'Domain', '.', 'USER', ',', 'Actions', '.', 'TOPICS', ')', ';', 'this', '.', 'id', '=', 'user', '.', 'getId', '(', ')', ';', 'return', 'this', ';', '}']","['Pagination', 'forUserTopics', '(', 'User', 'totalTopics', ')', '{', 'recordsPerPage', '(', ')', '.', 'calculeStart', '(', ')', ';', '(', 'Actions', ')', ';', 'id', '(', ')', ';', '}']",105,24,6,431,91,19,82.52427184466019,81.81818181818183,,,,-1,-1,-1,-1,False
L414_extractXmpData_1.txt,code2seq,METHOD_NAME,token_wrong,0.8133,0.6716,10.7541,7.5165,"{'n_total': 499, 'n_valid': 58, 'n_correct': 34}",123.728527,"private static void extractXmpData(@NotNull final Metadata metadata, @NotNull SequentialReader reader) throws IOException { byte[] bytes = readUntil(reader, ""<?xpacket end=\""w\""?>"".getBytes()); String xmp = new String(bytes, Charsets.UTF_8); new XmpReader().extract(xmp, metadata); }","void extractXmpData(@NotNull Metadata metadata,SequentialReader reader)throws IOException{("""");xmp=(bytes)XmpReader().extract(metadata);}","['private', 'static', 'void', 'extractXmpData', '(', '@', 'NotNull', 'final', 'Metadata', 'metadata', ',', '@', 'NotNull', 'SequentialReader', 'reader', ')', 'throws', 'IOException', '{', 'byte', '[', ']', 'bytes', '=', 'readUntil', '(', 'reader', ',', '""<?xpacket end=\\""w\\""?>""', '.', 'getBytes', '(', ')', ')', ';', 'String', 'xmp', '=', 'new', 'String', '(', 'bytes', ',', 'Charsets', '.', 'UTF_8', ')', ';', 'new', 'XmpReader', '(', ')', '.', 'extract', '(', 'xmp', ',', 'metadata', ')', ';', '}']","['void', 'extractXmpData', '(', '@', 'NotNull', 'Metadata', 'metadata', ',', 'SequentialReader', 'reader', ')', 'throws', 'IOException', '{', '(', '""""', ')', ';', 'xmp', '=', '(', 'bytes', ')', 'XmpReader', '(', ')', '.', 'extract', '(', 'metadata', ')', ';', '}']",61,33,6,283,137,20,55.51330798479087,50.90909090909091,,,,-1,-1,-1,-1,False
L415_countDefaultPartitions_1.txt,code2seq,METHOD_NAME,token_wrong,0.4373,0.7507,18.7314,20.2955,"{'n_total': 254, 'n_valid': 34, 'n_correct': 25}",72.203572,private void countDefaultPartitions() { if (maxTimestamp == Numbers.LONG_NaN) { partitionCount = 0; } else { Path path = pathGenDefault(); partitionCount = ff.exists(path) ? 1 : 0; path.trimTo(rootLen); } },void countDefaultPartitions(){if(NumbersNaN){partitionCount=(path)?1:0;trimTo(rootLen);}},"['private', 'void', 'countDefaultPartitions', '(', ')', '{', 'if', '(', 'maxTimestamp', '==', 'Numbers', '.', 'LONG_NaN', ')', '{', 'partitionCount', '=', '0', ';', '}', 'else', '{', 'Path', 'path', '=', 'pathGenDefault', '(', ')', ';', 'partitionCount', '=', 'ff', '.', 'exists', '(', 'path', ')', '?', '1', ':', '0', ';', 'path', '.', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']","['void', 'countDefaultPartitions', '(', ')', '{', 'if', '(', 'NumbersNaN', ')', '{', 'partitionCount', '=', '(', 'path', ')', '?', '1', ':', '0', ';', 'trimTo', '(', 'rootLen', ')', ';', '}', '}']",51,27,6,206,89,28,65.73033707865169,53.333333333333336,,,,-1,-1,-1,-1,False
L416_initialize_1.txt,code2seq,METHOD_NAME,token_wrong,0.5926,0.5257,9.9792,10.4,"{'n_total': 332, 'n_valid': 49, 'n_correct': 26}",101.83963,"protected void initialize() { if (entityRequestHandler == null) { entityRequestHandler = initializeEntityRequestHandler(); } if (entityRequestHandler == null) { throw new IllegalStateException(""FAILURE to get the handler during init of the direct servlet""); } }","void initialize(){if(entityRequestHandler==null){entityRequestHandler=initializeEntityRequestHandler();}if(entityRequestHandler==null){IllegalStateException("""");}}","['protected', 'void', 'initialize', '(', ')', '{', 'if', '(', 'entityRequestHandler', '==', 'null', ')', '{', 'entityRequestHandler', '=', 'initializeEntityRequestHandler', '(', ')', ';', '}', 'if', '(', 'entityRequestHandler', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '""FAILURE to get the handler during init of the direct servlet""', ')', ';', '}', '}']","['void', 'initialize', '(', ')', '{', 'if', '(', 'entityRequestHandler', '==', 'null', ')', '{', 'entityRequestHandler', '=', 'initializeEntityRequestHandler', '(', ')', ';', '}', 'if', '(', 'entityRequestHandler', '==', 'null', ')', '{', 'IllegalStateException', '(', '""""', ')', ';', '}', '}']",36,33,6,261,163,16,40.0,10.0,,,,-1,-1,-1,-1,False
L417_notifyFolderRenamedListeners_1.txt,code2seq,METHOD_NAME,token_wrong,0.784,0.5037,28.8466,28.6433,"{'n_total': 276, 'n_valid': 37, 'n_correct': 21}",78.491558,"protected void notifyFolderRenamedListeners(Folder oldF, Folder newF) { if (folderListeners == null) return; FolderEvent e = new FolderEvent(this, oldF, newF, FolderEvent.RENAMED); queueEvent(e, folderListeners); }",void notifyFolderRenamedListeners(Folder newF){if(folderListeners=null)FolderEvent(FolderEvent.RENAMED);queueEvent(e);},"['protected', 'void', 'notifyFolderRenamedListeners', '(', 'Folder', 'oldF', ',', 'Folder', 'newF', ')', '{', 'if', '(', 'folderListeners', '==', 'null', ')', 'return', ';', 'FolderEvent', 'e', '=', 'new', 'FolderEvent', '(', 'this', ',', 'oldF', ',', 'newF', ',', 'FolderEvent', '.', 'RENAMED', ')', ';', 'queueEvent', '(', 'e', ',', 'folderListeners', ')', ';', '}']","['void', 'notifyFolderRenamedListeners', '(', 'Folder', 'newF', ')', '{', 'if', '(', 'folderListeners', '=', 'null', ')', 'FolderEvent', '(', 'FolderEvent', '.', 'RENAMED', ')', ';', 'queueEvent', '(', 'e', ')', ';', '}']",44,26,6,214,119,34,52.77777777777778,47.368421052631575,,,,-1,-1,-1,-1,False
L418_displaySiteAlias_1.txt,code2seq,METHOD_NAME,token_wrong,0.501,0.4867,19.3912,26.3474,"{'n_total': 181, 'n_valid': 24, 'n_correct': 14}",50.164164,"public boolean displaySiteAlias() { if (ServerConfigurationService.getBoolean(""wsetup.disable.siteAlias"", false)) { return false; } return true; }","boolean displaySiteAlias(){if(ServerConfigurationService.getBoolean(""wsetup"")){return false;}}","['public', 'boolean', 'displaySiteAlias', '(', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""wsetup.disable.siteAlias""', ',', 'false', ')', ')', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']","['boolean', 'displaySiteAlias', '(', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""wsetup""', ')', ')', '{', 'return', 'false', ';', '}', '}']",26,20,6,146,94,22,41.935483870967744,30.0,,,,-1,-1,-1,-1,False
L419_write_1.txt,code2seq,METHOD_NAME,token_wrong,0.5902,0.4353,1.6799,2.6351,"{'n_total': 295, 'n_valid': 38, 'n_correct': 20}",81.151564,"public void write(ByteBuffer buffer) { ByteBuffers.putStringDW(buffer, name); buffer.put((byte) partitionBy); buffer.putInt(recordHint); buffer.put((byte) (ordered ? 1 : 0)); }",void write(ByteBuffer buffer){ByteBuffers(buffer);buffer(partitionBy);buffer.putInt(recordHint);put((ordered?1:0));},"['public', 'void', 'write', '(', 'ByteBuffer', 'buffer', ')', '{', 'ByteBuffers', '.', 'putStringDW', '(', 'buffer', ',', 'name', ')', ';', 'buffer', '.', 'put', '(', '(', 'byte', ')', 'partitionBy', ')', ';', 'buffer', '.', 'putInt', '(', 'recordHint', ')', ';', 'buffer', '.', 'put', '(', '(', 'byte', ')', '(', 'ordered', '?', '1', ':', '0', ')', ')', ';', '}']","['void', 'write', '(', 'ByteBuffer', 'buffer', ')', '{', 'ByteBuffers', '(', 'buffer', ')', ';', 'buffer', '(', 'partitionBy', ')', ';', 'buffer', '.', 'putInt', '(', 'recordHint', ')', ';', 'put', '(', '(', 'ordered', '?', '1', ':', '0', ')', ')', ';', '}']",51,36,6,176,116,11,36.36363636363637,33.33333333333333,,,,-1,-1,-1,-1,False
L420_convertFormattedText_1.txt,code2seq,METHOD_NAME,token_wrong,0.4701,0.4209,14.9991,15.7867,"{'n_total': 230, 'n_valid': 31, 'n_correct': 15}",65.197888,"public String convertFormattedText(String text) { if (ServerConfigurationService.getBoolean(""samigo.pdf.convertformattedtext"", false)) { return FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext(text)); } return text; }","String convertFormattedText(String text){if(ServerConfigurationService.getBoolean(""samigo"",false)){FormattedText.convertPlaintextToFormattedText(FormattedText.convertFormattedTextToPlaintext());}return text;}","['public', 'String', 'convertFormattedText', '(', 'String', 'text', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""samigo.pdf.convertformattedtext""', ',', 'false', ')', ')', '{', 'return', 'FormattedText', '.', 'convertPlaintextToFormattedText', '(', 'FormattedText', '.', 'convertFormattedTextToPlaintext', '(', 'text', ')', ')', ';', '}', 'return', 'text', ';', '}']","['String', 'convertFormattedText', '(', 'String', 'text', ')', '{', 'if', '(', 'ServerConfigurationService', '.', 'getBoolean', '(', '""samigo""', ',', 'false', ')', ')', '{', 'FormattedText', '.', 'convertPlaintextToFormattedText', '(', 'FormattedText', '.', 'convertFormattedTextToPlaintext', '(', ')', ')', ';', '}', 'return', 'text', ';', '}']",38,35,6,260,208,26,22.22222222222222,9.375,,,,-1,-1,-1,-1,False
L421_potentialReferences_1.txt,code2seq,METHOD_NAME,token_wrong,0.4929,0.4444,19.5543,24.3644,"{'n_total': 224, 'n_valid': 21, 'n_correct': 15}",46.213306,"Collection<URI> potentialReferences(String name) { updateOpenFiles(); Map<URI, SourceFileIndex> hasName = Maps.filterValues(sourcePathFiles, index -> index.references.contains(name)); return hasName.keySet(); }","Collection<URI>potentialReferences(String name){updateOpenFiles();Map<URI,SourceFileIndex>hasName=Maps.filterValues(sourcePathFiles());hasName.keySet();}","['Collection', '<', 'URI', '>', 'potentialReferences', '(', 'String', 'name', ')', '{', 'updateOpenFiles', '(', ')', ';', 'Map', '<', 'URI', ',', 'SourceFileIndex', '>', 'hasName', '=', 'Maps', '.', 'filterValues', '(', 'sourcePathFiles', ',', 'index', '->', 'index', '.', 'references', '.', 'contains', '(', 'name', ')', ')', ';', 'return', 'hasName', '.', 'keySet', '(', ')', ';', '}']","['Collection', '<', 'URI', '>', 'potentialReferences', '(', 'String', 'name', ')', '{', 'updateOpenFiles', '(', ')', ';', 'Map', '<', 'URI', ',', 'SourceFileIndex', '>', 'hasName', '=', 'Maps', '.', 'filterValues', '(', 'sourcePathFiles', '(', ')', ')', ';', 'hasName', '.', 'keySet', '(', ')', ';', '}']",48,38,6,210,153,25,30.810810810810814,23.809523809523807,,,,-1,-1,-1,-1,False
L422_formatMillisecondsAsTimestamp_1.txt,code2seq,METHOD_NAME,token_wrong,0.6526,0.6292,20.6928,23.4434,"{'n_total': 252, 'n_valid': 38, 'n_correct': 23}",79.55095,"public static String formatMillisecondsAsTimestamp(long creationDate) { SimpleDateFormat sdf = new SimpleDateFormat(VERSION_TIMESTAMP_FORMAT); sdf.setTimeZone(TimeZone.getTimeZone(""GMT"")); return sdf.format(creationDate); }","String formatMillisecondsAsTimestamp(long creationDate){(FORMAT);((""""));sdf();}","['public', 'static', 'String', 'formatMillisecondsAsTimestamp', '(', 'long', 'creationDate', ')', '{', 'SimpleDateFormat', 'sdf', '=', 'new', 'SimpleDateFormat', '(', 'VERSION_TIMESTAMP_FORMAT', ')', ';', 'sdf', '.', 'setTimeZone', '(', 'TimeZone', '.', 'getTimeZone', '(', '""GMT""', ')', ')', ';', 'return', 'sdf', '.', 'format', '(', 'creationDate', ')', ';', '}']","['String', 'formatMillisecondsAsTimestamp', '(', 'long', 'creationDate', ')', '{', '(', 'FORMAT', ')', ';', '(', '(', '""""', ')', ')', ';', 'sdf', '(', ')', ';', '}']",39,22,6,223,79,35,76.59574468085107,51.515151515151516,,,,-1,-1,-1,-1,False
L423_isNeighbor_1.txt,code2seq,METHOD_NAME,token_wrong,0.9966,0.5663,14.42,12.2972,"{'n_total': 269, 'n_valid': 25, 'n_correct': 22}",53.713196,"@Override public boolean isNeighbor(V v1, V v2) { if (!containsVertex(v1) || !containsVertex(v2)) return false; return getNeighbors(v1).contains(v2); }","boolean isNeighbor(V v,V v){if(containsVertex())(1).contains(v);}","['@', 'Override', 'public', 'boolean', 'isNeighbor', '(', 'V', 'v1', ',', 'V', 'v2', ')', '{', 'if', '(', '!', 'containsVertex', '(', 'v1', ')', '||', '!', 'containsVertex', '(', 'v2', ')', ')', 'return', 'false', ';', 'return', 'getNeighbors', '(', 'v1', ')', '.', 'contains', '(', 'v2', ')', ';', '}']","['boolean', 'isNeighbor', '(', 'V', 'v', ',', 'V', 'v', ')', '{', 'if', '(', 'containsVertex', '(', ')', ')', '(', '1', ')', '.', 'contains', '(', 'v', ')', ';', '}']",42,26,6,151,65,16,63.70370370370371,44.44444444444444,,,,-1,-1,-1,-1,False
L424_generateMessageHandle_1.txt,code2seq,METHOD_NAME,token_wrong,0.6113,0.7776,17.7281,21.1602,"{'n_total': 264, 'n_valid': 32, 'n_correct': 25}",69.852874,public static String generateMessageHandle() { if (random == null) { return null; } byte[] bytes = new byte[SAML2Constants.ID_LENGTH]; random.nextBytes(bytes); return byteArrayToString(bytes); },String generateMessageHandle(){if(null){}byte[]bytes=newbyte[LENGTH];random();},"['public', 'static', 'String', 'generateMessageHandle', '(', ')', '{', 'if', '(', 'random', '==', 'null', ')', '{', 'return', 'null', ';', '}', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', 'SAML2Constants', '.', 'ID_LENGTH', ']', ';', 'random', '.', 'nextBytes', '(', 'bytes', ')', ';', 'return', 'byteArrayToString', '(', 'bytes', ')', ';', '}']","['String', 'generateMessageHandle', '(', ')', '{', 'if', '(', 'null', ')', '{', '}', 'byte', '[', ']', 'bytes', '=', 'newbyte', '[', 'LENGTH', ']', ';', 'random', '(', ')', ';', '}']",45,26,6,194,79,27,68.8622754491018,48.717948717948715,,,,-1,-1,-1,-1,False
L425_generateUnboxing_1.txt,code2seq,METHOD_NAME,token_wrong,0.4916,0.5416,8.8971,13.3947,"{'n_total': 249, 'n_valid': 35, 'n_correct': 24}",74.360044,"private static void generateUnboxing(@Nonnull MethodVisitor mv, @Nonnull PrimitiveType primitiveType) { String owner = primitiveType.getWrapperTypeDesc(); String methodName = primitiveType.getClassName() + ""Value""; String methodDesc = ""()"" + primitiveType.getTypeCode(); mv.visitMethodInsn(INVOKEVIRTUAL, owner, methodName, methodDesc, false); }","void generateUnboxing(@Nonnull MethodVisitor mv,PrimitiveType primitiveType){String methodName=visitMethodInsn(methodDesc,false);}","['private', 'static', 'void', 'generateUnboxing', '(', '@', 'Nonnull', 'MethodVisitor', 'mv', ',', '@', 'Nonnull', 'PrimitiveType', 'primitiveType', ')', '{', 'String', 'owner', '=', 'primitiveType', '.', 'getWrapperTypeDesc', '(', ')', ';', 'String', 'methodName', '=', 'primitiveType', '.', 'getClassName', '(', ')', '+', '""Value""', ';', 'String', 'methodDesc', '=', '""()""', '+', 'primitiveType', '.', 'getTypeCode', '(', ')', ';', 'mv', '.', 'visitMethodInsn', '(', 'INVOKEVIRTUAL', ',', 'owner', ',', 'methodName', ',', 'methodDesc', ',', 'false', ')', ';', '}']","['void', 'generateUnboxing', '(', '@', 'Nonnull', 'MethodVisitor', 'mv', ',', 'PrimitiveType', 'primitiveType', ')', '{', 'String', 'methodName', '=', 'visitMethodInsn', '(', 'methodDesc', ',', 'false', ')', ';', '}']",63,23,6,345,130,22,66.56346749226006,70.17543859649122,,,,-1,-1,-1,-1,False
L426_banner_1.txt,code2seq,METHOD_NAME,token_wrong,0.5773,0.6507,13.422,9.3769,"{'n_total': 236, 'n_valid': 67, 'n_correct': 36}",127.258676,"public static void banner() { System.out.println(""* =============================================================== *""); System.out.println(""* Simple Java HTTP Server for Deserialization Lab v0.01 *""); System.out.println(""* https://github.com/joaomatosf/JavaDeserH2HC *""); System.out.println(""* =============================================================== *""); System.out.println(""You can inject java serialized objects in the following formats:""); System.out.println(""\n 1) Binary in HTTP POST (ie \\xAC\\xED). Ex:\n"" + "" $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\n"" + ""\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\n"" + "" $ curl 127.0.0.1:8000 -d \""ViewState=rO0ABXNy...\""\n"" + "" $ curl 127.0.0.1:8000 -d \""ViewState=H4sICAeH...\""\n"" + ""\n 3) Base64 or Gzip+Base64 in cookies. Ex:\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: JSESSIONID=rO0ABXNy...\""\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: JSESSIONID=H4sICAeH...\""\n"" + ""\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\n"" + "" $ curl 127.0.0.1:8000 -H \""Cookie: rememberMe=MTIzNDU2Nzg...\""\n"" + ""\n 5) XML for XStream RCE vulnerability/serialization. Ex:\n"" + "" $ curl 127.0.0.1:8000 -d @file.xml\n -H \""Content-Type: application/xml\""""); System.out.println(""OBS: To test gadgets in specific libraries, run with -cp param. Ex:\n"" + ""$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer""); System.out.println(""==================================================================""); }","void banner(){println(""="");}","['public', 'static', 'void', 'banner', '(', ')', '{', 'System', '.', 'out', '.', 'println', '(', '""* =============================================================== *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* Simple Java HTTP Server for Deserialization Lab v0.01 *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* https://github.com/joaomatosf/JavaDeserH2HC *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""* =============================================================== *""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""You can inject java serialized objects in the following formats:""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""\\n 1) Binary in HTTP POST (ie \\\\xAC\\\\xED). Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 --data-binary @ObjectFile.ser\\n""', '+', '""\\n 2) Base64 or Gzip+Base64 via HTTP POST parameters. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -d \\""ViewState=rO0ABXNy...\\""\\n""', '+', '"" $ curl 127.0.0.1:8000 -d \\""ViewState=H4sICAeH...\\""\\n""', '+', '""\\n 3) Base64 or Gzip+Base64 in cookies. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: JSESSIONID=rO0ABXNy...\\""\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: JSESSIONID=H4sICAeH...\\""\\n""', '+', '""\\n 4) Base64 of AES-CBC encrypted with hardcoded Apache Shiro key. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -H \\""Cookie: rememberMe=MTIzNDU2Nzg...\\""\\n""', '+', '""\\n 5) XML for XStream RCE vulnerability/serialization. Ex:\\n""', '+', '"" $ curl 127.0.0.1:8000 -d @file.xml\\n -H \\""Content-Type: application/xml\\""""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""OBS: To test gadgets in specific libraries, run with -cp param. Ex:\\n""', '+', '""$ java -cp .:commons-collections-3.2.1.jar VulnerableHTTPServer""', ')', ';', 'System', '.', 'out', '.', 'println', '(', '""==================================================================""', ')', ';', '}']","['void', 'banner', '(', ')', '{', 'println', '(', '""=""', ')', ';', '}']",104,11,6,1490,28,12,98.91745602165088,94.89795918367348,,,,-1,-1,-1,-1,False
L427_testLong_1.txt,code2seq,METHOD_NAME,token_wrong,0.5426,0.5421,10.4294,7.3912,"{'n_total': 2505, 'n_valid': 1092, 'n_correct': 228}",2180.766471,"@Test public void testLong() throws Exception { final String expected = ""8920866532787660373\tBZ\tBZ\t2016-05-01T10:21:00.000Z\t-6253307669002054137\n"" + ""-6943924477733600060\tXX\tBZ\t2016-05-01T10:22:00.000Z\t-7387846268299105911\n"" + ""-6856503215590263904\tKK\tXX\t2016-05-01T10:23:00.000Z\t7122109662042058469\n"" + ""8416773233910814357\tAX\tXX\t2016-05-01T10:24:00.000Z\t7199909180655756830\n"" + ""7199909180655756830\tAX\tXX\t2016-05-01T10:25:00.000Z\t6270672455202306717\n"" + ""6270672455202306717\tAX\tBZ\t2016-05-01T10:26:00.000Z\t-7316123607359392486\n"" + ""-6253307669002054137\tBZ\tXX\t2016-05-01T10:27:00.000Z\t7392877322819819290\n"" + ""7392877322819819290\tBZ\tKK\t2016-05-01T10:28:00.000Z\t-3107239868490395663\n"" + ""-7316123607359392486\tAX\tKK\t2016-05-01T10:29:00.000Z\t-6626590012581323602\n"" + ""-3107239868490395663\tBZ\tAX\t2016-05-01T10:30:00.000Z\t8611582118025429627\n"" + ""-7387846268299105911\tXX\tKK\t2016-05-01T10:31:00.000Z\t-8082754367165748693\n"" + ""7122109662042058469\tKK\tAX\t2016-05-01T10:32:00.000Z\tNaN\n"" + ""-6626590012581323602\tAX\tAX\t2016-05-01T10:33:00.000Z\t6574958665733670985\n"" + ""8611582118025429627\tBZ\tBZ\t2016-05-01T10:34:00.000Z\t8152044974329490473\n"" + ""-8082754367165748693\tXX\tAX\t2016-05-01T10:35:00.000Z\t3446015290144635451\n"" + ""6574958665733670985\tAX\tAX\t2016-05-01T10:36:00.000Z\t8889492928577876455\n"" + ""3446015290144635451\tXX\tKK\t2016-05-01T10:37:00.000Z\tNaN\n"" + ""8889492928577876455\tAX\tAX\t2016-05-01T10:38:00.000Z\tNaN\n"" + ""8152044974329490473\tBZ\tBZ\t2016-05-01T10:39:00.000Z\t-6071768268784020226\n"" + ""-6071768268784020226\tBZ\tAX\t2016-05-01T10:40:00.000Z\tNaN\n""; assertThat(expected, ""select l, str, sym, timestamp , next(l) over (partition by str) from abc""); assertThat(expected, ""select l, str, sym, timestamp , next(l) over (partition by str) from '*!*abc'""); }","@Test void testLong()throws Exception{expected=""tBZ\t6-\n""+""""+""-5-""+""""+""-5-""+""tXX\tKK5-1n""+""tKK\tAX6-5-""+""-4:""+""-3tXX\t6-""+""-5-0n""+""tKK\t5-""+""""+""tBZ\tBZ6--""+""-6tBZ\tAX\n"";assertThat(expected,""select l str sym timestamp"");assertThat(expected,""select l str sym timestamp"");}","['@', 'Test', 'public', 'void', 'testLong', '(', ')', 'throws', 'Exception', '{', 'final', 'String', 'expected', '=', '""8920866532787660373\\tBZ\\tBZ\\t2016-05-01T10:21:00.000Z\\t-6253307669002054137\\n""', '+', '""-6943924477733600060\\tXX\\tBZ\\t2016-05-01T10:22:00.000Z\\t-7387846268299105911\\n""', '+', '""-6856503215590263904\\tKK\\tXX\\t2016-05-01T10:23:00.000Z\\t7122109662042058469\\n""', '+', '""8416773233910814357\\tAX\\tXX\\t2016-05-01T10:24:00.000Z\\t7199909180655756830\\n""', '+', '""7199909180655756830\\tAX\\tXX\\t2016-05-01T10:25:00.000Z\\t6270672455202306717\\n""', '+', '""6270672455202306717\\tAX\\tBZ\\t2016-05-01T10:26:00.000Z\\t-7316123607359392486\\n""', '+', '""-6253307669002054137\\tBZ\\tXX\\t2016-05-01T10:27:00.000Z\\t7392877322819819290\\n""', '+', '""7392877322819819290\\tBZ\\tKK\\t2016-05-01T10:28:00.000Z\\t-3107239868490395663\\n""', '+', '""-7316123607359392486\\tAX\\tKK\\t2016-05-01T10:29:00.000Z\\t-6626590012581323602\\n""', '+', '""-3107239868490395663\\tBZ\\tAX\\t2016-05-01T10:30:00.000Z\\t8611582118025429627\\n""', '+', '""-7387846268299105911\\tXX\\tKK\\t2016-05-01T10:31:00.000Z\\t-8082754367165748693\\n""', '+', '""7122109662042058469\\tKK\\tAX\\t2016-05-01T10:32:00.000Z\\tNaN\\n""', '+', '""-6626590012581323602\\tAX\\tAX\\t2016-05-01T10:33:00.000Z\\t6574958665733670985\\n""', '+', '""8611582118025429627\\tBZ\\tBZ\\t2016-05-01T10:34:00.000Z\\t8152044974329490473\\n""', '+', '""-8082754367165748693\\tXX\\tAX\\t2016-05-01T10:35:00.000Z\\t3446015290144635451\\n""', '+', '""6574958665733670985\\tAX\\tAX\\t2016-05-01T10:36:00.000Z\\t8889492928577876455\\n""', '+', '""3446015290144635451\\tXX\\tKK\\t2016-05-01T10:37:00.000Z\\tNaN\\n""', '+', '""8889492928577876455\\tAX\\tAX\\t2016-05-01T10:38:00.000Z\\tNaN\\n""', '+', '""8152044974329490473\\tBZ\\tBZ\\t2016-05-01T10:39:00.000Z\\t-6071768268784020226\\n""', '+', '""-6071768268784020226\\tBZ\\tAX\\t2016-05-01T10:40:00.000Z\\tNaN\\n""', ';', 'assertThat', '(', 'expected', ',', '""select l, str, sym, timestamp , next(l) over (partition by str) from abc""', ')', ';', 'assertThat', '(', 'expected', ',', '""select l, str, sym, timestamp , next(l) over (partition by str) from \'*!*abc\'""', ')', ';', '}']","['@', 'Test', 'void', 'testLong', '(', ')', 'throws', 'Exception', '{', 'expected', '=', '""tBZ\\t6-\\n""', '+', '""""', '+', '""-5-""', '+', '""""', '+', '""-5-""', '+', '""tXX\\tKK5-1n""', '+', '""tKK\\tAX6-5-""', '+', '""-4:""', '+', '""-3tXX\\t6-""', '+', '""-5-0n""', '+', '""tKK\\t5-""', '+', '""""', '+', '""tBZ\\tBZ6--""', '+', '""-6tBZ\\tAX\\n""', ';', 'assertThat', '(', 'expected', ',', '""select l str sym timestamp""', ')', ';', 'assertThat', '(', 'expected', ',', '""select l str sym timestamp""', ')', ';', '}']",69,54,6,1845,272,14,85.90933915892954,23.809523809523807,,,,-1,-1,-1,-1,False
L428_testNosuffix_1.txt,code2seq,METHOD_NAME,token_wrong,0.8872,0.8583,14.6035,5.4941,"{'n_total': 174, 'n_valid': 18, 'n_correct': 12}",38.535805,"@Test public void testNosuffix() { Tester tester = new Tester(""göbek""); tester.assertHasParses(""göbek""); tester.assertUnParseable(""göbeğ""); }","void testNosuffix(){(""göbek"").assertHasParses(""göbek"");(""göbeğ"");}","['@', 'Test', 'public', 'void', 'testNosuffix', '(', ')', '{', 'Tester', 'tester', '=', 'new', 'Tester', '(', '""göbek""', ')', ';', 'tester', '.', 'assertHasParses', '(', '""göbek""', ')', ';', 'tester', '.', 'assertUnParseable', '(', '""göbeğ""', ')', ';', '}']","['void', 'testNosuffix', '(', ')', '{', '(', '""göbek""', ')', '.', 'assertHasParses', '(', '""göbek""', ')', ';', '(', '""göbeğ""', ')', ';', '}']",32,19,6,141,66,18,60.97560975609756,50.0,,,,-1,-1,-1,-1,False
L429_getEnvironment_1.txt,code2seq,METHOD_NAME,token_wrong,0.6394,0.3862,3.2397,3.3596,"{'n_total': 490, 'n_valid': 43, 'n_correct': 33}",100.607935,"private Map<String, Set<String>> getEnvironment(String ipAddr, String dns) { Map<String, Set<String>> environment = new HashMap<String, Set<String>>(); Set<String> dnsMask = new HashSet<String>(); dnsMask.add(dns); environment.put(""requestDnsName"", dnsMask); Set<String> ip = new HashSet<String>(); ip.add(ipAddr); environment.put(REQUEST_IP, ip); return environment; }","Map<Set<String>>getEnvironment(String ipAddr,String dns){Map<Set<String>>environment=HashMap();new HashSet<>();(dns);environment.put("""",dnsMask);put();environment;}","['private', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'getEnvironment', '(', 'String', 'ipAddr', ',', 'String', 'dns', ')', '{', 'Map', '<', 'String', ',', 'Set', '<', 'String', '>', '>', 'environment', '=', 'new', 'HashMap', '<', 'String', ',', 'Set', '<', 'String', '>', '>', '(', ')', ';', 'Set', '<', 'String', '>', 'dnsMask', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'dnsMask', '.', 'add', '(', 'dns', ')', ';', 'environment', '.', 'put', '(', '""requestDnsName""', ',', 'dnsMask', ')', ';', 'Set', '<', 'String', '>', 'ip', '=', 'new', 'HashSet', '<', 'String', '>', '(', ')', ';', 'ip', '.', 'add', '(', 'ipAddr', ')', ';', 'environment', '.', 'put', '(', 'REQUEST_IP', ',', 'ip', ')', ';', 'return', 'environment', ';', '}']","['Map', '<', 'Set', '<', 'String', '>', '>', 'getEnvironment', '(', 'String', 'ipAddr', ',', 'String', 'dns', ')', '{', 'Map', '<', 'Set', '<', 'String', '>', '>', 'environment', '=', 'HashMap', '(', ')', ';', 'new', 'HashSet', '<', '>', '(', ')', ';', '(', 'dns', ')', ';', 'environment', '.', 'put', '(', '""""', ',', 'dnsMask', ')', ';', 'put', '(', ')', ';', 'environment', ';', '}']",107,56,6,369,164,20,58.73925501432665,50.495049504950494,,,,-1,-1,-1,-1,False
L430_createSessionInfo_1.txt,code2seq,METHOD_NAME,token_wrong,0.7914,0.7264,2.6525,5.2469,"{'n_total': 295, 'n_valid': 43, 'n_correct': 32}",86.544458,"private byte[] createSessionInfo(int algorithm, byte[] keyBytes) { byte[] sessionInfo = new byte[keyBytes.length + 3]; sessionInfo[0] = (byte) algorithm; System.arraycopy(keyBytes, 0, sessionInfo, 1, keyBytes.length); addCheckSum(sessionInfo); return sessionInfo; }","byte[]createSessionInfo(int algorithm,byte[]keyBytes){sessionInfo[keyBytes];}","['private', 'byte', '[', ']', 'createSessionInfo', '(', 'int', 'algorithm', ',', 'byte', '[', ']', 'keyBytes', ')', '{', 'byte', '[', ']', 'sessionInfo', '=', 'new', 'byte', '[', 'keyBytes', '.', 'length', '+', '3', ']', ';', 'sessionInfo', '[', '0', ']', '=', '(', 'byte', ')', 'algorithm', ';', 'System', '.', 'arraycopy', '(', 'keyBytes', ',', '0', ',', 'sessionInfo', ',', '1', ',', 'keyBytes', '.', 'length', ')', ';', 'addCheckSum', '(', 'sessionInfo', ')', ';', 'return', 'sessionInfo', ';', '}']","['byte', '[', ']', 'createSessionInfo', '(', 'int', 'algorithm', ',', 'byte', '[', ']', 'keyBytes', ')', '{', 'sessionInfo', '[', 'keyBytes', ']', ';', '}']",66,20,6,265,77,23,77.68595041322314,76.66666666666667,,,,-1,-1,-1,-1,False
L431_getMetaInformation_1.txt,code2seq,METHOD_NAME,token_wrong,0.4968,0.6116,17.0645,16.8518,"{'n_total': 450, 'n_valid': 58, 'n_correct': 28}",135.727735,"public MetaInformation getMetaInformation(Iterable<T> resources, QueryAdapter queryAdapter) { Class<JsonApiMeta> annotationType = JsonApiMeta.class; assignMetaMethod(); checkIfNotNull(annotationType, metaMethod); Object[] methodParameters = parametersFactory.buildParameters(new Object[] { resources }, metaMethod, queryAdapter, annotationType); return invoke(metaMethod, methodParameters); }","MetaInformation getMetaInformation(Iterable<T>resources,QueryAdapter queryAdapter){Class<JsonApiMeta>annotationType=JsonApiMeta.class;assignMetaMethod();checkIfNotNull(annotationType,metaMethod);Object methodParameters=parametersFactory(new Object[]{resources},metaMethod);return invoke(methodParameters);}","['public', 'MetaInformation', 'getMetaInformation', '(', 'Iterable', '<', 'T', '>', 'resources', ',', 'QueryAdapter', 'queryAdapter', ')', '{', 'Class', '<', 'JsonApiMeta', '>', 'annotationType', '=', 'JsonApiMeta', '.', 'class', ';', 'assignMetaMethod', '(', ')', ';', 'checkIfNotNull', '(', 'annotationType', ',', 'metaMethod', ')', ';', 'Object', '[', ']', 'methodParameters', '=', 'parametersFactory', '.', 'buildParameters', '(', 'new', 'Object', '[', ']', '{', 'resources', '}', ',', 'metaMethod', ',', 'queryAdapter', ',', 'annotationType', ')', ';', 'return', 'invoke', '(', 'metaMethod', ',', 'methodParameters', ')', ';', '}']","['MetaInformation', 'getMetaInformation', '(', 'Iterable', '<', 'T', '>', 'resources', ',', 'QueryAdapter', 'queryAdapter', ')', '{', 'Class', '<', 'JsonApiMeta', '>', 'annotationType', '=', 'JsonApiMeta', '.', 'class', ';', 'assignMetaMethod', '(', ')', ';', 'checkIfNotNull', '(', 'annotationType', ',', 'metaMethod', ')', ';', 'Object', 'methodParameters', '=', 'parametersFactory', '(', 'new', 'Object', '[', ']', '{', 'resources', '}', ',', 'metaMethod', ')', ';', 'return', 'invoke', '(', 'methodParameters', ')', ';', '}']",68,57,6,392,306,24,23.369565217391305,17.741935483870968,,,,-1,-1,-1,-1,False
L432_registerInitialization_1.txt,code2seq,METHOD_NAME,token_wrong,0.8214,0.6128,12.4464,14.4198,"{'n_total': 171, 'n_valid': 25, 'n_correct': 19}",51.53211,private void registerInitialization() { registerOnRequest(CheckpointManager.RegisterStMgrRequest.newBuilder()); registerOnRequest(CheckpointManager.RegisterTMasterRequest.newBuilder()); registerOnRequest(CheckpointManager.SaveInstanceStateRequest.newBuilder()); registerOnRequest(CheckpointManager.GetInstanceStateRequest.newBuilder()); registerOnRequest(CheckpointManager.CleanStatefulCheckpointRequest.newBuilder()); },void registerInitialization(){(RegisterTMasterRequest);(CleanStatefulCheckpointRequest.newBuilder);},"['private', 'void', 'registerInitialization', '(', ')', '{', 'registerOnRequest', '(', 'CheckpointManager', '.', 'RegisterStMgrRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'RegisterTMasterRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'SaveInstanceStateRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'GetInstanceStateRequest', '.', 'newBuilder', '(', ')', ')', ';', 'registerOnRequest', '(', 'CheckpointManager', '.', 'CleanStatefulCheckpointRequest', '.', 'newBuilder', '(', ')', ')', ';', '}']","['void', 'registerInitialization', '(', ')', '{', '(', 'RegisterTMasterRequest', ')', ';', '(', 'CleanStatefulCheckpointRequest', '.', 'newBuilder', ')', ';', '}']",62,16,6,420,100,28,81.63265306122449,82.14285714285714,,,,-1,-1,-1,-1,False
L433_setKey_1.txt,code2seq,METHOD_NAME,token_wrong,0.71,0.4696,6.6914,6.0584,"{'n_total': 365, 'n_valid': 33, 'n_correct': 26}",73.216789,"public void setKey(byte[] key, int keyOff, int keyLen) { try { mac.init(new SecretKeySpec(key, keyOff, keyLen, algorithm)); } catch (InvalidKeyException e) { e.printStackTrace(); } }","void setKey(byte[]key,int keyOff){try{mac.init((keyLen));}catch(InvalidKeyException e){printStackTrace();}}","['public', 'void', 'setKey', '(', 'byte', '[', ']', 'key', ',', 'int', 'keyOff', ',', 'int', 'keyLen', ')', '{', 'try', '{', 'mac', '.', 'init', '(', 'new', 'SecretKeySpec', '(', 'key', ',', 'keyOff', ',', 'keyLen', ',', 'algorithm', ')', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']","['void', 'setKey', '(', 'byte', '[', ']', 'key', ',', 'int', 'keyOff', ')', '{', 'try', '{', 'mac', '.', 'init', '(', '(', 'keyLen', ')', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'printStackTrace', '(', ')', ';', '}', '}']",50,36,6,182,107,12,44.11764705882353,31.818181818181817,,,,-1,-1,-1,-1,False
L434_processClientKeyExchange_2.txt,code2seq,METHOD_NAME,token_wrong,0.2873,0.2592,33.3793,32.5818,"{'n_total': 442, 'n_valid': 56, 'n_correct': 31}",119.91728,"public void processClientKeyExchange(InputStream input) throws IOException { try { this.srpPeerCredentials = SRP6Util.validatePublicValue(srpGroup.getN(), TlsSRPUtils.readSRPParameter(input)); } catch (CryptoException e) { throw new TlsFatalAlert(AlertDescription.illegal_parameter, e); } context.getSecurityParameters().srpIdentity = Arrays.clone(identity); }",void processClientKeyExchange(InputStream input)throws IOException{try{this.srpPeerCredentials=SRP(readSRPParameter(input));}catch(CryptoException e){new TlsFatalAlert(AlertDescription);}context=(identity);},"['public', 'void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'try', '{', 'this', '.', 'srpPeerCredentials', '=', 'SRP6Util', '.', 'validatePublicValue', '(', 'srpGroup', '.', 'getN', '(', ')', ',', 'TlsSRPUtils', '.', 'readSRPParameter', '(', 'input', ')', ')', ';', '}', 'catch', '(', 'CryptoException', 'e', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'illegal_parameter', ',', 'e', ')', ';', '}', 'context', '.', 'getSecurityParameters', '(', ')', '.', 'srpIdentity', '=', 'Arrays', '.', 'clone', '(', 'identity', ')', ';', '}']","['void', 'processClientKeyExchange', '(', 'InputStream', 'input', ')', 'throws', 'IOException', '{', 'try', '{', 'this', '.', 'srpPeerCredentials', '=', 'SRP', '(', 'readSRPParameter', '(', 'input', ')', ')', ';', '}', 'catch', '(', 'CryptoException', 'e', ')', '{', 'new', 'TlsFatalAlert', '(', 'AlertDescription', ')', ';', '}', 'context', '=', '(', 'identity', ')', ';', '}']",69,44,6,360,207,30,46.36363636363636,39.682539682539684,,,,-1,-1,-1,-1,False
L435_getRpcReceiverManager_1.txt,code2seq,METHOD_NAME,token_wrong,0.887,0.6962,17.1649,7.057,"{'n_total': 194, 'n_valid': 24, 'n_correct': 21}",52.856574,RpcReceiverManager getRpcReceiverManager() throws InterruptedException { mLatch.await(); if (mFacadeManager == null) { mFacadeManager = mProxy.getRpcReceiverManagerFactory().getRpcReceiverManagers().get(0); } return mFacadeManager; },RpcReceiverManager getRpcReceiverManager(){await();if(mFacadeManager){getRpcReceiverManagerFactory();}mFacadeManager;},"['RpcReceiverManager', 'getRpcReceiverManager', '(', ')', 'throws', 'InterruptedException', '{', 'mLatch', '.', 'await', '(', ')', ';', 'if', '(', 'mFacadeManager', '==', 'null', ')', '{', 'mFacadeManager', '=', 'mProxy', '.', 'getRpcReceiverManagerFactory', '(', ')', '.', 'getRpcReceiverManagers', '(', ')', '.', 'get', '(', '0', ')', ';', '}', 'return', 'mFacadeManager', ';', '}']","['RpcReceiverManager', 'getRpcReceiverManager', '(', ')', '{', 'await', '(', ')', ';', 'if', '(', 'mFacadeManager', ')', '{', 'getRpcReceiverManagerFactory', '(', ')', ';', '}', 'mFacadeManager', ';', '}']",42,22,6,233,118,27,55.8252427184466,55.55555555555556,,,,-1,-1,-1,-1,False
L436_deleteOnQuery_1.txt,code2seq,METHOD_NAME,token_wrong,0.598,0.5495,13.3443,12.7815,"{'n_total': 495, 'n_valid': 63, 'n_correct': 39}",139.667707,"public void deleteOnQuery(final TokenFilter filter) throws CoreTokenException, IllegalArgumentException { filter.addReturnAttribute(CoreTokenField.TOKEN_ID); ResultHandler<Collection<PartialToken>, CoreTokenException> handler = handlerFactory.getDeleteOnQueryHandler(); try { attributeQueryWithHandler(filter, handler); } catch (CoreTokenException e) { throw new QueryFailedException(filter, e); } }","void deleteOnQuery(TokenFilter filter)throws CoreTokenException{(ID);ResultHandler<Collection<PartialToken>,CoreTokenException>handler=handlerFactory.getDeleteOnQueryHandler;try{attributeQueryWithHandler();}catch(CoreTokenException e){(e);}}","['public', 'void', 'deleteOnQuery', '(', 'final', 'TokenFilter', 'filter', ')', 'throws', 'CoreTokenException', ',', 'IllegalArgumentException', '{', 'filter', '.', 'addReturnAttribute', '(', 'CoreTokenField', '.', 'TOKEN_ID', ')', ';', 'ResultHandler', '<', 'Collection', '<', 'PartialToken', '>', ',', 'CoreTokenException', '>', 'handler', '=', 'handlerFactory', '.', 'getDeleteOnQueryHandler', '(', ')', ';', 'try', '{', 'attributeQueryWithHandler', '(', 'filter', ',', 'handler', ')', ';', '}', 'catch', '(', 'CoreTokenException', 'e', ')', '{', 'throw', 'new', 'QueryFailedException', '(', 'filter', ',', 'e', ')', ';', '}', '}']","['void', 'deleteOnQuery', '(', 'TokenFilter', 'filter', ')', 'throws', 'CoreTokenException', '{', '(', 'ID', ')', ';', 'ResultHandler', '<', 'Collection', '<', 'PartialToken', '>', ',', 'CoreTokenException', '>', 'handler', '=', 'handlerFactory', '.', 'getDeleteOnQueryHandler', ';', 'try', '{', 'attributeQueryWithHandler', '(', ')', ';', '}', 'catch', '(', 'CoreTokenException', 'e', ')', '{', '(', 'e', ')', ';', '}', '}']",66,47,6,399,241,19,41.578947368421055,31.666666666666664,,,,-1,-1,-1,-1,False
L437_testMule_1.txt,code2seq,METHOD_NAME,token_wrong,0.3794,0.5733,15.2269,17.1138,"{'n_total': 460, 'n_valid': 54, 'n_correct': 39}",113.543365,"@Test public void testMule() throws Exception { MuleContext muleContext = new DefaultMuleContextFactory().createMuleContext(""mule/mule-standlone-config.xml""); muleContext.start(); MuleClient muleClient = new DefaultLocalMuleClient(muleContext); Integer days = 5; MuleMessage message = muleClient.send(""vm://helloMule"", new DefaultMuleMessage(days, muleContext)); assertNotNull(message.getPayload()); Boolean result = (Boolean) message.getPayload(); assertTrue(result); }","void testMule()throws Exception{("""");muleContext.send("""",DefaultMuleMessage());assertNotNull(message());(Boolean);}","['@', 'Test', 'public', 'void', 'testMule', '(', ')', 'throws', 'Exception', '{', 'MuleContext', 'muleContext', '=', 'new', 'DefaultMuleContextFactory', '(', ')', '.', 'createMuleContext', '(', '""mule/mule-standlone-config.xml""', ')', ';', 'muleContext', '.', 'start', '(', ')', ';', 'MuleClient', 'muleClient', '=', 'new', 'DefaultLocalMuleClient', '(', 'muleContext', ')', ';', 'Integer', 'days', '=', '5', ';', 'MuleMessage', 'message', '=', 'muleClient', '.', 'send', '(', '""vm://helloMule""', ',', 'new', 'DefaultMuleMessage', '(', 'days', ',', 'muleContext', ')', ')', ';', 'assertNotNull', '(', 'message', '.', 'getPayload', '(', ')', ')', ';', 'Boolean', 'result', '=', '(', 'Boolean', ')', 'message', '.', 'getPayload', '(', ')', ';', 'assertTrue', '(', 'result', ')', ';', '}']","['void', 'testMule', '(', ')', 'throws', 'Exception', '{', '(', '""""', ')', ';', 'muleContext', '.', 'send', '(', '""""', ',', 'DefaultMuleMessage', '(', ')', ')', ';', 'assertNotNull', '(', 'message', '(', ')', ')', ';', '(', 'Boolean', ')', ';', '}']",88,34,6,470,115,14,77.85087719298247,65.85365853658537,,,,-1,-1,-1,-1,False
L438_createEmptyLoader_1.txt,code2seq,METHOD_NAME,token_wrong,0.5203,0.4755,20.7782,20.5514,"{'n_total': 491, 'n_valid': 64, 'n_correct': 34}",142.361579,"@Test public void createEmptyLoader() throws ClassNotFoundException { ClassLoader emptyClassLoader = ClassPathIndex.parentClassLoader(); assertThat(emptyClassLoader.loadClass(""java.util.ArrayList""), not(nullValue())); try { Class<?> found = emptyClassLoader.loadClass(""com.google.common.collect.Lists""); fail(""Found "" + found); } catch (ClassNotFoundException e) { } }","@Test void createEmptyLoader()throws ClassNotFoundException{ClassLoader emptyClassLoader=ClassPathIndexparentClassLoader();assertThat(emptyClassLoader.loadClass(""javautil.ArrayList""),not(nullValue()));try{Class<?>found=emptyClassLoader.loadClass(""com"");(""""+found);}catch(ClassNotFoundException e){}}","['@', 'Test', 'public', 'void', 'createEmptyLoader', '(', ')', 'throws', 'ClassNotFoundException', '{', 'ClassLoader', 'emptyClassLoader', '=', 'ClassPathIndex', '.', 'parentClassLoader', '(', ')', ';', 'assertThat', '(', 'emptyClassLoader', '.', 'loadClass', '(', '""java.util.ArrayList""', ')', ',', 'not', '(', 'nullValue', '(', ')', ')', ')', ';', 'try', '{', 'Class', '<', '?', '>', 'found', '=', 'emptyClassLoader', '.', 'loadClass', '(', '""com.google.common.collect.Lists""', ')', ';', 'fail', '(', '""Found ""', '+', 'found', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', '}', '}']","['@', 'Test', 'void', 'createEmptyLoader', '(', ')', 'throws', 'ClassNotFoundException', '{', 'ClassLoader', 'emptyClassLoader', '=', 'ClassPathIndexparentClassLoader', '(', ')', ';', 'assertThat', '(', 'emptyClassLoader', '.', 'loadClass', '(', '""javautil.ArrayList""', ')', ',', 'not', '(', 'nullValue', '(', ')', ')', ')', ';', 'try', '{', 'Class', '<', '?', '>', 'found', '=', 'emptyClassLoader', '.', 'loadClass', '(', '""com""', ')', ';', '(', '""""', '+', 'found', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'e', ')', '{', '}', '}']",67,63,6,368,299,23,20.0,6.557377049180328,,,,-1,-1,-1,-1,False
L439_access_1.txt,code2seq,METHOD_NAME,token_wrong,0.5351,0.2528,5.9785,4.1176,"{'n_total': 462, 'n_valid': 50, 'n_correct': 39}",107.482458,"public void access(Level level, String messageId, String[] data, Object session, Map props) throws LogException { if (isAccessLoggable(level)) { SSOToken authSSOToken = (SSOToken) AccessController.doPrivileged(AdminTokenAction.getInstance()); LogRecord lr = getLogRecord(messageId, data, session, props, authSSOToken); if (lr != null) { accessLogger.log(lr, authSSOToken); } } }","void access(String messageIdsession,Map props){if(isAccessLoggable(level)){authSSOToken=(SSOToken)(AdminTokenAction)lr(messageId);if(lr){log();}}}","['public', 'void', 'access', '(', 'Level', 'level', ',', 'String', 'messageId', ',', 'String', '[', ']', 'data', ',', 'Object', 'session', ',', 'Map', 'props', ')', 'throws', 'LogException', '{', 'if', '(', 'isAccessLoggable', '(', 'level', ')', ')', '{', 'SSOToken', 'authSSOToken', '=', '(', 'SSOToken', ')', 'AccessController', '.', 'doPrivileged', '(', 'AdminTokenAction', '.', 'getInstance', '(', ')', ')', ';', 'LogRecord', 'lr', '=', 'getLogRecord', '(', 'messageId', ',', 'data', ',', 'session', ',', 'props', ',', 'authSSOToken', ')', ';', 'if', '(', 'lr', '!=', 'null', ')', '{', 'accessLogger', '.', 'log', '(', 'lr', ',', 'authSSOToken', ')', ';', '}', '}', '}']","['void', 'access', '(', 'String', 'messageIdsession', ',', 'Map', 'props', ')', '{', 'if', '(', 'isAccessLoggable', '(', 'level', ')', ')', '{', 'authSSOToken', '=', '(', 'SSOToken', ')', '(', 'AdminTokenAction', ')', 'lr', '(', 'messageId', ')', ';', 'if', '(', 'lr', ')', '{', 'log', '(', ')', ';', '}', '}', '}']",84,43,6,378,146,12,63.387978142076506,52.56410256410257,,,,-1,-1,-1,-1,False
L440_createRawValidator_9.txt,code2seq,METHOD_NAME,token_wrong,0.6704,0.3992,25.8315,22.4144,"{'n_total': 1081, 'n_valid': 283, 'n_correct': 135}",557.514359,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""q\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bpps"" + ""q\u0000~\u0000\rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0011"" + ""p\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"" + ""\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~"" + ""\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"" + ""\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Expres"" + ""sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001asr\u0000 com"" + "".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"" + ""mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"" + ""$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv"" + "".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"" + ""/String;L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001dt\u00005com.sun.identity.wsfede"" + ""ration.jaxb.wsu.CreatedElementt\u0000+http://java.sun.com/jaxb/xj"" + ""c/dummy-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014"" + ""q\u0000~\u0000\u0011psq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00009com.sun.identity.w"" + ""sfederation.jaxb.wsu.AttributedDateTimeq\u0000~\u0000%sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000"" + ""~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"" + ""elaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/ms"" + ""v/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\""com.sun.msv.datatype.xsd.Qname"" + ""Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"" + ""\fnamespaceUriq\u0000~\u0000\""L\u0000\btypeNameq\u0000~\u0000\""L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"" + ""sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"" + ""001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"" + ""Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"" + ""iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"" + ""sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv"" + "".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""L\u0000\fnamespaceURIq"" + ""\u0000~\u0000\""xpq\u0000~\u0000;q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSc"" + ""hema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0007Createdt\u0000Rhttp://docs.oasis-open."" + ""org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsdq"" + ""\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000"" + ""~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00005com.sun.identity.wsfederati"" + ""on.jaxb.wsu.ExpiresElementq\u0000~\u0000%sq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp"" + ""\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000-q"" + ""\u0000~\u0000%sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0007Expiresq\u0000~\u0000H"" + ""q\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0014q\u0000~\u0000\u0011psq\u0000~\u0000\u0000q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0017ppq\u0000~\u0000\u001asr\u0000\'com.s"" + ""un.msv.grammar.DifferenceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003n"" + ""c2q\u0000~\u0000\u0001xq\u0000~\u0000\u001dq\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.ChoiceNameClass\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003nc1q\u0000~\u0000\u0001L\u0000\u0003nc2q\u0000~\u0000\u0001xq\u0000~\u0000\u001dsr\u0000&com.sun.msv.grammar."" + ""NamespaceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIq\u0000~\u0000\""xq\u0000~\u0000\u001dt\u0000\u0000sq"" + ""\u0000~\u0000dq\u0000~\u0000Hsq\u0000~\u0000dq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u00000ppsr\u0000\u001fcom"" + "".sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"" + ""ype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\""com.sun.msv.datatype.xsd.To"" + ""kenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00005q\u0000~\u0000:t\u0000\u0002IDq\u0000~\u0000>\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~"" + ""\u0000qq\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0002Idq\u0000~\u0000Hq\u0000~\u0000 sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011pq\u0000~\u00003q\u0000~\u0000Cq\u0000"" + ""~\u0000 sq\u0000~\u0000!t\u0000\tTimestampq\u0000~\u0000Hsr\u0000\""com.sun.msv.grammar.Expression"" + ""Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"" + ""Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"" + ""sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"" + ""un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0018\u0001pq\u0000~\u0000\'q\u0000~\u0000Rq\u0000~\u0000.q\u0000~\u0000Xq\u0000"" + ""~\u0000iq\u0000~\u0000uq\u0000~\u0000\tq\u0000~\u0000\u0013q\u0000~\u0000)q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000\\q\u0000~\u0000]q\u0000~\u0000\u0016q\u0000~\u0000*q\u0000~\u0000Mq\u0000"" + ""~\u0000Uq\u0000~\u0000\u000bq\u0000~\u0000\nq\u0000~\u0000\fq\u0000~\u0000\u000eq\u0000~\u0000Iq\u0000~\u0000\u000fq\u0000~\u0000Jx"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msvverifier createRawValidator(){if(schemaFragment=null){schemaFragment=SchemaDeserializer.deserialize((""""+""aignoreUndeclaredAttributesL""+""\3""+""datat""+""ype""+""u""));}new commsv.verifier.regexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""q\x00~\x00\x07ppsr\x00\x1dcom.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bpps""', '+', '""q\x00~\x00\\rsr\x00\x11java.lang.BooleanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psq\x00~\x00\x00q\x00~\x00\x11""', '+', '""p\x00sq\x00~\x00\\rppsr\x00 com.sun.msv.grammar.OneOrMoreExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00""', '+', '""\x1ccom.sun.msv.grammar.UnaryExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\x03expq\x00~\x00\x03xq\x00~\x00\x04q\x00~""', '+', '""\x00\x11psr\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00""', '+', '""\x03L\x00\\tnameClassq\x00~\x00\x01xq\x00~\x00\x04q\x00~\x00\x11psr\x002com.sun.msv.grammar.Expres""', '+', '""sion$AnyStringExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x10\x01q\x00~\x00\x1asr\x00 com""', '+', '"".sun.msv.grammar.AnyNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.gram""', '+', '""mar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expression""', '+', '""$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x1bq\x00~\x00 sr\x00#com.sun.msv""', '+', '"".grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNamet\x00\x12Ljava/lang""', '+', '""/String;L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1dt\x005com.sun.identity.wsfede""', '+', '""ration.jaxb.wsu.CreatedElementt\x00+http://java.sun.com/jaxb/xj""', '+', '""c/dummy-elementssq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp\x00sq\x00~\x00\\rppsq\x00~\x00\x14""', '+', '""q\x00~\x00\x11psq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!t\x009com.sun.identity.w""', '+', '""sfederation.jaxb.wsu.AttributedDateTimeq\x00~\x00%sq\x00~\x00\\rppsq\x00~\x00\x17q\x00""', '+', '""~\x00\x11psr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/r""', '+', '""elaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04namet\x00\x1dLcom/sun/ms""', '+', '""v/util/StringPair;xq\x00~\x00\x04ppsr\x00\\""com.sun.msv.datatype.xsd.Qname""', '+', '""Type\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00""', '+', '""\\fnamespaceUriq\x00~\x00\\""L\x00\\btypeNameq\x00~\x00\\""L\x00\\nwhiteSpacet\x00.Lcom/sun/m""', '+', '""sv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 http://www.w3.org/2""', '+', '""001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatype.xsd.WhiteSpace""', '+', '""Processor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.Wh""', '+', '""iteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.msv.grammar.Expres""', '+', '""sion$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x11psr\x00\x1bcom.sun.msv""', '+', '"".util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\\""L\x00\\fnamespaceURIq""', '+', '""\x00~\x00\\""xpq\x00~\x00;q\x00~\x00:sq\x00~\x00!t\x00\x04typet\x00)http://www.w3.org/2001/XMLSc""', '+', '""hema-instanceq\x00~\x00 sq\x00~\x00!t\x00\x07Createdt\x00Rhttp://docs.oasis-open.""', '+', '""org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsdq""', '+', '""\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\\rq\x00~\x00\x11psq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00""', '+', '""~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!t\x005com.sun.identity.wsfederati""', '+', '""on.jaxb.wsu.ExpiresElementq\x00~\x00%sq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x07ppsq\x00~\x00\x00pp""', '+', '""\x00sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x00\x1aq\x00~\x00\x1eq\x00~\x00 sq\x00~\x00!q\x00~\x00-q""', '+', '""\x00~\x00%sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x003q\x00~\x00Cq\x00~\x00 sq\x00~\x00!t\x00\x07Expiresq\x00~\x00H""', '+', '""q\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x14q\x00~\x00\x11psq\x00~\x00\x00q\x00~\x00\x11p\x00sq\x00~\x00\x17ppq\x00~\x00\x1asr\x00\\\'com.s""', '+', '""un.msv.grammar.DifferenceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01L\x00\x03n""', '+', '""c2q\x00~\x00\x01xq\x00~\x00\x1dq\x00~\x00\x1esr\x00#com.sun.msv.grammar.ChoiceNameClass\x00\x00\x00""', '+', '""\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03nc1q\x00~\x00\x01L\x00\x03nc2q\x00~\x00\x01xq\x00~\x00\x1dsr\x00&com.sun.msv.grammar.""', '+', '""NamespaceNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\fnamespaceURIq\x00~\x00\\""xq\x00~\x00\x1dt\x00\x00sq""', '+', '""\x00~\x00dq\x00~\x00Hsq\x00~\x00dq\x00~\x00%q\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11psq\x00~\x000ppsr\x00\x1fcom""', '+', '"".sun.msv.datatype.xsd.IDType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datat""', '+', '""ype.xsd.NcnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\""com.sun.msv.datatype.xsd.To""', '+', '""kenType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00#com.sun.msv.datatype.xsd.StringType\x00\x00\x00""', '+', '""\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxq\x00~\x005q\x00~\x00:t\x00\x02IDq\x00~\x00>\x00q\x00~\x00@sq\x00~\x00Aq\x00~""', '+', '""\x00qq\x00~\x00:sq\x00~\x00!t\x00\x02Idq\x00~\x00Hq\x00~\x00 sq\x00~\x00\\rppsq\x00~\x00\x17q\x00~\x00\x11pq\x00~\x003q\x00~\x00Cq\x00""', '+', '""~\x00 sq\x00~\x00!t\x00\\tTimestampq\x00~\x00Hsr\x00\\""com.sun.msv.grammar.Expression""', '+', '""Pool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/Expression""', '+', '""Pool$ClosedHash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$Clo""', '+', '""sedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom/s""', '+', '""un/msv/grammar/ExpressionPool;xp\x00\x00\x00\x18\x01pq\x00~\x00\\\'q\x00~\x00Rq\x00~\x00.q\x00~\x00Xq\x00""', '+', '""~\x00iq\x00~\x00uq\x00~\x00\\tq\x00~\x00\x13q\x00~\x00)q\x00~\x00Lq\x00~\x00Tq\x00~\x00\\\\q\x00~\x00]q\x00~\x00\x16q\x00~\x00*q\x00~\x00Mq\x00""', '+', '""~\x00Uq\x00~\x00\x0bq\x00~\x00\\nq\x00~\x00\\fq\x00~\x00\x0eq\x00~\x00Iq\x00~\x00\x0fq\x00~\x00Jx""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msvverifier', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '=', 'null', ')', '{', 'schemaFragment', '=', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""""', '+', '""aignoreUndeclaredAttributesL""', '+', '""\\3""', '+', '""datat""', '+', '""ype""', '+', '""u""', ')', ')', ';', '}', 'new', 'commsv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",185,47,6,8928,230,24,97.68643306379155,77.09497206703911,,,,-1,-1,-1,-1,False
L441_onDatasourceConnectionFail_1.txt,code2seq,METHOD_NAME,token_wrong,0.695,0.6638,18.2222,26.672,"{'n_total': 348, 'n_valid': 38, 'n_correct': 28}",85.487539,"@EventListener @Async public void onDatasourceConnectionFail(DatabaseConnectionFailEvent databaseConnectionFailEvent) { String subject = ""Datasource connection fails""; String message = (String) databaseConnectionFailEvent.getSource(); logger.error(""A platform error has occured : "" + message); sendEmailToAdmin(subject, message); }","@EventListener void onDatasourceConnectionFail(DatabaseConnectionFailEvent databaseConnectionFailEvent){subject="""";String=(String)(""""+message);sendEmailToAdmin();}","['@', 'EventListener', '@', 'Async', 'public', 'void', 'onDatasourceConnectionFail', '(', 'DatabaseConnectionFailEvent', 'databaseConnectionFailEvent', ')', '{', 'String', 'subject', '=', '""Datasource connection fails""', ';', 'String', 'message', '=', '(', 'String', ')', 'databaseConnectionFailEvent', '.', 'getSource', '(', ')', ';', 'logger', '.', 'error', '(', '""A platform error has occured : ""', '+', 'message', ')', ';', 'sendEmailToAdmin', '(', 'subject', ',', 'message', ')', ';', '}']","['@', 'EventListener', 'void', 'onDatasourceConnectionFail', '(', 'DatabaseConnectionFailEvent', 'databaseConnectionFailEvent', ')', '{', 'subject', '=', '""""', ';', 'String', '=', '(', 'String', ')', '(', '""""', '+', 'message', ')', ';', 'sendEmailToAdmin', '(', ')', ';', '}']",46,29,6,331,163,32,56.187290969899664,42.5,,,,-1,-1,-1,-1,False
L442_expectStorageInitialized_1.txt,code2seq,METHOD_NAME,token_wrong,0.8623,0.7952,35.9789,36.9296,"{'n_total': 273, 'n_valid': 26, 'n_correct': 18}",61.567864,private void expectStorageInitialized() throws Exception { expect(mockLog.open()).andReturn(mockStream); List<Entry> empty = ImmutableList.of(); expect(mockStream.readAll()).andReturn(empty.iterator()); },void expectStorageInitialized(){(open()).andReturn();List<Entry>empty=(mockStream.readAll).andReturn(iterator());},"['private', 'void', 'expectStorageInitialized', '(', ')', 'throws', 'Exception', '{', 'expect', '(', 'mockLog', '.', 'open', '(', ')', ')', '.', 'andReturn', '(', 'mockStream', ')', ';', 'List', '<', 'Entry', '>', 'empty', '=', 'ImmutableList', '.', 'of', '(', ')', ';', 'expect', '(', 'mockStream', '.', 'readAll', '(', ')', ')', '.', 'andReturn', '(', 'empty', '.', 'iterator', '(', ')', ')', ';', '}']","['void', 'expectStorageInitialized', '(', ')', '{', '(', 'open', '(', ')', ')', '.', 'andReturn', '(', ')', ';', 'List', '<', 'Entry', '>', 'empty', '=', '(', 'mockStream', '.', 'readAll', ')', '.', 'andReturn', '(', 'iterator', '(', ')', ')', ';', '}']",53,35,6,204,114,30,51.724137931034484,38.297872340425535,,,,-1,-1,-1,-1,False
L443_pruneNearZeroWeights_1.txt,code2seq,METHOD_NAME,token_wrong,0.3563,0.6862,29.1795,29.73,"{'n_total': 475, 'n_valid': 54, 'n_correct': 38}",117.332257,"void pruneNearZeroWeights() { FloatValueMap<String> pruned = new FloatValueMap<>(); for (String key : data) { float w = data.get(key); if (Math.abs(w) > epsilon) { pruned.set(key, w); } } this.data = pruned; }",void pruneNearZeroWeights(){pruned=new FloatValueMap<>();for(String key:data){(key);if(Math){pruned();}}},"['void', 'pruneNearZeroWeights', '(', ')', '{', 'FloatValueMap', '<', 'String', '>', 'pruned', '=', 'new', 'FloatValueMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'data', ')', '{', 'float', 'w', '=', 'data', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'Math', '.', 'abs', '(', 'w', ')', '>', 'epsilon', ')', '{', 'pruned', '.', 'set', '(', 'key', ',', 'w', ')', ';', '}', '}', 'this', '.', 'data', '=', 'pruned', ';', '}']","['void', 'pruneNearZeroWeights', '(', ')', '{', 'pruned', '=', 'new', 'FloatValueMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'data', ')', '{', '(', 'key', ')', ';', 'if', '(', 'Math', ')', '{', 'pruned', '(', ')', ';', '}', '}', '}']",66,38,6,209,105,26,56.830601092896174,46.666666666666664,,,,-1,-1,-1,-1,False
L444_delete_1.txt,code2seq,METHOD_NAME,token_wrong,0.7694,0.4613,0.9344,2.2619,"{'n_total': 253, 'n_valid': 29, 'n_correct': 24}",62.033961,"@Override @Transactional public void delete(ContentReviewItem item) { Objects.requireNonNull(item, ""item cannot be null""); Objects.requireNonNull(item.getId(), ""Id cannot be null""); Objects.requireNonNull(item.getProviderId(), ""providerId cannot be null""); itemDao.delete(item); }","void delete(ContentReviewItem item){("""");requireNonNull(getId(),"""");delete;}","['@', 'Override', '@', 'Transactional', 'public', 'void', 'delete', '(', 'ContentReviewItem', 'item', ')', '{', 'Objects', '.', 'requireNonNull', '(', 'item', ',', '""item cannot be null""', ')', ';', 'Objects', '.', 'requireNonNull', '(', 'item', '.', 'getId', '(', ')', ',', '""Id cannot be null""', ')', ';', 'Objects', '.', 'requireNonNull', '(', 'item', '.', 'getProviderId', '(', ')', ',', '""providerId cannot be null""', ')', ';', 'itemDao', '.', 'delete', '(', 'item', ')', ';', '}']","['void', 'delete', '(', 'ContentReviewItem', 'item', ')', '{', '(', '""""', ')', ';', 'requireNonNull', '(', 'getId', '(', ')', ',', '""""', ')', ';', 'delete', ';', '}']",55,23,6,280,76,12,76.11940298507463,65.3061224489796,,,,-1,-1,-1,-1,False
L445_isDateNormalized_1.txt,code2seq,METHOD_NAME,token_wrong,0.8736,0.9039,9.3778,12.0969,"{'n_total': 146, 'n_valid': 20, 'n_correct': 17}",41.422936,public static boolean isDateNormalized(long millisSinceEpoch) { boolean isDateNormalized = false; if (millisSinceEpoch % DAY_IN_MILLIS == 0) { isDateNormalized = true; } return isDateNormalized; },boolean isDateNormalized(long millisSinceEpoch){if(0){}isDateNormalized;},"['public', 'static', 'boolean', 'isDateNormalized', '(', 'long', 'millisSinceEpoch', ')', '{', 'boolean', 'isDateNormalized', '=', 'false', ';', 'if', '(', 'millisSinceEpoch', '%', 'DAY_IN_MILLIS', '==', '0', ')', '{', 'isDateNormalized', '=', 'true', ';', '}', 'return', 'isDateNormalized', ';', '}']","['boolean', 'isDateNormalized', '(', 'long', 'millisSinceEpoch', ')', '{', 'if', '(', '0', ')', '{', '}', 'isDateNormalized', ';', '}']",32,16,6,196,73,22,70.6896551724138,61.53846153846154,,,,-1,-1,-1,-1,False
L446_induceFeaturesFor_1.txt,code2seq,METHOD_NAME,token_wrong,0.3921,0.3692,13.2966,13.5536,"{'n_total': 459, 'n_valid': 73, 'n_correct': 31}",152.794574,"public void induceFeaturesFor(InstanceList instances) { instances.setFeatureSelection(this.globalFeatureSelection); for (int i = 0; i < featureInducers.size(); i++) { FeatureInducer klfi = featureInducers.get(i); klfi.induceFeaturesFor(instances, false, false); } }",void induceFeaturesFor(InstanceList instances){(globalFeatureSelection);for(;i();i++){FeatureInducer=featureInducers.get();klfi.induceFeaturesFor();}},"['public', 'void', 'induceFeaturesFor', '(', 'InstanceList', 'instances', ')', '{', 'instances', '.', 'setFeatureSelection', '(', 'this', '.', 'globalFeatureSelection', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'featureInducers', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'FeatureInducer', 'klfi', '=', 'featureInducers', '.', 'get', '(', 'i', ')', ';', 'klfi', '.', 'induceFeaturesFor', '(', 'instances', ',', 'false', ',', 'false', ')', ';', '}', '}']","['void', 'induceFeaturesFor', '(', 'InstanceList', 'instances', ')', '{', '(', 'globalFeatureSelection', ')', ';', 'for', '(', ';', 'i', '(', ')', ';', 'i', '++', ')', '{', 'FeatureInducer', '=', 'featureInducers', '.', 'get', '(', ')', ';', 'klfi', '.', 'induceFeaturesFor', '(', ')', ';', '}', '}']",59,38,6,265,150,23,47.5206611570248,39.62264150943396,,,,-1,-1,-1,-1,False
L447_performAction_2.txt,code2seq,METHOD_NAME,token_wrong,0.5391,0.767,15.1802,15.8667,"{'n_total': 352, 'n_valid': 38, 'n_correct': 36}",83.093798,@Override public void performAction() { FileTable activeTable = mainFrame.getActiveTable(); FileTable leftTable = mainFrame.getLeftPanel().getFileTable(); FileTable rightTable = mainFrame.getRightPanel().getFileTable(); if (activeTable == leftTable) rightTable.requestFocus(); else if (activeTable == rightTable) leftTable.requestFocus(); },@Override void performAction(){leftTable().getFileTable();if(activeTable)requestFocus();if(activeTable)requestFocus();},"['@', 'Override', 'public', 'void', 'performAction', '(', ')', '{', 'FileTable', 'activeTable', '=', 'mainFrame', '.', 'getActiveTable', '(', ')', ';', 'FileTable', 'leftTable', '=', 'mainFrame', '.', 'getLeftPanel', '(', ')', '.', 'getFileTable', '(', ')', ';', 'FileTable', 'rightTable', '=', 'mainFrame', '.', 'getRightPanel', '(', ')', '.', 'getFileTable', '(', ')', ';', 'if', '(', 'activeTable', '==', 'leftTable', ')', 'rightTable', '.', 'requestFocus', '(', ')', ';', 'else', 'if', '(', 'activeTable', '==', 'rightTable', ')', 'leftTable', '.', 'requestFocus', '(', ')', ';', '}']","['@', 'Override', 'void', 'performAction', '(', ')', '{', 'leftTable', '(', ')', '.', 'getFileTable', '(', ')', ';', 'if', '(', 'activeTable', ')', 'requestFocus', '(', ')', ';', 'if', '(', 'activeTable', ')', 'requestFocus', '(', ')', ';', '}']",69,32,6,340,119,19,68.84735202492212,58.730158730158735,,,,-1,-1,-1,-1,False
L448_getFirstLabel_1.txt,code2seq,METHOD_NAME,token_wrong,0.8342,0.5778,19.5107,12.5188,"{'n_total': 323, 'n_valid': 40, 'n_correct': 27}",89.886676,"public static String getFirstLabel(TextAnnotation s, String label) { List<Constituent> list = s.getView(ViewNames.SHALLOW_PARSE).getConstituents(); String nounPhrase = """"; for (Constituent c : list) { if (c.getLabel().contains(label)) { nounPhrase = c.getSurfaceForm(); } } return nounPhrase; }","String getFirstLabel(TextAnnotation s,String label){List list;for(Constituent c:list){if((label)){nounPhrasegetSurfaceForm;}}nounPhrase;}","['public', 'static', 'String', 'getFirstLabel', '(', 'TextAnnotation', 's', ',', 'String', 'label', ')', '{', 'List', '<', 'Constituent', '>', 'list', '=', 's', '.', 'getView', '(', 'ViewNames', '.', 'SHALLOW_PARSE', ')', '.', 'getConstituents', '(', ')', ';', 'String', 'nounPhrase', '=', '""""', ';', 'for', '(', 'Constituent', 'c', ':', 'list', ')', '{', 'if', '(', 'c', '.', 'getLabel', '(', ')', '.', 'contains', '(', 'label', ')', ')', '{', 'nounPhrase', '=', 'c', '.', 'getSurfaceForm', '(', ')', ';', '}', '}', 'return', 'nounPhrase', ';', '}']","['String', 'getFirstLabel', '(', 'TextAnnotation', 's', ',', 'String', 'label', ')', '{', 'List', 'list', ';', 'for', '(', 'Constituent', 'c', ':', 'list', ')', '{', 'if', '(', '(', 'label', ')', ')', '{', 'nounPhrasegetSurfaceForm', ';', '}', '}', 'nounPhrase', ';', '}']",72,35,6,294,137,19,57.09090909090909,56.060606060606055,,,,-1,-1,-1,-1,False
L449_checkKeyUsage_2.txt,code2seq,METHOD_NAME,token_wrong,0.484,0.306,6.1985,9.6402,"{'n_total': 492, 'n_valid': 66, 'n_correct': 39}",136.36243,"public void checkKeyUsage(int id, byte[] bytes) throws IOException { X509CertificateHolder certHld = new X509CertificateHolder(bytes); if ((DERBitString.getInstance(certHld.getExtension(Extension.keyUsage).getParsedValue()).getBytes()[0] & 0x01) != 0) { fail(""error generating cert - key usage wrong.""); } }","void checkKeyUsage(int id,byte bytes){XCertificateHolder();if((((Extension.keyUsage).getParsedValue())&0)){fail(""generating"");}}","['public', 'void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', '[', ']', 'bytes', ')', 'throws', 'IOException', '{', 'X509CertificateHolder', 'certHld', '=', 'new', 'X509CertificateHolder', '(', 'bytes', ')', ';', 'if', '(', '(', 'DERBitString', '.', 'getInstance', '(', 'certHld', '.', 'getExtension', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '.', 'getBytes', '(', ')', '[', '0', ']', '&', '0x01', ')', '!=', '0', ')', '{', 'fail', '(', '""error generating cert - key usage wrong.""', ')', ';', '}', '}']","['void', 'checkKeyUsage', '(', 'int', 'id', ',', 'byte', 'bytes', ')', '{', 'XCertificateHolder', '(', ')', ';', 'if', '(', '(', '(', '(', 'Extension', '.', 'keyUsage', ')', '.', 'getParsedValue', '(', ')', ')', '&', '0', ')', ')', '{', 'fail', '(', '""generating""', ')', ';', '}', '}']",65,40,6,307,128,19,62.15277777777778,42.3728813559322,,,,-1,-1,-1,-1,False
L450_getSubmitOverrides_1.txt,code2seq,METHOD_NAME,token_wrong,0.5167,0.4545,11.2823,17.9252,"{'n_total': 482, 'n_valid': 51, 'n_correct': 39}",110.445612,"private static Map<String, String> getSubmitOverrides(FormDataMultiPart form) { final Map<String, String> overrides = new HashMap<>(); for (String key : form.getFields().keySet()) { if (!SUBMIT_TOPOLOGY_PARAMS.contains(key)) { overrides.put(key, Forms.getString(form, key)); } } return overrides; }",Map<String>getSubmitOverrides(FormDataMultiPart form){Map<String>overrides=new HashMap();for(String key:form){if((key)){overrides(getString());}}},"['private', 'static', 'Map', '<', 'String', ',', 'String', '>', 'getSubmitOverrides', '(', 'FormDataMultiPart', 'form', ')', '{', 'final', 'Map', '<', 'String', ',', 'String', '>', 'overrides', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'form', '.', 'getFields', '(', ')', '.', 'keySet', '(', ')', ')', '{', 'if', '(', '!', 'SUBMIT_TOPOLOGY_PARAMS', '.', 'contains', '(', 'key', ')', ')', '{', 'overrides', '.', 'put', '(', 'key', ',', 'Forms', '.', 'getString', '(', 'form', ',', 'key', ')', ')', ';', '}', '}', 'return', 'overrides', ';', '}']","['Map', '<', 'String', '>', 'getSubmitOverrides', '(', 'FormDataMultiPart', 'form', ')', '{', 'Map', '<', 'String', '>', 'overrides', '=', 'new', 'HashMap', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'form', ')', '{', 'if', '(', '(', 'key', ')', ')', '{', 'overrides', '(', 'getString', '(', ')', ')', ';', '}', '}', '}']",79,46,6,298,146,24,55.47445255474452,45.20547945205479,,,,-1,-1,-1,-1,False
L451_resetIsValidDate_1.txt,code2seq,METHOD_NAME,token_wrong,0.5987,0.5769,16.0719,20.4694,"{'n_total': 143, 'n_valid': 31, 'n_correct': 14}",65.302345,public void resetIsValidDate() { this.isValidStartDate = true; this.isValidDueDate = true; this.isValidRetractDate = true; this.isValidFeedbackDate = true; },void resetIsValidDate(){this.isValidStartDate=true;thisisValidDueDate;this.isValidFeedbackDate=true;},"['public', 'void', 'resetIsValidDate', '(', ')', '{', 'this', '.', 'isValidStartDate', '=', 'true', ';', 'this', '.', 'isValidDueDate', '=', 'true', ';', 'this', '.', 'isValidRetractDate', '=', 'true', ';', 'this', '.', 'isValidFeedbackDate', '=', 'true', ';', '}']","['void', 'resetIsValidDate', '(', ')', '{', 'this', '.', 'isValidStartDate', '=', 'true', ';', 'thisisValidDueDate', ';', 'this', '.', 'isValidFeedbackDate', '=', 'true', ';', '}']",31,20,6,157,101,22,41.48148148148148,44.0,,,,-1,-1,-1,-1,False
L452_setup_3.txt,code2seq,METHOD_NAME,token_wrong,0.7846,0.6685,16.4467,12.4796,"{'n_total': 319, 'n_valid': 31, 'n_correct': 23}",63.531494,"@SuppressWarnings(""unchecked"") @BeforeMethod public void setup() throws Exception { initMocks(this); filter = new RealmContextFilter(coreWrapper, realmValidator); given(coreWrapper.getOrganization(any(SSOToken.class), eq(ENDPOINT_PATH_ELEMENT))).willThrow(IdRepoException.class); }","@SuppressWarnings("""")@BeforeMethod void setup()throws Exception{(getOrganization((SSOToken)eq())).willThrow();}","['@', 'SuppressWarnings', '(', '""unchecked""', ')', '@', 'BeforeMethod', 'public', 'void', 'setup', '(', ')', 'throws', 'Exception', '{', 'initMocks', '(', 'this', ')', ';', 'filter', '=', 'new', 'RealmContextFilter', '(', 'coreWrapper', ',', 'realmValidator', ')', ';', 'given', '(', 'coreWrapper', '.', 'getOrganization', '(', 'any', '(', 'SSOToken', '.', 'class', ')', ',', 'eq', '(', 'ENDPOINT_PATH_ELEMENT', ')', ')', ')', '.', 'willThrow', '(', 'IdRepoException', '.', 'class', ')', ';', '}']","['@', 'SuppressWarnings', '(', '""""', ')', '@', 'BeforeMethod', 'void', 'setup', '(', ')', 'throws', 'Exception', '{', '(', 'getOrganization', '(', '(', 'SSOToken', ')', 'eq', '(', ')', ')', ')', '.', 'willThrow', '(', ')', ';', '}']",58,31,6,281,111,11,62.96296296296296,51.92307692307693,,,,-1,-1,-1,-1,False
L453_staticGen_1.txt,code2seq,METHOD_NAME,token_wrong,0.5365,0.4406,23.4569,25.8301,"{'n_total': 671, 'n_valid': 153, 'n_correct': 20}",311.213897,"private static void staticGen(Class clazz, String cacheKey, OutputStreamWriter writer, CodegenResult source) throws IOException { String className = cacheKey.substring(cacheKey.lastIndexOf('.') + 1); String packageName = cacheKey.substring(0, cacheKey.lastIndexOf('.')); writer.write(""package "" + packageName + "";\n""); writer.write(""public class "" + className + "" implements com.jsoniter.spi.Encoder {\n""); writer.write(source.generateWrapperCode(clazz)); writer.write(source.toString()); writer.write(""}\n""); }","privatevoid staticGen(Class clazz,String writer, CodegenResult source) throws IOException {String className = cacheKey.substring(('.')+1);String = cacheKey.substring( cacheKey('.')); writer.write(""package {""); writer.write(source.generateWrapperCode(clazz)); writer(source.toString()); writer.write(""n""); }","['private', 'static', 'void', 'staticGen', '(', 'Class', 'clazz', ',', 'String', 'cacheKey', ',', 'OutputStreamWriter', 'writer', ',', 'CodegenResult', 'source', ')', 'throws', 'IOException', '{', 'String', 'className', '=', 'cacheKey', '.', 'substring', '(', 'cacheKey', '.', 'lastIndexOf', '(', ""'.'"", ')', '+', '1', ')', ';', 'String', 'packageName', '=', 'cacheKey', '.', 'substring', '(', '0', ',', 'cacheKey', '.', 'lastIndexOf', '(', ""'.'"", ')', ')', ';', 'writer', '.', 'write', '(', '""package ""', '+', 'packageName', '+', '"";\\n""', ')', ';', 'writer', '.', 'write', '(', '""public class ""', '+', 'className', '+', '"" implements com.jsoniter.spi.Encoder {\\n""', ')', ';', 'writer', '.', 'write', '(', 'source', '.', 'generateWrapperCode', '(', 'clazz', ')', ')', ';', 'writer', '.', 'write', '(', 'source', '.', 'toString', '(', ')', ')', ';', 'writer', '.', 'write', '(', '""}\\n""', ')', ';', '}']","['privatevoid', 'staticGen', '(', 'Class', 'clazz', ',', 'String', 'writer', ',', 'CodegenResult', 'source', ')', 'throws', 'IOException', '{', 'String', 'className', '=', 'cacheKey', '.', 'substring', '(', '(', ""'.'"", ')', '+', '1', ')', ';', 'String', '=', 'cacheKey', '.', 'substring', '(', 'cacheKey', '(', ""'.'"", ')', ')', ';', 'writer', '.', 'write', '(', '""package {""', ')', ';', 'writer', '.', 'write', '(', 'source', '.', 'generateWrapperCode', '(', 'clazz', ')', ')', ';', 'writer', '(', 'source', '.', 'toString', '(', ')', ')', ';', 'writer', '.', 'write', '(', '""n""', ')', ';', '}']",107,77,6,511,306,15,41.33064516129033,29.7029702970297,,,,-1,-1,-1,-1,False
L454_validateThenCloseCursor_1.txt,code2seq,METHOD_NAME,token_wrong,0.613,0.4387,29.3815,26.9618,"{'n_total': 358, 'n_valid': 42, 'n_correct': 25}",91.687464,"static void validateThenCloseCursor(String error, Cursor valueCursor, ContentValues expectedValues) { assertNotNull(""This cursor is null. Did you make sure to register your ContentProvider in the manifest?"", valueCursor); assertTrue(""Empty cursor returned. "" + error, valueCursor.moveToFirst()); validateCurrentRecord(error, valueCursor, expectedValues); valueCursor.close(); }","void validateThenCloseCursor(String error,Cursor valueCursor,ContentValues expectedValues){assertNotNull("""",valueCursor);assertTrue(error,moveToFirst());validateCurrentRecord(error,expectedValues);valueCursor.close();}","['static', 'void', 'validateThenCloseCursor', '(', 'String', 'error', ',', 'Cursor', 'valueCursor', ',', 'ContentValues', 'expectedValues', ')', '{', 'assertNotNull', '(', '""This cursor is null. Did you make sure to register your ContentProvider in the manifest?""', ',', 'valueCursor', ')', ';', 'assertTrue', '(', '""Empty cursor returned. ""', '+', 'error', ',', 'valueCursor', '.', 'moveToFirst', '(', ')', ')', ';', 'validateCurrentRecord', '(', 'error', ',', 'valueCursor', ',', 'expectedValues', ')', ';', 'valueCursor', '.', 'close', '(', ')', ';', '}']","['void', 'validateThenCloseCursor', '(', 'String', 'error', ',', 'Cursor', 'valueCursor', ',', 'ContentValues', 'expectedValues', ')', '{', 'assertNotNull', '(', '""""', ',', 'valueCursor', ')', ';', 'assertTrue', '(', 'error', ',', 'moveToFirst', '(', ')', ')', ';', 'validateCurrentRecord', '(', 'error', ',', 'expectedValues', ')', ';', 'valueCursor', '.', 'close', '(', ')', ';', '}']",50,43,6,377,218,29,45.689655172413794,15.909090909090908,,,,-1,-1,-1,-1,False
L455_selectCurve_1.txt,code2seq,METHOD_NAME,token_wrong,0.7261,0.6566,16.7421,13.2937,"{'n_total': 331, 'n_valid': 37, 'n_correct': 28}",76.525475,"@Override protected int selectCurve(int minimumCurveBits) { if (clientSupportedGroups == null) { return selectDefaultCurve(minimumCurveBits); } boolean isFips = manager.getContext().isFips(); return SupportedGroups.getServerSelectedCurve(isFips, minimumCurveBits, clientSupportedGroups); }",int selectCurve(int minimumCurveBits){if(clientSupportedGroups){(minimumCurveBits);}isFips().getServerSelectedCurve();},"['@', 'Override', 'protected', 'int', 'selectCurve', '(', 'int', 'minimumCurveBits', ')', '{', 'if', '(', 'clientSupportedGroups', '==', 'null', ')', '{', 'return', 'selectDefaultCurve', '(', 'minimumCurveBits', ')', ';', '}', 'boolean', 'isFips', '=', 'manager', '.', 'getContext', '(', ')', '.', 'isFips', '(', ')', ';', 'return', 'SupportedGroups', '.', 'getServerSelectedCurve', '(', 'isFips', ',', 'minimumCurveBits', ',', 'clientSupportedGroups', ')', ';', '}']","['int', 'selectCurve', '(', 'int', 'minimumCurveBits', ')', '{', 'if', '(', 'clientSupportedGroups', ')', '{', '(', 'minimumCurveBits', ')', ';', '}', 'isFips', '(', ')', '.', 'getServerSelectedCurve', '(', ')', ';', '}']",50,26,6,289,119,17,62.5,54.54545454545454,,,,-1,-1,-1,-1,False
L456_createRawValidator_10.txt,code2seq,METHOD_NAME,token_wrong,0.6599,0.4122,25.6441,24.477,"{'n_total': 1193, 'n_valid': 346, 'n_correct': 137}",680.715438,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000"" + ""\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boo"" + ""lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.Stri"" + ""ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xs"" + ""d.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.C"" + ""oncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatyp"" + ""eImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeN"" + ""ameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpace"" + ""Processor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005"" + ""com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"" + ""\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000"" + ""\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"" + ""\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000\u001dcom."" + ""sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv."" + ""grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001x"" + ""q\u0000~\u0000\u0004q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014psr\u0000#com.sun.msv.datatype.xsd.AnyURITy"" + ""pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xs"" + ""d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\""sq\u0000~\u0000#q\u0000"" + ""~\u0000,q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"" + ""\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.N"" + ""ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0003ACCt\u0000\u001durn:liberty:id-sis-pp:2003-08s"" + ""r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"" + ""\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0013\u0001q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000\u0014psq\u0000~\u0000\u000fppsr\u0000%com.sun."" + ""msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.data"" + ""type.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\bdateTimeq\u0000"" + ""~\u0000.q\u0000~\u0000\""sq\u0000~\u0000#q\u0000~\u0000>q\u0000~\u0000\u001csq\u0000~\u00000t\u0000\u0007ACCTimeq\u0000~\u00004q\u0000~\u00006sq\u0000~\u0000%ppsq"" + ""\u0000~\u0000\'q\u0000~\u0000\u0014psq\u0000~\u0000\u000fppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFace"" + ""t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTyp"" + ""eWithValueConstraintFacet\""\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype"" + "".xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValue"" + ""CheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeI"" + ""mpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"" + "";L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018t\u0000\u001curn:liberty:metadata:2003-08t\u0000\fen"" + ""tityIDTypeq\u0000~\u0000.\u0000\u0000q\u0000~\u0000+q\u0000~\u0000+t\u0000\tmaxLength\u0000\u0000\u0004\u0000q\u0000~\u0000\""sq\u0000~\u0000#q\u0000~\u0000Lq"" + ""\u0000~\u0000Ksq\u0000~\u00000t\u0000\bmodifierq\u0000~\u00004q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000\u0014psq\u0000~\u0000\u000fpps"" + ""r\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfina"" + ""lValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTy"" + ""peq\u0000~\u0000Hxq\u0000~\u0000\u0018q\u0000~\u00004t\u0000\u0006IDTypeq\u0000~\u0000 q\u0000~\u0000\u001b\u0000\u0000\u0000\u0000q\u0000~\u0000\""sq\u0000~\u0000#q\u0000~\u0000\u001dq\u0000~"" + ""\u00004sq\u0000~\u00000t\u0000\u0002idq\u0000~\u00004q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000\u0014pq\u0000~\u0000:sq\u0000~\u00000t\u0000\u0010mod"" + ""ificationTimeq\u0000~\u00004q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014psr\u0000\""c"" + ""om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QN"" + ""ameq\u0000~\u0000.q\u0000~\u0000\""sq\u0000~\u0000#q\u0000~\u0000dq\u0000~\u0000\u001csq\u0000~\u00000t\u0000\u0004typet\u0000)http://www.w3.o"" + ""rg/2001/XMLSchema-instanceq\u0000~\u00006sq\u0000~\u00000t\u0000\rPersonalTitleq\u0000~\u00004sr"" + ""\u0000\""com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"" + ""/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"" + ""n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"" + ""\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"" + ""l;xp\u0000\u0000\u0000\f\u0001pq\u0000~\u0000\fq\u0000~\u0000Bq\u0000~\u0000[q\u0000~\u0000\tq\u0000~\u00008q\u0000~\u0000Qq\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000&q\u0000~\u0000\u000b"" + ""q\u0000~\u0000\rq\u0000~\u0000_x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","msv.verifier.DocumentDeclaration createRawValidator(){if(schemaFragment==null){schemaFragmentSchemaDeserializer.deserialize((""""+""tnameClasst""+"".""+""Lq""+""fpps""+""r_x""));}return newsun.msv(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""q\x00~\x00\x07ppsq\x00~\x00\x07ppsq\x00~\x00\x07ppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00""', '+', '""\x04namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04sr\x00\x11java.lang.Boo""', '+', '""leanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00#com.sun.msv.datatype.xsd.Stri""', '+', '""ngType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01Z\x00\\risAlwaysValidxr\x00*com.sun.msv.datatype.xs""', '+', '""d.BuiltinAtomicType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.C""', '+', '""oncreteType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatyp""', '+', '""eImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00\\fnamespaceUrit\x00\x12Ljava/lang/String;L\x00\\btypeN""', '+', '""ameq\x00~\x00\x19L\x00\\nwhiteSpacet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpace""', '+', '""Processor;xpt\x00 http://www.w3.org/2001/XMLSchemat\x00\x06stringsr\x005""', '+', '""com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01""', '+', '""\x02\x00\x00xp\x01sr\x000com.sun.msv.grammar.Expression$NullSetExpression\x00\x00""', '+', '""\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x14psr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0""', '+', '""\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x19L\x00\\fnamespaceURIq\x00~\x00\x19xpq\x00~\x00\x1dq\x00~\x00\x1csr\x00\x1dcom.""', '+', '""sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsr\x00 com.sun.msv.""', '+', '""grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\tnameClassq\x00~\x00\x01x""', '+', '""q\x00~\x00\x04q\x00~\x00\x14psq\x00~\x00\x0fq\x00~\x00\x14psr\x00#com.sun.msv.datatype.xsd.AnyURITy""', '+', '""pe\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x16q\x00~\x00\x1ct\x00\x06anyURIsr\x005com.sun.msv.datatype.xs""', '+', '""d.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x1fq\x00~\x00\\""sq\x00~\x00#q\x00""', '+', '""~\x00,q\x00~\x00\x1csr\x00#com.sun.msv.grammar.SimpleNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00""', '+', '""\\tlocalNameq\x00~\x00\x19L\x00\\fnamespaceURIq\x00~\x00\x19xr\x00\x1dcom.sun.msv.grammar.N""', '+', '""ameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\x03ACCt\x00\x1durn:liberty:id-sis-pp:2003-08s""', '+', '""r\x000com.sun.msv.grammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02""', '+', '""\x00\x00xq\x00~\x00\x04sq\x00~\x00\x13\x01q\x00~\x006sq\x00~\x00%ppsq\x00~\x00\\\'q\x00~\x00\x14psq\x00~\x00\x0fppsr\x00%com.sun.""', '+', '""msv.datatype.xsd.DateTimeType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00)com.sun.msv.data""', '+', '""type.xsd.DateTimeBaseType\x14W\x1a@3¥´å\x02\x00\x00xq\x00~\x00\x16q\x00~\x00\x1ct\x00\\bdateTimeq\x00""', '+', '""~\x00.q\x00~\x00\\""sq\x00~\x00#q\x00~\x00>q\x00~\x00\x1csq\x00~\x000t\x00\x07ACCTimeq\x00~\x004q\x00~\x006sq\x00~\x00%ppsq""', '+', '""\x00~\x00\\\'q\x00~\x00\x14psq\x00~\x00\x0fppsr\x00\\\'com.sun.msv.datatype.xsd.MaxLengthFace""', '+', '""t\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01I\x00\\tmaxLengthxr\x009com.sun.msv.datatype.xsd.DataTyp""', '+', '""eWithValueConstraintFacet\\""§RoÊÇ\x8aT\x02\x00\x00xr\x00*com.sun.msv.datatype""', '+', '"".xsd.DataTypeWithFacet\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x05Z\x00\\fisFacetFixedZ\x00\x12needValue""', '+', '""CheckFlagL\x00\\bbaseTypet\x00)Lcom/sun/msv/datatype/xsd/XSDatatypeI""', '+', '""mpl;L\x00\\fconcreteTypet\x00\\\'Lcom/sun/msv/datatype/xsd/ConcreteType""', '+', '"";L\x00\\tfacetNameq\x00~\x00\x19xq\x00~\x00\x18t\x00\x1curn:liberty:metadata:2003-08t\x00\\fen""', '+', '""tityIDTypeq\x00~\x00.\x00\x00q\x00~\x00+q\x00~\x00+t\x00\\tmaxLength\x00\x00\x04\x00q\x00~\x00\\""sq\x00~\x00#q\x00~\x00Lq""', '+', '""\x00~\x00Ksq\x00~\x000t\x00\\bmodifierq\x00~\x004q\x00~\x006sq\x00~\x00%ppsq\x00~\x00\\\'q\x00~\x00\x14psq\x00~\x00\x0fpps""', '+', '""r\x00\\\'com.sun.msv.datatype.xsd.FinalComponent\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01I\x00\\nfina""', '+', '""lValuexr\x00\x1ecom.sun.msv.datatype.xsd.Proxy\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bbaseTy""', '+', '""peq\x00~\x00Hxq\x00~\x00\x18q\x00~\x004t\x00\x06IDTypeq\x00~\x00 q\x00~\x00\x1b\x00\x00\x00\x00q\x00~\x00\\""sq\x00~\x00#q\x00~\x00\x1dq\x00~""', '+', '""\x004sq\x00~\x000t\x00\x02idq\x00~\x004q\x00~\x006sq\x00~\x00%ppsq\x00~\x00\\\'q\x00~\x00\x14pq\x00~\x00:sq\x00~\x000t\x00\x10mod""', '+', '""ificationTimeq\x00~\x004q\x00~\x006sq\x00~\x00%ppsq\x00~\x00\\\'q\x00~\x00\x14psq\x00~\x00\x0fq\x00~\x00\x14psr\x00\\""c""', '+', '""om.sun.msv.datatype.xsd.QnameType\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x16q\x00~\x00\x1ct\x00\x05QN""', '+', '""ameq\x00~\x00.q\x00~\x00\\""sq\x00~\x00#q\x00~\x00dq\x00~\x00\x1csq\x00~\x000t\x00\x04typet\x00)http://www.w3.o""', '+', '""rg/2001/XMLSchema-instanceq\x00~\x006sq\x00~\x000t\x00\\rPersonalTitleq\x00~\x004sr""', '+', '""\x00\\""com.sun.msv.grammar.ExpressionPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00""', '+', '""/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\x00-com.su""', '+', '""n.msv.grammar.ExpressionPool$ClosedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00""', '+', '""\\rstreamVersionL\x00\x06parentt\x00$Lcom/sun/msv/grammar/ExpressionPoo""', '+', '""l;xp\x00\x00\x00\\f\x01pq\x00~\x00\\fq\x00~\x00Bq\x00~\x00[q\x00~\x00\\tq\x00~\x008q\x00~\x00Qq\x00~\x00\x0eq\x00~\x00\\nq\x00~\x00&q\x00~\x00\x0b""', '+', '""q\x00~\x00\\rq\x00~\x00_x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragmentSchemaDeserializer', '.', 'deserialize', '(', '(', '""""', '+', '""tnameClasst""', '+', '"".""', '+', '""Lq""', '+', '""fpps""', '+', '""r_x""', ')', ')', ';', '}', 'return', 'newsun', '.', 'msv', '(', 'schemaFragment', ')', ';', '}']",177,45,6,7994,202,24,97.76662484316185,77.19298245614034,,,,-1,-1,-1,-1,False
L457_rtrim_1.txt,code2seq,METHOD_NAME,token_wrong,0.315,0.2685,9.9993,9.2534,"{'n_total': 405, 'n_valid': 63, 'n_correct': 29}",132.524842,"public void rtrim() { int index = text.length(); while ((index > 0) && (text.charAt(index - 1) <= ' ')) { index--; } text = text.substring(0, index); }","void rtrim(){text;while((index)&&(text.charAt(1)<=' ')){}text=substring(0,index);}","['public', 'void', 'rtrim', '(', ')', '{', 'int', 'index', '=', 'text', '.', 'length', '(', ')', ';', 'while', '(', '(', 'index', '>', '0', ')', '&&', '(', 'text', '.', 'charAt', '(', 'index', '-', '1', ')', '<=', ""' '"", ')', ')', '{', 'index', '--', ';', '}', 'text', '=', 'text', '.', 'substring', '(', '0', ',', 'index', ')', ';', '}']","['void', 'rtrim', '(', ')', '{', 'text', ';', 'while', '(', '(', 'index', ')', '&&', '(', 'text', '.', 'charAt', '(', '1', ')', '<=', ""' '"", ')', ')', '{', '}', 'text', '=', 'substring', '(', '0', ',', 'index', ')', ';', '}']",53,36,6,151,82,11,49.28571428571429,36.17021276595745,,,,-1,-1,-1,-1,False
L458_editItemUrl_1.txt,code2seq,METHOD_NAME,token_wrong,0.4469,0.4205,16.6995,15.7174,"{'n_total': 438, 'n_valid': 92, 'n_correct': 42}",190.00957,"public String editItemUrl(SimplePageBean bean) { String tool = bean.getCurrentTool(""sakai.assignment.grades""); if (tool == null) return null; return ServerConfigurationService.getToolUrl() + ""/"" + tool + ""?assignmentId=/assignment/a/"" + bean.getCurrentSiteId() + ""/"" + id + ""&panel=Main&sakai_action=doEdit_assignment""; }","String editItemUrl(SimplePageBean bean){("""");if(null)return getToolUrl()+""/""+tool+""assignment""+bean+ +""Main_actiondoEdit"";}","['public', 'String', 'editItemUrl', '(', 'SimplePageBean', 'bean', ')', '{', 'String', 'tool', '=', 'bean', '.', 'getCurrentTool', '(', '""sakai.assignment.grades""', ')', ';', 'if', '(', 'tool', '==', 'null', ')', 'return', 'null', ';', 'return', 'ServerConfigurationService', '.', 'getToolUrl', '(', ')', '+', '""/""', '+', 'tool', '+', '""?assignmentId=/assignment/a/""', '+', 'bean', '.', 'getCurrentSiteId', '(', ')', '+', '""/""', '+', 'id', '+', '""&panel=Main&sakai_action=doEdit_assignment""', ';', '}']","['String', 'editItemUrl', '(', 'SimplePageBean', 'bean', ')', '{', '(', '""""', ')', ';', 'if', '(', 'null', ')', 'return', 'getToolUrl', '(', ')', '+', '""/""', '+', 'tool', '+', '""assignment""', '+', 'bean', '+', '+', '""Main_actiondoEdit""', ';', '}']",53,32,6,321,123,17,65.13157894736842,44.680851063829785,,,,-1,-1,-1,-1,False
L459_scoresAugmented_1.txt,code2seq,METHOD_NAME,token_wrong,0.4586,0.4458,12.3964,8.6914,"{'n_total': 332, 'n_valid': 52, 'n_correct': 29}",108.024108,"public edu.illinois.cs.cogcomp.lbjava.classify.ScoreSet scoresAugmented(java.lang.Object a0, edu.illinois.cs.cogcomp.lbjava.classify.ScoreSet a1) { if (isClone) { loadInstance(); return instance.scoresAugmented(a0, a1); } return super.scoresAugmented(a0, a1); }","lbjava scoresAugmented(Object a,ScoreSet a){if(isClone){loadInstance();return instance.scoresAugmented;}return super.scoresAugmented(0,a);}","['public', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'classify', '.', 'ScoreSet', 'scoresAugmented', '(', 'java', '.', 'lang', '.', 'Object', 'a0', ',', 'edu', '.', 'illinois', '.', 'cs', '.', 'cogcomp', '.', 'lbjava', '.', 'classify', '.', 'ScoreSet', 'a1', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'instance', '.', 'scoresAugmented', '(', 'a0', ',', 'a1', ')', ';', '}', 'return', 'super', '.', 'scoresAugmented', '(', 'a0', ',', 'a1', ')', ';', '}']","['lbjava', 'scoresAugmented', '(', 'Object', 'a', ',', 'ScoreSet', 'a', ')', '{', 'if', '(', 'isClone', ')', '{', 'loadInstance', '(', ')', ';', 'return', 'instance', '.', 'scoresAugmented', ';', '}', 'return', 'super', '.', 'scoresAugmented', '(', '0', ',', 'a', ')', ';', '}']",70,36,6,261,139,21,50.83333333333333,53.125,,,,-1,-1,-1,-1,False
L460_getInstance_3.txt,code2seq,METHOD_NAME,token_wrong,0.7787,0.6147,8.7688,7.5837,"{'n_total': 373, 'n_valid': 43, 'n_correct': 29}",92.867663,"private synchronized static ResourceResultCache getInstance() { if ((resourceResultCache == null) && debug.warningEnabled()) { debug.warning(""ResourceResultCache.getInstance():"" + ""ResourceResultCache has not been created:"" + ""returning null""); } return resourceResultCache; }","ResourceResultCache getInstance(){if((resourceResultCache=null).warningEnabled()){(""""+"""");}}","['private', 'synchronized', 'static', 'ResourceResultCache', 'getInstance', '(', ')', '{', 'if', '(', '(', 'resourceResultCache', '==', 'null', ')', '&&', 'debug', '.', 'warningEnabled', '(', ')', ')', '{', 'debug', '.', 'warning', '(', '""ResourceResultCache.getInstance():""', '+', '""ResourceResultCache has not been created:""', '+', '""returning null""', ')', ';', '}', 'return', 'resourceResultCache', ';', '}']","['ResourceResultCache', 'getInstance', '(', ')', '{', 'if', '(', '(', 'resourceResultCache', '=', 'null', ')', '.', 'warningEnabled', '(', ')', ')', '{', '(', '""""', '+', '""""', ')', ';', '}', '}']",39,26,6,276,92,17,71.04247104247105,39.39393939393939,,,,-1,-1,-1,-1,False
L461_notifyLocationUpdate_1.txt,code2seq,METHOD_NAME,token_wrong,0.5684,0.6721,2.0021,1.8913,"{'n_total': 418, 'n_valid': 66, 'n_correct': 44}",135.162289,"private void notifyLocationUpdate(org.droidplanner.services.android.impl.core.gcs.location.Location location) { if (receivers.isEmpty()) { Timber.d(TAG, ""notifyLocationUpdate(): No receivers""); return; } for (LocationReceiver receiver : receivers.values()) { receiver.onLocationUpdate(location); } }","void notifyLocationUpdate(org location){if(receivers){(""notifyLocationUpdate receivers"");}for(LocationReceiver receiver:values()){receiver();}}","['private', 'void', 'notifyLocationUpdate', '(', 'org', '.', 'droidplanner', '.', 'services', '.', 'android', '.', 'impl', '.', 'core', '.', 'gcs', '.', 'location', '.', 'Location', 'location', ')', '{', 'if', '(', 'receivers', '.', 'isEmpty', '(', ')', ')', '{', 'Timber', '.', 'd', '(', 'TAG', ',', '""notifyLocationUpdate(): No receivers""', ')', ';', 'return', ';', '}', 'for', '(', 'LocationReceiver', 'receiver', ':', 'receivers', '.', 'values', '(', ')', ')', '{', 'receiver', '.', 'onLocationUpdate', '(', 'location', ')', ';', '}', '}']","['void', 'notifyLocationUpdate', '(', 'org', 'location', ')', '{', 'if', '(', 'receivers', ')', '{', '(', '""notifyLocationUpdate receivers""', ')', ';', '}', 'for', '(', 'LocationReceiver', 'receiver', ':', 'values', '(', ')', ')', '{', 'receiver', '(', ')', ';', '}', '}']",66,33,6,299,143,26,57.14285714285714,55.00000000000001,,,,-1,-1,-1,-1,False
L462_getStems_1.txt,code2seq,METHOD_NAME,token_wrong,0.699,0.8527,4.7441,6.1128,"{'n_total': 245, 'n_valid': 27, 'n_correct': 22}",62.935816,"public void getStems(String word) { List<String> stems = wstem.findStems(word, null); for (String s : stems) { System.out.println(s); } }",void getStems(){List<String>stems=findStems();for(String s:stems){System.println();}},"['public', 'void', 'getStems', '(', 'String', 'word', ')', '{', 'List', '<', 'String', '>', 'stems', '=', 'wstem', '.', 'findStems', '(', 'word', ',', 'null', ')', ';', 'for', '(', 'String', 's', ':', 'stems', ')', '{', 'System', '.', 'out', '.', 'println', '(', 's', ')', ';', '}', '}']","['void', 'getStems', '(', ')', '{', 'List', '<', 'String', '>', 'stems', '=', 'findStems', '(', ')', ';', 'for', '(', 'String', 's', ':', 'stems', ')', '{', 'System', '.', 'println', '(', ')', ';', '}', '}']",42,31,6,137,85,14,42.27642276422765,30.555555555555557,,,,-1,-1,-1,-1,False
L463_browseDir_1.txt,code2seq,METHOD_NAME,token_wrong,0.5698,0.531,2.1142,2.4884,"{'n_total': 378, 'n_valid': 39, 'n_correct': 27}",89.334211,"public static ActionListener browseDir(final Component component, final File dir, final boolean create) { return new ActionListener() { @Override public void actionPerformed(ActionEvent e) { if (create) { dir.mkdirs(); } SwingHelper.browseDir(dir, component); } }; }","ActionListener browseDir(Component component,File dir,boolean create){return new ActionListener(){@Override void actionPerformed(ActionEvent e){if(create){}browseDir(dir,component);}};}","['public', 'static', 'ActionListener', 'browseDir', '(', 'final', 'Component', 'component', ',', 'final', 'File', 'dir', ',', 'final', 'boolean', 'create', ')', '{', 'return', 'new', 'ActionListener', '(', ')', '{', '@', 'Override', 'public', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'if', '(', 'create', ')', '{', 'dir', '.', 'mkdirs', '(', ')', ';', '}', 'SwingHelper', '.', 'browseDir', '(', 'dir', ',', 'component', ')', ';', '}', '}', ';', '}']","['ActionListener', 'browseDir', '(', 'Component', 'component', ',', 'File', 'dir', ',', 'boolean', 'create', ')', '{', 'return', 'new', 'ActionListener', '(', ')', '{', '@', 'Override', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'if', '(', 'create', ')', '{', '}', 'browseDir', '(', 'dir', ',', 'component', ')', ';', '}', '}', ';', '}']",59,45,6,266,185,15,32.27091633466135,26.41509433962264,,,,-1,-1,-1,-1,False
L464_configureClientAuth_1.txt,code2seq,METHOD_NAME,token_wrong,0.8398,0.6985,5.1569,5.2011,"{'n_total': 170, 'n_valid': 14, 'n_correct': 14}",32.322933,protected void configureClientAuth(SSLServerSocket socket) { if (wantClientAuth) { socket.setWantClientAuth(wantClientAuth); } else { socket.setNeedClientAuth(requireClientAuth); } },void configureClientAuth(SSLServerSocket socket){if(wantClientAuth){(wantClientAuth);(requireClientAuth);}},"['protected', 'void', 'configureClientAuth', '(', 'SSLServerSocket', 'socket', ')', '{', 'if', '(', 'wantClientAuth', ')', '{', 'socket', '.', 'setWantClientAuth', '(', 'wantClientAuth', ')', ';', '}', 'else', '{', 'socket', '.', 'setNeedClientAuth', '(', 'requireClientAuth', ')', ';', '}', '}']","['void', 'configureClientAuth', '(', 'SSLServerSocket', 'socket', ')', '{', 'if', '(', 'wantClientAuth', ')', '{', '(', 'wantClientAuth', ')', ';', '(', 'requireClientAuth', ')', ';', '}', '}']",32,22,6,182,107,25,47.77070063694268,38.46153846153847,,,,-1,-1,-1,-1,False
L465_testParallel_1.txt,code2seq,METHOD_NAME,token_wrong,0.7644,0.7527,12.4936,11.2225,"{'n_total': 758, 'n_valid': 70, 'n_correct': 53}",158.312323,"@Test @Deployment(resources = { ""diagrams/chapter9/testMultiInstanceFixedNumbers.bpmn"" }) public void testParallel() throws Exception { Map<String, Object> variables = new HashMap<String, Object>(); long loop = 3; variables.put(""loop"", loop); variables.put(""counter"", 0); ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(""testMultiInstanceFixedNumbers"", variables); Object variable = runtimeService.getVariable(processInstance.getId(), ""counter""); assertEquals(loop, variable); }","@Deployment(resources={""""})void testParallel(){Map<Object>variables=new HashMap<>();put("""",loop);variables("""",0);ProcessInstance(""testMultiInstanceFixedNumbers"");variable=runtimeService(getId,"""");assertEquals();}","['@', 'Test', '@', 'Deployment', '(', 'resources', '=', '{', '""diagrams/chapter9/testMultiInstanceFixedNumbers.bpmn""', '}', ')', 'public', 'void', 'testParallel', '(', ')', 'throws', 'Exception', '{', 'Map', '<', 'String', ',', 'Object', '>', 'variables', '=', 'new', 'HashMap', '<', 'String', ',', 'Object', '>', '(', ')', ';', 'long', 'loop', '=', '3', ';', 'variables', '.', 'put', '(', '""loop""', ',', 'loop', ')', ';', 'variables', '.', 'put', '(', '""counter""', ',', '0', ')', ';', 'ProcessInstance', 'processInstance', '=', 'runtimeService', '.', 'startProcessInstanceByKey', '(', '""testMultiInstanceFixedNumbers""', ',', 'variables', ')', ';', 'Object', 'variable', '=', 'runtimeService', '.', 'getVariable', '(', 'processInstance', '.', 'getId', '(', ')', ',', '""counter""', ')', ';', 'assertEquals', '(', 'loop', ',', 'variable', ')', ';', '}']","['@', 'Deployment', '(', 'resources', '=', '{', '""""', '}', ')', 'void', 'testParallel', '(', ')', '{', 'Map', '<', 'Object', '>', 'variables', '=', 'new', 'HashMap', '<', '>', '(', ')', ';', 'put', '(', '""""', ',', 'loop', ')', ';', 'variables', '(', '""""', ',', '0', ')', ';', 'ProcessInstance', '(', '""testMultiInstanceFixedNumbers""', ')', ';', 'variable', '=', 'runtimeService', '(', 'getId', ',', '""""', ')', ';', 'assertEquals', '(', ')', ';', '}']",96,60,6,505,212,18,60.16427104722793,40.0,,,,-1,-1,-1,-1,False
L466_createPropertyModel_3.txt,code2seq,METHOD_NAME,token_wrong,0.4313,0.3519,11.1104,16.8803,"{'n_total': 376, 'n_valid': 43, 'n_correct': 35}",94.084656,"protected void createPropertyModel() { retrieveCommonProperties(); if (isHosted()) { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2IDPAdvancedHosted.xml"")); } else { psModel = new AMPropertySheetModel(getClass().getClassLoader().getResourceAsStream(""com/sun/identity/console/propertySAMLv2IDPAdvancedRemote.xml"")); } psModel.clear(); }","void createPropertyModel(){retrieveCommonProperties();if(isHosted){psModel=AMPropertySheetModel(getResourceAsStream(""""));}{psModel=AMPropertySheetModel((""""));}psModel.clear();}","['protected', 'void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', '(', ')', ')', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2IDPAdvancedHosted.xml""', ')', ')', ';', '}', 'else', '{', 'psModel', '=', 'new', 'AMPropertySheetModel', '(', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '""com/sun/identity/console/propertySAMLv2IDPAdvancedRemote.xml""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']","['void', 'createPropertyModel', '(', ')', '{', 'retrieveCommonProperties', '(', ')', ';', 'if', '(', 'isHosted', ')', '{', 'psModel', '=', 'AMPropertySheetModel', '(', 'getResourceAsStream', '(', '""""', ')', ')', ';', '}', '{', 'psModel', '=', 'AMPropertySheetModel', '(', '(', '""""', ')', ')', ';', '}', 'psModel', '.', 'clear', '(', ')', ';', '}']",66,43,6,412,176,25,60.98191214470285,38.333333333333336,,,,-1,-1,-1,-1,False
L467_build_1.txt,code2seq,METHOD_NAME,token_wrong,0.6944,0.4794,7.0761,4.9902,"{'n_total': 204, 'n_valid': 27, 'n_correct': 15}",58.870757,public RuntimeReplFactory build() { return new RuntimeReplFactory() { @Override public RuntimeRepl newInstance() { return new JsRuntimeRepl(initJsScope()); } }; },RuntimeReplFactory build(){new RuntimeReplFactory(){RuntimeRepl newInstance(){return newJsRuntimeRepl(initJsScope());}};},"['public', 'RuntimeReplFactory', 'build', '(', ')', '{', 'return', 'new', 'RuntimeReplFactory', '(', ')', '{', '@', 'Override', 'public', 'RuntimeRepl', 'newInstance', '(', ')', '{', 'return', 'new', 'JsRuntimeRepl', '(', 'initJsScope', '(', ')', ')', ';', '}', '}', ';', '}']","['RuntimeReplFactory', 'build', '(', ')', '{', 'new', 'RuntimeReplFactory', '(', ')', '{', 'RuntimeRepl', 'newInstance', '(', ')', '{', 'return', 'newJsRuntimeRepl', '(', 'initJsScope', '(', ')', ')', ';', '}', '}', ';', '}']",33,27,6,162,121,11,27.1523178807947,22.22222222222222,,,,-1,-1,-1,-1,False
L468_changeFlightMode_1.txt,code2seq,METHOD_NAME,token_wrong,0.5247,0.3807,26.5075,26.0661,"{'n_total': 423, 'n_valid': 119, 'n_correct': 28}",234.056504,"public static void changeFlightMode(MavLinkDrone drone, ApmModes mode, ICommandListener listener) { msg_set_mode msg = new msg_set_mode(); msg.target_system = drone.getSysid(); msg.base_mode = 1; msg.custom_mode = mode.getNumber(); drone.getMavClient().sendMessage(msg, listener); }","void changeFlightMode(MavLinkDrone drone,ApmModes mode,ICommandListener listener){mode=new msg_set_mode();drone().sendMessage();}","['public', 'static', 'void', 'changeFlightMode', '(', 'MavLinkDrone', 'drone', ',', 'ApmModes', 'mode', ',', 'ICommandListener', 'listener', ')', '{', 'msg_set_mode', 'msg', '=', 'new', 'msg_set_mode', '(', ')', ';', 'msg', '.', 'target_system', '=', 'drone', '.', 'getSysid', '(', ')', ';', 'msg', '.', 'base_mode', '=', '1', ';', 'msg', '.', 'custom_mode', '=', 'mode', '.', 'getNumber', '(', ')', ';', 'drone', '.', 'getMavClient', '(', ')', '.', 'sendMessage', '(', 'msg', ',', 'listener', ')', ';', '}']","['void', 'changeFlightMode', '(', 'MavLinkDrone', 'drone', ',', 'ApmModes', 'mode', ',', 'ICommandListener', 'listener', ')', '{', 'mode', '=', 'new', 'msg_set_mode', '(', ')', ';', 'drone', '(', ')', '.', 'sendMessage', '(', ')', ';', '}']",63,29,6,282,129,22,58.84615384615385,59.64912280701754,,,,-1,-1,-1,-1,False
L469_getNewProtocol_1.txt,code2seq,METHOD_NAME,token_wrong,0.5395,0.4595,9.009,11.5022,"{'n_total': 169, 'n_valid': 25, 'n_correct': 19}",52.928645,"private static MasterProtocol getNewProtocol(FailoverProxy proxy, final GlobalStateInfo globalInfo, UrlParser urlParser) { MasterProtocol newProtocol = new MasterProtocol(urlParser, globalInfo, proxy.lock); newProtocol.setProxy(proxy); return newProtocol; }","MasterProtocol getNewProtocol(FailoverProxy proxy,UrlParser urlParser){(proxy);}","['private', 'static', 'MasterProtocol', 'getNewProtocol', '(', 'FailoverProxy', 'proxy', ',', 'final', 'GlobalStateInfo', 'globalInfo', ',', 'UrlParser', 'urlParser', ')', '{', 'MasterProtocol', 'newProtocol', '=', 'new', 'MasterProtocol', '(', 'urlParser', ',', 'globalInfo', ',', 'proxy', '.', 'lock', ')', ';', 'newProtocol', '.', 'setProxy', '(', 'proxy', ')', ';', 'return', 'newProtocol', ';', '}']","['MasterProtocol', 'getNewProtocol', '(', 'FailoverProxy', 'proxy', ',', 'UrlParser', 'urlParser', ')', '{', '(', 'proxy', ')', ';', '}']",42,15,6,257,80,20,74.68354430379746,75.0,,,,-1,-1,-1,-1,False
L470_getSelectedCompressionMethod_1.txt,code2seq,METHOD_NAME,token_wrong,0.7737,0.6562,14.5676,21.1518,"{'n_total': 283, 'n_valid': 38, 'n_correct': 23}",80.076095,"public short getSelectedCompressionMethod() throws IOException { short[] compressionMethods = getCompressionMethods(); for (int i = 0; i < compressionMethods.length; ++i) { if (Arrays.contains(offeredCompressionMethods, compressionMethods[i])) { return this.selectedCompressionMethod = compressionMethods[i]; } } throw new TlsFatalAlert(AlertDescription.handshake_failure); }","short getSelectedCompressionMethod()throws IOException{{if(contains(offeredCompressionMethods,compressionMethods[i])){returnselectedCompressionMethod;}}throw(AlertDescription);}","['public', 'short', 'getSelectedCompressionMethod', '(', ')', 'throws', 'IOException', '{', 'short', '[', ']', 'compressionMethods', '=', 'getCompressionMethods', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'compressionMethods', '.', 'length', ';', '++', 'i', ')', '{', 'if', '(', 'Arrays', '.', 'contains', '(', 'offeredCompressionMethods', ',', 'compressionMethods', '[', 'i', ']', ')', ')', '{', 'return', 'this', '.', 'selectedCompressionMethod', '=', 'compressionMethods', '[', 'i', ']', ';', '}', '}', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'handshake_failure', ')', ';', '}']","['short', 'getSelectedCompressionMethod', '(', ')', 'throws', 'IOException', '{', '{', 'if', '(', 'contains', '(', 'offeredCompressionMethods', ',', 'compressionMethods', '[', 'i', ']', ')', ')', '{', 'returnselectedCompressionMethod', ';', '}', '}', 'throw', '(', 'AlertDescription', ')', ';', '}']",71,31,6,375,177,34,58.06451612903226,61.53846153846154,,,,-1,-1,-1,-1,False
L471_shouldValidateClaimsParameter_1.txt,code2seq,METHOD_NAME,token_wrong,0.5411,0.7024,20.6441,25.6466,"{'n_total': 1516, 'n_valid': 463, 'n_correct': 82}",931.733178,"@Test public void shouldValidateClaimsParameter() throws NotFoundException, BadRequestException, RedirectUriMismatchException, InvalidScopeException, InvalidRequestException, InvalidClientException, ServerException, UnsupportedResponseTypeException { OAuth2Request mockRequest = mock(OAuth2Request.class); OAuth2ProviderSettings mockProviderSettings = mock(OAuth2ProviderSettings.class); String responseTypes = ""code token id_token""; given(mockProviderSettingsFactory.get(mockRequest)).willReturn(mockProviderSettings); given(mockProviderSettings.getClaimsParameterSupported()).willReturn(true); given(mockRequest.getParameter(OAuth2Constants.Custom.CLAIMS)).willReturn(validClaimsString); given(mockRequest.getParameter(OAuth2Constants.Params.RESPONSE_TYPE)).willReturn(responseTypes); claimsParameterValidator.validateRequest(mockRequest); }","@Test void shouldValidateClaimsParameter()throws NotFoundException,InvalidClientException,UnsupportedResponseTypeException{OAuth();(2);responseTypes=""token token"";(mockProviderSettingsFactory).willReturn();(getClaimsParameterSupported()).willReturn(mockRequest(Custom)).willReturn(validClaimsString);(mockRequest()).willReturn();claimsParameterValidator.validateRequest();}","['@', 'Test', 'public', 'void', 'shouldValidateClaimsParameter', '(', ')', 'throws', 'NotFoundException', ',', 'BadRequestException', ',', 'RedirectUriMismatchException', ',', 'InvalidScopeException', ',', 'InvalidRequestException', ',', 'InvalidClientException', ',', 'ServerException', ',', 'UnsupportedResponseTypeException', '{', 'OAuth2Request', 'mockRequest', '=', 'mock', '(', 'OAuth2Request', '.', 'class', ')', ';', 'OAuth2ProviderSettings', 'mockProviderSettings', '=', 'mock', '(', 'OAuth2ProviderSettings', '.', 'class', ')', ';', 'String', 'responseTypes', '=', '""code token id_token""', ';', 'given', '(', 'mockProviderSettingsFactory', '.', 'get', '(', 'mockRequest', ')', ')', '.', 'willReturn', '(', 'mockProviderSettings', ')', ';', 'given', '(', 'mockProviderSettings', '.', 'getClaimsParameterSupported', '(', ')', ')', '.', 'willReturn', '(', 'true', ')', ';', 'given', '(', 'mockRequest', '.', 'getParameter', '(', 'OAuth2Constants', '.', 'Custom', '.', 'CLAIMS', ')', ')', '.', 'willReturn', '(', 'validClaimsString', ')', ';', 'given', '(', 'mockRequest', '.', 'getParameter', '(', 'OAuth2Constants', '.', 'Params', '.', 'RESPONSE_TYPE', ')', ')', '.', 'willReturn', '(', 'responseTypes', ')', ';', 'claimsParameterValidator', '.', 'validateRequest', '(', 'mockRequest', ')', ';', '}']","['@', 'Test', 'void', 'shouldValidateClaimsParameter', '(', ')', 'throws', 'NotFoundException', ',', 'InvalidClientException', ',', 'UnsupportedResponseTypeException', '{', 'OAuth', '(', ')', ';', '(', '2', ')', ';', 'responseTypes', '=', '""token token""', ';', '(', 'mockProviderSettingsFactory', ')', '.', 'willReturn', '(', ')', ';', '(', 'getClaimsParameterSupported', '(', ')', ')', '.', 'willReturn', '(', 'mockRequest', '(', 'Custom', ')', ')', '.', 'willReturn', '(', 'validClaimsString', ')', ';', '(', 'mockRequest', '(', ')', ')', '.', 'willReturn', '(', ')', ';', 'claimsParameterValidator', '.', 'validateRequest', '(', ')', ';', '}']",124,69,6,843,373,35,58.168316831683164,46.61016949152542,,,,-1,-1,-1,-1,False
L472_createRawValidator_11.txt,code2seq,METHOD_NAME,token_wrong,0.6966,0.4658,23.4257,24.7997,"{'n_total': 1421, 'n_valid': 417, 'n_correct': 150}",814.981108,"public com.sun.msv.verifier.DocumentDeclaration createRawValidator() { if (schemaFragment == null) { schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((""\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"" + ""\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."" + ""grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"" + ""\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."" + ""msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"" + ""ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"" + ""mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"" + ""\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"" + ""r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\t"" + ""nameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004"" + ""namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Bool"" + ""ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\""com.sun.msv.datatype.xsd.Qname"" + ""Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"" + ""e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"" + ""\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSp"" + ""acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"" + ""p://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"" + ""e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"" + "".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"" + ""v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0013"" + ""psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018"" + ""L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.Simp"" + ""leNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018x"" + ""r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\rAuthorityKin"" + ""dt\u0000\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.AnyURIT"" + ""ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006anyURIq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""q\u0000~\u0000-q\u0000~\u0000\u001b"" + ""sq\u0000~\u0000$t\u0000\u0007Bindingq\u0000~\u0000(sq\u0000~\u0000\fppq\u0000~\u0000*sq\u0000~\u0000$t\u0000\bLocationq\u0000~\u0000(sr\u0000\u001d"" + ""com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\fq\u0000~\u0000\u0013p"" + ""q\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"" + ""cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"" + ""\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0012\u0001q\u0000~\u0000;sq\u0000~\u0000$t\u0000\u0010AuthorityBindingt\u0000%urn:oasis"" + "":names:tc:SAML:1.0:assertionsr\u0000\""com.sun.msv.grammar.Expressi"" + ""onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"" + ""onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"" + ""losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"" + ""/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001pq\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u0000\u000bq\u0000~\u00005"" + ""x"")); } return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment); }","comverifier createRawValidator(){if(schemaFragment==null){schemaFragment=com.SchemaDeserializer.deserialize((""pps""+""""+""""+""ms""+""""+""psr\u000fnamespaceURIqxpq""+""ype\u000bq""+""""));}return new com.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);}","['public', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'DocumentDeclaration', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'sun', '.', 'xml', '.', 'bind', '.', 'validator', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""¬í\x00\x05sr\x00\\\'com.sun.msv.grammar.trex.ElementPattern\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00""', '+', '""\\tnameClasst\x00\x1fLcom/sun/msv/grammar/NameClass;xr\x00\x1ecom.sun.msv.""', '+', '""grammar.ElementExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02Z\x00\x1aignoreUndeclaredAttributesL\x00""', '+', '""\\fcontentModelt\x00 Lcom/sun/msv/grammar/Expression;xr\x00\x1ecom.sun.""', '+', '""msv.grammar.Expressionø\x18\x82èN5~O\x02\x00\x02L\x00\x13epsilonReducibilityt\x00\x13Lj""', '+', '""ava/lang/Boolean;L\x00\x0bexpandedExpq\x00~\x00\x03xppp\x00sr\x00\x1fcom.sun.msv.gra""', '+', '""mmar.SequenceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00\x1dcom.sun.msv.grammar.BinaryExp""', '+', '""\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x04exp1q\x00~\x00\x03L\x00\x04exp2q\x00~\x00\x03xq\x00~\x00\x04ppsq\x00~\x00\x07ppsq\x00~\x00\x07pps""', '+', '""r\x00 com.sun.msv.grammar.AttributeExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\x03expq\x00~\x00\x03L\x00\\t""', '+', '""nameClassq\x00~\x00\x01xq\x00~\x00\x04ppsr\x00\x1bcom.sun.msv.grammar.DataExp\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x03L\x00\x02dtt\x00\x1fLorg/relaxng/datatype/Datatype;L\x00\x06exceptq\x00~\x00\x03L\x00\x04""', '+', '""namet\x00\x1dLcom/sun/msv/util/StringPair;xq\x00~\x00\x04sr\x00\x11java.lang.Bool""', '+', '""eanÍ r\x80Õ\x9cúî\x02\x00\x01Z\x00\x05valuexp\x00psr\x00\\""com.sun.msv.datatype.xsd.Qname""', '+', '""Type\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00*com.sun.msv.datatype.xsd.BuiltinAtomicTyp""', '+', '""e\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00%com.sun.msv.datatype.xsd.ConcreteType\x00\x00\x00\x00\x00\x00\x00""', '+', '""\x01\x02\x00\x00xr\x00\\\'com.sun.msv.datatype.xsd.XSDatatypeImpl\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x03L\x00""', '+', '""\\fnamespaceUrit\x00\x12Ljava/lang/String;L\x00\\btypeNameq\x00~\x00\x18L\x00\\nwhiteSp""', '+', '""acet\x00.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\x00 htt""', '+', '""p://www.w3.org/2001/XMLSchemat\x00\x05QNamesr\x005com.sun.msv.datatyp""', '+', '""e.xsd.WhiteSpaceProcessor$Collapse\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xr\x00,com.sun.msv""', '+', '"".datatype.xsd.WhiteSpaceProcessor\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpsr\x000com.sun.ms""', '+', '""v.grammar.Expression$NullSetExpression\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x04q\x00~\x00\x13""', '+', '""psr\x00\x1bcom.sun.msv.util.StringPairÐt\x1ejB\x8f\x8d\xa0\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18""', '+', '""L\x00\\fnamespaceURIq\x00~\x00\x18xpq\x00~\x00\x1cq\x00~\x00\x1bsr\x00#com.sun.msv.grammar.Simp""', '+', '""leNameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x02L\x00\\tlocalNameq\x00~\x00\x18L\x00\\fnamespaceURIq\x00~\x00\x18x""', '+', '""r\x00\x1dcom.sun.msv.grammar.NameClass\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xpt\x00\\rAuthorityKin""', '+', '""dt\x00\x00sq\x00~\x00\\fppsq\x00~\x00\x0eq\x00~\x00\x13psr\x00#com.sun.msv.datatype.xsd.AnyURIT""', '+', '""ype\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\x15q\x00~\x00\x1bt\x00\x06anyURIq\x00~\x00\x1fq\x00~\x00!sq\x00~\x00\\""q\x00~\x00-q\x00~\x00\x1b""', '+', '""sq\x00~\x00$t\x00\x07Bindingq\x00~\x00(sq\x00~\x00\\fppq\x00~\x00*sq\x00~\x00$t\x00\\bLocationq\x00~\x00(sr\x00\x1d""', '+', '""com.sun.msv.grammar.ChoiceExp\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00xq\x00~\x00\\bppsq\x00~\x00\\fq\x00~\x00\x13p""', '+', '""q\x00~\x00\x11sq\x00~\x00$t\x00\x04typet\x00)http://www.w3.org/2001/XMLSchema-instan""', '+', '""cesr\x000com.sun.msv.grammar.Expression$EpsilonExpression\x00\x00\x00\x00\x00\x00""', '+', '""\x00\x01\x02\x00\x00xq\x00~\x00\x04sq\x00~\x00\x12\x01q\x00~\x00;sq\x00~\x00$t\x00\x10AuthorityBindingt\x00%urn:oasis""', '+', '"":names:tc:SAML:1.0:assertionsr\x00\\""com.sun.msv.grammar.Expressi""', '+', '""onPool\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x01L\x00\\bexpTablet\x00/Lcom/sun/msv/grammar/Expressi""', '+', '""onPool$ClosedHash;xpsr\x00-com.sun.msv.grammar.ExpressionPool$C""', '+', '""losedHash×jÐNïèí\x1c\x03\x00\x03I\x00\x05countB\x00\\rstreamVersionL\x00\x06parentt\x00$Lcom""', '+', '""/sun/msv/grammar/ExpressionPool;xp\x00\x00\x00\x04\x01pq\x00~\x00\\tq\x00~\x00\\nq\x00~\x00\x0bq\x00~\x005""', '+', '""x""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'sun', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']","['comverifier', 'createRawValidator', '(', ')', '{', 'if', '(', 'schemaFragment', '==', 'null', ')', '{', 'schemaFragment', '=', 'com', '.', 'SchemaDeserializer', '.', 'deserialize', '(', '(', '""pps""', '+', '""""', '+', '""""', '+', '""ms""', '+', '""""', '+', '""psr\x0fnamespaceURIqxpq""', '+', '""ype\x0bq""', '+', '""""', ')', ')', ';', '}', 'return', 'new', 'com', '.', 'msv', '.', 'verifier', '.', 'regexp', '.', 'REDocumentDeclaration', '(', 'schemaFragment', ')', ';', '}']",137,56,6,5170,250,24,95.6082394092499,61.832061068702295,,,,-1,-1,-1,-1,False
L473_next_3.txt,code2seq,METHOD_NAME,token_wrong,0.4941,0.6178,3.1582,5.1274,"{'n_total': 131, 'n_valid': 17, 'n_correct': 13}",36.641917,@Override public Record next() { record.of(readAddress); readAddress = Unsafe.getUnsafe().getLong(readAddress - 8); return record; },Record next(){record(readAddress);readAddress.getUnsafe();},"['@', 'Override', 'public', 'Record', 'next', '(', ')', '{', 'record', '.', 'of', '(', 'readAddress', ')', ';', 'readAddress', '=', 'Unsafe', '.', 'getUnsafe', '(', ')', '.', 'getLong', '(', 'readAddress', '-', '8', ')', ';', 'return', 'record', ';', '}']","['Record', 'next', '(', ')', '{', 'record', '(', 'readAddress', ')', ';', 'readAddress', '.', 'getUnsafe', '(', ')', ';', '}']",34,17,6,132,59,10,59.83606557377049,60.71428571428571,,,,-1,-1,-1,-1,False
L474_setExcludeList_1.txt,code2seq,METHOD_NAME,token_wrong,0.6393,0.6532,3.2404,3.4282,"{'n_total': 347, 'n_valid': 34, 'n_correct': 27}",73.291136,"public void setExcludeList(String l) { String[] split = l.split("",""); excludeList.clear(); for (int i = 0; i < split.length; i++) excludeList.add(split[i].trim()); }","void setExcludeList(String l){("""");excludeList.clear();for(;;)add(split[i]);}","['public', 'void', 'setExcludeList', '(', 'String', 'l', ')', '{', 'String', '[', ']', 'split', '=', 'l', '.', 'split', '(', '"",""', ')', ';', 'excludeList', '.', 'clear', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'split', '.', 'length', ';', 'i', '++', ')', 'excludeList', '.', 'add', '(', 'split', '[', 'i', ']', '.', 'trim', '(', ')', ')', ';', '}']","['void', 'setExcludeList', '(', 'String', 'l', ')', '{', '(', '""""', ')', ';', 'excludeList', '.', 'clear', '(', ')', ';', 'for', '(', ';', ';', ')', 'add', '(', 'split', '[', 'i', ']', ')', ';', '}']",57,31,6,165,77,20,60.689655172413794,50.98039215686274,,,,-1,-1,-1,-1,False
L475_cancelFromNative_1.txt,code2seq,METHOD_NAME,token_wrong,0.5966,0.6672,29.1019,29.9161,"{'n_total': 455, 'n_valid': 49, 'n_correct': 43}",109.96367,"@SuppressWarnings(""unused"") private static void cancelFromNative(final Dialog dialog) { sHandler.post(new Runnable() { @Override public void run() { if (dialog instanceof IdDialog) ((IdDialog) dialog).dismiss(); if (sCallbacks != null && dialog != null) sCallbacks.onCanceled(dialog); } }); }",@SuppressWarnings()void cancelFromNative(Dialog dialog){(new Runnable(){run(){if(IdDialog)(dialog);if(sCallbacks)onCanceled();}});},"['@', 'SuppressWarnings', '(', '""unused""', ')', 'private', 'static', 'void', 'cancelFromNative', '(', 'final', 'Dialog', 'dialog', ')', '{', 'sHandler', '.', 'post', '(', 'new', 'Runnable', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'if', '(', 'dialog', 'instanceof', 'IdDialog', ')', '(', '(', 'IdDialog', ')', 'dialog', ')', '.', 'dismiss', '(', ')', ';', 'if', '(', 'sCallbacks', '!=', 'null', '&&', 'dialog', '!=', 'null', ')', 'sCallbacks', '.', 'onCanceled', '(', 'dialog', ')', ';', '}', '}', ')', ';', '}']","['@', 'SuppressWarnings', '(', ')', 'void', 'cancelFromNative', '(', 'Dialog', 'dialog', ')', '{', '(', 'new', 'Runnable', '(', ')', '{', 'run', '(', ')', '{', 'if', '(', 'IdDialog', ')', '(', 'dialog', ')', ';', 'if', '(', 'sCallbacks', ')', 'onCanceled', '(', ')', ';', '}', '}', ')', ';', '}']",71,42,6,292,131,22,59.62962962962963,44.61538461538462,,,,-1,-1,-1,-1,False
L476_tableInfoMap_1.txt,code2seq,METHOD_NAME,token_wrong,0.8086,0.7794,16.683,15.7938,"{'n_total': 505, 'n_valid': 63, 'n_correct': 42}",141.229552,"private static Map<String, TableInfo> tableInfoMap(Collection<TableInfo> tableInfos) { Iterator<TableInfo> iterator = tableInfos.iterator(); Map<String, TableInfo> results = new HashMap<String, TableInfo>(tableInfos.size()); while (iterator.hasNext()) { TableInfo itemInfo = iterator.next(); results.put(itemInfo.getName().toUpperCase(), itemInfo); } return results; }",Map<TableInfo>tableInfoMap(Collection tableInfos){Iterator<TableInfo>iterator;Map<TableInfo>results=new HashMap<>(tableInfos.size());while(iterator){TableInfo.put(itemInfo.getName);}},"['private', 'static', 'Map', '<', 'String', ',', 'TableInfo', '>', 'tableInfoMap', '(', 'Collection', '<', 'TableInfo', '>', 'tableInfos', ')', '{', 'Iterator', '<', 'TableInfo', '>', 'iterator', '=', 'tableInfos', '.', 'iterator', '(', ')', ';', 'Map', '<', 'String', ',', 'TableInfo', '>', 'results', '=', 'new', 'HashMap', '<', 'String', ',', 'TableInfo', '>', '(', 'tableInfos', '.', 'size', '(', ')', ')', ';', 'while', '(', 'iterator', '.', 'hasNext', '(', ')', ')', '{', 'TableInfo', 'itemInfo', '=', 'iterator', '.', 'next', '(', ')', ';', 'results', '.', 'put', '(', 'itemInfo', '.', 'getName', '(', ')', '.', 'toUpperCase', '(', ')', ',', 'itemInfo', ')', ';', '}', 'return', 'results', ';', '}']","['Map', '<', 'TableInfo', '>', 'tableInfoMap', '(', 'Collection', 'tableInfos', ')', '{', 'Iterator', '<', 'TableInfo', '>', 'iterator', ';', 'Map', '<', 'TableInfo', '>', 'results', '=', 'new', 'HashMap', '<', '>', '(', 'tableInfos', '.', 'size', '(', ')', ')', ';', 'while', '(', 'iterator', ')', '{', 'TableInfo', '.', 'put', '(', 'itemInfo', '.', 'getName', ')', ';', '}', '}']",92,50,6,368,183,18,52.85714285714286,48.837209302325576,,,,-1,-1,-1,-1,False
L477_readAsByteArray_1.txt,code2seq,METHOD_NAME,token_wrong,0.4257,0.4736,23.2056,24.8991,"{'n_total': 193, 'n_valid': 24, 'n_correct': 14}",48.030994,private byte[] readAsByteArray(Response response) throws IOException { final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); ((StreamingOutput) response.getEntity()).write(outputStream); return outputStream.toByteArray(); },byte[]readAsByteArray(Response response)throws IOException{((StreamingOutput)response.getEntity).outputStream.toByteArray();},"['private', 'byte', '[', ']', 'readAsByteArray', '(', 'Response', 'response', ')', 'throws', 'IOException', '{', 'final', 'ByteArrayOutputStream', 'outputStream', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', '(', '(', 'StreamingOutput', ')', 'response', '.', 'getEntity', '(', ')', ')', '.', 'write', '(', 'outputStream', ')', ';', 'return', 'outputStream', '.', 'toByteArray', '(', ')', ';', '}']","['byte', '[', ']', 'readAsByteArray', '(', 'Response', 'response', ')', 'throws', 'IOException', '{', '(', '(', 'StreamingOutput', ')', 'response', '.', 'getEntity', ')', '.', 'outputStream', '.', 'toByteArray', '(', ')', ';', '}']",45,27,6,241,125,21,52.72727272727272,46.15384615384615,,,,-1,-1,-1,-1,False
L478_updateMessageBundleProperty_1.txt,code2seq,METHOD_NAME,token_wrong,0.793,0.814,15.6665,14.751,"{'n_total': 258, 'n_valid': 37, 'n_correct': 17}",78.327584,"@Override @Transactional public void updateMessageBundleProperty(MessageBundleProperty mbp) { String key = super.getIndexKeyName(mbp.getBaseName(), mbp.getModuleName(), mbp.getLocale()); super.updateMessageBundleProperty(mbp); cache.remove(key); }","void updateMessageBundleProperty(MessageBundleProperty mbp){key=super.getIndexKeyName(mbp(),mbp.getLocale);super.updateMessageBundleProperty(mbp);cache.remove;}","['@', 'Override', '@', 'Transactional', 'public', 'void', 'updateMessageBundleProperty', '(', 'MessageBundleProperty', 'mbp', ')', '{', 'String', 'key', '=', 'super', '.', 'getIndexKeyName', '(', 'mbp', '.', 'getBaseName', '(', ')', ',', 'mbp', '.', 'getModuleName', '(', ')', ',', 'mbp', '.', 'getLocale', '(', ')', ')', ';', 'super', '.', 'updateMessageBundleProperty', '(', 'mbp', ')', ';', 'cache', '.', 'remove', '(', 'key', ')', ';', '}']","['void', 'updateMessageBundleProperty', '(', 'MessageBundleProperty', 'mbp', ')', '{', 'key', '=', 'super', '.', 'getIndexKeyName', '(', 'mbp', '(', ')', ',', 'mbp', '.', 'getLocale', ')', ';', 'super', '.', 'updateMessageBundleProperty', '(', 'mbp', ')', ';', 'cache', '.', 'remove', ';', '}']",53,34,6,247,160,33,40.654205607476634,40.42553191489361,,,,-1,-1,-1,-1,False
L479_beforeGetParameter_1.txt,code2seq,METHOD_NAME,token_wrong,0.7396,0.5179,20.9408,18.6692,"{'n_total': 161, 'n_valid': 17, 'n_correct': 14}",38.284332,private void beforeGetParameter() throws IOException { if (!parametersAreComplete) { completeParameters(); parametersAreComplete = true; } },void beforeGetParameter()throws IOException{if(parametersAreComplete){parametersAreComplete=true;}},"['private', 'void', 'beforeGetParameter', '(', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'parametersAreComplete', ')', '{', 'completeParameters', '(', ')', ';', 'parametersAreComplete', '=', 'true', ';', '}', '}']","['void', 'beforeGetParameter', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'parametersAreComplete', ')', '{', 'parametersAreComplete', '=', 'true', ';', '}', '}']",24,18,6,140,99,24,35.3448275862069,33.33333333333333,,,,-1,-1,-1,-1,False
L480_processBytes_1.txt,code2seq,METHOD_NAME,token_wrong,0.7209,0.5968,16.7713,15.3795,"{'n_total': 406, 'n_valid': 56, 'n_correct': 31}",119.45318,"@NotNull public static IptcDirectory processBytes(@NotNull String filePath) throws IOException { Metadata metadata = new Metadata(); byte[] bytes = FileUtil.readBytes(filePath); new IptcReader().extract(new SequentialByteArrayReader(bytes), metadata, bytes.length); IptcDirectory directory = metadata.getFirstDirectoryOfType(IptcDirectory.class); assertNotNull(directory); return directory; }","IptcDirectory processBytes(@NotNull String filePath)throws IOException{Metadata();readBytes().extract(SequentialByteArrayReader(),length);directory=getFirstDirectoryOfType(IptcDirectory);(directory);return directory;}","['@', 'NotNull', 'public', 'static', 'IptcDirectory', 'processBytes', '(', '@', 'NotNull', 'String', 'filePath', ')', 'throws', 'IOException', '{', 'Metadata', 'metadata', '=', 'new', 'Metadata', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'FileUtil', '.', 'readBytes', '(', 'filePath', ')', ';', 'new', 'IptcReader', '(', ')', '.', 'extract', '(', 'new', 'SequentialByteArrayReader', '(', 'bytes', ')', ',', 'metadata', ',', 'bytes', '.', 'length', ')', ';', 'IptcDirectory', 'directory', '=', 'metadata', '.', 'getFirstDirectoryOfType', '(', 'IptcDirectory', '.', 'class', ')', ';', 'assertNotNull', '(', 'directory', ')', ';', 'return', 'directory', ';', '}']","['IptcDirectory', 'processBytes', '(', '@', 'NotNull', 'String', 'filePath', ')', 'throws', 'IOException', '{', 'Metadata', '(', ')', ';', 'readBytes', '(', ')', '.', 'extract', '(', 'SequentialByteArrayReader', '(', ')', ',', 'length', ')', ';', 'directory', '=', 'getFirstDirectoryOfType', '(', 'IptcDirectory', ')', ';', '(', 'directory', ')', ';', 'return', 'directory', ';', '}']",76,43,6,392,217,18,46.79144385026738,47.14285714285714,,,,-1,-1,-1,-1,False
L481_replaceString_1.txt,code2seq,METHOD_NAME,token_wrong,0.425,0.3465,4.8585,4.7895,"{'n_total': 405, 'n_valid': 43, 'n_correct': 38}",96.449397,"public static String replaceString(String originalString, String token, String newString) { int lenToken = token.length(); int idx = originalString.indexOf(token); while (idx != -1) { originalString = originalString.substring(0, idx) + newString + originalString.substring(idx + lenToken); idx = originalString.indexOf(token, idx + lenToken); } return originalString; }","String replaceString(String token,String newString){lenToken();idx=(token);while(1){originalString(0,lenToken);}}","['public', 'static', 'String', 'replaceString', '(', 'String', 'originalString', ',', 'String', 'token', ',', 'String', 'newString', ')', '{', 'int', 'lenToken', '=', 'token', '.', 'length', '(', ')', ';', 'int', 'idx', '=', 'originalString', '.', 'indexOf', '(', 'token', ')', ';', 'while', '(', 'idx', '!=', '-', '1', ')', '{', 'originalString', '=', 'originalString', '.', 'substring', '(', '0', ',', 'idx', ')', '+', 'newString', '+', 'originalString', '.', 'substring', '(', 'idx', '+', 'lenToken', ')', ';', 'idx', '=', 'originalString', '.', 'indexOf', '(', 'token', ',', 'idx', '+', 'lenToken', ')', ';', '}', 'return', 'originalString', ';', '}']","['String', 'replaceString', '(', 'String', 'token', ',', 'String', 'newString', ')', '{', 'lenToken', '(', ')', ';', 'idx', '=', '(', 'token', ')', ';', 'while', '(', '1', ')', '{', 'originalString', '(', '0', ',', 'lenToken', ')', ';', '}', '}']",82,34,6,369,113,19,73.14285714285714,63.1578947368421,,,,-1,-1,-1,-1,False
L482_getResponseHeaderNames_1.txt,code2seq,METHOD_NAME,token_wrong,0.8218,0.937,25.1509,37.2117,"{'n_total': 347, 'n_valid': 54, 'n_correct': 30}",112.006489,"@Override public Iterator<String> getResponseHeaderNames() throws IOException { try { return JmsTransportUtils.getHeaderNames(responseMessage); } catch (JMSException ex) { throw new JmsTransportException(""Could not get property names"", ex); } }","Iterator<String>getResponseHeaderNames()throws IOException{try{JmsTransportUtils();}catch(JMSException ex){(""get property names"");}}","['@', 'Override', 'public', 'Iterator', '<', 'String', '>', 'getResponseHeaderNames', '(', ')', 'throws', 'IOException', '{', 'try', '{', 'return', 'JmsTransportUtils', '.', 'getHeaderNames', '(', 'responseMessage', ')', ';', '}', 'catch', '(', 'JMSException', 'ex', ')', '{', 'throw', 'new', 'JmsTransportException', '(', '""Could not get property names""', ',', 'ex', ')', ';', '}', '}']","['Iterator', '<', 'String', '>', 'getResponseHeaderNames', '(', ')', 'throws', 'IOException', '{', 'try', '{', 'JmsTransportUtils', '(', ')', ';', '}', 'catch', '(', 'JMSException', 'ex', ')', '{', '(', '""get property names""', ')', ';', '}', '}']",41,29,6,244,132,28,51.85185185185185,34.285714285714285,,,,-1,-1,-1,-1,False
L483_notifyFallback_1.txt,code2seq,METHOD_NAME,token_wrong,0.4931,0.2779,18.4611,16.724,"{'n_total': 228, 'n_valid': 31, 'n_correct': 16}",65.70306,public void notifyFallback(boolean isFallback) throws IOException { if (isFallback && getMaximumVersion().isLaterVersionOf(clientVersion)) { throw new TlsFatalAlert(AlertDescription.inappropriate_fallback); } },void notifyFallback(boolean isFallback)throws IOException{if(isFallback&getMaximumVersion.isLaterVersionOf(clientVersion)){new TlsFatalAlert(AlertDescription.inappropriate_fallback);}},"['public', 'void', 'notifyFallback', '(', 'boolean', 'isFallback', ')', 'throws', 'IOException', '{', 'if', '(', 'isFallback', '&&', 'getMaximumVersion', '(', ')', '.', 'isLaterVersionOf', '(', 'clientVersion', ')', ')', '{', 'throw', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'inappropriate_fallback', ')', ';', '}', '}']","['void', 'notifyFallback', '(', 'boolean', 'isFallback', ')', 'throws', 'IOException', '{', 'if', '(', 'isFallback', '&', 'getMaximumVersion', '.', 'isLaterVersionOf', '(', 'clientVersion', ')', ')', '{', 'new', 'TlsFatalAlert', '(', 'AlertDescription', '.', 'inappropriate_fallback', ')', ';', '}', '}']",35,31,6,210,184,20,13.684210526315791,13.793103448275861,,,,-1,-1,-1,-1,False
L484_service_1.txt,code2seq,METHOD_NAME,token_wrong,0.9094,0.6637,14.9357,10.4615,"{'n_total': 337, 'n_valid': 38, 'n_correct': 35}",81.846009,"@Override protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException { response.setContentType(""text/html; charset="" + CHARSET); PrintWriter writer = response.getWriter(); writer.println(""<!DOCTYPE HTML PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EN\"" \""http://www.w3.org/TR/html4/loose.dtd\"">""); writer.println(""<html><head><title>JSP Chat</title></head><body bgcolor=\""#FFFFFF\"">""); writer.println(""Chat example only supports Comet processing. ""); writer.println(""Configure a connector that supports Comet and try again.""); writer.println(""</body></html>""); }","void service(HttpServletRequest request,HttpServletResponse response)throws ServletException{(""""+CHARSET);("""");println("""");}","['@', 'Override', 'protected', 'void', 'service', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'response', '.', 'setContentType', '(', '""text/html; charset=""', '+', 'CHARSET', ')', ';', 'PrintWriter', 'writer', '=', 'response', '.', 'getWriter', '(', ')', ';', 'writer', '.', 'println', '(', '""<!DOCTYPE HTML PUBLIC \\""-//W3C//DTD HTML 4.01 Transitional//EN\\"" \\""http://www.w3.org/TR/html4/loose.dtd\\"">""', ')', ';', 'writer', '.', 'println', '(', '""<html><head><title>JSP Chat</title></head><body bgcolor=\\""#FFFFFF\\"">""', ')', ';', 'writer', '.', 'println', '(', '""Chat example only supports Comet processing. ""', ')', ';', 'writer', '.', 'println', '(', '""Configure a connector that supports Comet and try again.""', ')', ';', 'writer', '.', 'println', '(', '""</body></html>""', ')', ';', '}']","['void', 'service', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'ServletException', '{', '(', '""""', '+', 'CHARSET', ')', ';', '(', '""""', ')', ';', 'println', '(', '""""', ')', ';', '}']",71,28,6,621,124,13,81.74342105263158,66.15384615384615,,,,-1,-1,-1,-1,False
L485_checkClearSigned_1.txt,code2seq,METHOD_NAME,token_wrong,0.4498,0.5495,12.4513,14.2625,"{'n_total': 454, 'n_valid': 49, 'n_correct': 34}",105.70003,"private void checkClearSigned(String message) throws Exception { createTestData(message, ""test.txt""); ClearSignedFileProcessor.main(new String[] { ""-s"", ""test.txt"", ""secret.bpg"", ""password"" }); ClearSignedFileProcessor.main(new String[] { ""-v"", ""test.txt.asc"", ""pub.bpg"" }); }","void checkClearSigned()throws Exception{createTestData(message,"""");(new String[]{"""","""",""password""});ClearSignedFileProcessor.main(new String[]{""v"",""testasc"",""""});}","['private', 'void', 'checkClearSigned', '(', 'String', 'message', ')', 'throws', 'Exception', '{', 'createTestData', '(', 'message', ',', '""test.txt""', ')', ';', 'ClearSignedFileProcessor', '.', 'main', '(', 'new', 'String', '[', ']', '{', '""-s""', ',', '""test.txt""', ',', '""secret.bpg""', ',', '""password""', '}', ')', ';', 'ClearSignedFileProcessor', '.', 'main', '(', 'new', 'String', '[', ']', '{', '""-v""', ',', '""test.txt.asc""', ',', '""pub.bpg""', '}', ')', ';', '}']","['void', 'checkClearSigned', '(', ')', 'throws', 'Exception', '{', 'createTestData', '(', 'message', ',', '""""', ')', ';', '(', 'new', 'String', '[', ']', '{', '""""', ',', '""""', ',', '""password""', '}', ')', ';', 'ClearSignedFileProcessor', '.', 'main', '(', 'new', 'String', '[', ']', '{', '""v""', ',', '""testasc""', ',', '""""', '}', ')', ';', '}']",54,46,6,276,163,22,44.48818897637795,16.666666666666664,,,,-1,-1,-1,-1,False
L486_getAddCommentFlag_1.txt,code2seq,METHOD_NAME,token_wrong,0.7695,0.807,13.8699,13.3447,"{'n_total': 182, 'n_valid': 37, 'n_correct': 18}",73.793498,public boolean getAddCommentFlag() { if (getItemMetaDataByLabel(ItemMetaDataIfc.ADD_COMMENT_MATRIX) != null) return Boolean.parseBoolean(getItemMetaDataByLabel(ItemMetaDataIfc.ADD_COMMENT_MATRIX)); return false; },boolean getAddCommentFlag(){if(null)((ItemMetaDataIfc.ADD_COMMENT));},"['public', 'boolean', 'getAddCommentFlag', '(', ')', '{', 'if', '(', 'getItemMetaDataByLabel', '(', 'ItemMetaDataIfc', '.', 'ADD_COMMENT_MATRIX', ')', '!=', 'null', ')', 'return', 'Boolean', '.', 'parseBoolean', '(', 'getItemMetaDataByLabel', '(', 'ItemMetaDataIfc', '.', 'ADD_COMMENT_MATRIX', ')', ')', ';', 'return', 'false', ';', '}']","['boolean', 'getAddCommentFlag', '(', ')', '{', 'if', '(', 'null', ')', '(', '(', 'ItemMetaDataIfc', '.', 'ADD_COMMENT', ')', ')', ';', '}']",34,18,6,213,69,23,75.78947368421053,57.14285714285714,,,,-1,-1,-1,-1,False
L487_createDocumentFromSource_1.txt,code2seq,METHOD_NAME,token_wrong,0.349,0.8428,16.1736,24.056,"{'n_total': 471, 'n_valid': 49, 'n_correct': 37}",110.992279,"private Document createDocumentFromSource(Source source) { try { DOMResult result = new DOMResult(); transformerHelper.transform(source, result); return (Document) result.getNode(); } catch (TransformerException ex) { fail(""Could not transform source to DOMResult"" + ex.getMessage()); return null; } }","Document createDocumentFromSource(Source source){try{(source);(Document);}catch(TransformerException ex){(""transform""+getMessage());}}","['private', 'Document', 'createDocumentFromSource', '(', 'Source', 'source', ')', '{', 'try', '{', 'DOMResult', 'result', '=', 'new', 'DOMResult', '(', ')', ';', 'transformerHelper', '.', 'transform', '(', 'source', ',', 'result', ')', ';', 'return', '(', 'Document', ')', 'result', '.', 'getNode', '(', ')', ';', '}', 'catch', '(', 'TransformerException', 'ex', ')', '{', 'fail', '(', '""Could not transform source to DOMResult""', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', '}']","['Document', 'createDocumentFromSource', '(', 'Source', 'source', ')', '{', 'try', '{', '(', 'source', ')', ';', '(', 'Document', ')', ';', '}', 'catch', '(', 'TransformerException', 'ex', ')', '{', '(', '""transform""', '+', 'getMessage', '(', ')', ')', ';', '}', '}']",60,34,6,301,134,30,61.62361623616236,48.148148148148145,,,,-1,-1,-1,-1,False
L488_setLastModifiedTime_1.txt,code2seq,METHOD_NAME,token_wrong,0.8075,0.8068,3.1299,3.0292,"{'n_total': 145, 'n_valid': 15, 'n_correct': 13}",33.2948,private void setLastModifiedTime() { if (isEntryExpirationEnabled()) { lastModifiedTime = System.currentTimeMillis(); } },void setLastModifiedTime(){if(isEntryExpirationEnabled){lastModifiedTime=currentTimeMillis();}},"['private', 'void', 'setLastModifiedTime', '(', ')', '{', 'if', '(', 'isEntryExpirationEnabled', '(', ')', ')', '{', 'lastModifiedTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', '}', '}']","['void', 'setLastModifiedTime', '(', ')', '{', 'if', '(', 'isEntryExpirationEnabled', ')', '{', 'lastModifiedTime', '=', 'currentTimeMillis', '(', ')', ';', '}', '}']",23,18,6,121,95,25,27.083333333333332,29.411764705882355,,,,-1,-1,-1,-1,False
L489_requestProducts_1.txt,code2seq,METHOD_NAME,token_wrong,0.5534,0.5611,9.1425,5.2767,"{'n_total': 382, 'n_valid': 42, 'n_correct': 33}",91.073326,"public void requestProducts() { if (null != m_productListListener) { if (m_enableDebugLogging) { Log.i(LOG_TAG, ""requestProducts m_productListListener is valid""); } ouyaFacade.requestProductList(PRODUCT_IDENTIFIER_LIST, m_productListListener); } else { Log.i(LOG_TAG, ""requestProducts m_productListListener is null""); } }","void requestProducts(){if(null!=productListListener){{i(LOG,""valid"");}ouyaFacade.requestProductList();}{Log(LOG,""requestProducts"");}}","['public', 'void', 'requestProducts', '(', ')', '{', 'if', '(', 'null', '!=', 'm_productListListener', ')', '{', 'if', '(', 'm_enableDebugLogging', ')', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""requestProducts m_productListListener is valid""', ')', ';', '}', 'ouyaFacade', '.', 'requestProductList', '(', 'PRODUCT_IDENTIFIER_LIST', ',', 'm_productListListener', ')', ';', '}', 'else', '{', 'Log', '.', 'i', '(', 'LOG_TAG', ',', '""requestProducts m_productListListener is null""', ')', ';', '}', '}']","['void', 'requestProducts', '(', ')', '{', 'if', '(', 'null', '!=', 'productListListener', ')', '{', '{', 'i', '(', 'LOG', ',', '""valid""', ')', ';', '}', 'ouyaFacade', '.', 'requestProductList', '(', ')', ';', '}', '{', 'Log', '(', 'LOG', ',', '""requestProducts""', ')', ';', '}', '}']",51,38,6,321,133,21,62.66666666666667,28.888888888888886,,,,-1,-1,-1,-1,False
L490_getPrettyName_1.txt,code2seq,METHOD_NAME,token_wrong,0.9893,0.7484,23.8344,18.5658,"{'n_total': 220, 'n_valid': 23, 'n_correct': 23}",49.533625,"public String getPrettyName() { if (isArray()) { return ""ARRAY<"" + getArrayElementType().toString() + "">""; } if (isMap()) { return ""MAP<STRING, "" + getMapValueType().toString() + "">""; } return toString(); }",String getPrettyName(){if(isArray()){}if(isMap()){}},"['public', 'String', 'getPrettyName', '(', ')', '{', 'if', '(', 'isArray', '(', ')', ')', '{', 'return', '""ARRAY<""', '+', 'getArrayElementType', '(', ')', '.', 'toString', '(', ')', '+', '"">""', ';', '}', 'if', '(', 'isMap', '(', ')', ')', '{', 'return', '""MAP<STRING, ""', '+', 'getMapValueType', '(', ')', '.', 'toString', '(', ')', '+', '"">""', ';', '}', 'return', 'toString', '(', ')', ';', '}']","['String', 'getPrettyName', '(', ')', '{', 'if', '(', 'isArray', '(', ')', ')', '{', '}', 'if', '(', 'isMap', '(', ')', ')', '{', '}', '}']",54,22,6,206,52,19,82.35294117647058,66.66666666666666,,,,-1,-1,-1,-1,False
L491_createCachedContextHolder_1.txt,code2seq,METHOD_NAME,token_wrong,0.5164,0.4945,27.5764,23.7021,"{'n_total': 496, 'n_valid': 86, 'n_correct': 26}",179.300395,@Test public void createCachedContextHolder() { final ContextCacheSize cacheSize = mock(ContextCacheSize.class); when(cacheSize.getDesiredCacheSize()).thenReturn(5); final ContextHolderCache cache = new ContextHolderCache(cacheSize); final ContextHolder cachedContext = cache.createCachedContextHolder(); assertThat(cachedContext).isNotNull(); assertThat(cachedContext.getCacheKey()).isNotNull(); },@Test void createCachedContextHolder(){ContextCacheSize cacheSize=(ContextCacheSize.class);when(cacheSize.getDesiredCacheSize).ContextHolderCache(cacheSize);ContextHolder=cache.createCachedContextHolder();assertThat().isNotNull();assertThat(cachedContext).isNotNull();},"['@', 'Test', 'public', 'void', 'createCachedContextHolder', '(', ')', '{', 'final', 'ContextCacheSize', 'cacheSize', '=', 'mock', '(', 'ContextCacheSize', '.', 'class', ')', ';', 'when', '(', 'cacheSize', '.', 'getDesiredCacheSize', '(', ')', ')', '.', 'thenReturn', '(', '5', ')', ';', 'final', 'ContextHolderCache', 'cache', '=', 'new', 'ContextHolderCache', '(', 'cacheSize', ')', ';', 'final', 'ContextHolder', 'cachedContext', '=', 'cache', '.', 'createCachedContextHolder', '(', ')', ';', 'assertThat', '(', 'cachedContext', ')', '.', 'isNotNull', '(', ')', ';', 'assertThat', '(', 'cachedContext', '.', 'getCacheKey', '(', ')', ')', '.', 'isNotNull', '(', ')', ';', '}']","['@', 'Test', 'void', 'createCachedContextHolder', '(', ')', '{', 'ContextCacheSize', 'cacheSize', '=', '(', 'ContextCacheSize', '.', 'class', ')', ';', 'when', '(', 'cacheSize', '.', 'getDesiredCacheSize', ')', '.', 'ContextHolderCache', '(', 'cacheSize', ')', ';', 'ContextHolder', '=', 'cache', '.', 'createCachedContextHolder', '(', ')', ';', 'assertThat', '(', ')', '.', 'isNotNull', '(', ')', ';', 'assertThat', '(', 'cachedContext', ')', '.', 'isNotNull', '(', ')', ';', '}']",76,54,6,398,269,31,35.14986376021799,31.428571428571427,,,,-1,-1,-1,-1,False
L492_trimTrailingString_1.txt,code2seq,METHOD_NAME,token_wrong,0.2435,0.5703,12.738,15.9544,"{'n_total': 329, 'n_valid': 38, 'n_correct': 29}",85.625179,"private String trimTrailingString(String cmRequestedSectionString, String trailingString) { if (cmRequestedSectionString.endsWith(trailingString)) { cmRequestedSectionString = cmRequestedSectionString.substring(0, cmRequestedSectionString.lastIndexOf(trailingString)); } return cmRequestedSectionString; }","String trimTrailingString(String cmRequestedSectionString,String trailingString){if((trailingString)){(cmRequestedSectionString());}}","['private', 'String', 'trimTrailingString', '(', 'String', 'cmRequestedSectionString', ',', 'String', 'trailingString', ')', '{', 'if', '(', 'cmRequestedSectionString', '.', 'endsWith', '(', 'trailingString', ')', ')', '{', 'cmRequestedSectionString', '=', 'cmRequestedSectionString', '.', 'substring', '(', '0', ',', 'cmRequestedSectionString', '.', 'lastIndexOf', '(', 'trailingString', ')', ')', ';', '}', 'return', 'cmRequestedSectionString', ';', '}']","['String', 'trimTrailingString', '(', 'String', 'cmRequestedSectionString', ',', 'String', 'trailingString', ')', '{', 'if', '(', '(', 'trailingString', ')', ')', '{', '(', 'cmRequestedSectionString', '(', ')', ')', ';', '}', '}']",42,25,6,305,133,24,61.20996441281139,47.22222222222222,,,,-1,-1,-1,-1,False
L493_lowercase_1.txt,code2seq,METHOD_NAME,token_wrong,0.7707,0.4687,5.4086,7.2668,"{'n_total': 223, 'n_valid': 27, 'n_correct': 20}",54.450076,"@Bean public Function<Flux<Foo>, Flux<Bar>> lowercase() { return flux -> flux.log().map(value -> new Bar(value.lowercase())); }","Function<Flux<Foo>,Flux<Bar>>lowercase(){return flux>(-(lowercase()));}","['@', 'Bean', 'public', 'Function', '<', 'Flux', '<', 'Foo', '>', ',', 'Flux', '<', 'Bar', '>', '>', 'lowercase', '(', ')', '{', 'return', 'flux', '->', 'flux', '.', 'log', '(', ')', '.', 'map', '(', 'value', '->', 'new', 'Bar', '(', 'value', '.', 'lowercase', '(', ')', ')', ')', ';', '}']","['Function', '<', 'Flux', '<', 'Foo', '>', ',', 'Flux', '<', 'Bar', '>', '>', 'lowercase', '(', ')', '{', 'return', 'flux', '>', '(', '-', '(', 'lowercase', '(', ')', ')', ')', ';', '}']",44,29,6,127,71,15,50.0,39.473684210526315,,,,-1,-1,-1,-1,False
L494_isPageRestorable_1.txt,code2seq,METHOD_NAME,token_wrong,0.7625,0.581,19.7254,18.5641,"{'n_total': 387, 'n_valid': 44, 'n_correct': 37}",89.349983,"private boolean isPageRestorable(HttpServletRequest request) { if (RequestHelper.TITLE_PANEL.equals(request.getParameter(RequestHelper.PANEL))) return false; if (WikiPageAction.PUBLICVIEW_ACTION.getName().equals(request.getParameter(RequestHelper.ACTION))) return false; if (""GET"".equalsIgnoreCase(request.getMethod())) return true; return false; }","boolean isPageRestorable(){if(((PANEL)))(WikiPageAction.ACTION((RequestHelper)));if("""".equalsIgnoreCase());}","['private', 'boolean', 'isPageRestorable', '(', 'HttpServletRequest', 'request', ')', '{', 'if', '(', 'RequestHelper', '.', 'TITLE_PANEL', '.', 'equals', '(', 'request', '.', 'getParameter', '(', 'RequestHelper', '.', 'PANEL', ')', ')', ')', 'return', 'false', ';', 'if', '(', 'WikiPageAction', '.', 'PUBLICVIEW_ACTION', '.', 'getName', '(', ')', '.', 'equals', '(', 'request', '.', 'getParameter', '(', 'RequestHelper', '.', 'ACTION', ')', ')', ')', 'return', 'false', ';', 'if', '(', '""GET""', '.', 'equalsIgnoreCase', '(', 'request', '.', 'getMethod', '(', ')', ')', ')', 'return', 'true', ';', 'return', 'false', ';', '}']","['boolean', 'isPageRestorable', '(', ')', '{', 'if', '(', '(', '(', 'PANEL', ')', ')', ')', '(', 'WikiPageAction', '.', 'ACTION', '(', '(', 'RequestHelper', ')', ')', ')', ';', 'if', '(', '""""', '.', 'equalsIgnoreCase', '(', ')', ')', ';', '}']",74,34,6,348,108,22,73.61963190184049,58.82352941176471,,,,-1,-1,-1,-1,False
L495_rebalance_1.txt,code2seq,METHOD_NAME,token_wrong,0.4674,0.5333,10.0246,13.0307,"{'n_total': 182, 'n_valid': 24, 'n_correct': 19}",50.235824,"@Override public void rebalance(final int newTaskIndex, final int newTotalNumTasks) { checkState(active, ""Cannot rebalance if state is not active (a ZK connection"" + "" is necessary).""); this.taskIndex = newTaskIndex; this.totalNumTasks = newTotalNumTasks; commitShardStates(); bootstrapStateFromZookeeper(); }","void rebalance(int newTotalNumTasks){checkState(active,"""");taskIndex=bootstrapStateFromZookeeper();}","['@', 'Override', 'public', 'void', 'rebalance', '(', 'final', 'int', 'newTaskIndex', ',', 'final', 'int', 'newTotalNumTasks', ')', '{', 'checkState', '(', 'active', ',', '""Cannot rebalance if state is not active (a ZK connection""', '+', '"" is necessary).""', ')', ';', 'this', '.', 'taskIndex', '=', 'newTaskIndex', ';', 'this', '.', 'totalNumTasks', '=', 'newTotalNumTasks', ';', 'commitShardStates', '(', ')', ';', 'bootstrapStateFromZookeeper', '(', ')', ';', '}']","['void', 'rebalance', '(', 'int', 'newTotalNumTasks', ')', '{', 'checkState', '(', 'active', ',', '""""', ')', ';', 'taskIndex', '=', 'bootstrapStateFromZookeeper', '(', ')', ';', '}']",45,21,6,309,100,15,71.08843537414967,61.53846153846154,,,,-1,-1,-1,-1,False
L496_getSerializable_1.txt,code2seq,METHOD_NAME,token_wrong,0.9643,0.9058,7.9536,5.7671,"{'n_total': 340, 'n_valid': 32, 'n_correct': 29}",65.231026,"@Test public void getSerializable() { assertTrue(mCacheUtils1.getSerializable(""serializable1"").equals(mSerializableTest)); assertTrue(mCacheUtils1.getSerializable(""serializable1"", null).equals(mSerializableTest)); assertNull(mCacheUtils1.getSerializable(""parcelable2"", null)); assertTrue(mCacheUtils2.getSerializable(""serializable2"").equals(mSerializableTest)); assertTrue(mCacheUtils2.getSerializable(""serializable2"", null).equals(mSerializableTest)); assertNull(mCacheUtils2.getSerializable(""parcelable1"", null)); }","void getSerializable(){(mCacheUtils());(getSerializable("""",null).equals(mSerializableTest));(mCacheUtils("""",null));}","['@', 'Test', 'public', 'void', 'getSerializable', '(', ')', '{', 'assertTrue', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""serializable1""', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""serializable1""', ',', 'null', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertNull', '(', 'mCacheUtils1', '.', 'getSerializable', '(', '""parcelable2""', ',', 'null', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""serializable2""', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertTrue', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""serializable2""', ',', 'null', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', 'assertNull', '(', 'mCacheUtils2', '.', 'getSerializable', '(', '""parcelable1""', ',', 'null', ')', ')', ';', '}']","['void', 'getSerializable', '(', ')', '{', '(', 'mCacheUtils', '(', ')', ')', ';', '(', 'getSerializable', '(', '""""', ',', 'null', ')', '.', 'equals', '(', 'mSerializableTest', ')', ')', ';', '(', 'mCacheUtils', '(', '""""', ',', 'null', ')', ')', ';', '}']",97,35,6,517,116,21,80.84677419354838,68.13186813186813,,,,-1,-1,-1,-1,False
L497_packMissionItem_1.txt,code2seq,METHOD_NAME,token_wrong,0.4782,0.4923,3.4508,6.9378,"{'n_total': 343, 'n_valid': 72, 'n_correct': 36}",147.585785,@Override public List<msg_mission_item> packMissionItem() { List<msg_mission_item> list = super.packMissionItem(); msg_mission_item mavMsg = list.get(0); mavMsg.command = MAV_CMD.MAV_CMD_DO_GRIPPER; mavMsg.param2 = release ? GRIPPER_ACTIONS.GRIPPER_ACTION_RELEASE : GRIPPER_ACTIONS.GRIPPER_ACTION_GRAB; return list; },List<_>packMissionItem(){List=super.packMissionItem();msg mavMsg=list.get(0);GRIPPER;mavMsg=release?GRIPPER:list;},"['@', 'Override', 'public', 'List', '<', 'msg_mission_item', '>', 'packMissionItem', '(', ')', '{', 'List', '<', 'msg_mission_item', '>', 'list', '=', 'super', '.', 'packMissionItem', '(', ')', ';', 'msg_mission_item', 'mavMsg', '=', 'list', '.', 'get', '(', '0', ')', ';', 'mavMsg', '.', 'command', '=', 'MAV_CMD', '.', 'MAV_CMD_DO_GRIPPER', ';', 'mavMsg', '.', 'param2', '=', 'release', '?', 'GRIPPER_ACTIONS', '.', 'GRIPPER_ACTION_RELEASE', ':', 'GRIPPER_ACTIONS', '.', 'GRIPPER_ACTION_GRAB', ';', 'return', 'list', ';', '}']","['List', '<', '_', '>', 'packMissionItem', '(', ')', '{', 'List', '=', 'super', '.', 'packMissionItem', '(', ')', ';', 'msg', 'mavMsg', '=', 'list', '.', 'get', '(', '0', ')', ';', 'GRIPPER', ';', 'mavMsg', '=', 'release', '?', 'GRIPPER', ':', 'list', ';', '}']",59,37,6,317,114,21,68.58108108108108,41.509433962264154,,,,-1,-1,-1,-1,False
L498_apply_1.txt,code2seq,METHOD_NAME,token_wrong,0.6023,0.622,12.9476,12.2516,"{'n_total': 325, 'n_valid': 35, 'n_correct': 20}",76.313588,"@Override protected void apply(View view, final TypedArray typedArray) { view.setOnTouchListener(new OnTouchListener() { @Override public boolean onTouch(View v, MotionEvent event) { return onAction(typedArray.getString(R.styleable.OnTouchDecorator_decorOnTouch)); } }); }","@Override void apply(View view,TypedArray typedArray){setOnTouchListener(new OnTouchListener(){boolean onTouch(View event){((R));}});}","['@', 'Override', 'protected', 'void', 'apply', '(', 'View', 'view', ',', 'final', 'TypedArray', 'typedArray', ')', '{', 'view', '.', 'setOnTouchListener', '(', 'new', 'OnTouchListener', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'onTouch', '(', 'View', 'v', ',', 'MotionEvent', 'event', ')', '{', 'return', 'onAction', '(', 'typedArray', '.', 'getString', '(', 'R', '.', 'styleable', '.', 'OnTouchDecorator_decorOnTouch', ')', ')', ';', '}', '}', ')', ';', '}']","['@', 'Override', 'void', 'apply', '(', 'View', 'view', ',', 'TypedArray', 'typedArray', ')', '{', 'setOnTouchListener', '(', 'new', 'OnTouchListener', '(', ')', '{', 'boolean', 'onTouch', '(', 'View', 'event', ')', '{', '(', '(', 'R', ')', ')', ';', '}', '}', ')', ';', '}']",56,37,6,272,134,11,52.87356321839081,38.0,,,,-1,-1,-1,-1,False
L499_createMiddleware_1.txt,code2seq,METHOD_NAME,token_wrong,0.3614,0.6083,20.1991,5.6078,"{'n_total': 391, 'n_valid': 40, 'n_correct': 29}",84.352506,"private Middleware<State> createMiddleware(final String identifier) { return new Middleware<State>() { @Override public Object dispatch(Store<State> store, Dispatcher next, Object action) { callOrderResult.add(identifier); return next.dispatch(action); } }; }","Middleware<State>createMiddleware(String identifier){new Middleware<>(){dispatch(Store<State>store,Dispatcher next,Object action){add();}};}","['private', 'Middleware', '<', 'State', '>', 'createMiddleware', '(', 'final', 'String', 'identifier', ')', '{', 'return', 'new', 'Middleware', '<', 'State', '>', '(', ')', '{', '@', 'Override', 'public', 'Object', 'dispatch', '(', 'Store', '<', 'State', '>', 'store', ',', 'Dispatcher', 'next', ',', 'Object', 'action', ')', '{', 'callOrderResult', '.', 'add', '(', 'identifier', ')', ';', 'return', 'next', '.', 'dispatch', '(', 'action', ')', ';', '}', '}', ';', '}']","['Middleware', '<', 'State', '>', 'createMiddleware', '(', 'String', 'identifier', ')', '{', 'new', 'Middleware', '<', '>', '(', ')', '{', 'dispatch', '(', 'Store', '<', 'State', '>', 'store', ',', 'Dispatcher', 'next', ',', 'Object', 'action', ')', '{', 'add', '(', ')', ';', '}', '}', ';', '}']",59,40,6,259,140,22,50.210970464135016,35.84905660377358,,,,-1,-1,-1,-1,False
L500_checkConstruction_3.txt,code2seq,METHOD_NAME,token_wrong,0.8452,0.7416,11.2633,11.8814,"{'n_total': 307, 'n_valid': 42, 'n_correct': 28}",93.107104,"private void checkConstruction(Restriction restriction, DirectoryString res) throws IOException { checkValues(restriction, res); restriction = Restriction.getInstance(restriction); checkValues(restriction, res); ASN1InputStream aIn = new ASN1InputStream(restriction.toASN1Primitive().getEncoded()); ASN1String str = (ASN1String) aIn.readObject(); restriction = Restriction.getInstance(str); checkValues(restriction, res); }","void checkConstruction(Restriction restriction,DirectoryString res){checkValues(restriction,res);ASN str=(String);restriction=(str)checkValues();}","['private', 'void', 'checkConstruction', '(', 'Restriction', 'restriction', ',', 'DirectoryString', 'res', ')', 'throws', 'IOException', '{', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', 'restriction', '=', 'Restriction', '.', 'getInstance', '(', 'restriction', ')', ';', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', 'ASN1InputStream', 'aIn', '=', 'new', 'ASN1InputStream', '(', 'restriction', '.', 'toASN1Primitive', '(', ')', '.', 'getEncoded', '(', ')', ')', ';', 'ASN1String', 'str', '=', '(', 'ASN1String', ')', 'aIn', '.', 'readObject', '(', ')', ';', 'restriction', '=', 'Restriction', '.', 'getInstance', '(', 'str', ')', ';', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', '}']","['void', 'checkConstruction', '(', 'Restriction', 'restriction', ',', 'DirectoryString', 'res', ')', '{', 'checkValues', '(', 'restriction', ',', 'res', ')', ';', 'ASN', 'str', '=', '(', 'String', ')', ';', 'restriction', '=', '(', 'str', ')', 'checkValues', '(', ')', ';', '}']",82,34,6,423,146,23,69.25,63.1578947368421,,,,-1,-1,-1,-1,False
